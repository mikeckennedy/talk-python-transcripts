WEBVTT

00:00:00.001 --> 00:00:03.060
Are you working on or considering a machine learning project?

00:00:03.060 --> 00:00:06.340
On this episode, you'll meet three people from the MLOps community,

00:00:06.340 --> 00:00:10.240
Dmitryo Sprinkman, Kate Kuznikov, and Vishnu Ratchakanda.

00:00:10.240 --> 00:00:13.380
They're here to tell us about the lifecycle of a machine learning project.

00:00:13.380 --> 00:00:16.180
We'll talk about getting started with prototypes and choosing frameworks,

00:00:16.180 --> 00:00:20.120
the development process, finally deployment and moving into production.

00:00:20.120 --> 00:00:25.640
This is Talk Python To Me, episode 359, recorded March 22nd, 2022.

00:00:25.640 --> 00:00:42.460
Welcome to Talk Python To Me, a weekly podcast on Python.

00:00:42.460 --> 00:00:44.200
This is your host, Michael Kennedy.

00:00:44.200 --> 00:00:47.600
Follow me on Twitter where I'm @mkennedy and keep up with the show

00:00:47.600 --> 00:00:50.380
and listen to past episodes at talkpython.fm.

00:00:50.380 --> 00:00:53.420
And follow the show on Twitter via at Talk Python.

00:00:53.660 --> 00:00:57.060
We've started streaming most of our episodes live on YouTube.

00:00:57.060 --> 00:01:00.820
Subscribe to our YouTube channel over at talkpython.fm/youtube

00:01:00.820 --> 00:01:04.620
to get notified about upcoming shows and be part of that episode.

00:01:04.620 --> 00:01:10.080
This episode is brought to you by Sentry and their awesome error monitoring product,

00:01:10.080 --> 00:01:14.940
as well as the Stack Overflow podcast, bringing you stories about software development.

00:01:14.940 --> 00:01:19.480
Transcripts for this and all of our episodes are brought to you by Assembly AI.

00:01:19.480 --> 00:01:22.140
Do you need a great automatic speech-to-text API?

00:01:22.140 --> 00:01:24.680
Get human-level accuracy in just a few lines of code.

00:01:24.680 --> 00:01:27.460
Visit talkpython.fm/assembly AI.

00:01:27.460 --> 00:01:30.340
Kate, Vishnu, and Dimitros.

00:01:30.340 --> 00:01:31.060
What's up?

00:01:31.060 --> 00:01:32.360
Welcome to Talk Python To Me.

00:01:32.360 --> 00:01:32.640
Hey.

00:01:32.640 --> 00:01:33.920
How you doing, man?

00:01:33.920 --> 00:01:34.160
Great.

00:01:34.160 --> 00:01:34.940
Hey, I'm doing great.

00:01:34.940 --> 00:01:36.520
It's fantastic to have you all here.

00:01:36.520 --> 00:01:43.240
I'm psyched to talk about ML Ops and your community and some best practices and tooling

00:01:43.240 --> 00:01:44.700
and all that kind of stuff.

00:01:44.700 --> 00:01:46.000
And I think it's going to be a lot of fun.

00:01:46.000 --> 00:01:48.340
So hopefully you're looking forward to it as well.

00:01:48.520 --> 00:01:49.520
Yeah, for sure.

00:01:49.520 --> 00:01:50.280
Yeah, for sure.

00:01:50.280 --> 00:01:55.220
So think about one of the hottest areas of technology right now, whether it's trying to

00:01:55.220 --> 00:01:58.700
get a job or it's VC funding or whatever, right?

00:01:58.700 --> 00:02:03.360
The machine learning and AI is like one of the peak buzzwords right now.

00:02:03.360 --> 00:02:07.760
And so I think this is going to be a fun conversation both to talk about this hot topic, but also

00:02:07.760 --> 00:02:09.680
maybe to demystify it a little bit.

00:02:09.800 --> 00:02:11.240
Yeah, I hope we can do that.

00:02:11.240 --> 00:02:11.960
I think we can.

00:02:11.960 --> 00:02:12.940
I definitely think we can.

00:02:12.940 --> 00:02:18.440
And you all built this cool community, mlops.community, which we're going to talk about a lot.

00:02:18.440 --> 00:02:24.020
But before we get into that topic, let's just start with your background and how you got into

00:02:24.020 --> 00:02:25.640
machine learning and all this stuff.

00:02:25.640 --> 00:02:26.440
Kate, let's start with you.

00:02:26.440 --> 00:02:26.900
All right.

00:02:26.900 --> 00:02:32.260
So my background is probably not so conventional for the field, although nothing is conventional

00:02:32.260 --> 00:02:34.420
for ML, I guess, at this point.

00:02:34.420 --> 00:02:39.000
So originally, I actually started studying business and economics back in the day, and

00:02:39.000 --> 00:02:44.500
then I slowly shifted into basically digital analytics for marketing and stuff like that,

00:02:44.500 --> 00:02:49.160
at which point I realized that I'm more interested in the numbers than in influencing people.

00:02:49.160 --> 00:02:54.340
So I went through a bootcamp and then one thing led to another through consulting, internships

00:02:54.340 --> 00:02:55.120
and so forth.

00:02:55.120 --> 00:02:58.760
Once you get your foot in the door, I guess it's easier to establish yourself.

00:02:58.760 --> 00:03:03.200
And then I ended up continuing on that path, mostly data science.

00:03:03.200 --> 00:03:06.620
So not crazy robots or anything.

00:03:06.620 --> 00:03:08.440
It's still very close.

00:03:08.440 --> 00:03:09.480
No self-driving cars right now.

00:03:09.480 --> 00:03:10.680
No self-driving cars yet.

00:03:10.680 --> 00:03:17.940
So it's still mostly basically ML for commercial purposes, like working with sales data, with

00:03:17.940 --> 00:03:19.380
text data and so forth.

00:03:19.380 --> 00:03:20.080
But that was it.

00:03:20.080 --> 00:03:26.060
I think there's a lot of people that come from economics in that area and get into computation

00:03:26.060 --> 00:03:27.780
and then get into data science.

00:03:27.780 --> 00:03:29.700
It's a bit of a gateway, I think.

00:03:29.700 --> 00:03:29.980
Yeah.

00:03:29.980 --> 00:03:33.760
And I mean, economics is also kind of this easy choice of subject.

00:03:33.760 --> 00:03:37.920
When you're finishing school, you're kind of like, I can do math, so I'm not going to

00:03:37.920 --> 00:03:39.220
do just social science.

00:03:39.220 --> 00:03:40.780
So, OK, let's go for economics.

00:03:40.780 --> 00:03:43.080
And then you're like, what can I actually do with it?

00:03:43.080 --> 00:03:46.020
Do I want to work in a bank or maybe something else?

00:03:46.020 --> 00:03:46.400
Yeah.

00:03:46.400 --> 00:03:47.120
Yeah, exactly.

00:03:47.120 --> 00:03:49.640
I had a similar experience with my math degree, but.

00:03:49.640 --> 00:03:50.500
Exactly.

00:03:50.500 --> 00:03:51.000
Yeah.

00:03:51.000 --> 00:03:51.580
Fantastic.

00:03:51.580 --> 00:03:54.860
So you said you did a bootcamp, which I think is interesting.

00:03:54.860 --> 00:04:01.840
When I think bootcamps, I think JavaScript front end, not necessarily the best thing to

00:04:01.840 --> 00:04:04.520
just produce a whole world full of JavaScript front end folks.

00:04:04.520 --> 00:04:07.640
But that's sort of the main bootcamp story.

00:04:07.640 --> 00:04:09.420
It sounds like yours was in data science.

00:04:09.420 --> 00:04:10.380
Was that a good experience?

00:04:10.380 --> 00:04:11.280
What was that like?

00:04:11.280 --> 00:04:15.980
So we actually did have those paths as well with Java and front end.

00:04:15.980 --> 00:04:19.160
I just decided to go for the data science one.

00:04:19.620 --> 00:04:23.100
I think they even called it big data in AI or something like that, but technically it was

00:04:23.100 --> 00:04:28.140
just like pure nice Jupyter notebooks where you are massaging the data a little bit and

00:04:28.140 --> 00:04:29.900
then running your first couple of models.

00:04:29.900 --> 00:04:35.320
It was very nice in a sense that it was like all of us struggling together was very intense.

00:04:35.520 --> 00:04:41.340
So you kind of can test drive your idea of whether it's actually for you or not in a very short

00:04:41.340 --> 00:04:41.720
time.

00:04:41.720 --> 00:04:44.120
And ours lasted like, I think three or four weeks.

00:04:44.120 --> 00:04:49.840
And after that internship, the same company, sorry, bootcamp would get you into an internship.

00:04:49.840 --> 00:04:55.440
If you pass the whole bootcamp, you pass the last test, do the project and then do the interview,

00:04:55.440 --> 00:04:57.540
you can be a candidate there.

00:04:57.600 --> 00:05:00.300
And I think that was very appealing to me because it had some consequence.

00:05:00.300 --> 00:05:02.680
It wasn't just, oh, let's try this out.

00:05:02.680 --> 00:05:04.240
And then I don't know what I'm going to do.

00:05:04.240 --> 00:05:05.500
Who's going to hire me, whatever.

00:05:05.500 --> 00:05:07.660
It was very well thought out.

00:05:07.660 --> 00:05:12.440
So in that sense, I think it's a great program that they have put together.

00:05:12.440 --> 00:05:17.020
I think they're not doing it anymore, like specifically for data scientists, because they

00:05:17.020 --> 00:05:23.620
found out it's very hard, even in consulting, to employ very, very junior data scientists and

00:05:23.620 --> 00:05:24.860
get value out of them.

00:05:24.960 --> 00:05:31.140
So now they're training people in data engineering and then a little flavor of data science so

00:05:31.140 --> 00:05:35.660
that later you can develop the skill and maybe apply that knowledge down the road.

00:05:35.660 --> 00:05:36.000
Yeah.

00:05:36.000 --> 00:05:36.540
Interesting.

00:05:36.540 --> 00:05:40.680
I do think it probably is a little bit challenging to get in as a junior because there's not a

00:05:40.680 --> 00:05:43.080
huge team of data scientists a lot of times.

00:05:43.080 --> 00:05:43.980
So interesting.

00:05:43.980 --> 00:05:44.320
Yeah.

00:05:44.320 --> 00:05:45.100
How about you?

00:05:45.100 --> 00:05:45.420
Yeah.

00:05:45.420 --> 00:05:53.860
So I fell into this very, very happenstance in a happenstance kind of way, which was I was

00:05:53.860 --> 00:05:58.660
working on the sales side of a company that was selling tools to machine learning engineers.

00:05:58.660 --> 00:06:02.020
And so I was that guy that would spam people.

00:06:02.020 --> 00:06:05.600
And so if I spammed you, please forgive me back in the day.

00:06:06.040 --> 00:06:10.940
If I tried to reach out to you on LinkedIn and I tricked you into connecting with me, that

00:06:10.940 --> 00:06:12.520
was my past life.

00:06:12.520 --> 00:06:14.120
I have repented for my sins.

00:06:14.120 --> 00:06:19.120
And now I do the community stuff full on.

00:06:19.120 --> 00:06:25.180
But yeah, the company was doing ML tooling and we were really focused on provenance and

00:06:25.180 --> 00:06:31.680
trying to be able to reproduce your runs or your data, your models, everything that comes

00:06:31.680 --> 00:06:34.880
along with the modeling side of machine learning.

00:06:34.880 --> 00:06:41.060
And so what happened was though, when the pandemic hit, that company went out of business.

00:06:41.060 --> 00:06:47.140
And just about like three weeks before the company went out of business, nobody was picking

00:06:47.140 --> 00:06:47.660
up the phone.

00:06:47.740 --> 00:06:49.380
Nobody was connecting with me on LinkedIn.

00:06:49.380 --> 00:06:54.240
And so our CEO said, why don't we try and do something around a community?

00:06:54.240 --> 00:06:55.800
So people don't want us to come to them.

00:06:55.800 --> 00:06:57.880
Maybe we can make a place for them to come to, right?

00:06:57.880 --> 00:06:58.360
Exactly.

00:06:58.360 --> 00:07:00.780
Like, and so our CEO, I got to hand it to him.

00:07:00.780 --> 00:07:03.420
It's his name's Luke Marsden back in those days.

00:07:03.420 --> 00:07:07.020
And he was the CEO of this company called Dot Science, which is now defunct.

00:07:07.180 --> 00:07:09.780
He said, you know what?

00:07:09.780 --> 00:07:11.760
He has open source in his blood.

00:07:11.760 --> 00:07:15.040
Like he can't help but do the open source thing.

00:07:15.040 --> 00:07:20.200
Even though this company wasn't open source, he wanted the community to be very open source

00:07:20.200 --> 00:07:22.740
and vendor neutral and open to anyone.

00:07:22.740 --> 00:07:24.440
And in the beginning, I didn't understand that.

00:07:24.440 --> 00:07:27.020
I was like, wait a minute, you're going to let our competitors come in here.

00:07:27.020 --> 00:07:30.000
And not only that, you're going to let them give a talk?

00:07:30.000 --> 00:07:31.460
No way, man.

00:07:31.460 --> 00:07:32.080
This is crazy.

00:07:32.080 --> 00:07:34.020
And so he was all about it.

00:07:34.020 --> 00:07:37.880
And he helped me to understand like the value of community and what it's about.

00:07:37.880 --> 00:07:45.280
And then because of that, those first like weeks, I just was interviewing people as a podcast

00:07:45.280 --> 00:07:47.560
host because I needed to ramp up.

00:07:47.560 --> 00:07:49.000
And so I was interviewing people.

00:07:49.000 --> 00:07:53.820
Basically, I was learning on the air and I was talking to different machine learning engineers

00:07:53.820 --> 00:07:58.460
when we would have the meetups and we would run it like almost like a podcast slash meetup.

00:07:58.460 --> 00:08:03.540
And it would be a live podcast, kind of not too dissimilar to what we are doing right now.

00:08:03.640 --> 00:08:08.600
And then I was able to talk to enough people and then more people started joining the community.

00:08:08.600 --> 00:08:10.480
And then I started learning more about it.

00:08:10.480 --> 00:08:15.060
And now here we are two years later and I'm still running with the community.

00:08:15.060 --> 00:08:17.840
It became something that is like my pride and joy.

00:08:17.840 --> 00:08:22.440
And I can't see it's part of my identity now, which I don't know if that's a good or bad thing,

00:08:22.440 --> 00:08:23.880
but it's part of it.

00:08:23.880 --> 00:08:25.260
It sounds really fun.

00:08:25.260 --> 00:08:27.420
And these communities are super fun to build.

00:08:27.420 --> 00:08:29.620
And two years, that's a long time to be building.

00:08:29.620 --> 00:08:33.900
And so it's the kind of stuff that doesn't necessarily explode overnight.

00:08:33.900 --> 00:08:38.240
But if you sort of take a long view and then look back, you're like, wow, look what we built.

00:08:38.240 --> 00:08:39.140
That's pretty neat.

00:08:39.140 --> 00:08:39.840
Yeah, totally.

00:08:39.840 --> 00:08:43.820
I mean, and Vishnu was in it at the very beginning and Vishnu and I talked quite a bit.

00:08:43.820 --> 00:08:48.500
And it was like when there was, I remember in the first couple months,

00:08:48.500 --> 00:08:55.160
I was sitting there and thinking, wow, if we hit 600 people in Slack, that will be like

00:08:55.160 --> 00:08:56.900
uncomprehendable.

00:08:56.900 --> 00:09:03.300
And so, yeah, then it's kind of like you said, it's just grown from there.

00:09:03.300 --> 00:09:05.700
And you look back and you go, how did we get here?

00:09:05.700 --> 00:09:06.280
Wow.

00:09:06.280 --> 00:09:07.260
This is incredible.

00:09:07.260 --> 00:09:07.620
Yeah.

00:09:07.720 --> 00:09:12.760
I think one of the things that's easy to lose sight of for creators and community members

00:09:12.760 --> 00:09:16.440
or organizers and stuff, it's really easy to get tied up.

00:09:16.440 --> 00:09:20.560
And you look at like a famous YouTube person with a million views on their videos,

00:09:20.560 --> 00:09:23.240
or you look at some crazy TikTok thing or something.

00:09:23.240 --> 00:09:28.680
But 600 people, that's pretty close to a keynote for a lot of conference.

00:09:28.680 --> 00:09:33.180
That's like the premier group where you try to get them all together.

00:09:33.180 --> 00:09:35.160
Like that's pretty, pretty amazing.

00:09:35.160 --> 00:09:36.440
So that's so true.

00:09:36.440 --> 00:09:37.340
Which is awesome.

00:09:37.500 --> 00:09:37.660
Yeah.

00:09:37.660 --> 00:09:38.540
Which new?

00:09:38.540 --> 00:09:39.220
How about you?

00:09:39.220 --> 00:09:44.840
Well, how I got started in ML, I think if I really had to trace it back, it was maybe

00:09:44.840 --> 00:09:51.520
around 2017, you know, around that time, I was really kind of thinking about what I should

00:09:51.520 --> 00:09:52.400
try and do in my career.

00:09:52.400 --> 00:09:57.600
I was really passionate about, I am continuing to be very passionate about healthcare and biotech

00:09:57.600 --> 00:09:59.180
and sort of life sciences field.

00:09:59.180 --> 00:10:02.980
And I was reading a lot and kind of thinking, what do I want to do with my career?

00:10:02.980 --> 00:10:05.480
It was maybe, you know, kind of similar to Dimitri.

00:10:05.480 --> 00:10:07.480
I was actually contemplating some of the very more,

00:10:07.480 --> 00:10:11.340
sales or business development or product management side of thing in the industry.

00:10:11.340 --> 00:10:13.840
But I was like, you know, it doesn't feel tangible enough.

00:10:13.840 --> 00:10:17.640
It doesn't feel like I'm actually helping make people healthier in a very hands-on way.

00:10:18.200 --> 00:10:23.240
And so I started to read more papers as part of a master's program on the impact of machine

00:10:23.240 --> 00:10:27.640
learning in, you know, health, healthcare and biotechnology and decided, okay, this is what

00:10:27.640 --> 00:10:28.480
I want to do.

00:10:28.480 --> 00:10:32.820
And kind of just spent some time teaching myself how these things work, took some courses,

00:10:32.820 --> 00:10:35.560
became a machine learning engineer at a medical device company.

00:10:35.560 --> 00:10:39.720
And quickly after starting that realized, well, there's a lot more to doing model.

00:10:39.720 --> 00:10:42.660
That, you know, a lot more to machine learning than just doing model.fit.

00:10:42.660 --> 00:10:47.640
And that's when I joined the MLOps community back when it was about 300 people in May of 2020,

00:10:47.640 --> 00:10:49.220
you know, have been in it since.

00:10:49.220 --> 00:10:51.360
Dimitri and I are pretty, pretty tied to that.

00:10:51.420 --> 00:10:54.820
And that's kind of tracked my growth as a machine learning engineer and understanding,

00:10:54.820 --> 00:11:00.400
you know, okay, how do we go from model to model and production to system to, you know,

00:11:00.400 --> 00:11:01.120
business value.

00:11:01.120 --> 00:11:04.980
And that's kind of been my journey in terms of this industry to date.

00:11:04.980 --> 00:11:05.220
Yeah.

00:11:05.220 --> 00:11:05.960
Super neat.

00:11:05.960 --> 00:11:12.280
I think around 2017 was certainly when the promise of machine learning for healthcare really

00:11:12.280 --> 00:11:14.320
started to gain public awareness.

00:11:14.320 --> 00:11:19.440
You know, you had like, I don't remember exactly the timing, but like that XPRIZE around mammography

00:11:19.440 --> 00:11:21.320
images and stuff like that.

00:11:21.320 --> 00:11:23.740
We're like, oh, this is starting to beat doctors, right?

00:11:23.740 --> 00:11:25.220
And it's automatic.

00:11:25.220 --> 00:11:31.320
Like, could it be both fast and sort of, you know, beating radiologists estimates of whether

00:11:31.320 --> 00:11:33.100
or not someone has cancer and things like that.

00:11:33.100 --> 00:11:34.400
And that's pretty neat.

00:11:34.400 --> 00:11:39.020
I haven't been tracking it that closely, those sorts of developments, but I'm sure it's just

00:11:39.020 --> 00:11:39.600
grown from there.

00:11:39.600 --> 00:11:39.880
Yeah.

00:11:39.880 --> 00:11:44.620
I mean, I think around that time you had, it's a good memory with XPRIZE that was on, on sort

00:11:44.620 --> 00:11:45.300
of available.

00:11:45.660 --> 00:11:50.900
There was also a chest X-ray work that was open source from the NIH, big data sets around,

00:11:50.900 --> 00:11:54.240
you know, what's the, what is the promise of machine learning modeling for that problem,

00:11:54.240 --> 00:11:55.180
diagnosing pneumonia.

00:11:55.180 --> 00:12:00.820
And then also AlphaFold came out around that time from DeepPine for biotech, protein engineering.

00:12:00.820 --> 00:12:05.420
And so on all sorts of different vectors, you had a lot of energy and I guess I was, you

00:12:05.420 --> 00:12:05.960
know, sucked in.

00:12:05.960 --> 00:12:06.200
Yeah.

00:12:06.200 --> 00:12:06.540
That's cool.

00:12:06.540 --> 00:12:11.700
I suspect that the protein folding understanding is even more important really than you have this

00:12:11.700 --> 00:12:12.000
problem.

00:12:12.000 --> 00:12:14.620
But like here we can understand how to fix it maybe for sure.

00:12:14.620 --> 00:12:14.940
Yeah.

00:12:14.940 --> 00:12:15.440
Yeah.

00:12:15.440 --> 00:12:20.120
I think the protein folding stuff, it's especially with the open sourcing of AlphaFold 2 recently,

00:12:20.120 --> 00:12:21.400
the buzz is pretty incredible.

00:12:21.400 --> 00:12:21.900
Yeah, absolutely.

00:12:21.900 --> 00:12:27.820
Well, let's start off by talking a bit about the MLOps community some more, and then we can

00:12:27.820 --> 00:12:34.860
dive into a couple of layers of best practices and machine learning in production and stuff like

00:12:34.860 --> 00:12:35.100
that.

00:12:35.100 --> 00:12:39.800
So maybe Demetrius, we talked a bit about it, but you want to introduce what it's all about

00:12:39.800 --> 00:12:40.840
for folks?

00:12:40.840 --> 00:12:41.320
Yeah.

00:12:41.320 --> 00:12:48.620
And so we're really trying to just be like, this landing page is funny because it's something

00:12:48.620 --> 00:12:51.520
that we put together, whatever, years ago.

00:12:51.520 --> 00:12:54.660
And now we definitely need an upgrade.

00:12:54.660 --> 00:13:00.100
And so we're doing that right now because I realized after I surveyed the whole community,

00:13:00.100 --> 00:13:03.720
a lot of people are like, wow, we're in this community, we're in the Slack.

00:13:03.860 --> 00:13:08.820
But we didn't realize that there is newsletters you got going on.

00:13:08.820 --> 00:13:10.920
You've got roundtable discussions happening.

00:13:10.920 --> 00:13:11.960
There's reading groups.

00:13:11.960 --> 00:13:16.220
There's all kinds of different initiatives that people from the community are doing.

00:13:16.680 --> 00:13:23.320
And we don't actually make that very clear for people when they join, right?

00:13:23.320 --> 00:13:27.820
So maybe they know about the Slack or maybe they know about the meetups or the podcasts that

00:13:27.820 --> 00:13:29.340
we have, but that's it.

00:13:29.500 --> 00:13:34.640
And they don't necessarily get to go through all of that and have a better overview.

00:13:34.640 --> 00:13:35.940
So that's what we're doing now.

00:13:35.940 --> 00:13:42.340
And really like the community for us, it's trying to find this place or trying to define

00:13:42.340 --> 00:13:44.960
and create this space where people can come together.

00:13:45.180 --> 00:13:51.920
They can learn, they can engage with practitioners who are on the front lines and get their questions

00:13:51.920 --> 00:13:55.640
answered, but also like meet others and network with people.

00:13:55.640 --> 00:13:57.940
And we're doing that in this virtual space.

00:13:57.940 --> 00:14:04.940
We're trying to really share, collaborate, learn, and trying to make it fun also.

00:14:04.940 --> 00:14:09.340
So it's not just like numbers, crunching numbers and stale and boring.

00:14:09.340 --> 00:14:14.940
This portion of Talk Python To Me is brought to you by Sentry.

00:14:14.940 --> 00:14:17.820
How would you like to remove a little stress from your life?

00:14:17.820 --> 00:14:23.080
Do you worry that users may be encountering errors, slowdowns, or crashes with your app

00:14:23.080 --> 00:14:23.800
right now?

00:14:23.800 --> 00:14:26.840
Would you even know it until they sent you that support email?

00:14:26.840 --> 00:14:31.420
How much better would it be to have the error or performance details immediately sent to

00:14:31.420 --> 00:14:36.420
you, including the call stack and values of local variables and the active user recorded

00:14:36.420 --> 00:14:37.260
in the report?

00:14:37.260 --> 00:14:40.680
With Sentry, this is not only possible, it's simple.

00:14:40.680 --> 00:14:44.240
In fact, we use Sentry on all the Talk Python web properties.

00:14:44.680 --> 00:14:49.460
We've actually fixed a bug triggered by a user and had the upgrade ready to roll out

00:14:49.460 --> 00:14:50.800
as we got the support email.

00:14:50.800 --> 00:14:52.780
That was a great email to write back.

00:14:52.780 --> 00:14:56.160
Hey, we already saw your error and have already rolled out the fix.

00:14:56.160 --> 00:14:57.580
Imagine their surprise.

00:14:57.580 --> 00:14:59.800
Surprise and delight your users.

00:14:59.800 --> 00:15:03.860
Create your Sentry account at talkpython.fm/sentry.

00:15:04.060 --> 00:15:10.040
And if you sign up with the code talkpython, all one word, it's good for two free months of Sentry's

00:15:10.040 --> 00:15:15.200
business plan, which will give you up to 20 times as many monthly events as well as other

00:15:15.200 --> 00:15:15.540
features.

00:15:15.540 --> 00:15:19.940
Create better software, delight your users and support the podcast.

00:15:19.940 --> 00:15:24.900
Visit talkpython.fm/sentry and use the coupon code talkpython.

00:15:26.540 --> 00:15:27.620
I'll throw an idea out there.

00:15:27.620 --> 00:15:29.000
You'll tell me what you think.

00:15:29.000 --> 00:15:30.580
I already sort of hinted at this.

00:15:30.580 --> 00:15:34.600
You know, for software developers, a lot of times they're on teams where there's, you know,

00:15:34.600 --> 00:15:36.540
group five or 10 of them working together.

00:15:36.540 --> 00:15:42.140
But I feel like that's less true for machine learning folks and more of a specialized role.

00:15:42.140 --> 00:15:42.880
Not always.

00:15:43.000 --> 00:15:47.480
I know there's teams and stuff, but a lot of companies have a data scientist or one or

00:15:47.480 --> 00:15:48.280
two data scientists.

00:15:48.280 --> 00:15:53.600
And it seems to me like communities like this would be more about even more valuable than

00:15:53.600 --> 00:16:00.160
say like a software development one where it's maybe easier to find in your environment as

00:16:00.160 --> 00:16:03.380
a meet at a meetup or at a company that you already work at or something like that.

00:16:03.380 --> 00:16:03.840
Totally.

00:16:03.840 --> 00:16:04.600
Totally.

00:16:04.600 --> 00:16:08.940
I resonate with your description there, Michael, because that was me when I found the community.

00:16:08.940 --> 00:16:09.340
Right.

00:16:09.740 --> 00:16:14.900
You know, I was a machine learning engineer who was putting together some models that I

00:16:14.900 --> 00:16:18.140
thought could be used better by the company that I was at, you know, could be integrated

00:16:18.140 --> 00:16:21.900
into our hardware device a little bit better than I thought that, you know, than was currently

00:16:21.900 --> 00:16:22.480
being done.

00:16:22.480 --> 00:16:27.200
And I was trying to talk to our software engineers and realize like, hey, there's kind of a, just

00:16:27.200 --> 00:16:28.640
like a translation gap.

00:16:28.640 --> 00:16:34.280
Like, what is this field of like taking a model that exists and has some value in terms of

00:16:34.280 --> 00:16:36.420
like accuracy and precision or whatever else.

00:16:36.420 --> 00:16:40.240
And I turned that into, you know, an artifact that's consumed by software teams and then

00:16:40.240 --> 00:16:41.280
ultimately by business teams.

00:16:41.280 --> 00:16:46.400
And I read about ML Ops in 2020, but was really not clear what exactly that meant.

00:16:46.400 --> 00:16:49.400
It felt more like a buzzword than it did like a field at that time.

00:16:49.400 --> 00:16:54.340
And I joined the community and it essentially became real-time stack overflow for me, right?

00:16:54.340 --> 00:17:00.940
Where people are asking and answering questions daily about how do you actually implement production

00:17:00.940 --> 00:17:01.240
ML?

00:17:01.240 --> 00:17:02.200
What does it look like?

00:17:02.200 --> 00:17:03.200
What are the best practices?

00:17:03.400 --> 00:17:08.140
And how can we help each other do that at work and be better ML practitioners day to

00:17:08.140 --> 00:17:08.320
day?

00:17:08.320 --> 00:17:09.880
So it's been great from that standpoint.

00:17:09.880 --> 00:17:10.200
Yeah.

00:17:10.200 --> 00:17:10.660
Fantastic.

00:17:10.660 --> 00:17:11.820
Kate, how about you?

00:17:11.820 --> 00:17:13.320
How did you come to the community?

00:17:13.320 --> 00:17:17.420
I'm not actually sure exactly, but I think it was also like the whole pandemic.

00:17:17.420 --> 00:17:20.760
You tried to connect to the world and including ML Ops.

00:17:20.760 --> 00:17:24.760
And at the time, a friend of mine was also starting a community in Riga.

00:17:24.760 --> 00:17:25.540
It wasn't ML Ops.

00:17:25.540 --> 00:17:27.240
It was data science in my hometown.

00:17:27.820 --> 00:17:29.780
Because, again, we couldn't meet in person.

00:17:29.780 --> 00:17:31.180
So we did that.

00:17:31.180 --> 00:17:34.380
And along the same time, we discovered that there are other Slack communities.

00:17:34.380 --> 00:17:36.340
And it was just fun to...

00:17:36.340 --> 00:17:38.320
We had a different focus.

00:17:38.320 --> 00:17:41.440
So it was just fun to be kind of part of both and in different directions.

00:17:41.440 --> 00:17:45.060
And I do agree with the stack overflow notion.

00:17:45.060 --> 00:17:49.320
Like sometimes, especially if you're working alone on a problem, you just go there to feel

00:17:49.320 --> 00:17:50.960
like you're not crazy, first of all.

00:17:50.960 --> 00:17:53.020
To think that's what you're thinking.

00:17:53.020 --> 00:17:55.680
And secondly, just basically, I can search right now.

00:17:55.680 --> 00:18:00.180
There's like such a huge knowledge base because so many questions have been asked.

00:18:00.180 --> 00:18:05.800
So I can go there to quickly validate some ideas, see which angles have been taken into consideration.

00:18:05.800 --> 00:18:07.340
So in that sense, it was fun.

00:18:07.340 --> 00:18:08.980
And definitely the networking aspect.

00:18:08.980 --> 00:18:11.500
Luckily, Berlin is full of ML people.

00:18:11.500 --> 00:18:15.700
And that's definitely one of the places you can reach out for questions.

00:18:15.700 --> 00:18:20.100
I had some people reach out to me, ask about like, what are the companies to apply to?

00:18:20.100 --> 00:18:21.220
Are there any jobs?

00:18:21.220 --> 00:18:22.140
Do you want to refer me?

00:18:22.140 --> 00:18:23.160
And vice versa.

00:18:23.160 --> 00:18:24.660
So it's definitely fun.

00:18:24.660 --> 00:18:25.260
Yeah, nice.

00:18:25.260 --> 00:18:27.460
I don't know why this is, but you're right.

00:18:27.460 --> 00:18:32.740
It does seem like Berlin and sort of generally Germany as well.

00:18:32.740 --> 00:18:36.600
It's just a lot of times I'm talking to people about data science or machine learning.

00:18:36.600 --> 00:18:38.020
I'm like, wait, you're both in Berlin?

00:18:38.020 --> 00:18:44.260
It's like of all the places in the world, it does seem like a hotbed of machine learning.

00:18:44.260 --> 00:18:44.820
That's pretty cool.

00:18:44.820 --> 00:18:49.420
And now there's a lot of companies that just source their talent here and work in completely

00:18:49.420 --> 00:18:53.620
different markets because they know that there are people here that people will be willing

00:18:53.620 --> 00:18:55.060
to relocate here as well.

00:18:55.060 --> 00:18:58.280
So that's definitely adding to the whole dynamic.

00:18:58.280 --> 00:18:58.940
Yeah, absolutely.

00:18:58.940 --> 00:18:59.860
It's a cool place to live.

00:18:59.860 --> 00:19:05.520
And I think probably a lot of folks in Germany, I know the education system there, they end up

00:19:05.520 --> 00:19:08.800
very good and strong backgrounds in math and stuff.

00:19:08.800 --> 00:19:09.380
So, right.

00:19:09.380 --> 00:19:14.800
Compared to other places in the world, like the US, certainly coming out of high school,

00:19:14.800 --> 00:19:17.000
there, you come out with a very strong math degree.

00:19:17.000 --> 00:19:17.580
I know that much.

00:19:17.580 --> 00:19:18.500
So pretty cool.

00:19:18.500 --> 00:19:18.960
All right.

00:19:18.960 --> 00:19:25.940
Well, let's start by talking about, I wanted to cover sort of the URL thoughts on some different

00:19:25.940 --> 00:19:28.680
layers or stages of a machine learning project.

00:19:28.680 --> 00:19:31.020
So we could structure our conversation around that.

00:19:31.020 --> 00:19:35.620
So I want to talk about prototyping, come up with ideas, choosing frameworks, things like

00:19:35.620 --> 00:19:35.920
that.

00:19:35.920 --> 00:19:40.680
And then talk about building the project with development and then running and maintaining

00:19:40.680 --> 00:19:45.100
it over time, the whole ops sort of machine learning and production side of things.

00:19:45.100 --> 00:19:47.200
So let's start with prototyping.

00:19:47.460 --> 00:19:52.920
So I guess the first question I wanted to ask, and this might be, I don't know, y'all can laugh

00:19:52.920 --> 00:19:56.720
at me or whatever, but deciding is a problem actually a machine learning problem?

00:19:56.720 --> 00:20:02.440
Because there is so much hype around AI and machine learning that sometimes I think a series

00:20:02.440 --> 00:20:05.700
of if statements is called artificial intelligence.

00:20:05.840 --> 00:20:10.660
I remember there was this scandal, I think it was in the UK, there was some airline company

00:20:10.660 --> 00:20:16.340
that was specifically finding families traveling together and booking them apart from each other

00:20:16.340 --> 00:20:21.220
and then charging them money to book themselves back like a premium to so they could sit with

00:20:21.220 --> 00:20:21.860
their family.

00:20:21.860 --> 00:20:24.540
Like, sorry, your seat didn't get put next to your family.

00:20:24.540 --> 00:20:25.020
Whoopsie.

00:20:25.020 --> 00:20:29.000
But you can pay 50 bucks or 50 quid or whatever and get back by your family, right?

00:20:29.000 --> 00:20:34.280
And it was in the lawmakers, they were like, they're using artificial intelligence to do this

00:20:34.280 --> 00:20:34.580
terrible.

00:20:34.700 --> 00:20:36.320
Like, that sounds like an if statement.

00:20:36.320 --> 00:20:43.360
So, you know, like I think deciding, should I just encode some decision-making into software,

00:20:43.360 --> 00:20:48.900
which we often call programming versus is it a real machine learning problem where neural

00:20:48.900 --> 00:20:54.260
networks or NLP, like how do you all think about this is a machine learning problem versus

00:20:54.260 --> 00:20:56.820
this is just a software problem, traditional style?

00:20:56.820 --> 00:21:03.260
I'll just say one thing just before I let Vishnu and Kate jump in and it comes from one of the

00:21:03.260 --> 00:21:04.880
community members.

00:21:04.880 --> 00:21:12.880
Who has like a famous tweet and blog posts about like the first rule of machine learning is don't use

00:21:12.880 --> 00:21:13.560
machine learning.

00:21:14.100 --> 00:21:20.920
And so, if you can avoid it at all costs, it's probably better just because you're adding additional

00:21:20.920 --> 00:21:21.520
complexity.

00:21:21.520 --> 00:21:28.360
And if you don't need to do that, then it's going to be infinitely easier on you to not.

00:21:28.360 --> 00:21:32.480
That being said, there are a lot of times where you do need to add it.

00:21:32.480 --> 00:21:36.300
And there are a lot of businesses that are realizing business value from it.

00:21:36.480 --> 00:21:41.340
So, that's like kind of a hand wavy answer, but I'll see if Vishnu or Kate have anything

00:21:41.340 --> 00:21:42.800
more concrete.

00:21:42.800 --> 00:21:43.760
Yeah, absolutely.

00:21:43.760 --> 00:21:45.660
Also, I just want to give a quick shout out.

00:21:45.660 --> 00:21:50.620
I did have Eugene on the podcast in March of last year.

00:21:50.620 --> 00:21:54.860
We talked about the seven lessons that machine learning can teach us about life or something

00:21:54.860 --> 00:21:56.480
like that, which is pretty, he's a very thoughtful guy.

00:21:56.480 --> 00:21:57.520
Yeah, he's great.

00:21:57.520 --> 00:21:58.600
He is awesome.

00:21:58.600 --> 00:21:59.220
Yeah.

00:21:59.360 --> 00:22:03.640
Your question is about whether or not to use machine learning versus maybe more traditional

00:22:03.640 --> 00:22:04.360
approaches.

00:22:04.360 --> 00:22:05.140
Is that correct?

00:22:05.140 --> 00:22:05.540
Right, right.

00:22:05.540 --> 00:22:10.020
Someone comes to you with a problem and says, we need to make our API do this or our website

00:22:10.020 --> 00:22:11.680
do this or our app do that.

00:22:11.680 --> 00:22:15.660
And how do you decide, like, this is a machine learning problem versus just, you know, you

00:22:15.660 --> 00:22:18.980
just need to decide if statement or switch statement or whatever.

00:22:18.980 --> 00:22:21.060
I deal with this problem a lot in my role right now.

00:22:21.060 --> 00:22:25.000
I'm a data scientist at a healthcare services company, actually the first day to hire.

00:22:25.560 --> 00:22:30.980
And a lot of times I have people come to me that says, hey, this is a clinical population.

00:22:30.980 --> 00:22:32.660
This is a group of people that we want to serve.

00:22:32.660 --> 00:22:37.420
You know, how do you think about delivering our intervention to them?

00:22:37.420 --> 00:22:40.840
I'm speaking in generalities, but I can talk a little bit more specifically to some examples

00:22:40.840 --> 00:22:42.080
of this later on.

00:22:42.080 --> 00:22:49.340
And to me, what matters most is driving value on a single business metric, because to be honest,

00:22:49.340 --> 00:22:53.940
that's the simplest way that your company does better and you do better, right?

00:22:53.980 --> 00:22:57.740
It's not through, let's say, implementing the most fancy algorithm.

00:22:57.740 --> 00:23:02.060
You know, we're not working in research environments anymore when it comes to machine learning as

00:23:02.060 --> 00:23:03.480
often as we used to, right?

00:23:03.480 --> 00:23:05.480
If you're in a research role, be my guest.

00:23:05.480 --> 00:23:10.140
Use the most advanced algorithm or whatever the coolest, latest model might be.

00:23:10.140 --> 00:23:15.260
But for me, the number one thing is what is the business model metric I'm trying to drive?

00:23:15.260 --> 00:23:17.520
Is that engagement for our population?

00:23:17.520 --> 00:23:22.080
Is that some sort of like quality metric in the healthcare sense that I'm trying to change?

00:23:22.080 --> 00:23:27.020
And then what is the simplest possible way that I can advance that number, right?

00:23:27.020 --> 00:23:29.320
Is it just like a standard SQL query I run?

00:23:29.320 --> 00:23:33.920
Is it, you know, some kind of template in SQL query or is it a machine learning model?

00:23:33.920 --> 00:23:39.000
And the idea is simple is reliable and scalable, much more so than something complicated.

00:23:39.220 --> 00:23:44.480
And that's kind of the way that I triage whether or not machine learning is the right intervention

00:23:44.480 --> 00:23:45.220
for a problem.

00:23:45.220 --> 00:23:49.100
And so to kind of recap, it's like, what's the business model metric I'm trying to push?

00:23:49.100 --> 00:23:53.020
And then what's the simplest possible thing, knowing that it's something that needs to be

00:23:53.020 --> 00:23:54.620
reliable and maintainable for the long term.

00:23:54.620 --> 00:23:54.900
Yeah.

00:23:54.900 --> 00:23:55.280
Excellent.

00:23:55.280 --> 00:23:55.780
Kate?

00:23:55.840 --> 00:23:56.780
I agree with Vishnu.

00:23:56.780 --> 00:24:07.100
Well, my advantage as a newcomer to this career path, I guess, was that I was just unable to go very fancy in many of the cases.

00:24:07.100 --> 00:24:13.580
So it was a no brainer to go, what is the simplest way and what is actually the way I can solve the problem?

00:24:14.120 --> 00:24:19.560
And then just by having adopted that mentality early on, you kind of, you basically hack the problem, right?

00:24:19.560 --> 00:24:27.480
And then also coming from more business marketing background, again, I'm not thinking about what is the fancy, shiny new tool that I want to use.

00:24:27.480 --> 00:24:33.600
Sometimes I do now because I'm bored, but this is more for the cases where nobody cares what I'm really doing.

00:24:33.600 --> 00:24:35.500
And then I show them something sparkly.

00:24:36.280 --> 00:24:46.020
From my side, I would say it's very important to communicate the solution rather than thinking about whether it's an ML problem or not at the end of the day.

00:24:46.020 --> 00:24:54.280
So if you give the people what they want and with the shine and sparkle that they want, they will forget whether there's AI behind it or not.

00:24:54.280 --> 00:25:03.440
Having said that, though, in consulting experience, sometimes people really come to you and they're like, I want this predictive model and just like leave it or take it.

00:25:03.440 --> 00:25:11.400
And you do it for them, even though it's not the most, the best approach, or especially if you try to explain, maybe that is not the best approach.

00:25:11.400 --> 00:25:21.500
But sometimes people just need to, I don't know, maybe they have a KPI of having developed one and introduced one ML project into their teams.

00:25:21.500 --> 00:25:23.840
And this is it, like whatever way.

00:25:23.840 --> 00:25:28.060
So there are some cases, but I think most people can be reasoned with.

00:25:28.060 --> 00:25:30.260
Yeah, the stockholders demand more AI.

00:25:30.260 --> 00:25:31.300
So we need more AI.

00:25:31.300 --> 00:25:33.140
I don't know what that means, but we definitely need it.

00:25:33.240 --> 00:25:34.380
Yeah, that's great.

00:25:34.380 --> 00:25:39.000
And I do resonate with the idea of just start simple and evolve.

00:25:39.000 --> 00:25:48.980
Like so many people perceive software and software projects in the broader sense as I have to think about it for a long time and get it right.

00:25:48.980 --> 00:25:51.720
Rather than let me try to build something over a day.

00:25:51.720 --> 00:25:54.080
And if that doesn't work, I'll try something else.

00:25:54.080 --> 00:25:56.060
Or we can evolve it over time.

00:25:56.060 --> 00:26:01.580
Maybe that comes from back when software was harder to change and the tools were chromium or whatever.

00:26:01.820 --> 00:26:04.980
Yeah, I think just jump in, try something and go with that.

00:26:04.980 --> 00:26:09.380
Yeah, I wanted to say something real fast on machine learning, especially.

00:26:09.380 --> 00:26:14.520
And this is something that I think a lot of people don't realize until later on.

00:26:15.020 --> 00:26:23.880
And I see it time and time again from the veterans in the community coming and answering questions that are being proposed.

00:26:23.880 --> 00:26:31.340
And that is like really taking it back when you're proposing a solution or when you're asking a question in the community.

00:26:31.520 --> 00:26:33.980
It's like, but what is it exactly?

00:26:33.980 --> 00:26:37.320
What is the business value here that you're trying to affect?

00:26:37.320 --> 00:26:43.540
Because machine learning is so closely tied to business that you can't really...

00:26:43.540 --> 00:26:48.560
It's like that Venn diagram is so overlapping on the business side.

00:26:48.560 --> 00:26:50.980
And it also has the technology side.

00:26:50.980 --> 00:26:54.700
But a lot of times we just take for granted that it's technology.

00:26:54.700 --> 00:26:56.700
But you can't do that, right?

00:26:56.700 --> 00:26:58.520
Like especially with machine learning.

00:26:58.660 --> 00:27:05.000
Like if you're an SRE and you're just focusing on the SLOs and all of that, it's a lot easier to be like, okay, cool.

00:27:05.000 --> 00:27:07.280
This is a very technology problem.

00:27:07.280 --> 00:27:14.220
But when you're machine learning and like Vishnu said, like you really got to know what kind of metrics are you trying to move the needle on?

00:27:14.220 --> 00:27:16.600
And how are you going to go about that?

00:27:16.600 --> 00:27:24.680
So that was just something that I noticed comes up quite a bit from the veterans saying like, wait a minute, slow down.

00:27:24.680 --> 00:27:28.240
Before you go for that next one, what is it that you're trying to do here?

00:27:28.240 --> 00:27:28.480
Yeah.

00:27:28.480 --> 00:27:33.140
Probably someone comes in with a question like, I'm trying to make PyTorch do this thing.

00:27:33.140 --> 00:27:34.420
And I'm having a hard time.

00:27:34.420 --> 00:27:35.000
Like, whoa, whoa, whoa.

00:27:35.000 --> 00:27:36.640
But do you really need to do it?

00:27:36.640 --> 00:27:37.900
Like, is that really?

00:27:37.900 --> 00:27:40.080
Maybe it's cool or whatever.

00:27:40.080 --> 00:27:42.500
But is that really what you need in this situation?

00:27:42.500 --> 00:27:43.980
Could you just use Pandas?

00:27:43.980 --> 00:27:45.000
That's exactly what it is.

00:27:45.000 --> 00:27:54.720
And oftentimes it's something even more complicated than that, where it's like, I'm trying to have, you know, I'm trying to use Kubernetes to do this retraining job 100,000 times.

00:27:54.720 --> 00:28:00.040
So I can see which of these models is most effective at this particular metric.

00:28:00.040 --> 00:28:01.420
You're like, whoa, whoa.

00:28:01.420 --> 00:28:05.520
You're about to undertake a huge engineering project with all kinds of complicated tools.

00:28:05.520 --> 00:28:06.020
Why?

00:28:06.020 --> 00:28:06.920
Yeah.

00:28:07.160 --> 00:28:12.100
But if you ask why you send people into existential crisis, so that is the interest as well.

00:28:12.100 --> 00:28:23.680
I guess the audience, Cam asks or says rather, a lot of times I've researchers propose algorithms that are too computationally complex to run at the speed we need for production.

00:28:23.680 --> 00:28:33.720
And I think that's probably also an interesting thing to consider when you're doing the sort of prototyping, getting things started is maybe here's a algorithm.

00:28:33.720 --> 00:28:34.660
I'll give you a great answer.

00:28:34.660 --> 00:28:38.860
But, you know, Vishnu, you talked about training 100,000 ways, right?

00:28:38.920 --> 00:28:47.700
Like, can you really spend $25,000 to decide, you know, on compute in the cloud or something to decide if this is even going to work, right?

00:28:47.700 --> 00:28:50.640
Or could you do that in production and over the data you have or something, right?

00:28:50.640 --> 00:28:51.700
What are your thoughts on this?

00:28:51.700 --> 00:28:59.780
A lot of times, and I'd say like a lot of times machine learning, our default in terms of technical requirements is pretty unilateral, you could say, right?

00:28:59.780 --> 00:29:03.500
It's like increased accuracy or the precision or whatever the score is.

00:29:03.640 --> 00:29:09.820
But in software engineering and in other forms of engineering, they're much better at understanding multivariate requirements, right?

00:29:09.820 --> 00:29:12.120
And I think that's where you see the tension, right?

00:29:12.120 --> 00:29:15.060
The data scientist says, but this model works at the problem.

00:29:15.060 --> 00:29:16.340
It does the thing it's supposed to.

00:29:16.340 --> 00:29:17.660
It's better on this one thing.

00:29:17.660 --> 00:29:20.700
And the engineer says, well, wait, no, there are a million things that I think about.

00:29:20.700 --> 00:29:21.580
I need to think about latency.

00:29:21.580 --> 00:29:22.700
I need to think about my capability.

00:29:22.700 --> 00:29:25.460
I need to think about, you know, how big the file might be.

00:29:25.460 --> 00:29:27.140
There might be a million different things.

00:29:27.140 --> 00:29:30.140
And I think that's where you see the kind of thing that Cam's talking about.

00:29:30.360 --> 00:29:30.880
Yeah, interesting.

00:29:30.880 --> 00:29:49.460
And I think it comes from academia, actually, because they just recently, I remember a year ago, we're doing a meta science course where it discusses ML, basically model assessment, and how the same researchers could not reproduce their results because they just realized they use different compute.

00:29:49.580 --> 00:29:52.700
So they will be having different results.

00:29:52.700 --> 00:30:02.000
And in each of those cases, they realize they need to bring that information in, in the academic paper to have comparable scenarios.

00:30:02.000 --> 00:30:05.900
So maybe you have a little compute, a little compute, and then this is the best model.

00:30:05.900 --> 00:30:08.560
And in the other scenario, the other one is better model.

00:30:08.560 --> 00:30:15.400
And I think now that there's changes in academia, it will kind of become more standard to consider elsewhere as well.

00:30:15.660 --> 00:30:16.640
Yeah, it's a good point.

00:30:16.640 --> 00:30:27.500
How many times have we heard of stories, and I'm sure people listening have lived these stories of a data scientist coming with a model, and it's like, or they go, they get tasked with a problem.

00:30:27.500 --> 00:30:34.340
They go work on a model for a while, and they come back with the accuracy or F score is like, perfect.

00:30:35.000 --> 00:30:41.700
And then they give it to whoever the stakeholder is, another stakeholder, and that stakeholder is like, but this is useless to me.

00:30:41.700 --> 00:30:45.220
I don't care what your accuracy score, you're not actually solving the problem here.

00:30:45.220 --> 00:30:52.000
And it just goes back to this, like, make sure you're very clear on what you're optimizing for.

00:30:52.140 --> 00:31:05.300
And then another point I wanted to make, which I feel like is super important, is depending on your use case, you really have to be vigilant about what you're trying to do and what you use to get there.

00:31:05.300 --> 00:31:14.580
Because if you're doing like autonomous vehicles, that is a whole nother world as compared to what Vishnu is doing or what Kate's doing, right?

00:31:14.580 --> 00:31:24.640
Like, even if you're just dealing with unstructured data, and you have a computer vision problem that's in healthcare, and it's deciding if someone has cancer, that takes a lot longer.

00:31:24.900 --> 00:31:28.000
You can put out like one model, and it has to get approved by the FDA.

00:31:28.000 --> 00:31:31.380
And that takes a long time for it to go through that process.

00:31:31.380 --> 00:31:37.500
So you don't really care about like, updating that model in real time and gathering that data right on the fly, right?

00:31:37.500 --> 00:31:43.140
But if you're in autonomous vehicles, that's a whole nother set of problems that you need to get into.

00:31:43.140 --> 00:31:46.660
And so really like recognizing what is your use case?

00:31:46.660 --> 00:31:51.940
What is the big things that you need to take into account as you're looking into these use cases?

00:31:51.940 --> 00:31:53.800
And where do you want to optimize?

00:31:54.160 --> 00:32:00.200
For sure. And I definitely want to talk about that tradeoff of like, building the perfect model versus evolving it later.

00:32:00.200 --> 00:32:06.560
This portion of Talk Python To Me is brought to you by the Stack Overflow podcast.

00:32:06.560 --> 00:32:11.840
There are few places more significant to software developers than Stack Overflow.

00:32:11.840 --> 00:32:13.520
But did you know they have a podcast?

00:32:13.520 --> 00:32:19.260
For a dozen years, the Stack Overflow podcast has been exploring what it means to be a developer,

00:32:19.260 --> 00:32:23.860
and how the art and practice of software programming is changing our world.

00:32:23.860 --> 00:32:28.840
Are you wondering which skills you need to break into the world of technology or level up as a developer?

00:32:28.840 --> 00:32:32.320
Curious how the tools and frameworks you use every day were created?

00:32:32.700 --> 00:32:43.460
The Stack Overflow podcast is your resource for tough coding questions and your home for candid conversations with guests from leading tech companies about the art and practice of programming.

00:32:43.680 --> 00:32:51.160
From Rails to React, from Java to Python, the Stack Overflow podcast will help you understand how technology is made and where it's headed.

00:32:51.160 --> 00:32:59.120
Hosted by Ben Popper, Cassidy Williams, Matt Kierninder, and Sierra Ford, the Stack Overflow podcast is your home for all things code.

00:32:59.620 --> 00:33:02.780
You'll find new episodes twice a week wherever you get your podcasts.

00:33:02.780 --> 00:33:09.140
Just visit talkpython.fm/stackoverflow and click your podcast player icon to subscribe.

00:33:09.140 --> 00:33:10.060
And one more thing.

00:33:10.060 --> 00:33:16.680
I know you're a podcast veteran and you could just open up your favorite podcast app and search for the Stack Overflow podcast and subscribe there.

00:33:16.680 --> 00:33:23.200
But our sponsors continue to support us when they see results and they'll only know you're interested from Talk Python if you use our link.

00:33:23.400 --> 00:33:28.560
So if you plan on listening, do use our link, talkpython.fm/stackoverflow to get started.

00:33:28.560 --> 00:33:31.120
Thank you to Stack Overflow for sponsoring the show.

00:33:31.120 --> 00:33:44.800
So another area that I think is interesting to consider as you're getting started has to do with how much compute does it take to solve some of these problems and build some of these models?

00:33:44.800 --> 00:33:52.940
Like more than a lot of other areas of software development, training models takes a ton of energy, which can either mean money or time or both.

00:33:53.220 --> 00:33:59.000
You're putting aside like just the carbon costs of like spending a lot of time on servers, but just, you know, how are you going to accomplish that?

00:33:59.000 --> 00:33:59.220
Right.

00:33:59.220 --> 00:34:01.900
So how do you think about that tradeoff?

00:34:01.900 --> 00:34:08.560
Like, oh, can I train this up on my laptop or do I need to get a GPU cluster or what are your thoughts there?

00:34:08.560 --> 00:34:09.060
It's funny.

00:34:09.060 --> 00:34:15.720
I actually think the compute part of MLOps is perhaps the most solved portion of the stack.

00:34:15.720 --> 00:34:22.340
We usually think about things in terms of data model and code in machine learning, right?

00:34:22.480 --> 00:34:23.500
You know, your data is changing.

00:34:23.500 --> 00:34:25.920
You want your model to change as the data changes.

00:34:25.920 --> 00:34:30.980
And then your code is just sort of a way that you control the model that you're creating based on that data.

00:34:30.980 --> 00:34:31.300
Right.

00:34:31.540 --> 00:34:39.940
And, you know, when you think about what AWS has done over the last few years to make it more possible than ever companies like paper space as well.

00:34:39.940 --> 00:34:44.460
And even, you know, Google cloud was making cloud free and GPU instances free.

00:34:44.460 --> 00:34:48.500
Like it's very easy to experiment with compute much more so than ever before.

00:34:48.500 --> 00:34:52.440
And I think that is the hardest part of the process, right?

00:34:52.440 --> 00:34:57.120
It's freedom to experiment is usually what is the constraint, right?

00:34:57.120 --> 00:34:57.400
Right.

00:34:57.560 --> 00:35:00.080
And, you know, I'll just contrast that with data.

00:35:00.080 --> 00:35:13.780
It's very difficult to, I would say, experiment in the machine learning process right now with different data sets, with trying to work with sort of synthetic data or use different cuts of data that are correlated with interpretability.

00:35:13.780 --> 00:35:16.160
That is a very much more complicated area.

00:35:16.160 --> 00:35:26.620
I would say that I think a lot of machine learning professionals spend a lot of time doing a lot of manual work on as opposed to compute nowadays, which is by and large, I think like a very experimental and solved problem.

00:35:26.620 --> 00:35:27.160
Yeah.

00:35:27.160 --> 00:35:27.620
Excellent.

00:35:27.620 --> 00:35:37.420
Do you do any edge computing with your, do you do like medical devices or anything like little, little devices that people walk around with that you've got to put real time stuff onto?

00:35:37.420 --> 00:35:41.740
I used to, I used to work at a medical device company that was doing an eye imaging device.

00:35:41.740 --> 00:35:45.560
And we used to put a machine learning model on an ophthalmic imager.

00:35:45.560 --> 00:35:47.300
And it was interesting.

00:35:47.300 --> 00:36:01.140
It really gave me a lot of appreciation for, you know, what some of the folks at, at Apple and Nvidia and Fitbit and some of the other, you know, sort of bigger companies that do a lot of, a lot of machine learning on device do.

00:36:01.140 --> 00:36:08.620
It takes a particularly talented group of hardware and software and machine learning professionals to make all that stuff work together.

00:36:08.620 --> 00:36:13.420
And I would definitely suggest to anybody interested in this field, like check out what Nvidia is doing.

00:36:13.420 --> 00:36:14.940
They're doing a lot of really cool stuff.

00:36:14.940 --> 00:36:21.920
From what I learned in my time doing it, I learned that, you know, simplicity is really, it's the way that you can get things done.

00:36:21.920 --> 00:36:28.420
We were just exporting model weights to a pickle file and then doing some very low level computation to make it as fast as we needed.

00:36:28.680 --> 00:36:31.000
So that's about my experience working on that level.

00:36:31.000 --> 00:36:31.460
Interesting.

00:36:31.460 --> 00:36:31.980
Okay.

00:36:31.980 --> 00:36:32.240
Yeah.

00:36:32.240 --> 00:36:36.680
I'm always blown away that pickle is still used, but especially in this area, it's pretty interesting.

00:36:36.680 --> 00:36:37.300
It works.

00:36:37.300 --> 00:36:37.640
I know.

00:36:37.640 --> 00:36:38.400
It definitely does.

00:36:38.400 --> 00:36:38.920
It's easy.

00:36:38.920 --> 00:36:39.820
It's just whatever.

00:36:39.820 --> 00:36:40.580
Just save that.

00:36:40.580 --> 00:36:41.280
We'll deal with that.

00:36:41.280 --> 00:36:46.500
Let's talk real quick about one thing you have over on the community.

00:36:46.700 --> 00:36:48.760
You have a couple of things up at the top here.

00:36:48.760 --> 00:36:51.460
And one of them is called this feature store.

00:36:51.460 --> 00:36:54.800
It sounds like it might be helpful for people to get started.

00:36:54.800 --> 00:36:56.460
Do you want to tell us about this a little bit?

00:36:56.680 --> 00:36:56.920
Yeah.

00:36:56.920 --> 00:37:00.500
So we like set out to demystify a space.

00:37:00.500 --> 00:37:09.920
And like, I have so many stories of how this just was like, I didn't know what I was getting myself into when I started creating this.

00:37:09.920 --> 00:37:20.960
Because the MLOps, first of all, like right now in machine learning, there's not clear spaces of like, oh, this is this tool.

00:37:20.960 --> 00:37:23.360
And you need this tool if you're doing X, Y, Z.

00:37:23.360 --> 00:37:26.040
And here's the space that it occupies.

00:37:26.220 --> 00:37:28.240
There's like this tooling sprawl.

00:37:28.240 --> 00:37:30.000
And some tools do a little bit of this.

00:37:30.000 --> 00:37:31.580
And other tools do a little bit of that.

00:37:31.580 --> 00:37:35.800
And maybe this tool does all of these things, but it doesn't get you with that.

00:37:35.800 --> 00:37:46.060
And so what I've been able to congregate on or like I landed on a few things that are different spaces that are clearly defined.

00:37:46.060 --> 00:37:53.080
And one is the monitoring space, because I think that's just really easy for people to comprehend.

00:37:53.840 --> 00:37:56.620
Monitoring is it's like software development monitoring.

00:37:56.620 --> 00:37:59.820
But then you add the machine learning aspect to it.

00:37:59.820 --> 00:38:00.800
And you add that data.

00:38:00.800 --> 00:38:04.200
And then boom, you've got lots of new stuff to monitor.

00:38:04.200 --> 00:38:05.880
And then there's the feature store part.

00:38:05.880 --> 00:38:09.940
There's also like the metadata management or experiment tracking piece.

00:38:10.080 --> 00:38:11.800
And then there's the deploy piece.

00:38:11.800 --> 00:38:21.880
And like you can ask Vishnu, I've gone back and forth on how we're going to present these things, what we're going to do in order to create.

00:38:21.880 --> 00:38:34.340
Should we create the framework and basically do Gartner's job for them and say like, these are what you should be looking for in the tooling if you're looking for a feature store or if you're looking for a monitoring tool.

00:38:34.420 --> 00:38:37.300
And that's what we kind of have been trying to do.

00:38:37.300 --> 00:38:43.640
And we've been working with all the different companies in the community and then also like practitioners who use this.

00:38:43.640 --> 00:38:52.320
And we've been asking them like, hey, is this what you would expect from a feature store or a monitoring company or metadata management or deployment tool?

00:38:52.780 --> 00:38:59.500
The problem is that like there's a lot of tools right now that are doing like they're specializing in optimizing compute.

00:38:59.500 --> 00:39:02.120
And then they also have deployment as a feature.

00:39:02.120 --> 00:39:04.000
So is that a deployment tool?

00:39:04.000 --> 00:39:04.540
Yeah.

00:39:04.540 --> 00:39:07.260
So, yeah, it's a tricky one.

00:39:07.260 --> 00:39:14.700
But I guess the takeaway maybe is over on your website, you've got like some different categories that sort of try to do that comparison to help people pick some of these tools.

00:39:14.800 --> 00:39:16.220
Yeah, exactly.

00:39:16.220 --> 00:39:28.680
And so that's where me pulling my hair out for the last like year and a half has been just trying to figure out like what because I know that if I'm struggling differentiating all of these tools, I'm not the only one.

00:39:28.680 --> 00:39:34.220
This is what I go on and people reach out to me quite a bit to tell me about their new MLOps tool.

00:39:34.220 --> 00:39:37.760
Then I go on to their website and I'm like, what exactly do they do?

00:39:37.760 --> 00:39:40.620
It's always the same like stat.

00:39:40.620 --> 00:39:43.820
You hear like 80% of machine learning models never make it into production.

00:39:43.820 --> 00:39:46.980
And that's like what they have is they're like H1 on their website.

00:39:46.980 --> 00:39:49.420
And then it's like, but what do you do?

00:39:49.420 --> 00:39:50.180
I don't understand.

00:39:50.180 --> 00:39:54.540
So we tried to like take a non-biased approach to figuring that out.

00:39:54.540 --> 00:39:55.320
Yeah, very cool.

00:39:55.520 --> 00:39:59.140
Let's move over to the development side.

00:39:59.140 --> 00:40:01.140
So you sort of figured out your path.

00:40:01.140 --> 00:40:05.800
You decided it is a machine learning problem, how you want to approach it and so on.

00:40:05.800 --> 00:40:14.400
What are some of the recommendations or techniques that you have for people in that stage of these ML projects?

00:40:14.880 --> 00:40:26.040
You know, the one that I hear a lot of times is, or the category, I guess, is there's a lot of software engineering practices that don't necessarily get brought into data science as often as they should.

00:40:26.040 --> 00:40:29.460
For example, like unit testing or version control or stuff like that.

00:40:29.460 --> 00:40:30.420
Like what are your thoughts?

00:40:30.420 --> 00:40:31.980
Kate and Vishnu especially.

00:40:31.980 --> 00:40:33.040
I'll let Kate go first.

00:40:33.820 --> 00:40:34.980
Yeah, it's a good one.

00:40:34.980 --> 00:40:38.580
I wouldn't call myself a super awesome engineer.

00:40:38.580 --> 00:40:47.820
I'm still on that path trying to just be tolerant and understanding to my other folks on the team who actually know what they're doing and not to make their lives too hard.

00:40:47.820 --> 00:41:01.920
My personal super tiny hack was, especially in the days where I think people are still using notebooks, but I'm using VS Code with this like hash percent percent sign, which turns your script into cells.

00:41:01.920 --> 00:41:06.220
And when I'm done, I just clean it up and it becomes a normal script again.

00:41:06.340 --> 00:41:10.040
Or at least I can basically copy it and do that.

00:41:10.040 --> 00:41:10.300
You can still run it, yeah.

00:41:10.300 --> 00:41:12.860
And still run it and test it out that way.

00:41:12.860 --> 00:41:15.920
And that I think really speeds up the process.

00:41:15.920 --> 00:41:17.840
And of course, yeah, version control.

00:41:17.840 --> 00:41:29.360
Currently, I'm working with teams or just basically either data engineer or SREs who are helping me make things a bit more polished or deploy them a bit better.

00:41:29.360 --> 00:41:31.560
So I don't have to think about it that much.

00:41:31.560 --> 00:41:34.200
So I'm happy to hear from Vishnu.

00:41:34.200 --> 00:41:34.500
Yeah.

00:41:34.720 --> 00:41:47.780
To me, components of the software engineering workflow that I suggest data scientists and machine learning engineers heavily leverage are version control, CI, CD testing, and in general, you know, clean code best practices.

00:41:47.780 --> 00:41:48.580
Right.

00:41:48.580 --> 00:41:49.600
You know, I'm not.

00:41:49.600 --> 00:41:50.040
Yeah.

00:41:50.040 --> 00:41:54.080
Code reuse functions rather than just top to bottom with copy paste.

00:41:54.080 --> 00:41:55.000
Yeah.

00:41:55.000 --> 00:42:03.120
I mean, if you do, if you do those three, four things, like, you know, that's actually, you know, I would say like a good bit of a hard day-to-day stuff, right?

00:42:03.120 --> 00:42:04.680
Just following those best practices.

00:42:04.680 --> 00:42:04.920
Yeah.

00:42:04.920 --> 00:42:06.360
And they'll really accelerate you.

00:42:06.360 --> 00:42:15.880
I try to set those things up early on in the process of running a project, you know, setting up the repo, get a repo the right way, setting up CI, CD to the extent that makes sense.

00:42:16.300 --> 00:42:21.160
You know, you don't want to over-engineer infrastructure around your project without having a project too early on.

00:42:21.160 --> 00:42:24.240
But I think those kinds of things are very helpful.

00:42:24.240 --> 00:42:35.060
And, you know, we had on a guest on our podcast, our ops community podcast, Demetrius and I, a guy named Jesse Johnson, who is the VP of software engineering and data scientists at a company called DuPont Therapeutics.

00:42:35.420 --> 00:42:38.720
And he has this concept known as building software from the outside in.

00:42:38.720 --> 00:42:48.480
And what that means is you start sort of at the finished, you start like when you're building like a product, a product, maybe that involves an API, like define what the API looks like.

00:42:48.480 --> 00:42:56.260
Define what you'd like your end user, what their experience to be like, and then build backwards to all the things that allow for that to happen.

00:42:56.660 --> 00:43:10.560
And I like to think about the same thing with the machine learning model or with whatever kind of data science output that I have, which is what I want that end experience to look like, how elegant should it feel, how well, how reliable, maintainable and well architected should it be.

00:43:10.560 --> 00:43:13.220
And then build in, you know, build inwards towards that.

00:43:13.220 --> 00:43:16.860
So that's sort of another software sort of engineering concept that I try to apply.

00:43:16.860 --> 00:43:17.500
Yeah.

00:43:17.500 --> 00:43:21.220
A lot of people talk about how unit testing makes your code better.

00:43:21.220 --> 00:43:25.080
And I think that's actually, you've touched on the key to why that is.

00:43:25.080 --> 00:43:31.180
Because instead of just thinking about the details of the algorithm, you have to think about like, well, how is this going to look when somebody tries to use it?

00:43:31.180 --> 00:43:31.740
Right.

00:43:31.740 --> 00:43:34.680
And like, because that's what you got to kind of do in the test is use it a little bit.

00:43:34.680 --> 00:43:35.080
Exactly.

00:43:35.080 --> 00:43:35.900
Kate, do you want to go?

00:43:35.900 --> 00:43:39.020
I just wanted to do a quick joke that it runs on my machine.

00:43:39.020 --> 00:43:40.220
So it must be good.

00:43:40.220 --> 00:43:42.620
It must work.

00:43:42.620 --> 00:43:45.420
Do you know about the, it works on my machine certification program?

00:43:45.420 --> 00:43:47.160
No.

00:43:47.160 --> 00:43:48.280
What is that?

00:43:48.280 --> 00:43:48.900
I need this.

00:43:48.900 --> 00:43:50.660
Oh, it's brilliant.

00:43:50.660 --> 00:43:52.660
It has some interesting rules.

00:43:52.840 --> 00:43:58.380
So yeah, anytime somebody is sort of, you can do this, you can give them this stamp.

00:43:58.380 --> 00:43:59.540
And it's brilliant.

00:43:59.540 --> 00:44:02.120
To be certified, you have to compile your application code.

00:44:02.120 --> 00:44:03.360
This is like a language of files.

00:44:03.360 --> 00:44:07.820
Getting the latest version of any code changes from any other developer is purely optional.

00:44:07.820 --> 00:44:09.120
Launch the app.

00:44:09.120 --> 00:44:11.940
Cause at least one path to be executed.

00:44:11.940 --> 00:44:14.960
Preferred way to do this is ad hoc manual testing.

00:44:15.500 --> 00:44:20.560
You can omit this step if the code change was fewer than five lies or in the developer's

00:44:20.560 --> 00:44:21.660
professional opinion.

00:44:21.660 --> 00:44:23.740
The code change could not possibly result in an error.

00:44:23.740 --> 00:44:24.860
Check in your code.

00:44:24.860 --> 00:44:25.680
Certified.

00:44:25.680 --> 00:44:26.520
Oh boy.

00:44:26.520 --> 00:44:27.320
Yeah, I know.

00:44:27.320 --> 00:44:29.520
It's the problem that we all run into, right?

00:44:29.520 --> 00:44:29.960
Yeah.

00:44:29.960 --> 00:44:30.460
Yeah.

00:44:30.460 --> 00:44:33.960
Reproducibility and the shareability and so on.

00:44:34.040 --> 00:44:39.340
And you're right that like source control and CI and these things are absolutely, absolutely

00:44:39.340 --> 00:44:39.720
important.

00:44:39.720 --> 00:44:42.520
One thing, Demetrius, go ahead and jump in with your thought.

00:44:42.520 --> 00:44:44.440
Then I want to talk about a tool here real quick.

00:44:44.440 --> 00:44:44.880
Oh yeah.

00:44:44.880 --> 00:44:50.200
I was just going to say that one of the guests on the community podcast made an excellent point.

00:44:50.200 --> 00:44:54.140
We've had two that come on, that have come on and talked about testing specifically for

00:44:54.140 --> 00:44:54.680
machine learning.

00:44:55.440 --> 00:45:01.440
And one of them, Svet, was talking about how when you properly test, and actually,

00:45:01.440 --> 00:45:04.280
Mohamed, both of them, they kind of said the same thing in different words.

00:45:04.280 --> 00:45:09.800
When you have tests set up and they're properly there, not just unit tests, but also like testing

00:45:09.800 --> 00:45:11.080
the data and this kind of stuff.

00:45:11.080 --> 00:45:15.380
One of the side effects that you get from that is it's documentation.

00:45:15.380 --> 00:45:18.200
It's like you have these artifacts that are left.

00:45:18.440 --> 00:45:24.920
So you, as someone who's coming in and jumping in new, you get to see, oh, okay, so this is

00:45:24.920 --> 00:45:27.260
what's happening with this slice of data.

00:45:27.260 --> 00:45:33.560
And this is when you are trying to debug something, it gives you a much better picture and it's

00:45:33.560 --> 00:45:39.040
more clearly laid out than if you were to just leave it all up to chance, we could say.

00:45:39.040 --> 00:45:45.360
And, you know, the open source angle, if you're looking at some package or library to use for

00:45:45.360 --> 00:45:50.180
your code and you go and check it out and it has no tests, there's a good chance you're like,

00:45:50.180 --> 00:45:51.480
ah, this thing's not really ready.

00:45:51.480 --> 00:45:56.700
People are not putting the effort to make sure it's good enough to remain good enough over time

00:45:56.700 --> 00:46:01.480
and to help onboard new contributors that you really want to depend upon it, right?

00:46:01.480 --> 00:46:03.880
So I think there's that angle that's important as well.

00:46:03.880 --> 00:46:10.160
The two tools I wanted to talk about really quick in this area is this thing called DCV,

00:46:10.160 --> 00:46:14.540
which is open source version control for machine learning projects.

00:46:14.980 --> 00:46:19.260
maybe, and then also before that is NB dev from fast.ai.

00:46:19.260 --> 00:46:23.520
Vishnu, you spoke about using Git and checking in yourself and so on.

00:46:23.520 --> 00:46:28.120
And one of the challenges, I think notebooks are great, but one of the challenges of them is they

00:46:28.120 --> 00:46:33.840
kind of save their output in the file and every run potentially be generating a different output,

00:46:33.840 --> 00:46:38.060
which means some like meaningless Git merge conflict problem you got to deal with.

00:46:38.060 --> 00:46:41.180
Do you have, do you have ideas to fix, fix some of that stuff?

00:46:41.220 --> 00:46:43.780
Or do you use anything like NB dev to sort of make that simpler?

00:46:43.780 --> 00:46:44.480
Good question.

00:46:44.480 --> 00:46:46.040
I like paper mill a lot.

00:46:46.040 --> 00:46:49.380
I follow the Netflix approach for working with notebooks.

00:46:49.380 --> 00:46:51.760
I think that they're a very useful tool.

00:46:51.760 --> 00:46:57.200
I think that if you're prescriptive, give us the quick summary of what the Netflix philosophy there is.

00:46:57.200 --> 00:46:57.340
Sure.

00:46:57.340 --> 00:46:57.660
Yeah.

00:46:57.660 --> 00:46:58.660
Maybe they should do that.

00:46:58.660 --> 00:47:12.060
Basically, Netflix's point is notebooks are a really effective, interactive prototyping tool that if given really prescriptive guardrails can be a part of a production process.

00:47:12.180 --> 00:47:16.860
And they use notebooks in production at Netflix and they really encourage their use internally.

00:47:16.860 --> 00:47:27.440
And they've developed a lot of tools that help make sure that the known flaws of notebooks, such as the state element that you pointed out, don't lead to things falling off the rails.

00:47:27.900 --> 00:47:29.720
And that's the way I like to think about it as well.

00:47:29.720 --> 00:47:38.960
I don't use an NB dev myself, but I do think it's a great project that for people who are thinking about using notebooks, they should check out.

00:47:38.960 --> 00:47:41.520
I think another tool that I've heard of is called Plumber.

00:47:41.960 --> 00:47:53.260
But the most important thing is when you're using notebooks, I think rather than getting into a holy war about whether they're the best tool or not, it's understanding that is it the right tool for my job?

00:47:53.260 --> 00:47:59.500
And I view the right context for that as being when iteration and speed is of the essence.

00:47:59.500 --> 00:48:02.060
There is no tool that is better than a Jupyter notebook.

00:48:02.060 --> 00:48:03.100
It's just there isn't.

00:48:03.100 --> 00:48:04.840
And then we have the empirical proof for that.

00:48:04.840 --> 00:48:08.260
So let's just find ways of putting process around it to make it work.

00:48:08.260 --> 00:48:08.560
Sure.

00:48:08.560 --> 00:48:09.620
Yeah, that makes sense.

00:48:10.000 --> 00:48:15.120
What about tools like DCV, some of these version control systems?

00:48:15.120 --> 00:48:24.520
You know, part of the problem is the data sets and data science in general, but in machine learning as well, it's just like it doesn't actually make sense to check them directly into Git.

00:48:24.520 --> 00:48:25.200
To Git, yeah.

00:48:25.200 --> 00:48:26.620
You know, yeah, yeah, yeah.

00:48:26.620 --> 00:48:35.380
So some tools like this have sprung up to allow for sort of a side-by-side store of your data, but it's also tracked in Git, but not entirely stored in Git.

00:48:35.380 --> 00:48:39.360
So do you, Kate or Vishnu, or are you using this?

00:48:39.560 --> 00:48:49.280
I'm trying not to, but this is exactly the space that that company that went out of business at the beginning of the podcast, this is what they were playing in and trying to make like this happen.

00:48:49.280 --> 00:48:49.940
Interesting, okay.

00:48:49.940 --> 00:48:54.380
But yeah, I'll let Kate and Vishnu give their opinions on DVC.

00:48:54.380 --> 00:49:00.400
Yeah, it's also the kind of tool that you would have to categorize into your Gartner four quadrant.

00:49:00.400 --> 00:49:01.380
Yeah, yeah.

00:49:01.380 --> 00:49:01.900
Somehow.

00:49:01.900 --> 00:49:09.120
What I found, what's so interesting is that, I mean, just, and this is horrible to say, but it feels like people have so

00:49:09.120 --> 00:49:14.460
many other problems with getting their machine learning into production that this is almost

00:49:14.460 --> 00:49:21.060
like a secondary thing that comes afterwards, or they don't necessarily care as much about

00:49:21.060 --> 00:49:24.920
this because it is, it's like not mission critical.

00:49:24.920 --> 00:49:26.840
There's bigger, more significant problems, right?

00:49:26.840 --> 00:49:29.180
That are just like, we got to solve this for this even matter.

00:49:29.180 --> 00:49:30.940
That's not to say there's not a lot of people out there.

00:49:30.940 --> 00:49:32.640
I know there's a ton of people that use DVC.

00:49:32.640 --> 00:49:33.820
Their community is huge.

00:49:33.900 --> 00:49:35.440
It's a great tool.

00:49:35.440 --> 00:49:38.960
But I didn't think about that sometimes.

00:49:38.960 --> 00:49:43.280
Like, yeah, there's, there's mission critical things that are really top of mind.

00:49:43.280 --> 00:49:47.640
And everybody likes to talk about how reproducibility is very important for them.

00:49:47.680 --> 00:49:54.020
But unless you're in like banking and you need to because of the law, like it's not necessarily

00:49:54.020 --> 00:49:56.660
the, the most important thing for you.

00:49:56.660 --> 00:49:57.060
Sure.

00:49:57.060 --> 00:50:01.380
I would say in my experience, versioning and lineage and stuff tends to be the province of

00:50:01.380 --> 00:50:04.560
data engineering teams a lot more than it is machine learning engineers.

00:50:04.560 --> 00:50:11.220
And the way that we think about data in a machine learning context as sort of one-off artifacts

00:50:11.220 --> 00:50:16.360
that we need to associate with a particular experiment is not compatible with the way a lot of data

00:50:16.360 --> 00:50:20.240
engineering team think about data engineering teams think about their data sets as being sort

00:50:20.240 --> 00:50:24.660
of like a baked cake, you know, that is ready for consistent use going forward, right?

00:50:24.660 --> 00:50:28.340
To use that sort of cake, cake analogy that's common in data engineering.

00:50:28.340 --> 00:50:30.760
I personally, I use DVC.

00:50:30.760 --> 00:50:32.760
I think it's a well-created tool.

00:50:32.760 --> 00:50:35.040
It didn't exactly solve my problems.

00:50:35.040 --> 00:50:35.920
I'm a big believer.

00:50:35.920 --> 00:50:38.880
Like if you're a machine learning engineer and you're having data versioning problems, like

00:50:38.880 --> 00:50:43.620
go learn a little bit about data engineering and learn about data warehouses and databases

00:50:43.620 --> 00:50:47.720
and how you can leverage the existing tools in that field, rather than trying to use, you

00:50:47.720 --> 00:50:52.100
know, maybe something that might have been spun up for a very specific purpose or adopt a platform

00:50:52.100 --> 00:50:56.360
like a pachyderm that has, you know, an end-to-end approach to thinking about the entire

00:50:56.360 --> 00:51:00.200
machine learning pipeline that does data set versioning that helps you do your experiment

00:51:00.200 --> 00:51:03.360
tracking and helps you with, you know, sort of your deployment.

00:51:03.360 --> 00:51:08.880
That's kind of my approach to thinking about data set versioning as a component of the overall ML workflow.

00:51:08.880 --> 00:51:10.600
Yeah, we have similar, yeah.

00:51:10.600 --> 00:51:12.760
So we don't use any specific tools.

00:51:12.760 --> 00:51:20.360
We are going as many larger companies building our own set of tools, of course, based by people

00:51:20.360 --> 00:51:25.040
who might not ever touch machine learning in their whole lives with some other people who

00:51:25.040 --> 00:51:27.040
complain about how their files don't work.

00:51:27.160 --> 00:51:28.640
Trying to make everyone happy.

00:51:28.640 --> 00:51:33.220
But essentially, yeah, it's basically our data engineers trying to integrate some kind of

00:51:33.220 --> 00:51:38.560
extra metadata in our deployment tools so that we know that we can backtrack those specific

00:51:38.560 --> 00:51:43.640
training sets whatsoever to the models that we're training or deploying and so forth.

00:51:43.640 --> 00:51:50.560
So basically, it's, as Vishen said, in the realm of data engineers who are making things happen,

00:51:50.560 --> 00:51:52.800
they're the greatest people, all of them all.

00:51:53.600 --> 00:51:54.440
Two thoughts.

00:51:54.440 --> 00:52:00.500
One, before people get too tied up about trying to be perfect, like putting just your notebooks

00:52:00.500 --> 00:52:04.960
and your scripts into version control and straight to get is like 80%.

00:52:04.960 --> 00:52:08.140
It's got to be so much better than not doing anything.

00:52:08.140 --> 00:52:13.080
And then two, I'm fascinated by this comment, Kate, about like built by people who don't do

00:52:13.080 --> 00:52:15.020
machine learning for machine learning.

00:52:15.180 --> 00:52:17.560
Like, is that what, how's that sort of interaction?

00:52:17.560 --> 00:52:23.040
Is that challenging to cross that boundary or whatever to work with folks at companies like

00:52:23.040 --> 00:52:25.500
that that are not quite totally experienced at what you're building?

00:52:25.500 --> 00:52:30.200
I think it's funny for me because I come from consulting where we kind of closely work together

00:52:30.200 --> 00:52:31.040
with data engineers.

00:52:31.040 --> 00:52:33.580
And there was kind of always an overlap of your tasks.

00:52:33.580 --> 00:52:38.620
And now I'm coming to a larger organization where people's tasks are pretty well outlined and

00:52:38.620 --> 00:52:40.780
their responsibilities are more narrow.

00:52:41.240 --> 00:52:45.540
And sometimes people treat me like, I don't know, something between an alien and a dinosaur

00:52:45.540 --> 00:52:50.740
because they have never interacted with like a data scientist or machine learning person

00:52:50.740 --> 00:52:53.180
and ask me questions.

00:52:53.180 --> 00:52:57.280
Like, I don't know, I'm going to just tell them what's the meaning of life all of a sudden.

00:52:57.280 --> 00:52:58.860
We have this data, find the answers.

00:52:58.860 --> 00:53:04.080
And usually it's very basic stuff, but I think it's very important to have those people in

00:53:04.080 --> 00:53:04.740
the organization.

00:53:04.740 --> 00:53:06.700
Some people call them data strategists.

00:53:06.700 --> 00:53:11.500
Some people call them just fun people to talk to, like Demetrius, you know, who will bridge

00:53:11.500 --> 00:53:17.140
that gap and make sure that everybody's heard and translated to each other's language to just

00:53:17.140 --> 00:53:23.540
get that set of requirements and not build what data engineers want to build or build just what

00:53:23.540 --> 00:53:26.980
data scientists want to build and create that connection between the two.

00:53:26.980 --> 00:53:27.960
So that is important.

00:53:27.960 --> 00:53:28.720
Yeah, very cool.

00:53:28.720 --> 00:53:31.160
So let's move over to the operation side.

00:53:31.160 --> 00:53:36.500
Now, on the ops side, I guess the first thing I really want to think about is where do you

00:53:36.500 --> 00:53:37.120
run your code?

00:53:37.120 --> 00:53:40.480
Where do you run your models and APIs that back them and stuff?

00:53:40.480 --> 00:53:48.280
And I looked over around here and I see a lot of stuff about Kubernetes on the community for

00:53:48.280 --> 00:53:48.660
you all.

00:53:48.660 --> 00:53:53.580
And so Kubernetes, Linux virtual machines run in the cloud.

00:53:53.580 --> 00:53:57.180
Does that take too much to run it in terms of sort of compute costs?

00:53:57.180 --> 00:53:58.920
You would rather run it locally and you own servers.

00:53:58.920 --> 00:54:00.740
What are your thoughts on this?

00:54:00.740 --> 00:54:04.980
I mean, to me, it depends on how intensive your training efforts are and how many models

00:54:04.980 --> 00:54:06.060
you have in production, right?

00:54:06.060 --> 00:54:10.380
Setting up a Kubernetes cluster for one model seems to me like overkill.

00:54:10.380 --> 00:54:15.600
But, you know, for a company that has tens or hundreds of models in production, it might

00:54:15.600 --> 00:54:19.080
make a lot of sense, right, to try and set up some sort of distributed training architecture,

00:54:19.080 --> 00:54:19.500
et cetera.

00:54:19.500 --> 00:54:22.220
Especially if someone else is maintaining that cluster for you.

00:54:22.220 --> 00:54:22.660
Yeah.

00:54:22.660 --> 00:54:23.660
Yeah.

00:54:23.660 --> 00:54:24.120
Yeah.

00:54:24.120 --> 00:54:28.180
It's one thing to say, I want to have, I want to create and babysit a Kubernetes cluster versus

00:54:28.180 --> 00:54:30.320
I want to be able to give my job to Kubernetes.

00:54:30.320 --> 00:54:30.760
Yeah.

00:54:30.760 --> 00:54:32.120
It's not the same, right?

00:54:32.120 --> 00:54:32.480
Exactly.

00:54:32.480 --> 00:54:32.820
Yeah.

00:54:32.820 --> 00:54:33.100
Yeah.

00:54:33.100 --> 00:54:36.540
So I think it really depends on, you know, what scale you're at.

00:54:36.540 --> 00:54:40.380
That's kind of what we talk a lot about in the community and confused about what scale

00:54:40.380 --> 00:54:42.220
you're at or what maturity level you're at.

00:54:42.220 --> 00:54:45.360
I invite you, please join the Slack, the MLOps community Slack.

00:54:45.360 --> 00:54:49.180
And, you know, I'm sure people will be able to provide some very technical suggestions

00:54:49.180 --> 00:54:49.840
for your size.

00:54:49.960 --> 00:54:51.800
But I guess my answer to you is it depends.

00:54:51.800 --> 00:54:52.280
Okay.

00:54:52.480 --> 00:54:54.940
I would say I use the path of least resistance.

00:54:54.940 --> 00:54:59.860
So whatever is there, whatever is available, what is the easiest way to source your data?

00:54:59.860 --> 00:55:02.960
What is already, what are the connections that are already set up?

00:55:02.960 --> 00:55:07.220
Again, because sometimes you work with different teams or in consulting different companies.

00:55:07.220 --> 00:55:08.260
That's about it.

00:55:08.320 --> 00:55:13.540
And if I'm lucky enough, like right now to have a cluster that is babysitted by another

00:55:13.540 --> 00:55:15.040
person, well, good.

00:55:15.040 --> 00:55:18.340
Then it's a deal, you know, just take it.

00:55:18.340 --> 00:55:19.840
This runs on my machine.

00:55:19.840 --> 00:55:20.720
Exactly.

00:55:20.760 --> 00:55:27.500
We should like pour out some whiskey or whatever, some drink for lots of data scientists that

00:55:27.500 --> 00:55:32.520
have gone in to the Kubernetes world thinking they were going to pick it up and get their

00:55:32.520 --> 00:55:34.700
models out because they needed to.

00:55:34.700 --> 00:55:39.240
For some reason, they got brainwashed into thinking like, oh yeah, I should just learn Kubernetes

00:55:39.240 --> 00:55:39.960
real fast.

00:55:39.960 --> 00:55:42.940
And they never were able to come back.

00:55:42.940 --> 00:55:43.260
Yeah.

00:55:43.260 --> 00:55:46.340
And it's like such a huge detour, right?

00:55:46.340 --> 00:55:51.980
And so we talk about this a lot and that is like, what, first of all, what should the

00:55:51.980 --> 00:55:58.100
team composition look like as a machine learning like squad or team or someone trying to just

00:55:58.100 --> 00:55:59.320
get value out of it?

00:55:59.320 --> 00:56:02.200
And should a data scientist have to know Kubernetes?

00:56:02.200 --> 00:56:07.100
And so that's kind of like the joke here is like Kubernetes is a gateway drug.

00:56:07.100 --> 00:56:11.160
If you can get past it, if you can get into it, then you're probably going to go a lot

00:56:11.160 --> 00:56:11.620
deeper.

00:56:12.240 --> 00:56:17.140
But it's really hard to pick up, especially if you're coming from a data science background.

00:56:17.140 --> 00:56:17.580
Yeah.

00:56:17.580 --> 00:56:18.160
Yeah.

00:56:18.160 --> 00:56:19.560
It's a whole nother thing to learn.

00:56:19.560 --> 00:56:20.600
Yes.

00:56:20.600 --> 00:56:21.180
Right on, Kate.

00:56:21.180 --> 00:56:22.240
Exactly.

00:56:22.240 --> 00:56:26.840
Pamphal in the audience has an interesting comment that I would love to echo as well.

00:56:26.840 --> 00:56:28.700
Also, don't forget you're not Google, right?

00:56:28.700 --> 00:56:33.180
And you're not Facebook and you're not Instagram and you're not, you know, all these companies

00:56:33.180 --> 00:56:36.600
that are trying to run at such an insane scale, right?

00:56:36.600 --> 00:56:43.060
That they have to come up and use very interesting deployment in DevOps, whereas maybe just running

00:56:43.060 --> 00:56:44.040
on a server is fine.

00:56:44.040 --> 00:56:44.800
I don't know, you know?

00:56:44.800 --> 00:56:49.940
That's probably the most shared blog in the community is that you are not Google blog.

00:56:49.940 --> 00:56:50.260
Yeah.

00:56:50.260 --> 00:56:50.480
Yeah.

00:56:50.480 --> 00:56:52.020
That was a great article.

00:56:52.020 --> 00:56:54.140
It came out like a year and a half ago or something like that.

00:56:54.200 --> 00:56:58.320
He's a community member in our community, but also is very well known in the general ML

00:56:58.320 --> 00:56:58.780
community.

00:56:58.780 --> 00:57:02.480
Jacopo Talibue, who's the director of AI at CoView.

00:57:02.480 --> 00:57:06.760
He's been putting out a series of articles known as ML Ops at reasonable scale.

00:57:06.760 --> 00:57:12.580
And I think it talks a lot about this entire concept, which is like a lot of what the discussion

00:57:12.580 --> 00:57:16.320
is driven by about ML is about ML at unreasonable scale.

00:57:16.320 --> 00:57:20.540
It's the Googles and the Ubers that are doing hundreds of millions and billions of events.

00:57:21.000 --> 00:57:24.860
And for many of us, that's not the reality and what, you know, Mike just pulled up here.

00:57:24.860 --> 00:57:28.600
It's a great series that I encourage everyone to read who feels like, hey, that's not applicable

00:57:28.600 --> 00:57:28.940
to me.

00:57:28.940 --> 00:57:29.520
What is?

00:57:29.520 --> 00:57:30.460
This answers that.

00:57:30.460 --> 00:57:32.300
And we had him on for a podcast as well.

00:57:32.300 --> 00:57:32.640
Nice.

00:57:32.640 --> 00:57:32.900
Yeah.

00:57:32.900 --> 00:57:35.560
The subtitle here is ML Ops without too much ops.

00:57:35.560 --> 00:57:37.660
That's good.

00:57:37.660 --> 00:57:38.180
I like it.

00:57:38.180 --> 00:57:39.240
And it's the same idea.

00:57:39.240 --> 00:57:43.400
It sounds just very focused on machine learning rather than just broad software development.

00:57:43.400 --> 00:57:48.380
Do any of you all use like software as a service type places?

00:57:48.700 --> 00:57:53.320
I'm thinking of stuff like Streamlit, for example, like Streamlit Cloud and these types

00:57:53.320 --> 00:57:56.120
of things where kind of build your model and you're just like, here, go run.

00:57:56.120 --> 00:58:00.620
I mean, Heroku would be sort of the similar website equivalent of that.

00:58:00.620 --> 00:58:03.640
So we do use Streamlit, but we don't use the cloud.

00:58:03.640 --> 00:58:05.600
We use it just as an interface.

00:58:05.600 --> 00:58:06.240
Right.

00:58:06.240 --> 00:58:08.280
You can self-host it yourself.

00:58:08.280 --> 00:58:13.440
We host it ourselves because then authentication, everything else is kind of linked to it.

00:58:13.540 --> 00:58:16.100
And then we forget just a nice interface.

00:58:16.100 --> 00:58:16.540
Yeah.

00:58:16.540 --> 00:58:17.740
What are your thoughts on Streamlit?

00:58:17.740 --> 00:58:18.480
It's awesome.

00:58:18.480 --> 00:58:18.800
Yeah.

00:58:18.800 --> 00:58:23.440
I haven't had to use it for anything, but my experience is that like it's the amount of

00:58:23.440 --> 00:58:27.300
code that you have to write to create these really interactive dashboards.

00:58:27.300 --> 00:58:28.480
It's super short.

00:58:28.480 --> 00:58:28.840
Yeah.

00:58:28.840 --> 00:58:32.620
And I mean, the alternative usually in the organization is that, oh, we have this Tableau

00:58:32.620 --> 00:58:33.060
dashboard.

00:58:33.060 --> 00:58:33.560
Right.

00:58:33.980 --> 00:58:37.940
And that requires licenses and training for people.

00:58:37.940 --> 00:58:43.200
And again, it has its own limitations at some points with certain amount of data, it just

00:58:43.200 --> 00:58:43.940
starts crashing.

00:58:43.940 --> 00:58:50.340
And this is an easy way to, for machine learning professionals to showcase whatever they're working

00:58:50.340 --> 00:58:51.180
on in a way.

00:58:51.180 --> 00:58:53.880
And it's been a lifesaver for us.

00:58:53.880 --> 00:58:56.620
Sometimes people just don't get what the hell you're talking about.

00:58:56.620 --> 00:59:02.540
So we were working on an NLP tool that would analyze a lot of unstructured text in a lot of

00:59:02.540 --> 00:59:03.160
different ways.

00:59:03.160 --> 00:59:07.260
And we just plugged all the possible ways to visualize that result.

00:59:07.260 --> 00:59:09.220
And it just clicked for people.

00:59:09.220 --> 00:59:11.360
And then you had a nice little video next to it.

00:59:11.360 --> 00:59:12.840
You know, it's just so flexible.

00:59:12.840 --> 00:59:13.960
It's really cool.

00:59:13.960 --> 00:59:14.180
Yeah.

00:59:14.180 --> 00:59:17.700
The nice part is it's not just a static notebook output, right?

00:59:17.700 --> 00:59:21.480
You can sort of play with the dropdowns, click in the places, and it becomes a live

00:59:21.480 --> 00:59:25.140
little interactive thing without you having to learn some sort of front-end programming

00:59:25.140 --> 00:59:26.840
framework like Vue.js or something.

00:59:26.840 --> 00:59:27.380
Yeah, exactly.

00:59:27.380 --> 00:59:31.160
And also, on the other hand, we had developed this package to do the analysis.

00:59:31.160 --> 00:59:36.140
But this gives a no-code interface for people to completely just do it by themselves.

00:59:36.140 --> 00:59:41.520
And they feel really cool about interfacing with machine learning without having that background,

00:59:41.520 --> 00:59:42.700
without having to learn.

00:59:43.060 --> 00:59:43.720
That's cool.

00:59:43.720 --> 00:59:45.580
Think of it as like a hybrid, right?

00:59:45.580 --> 00:59:50.780
Like, build the real software development bit and then expose it to things like Streamlight.

00:59:50.780 --> 00:59:51.220
Yeah.

00:59:51.220 --> 00:59:51.560
Cool.

00:59:51.560 --> 00:59:52.780
Vishnu, what are your thoughts?

00:59:52.780 --> 00:59:54.220
No, I agree with everything Kate said.

00:59:54.220 --> 00:59:55.220
I think it's...

00:59:55.220 --> 00:59:56.440
Remember when it came out?

00:59:56.440 --> 00:59:58.060
It came out with a lot of great examples.

00:59:58.640 --> 01:00:00.980
And it came out with a lot of...

01:00:00.980 --> 01:00:04.200
You know, at the time, it was still TensorFlow 1.0.

01:00:04.200 --> 01:00:05.460
Two hadn't come out.

01:00:05.460 --> 01:00:08.080
And it was really, really hard to work with machine learning models.

01:00:08.080 --> 01:00:12.040
You know, it was like, you know, you had these, like, you know, these underlying graphs that

01:00:12.040 --> 01:00:13.800
you had to kind of struggle with.

01:00:13.840 --> 01:00:19.000
And people spent so much time just wrangling, like, how do I get an output for this model

01:00:19.000 --> 01:00:20.000
training exercise?

01:00:20.000 --> 01:00:24.840
But to have this, like, really neatly written package that would just take that as a backend

01:00:24.840 --> 01:00:28.200
and then let me make, you know, interactive visualizations felt like magic.

01:00:28.200 --> 01:00:29.900
You know, all great tools feel like magic.

01:00:29.900 --> 01:00:31.300
And I think that's what Streamlit did well.

01:00:31.300 --> 01:00:35.560
As Kate said, like, it allows, you know, non-technical users to interact with outputs of

01:00:35.560 --> 01:00:39.420
models very naturally, which I think is a really important part of connecting some of

01:00:39.420 --> 01:00:40.680
those technical to business value.

01:00:41.160 --> 01:00:44.840
There's a whole set of tools like Streamlit that have since come out, you know, that are

01:00:44.840 --> 01:00:48.920
making various parts of the sort of machine learning workflow or the operations workflow

01:00:48.920 --> 01:00:53.100
a lot easier, you know, whether it's sort of, you know, letting you set up APIs on top

01:00:53.100 --> 01:00:58.120
of those models or visualization or all kinds of other sort of aspects.

01:00:58.120 --> 01:00:59.520
So starting a revolution.

01:00:59.520 --> 01:01:00.260
Yeah, absolutely.

01:01:00.260 --> 01:01:04.440
You know, for me, the magic is you write a function that looks like it just takes arguments

01:01:04.440 --> 01:01:07.620
and you don't have to deal with callbacks and interactive stuff.

01:01:07.620 --> 01:01:10.000
And it just kind of adds that into there.

01:01:10.380 --> 01:01:14.340
What are some of the other tools like this that people might be using out there to get

01:01:14.340 --> 01:01:15.420
their ML models online?

01:01:15.420 --> 01:01:19.860
FastAPI right now is really popular as like a way of, you know, serving your model.

01:01:19.860 --> 01:01:20.600
FastAPI?

01:01:20.600 --> 01:01:21.820
Not fast AI, right?

01:01:21.820 --> 01:01:22.460
Yeah, FastAPI.

01:01:22.460 --> 01:01:22.720
Yeah.

01:01:22.720 --> 01:01:23.660
Yeah, absolutely.

01:01:23.660 --> 01:01:24.000
Yeah.

01:01:24.000 --> 01:01:25.460
FastAPI is really popular.

01:01:25.460 --> 01:01:28.640
There's a new tool I heard of called Banana, which also does this.

01:01:28.640 --> 01:01:29.600
Banana.dev.

01:01:29.600 --> 01:01:30.140
Banana.

01:01:30.140 --> 01:01:30.540
Okay.

01:01:30.540 --> 01:01:30.820
Yeah.

01:01:30.820 --> 01:01:33.340
I mean, I think they're still early on.

01:01:33.340 --> 01:01:37.680
I'm struggling to remember off the top of my head right now, but just in general, this

01:01:37.680 --> 01:01:43.660
paradigm of saying like, hey, if I can like write a neat sort of like modern Python library

01:01:43.660 --> 01:01:48.660
where I can write, as you said, a function with a couple arguments and then do things that

01:01:48.660 --> 01:01:50.180
are associated with the machine learning workflow.

01:01:50.180 --> 01:01:51.280
That's a model that works.

01:01:51.280 --> 01:01:53.780
So like Great Expectations kind of does that with data testing.

01:01:53.780 --> 01:01:54.720
Right, right, right.

01:01:54.720 --> 01:01:56.620
You know, it kind of works like pytest for data.

01:01:56.620 --> 01:02:02.520
And so I think what we're trying to do overall, the big picture is bring, you know, very Pythonic

01:02:02.520 --> 01:02:07.680
ways of working with code into the realm of data and machine learning models to the extent

01:02:07.680 --> 01:02:08.400
that makes sense.

01:02:08.400 --> 01:02:08.720
Yeah.

01:02:08.720 --> 01:02:09.200
Banana.

01:02:09.200 --> 01:02:13.140
Banana.dev is totally new to me.

01:02:13.140 --> 01:02:13.720
Interesting.

01:02:13.720 --> 01:02:16.300
ML model hosting as an API.

01:02:16.300 --> 01:02:21.400
Instantly, instant scalable interface hosting, inference hosting for your machine learning

01:02:21.400 --> 01:02:23.120
models on serverless GPUs.

01:02:23.120 --> 01:02:27.280
There's a lot of, a lot of words there that mean interesting stuff about running and production.

01:02:27.280 --> 01:02:30.660
Kate, are you familiar with Banana or do you have other tools like this you think are neat?

01:02:30.660 --> 01:02:32.620
No, I cannot name anything on top of my head.

01:02:32.620 --> 01:02:35.380
Just like, you know, I always blank out the question.

01:02:35.380 --> 01:02:36.360
I'm like, what's the main thing?

01:02:36.360 --> 01:02:37.420
I have no idea.

01:02:37.420 --> 01:02:42.360
Google's the most amazing thing that ever happened, I think, to data scientists.

01:02:43.040 --> 01:02:47.780
Apart from like the original notebooks, because it's just like, it's right there with all your

01:02:47.780 --> 01:02:49.260
random files in the drive.

01:02:49.260 --> 01:02:51.800
You can just hook it up, test something quickly.

01:02:51.800 --> 01:02:53.840
So, but that's not related to this.

01:02:53.840 --> 01:03:00.420
What roles do places like Google CoLab and these other hosted notebook places serve in the

01:03:00.420 --> 01:03:01.100
production side?

01:03:01.100 --> 01:03:06.160
Like, I clearly see the value when I'm doing like some development and prototyping and trying

01:03:06.160 --> 01:03:07.020
to figure stuff out.

01:03:07.020 --> 01:03:11.460
But would you ever try to make that the final version in production?

01:03:11.720 --> 01:03:15.520
I'm not sure how it interacts with GCP production.

01:03:15.520 --> 01:03:17.640
So I tried it for my pet projects.

01:03:17.640 --> 01:03:24.160
It was very fun because I had to transcribe some random lectures and I decided, hmm, what

01:03:24.160 --> 01:03:25.580
if Google can do that for me?

01:03:25.580 --> 01:03:31.920
And I literally had it all in my drive and ran some code in CoLab, linked it to GCP and it

01:03:31.920 --> 01:03:32.800
gave me all the results.

01:03:32.800 --> 01:03:37.320
So that was like pretty neat because I really didn't have to do any kind of configuration,

01:03:37.320 --> 01:03:39.340
any kind of thought into it.

01:03:39.400 --> 01:03:41.500
So for pet projects, that was amazing.

01:03:41.500 --> 01:03:45.920
For production, Databricks cell books kind of work.

01:03:45.920 --> 01:03:51.240
Well, again, especially if you're in Azure, I'm not sure how it interacts with other, if

01:03:51.240 --> 01:03:52.320
it's as convenient.

01:03:52.320 --> 01:03:55.760
But with Azure cloud, it was, it was just amazing.

01:03:55.760 --> 01:04:00.600
It was like literally as soon as you have your credentials figured out, everything works in

01:04:00.600 --> 01:04:05.220
the background, you just do it as you would do it in a normal notebook and you can put

01:04:05.220 --> 01:04:06.300
it in prod, no problem.

01:04:06.300 --> 01:04:06.580
Yeah.

01:04:06.580 --> 01:04:07.000
Fantastic.

01:04:07.000 --> 01:04:07.960
That's a good recommendation.

01:04:07.960 --> 01:04:08.560
All right.

01:04:08.560 --> 01:04:10.780
I think we are just out of time.

01:04:10.780 --> 01:04:14.760
So I want to let you all get back to things before you got to run.

01:04:14.760 --> 01:04:17.120
But Kate, Vishnu, thank you for being here.

01:04:17.120 --> 01:04:19.860
Demetrius had to run off, but thank you to him as well.

01:04:19.860 --> 01:04:21.020
Final thoughts.

01:04:21.020 --> 01:04:26.420
Maybe people want to get started with the ML Ops community and maybe get their models in

01:04:26.420 --> 01:04:26.740
production.

01:04:26.740 --> 01:04:28.020
Give us your final thoughts.

01:04:28.020 --> 01:04:29.120
Kate, you want to start?

01:04:29.120 --> 01:04:32.740
I think the best way, if you're, if you're really just starting out, go and meet people

01:04:32.740 --> 01:04:38.500
in person and the ML Ops community or any other community that is available in your area

01:04:38.500 --> 01:04:43.580
will give you the right boost of motivation and also knowledge and just create a support

01:04:43.580 --> 01:04:49.380
network for you to be able to get through the blocks that you will definitely have on your

01:04:49.380 --> 01:04:49.720
path.

01:04:49.720 --> 01:04:51.880
So that would be my word of advice.

01:04:51.880 --> 01:04:53.480
Don't stay alone, isolated.

01:04:53.480 --> 01:04:54.720
Yeah, for sure.

01:04:54.720 --> 01:04:55.280
Vishnu?

01:04:55.280 --> 01:04:56.680
I think that's a great tip, Kate.

01:04:56.680 --> 01:05:02.420
I mean, to anybody starting out in ML Ops, I would say certainly join the community and

01:05:02.420 --> 01:05:06.460
search the answers to that question because it's been asked before in the Slack community.

01:05:06.460 --> 01:05:07.440
And there are a lot of great answers.

01:05:07.440 --> 01:05:10.920
I would also say like, you know, check out some established resources.

01:05:10.920 --> 01:05:15.320
Like I think a guy named Goku Mohandas has been like, you know, putting together a website.

01:05:15.320 --> 01:05:16.380
Made with ML.

01:05:16.380 --> 01:05:17.920
Made with ML is a great resource.

01:05:17.920 --> 01:05:21.900
Chip Huyan's Stanford class on machine learning systems design.

01:05:22.060 --> 01:05:24.640
Eugene Yan, you know, our Slack community.

01:05:24.640 --> 01:05:28.320
These are places that you can just pick up, you know, years worth of knowledge very quickly.

01:05:28.320 --> 01:05:29.660
It's organized for you.

01:05:29.660 --> 01:05:30.380
It's structured for you.

01:05:30.380 --> 01:05:32.280
So definitely make use of those existing resources.

01:05:32.280 --> 01:05:33.280
Thank you for being here.

01:05:33.280 --> 01:05:36.400
It's been really great to hear your experience and thoughts.

01:05:36.400 --> 01:05:37.260
Thanks for having me.

01:05:37.260 --> 01:05:37.860
Thanks for coming by.

01:05:37.860 --> 01:05:38.760
Thanks for having me too.

01:05:38.760 --> 01:05:39.320
My pleasure.

01:05:39.800 --> 01:05:43.180
This has been another episode of Talk Python To Me.

01:05:43.180 --> 01:05:45.000
Thank you to our sponsors.

01:05:45.000 --> 01:05:46.600
Be sure to check out what they're offering.

01:05:46.600 --> 01:05:48.020
It really helps support the show.

01:05:48.020 --> 01:05:50.100
Take some stress out of your life.

01:05:50.100 --> 01:05:55.580
Get notified immediately about errors and performance issues in your web or mobile applications with

01:05:55.580 --> 01:05:55.880
Sentry.

01:05:55.880 --> 01:06:00.880
Just visit talkpython.fm/sentry and get started for free.

01:06:00.880 --> 01:06:04.460
And be sure to use the promo code talkpython, all one word.

01:06:04.940 --> 01:06:09.720
For over a dozen years, the Stack Overflow podcast has been exploring what it means to be a developer

01:06:09.720 --> 01:06:13.460
and how the art and practice of software programming is changing the world.

01:06:13.460 --> 01:06:17.900
Join them on that adventure at talkpython.fm/Stack Overflow.

01:06:17.900 --> 01:06:19.740
Want to level up your Python?

01:06:19.740 --> 01:06:23.780
We have one of the largest catalogs of Python video courses over at Talk Python.

01:06:23.780 --> 01:06:28.960
Our content ranges from true beginners to deeply advanced topics like memory and async.

01:06:28.960 --> 01:06:31.620
And best of all, there's not a subscription in sight.

01:06:31.620 --> 01:06:34.520
Check it out for yourself at training.talkpython.fm.

01:06:34.520 --> 01:06:36.440
Be sure to subscribe to the show.

01:06:36.440 --> 01:06:39.220
Open your favorite podcast app and search for Python.

01:06:39.220 --> 01:06:40.520
We should be right at the top.

01:06:40.520 --> 01:06:45.700
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

01:06:45.700 --> 01:06:49.900
and the direct RSS feed at /rss on talkpython.fm.

01:06:49.900 --> 01:06:53.320
We're live streaming most of our recordings these days.

01:06:53.320 --> 01:06:56.720
If you want to be part of the show and have your comments featured on the air,

01:06:56.720 --> 01:07:01.160
be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

01:07:01.160 --> 01:07:03.000
This is your host, Michael Kennedy.

01:07:03.280 --> 01:07:04.300
Thanks so much for listening.

01:07:04.300 --> 01:07:05.460
I really appreciate it.

01:07:05.460 --> 01:07:07.380
Now get out there and write some Python code.

01:07:07.380 --> 01:07:07.900
Bye.

01:07:07.900 --> 01:07:08.240
Bye.

01:07:08.240 --> 01:07:08.380
Bye.

01:07:08.380 --> 01:07:28.120
Thank you.

