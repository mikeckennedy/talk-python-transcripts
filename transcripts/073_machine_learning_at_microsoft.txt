00:00:00 In this episode, we catch up with David Crook, a developer evangelist at Microsoft.

00:00:03 He is a co-organizer for the Fort Lauderdale Machine Learning User Group and is involved

00:00:09 in many more user groups and meetups. You'll hear about some really cool projects where

00:00:12 they're using Python and TensorFlow to work on simple things like growing more food to help feed the world. This is Talk Python to Me,

00:00:19 episode 73, recorded August 25th, 2016.

00:00:23 Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries,

00:00:54 the ecosystem, and the personalities. This is your host, Michael Kennedy. Follow me on Twitter

00:00:58 where I'm @mkennedy. Keep up with the show and listen to past episodes at talkpython.fm

00:01:03 and follow the show on Twitter via at Talk Python. This episode is brought to you by Hired and now

00:01:09 Capital One. They both have great offers for Python developers, so please check out what

00:01:14 they're offering when you hear their spot. It helps support the show. David, welcome to the show.

00:01:19 Hi, Michael. It's good to be here. Yeah, it's great to have you here. I'm super excited to talk about

00:01:23 all the cool machine learning and Python stuff you guys have going on over there at Microsoft and in

00:01:28 your little area in particular. But before we get to all those stories, how did you get started in

00:01:33 programming Python? So Python in particular is an interesting one because I resisted it for a long

00:01:40 time. Let me step back a bit and just start. Where did I start with my parents were like, you're going to

00:01:46 go to college and you're going to be a programmer. And I was like, I want to be an archaeologist, not a

00:01:50 programmer. And then they kind of said, well, we're not going to pay for college if you don't

00:01:55 do programming. So I said, all right, I guess I'll do it. So it really got kicked off around college.

00:02:00 And I started a video game club. I did a lot of XNA programming.

00:02:06 That's cool. So XNA, just for people listening, XNA was like a high level game programming environment

00:02:12 that you could write games for both Windows and Xbox and C#, right? But it abstracted a lot

00:02:18 of the game engine stuff, right?

00:02:20 Oh, yeah. Yeah. And when you're just getting started into programming, like you don't want to have to sit

00:02:24 there and figure out how to do like different swaps with the GPU and all that kind of stuff. It was just

00:02:30 a really good way to get into programming, throw it on your Xbox and be able to have something that's

00:02:38 useful and like a lot your own. So, you know, like if you're doing a lot of game mods, you were kind of

00:02:45 stuck with whatever you had in that environment. XNA was just whatever you want to do and gave you just a,

00:02:50 you know, high level abstraction on it. So that was a really cool start.

00:02:54 Awesome. So you had a group in college doing that, huh?

00:02:58 Yeah. You know, I didn't really know how to code that much. So I discovered that if I surrounded

00:03:03 myself with a bunch of people who could, that I could hopefully learn from them. So I formed a

00:03:09 little group and basically recruited a bunch of people to teach me in the guise that I was teaching them.

00:03:15 How interesting. You know, I think that's really common and really effective. I 100% agree with you

00:03:21 that surrounding yourself with programmers is almost key to making you a programmer. You can do it just

00:03:27 on your own, but it's, it's really not the same experience. And I don't know very many other groups

00:03:32 that are like that. Like do lawyers say, Hey, let's all just get together after work and just talk about

00:03:37 law, like passionately, you know, maybe, maybe some, I mean, there's plumbers don't necessarily do that.

00:03:45 Right. I know plumbers have a real craft and expertise and they might have apprenticeships,

00:03:50 but this, like, we're so excited. We want to just get together and make everybody better. It seems

00:03:55 fairly unique to programming. And I think that's one of the reasons it's so awesome, right?

00:04:00 Yeah. You know, I think there's a couple of trades maybe where they do that kind of thing. Like,

00:04:04 my uncle is a, he's in construction and does industrial air conditioning. And I guess they

00:04:12 have like a builder's guild, but it's not nearly like what you see in the tech ecosystem where you

00:04:17 can just like hop online and be like, I want to go to some really obscure group in my area. And bam,

00:04:22 you found it. It's like, holy cow, that exists.

00:04:25 Yeah, absolutely. And you actually have a big hand in those existing in Florida, which we'll get to,

00:04:30 but I interrupted your story about, moving on towards Python, but your path there.

00:04:35 Yeah. Yeah. So I started, it was a lot of C# development and then, you know, schools like,

00:04:40 we're going to teach you this Java thing. I graduated, worked through Microsoft for a while,

00:04:45 and then, started discovering this machine learning. IOT space was a really neat place to get

00:04:51 into. And, I keep seeing this Python thing pop up over and over again. I was like,

00:04:55 Oh, it's another language. I already know like seven. I don't want to know another one. Let's

00:04:59 see how long I can put it off for. So I think I put learning Python off for about four years until

00:05:06 like recently I finally broke down and said, all right, that's the last library hits the, it's the

00:05:13 straw in the camel's back. I better just break down and learn this thing. And, so I started

00:05:20 picking it up about two or three months ago, just kind of slowly to just explore and see.

00:05:26 And, once I kind of got in, it was like, you know, a lot of this is really familiar.

00:05:32 It's not really that different from anything else. And tactically it's a little print, but you know,

00:05:37 a lot of the same kind of stuff, but I get all these other libraries and capabilities along with it.

00:05:42 So it's been a really nice, transition, and a lot less painful than I thought it would be.

00:05:49 Yeah. I think there's a lot of myths about Python that are out there. And once you get into it,

00:05:55 it's, it's a little different than maybe what the preconceived notions about it might be.

00:06:00 You know, I think some of the myths were like, you know, I was challenged with a couple of them.

00:06:04 One was like the performance thing, like, Oh, Python's not performant enough or whatever.

00:06:08 And I was like, I was like, well, at the end of the day, my performance is mostly, like in web,

00:06:14 like stateless servers, or it's going to be from GPU compute. Well, it has great GPU libraries.

00:06:21 And then, okay. I don't know if flask has the most performance, but it's a stateless web server.

00:06:26 So I can just always throw more servers at the problem. So I'd rather just have something that

00:06:31 does everything and reduce the number of skills I need and throw servers at it.

00:06:35 than, fight with trying to learn something else.

00:06:38 Yeah, that's a good point. I mean, the performance story around Python is not straightforward. I think

00:06:46 it's pretty good in a lot of areas. And there are certainly some areas where

00:06:49 other languages like you were coming from .NET, for example, where it is better over there. But,

00:06:56 you know, for example, I did a conference talk that was trying to compare working with a

00:07:03 NoSQL schema-less database and saying, should use a dynamic language or a statically typed language.

00:07:08 And I chose C# and Python as the two comparison languages. And the Python web app was actually

00:07:14 quicker end-to-end from the browser perspective than C#. So I think part of the story is

00:07:20 the C# code surely ran faster because it's JIT compiled, right, to machine instructions. But

00:07:26 the framework was doing less so that it actually was overall faster, which is

00:07:33 part of that interesting trade-off. Like, you wouldn't think that it would be, but there's

00:07:38 just so many factors that it's hard to say. So yeah, that's cool. I think most of the time it's

00:07:42 good, but you've got to just test it, right?

00:07:44 Yeah. And from what I've seen most of the time, it's just a shot in the dark. You know, you don't

00:07:48 really know what it's doing under the hood anyways. So it's like, you just cross your fingers and

00:07:52 hope. And, you know, even in the other worlds, I end up like, even in C#,

00:07:57 eventually you're like, okay, now you need a West Coast server and an East Coast server. Oh no,

00:08:01 we've got a bunch of people coming from Texas. Let's throw a central server in there. So you're

00:08:05 doing it anyways. You might as well just pick what is, gets the job done the most with the

00:08:10 least number of headaches. And then that'd be in Python because you get all the nice machine

00:08:15 learning tools and, and you get web servers and you get desktop and, the documentation

00:08:22 is just absolutely phenomenal. Yeah. It's, it's a fantastic ecosystem. So before we move on to some

00:08:29 sort of what you're up to nowadays, I did want to ask you, since you are sort of fresh to Python,

00:08:35 what was surprisingly easy or, or nice about the language and what gave you challenges? You said a

00:08:42 little bit, but like, give me the summary of your, your learning experience here while it's still fresh

00:08:48 to your mind. Yeah. So, I've got a customer project that I'm working on now. so this is

00:08:54 like the first real, like we're going to do something production level with it previously till about a

00:08:59 couple of weeks ago, it was all just dipping my toes in and now we're going full on production level.

00:09:05 Some of the easiest things was, Flask. Like I come from, ASP.NET MVC web API background and like Flask

00:09:15 is basically just like that with like a different syntax. And I was like, this is phenomenally easy. Like

00:09:21 the authentication and token stuff is all very similar. The way that you do the headers and decorators is all

00:09:28 very similar. There's some nice things like Python doesn't really seem to care what kind of object you return.

00:09:34 So from the same function, I can return like some ambiguous object one and some other completely

00:09:40 different ambiguous object. And I'm just, that's really neat. I didn't think that was something that,

00:09:46 you know, C#. I don't know how you do that. Usually you do a wrapper with like generic types and,

00:09:52 you know, C# six made that easier, but yeah, there's so much ceremony in the static languages,

00:09:57 right? Even the nice ones. Yeah. You know, so that was a really nice thing.

00:10:03 Some of the challenges really is just kind of getting used to some of the tooling around,

00:10:10 Python. So I spent like forever trying to figure out which editors I wanted to use and

00:10:14 how packaging worked. it took me a while to just like, kind of just conceptualize packages

00:10:21 because the way packages are in Python are very different because it acts more like a,

00:10:25 it's like a script. It's not like a compiled language. So you don't have like different projects

00:10:30 libraries. You have packages, which literally are just script files with initialization to it. And

00:10:36 there's no, there's reduced ceremony and how that happens. So even with the reduced ceremony,

00:10:42 it's just not what I was used to. So coming to it from more of the statically typed and,

00:10:47 compiled language background was like just a weird transition and took a little bit of mental getting

00:10:53 over. Yeah. It's interesting when you're learning stuff that somewhat the challenges of learning

00:10:59 things, programming techniques and so on has to do with, is the thing you're learning actually hard?

00:11:05 And the other one just has to do with your preconceived notions of how things should be done.

00:11:09 Right? Yeah. Yeah. I was trying to like figure out how to stick, extra libraries. And I was doing a,

00:11:16 just doing all this extra abstraction that I just didn't need to do. I was like, okay,

00:11:21 we're going to do some dependency injections that I can swap out my backend. Cause like right now I'm

00:11:27 pointed to some local files, but I want to swap out with the actual database. And right now they're on

00:11:31 SQL, but they're probably going to go to Mongo. So I needed to figure out how to easily swap that out.

00:11:37 just, I think it ended up just being easier to not use something like dependency injection because

00:11:43 the abstraction and, Python is almost, it wasn't quite as necessary as it was before, I guess is

00:11:50 what it seems to be boiling down to. I'm still working through that problem specifically though.

00:11:54 Yeah. It's interesting. If you look at the design patterns that typically were created,

00:11:59 decorator state, all these various design patterns, and you look at them for static languages,

00:12:05 there's so much ceremony and formalization. And then you, you look at them in the Python world and

00:12:10 they're usually, you know, a couple of lines, like, Oh, that's all it is. It's nice, but it's a mind

00:12:15 shift for sure. Yeah. There was one thing that I thought of that actually was more of a challenge.

00:12:19 So I have a fairly hefty F sharp background and, I really like functional composition and

00:12:27 pipelining and, there wasn't anything out of the box, especially with like a data manipulation

00:12:33 pipelines. I wasn't finding very much out of the box for that in Python. So there's the pandas package,

00:12:39 but it wasn't really set up so that I could kind of do functional composition easily, but using some

00:12:46 of the decorators and kind of making up this infix thing. I'm not really sure how exactly it works. I got

00:12:52 it to somehow work, but it gives me functional composition. It's just, instead of being out of the

00:12:58 box, I had to kind of write it and I had to fight with it a little bit to make it happen.

00:13:02 And there's some magic behind the scenes that I don't fully understand that somehow I got it to

00:13:07 work. Whereas like in like, R has like the D play R and mag reader packages and F sharp just has

00:13:15 it out of the box. Python, a little bit of a fight, but it works. And now I get what I wanted.

00:13:19 Yeah. Okay. Really nice. Really nice. You work at Microsoft doing some interesting stuff and you

00:13:25 said you kind of live inside the company, but also outside in a little bit of a bubble. So maybe tell

00:13:31 us what do you do there?

00:13:32 Yeah. So I'm a developer evangelist at Microsoft and, you know, the easiest way to think of what

00:13:39 a developer evangelist is and does is that we spend about 50% of our time focusing on creating a healthy

00:13:46 technology ecosystem in our area, typically focused around what we like to do. so I do IOT and

00:13:53 machine learning. So you'll see there's a very healthy IOT machine learning ecosystem in South

00:13:58 Florida. And then the other 50% of the time is spent working on customer engagement. So finding, some

00:14:06 really cool stuff that, folks are working on in the area and just help them be successful with it.

00:14:12 And it's interesting cause we don't charge any money. We're just focused on ensuring that people

00:14:16 are successful with our technology and, getting insight from that and delivering it back to the

00:14:22 product group. So it's very much a field position. And, you know, that said, I don't live in Redmond.

00:14:29 I live in South Florida and, there's a very different kind of view because I'm not like at the

00:14:36 Microsoft office 24 seven. I'm spending more time with people who are like outside of that world.

00:14:42 You know, literally, I think we're about 3000 miles away or something like that. Yeah. You have to go

00:14:48 diagonally across the entire United States.

00:14:50 Yeah. That's about the maximum distance you can get in the continental United States. I think.

00:14:54 Yeah. That was kind of a neat, neat thing for me. It was as far away from HQ as I can get without

00:15:00 leaving the country. So it's a, it's a very interesting perspective because you get to see a

00:15:05 lot of the inner workings of Microsoft without necessarily being a part of those inner workings

00:15:11 24 seven. So it gives you a very different perspective on, kind of what like outside

00:15:18 of Microsoft is doing. And you can, feed that back into Microsoft so that we can better build tools

00:15:24 and technologies that are more aligned with what folks are doing. So if you see like, Hey,

00:15:30 this technology, whatever it is, doesn't seem to work or meet exactly the expectations because really

00:15:36 they're doing this. It gives you the perspective to provide that insight back.

00:15:41 Yeah, that's cool. And we can definitely talk more about the shift in perspective at Microsoft around

00:15:47 these types of things a little bit, but it, I think it's the short version for now is it's an

00:15:52 interesting, it's an interesting change and those things are way more possible than they used to be.

00:15:58 Right.

00:15:58 I'm calling it the Satya decade or Satya era of Satya. It's very different. I get to have an Android phone.

00:16:07 Exactly. That's so Satya Nadella, the new CEO has made a lot of, changes on how that works,

00:16:13 right?

00:16:13 Yeah. It's, it's very interesting. It's like, he's, he keeps using the term, customer obsessed.

00:16:21 Like he wants us to be obsessed with our customer and just focus on the customer 110%,

00:16:27 no matter what it is. And just make sure that they can be successful with what they want to do

00:16:32 using what they want to use on the Microsoft platform. And it's a very different mentality

00:16:38 shift than, what used to be in place.

00:16:41 Yeah, absolutely. So you said you work with, IOT a little bit, internet of things.

00:16:47 What, what do you guys have going on there?

00:16:48 Yeah. So this has been a really big space for us, lately. we have this whole IOT suite,

00:16:55 which is there's primarily cloud hosted services, but we have some on-premise offerings, but it's all

00:17:02 about being able to pump as much data as you possibly can into the cloud and do meaningful things with it.

00:17:10 So there's a variety of different projects that I've seen where we do this, everything from

00:17:16 collecting telemetry from pipelines to creating intelligent teddy bears to there was a water flow

00:17:23 analysis project and intelligence skateboards, just all sorts of cool stuff.

00:17:30 Yeah. That sounds really awesome. And then what does machine learning have to do with it?

00:17:33 A lot of that's around delivering, value back through the data that you collect through

00:17:38 IOT devices. At least my focus area is. So, you know, if you're collecting telemetry, you have maybe

00:17:46 pH and, humidity temperature, and you might have vibration. It's okay. You've collected all of this

00:17:55 information. You're streaming it all up into the cloud, but what do you do with it? And, machine

00:18:01 learning will help you recognize various patterns and attributes to that sensory data so that while the

00:18:08 data is actually in motion in the real-time data pipeline, you can actually execute machine learning

00:18:15 algorithms against that in motion data and surface interesting things to be aware of. So for example,

00:18:23 if you see a pattern that looks kind of like, Hey, there's about to be a leak in your pipeline, you can

00:18:29 actually recognize that pattern in the data pipeline and then put a message on a, on a data queue for like a

00:18:37 worker role to pick up and send SMS text messages to the engineers and the executives saying, dude, your pipe's about

00:18:45 to explode. You need to go like, take care of us now.

00:18:48 Yeah, that's really cool. So that's, that's really different than, oh, this is just outside the parameters.

00:18:53 But, you know, something instead, like the last four times we saw the pipe books blowed, you know, it kind of did this.

00:19:01 It looks a lot like this.

00:19:02 And the machine says, you know, that looks a lot like something I've seen before. And you didn't like it last time. Go check it out.

00:19:19 This portion of Talk Python To Me is brought to you by Hired. Hired is the platform for top Python developer jobs. Create your profile and instantly get access to 3,500 companies who will work to compete with you.

00:19:30 Take it from one of Hired's users who recently got a job and said, I had my first offer on Thursday after going live on Monday and I ended up getting eight offers in total. I've worked with recruiters in the past, but they've always been pretty hit and miss. I tried LinkedIn, but I found Hired to be the best. I really like knowing the salary up front. Privacy was also a huge seller for me. Sounds awesome, doesn't it? Well, wait until you hear about the sign-in bonus. Everyone who accepts a job from Hired gets $1,000 sign-in bonus. And as Talk Python listeners, it gets way sweeter.

00:19:58 Use the link Hired.com slash Talk Python To Me and Hired will double the signing bonus to $2,000. Opportunities knocking. Visit Hired.com slash Talk Python To Me and answer the door.

00:20:17 That's cool. I've thought about that for software, right? Like Netflix actually uses machine learning to monitor their servers and their apps in production. But that seems to me like really, I don't know, really clear and cut like what it is you're processing. But for pipes and all sorts of physical things, that's really cool.

00:20:35 Yeah, I really wanted to spend some time like getting out into the physical world a bit so that I could see it. Like I really want to like, you know, everything that we do as software engineers is virtual all the time. And I wanted to see, you know, is there a way to create a stronger relationship between the physical and the virtual and kind of pass information between those two worlds in a meaningful way that delivers value to our customers?

00:21:01 And IoT and machine learning together really is a powerful way to do that. And it's neat, especially with like a lot of the stuff that's coming out. Like, I don't know if anyone watches GPU conference, but NVIDIA just came out with this RoboCup dev car. Literally, it's like a Formula One race car. That's like a self-driving car platform for like Formula One race cars.

00:21:25 Yeah, I just did hear that they just came out with CPU, GPU type thing for cars. That's really cool.

00:21:33 Yeah, it's, you know, and seeing that kind of technology come out is absolutely amazing. So that will be an example of something that's really powerful that you can stick on any number of sophisticated devices. And you will collect a lot of the information and video feeds from that device that it's computing, stream that up to the cloud.

00:21:57 So you can optimize your algorithms, your self-driving car algorithms, your image recognition, what have you. And then basically, you get back a matrix of numbers, huge matrices of numbers, and you just shove that back down onto the device.

00:22:12 And it's a really neat pipeline, because you, I don't know, it's just so cool to see that happening.

00:22:17 Yeah, it is really cool to see those dedicated things. I mean, GPUs used to be just for graphics, right?

00:22:24 But now they're for so much more. And you said you're doing some stuff with GPU wrappers.

00:22:28 But it's been a little while since I've talked about this whole programming logic on GPUs and why you might care. But maybe give people, like new listeners, a quick summary. Like, why would people program GPUs over just like regular code? Like, what's the performance story there?

00:22:44 Yeah, so it's, I'm taking a look at the Microsoft Cocos database as an example. So you can go look at this. I think it's mscocos.com, or if you just like Bing, Microsoft Cocos database, you'll find it. You can Google it, too. I'm sure you'll find it both ways.

00:23:02 Anyways, it's an image recognition database that you can use. And there's a challenge out there. Anyways, what's interesting about images, especially if you're talking like 1080 by 1920, literally, to get the number of features or columns that you're going to need to compute against, you multiply 1920 times 1080. That's the number of pixels. And if you have an RGB image, you have three channels. So now multiply that number by three.

00:23:27 You're upwards in the 5 million representations of an image. So, and each one of those pixels is potentially important.

00:23:35 Right. And how many frames a second, right?

00:23:37 Yeah. So if you're doing 60 frames a second, and you have one second, you just generated 60 times whatever that giant freaking number was. And that's, that's one second worth of information. Now, out of that, you'll probably extract a few key images and compare against that.

00:23:54 But, you know, at the end of the day, you're talking huge quantities of compute data. And when you think about a GPU versus a CPU, you're doing a single mathematical computation. And on a CPU, you have, you have one. So you can do one computation at a time. Maybe you have six CPUs in like 12 virtual processors. So maybe you can do 12.

00:24:18 Well, on a GPU, I just built my own dev box. I've got the new Titan X. Each one of those has 3,100 processors. So on my dev box that I have, I have about 6,000 processors.

00:24:35 So with each one of those, I can actually do a numerical computation against each pixel, literally 6,000 times more and faster than a CPU because I have 6,000 processors instead of one.

00:24:51 Yeah, that's insane. When you think about the parallelism differences there, right?

00:24:54 Yeah. So when you're thinking GPU versus CPU, it's how, how are you paralyzing your workload and what is it specific for? And the other things are like a GPU has its own internal memory.

00:25:06 So each one of my GPUs has 12 gigabytes of internal memory. So I can load, because I've got two, I can load 24 gigabytes of image data onto those.

00:25:17 And I have them set up with the standard SLI bridge. So it's basically a video, like a super awesome video game box.

00:25:24 One of the benefits of deep learning is you can play awesome video games on your workstation.

00:25:30 But you transfer, you load the data on and you transfer the model back and forth over the SLI bridge.

00:25:36 And it allows you to compute so much faster because you have the onboard GPU memory, which is typically GDRG 5X.

00:25:48 I don't even know.

00:25:49 It's the one with the 5 and the X in it, as opposed to DDR4, which is just a much faster memory.

00:25:56 So it's a more performant way to do large quantities of data that have excessive numbers of features.

00:26:04 Whereas like you might use something like Spark if you have large quantities of data, but maybe not as much parallelism in each computation task.

00:26:15 Like in an image, you know, you have 1920 times 1080 times three number of computations per observation.

00:26:23 Whereas like in business data, you might have upwards of 200 computations, maybe a thousand computations per observation.

00:26:32 Right. That makes sense.

00:26:33 So how do you program these GPUs? Can you do that from Python?

00:26:38 You can.

00:26:38 So there's two libraries that I was evaluating.

00:26:42 There's one that's made by Microsoft and there's one that's made by Google.

00:26:46 Both are open sourced.

00:26:48 The Microsoft one is CNTK or Computational Network Toolkit.

00:26:53 I don't know if the Python wrappers are available yet.

00:26:57 They should be sometime.

00:26:59 You have to check their Git repo.

00:27:00 I ended up not using that one.

00:27:02 I went the Google route.

00:27:03 I work for Microsoft and I get to use Google compute graphs.

00:27:06 It's awesome.

00:27:07 Welcome to the Satya era.

00:27:10 So I'm using TensorFlow.

00:27:11 It works wonderfully on Azure.

00:27:13 It works wonderfully on my box.

00:27:15 So I get to use Google technology on the Microsoft platform.

00:27:19 So that's kind of how I get to use it with work.

00:27:22 But the neat thing about TensorFlow is that you get to use Python and it has interactive and batch execution.

00:27:31 So, you know, if you're just getting started into it and you're like, I don't know how this thing works.

00:27:36 Well, pop open a console and start like having at it in interactive mode and outputting some stuff and just see what the heck happens and poke around with it.

00:27:46 Whereas like a lot of the other compute frameworks require you're back to almost like compilation style where you generate your full graph.

00:27:56 Then you more or less compile it and then execute it.

00:27:59 And it shoots back really cryptic errors when something goes wrong.

00:28:03 I see.

00:28:03 So like you would write it in, let's just say, Python and then compile it to like shader language or something like that.

00:28:10 You send over to the GPU and then get the answer back.

00:28:12 Yeah.

00:28:13 Yeah.

00:28:13 That's kind of how most of them work.

00:28:15 And TensorFlow has that capability as well.

00:28:17 The benefit to doing it that way is that you actually take full advantage of everything that it does behind the scenes for you.

00:28:25 Whereas when you run TensorFlow in interactive mode, you're just going to thrash your performance to you might as well be doing it on a CPU.

00:28:32 But the benefit is that you can experiment and learn in interactive mode and then just swap your flag back to batch mode.

00:28:40 And then you get all the performance goodness.

00:28:42 Okay.

00:28:42 That's really awesome.

00:28:43 Yeah.

00:28:44 So if you're doing machine learning or just real computational stuff, right?

00:28:48 TensorFlow sounds great.

00:28:49 Yeah.

00:28:50 And it supports multi-GPU, multi-node, just really cool stuff.

00:28:56 And I'm pretty excited.

00:28:58 It's really expensive to buy GPUs, but now you get these rentable GPUs.

00:29:02 Azure just went into private preview with the N-series and AWS has some virtualized ones.

00:29:08 And you can get as many nodes as you want.

00:29:10 Learn TensorFlow.

00:29:12 And if you can't do it on your own box, just rent some GPUs.

00:29:16 They're usually like $2 an hour or so for a GPU box on the cloud.

00:29:20 Yeah.

00:29:20 Maybe it was $2 a minute.

00:29:22 I can't remember if it was $2 a minute or $2 an hour.

00:29:24 I think it's $2 an hour.

00:29:25 That's pretty awesome.

00:29:26 Yeah.

00:29:26 Really, it's helping democratize kind of scientific hyperscale computing.

00:29:32 The cloud is just an absolutely phenomenal thing.

00:29:35 Like, you know, before, like my workstation, I'm lucky to have had a lot of success in my

00:29:40 career and my life.

00:29:41 So I can go buy like a $5,000 workstation for work.

00:29:45 That's not necessarily possible for everybody.

00:29:47 But in the cloud, you just go grab a GPU box for a few hours and have a script that turns

00:29:53 it on and turns it off for you.

00:29:55 That's awesome.

00:29:55 Yeah.

00:29:56 I mean, even if you work at a company where they would buy you a $5,000 GPU box, if you

00:30:01 have no idea if it's actually going to solve your problem, spending $10 to find out and then

00:30:06 buying the $5,000 machine is really a nice possibility rather than, you know, leaping in and seeing if

00:30:12 it's going to work and maybe it won't.

00:30:14 Yeah.

00:30:14 And yeah, I think there's other benefits to having the cloud GPUs as well.

00:30:18 Mostly that they're even faster than mine.

00:30:20 So like the, I don't, I don't, I'm not terribly familiar with AWS is on frame what they have,

00:30:26 but ours we've got, you can get four of the latest ones that Nvidia has.

00:30:30 And that's the one that's $2 an hour and you get direct hardware access is like, okay, so

00:30:35 it was five grand for me to get like a box with two GPUs and they're not even the top of

00:30:40 the line or the Titans.

00:30:41 They're not the Kepler series.

00:30:42 Whereas I can go and get the Kepler series and I got four of them and all the backing

00:30:46 hardware at $2 an hour.

00:30:48 I just say, it's just, my mind is getting blown with what you can get and what price you can

00:30:54 get it for.

00:30:55 We definitely live in a special time, don't we?

00:30:57 Yeah.

00:30:57 I'm feeling a little spoiled about that.

00:30:59 So you talked about your career and you said maybe it's a good time to touch on that.

00:31:03 You said that you had a bit of a rough start in college and the contrast between college

00:31:12 career and professional programmer career are really different.

00:31:15 You had some great tips there.

00:31:16 Yeah.

00:31:17 Yeah.

00:31:17 So I was pretty much your typical college student, went in and was like, I don't want to

00:31:23 do programming.

00:31:24 And parents were like, you're going to do programming.

00:31:26 And it's like, okay, well I'm going to be rebellious while they do programming.

00:31:29 So I was pretty much throwing parties all the time and, you know, doing all that kind of

00:31:34 stuff.

00:31:34 And, was like, I had a super low GPA.

00:31:37 Like it was my senior year.

00:31:39 My GPA was like 2.4 and you needed a 2.6 to graduate.

00:31:44 And I was like, crap, I've got three years behind me with a 2.4.

00:31:48 I need a minimum 2.6.

00:31:50 I can get out of here.

00:31:51 Yeah.

00:31:51 It's a little stressed on the last year.

00:31:53 And, man, I wish I had focused and took advantage of the opportunity and seeing it

00:31:58 for what it was when I had it, but, that's not what I did.

00:32:01 So, you know, I had, I had to deal with that situation.

00:32:04 So I started a bunch of groups like, you know, the game dev group, study groups, programming

00:32:11 groups.

00:32:12 I had about three different groups that I was managing and running to just hopefully surround

00:32:18 myself with enough experts that I could pass.

00:32:20 And I made straight A's the final, the final, year, I was able to get, I think like

00:32:26 a two seven GPA, which was enough to graduate college with my major.

00:32:30 And, it created a really difficult hiring experience, but luckily, like I did the interview

00:32:37 for Microsoft and they didn't ask me what my GPA was.

00:32:39 They, they wanted to ask what I did and what I liked doing.

00:32:42 And luckily that last year of college, I was like hacking on, like I had a motorcycle with

00:32:47 like a performance module that you could like, hack into and make your motorcycle go faster.

00:32:52 So I, hacked into that thing and like did all sorts of craziness to my motorcycle

00:32:58 and, made a bunch of video games.

00:32:59 It was like, here's what I got.

00:33:01 Microsoft is more interested in what I could do and not what my GPA was.

00:33:05 So I got super lucky that they never asked that question and, was able to get a job.

00:33:10 That's really cool.

00:33:11 You know, I mean, I've been in hiring roles at companies I've been at and we, we almost

00:33:17 didn't care what degree you had.

00:33:18 If you had a PhD, it gave you a little more credibility than, you know, a college degree,

00:33:23 a little bit more, which gave you a little more credibility than no degree.

00:33:27 But it really was, what can you do?

00:33:29 What have you done?

00:33:29 Do you have proof of that?

00:33:31 And I think that's also pretty neat about programming.

00:33:33 Yeah.

00:33:34 And that was actually Microsoft was the first company I interviewed with that was like that.

00:33:38 The issue I had was getting just into the first interview.

00:33:43 You know, you submit your resume and they have like these processors that go and say,

00:33:47 not three, oh, not three, oh, not three, oh, not three, oh.

00:33:49 So you'd never even gotten a phone call.

00:33:52 Like, actually it was a developer evangelist who showed up at my school.

00:33:55 I just talked their ear off and I gave them my resume.

00:33:58 It was like, just read it.

00:33:59 Just shove it.

00:33:59 I don't care.

00:34:00 Just do something with it.

00:34:01 Make sure you call me.

00:34:03 I don't care.

00:34:04 And that happened.

00:34:07 Whereas a lot of the ones where I was applying online, I didn't make it past that automatic

00:34:11 filter.

00:34:11 You know, they, there's a lot of like, you know, you get however many students graduating

00:34:18 out of college, you get to process it through it somehow autonomously.

00:34:21 So I think that's what they did.

00:34:23 Yeah.

00:34:23 That definitely makes sense.

00:34:25 Well, very cool.

00:34:26 And since you got to Microsoft, you said your career is really accelerated.

00:34:30 You had some, some process to make that happen.

00:34:33 You want to share it?

00:34:34 Yeah.

00:34:34 So I think the big thing was I had this kind of, oh shit moment in college and, you

00:34:41 know, now, now I'm out.

00:34:42 I actually got married and it was like, you know, now I've got a family and failure is not

00:34:48 really an option at that point.

00:34:50 I had to come up with a process and a method to kind of ensure I was successful and never

00:34:57 encountered like that.

00:34:58 You're on the edge of failure scenario ever again.

00:35:01 That's like the scariest place to be.

00:35:03 And so a lot of it boiled down to focusing and working really, really hard on specific areas

00:35:10 and building a community around those areas that I was actively engaged in, which is kind

00:35:18 of abstract, but I'll, I'll give you a consensus.

00:35:21 When, when I, first joined Microsoft, I came in as a consultant, doing development

00:35:26 operations and, you know, I didn't know the first thing about it.

00:35:29 So I went to a local user group.

00:35:34 which is a .NET user group and started talking about TFS and application lifecycle management

00:35:40 and source control and best practices and built a group up.

00:35:45 We got to a few hundred there and, it was once a month, sometimes twice a month meeting

00:35:52 with other professionals in the area to a really zero in on this one specific thing.

00:35:57 The main thing I learned was that like, if you were to be successful, a lot of people can

00:36:02 do different things very poorly, but very few can do one thing extremely, extremely well.

00:36:08 So if you want to be the one who gets the phone call, you want to be the best of the

00:36:12 best of the best.

00:36:12 Of course, you're going to pass up opportunities, but you're going to be the one who gets the

00:36:18 most opportunities in that specific area.

00:36:21 And if you look at programming, there's so much opportunity out there that it's better to

00:36:25 be the one that everybody thinks of, oh, I need to do like this type of server.

00:36:30 Let's call David.

00:36:32 So once I kind of understood that focus on that very specific thing and be the best in

00:36:40 like North Carolina at it, that's when it kind of clicked.

00:36:44 And I started seeing a lot of success in my career because servers would go down, you know,

00:36:49 as they always do, and they have to call somebody and it could be a critical scenario.

00:36:53 So who do they call?

00:36:54 Do they call the guy who's like a web developer, DevOps, TFS, open source, big data guy, or do

00:37:02 they call the person who is the best in class at that one type of server?

00:37:06 So I actually saw a significant increase in my billable hours being utilized once I focused.

00:37:14 And a lot of that was enabled by focusing on the community and trying to see success with

00:37:19 that community and growing it into myself.

00:37:22 That's really awesome.

00:37:23 I totally agree with you that specialization is key.

00:37:27 I mean, you need to have enough broad skill that you can get along with general situations,

00:37:32 but there needs to be a thing that is your specialty, right?

00:37:36 And if you pull that off, you can really, like you said, you get the invitations for the conference

00:37:41 talk.

00:37:41 You get the call when people need help.

00:37:43 When people Google something, they find you.

00:37:45 It's just, it unlocks opportunity.

00:37:47 And that doesn't need to be a broad specialty.

00:37:50 It could be something fairly niche.

00:37:53 Yeah.

00:37:53 Like if you're the best dude at charting or the best girl at charting, like who are they

00:37:58 going to call for charting?

00:37:59 How many charts do people need to draw?

00:38:01 Like millions of charts.

00:38:02 There's charts being drawn all the time.

00:38:04 So if you're just the best charter in the world, you'll do very successfully.

00:38:08 And I think you honed in on something that was really interesting, Mike, was the, I called

00:38:14 it the integration points.

00:38:16 So it became more apparent that I had to learn my integration points as I started moving over

00:38:21 to data and machine learning was that I could do machine learning and be the best at machine

00:38:27 learning.

00:38:28 But unless I knew how to surface those capabilities into a web server or onto a physical device,

00:38:35 I was still kind of useless.

00:38:37 I needed to know like my specialty and like three or four ways to expose my specialty to

00:38:44 other people that was useful.

00:38:46 So like the microservices phenomena has become a really impactful thing because now it's like

00:38:52 machine learning flask, wrap it in API, ship it up to the cloud.

00:38:57 Anybody can use it.

00:38:57 That's integration point one.

00:38:59 Yeah, absolutely.

00:39:00 That's a really great point.

00:39:02 You know, I had John Sonmez on episode 71 talking about specialization and niches and he

00:39:07 often talks about T shaped knowledge.

00:39:09 You've got some broad base, like you can set up a web server.

00:39:12 You can create a basic web page.

00:39:14 You can talk to database, but then you've got some vertical deep slice that is like the

00:39:19 reason people call you.

00:39:20 Right.

00:39:20 And I think that's a great way to think of careers.

00:39:22 Yeah, that was actually when I came into Microsoft consulting services.

00:39:26 That was the first thing they said is that here's what the T model is.

00:39:30 Here's what your specialization is.

00:39:33 Here's everything that surrounds that specialization.

00:39:35 Know it or die.

00:39:37 It's like, okay.

00:39:39 Okay, I'm listening.

00:39:40 Okay.

00:39:40 I'm listening.

00:39:40 Capital One has a special message for you.

00:39:56 They need Python pros who love to work with data.

00:39:59 Put your Python experience to work at Capital One and help them use data to make life better

00:40:03 for millions of customers.

00:40:04 Capital One is employing the latest tools and approaches to do data analytics and data science

00:40:09 from the ground up.

00:40:10 They're smart, creative professionals who love to explore new ways to interact with data.

00:40:14 They're interested in figuring out novel, advanced Python techniques, and even more interested

00:40:19 in finding more people who will help them do that.

00:40:22 When you join their state-of-the-art Python community, you'll work with people you really

00:40:25 like.

00:40:25 People who might be listening to this podcast right now.

00:40:28 Relentless innovation is their way of life.

00:40:30 Make it yours at Capital One.

00:40:32 Visit jobs.capitalone.com slash talkpython to learn more and apply today.

00:40:37 Awesome.

00:40:42 One of the things you said that really helped you get into that position was surrounding yourself

00:40:47 with people.

00:40:48 And we talked briefly about some of the user groups that you've been part of.

00:40:52 You've got a long history of creating and setting up and facilitating user groups, and you

00:40:57 have some going now.

00:40:58 Let's talk about that a little bit.

00:40:59 Give us the history first.

00:41:01 Yeah, it started back in college, like I said, starting the video game group.

00:41:05 And then when I got into Microsoft, creating other community groups.

00:41:10 I've always been a field role at Microsoft, so I've never really been able to surround myself

00:41:15 with other Microsoft people.

00:41:16 So I had to come up with more creative ways to gain that knowledge and that expertise.

00:41:22 And all the different big companies have things like MVPs, which most value professionals, or some

00:41:28 sort of like honorary role for you're not part of the company, but you're super awesome.

00:41:33 So we're going to give you a lot of special privileges.

00:41:34 Like MongoDB has MongoMasters.

00:41:36 Google has their equivalent.

00:41:38 You guys have your MVPs and so on, right?

00:41:41 Yeah.

00:41:42 So you find those guys and you really just surround yourself with them.

00:41:47 And then you invite other people in and you create a very open ecosystem.

00:41:52 So I started joining a very successful one in North Carolina, the TriNug, the Triangle.net user group, and the Research Triangle Park Data Analyst user group.

00:42:07 Two very large groups in North Carolina.

00:42:10 And really got me going and understanding how a professional group is run and operated.

00:42:14 They've got memberships in excess of like 1,500 per group now of some of the best scientists in Research Triangle Park.

00:42:23 So kind of after my tenure there for a couple of years learning how that is, I transitioned to this developer evangelism role,

00:42:32 where now one of my primary jobs was to lead and facilitate and grow groups of that nature.

00:42:38 So then I moved down to Florida and there are some really strong groups in Florida already, but maybe not specifically in the areas that I'm going.

00:42:48 At this point, I've already transitioned to a lot of data science and I was doing a lot of F Sharp and stuff.

00:42:54 Now I'm trying to do Python and TensorFlow.

00:42:56 There's like three or five groups here that I'm really focusing on.

00:43:02 There's the Fort Lauderdale Machine Learning User Group, Miami Data Scientists.

00:43:07 There's FLA.net, Gold Coast User Group, Code for Fort Lauderdale.

00:43:11 I'm actually speaking there tonight.

00:43:13 Code for Miami.

00:43:14 Just a variety of groups.

00:43:16 And what's interesting is that you can, each group has its own different specialization.

00:43:24 So like Fort Lauderdale Machine Learning is all basically Python, TensorFlow Machine Learning.

00:43:29 And they have a fair amount of R in there as well.

00:43:32 FLA.net is all like .net and Node.js Miami is all JavaScript.

00:43:38 Yeah, excellent.

00:43:40 And you said that you had a pretty interesting format or style for your Fort Lauderdale Machine Learning User Group.

00:43:47 Yeah, we started, we just experimented with this a couple weeks ago.

00:43:51 I've done a couple of these before at other user groups and seen some success.

00:43:55 But I call it an open forum.

00:43:58 And basically it's a semi-structured user group.

00:44:04 A lot of what I see at other user groups is very presentation lecture oriented.

00:44:09 You go in, somebody talks at you for a while, and then you network for 20 minutes or so, and then you leave.

00:44:15 But this is a very different take.

00:44:18 You know, everything that I've seen for how I get successful or see other people get successful is that they have hands-on experience.

00:44:24 So we've created a semi-structured event that happens every other week where we have a three-hour block where everybody shows up and we talk about high-level, what are people struggling with, what's the direction that you've seen over the past two weeks, anything interesting you want to talk about.

00:44:44 And we do about 20, 30 minutes of that.

00:44:47 And then we spend about two and a half hours or two hours actually hands-on solving problems.

00:44:54 So right now we've broken out into groups to try to win Kaggle or the Microsoft Cocos image recognition challenge.

00:45:04 And what's neat is that you see a natural tendency where people share their knowledge and form into groups and are actively pursuing knowledge and actively using the tools and solving problems.

00:45:21 So, you know, you can go and do a presentation on how to do data pipelining or how to ensure that your GPU kernel is always awake.

00:45:30 Or you can say, here's a giant database of images with labels for the next three hours over the next three months.

00:45:39 We're actually going to get an accuracy of 90%.

00:45:44 And what's neat is that nobody has to even know how to do it.

00:45:49 So, like, when you have a lecture-style group, you're forced into this thing where you have to have an expert.

00:45:55 If you do an open forum, nobody has to be an expert because everybody's learning.

00:45:59 Nobody even, you know, you have to have a general idea of where you want to go.

00:46:03 But you don't actually need an expert because you're actively coding and you're going to surface these issues and you're going to naturally solve them.

00:46:13 That said, we do have experts around because people do this for a living.

00:46:17 So that's really beneficial.

00:46:19 And you see, like, we had a couple Docker experts.

00:46:22 We had some Python experts and some TensorFlow experts.

00:46:25 And, you know, some people knew TensorFlow and Python but didn't know how to use the GPUs and the cloud.

00:46:34 So the Docker people come over like, I can help you with that.

00:46:37 Can you show me a little bit about this TensorFlow stuff that you're doing?

00:46:40 Because the Docker experts don't know about TensorFlow.

00:46:43 So you get this really cool cross-collaboration of skill sets.

00:46:47 Yeah, that's really great.

00:46:48 And, you know, for those who are not familiar with Kaggle, Kaggle sets up periodic data science competitions.

00:46:54 And they're probably the best known out there for that.

00:46:57 And so I think it's fantastic that you guys are like, the goal of this user group is to win Kaggle.

00:47:03 Because when people come back and they try to get a job or a raise or whatever, they say, well, you know, what experience do you have?

00:47:10 Well, I placed this level in Kaggle and here's how we solved it.

00:47:14 And it's super concrete rather than I sat through four talks on data science.

00:47:18 I'm really ready.

00:47:18 Yeah.

00:47:19 Yeah.

00:47:19 And, you know, like, because when you do interviews, it's, you know, like we were talking at the beginning.

00:47:24 It's what have you done?

00:47:25 What can you do for me?

00:47:26 Where's the proof?

00:47:27 Well, I'm second place on Kaggle kind of speaks for itself, right?

00:47:31 Like, here you go.

00:47:33 How much money do you want?

00:47:35 Exactly.

00:47:36 That's when people start calling you rather than when you call people.

00:47:39 And, of course, just like being a specialist, having people call you, it puts you in a much better position to get the job.

00:47:45 Yeah.

00:47:46 And, you know, the other neat thing to mention about this particular user group is we actually partner with a couple local recruiting firms.

00:47:55 So what's neat is the recruiting firms have jobs available and they'll send the recruiters in.

00:48:02 They actually provide food.

00:48:03 They give us prizes.

00:48:05 So, like, last time they ordered a bunch of, like, really fancy pizza, not like the typical, like, nasty stuff, but, like, really good pizza.

00:48:12 And they had Amazon gift cards.

00:48:16 And we had about 50 people show up.

00:48:19 And at the end, you know, they said, okay, by the way, we've got three jobs in Python.

00:48:24 We've got two jobs in Java, a couple .NET, and, like, one data science position.

00:48:30 You know, come up and let us know if you're interested in any of these jobs.

00:48:34 Not only are you growing your skills, because we've placed these events in partnership with recruiting firms, you get to learn your skills, apply your skills, and then hopefully go get a job with those same exact skills.

00:48:47 And the recruiters know who you are, what you're doing, if you're showing up, and they'll vouch for you.

00:48:52 Yeah.

00:48:53 A really excellent combination there.

00:48:55 So, with all this community building and stuff, you had some funny stories about the challenges of building community.

00:49:04 One of them involved office hours.

00:49:05 You want to tell us that?

00:49:06 Yeah.

00:49:07 So, office hours.

00:49:09 I run office hours in downtown Miami every week on Fridays.

00:49:13 And you can get some really incredible people and things to show up at your door.

00:49:19 And then, conversely, you can get some really crazy people to show up, too.

00:49:25 So, we've done a lot of stuff about, like, the goodness.

00:49:27 So, we can mention a few of the crazy ones.

00:49:30 So, I'm not going to mention any names or events or anything like that.

00:49:34 But, you know, when I post my office hours, I post them up on Meetup.

00:49:38 And it says, machine learning office hours, Microsoft developer evangelist will be present, you know, free, no charge kind of thing.

00:49:47 So, this one day, this individual shows up just, like, I don't know, just to harass me about stuff, like Google, I guess.

00:49:56 She's like, I really like Google.

00:49:58 But, like, oh, I said this individual was like, I really like Google.

00:50:01 But, like, Microsoft kind of sucks.

00:50:03 And, like, I really want to get a job with Google.

00:50:04 Can you, like, get me a job with Google?

00:50:05 I was like, look, I work for Microsoft.

00:50:08 I can't get you a job at Google.

00:50:10 If you want to get a job, I can give you some direction.

00:50:12 She's like, great, but I don't want to, like, code or anything.

00:50:15 Can you, like, do this?

00:50:16 I was like, oh, my God.

00:50:18 And I'm sitting there in my head, like, staring at her, wondering how long I can let her talk until she disappears.

00:50:27 And it must have been two hours.

00:50:31 It was an interesting experiment to see how long I could just, like, sit there.

00:50:36 Yeah, nobody else showed up that day.

00:50:39 So, it wasn't like I had anything better to do.

00:50:41 But it was just an example of some of the craziness that you'll get.

00:50:45 And you'll get all sorts of different people showing up that are, like, that we've had people come in and, like, start throwing things.

00:50:53 But there's not too many of those.

00:50:57 But when it happens, you're like, you can tell as soon as that person walks in the door.

00:51:01 There's, like, I don't know.

00:51:02 You can just, like, smell it or something at this point.

00:51:04 And you just, like, clap your hands and, like, rub them together.

00:51:08 And you're like, all right, let's get this going.

00:51:10 Let's do this.

00:51:11 Yeah, it's an interesting experience.

00:51:15 But then you have other things, like, I mean, so many amazing innovations that have come through the door.

00:51:21 Just blow your mind.

00:51:23 There's this one individual who came in, and he lost his job.

00:51:28 And he's an older fellow.

00:51:30 I'm not sure.

00:51:31 I'd probably place him probably in his 60s.

00:51:33 But anyways, he lost his job and decided, whatever, I'm not going to let that get me down.

00:51:40 So I'm going to start a company.

00:51:41 So he starts this company around, like, executive financial planning.

00:51:48 And just total ninja style builds this incredible platform for every wild thing that you could ever imagine that you'd want to do as an executive planning financials for your global organization.

00:52:03 Like, he came from a really, really large company.

00:52:06 So he kind of knew how, like, when he moved around and what you had to do, because he was the programmer for those tools.

00:52:13 And he basically rebuilt this huge platform.

00:52:16 And you could just attach anything to it.

00:52:18 And it would do planning.

00:52:21 Like, I'll give you some insight.

00:52:23 Some of the planning that it would do would be things like, I have my primary workforce is in the United States.

00:52:30 But my primary sales are in China.

00:52:32 I need to pay my workforce.

00:52:35 But every quarter, it seems like the Chinese currency keeps dropping, which decreases the value of my stock by this much.

00:52:44 So if I transfer my money in via these three ways, this is how much money I lose.

00:52:49 Then I'm going to get impacted with the bringing my money into the United States tax.

00:52:55 Well, here's a more creative solution around that that reduces the impact on your ability to pay your U.S. workers.

00:53:02 OK, well, now we've generated some debt in the U.S.

00:53:05 We still have the money in China because we didn't move it over that intelligently.

00:53:09 How do we transfer the debt over to China via some back methods so that I can then pay off my debt in China as opposed to paying it off in the United States?

00:53:19 And it has this whole, like, predictive aspect of, like, everything you could ever imagine from, like, a perspective that just blows your mind.

00:53:30 How interesting.

00:53:31 Yeah, so that guy just walks in and says, look, I built this.

00:53:34 Help me.

00:53:34 Very cool.

00:53:35 Yeah, and you walked in and was like, what can I do?

00:53:39 I built this.

00:53:39 I don't know what to do with it now.

00:53:40 And I was like, you know what?

00:53:43 Let me just shop this around.

00:53:45 See what's going on.

00:53:46 We might need to make it look a little prettier.

00:53:48 You know, it was much more focused on the abilities as opposed to the prettiness.

00:53:52 But it looks like it's going to go somewhere.

00:53:56 Yeah, nice.

00:53:57 I mean, just something of that magnitude is just absolutely phenomenal.

00:54:01 Yeah, that's really cool to be able to help people like that.

00:54:03 So, David, we're getting kind of short on time.

00:54:06 There's a few things I do want to still touch on.

00:54:08 So let me ask you about the state of Python and machine learning and stuff in Azure, because

00:54:15 that's something you guys have actually been pushing pretty seriously lately.

00:54:18 You know, with the onset of Satya and kind of a lot of the folks in my position, we have

00:54:24 other evangelists.

00:54:24 A lot of us have started transitioning to Python.

00:54:27 There's more than just me out there doing this.

00:54:30 And we're seeing that, you know, Python currently is the number five language in the world.

00:54:34 And if you look at it, the top three are like C and C++.

00:54:38 Well, those are basically the same.

00:54:39 And then there's Java and C#.

00:54:42 So then you've got Python after that.

00:54:44 So we're seeing a huge need for enabling Python on our platform.

00:54:50 So actually, I think every single one of our platform as a service offerings on Azure are,

00:54:57 in fact, Python enabled.

00:54:59 So my current workload is Python and Azure.

00:55:04 So I'm deploying web applications to Azure with Flask.

00:55:09 And there's things like Azure functions, which is analogous to AWS's Lambda.

00:55:15 And that's all Python enabled.

00:55:17 Everything has a Python API.

00:55:20 And it's just, it seems to be working really well.

00:55:23 And there's a lot of interesting things that you can do as well, because everything has a Python API.

00:55:30 So if you want to deploy a series of servers and get the state of your servers and do really

00:55:35 interesting distributed compute or even stateful stateless, it's a crazy concept.

00:55:41 There's this thing called service fabric.

00:55:43 It's a stateful stateless service that helps you do distributed computation in a stateless slash state,

00:55:52 like distributed fabric kind of fashion.

00:55:55 I see.

00:55:55 So like as a whole, it's stateful, but any individual piece is stateless, something like that?

00:56:01 Exactly.

00:56:01 And it distributes your compute across in number of nodes.

00:56:05 And it's super cutting edge.

00:56:08 Like nobody else has anything like this right now.

00:56:10 And it is, you know, first thing they came out with was C#.

00:56:15 Next up is Python.

00:56:16 It's like, that's really cool to see like the priority seems to be.

00:56:22 And, you know, you have to balance this with I'm inside outside, right?

00:56:26 Like I don't actually get to see what's on the backlog.

00:56:29 I just get to look at what is coming out and what order the tools are coming out.

00:56:34 But if you look at Azure, it seems to be C# and then either JavaScript or Python.

00:56:40 It's going to be kind of in that order.

00:56:42 And they're going back and forth between, well, do we support JavaScript first or do we support Python first?

00:56:48 Because some of the tools will come out with JavaScript or Node first and then others will come out with Python first.

00:56:55 And it's a very interesting perspective to see that those are key priorities.

00:57:01 And the cognitive services.

00:57:03 I forgot about the cognitive services.

00:57:05 Just there's a whole host of APIs out there on Azure that are focused on data science that are basically prepackaged solutions.

00:57:15 They're all Python enabled and like Jupyter Notebooks as a service and just tons of Python stuff.

00:57:22 Oh, that's really awesome.

00:57:23 Yeah.

00:57:24 The whole bot framework that you guys are coming out with also looks pretty interesting as well.

00:57:29 Oh, yeah.

00:57:30 I can't I can't wait to kind of get my hands on that.

00:57:34 Like the there's a big focus on natural language processing and bots are a part of that.

00:57:39 So, like, you'll see that especially if you're using Python, you get a lot of like ad hoc power that you don't normally get because you get things like scikit learn.

00:57:48 And then you get to put that in things like Azure machine learning, which is our democratized drag and drop machine learning toolkit.

00:57:56 But if you're good with like Python scikit learn, you use the bot framework and we have something called Lewis, the language understanding intelligent services.

00:58:05 You can do you can make combinations of these prepackaged solutions and then throw some semi custom to fully custom stuff into the Azure machine learning as like a microservice.

00:58:17 And the powerful offerings that you can develop as a consumer of Microsoft services.

00:58:25 So, like you would consume the Microsoft services to create value for a customer, but you can create that value super fast.

00:58:32 Like I had to do a pre sales engagement where I had to develop a Slack bot that could respond to random queries about a specific customer's product offerings.

00:58:47 I had 48 hours to build this thing from scratch.

00:58:51 And it also had to handle speech to text and text to speech.

00:58:55 Out the door in less than 48 hours because of the ability to take advantage of those prepackaged solutions and throw a little scikit learn in there where needed.

00:59:07 Oh, that's awesome.

00:59:08 Yeah, very, very cool.

00:59:10 But you guys got going on.

00:59:11 There's great.

00:59:12 So I think we have time for one more thing that I wanted to touch on.

00:59:16 And you said you're working on a project with autonomous farming.

00:59:20 Can you talk about that?

00:59:21 Yeah.

00:59:21 So I'm not allowed to talk about it too, too much because it's just now going under development.

00:59:29 But the details that I'm allowed to share is another one of those tight timelines.

00:59:35 You're working with folks who aren't necessarily experts in IoT and machine learning.

00:59:41 And you have very high value crops in like huge quantities.

00:59:48 And there will be things like the state of the environment will change throughout the night.

00:59:55 And you need to autonomously deal with that because you might have one farmer or one farm hand for every hundred acres or so.

01:00:04 And if something terrible happens, like the pH levels go completely out of bounds, well, your farmer might be a hundred acres away.

01:00:16 And now he has to ride his bicycle or his golf cart all the way over there.

01:00:20 And by that point, if it's a super young plant, you might be in trouble.

01:00:24 So having the ability to create what I call command and control systems, you were able to kind of extract information out of the sensors that you have, figure out what the state of that system is, and then send messages, not just down via text message to the farmer, but down to like an Arduino-like device.

01:00:49 And actuate motor controls, valves, et cetera, et cetera.

01:00:53 And it can actually impact and resolve the system and put it back into a stable state autonomously.

01:01:02 And farming is one area that we're seeing is a very interesting place.

01:01:07 And again, a lot of that gets enabled, you know, the tight timelines and data consolidation.

01:01:14 They have data from all over the place.

01:01:16 You can just throw it all up into cloud-based storage in Azure, build your models, and then surface the actual generated algorithms, either on device, edge devices, or in the cloud, depending on what you need to do.

01:01:31 That's really cool.

01:01:32 That sounds like a fun project.

01:01:33 It's probably one of my favorites.

01:01:35 There's, if we touch base again, probably around March, there will be a lot more details that I can share on probably about three or four projects that we have going on of similar just neatness.

01:01:50 Nice.

01:01:51 Awesome.

01:01:52 It sounds very exciting.

01:01:53 So, David, I think we'll have to leave it there.

01:01:55 Let me hit you with a couple of questions before I let you go, of course.

01:02:00 There's over 80,000 packages on PyPI you can grab and create autonomous farms from or various other things, right?

01:02:09 So, what one's your favorite or you found really useful you want to tell people about?

01:02:13 pip install TensorFlow.

01:02:14 I mean, for some of the large-scale stuff that I'm doing and some of the neat things that you can do with it, just you can pip install TensorFlow.

01:02:24 So, I'd say that's it.

01:02:25 Oh, that's awesome.

01:02:26 Yeah.

01:02:26 Very, very cool.

01:02:27 And editor, what one do you use?

01:02:29 I actually have to split it.

01:02:31 There's two editors that I use.

01:02:33 I use PyCharm for a lot of the class development and what I'll call productionifying my code.

01:02:39 And then I actually use Continuum Analytics Spider 3 or Spider 2, the command of Spider 3, because I find that for doing interactive visualizations and experimentation, it's really nice.

01:02:54 So, I'll write a lot of my code in Spider and figure out my algorithms, and then I'll copy-paste it into PyCharm.

01:03:01 Oh, that's awesome.

01:03:02 Yeah, I can definitely second both of those.

01:03:04 That's great.

01:03:04 All right, you got one final call to action for everybody.

01:03:07 I'd say check out the Python capabilities on Azure.

01:03:12 Like, the power that the cloud can bring to the table at the cost that it brings is just mind-boggling.

01:03:20 So, that's just definitely something to take a look at.

01:03:23 Oh, yeah.

01:03:24 Very cool.

01:03:24 All right.

01:03:25 It's been a great conversation, David.

01:03:27 Thanks for being on the show.

01:03:27 All right.

01:03:28 Thank you, Michael.

01:03:29 You bet.

01:03:29 Have a good one.

01:03:29 Bye.

01:03:29 This has been another episode of Talk Python to Me.

01:03:34 Today's guest has been David Crook, and this episode has been sponsored by Hired and Capital One.

01:03:39 Thank you both for supporting the show.

01:03:41 Hired wants to help you find your next big thing.

01:03:44 Visit Hired.com slash Talk Python to Me to get five or more offers with salary and equity presented right up front and a special listener signing bonus of $2,000.

01:03:54 Are you a data scientist or Python developer who loves data?

01:03:57 If you're looking for a place to work on data science with truly big data that can affect millions of lives, then head on over to jobs.capitalone.com slash Talk Python and check out the wide range of jobs that Capital One is trying to fill right now.

01:04:12 Are you or a colleague trying to learn Python?

01:04:13 Have you tried books and videos that just left you bored by covering topics point by point?

01:04:18 Well, check out my online course, Python Jumpstart by Building 10 Apps at talkpython.fm/course to experience a more engaging way to learn Python.

01:04:27 And if you're looking for something a little more advanced, try my WritePythonic code course at talkpython.fm/Pythonic.

01:04:35 You can find the links from this episode at talkpython.fm/episodes slash show slash 73.

01:04:41 Be sure to subscribe to the show.

01:04:43 Open your favorite podcatcher and search for Python.

01:04:46 We should be right at the top.

01:04:47 You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

01:04:56 Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

01:05:01 Corey just recently started selling his tracks on iTunes, so I recommend you check it out at talkpython.fm/music.

01:05:08 You can browse his tracks he has for sale on iTunes and listen to the full-length version of the theme song.

01:05:13 This is your host, Michael Kennedy.

01:05:15 Thanks so much for listening.

01:05:16 I really appreciate it.

01:05:18 Smix, let's get out of here.

