WEBVTT

00:00:00.080 --> 00:00:04.060
Flask is one of the most important Python web frameworks, and it powers a bunch of the

00:00:04.060 --> 00:00:04.400
internet.

00:00:04.400 --> 00:00:09.480
David Lord, Flask's lead maintainer, is here to give us an update on the state of Flask

00:00:09.480 --> 00:00:10.920
and palettes in 2024.

00:00:10.920 --> 00:00:15.340
If you care about Flask and where it is and where it's going, you'll definitely want

00:00:15.340 --> 00:00:15.820
to listen in.

00:00:15.820 --> 00:00:21.200
This is Talk Python To Me, episode 472, recorded July 9th, 2024.

00:00:21.200 --> 00:00:24.220
Are you ready for your host, please?

00:00:24.220 --> 00:00:27.900
You're listening to Michael Kennedy on Talk Python To Me.

00:00:28.060 --> 00:00:31.640
Live from Portland, Oregon, and this segment was made with Python.

00:00:31.640 --> 00:00:37.660
Welcome to Talk Python To Me, a weekly podcast on Python.

00:00:37.660 --> 00:00:39.860
This is your host, Michael Kennedy.

00:00:39.860 --> 00:00:45.120
Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython,

00:00:45.120 --> 00:00:51.020
both accounts over at fosstodon.org, and keep up with the show and listen to over nine years

00:00:51.020 --> 00:00:53.120
of episodes at talkpython.fm.

00:00:53.120 --> 00:00:57.620
If you want to be part of our live episodes, you can find the live streams over on YouTube,

00:00:57.620 --> 00:01:03.460
subscribe to our YouTube channel over at talkpython.fm/youtube and get notified about upcoming

00:01:03.460 --> 00:01:03.940
shows.

00:01:03.940 --> 00:01:06.320
This episode is sponsored by Sentry.

00:01:06.320 --> 00:01:08.280
Don't let those errors go unnoticed.

00:01:08.280 --> 00:01:09.180
Use Sentry.

00:01:09.180 --> 00:01:12.240
Get started at talkpython.fm/sentry.

00:01:12.240 --> 00:01:16.860
And it's also brought to you by us over at Talk Python Training.

00:01:16.860 --> 00:01:21.480
Did you know that we have over 250 hours of Python courses?

00:01:21.480 --> 00:01:22.660
Yeah, that's right.

00:01:22.660 --> 00:01:25.260
Check them out at talkpython.fm/courses.

00:01:25.700 --> 00:01:29.320
Before we jump into the interview, I want to let you know that we still have some spots

00:01:29.320 --> 00:01:31.540
left in my Code in a Castle event.

00:01:31.540 --> 00:01:36.600
If you're looking to learn some of the premier frameworks and techniques in Python, and you'd

00:01:36.600 --> 00:01:41.500
like to have a bucket list type of experience while doing so, then check out talkpython.fm

00:01:41.500 --> 00:01:42.420
slash castle.

00:01:42.820 --> 00:01:48.400
In October, I'll be running a six-day Python course for an intimate audience in a villa

00:01:48.400 --> 00:01:49.560
in Tuscany.

00:01:49.560 --> 00:01:53.680
Half the time we'll be learning Python and the other half will be exploring the best of

00:01:53.680 --> 00:01:54.740
what Italy has to offer.

00:01:54.740 --> 00:02:00.680
Check out the course outline, the excursions, and all the details at talkpython.fm/castle.

00:02:01.240 --> 00:02:06.080
Or if you'd like to just shoot me an email, michael at talkpython.fm, or find me on the

00:02:06.080 --> 00:02:07.520
socials, and I'm happy to talk about it.

00:02:07.520 --> 00:02:08.480
I hope to see you there.

00:02:08.480 --> 00:02:11.320
David, welcome back to Talk Python To Me.

00:02:11.320 --> 00:02:12.180
Great to have you here.

00:02:12.180 --> 00:02:12.640
Yeah, hello.

00:02:12.640 --> 00:02:17.860
Going to be super fun to talk about Flask and more broadly, Palettes.

00:02:17.860 --> 00:02:24.840
Just all the different projects around Flask and tools and variations like Quart and so

00:02:24.840 --> 00:02:25.060
on.

00:02:25.060 --> 00:02:29.420
And you gave a really nice talk at Embedded FlaskCon.

00:02:29.420 --> 00:02:30.780
Talk a bit about that in a second.

00:02:30.780 --> 00:02:32.260
About the state of Palettes.

00:02:32.260 --> 00:02:35.720
And I thought, you know, let's just take that idea and share it with everyone.

00:02:35.720 --> 00:02:37.340
So looking forward to talking about that.

00:02:37.340 --> 00:02:39.480
Yeah, there's been a lot going on.

00:02:39.480 --> 00:02:40.860
I bet there has.

00:02:40.860 --> 00:02:41.720
I bet there has.

00:02:41.720 --> 00:02:44.860
So yeah, it's been, I can't remember exactly when you were on.

00:02:44.860 --> 00:02:48.900
I think it's about a hundred episodes ago, which puts out like a couple of years.

00:02:48.900 --> 00:02:50.240
What have you been up to the last couple of years?

00:02:50.240 --> 00:02:51.780
Just more Flask.

00:02:51.780 --> 00:02:54.060
It's all Flask all the time.

00:02:54.060 --> 00:02:57.800
Seems like such a simple API, but you can work on it forever, right?

00:02:57.800 --> 00:03:01.600
I've acquired a few more libraries, so like written more libraries and stuff as well.

00:03:01.600 --> 00:03:03.100
But still same job.

00:03:03.100 --> 00:03:04.740
Well, I guess I got a house.

00:03:04.740 --> 00:03:05.720
I got married.

00:03:05.720 --> 00:03:07.420
Okay, congratulations.

00:03:07.420 --> 00:03:08.420
Two times.

00:03:08.420 --> 00:03:08.620
Yeah.

00:03:08.620 --> 00:03:09.240
That's awesome.

00:03:09.240 --> 00:03:11.220
So a little bit of life changes.

00:03:11.220 --> 00:03:12.540
Life keeps marching on.

00:03:12.540 --> 00:03:13.000
It's amazing.

00:03:13.360 --> 00:03:17.760
Flask is certainly one of the most popular web frameworks.

00:03:17.760 --> 00:03:23.460
It's, I guess we could start with like giving people a sense of the popularity, but my thought

00:03:23.460 --> 00:03:28.800
is just like, wow, the pressure of working on something that affects so many folks.

00:03:28.800 --> 00:03:31.080
Like if you push out a change, you know?

00:03:31.080 --> 00:03:32.160
Yeah.

00:03:32.160 --> 00:03:37.340
I've had a weird thought before that like, I try not to think about the numbers too often

00:03:37.340 --> 00:03:41.700
because it's like 100 million or more if you add up all the different libraries and stuff

00:03:41.700 --> 00:03:42.160
a month.

00:03:42.160 --> 00:03:46.940
And I've had a thought before, like if I push out something that doesn't work for enough

00:03:46.940 --> 00:03:54.080
people, like that probably has some like very minor but noticeable like effect on the tech

00:03:54.080 --> 00:03:58.900
like sector for that day or hour, which is scary.

00:03:59.480 --> 00:03:59.660
Yeah.

00:03:59.660 --> 00:04:07.020
It's not quite an AWS US 1 East downtime, but it's also not that, you know?

00:04:07.020 --> 00:04:07.900
Yeah.

00:04:07.900 --> 00:04:13.540
I think a lot, I think over the past, definitely since I've started, a lot more people have

00:04:13.540 --> 00:04:18.540
become aware of like better practices around like pinning their dependencies, that sort of

00:04:18.540 --> 00:04:25.480
thing in part because we did make some, you know, deprecations and then breaking changes

00:04:25.480 --> 00:04:26.960
in Flask and the other libraries.

00:04:26.960 --> 00:04:30.780
And people came to our issue tracker saying, oh, you know, you broke something.

00:04:30.780 --> 00:04:35.060
And ultimately, you know, I had to tell them like, you need to be using a tool.

00:04:35.060 --> 00:04:39.340
There's quite a few tools out now, although we don't have like a lock file standard yet,

00:04:39.340 --> 00:04:42.540
but there's pip compiled, there's PDM, there's Rai.

00:04:42.920 --> 00:04:48.180
You need to use a tool and pin your dependency tree because then you can see when there's

00:04:48.180 --> 00:04:53.480
updates and you can like update them deliberately and test and make, adapt to those changes.

00:04:53.480 --> 00:04:57.720
And I was giving that message a lot in the beginning.

00:04:57.720 --> 00:05:02.560
And over the past like five years or so, it is, I've definitely had to post it less often.

00:05:02.560 --> 00:05:07.760
I feel like more people are like aware of those tools and practices now.

00:05:07.760 --> 00:05:11.640
Well, I would also add that the tooling has gotten a lot better at that.

00:05:12.060 --> 00:05:18.320
It used to be, okay, so what you're going to do is you're going to write a requirements.txt file

00:05:18.320 --> 00:05:19.960
and then you set your versions explicitly.

00:05:19.960 --> 00:05:25.800
And that for many people only addressed the primary dependencies, not the transitive depensity,

00:05:25.800 --> 00:05:26.780
you know, right?

00:05:26.780 --> 00:05:29.300
They might pin Flask, but did they depend Vexo?

00:05:29.300 --> 00:05:30.120
I don't know.

00:05:30.120 --> 00:05:33.460
They may have, probably they didn't, you know, unless they use pip freeze,

00:05:33.460 --> 00:05:37.440
but then you gather a bunch of like garbage that isn't actually about your project

00:05:37.440 --> 00:05:40.560
that got sucked in from some other thing that got, you know, it's like,

00:05:40.940 --> 00:05:42.860
it was really sort of funky before.

00:05:42.860 --> 00:05:46.020
And I think, I don't know, you mentioned pip-tools and pip compile.

00:05:46.020 --> 00:05:48.240
I am loving that workflow these days.

00:05:48.240 --> 00:05:51.000
Yeah, that's what I've switched all the projects themselves to.

00:05:51.000 --> 00:05:54.300
So if you go look at Flask or Vexoic or any of those,

00:05:54.300 --> 00:05:59.040
we have like a requirements folder with different environment files that say like,

00:05:59.040 --> 00:06:00.980
here are our direct dependencies.

00:06:01.200 --> 00:06:05.520
And then we compile those into like fully locked dependencies and all our tests run off of those.

00:06:05.520 --> 00:06:09.140
Our build and publish workflow runs off of those.

00:06:09.140 --> 00:06:14.500
So it's not quite the same because like those are our development dependencies instead of our runtime dependencies.

00:06:15.000 --> 00:06:19.600
But it's still really helpful just to know that like, if we don't do anything,

00:06:19.600 --> 00:06:22.200
our process will continue to work because it worked last time.

00:06:22.200 --> 00:06:22.520
Yeah.

00:06:22.520 --> 00:06:28.180
And if we give, if we have like contributors at sprints, now like it's much easier.

00:06:28.180 --> 00:06:31.880
Like I had, like I had a problem the first few sprints I was running where, you know,

00:06:31.880 --> 00:06:36.000
every developer would try to set up their own machine and get like different versions of things or have different versions.

00:06:36.000 --> 00:06:39.240
Point in time snapshots of just whenever they got started, right?

00:06:39.240 --> 00:06:39.880
Yeah.

00:06:39.880 --> 00:06:42.800
So now they like all install the exact same list of dependencies.

00:06:42.800 --> 00:06:47.180
So everybody's development environment looks exactly the same, which is a lot more usable.

00:06:47.180 --> 00:06:48.220
Yeah, that's excellent.

00:06:48.220 --> 00:06:49.460
I have the same workflow.

00:06:49.460 --> 00:06:53.360
I have a top level dependencies that I actually would consider my dependencies.

00:06:53.360 --> 00:06:58.840
And then I pip compile, the unpinned and I pip compile those to a pin dependencies.

00:06:58.840 --> 00:07:03.560
And I just do the upgrade when I feel like, oh, let's, let's go get some new dependencies and see how that goes.

00:07:03.560 --> 00:07:03.980
Yeah.

00:07:03.980 --> 00:07:04.080
Yeah.

00:07:04.080 --> 00:07:04.520
Very nice.

00:07:04.520 --> 00:07:05.100
Okay.

00:07:05.300 --> 00:07:07.040
Well, let's start with FlaskCon.

00:07:07.040 --> 00:07:07.500
Okay.

00:07:07.500 --> 00:07:12.260
I called it the, I called it an embedded conference and this is different than it has been before.

00:07:12.260 --> 00:07:16.120
I think FlaskCon at one point was a purely online one, or maybe that was just COVID.

00:07:16.120 --> 00:07:16.700
Yeah.

00:07:16.700 --> 00:07:17.560
It was just a matter of time.

00:07:17.560 --> 00:07:18.000
I remember.

00:07:18.000 --> 00:07:26.320
It was, it was timing really years ago, like right as COVID, right before COVID started or quarantine

00:07:26.320 --> 00:07:32.140
started, I had been like, like working myself up to do an in-person conference.

00:07:32.140 --> 00:07:36.180
It's something I've wanted to do for a while because I love attending conferences.

00:07:36.180 --> 00:07:37.960
I love the community around it.

00:07:37.960 --> 00:07:41.780
Django con happened in San Diego a few times and that was really fun.

00:07:41.780 --> 00:07:42.960
So I just crashed it.

00:07:42.960 --> 00:07:43.960
It was the Flask person.

00:07:43.960 --> 00:07:43.960
I was the Flask person.

00:07:43.960 --> 00:07:46.860
I was the Flask person.

00:07:46.860 --> 00:07:49.820
and, so I was like getting ready to do that.

00:07:49.820 --> 00:07:54.740
And then, COVID happened, but some other members of the community, the palettes

00:07:54.740 --> 00:07:57.880
team and he stepped up and said, Hey, we can do like an online one.

00:07:57.980 --> 00:08:01.840
running a conference, even online is very hard.

00:08:01.840 --> 00:08:03.480
There's a lot of stuff to keep track of.

00:08:03.480 --> 00:08:04.160
Oh yeah.

00:08:04.160 --> 00:08:06.920
But it was, we ran three online conferences.

00:08:06.920 --> 00:08:10.620
I think 2020, 2021 and 2023.

00:08:10.620 --> 00:08:14.580
I think we skipped one, but those are all on like, pivideo.org.

00:08:14.580 --> 00:08:15.380
If you want to find it.

00:08:15.380 --> 00:08:18.140
And now Flask on 2024 is there also.

00:08:18.360 --> 00:08:22.240
And, so I finally got the opportunity with, PyCon.

00:08:22.240 --> 00:08:27.240
They, they previously had this hatchery program, where you could kind of propose, I want

00:08:27.240 --> 00:08:28.040
to do this event.

00:08:28.040 --> 00:08:31.580
And, the hatchery program will say like, that sounds great.

00:08:31.580 --> 00:08:37.220
We'll give you, you know, we will handle the venue, the food, the insurance, the legal

00:08:37.220 --> 00:08:38.160
stuff.

00:08:38.160 --> 00:08:42.880
you get one of our rooms and you can do whatever you want in it or whatever you propose

00:08:42.880 --> 00:08:43.180
in it.

00:08:43.180 --> 00:08:48.340
and so last year at PyCon, I talked to some of the organizers.

00:08:48.340 --> 00:08:50.560
And they suggested, Hey, the hatchery is coming back.

00:08:50.560 --> 00:08:51.920
This would be a great way to do it.

00:08:51.920 --> 00:08:54.980
So that you don't have to learn everything at once.

00:08:54.980 --> 00:08:55.240
Right.

00:08:55.240 --> 00:08:55.900
You can practice.

00:08:55.900 --> 00:08:56.860
yeah.

00:08:56.860 --> 00:08:59.660
So, we managed to do some advertising.

00:08:59.660 --> 00:09:03.340
It's hard to advertise new conferences in general.

00:09:03.340 --> 00:09:08.360
And then especially now that, like most of the Python, a lot of the Python community

00:09:08.360 --> 00:09:10.500
is not on Twitter anymore.

00:09:10.500 --> 00:09:11.160
I'm not.

00:09:11.160 --> 00:09:14.860
and even if they were, everything is kind of fragmented more.

00:09:14.860 --> 00:09:18.300
so it was hard to get the reach and get enough, like, CFP.

00:09:18.300 --> 00:09:22.520
so we had a lot of the proposals, but we did get, a few and, ended up accepting

00:09:22.520 --> 00:09:25.520
two people from the community that gave just wonderful talks.

00:09:25.520 --> 00:09:29.200
and it, I saw one on doing PWAs.

00:09:29.200 --> 00:09:32.180
And what was the other one on the talks?

00:09:32.180 --> 00:09:33.260
Was it progressive?

00:09:33.260 --> 00:09:35.340
no, there was one on single page.

00:09:35.340 --> 00:09:35.680
Sorry.

00:09:35.680 --> 00:09:40.060
And there was one on observability and then, yeah.

00:09:40.060 --> 00:09:45.820
PWAs or single page apps and, extension, the extension ecosystem and kind of like the

00:09:45.820 --> 00:09:47.940
idea around defining plus plugins.

00:09:47.940 --> 00:09:52.240
And then there's my talk, which was just, the subject of this podcast.

00:09:52.240 --> 00:09:53.240
Yeah.

00:09:53.240 --> 00:09:54.240
Welcome people.

00:09:54.240 --> 00:09:55.240
Yeah.

00:09:55.240 --> 00:09:56.240
Yeah.

00:09:56.240 --> 00:09:57.240
That's cool.

00:09:57.240 --> 00:09:59.240
will it maybe be a PyCon next year?

00:09:59.240 --> 00:10:01.240
or are you going to branch out?

00:10:01.240 --> 00:10:02.240
I don't know yet.

00:10:02.240 --> 00:10:07.240
I think they would accept me back, but I wouldn't want to like, I always, I kind of view the hatchery.

00:10:07.240 --> 00:10:10.240
I mean, I don't know if this is true, but I kind of view the hatchery as like, we're

00:10:10.240 --> 00:10:13.240
going to help you get started, but not like keep coming back for the same thing.

00:10:13.240 --> 00:10:15.240
but I don't want to like, right.

00:10:15.240 --> 00:10:15.240
Right.

00:10:15.240 --> 00:10:15.240
Right.

00:10:15.240 --> 00:10:15.240
Right.

00:10:15.240 --> 00:10:15.240
Right.

00:10:15.240 --> 00:10:17.240
I'm a 10 year rookie.

00:10:17.240 --> 00:10:18.240
You know, you're not a rookie anymore.

00:10:18.240 --> 00:10:24.600
Get out here with the, or let me, I would still love to run, a conference somewhat

00:10:24.600 --> 00:10:29.240
selfishly so that I can run one like in San Diego or on the West coast at least.

00:10:29.240 --> 00:10:30.240
That's what I was going to say.

00:10:30.240 --> 00:10:31.240
How about San Diego?

00:10:31.240 --> 00:10:34.240
Then we can, I'm going to come down there and stay by the beach.

00:10:34.240 --> 00:10:35.240
Yeah.

00:10:35.240 --> 00:10:38.240
I mentioned DjangoCon before, but they, they stayed in San Diego for three years straight at

00:10:38.240 --> 00:10:40.240
this, little hotel that was really nice.

00:10:40.240 --> 00:10:41.240
Had a pool.

00:10:41.240 --> 00:10:45.240
People just kind of, congregated and it was like 15 minute drive for me.

00:10:45.240 --> 00:10:49.240
And, so yeah, next year at PyCon, I might not be there.

00:10:49.240 --> 00:10:54.240
we're expecting our daughter to be born in January next year.

00:10:54.240 --> 00:10:55.240
Congratulations.

00:10:55.240 --> 00:10:57.240
And that might take precedence over PyCon.

00:10:57.240 --> 00:11:01.240
I'm going to have a lot less time in general, which will be, which will come up in other things

00:11:01.240 --> 00:11:07.240
we're going to talk about, but yeah, I probably like for the first time since 2016 or 2015, I

00:11:07.240 --> 00:11:08.240
will not go to PyCon probably.

00:11:08.240 --> 00:11:09.240
yeah.

00:11:09.240 --> 00:11:10.240
Yeah.

00:11:10.240 --> 00:11:12.240
But there was a, conference, right?

00:11:12.240 --> 00:11:14.240
This was the last conference I went to before quarantine.

00:11:14.240 --> 00:11:19.240
two weeks before quarantine hit, I went up to Los Angeles for PyBeach, which was this

00:11:19.240 --> 00:11:22.240
very, very small, first time conference.

00:11:22.240 --> 00:11:24.240
and I just love those like little ones.

00:11:24.240 --> 00:11:25.240
Yeah.

00:11:25.240 --> 00:11:31.240
And, I met the organizer, Nick Cantar at, North Bay Python a few times now.

00:11:31.240 --> 00:11:33.240
And I've told him like, we should try to bring that back.

00:11:33.240 --> 00:11:36.240
Like I bet, like, I think there's a few other people who are interested as well.

00:11:36.240 --> 00:11:40.240
And I'm like, it doesn't have to be FlaskCon specifically, but if I could like run some sort

00:11:40.240 --> 00:11:44.240
of local conference and I can do some flat stuff or attract some flat stuff, you know?

00:11:44.240 --> 00:11:49.240
Well, I'm pretty excited that, PyCon is going to be in Long Beach, year after

00:11:49.240 --> 00:11:50.240
next.

00:11:50.240 --> 00:11:51.240
Yeah.

00:11:51.240 --> 00:11:53.240
Two years from now, that'll be really nice as well.

00:11:53.240 --> 00:11:57.240
So that'll be really nice, but maybe you can drum up a bunch of interest and connect with

00:11:57.240 --> 00:12:01.240
a lot of people who are conference goers of that place, but like encourage them to sign

00:12:01.240 --> 00:12:05.240
up for a list and like get notified about whatever this other thing is, cause it'll be in the same

00:12:05.240 --> 00:12:06.240
basic neighborhood.

00:12:06.240 --> 00:12:07.240
Yeah.

00:12:07.240 --> 00:12:13.240
So, Jazzy out in the audience asks, can we attend FlaskCon online?

00:12:13.240 --> 00:12:20.240
this year or this in-person one in 2024, we weren't able to do that, but all the talks

00:12:20.240 --> 00:12:23.240
are available now on our YouTube channel.

00:12:23.240 --> 00:12:26.240
If you just search FlaskCon 2024, you'll find it.

00:12:26.240 --> 00:12:29.240
or pyvideo.org has all of them listed.

00:12:29.240 --> 00:12:34.240
the last, the first three we ran were purely online, so you could watch them streaming.

00:12:34.240 --> 00:12:37.240
this year we just didn't have the infrastructure for it.

00:12:37.240 --> 00:12:42.240
So we couldn't really manage to do a live stream and the recordings at the same time.

00:12:42.240 --> 00:12:46.240
I was lucky enough to get, Elaine Wong's help doing the recordings and she brought all

00:12:46.240 --> 00:12:48.240
her special, cool specialized equipment.

00:12:48.240 --> 00:12:51.240
So we were able to get the recordings up really fast at least.

00:12:51.240 --> 00:12:52.240
Yeah, that's really good.

00:12:52.240 --> 00:12:54.240
Are the ones for PyCon even up yet?

00:12:54.240 --> 00:12:55.240
I don't think they are.

00:12:55.240 --> 00:12:56.240
Not that I'm aware of.

00:12:56.240 --> 00:12:58.240
Maybe they're going like really slowly, but yeah, it was really nice.

00:12:58.240 --> 00:13:03.240
Like we just recorded this hard drive and like, she was like, Oh, you guys timed that,

00:13:03.240 --> 00:13:05.240
you timed all your starts and stops really well.

00:13:05.240 --> 00:13:08.240
So all I have to do is like do these like simple cuts and it's all up.

00:13:08.240 --> 00:13:09.240
From the edges and upload.

00:13:09.240 --> 00:13:10.240
Perfect.

00:13:10.240 --> 00:13:11.240
Yeah.

00:13:11.240 --> 00:13:12.240
Yeah.

00:13:12.240 --> 00:13:13.240
Yeah. That's really cool.

00:13:13.240 --> 00:13:17.240
So yeah, I'll link to the playlist of FlaskCon 2024 for folks in the show notes.

00:13:17.240 --> 00:13:18.240
They can check that out.

00:13:18.240 --> 00:13:19.240
Awesome.

00:13:19.240 --> 00:13:21.240
Well, we'll see what 2025 brings.

00:13:21.240 --> 00:13:23.240
Hopefully some more good conference.

00:13:23.240 --> 00:13:24.240
Yeah.

00:13:24.240 --> 00:13:29.240
We might have other like members besides me, attending PyCon as well.

00:13:29.240 --> 00:13:30.240
So we'll see what happens.

00:13:30.240 --> 00:13:31.240
Right?

00:13:31.240 --> 00:13:32.240
Sure.

00:13:32.240 --> 00:13:34.240
If nothing else, I usually just run out of space or something.

00:13:34.240 --> 00:13:35.240
So there's always something going on.

00:13:35.240 --> 00:13:36.240
Yeah.

00:13:36.240 --> 00:13:37.240
Yeah, for sure.

00:13:37.240 --> 00:13:42.240
Now I want to talk about the state of pallets in 2024, but surely there are, you know, quite

00:13:42.240 --> 00:13:46.240
a few people out there who listen, who are really new to Python and programming.

00:13:46.240 --> 00:13:47.240
You'd be surprised.

00:13:47.240 --> 00:13:50.240
A lot of people say they use it like this podcast, like language immersion.

00:13:50.240 --> 00:13:52.240
Like you want to learn Portuguese.

00:13:52.240 --> 00:13:53.240
You used to move to Brazil.

00:13:53.240 --> 00:13:54.240
You want to learn Python.

00:13:54.240 --> 00:13:57.240
You just put on your earbuds and listen until it makes sense.

00:13:57.240 --> 00:14:00.240
So especially for those folks, like what is pallets?

00:14:00.240 --> 00:14:03.240
pallets is an open source organization.

00:14:03.240 --> 00:14:04.240
So we're not a company.

00:14:04.240 --> 00:14:10.240
but we do have like a team of volunteer open source maintainers who volunteer their free

00:14:10.240 --> 00:14:15.240
time to work on flask and the libraries that make up flask.

00:14:15.240 --> 00:14:19.240
So, this portion of talk Python to me is brought to you by Sentry.

00:14:19.240 --> 00:14:20.240
Code breaks.

00:14:20.240 --> 00:14:22.240
It's a fact of life with Sentry.

00:14:22.240 --> 00:14:23.240
You can fix it faster.

00:14:23.240 --> 00:14:29.240
As I've told you all before, we use Sentry on many of our apps and APIs here at talk Python.

00:14:29.240 --> 00:14:34.240
I recently used Sentry to help me track down one of the weirdest bugs I've run into in a long time.

00:14:34.240 --> 00:14:36.240
Here's what happened.

00:14:36.240 --> 00:14:44.240
When signing up for our mailing list, it would crash under a non-common execution paths, like situations where someone was already subscribed or entered into a

00:14:44.240 --> 00:14:47.240
invalid email address or something like this.

00:14:47.240 --> 00:14:53.240
The bizarre part was that our logging of that unusual condition itself was crashing.

00:14:53.240 --> 00:14:56.240
How is it possible for our log to crash?

00:14:56.240 --> 00:14:59.240
It's basically a glorified print statement.

00:14:59.240 --> 00:15:01.240
Well, Sentry to the rescue.

00:15:01.240 --> 00:15:07.240
I'm looking at the crash report right now, and I see way more information than you'd expect to find in any log statement.

00:15:07.240 --> 00:15:10.240
And because it's production, debuggers are out of the question.

00:15:10.240 --> 00:15:22.240
I see the traceback, of course, but also the browser version, client OS, server OS, server OS version, whether it's production or Q&A, the email and name of the person signing up.

00:15:22.240 --> 00:15:24.240
That's the person who actually experienced the crash.

00:15:24.240 --> 00:15:27.240
Dictionaries of data on the call stack and so much more.

00:15:27.240 --> 00:15:28.240
What was the problem?

00:15:28.240 --> 00:15:37.240
I initialized the logger with the string info for the level rather than the enumeration dot info, which was an integer based enum.

00:15:37.240 --> 00:15:44.240
So the login statement would crash saying that I could not use less than or equal to between strings and ints.

00:15:44.240 --> 00:15:46.240
Crazy town.

00:15:46.240 --> 00:15:52.240
But with Sentry, I captured it, fixed it, and I even helped the user who experienced that crash.

00:15:52.240 --> 00:15:53.240
Don't fly blind.

00:15:53.240 --> 00:15:55.240
Fix code faster with Sentry.

00:15:55.240 --> 00:15:59.240
Create your Sentry account now at talkpython.fm/sentry.

00:15:59.240 --> 00:16:12.240
And if you sign up with the code TALKPYTHON, all capital, no spaces, it's good for two free months of Sentry's business plan, which will give you up to 20 times as many monthly events as well as other features.

00:16:12.240 --> 00:16:17.240
That was kind of its purpose when it was created was, hey, Flask has these set of libraries.

00:16:17.240 --> 00:16:22.240
Armin, the original author of them, was not as involved in them anymore.

00:16:22.240 --> 00:16:25.240
And like the community, he wanted the community to be more involved in them.

00:16:25.240 --> 00:16:26.240
So he created this organization.

00:16:26.240 --> 00:16:29.240
This was right around when I was becoming maintainer two, eight years ago.

00:16:29.240 --> 00:16:40.240
And so it's kind of the organization that holds those projects and like the team that kind of maintains and sets policies and that sort of thing.

00:16:40.240 --> 00:16:46.240
So Flask is like the most popular library that everybody ever heard of, followed by Jinja and Click.

00:16:46.240 --> 00:16:50.240
But then we also have Verksoig, which is the lower level stuff below Flask.

00:16:50.240 --> 00:16:55.240
And then MarkupSafe and It's Dangerous are two little helper libraries for those things.

00:16:55.240 --> 00:17:01.240
And then now we've also got Cort, which is the async version of Flask.

00:17:01.240 --> 00:17:07.240
That's an official palettes project now, even though it started as just kind of a separate thing made by Flask.

00:17:07.240 --> 00:17:13.240
Yeah, it was an outside thing that Philip Jones worked on and now it's coming closer and closer to being official.

00:17:13.240 --> 00:17:14.240
Yeah.

00:17:14.240 --> 00:17:22.240
And like we're doing a lot of work on that to kind of try to unify Flask and Cort as much as possible.

00:17:22.240 --> 00:17:26.240
So behind the scenes, they're sharing a lot more code now.

00:17:26.240 --> 00:17:32.240
Cort, like Verksoig is all the low level request response handling for the Flask uses.

00:17:32.240 --> 00:17:36.240
And Cort wasn't using that at first because it needed like much more async things.

00:17:36.240 --> 00:17:48.240
But we've managed to develop a lot more things called the term is called sans IO, like without input output, where we have all like the behavior that's common to both.

00:17:48.240 --> 00:17:54.240
That doesn't require asyncio versus sync processes shared between Cort and Flask.

00:17:54.240 --> 00:17:57.240
And eventually we're slowly moving in that direction.

00:17:57.240 --> 00:18:03.240
The idea is that at some point you will not pip install Cort or import Cort anymore.

00:18:03.240 --> 00:18:07.240
You'll just pip install Flask and then do like from Flask import Cort instead.

00:18:07.240 --> 00:18:08.240
Oh, interesting.

00:18:08.240 --> 00:18:12.240
So the library as well once we get to like a point that we're really comfortable with.

00:18:12.240 --> 00:18:14.240
See you're shipping shipping one thing.

00:18:14.240 --> 00:18:15.240
Yeah.

00:18:15.240 --> 00:18:17.240
Will you be able to use the same app?

00:18:17.240 --> 00:18:20.240
You know, we say add app get or will that be a, will there be a.

00:18:20.240 --> 00:18:22.240
Yeah, that's, that's the one thing.

00:18:22.240 --> 00:18:25.240
App F equals Flask and app Q equals Cort.

00:18:25.240 --> 00:18:26.240
Yeah.

00:18:26.240 --> 00:18:30.240
You'll still have one single app, but you're going to have to pick ahead of time.

00:18:30.240 --> 00:18:40.240
We've tried to think of ways around this, but just the way that Flask is constructed means that so much of it is customizable by extensions.

00:18:40.240 --> 00:18:50.240
And that, that, that those hook APIs that extensions can customize all the extensions out there expect that they're sync, they're deaf, whatever, not async deaf.

00:18:50.240 --> 00:18:51.240
Right.

00:18:51.240 --> 00:18:58.240
And, maybe we'll figure out something, but so far we can't figure out a way to unify that into a single object.

00:18:58.240 --> 00:18:59.240
So you're going to have to still pick.

00:18:59.240 --> 00:19:03.240
I want to be async first or sync first.

00:19:03.240 --> 00:19:04.240
And yeah.

00:19:04.240 --> 00:19:05.240
Yeah.

00:19:05.240 --> 00:19:07.240
but at least it'll be in one place.

00:19:07.240 --> 00:19:10.240
Like you're not going to have to decide, oh, I need to know about Cort.

00:19:10.240 --> 00:19:18.240
You can just look at the Flask docs and see like, oh, I'm going to be doing mostly like, like web requests or like video processing or something that's like the IO intensive.

00:19:18.240 --> 00:19:25.240
I should pick court or, or I'm just doing like the basic API that everybody makes for their, you know, data science project.

00:19:25.240 --> 00:19:26.240
I just need Flask.

00:19:26.240 --> 00:19:27.240
Hopefully it makes it a little easier.

00:19:27.240 --> 00:19:28.240
Yeah.

00:19:28.240 --> 00:19:29.240
Yeah.

00:19:29.240 --> 00:19:30.240
Yeah.

00:19:30.240 --> 00:19:31.240
Really interesting question out in the audience.

00:19:31.240 --> 00:19:37.240
Will it, it sounds like it'll work both WWSGI, WSGI and ASGI ASGI.

00:19:37.240 --> 00:19:42.240
any future where it just goes all, all async, not likely in the short term.

00:19:42.240 --> 00:19:43.240
It sounds like great.

00:19:43.240 --> 00:19:44.240
yeah.

00:19:44.240 --> 00:19:46.240
Like Flask will always be WSGI.

00:19:46.240 --> 00:19:50.240
because it's so tied to how sync processes work.

00:19:50.240 --> 00:20:01.240
ASGI has an ability to, and so like, if you use like HyperCorn, which is a popular, ASGI server, which is also by Phil from Cort.

00:20:01.240 --> 00:20:05.240
you can run a WSGI application as an ASGI application.

00:20:05.240 --> 00:20:11.240
you don't necessarily get all the benefits of ASGI, but you can at least run it with that.

00:20:11.240 --> 00:20:18.240
and some, and kind of like in a similar vein, like if you're using Cort, you can write both sync and async things and they all just work together.

00:20:18.240 --> 00:20:19.240
Yeah.

00:20:19.240 --> 00:20:23.240
You just, and, and with Flask, you can write async stuff in Flask right now.

00:20:23.240 --> 00:20:27.240
you just don't get the benefits of ASGI's connection pooling.

00:20:27.240 --> 00:20:34.240
so you're still doing one worker per request response, but you can in that worker kick off like async, code.

00:20:34.240 --> 00:20:35.240
Right.

00:20:35.240 --> 00:20:36.240
Okay.

00:20:36.240 --> 00:20:37.240
More easily.

00:20:37.240 --> 00:20:38.240
Interesting.

00:20:38.240 --> 00:20:39.240
Yeah.

00:20:39.240 --> 00:20:45.240
I've written a decorator that it decorates both sync and async methods.

00:20:45.240 --> 00:20:46.240
And it's pretty tricky.

00:20:46.240 --> 00:20:47.240
There's just basically.

00:20:47.240 --> 00:20:48.240
Yeah.

00:20:48.240 --> 00:20:49.240
Jinja has two, two.

00:20:49.240 --> 00:20:50.240
Yeah.

00:20:50.240 --> 00:20:51.240
Two rappers.

00:20:51.240 --> 00:20:55.240
It goes, all right, well, which are you, we're going to actually apply that one to, you know, it's, it's a, it's tricky to juggle.

00:20:55.240 --> 00:20:58.240
And then the, well, the plugins, like it's gotta be a gnarly combination.

00:20:58.240 --> 00:20:59.240
Yeah.

00:20:59.240 --> 00:21:08.240
We're, we're, we're like, basically we're just like taking it in baby steps and we're hoping like, as we keep unifying their code, like their shared code more and more, we can start like discovering.

00:21:08.240 --> 00:21:19.240
Like discovering like good patterns for writing an extension that works in both, for example, and documenting those and maybe helping, some extensions, that are popular update to that.

00:21:19.240 --> 00:21:20.240
yeah.

00:21:20.240 --> 00:21:23.240
And so it's a slow process, but like it's surmountable.

00:21:23.240 --> 00:21:24.240
Yeah.

00:21:24.240 --> 00:21:26.240
Maybe you get to a point where they're close enough.

00:21:26.240 --> 00:21:28.240
You're like, oh, now it's really obvious how these things.

00:21:28.240 --> 00:21:29.240
Yeah.

00:21:29.240 --> 00:21:31.240
You know, by the beginning it wasn't right.

00:21:31.240 --> 00:21:32.240
Okay.

00:21:32.240 --> 00:21:34.240
So what's the state, how are things?

00:21:34.240 --> 00:21:35.240
What's the state?

00:21:35.240 --> 00:21:40.240
maybe start with the big, the big boy flask and inbox zero is like one of the biggest takeaways.

00:21:40.240 --> 00:21:41.240
Inbox zero.

00:21:41.240 --> 00:21:43.240
That was, it was actually, that wasn't 2024.

00:21:43.240 --> 00:21:46.240
That was the 2021 or 22, I think.

00:21:46.240 --> 00:21:53.240
But, I, yeah, we don't have like true zero most of the time, although I do get down to it every now and then.

00:21:53.240 --> 00:21:56.240
but, I did hit inbox zero.

00:21:56.240 --> 00:22:03.240
So when I first started maintaining all these libraries, I think combined, there was probably over a thousand open issues and PRs.

00:22:03.240 --> 00:22:06.240
and that's a nightmare.

00:22:06.240 --> 00:22:10.240
If you know all the code, like if you, if you were the author, but I was not the author of this code.

00:22:10.240 --> 00:22:17.240
Like, so I was both unfamiliar with the internals of all these libraries and like had to keep track of all these issues.

00:22:17.240 --> 00:22:23.240
So I was like learning libraries, learning how to be a maintainer and trying to keep track of like all these requests.

00:22:23.240 --> 00:22:26.240
Going back and forth and like competing PRs and all that sort of stuff.

00:22:26.240 --> 00:22:31.240
So it was, early on, it was a goal I identified of like, I just need to make this manageable.

00:22:31.240 --> 00:22:34.240
And, once I got there, it's become a lot easier.

00:22:34.240 --> 00:22:37.240
Like once you're at inbox zero, it's a lot easier to keep it.

00:22:37.240 --> 00:22:38.240
Hovering.

00:22:38.240 --> 00:22:41.240
I really feel in, I'm feeling rough about my true inbox.

00:22:41.240 --> 00:22:43.240
I'm looking at like five or six persistent emails.

00:22:43.240 --> 00:22:47.240
I really got to get back to you, but it's a whole different deal than if it's 10,000.

00:22:47.240 --> 00:22:53.240
Did you declare, any sort of bankruptcy equivalent of like inbox bank or you just go like archive.

00:22:53.240 --> 00:22:57.240
A good, like if it's two years or older, I'm just going to archive it and it'll come back if it matters.

00:22:57.240 --> 00:23:00.240
Or did you literally go through everyone and deal with it?

00:23:00.240 --> 00:23:03.240
I did go through everyone individually.

00:23:03.240 --> 00:23:06.240
I didn't just blanket say everything older than two years is closed.

00:23:06.240 --> 00:23:07.240
yeah.

00:23:07.240 --> 00:23:12.240
But I did kind of treat things as like, I don't like stale bots.

00:23:12.240 --> 00:23:13.240
So we don't run a stale bot.

00:23:13.240 --> 00:23:14.240
Like, yeah, I don't like those either.

00:23:14.240 --> 00:23:15.240
Yeah.

00:23:15.240 --> 00:23:16.240
Yeah.

00:23:16.240 --> 00:23:25.240
Like I don't object to things being closed, like as the resolution versus fixed, but I want like somebody to be making that decision.

00:23:25.240 --> 00:23:26.240
right.

00:23:26.240 --> 00:23:27.240
Right.

00:23:27.240 --> 00:23:28.240
And put a reason behind it.

00:23:28.240 --> 00:23:32.240
so yeah, I tried like going through every single issue.

00:23:32.240 --> 00:23:38.240
Basically my workflow is just every single day, pick an issue, work on it, like pick another one.

00:23:38.240 --> 00:23:39.240
Okay.

00:23:39.240 --> 00:23:40.240
It's been a couple hours.

00:23:40.240 --> 00:23:41.240
Wait until the next day.

00:23:41.240 --> 00:23:44.240
And, yeah, just like had to keep making calls on them.

00:23:44.240 --> 00:23:45.240
Yeah.

00:23:45.240 --> 00:23:46.240
Like, all right, two come in a day.

00:23:46.240 --> 00:23:49.240
I'm going to do 20 a day until I catch our sounds like that.

00:23:49.240 --> 00:23:50.240
Right.

00:23:50.240 --> 00:24:06.240
There was a lot of stuff also where it was, it had just been sitting open for years, you know, and nobody had really commented on it besides like, or maybe they had the most people that commented on was saying like me too, but they hadn't actually like moved the discussion forward.

00:24:06.240 --> 00:24:19.240
And yeah, I, you know, it would be nice if open source, if like more people like contribute, I don't blame anybody for not like contributing, you know, or being a contributor, but I would love to like attract more long-term contributors and stuff.

00:24:19.240 --> 00:24:24.240
But that's like kind of the way it starts is you need to like help people like make calls and stuff, evaluate things.

00:24:24.240 --> 00:24:25.240
Right.

00:24:25.240 --> 00:24:29.240
you know, instead of saying me to start looking into it and saying like, okay, me too.

00:24:29.240 --> 00:24:35.240
And okay, here's all the like issues that might come up when we do this, or I looked at their code base and we could do it this way.

00:24:35.240 --> 00:24:36.240
Yeah.

00:24:36.240 --> 00:24:37.240
Right.

00:24:37.240 --> 00:24:38.240
Exactly.

00:24:38.240 --> 00:24:39.240
We weren't doing that.

00:24:39.240 --> 00:24:40.240
I also want it, but I want it.

00:24:40.240 --> 00:24:44.240
And I think here's a path forward or here's a, you know, like they have to advance the conversation.

00:24:44.240 --> 00:24:47.240
and that wasn't like happening in a lot of the old issues.

00:24:47.240 --> 00:25:01.240
So I did kind of like, I didn't already just close old issues, but like, I did say like, okay, this thing is old and it hasn't seen any movement or like, there's a lot of things also where it's like, yeah, it's a reasonable request, but is it necessary for flask?

00:25:01.240 --> 00:25:03.240
Does it belong in flask or an extension?

00:25:03.240 --> 00:25:04.240
Right.

00:25:04.240 --> 00:25:06.240
Like this is something I'm trying to figure out.

00:25:06.240 --> 00:25:14.240
Like, I want to be writing like documentation for other maintainers on the team, you know, so they understand like how I did this sort of stuff.

00:25:14.240 --> 00:25:16.240
And it's really, this is like the trickiest problem.

00:25:16.240 --> 00:25:23.240
I don't know how I'm going to document yet, but like, I got a sense over time of just like being able to really quickly make a call of like, yes or no.

00:25:23.240 --> 00:25:31.240
One thing, like I can look at an issue and say like, okay, no, this doesn't belong in for X, Y, Z or something.

00:25:31.240 --> 00:25:38.240
because like flask had like all the libraries in palettes have like very focused core, like goal of them.

00:25:38.240 --> 00:25:40.240
And, they try to be extensible to some degree.

00:25:40.240 --> 00:25:42.240
So a lot of the things you can do by making extension.

00:25:42.240 --> 00:25:52.240
so really what I try to look for is like, I need this thing in flask because it is literally not possible to write an extension to do this without being able to like hook into it this way or something like that.

00:25:52.240 --> 00:25:53.240
No, that makes sense.

00:25:53.240 --> 00:25:53.240
Sure.

00:25:53.240 --> 00:25:59.240
And part of the Zen of flask is that it's minimal and then you build around it.

00:25:59.240 --> 00:26:02.240
You pick your database, you pick your whatever, and then go from there.

00:26:02.240 --> 00:26:03.240
Yeah.

00:26:03.240 --> 00:26:04.240
Yeah.

00:26:04.240 --> 00:26:05.240
Cool.

00:26:05.240 --> 00:26:06.240
All right.

00:26:06.240 --> 00:26:10.240
Well, three, three open issues and incredible as, as in 67,000 stars.

00:26:10.240 --> 00:26:11.240
That's also pretty incredible.

00:26:11.240 --> 00:26:12.240
let's see.

00:26:12.240 --> 00:26:14.240
So you join each one of these different ones.

00:26:14.240 --> 00:26:16.240
You kind of gave a sense of like how many downloads.

00:26:16.240 --> 00:26:20.240
So for flask, maybe these numbers changed, but I think it hasn't been about a couple of months.

00:26:20.240 --> 00:26:23.240
It's around 75 million downloads a month.

00:26:23.240 --> 00:26:26.240
That's a, that's a hefty chunk of user base there.

00:26:26.240 --> 00:26:27.240
Yeah.

00:26:27.240 --> 00:26:35.240
I occasionally look at pypi stats.org or pepi.tech, are the two like websites that track these numbers.

00:26:35.240 --> 00:26:46.240
so I can look at the current flask is downloads in the last day, 3.15 million downloads in the last month, 66 million.

00:26:46.240 --> 00:26:47.240
okay.

00:26:47.240 --> 00:26:48.240
It's that much time.

00:26:48.240 --> 00:26:49.240
People are telling.

00:26:49.240 --> 00:26:50.240
Yeah.

00:26:50.240 --> 00:26:51.240
Look at that.

00:26:51.240 --> 00:26:52.240
Look at that.

00:26:52.240 --> 00:26:53.240
Yeah.

00:26:53.240 --> 00:26:54.240
Yeah.

00:26:54.240 --> 00:27:03.240
And there's like, sometimes there's like random, you can see in this graph here, like there's just random times where it just suddenly drops by like a couple of hundred thousand or right or rises.

00:27:03.240 --> 00:27:04.240
Yeah.

00:27:04.240 --> 00:27:06.240
Like if you look at the left half of this graph, it's higher.

00:27:06.240 --> 00:27:14.240
Like, I think that's just because like big services like come in and out of existence or like do an upgrade or whatever.

00:27:14.240 --> 00:27:20.240
so there are some like very big systems out there that are just download doing a ton of downloads.

00:27:20.240 --> 00:27:21.240
Yeah, it's pretty wild.

00:27:21.240 --> 00:27:22.240
It's definitely wild.

00:27:22.240 --> 00:27:24.240
You'll probably also spot some pypi outages.

00:27:24.240 --> 00:27:28.240
Well, I imagine in that graph, which is got nothing to do.

00:27:28.240 --> 00:27:34.240
And like they also change the way they report over time, like pypi pip and stuff change how they report statistics.

00:27:34.240 --> 00:27:39.240
So, okay, I usually just look at like the overall numbers pretty consistent.

00:27:39.240 --> 00:27:40.240
Yeah.

00:27:40.240 --> 00:27:41.240
Try not to look at it too often.

00:27:41.240 --> 00:27:48.240
Like I said at the beginning, like it's a, it's a big number to know that like this many people are about to download any change you make.

00:27:48.240 --> 00:27:55.240
yeah, and when I think about these kinds of numbers, it's not just if you make a change to flask, then it affects this many people.

00:27:55.240 --> 00:28:01.240
But these are themselves applications using this, each of which has many, many, many users potentially.

00:28:01.240 --> 00:28:04.240
So there's a multiplier on top of this, right?

00:28:04.240 --> 00:28:05.240
Yeah.

00:28:05.240 --> 00:28:07.240
And, yeah, that's been, that's, that's been difficult.

00:28:07.240 --> 00:28:09.240
That's one of the other state of flask.

00:28:09.240 --> 00:28:17.240
that's the other half of the state of flask is like, we've been making a lot of progress, but like this amount of responsibility, rests.

00:28:17.240 --> 00:28:19.240
pretty heavily on it.

00:28:19.240 --> 00:28:21.240
It's like, it can be pretty stressful.

00:28:21.240 --> 00:28:26.240
and you did mention a baby and being potentially tired in the future and stuff like that as well.

00:28:26.240 --> 00:28:27.240
Yeah, exactly.

00:28:27.240 --> 00:28:38.240
but like combined, you know, these numbers combined with the thought that anything I do could break a bunch of people and get them to complain at me or people will complain at me, even if I don't break a ton of people.

00:28:38.240 --> 00:28:45.240
And, just kind of like the ever present notion of, we are not at inbox zero on some of the projects and stuff.

00:28:45.240 --> 00:28:47.240
So there is still a lot of open stuff.

00:28:47.240 --> 00:28:49.240
It's, yeah, it's a lot of stress for me.

00:28:49.240 --> 00:28:55.240
And it's been, I've like suffered burnout a few times from, per year for the last four years or so.

00:28:55.240 --> 00:28:56.240
Oh man, that's rough.

00:28:56.240 --> 00:28:59.240
are you getting some support from the other people at the Oregon potentially from?

00:28:59.240 --> 00:29:03.240
Yeah, I, I, I, there is, there are other people on the team.

00:29:03.240 --> 00:29:13.240
So it's not like we're a bus factor of one in the sense of like, if I was not here for some reason, other people would have access to these things and could keep them going.

00:29:13.240 --> 00:29:27.240
But the reality is, not to downplay all the work that they do in the community and, when they, when they are working on code, but like I do probably 90% of the code and like the decision making and all that sort of stuff.

00:29:27.240 --> 00:29:27.240
Right.

00:29:27.240 --> 00:29:31.240
So it would definitely be a very different project if I wasn't around.

00:29:31.240 --> 00:29:33.240
It would at minimum be a scramble.

00:29:33.240 --> 00:29:34.240
Right.

00:29:34.240 --> 00:29:38.240
Like when Guido stepped down, like, wait a minute, who's doing what now?

00:29:38.240 --> 00:29:39.240
Yeah.

00:29:39.240 --> 00:29:53.240
So like I, I, so this is what I've been like trying to work on for a long time because I've, kind of always recognized that, I've been kind of the, not limiting factor, but like the, I'm like the point of failure in this thing.

00:29:53.240 --> 00:30:00.240
and so I've been trying to grow the team and, trying to make our processes more automated, you know, try.

00:30:00.240 --> 00:30:11.240
now what I'm trying to do is, because I know I have this hard deadline in January when I'm going to have less time, is I'm trying to document how to do what I've learned to do.

00:30:11.240 --> 00:30:19.240
like how to be a maintainer is something we don't really have a lot of, it feels like is, and we have contribute, we have a contributing guide, right.

00:30:19.240 --> 00:30:26.240
Or we have user documentation or developer guide, like how to use flask, but we don't have a, how to maintain flask documentation.

00:30:26.240 --> 00:30:27.240
Yeah.

00:30:27.240 --> 00:30:28.240
Yeah.

00:30:28.240 --> 00:30:30.240
It must be kind of missing from the community in general.

00:30:30.240 --> 00:30:30.240
Yeah.

00:30:30.240 --> 00:30:32.240
I, I presume that'd be out in public.

00:30:32.240 --> 00:30:35.240
People interested could check it out whenever that gets written.

00:30:35.240 --> 00:30:35.240
Oh yeah.

00:30:35.240 --> 00:30:41.240
It's, it's not like a private, it's not gonna be a private thing, but, it's not, it's not ready yet, but it's something I'm actively working on.

00:30:41.240 --> 00:30:52.240
It's like, identifying like all the stuff I've accumulated in my head and what I've learned how to do or decisions I've made or like services we use.

00:30:52.240 --> 00:30:55.240
Like just the fact that, oh, you know, we're part of the PSF.

00:30:55.240 --> 00:30:57.240
This is how you contact the PSF.

00:30:57.240 --> 00:30:58.240
Yeah.

00:30:58.240 --> 00:30:59.240
Right.

00:30:59.240 --> 00:31:00.240
It's not written down.

00:31:00.240 --> 00:31:01.240
Yeah, exactly.

00:31:01.240 --> 00:31:07.240
Or like that we're part of Tidelift and you know, these other, donation sources.

00:31:07.240 --> 00:31:08.240
Yeah.

00:31:08.240 --> 00:31:20.240
Also like stuff like how, how do I make a decision on whether to keep something closed or open or, when is it time to make a new release or what is our version policy or our support policy or our security policy?

00:31:20.240 --> 00:31:25.240
Like a lot of these things are, under documented right now if they're documented at all.

00:31:25.240 --> 00:31:34.240
And, so that's kind of my goal for the rest of this year as is to like make pallets more sustainable, regardless of, how much availability I have.

00:31:34.240 --> 00:31:37.240
Maybe a little more systematized maybe a little bit.

00:31:37.240 --> 00:31:38.240
Yeah.

00:31:38.240 --> 00:31:42.240
so before we move off of PI PI stats, Goosra has an interesting meta question.

00:31:42.240 --> 00:31:45.240
Is PI PI stats built on Flask itself?

00:31:45.240 --> 00:31:46.240
Do you have any idea?

00:31:46.240 --> 00:31:47.240
I have no idea.

00:31:47.240 --> 00:31:50.240
I know they're open source.

00:31:50.240 --> 00:31:51.240
Oh yeah.

00:31:51.240 --> 00:31:52.240
Okay.

00:31:52.240 --> 00:31:53.240
So maybe you could tell that way.

00:31:53.240 --> 00:31:55.240
I was gonna say there's not like a header or something that Flask sends.

00:31:55.240 --> 00:31:57.240
So, yeah.

00:31:57.240 --> 00:31:58.240
I can't find it.

00:31:58.240 --> 00:31:59.240
Yeah.

00:31:59.240 --> 00:32:00.240
We don't know.

00:32:00.240 --> 00:32:01.240
It is open source.

00:32:01.240 --> 00:32:02.240
Oh, here we go.

00:32:02.240 --> 00:32:03.240
Here we go.

00:32:03.240 --> 00:32:04.240
We've got a requirement.

00:32:04.240 --> 00:32:05.240
We've got a project.tomo.

00:32:05.240 --> 00:32:06.240
Yeah, it's flask.

00:32:06.240 --> 00:32:07.240
There you have it.

00:32:07.240 --> 00:32:08.240
How about that?

00:32:08.240 --> 00:32:09.240
There we go.

00:32:09.240 --> 00:32:10.240
Beautiful.

00:32:10.240 --> 00:32:15.240
It's very rewarding every time I, every time I find out a new place that like, like,

00:32:15.240 --> 00:32:20.240
just decided to use Flask and has been using it and it's just completely behind the scenes

00:32:20.240 --> 00:32:23.240
and you can't tell like nothing's like, it's all just working.

00:32:23.240 --> 00:32:24.240
Yeah.

00:32:24.240 --> 00:32:26.240
But I love, like, I love going to like conferences for that reason too.

00:32:26.240 --> 00:32:30.240
Cause so many people come up to me and like say like, Oh yeah, we use Flask to like run

00:32:30.240 --> 00:32:38.240
the Mars Rover or, somebody, one of the, one of the people giving a talk at

00:32:38.240 --> 00:32:47.240
Flask on it was like my company, writes the like energy management software for this conference center.

00:32:47.240 --> 00:32:48.240
And it's in Flask.

00:32:48.240 --> 00:32:51.240
It's very fun to learn all those new, no uses.

00:32:51.240 --> 00:32:53.240
Have you ever gotten onto the JPL?

00:32:53.240 --> 00:32:55.240
I know it's like a blowers drive.

00:32:55.240 --> 00:32:56.240
That'd be fun, right?

00:32:56.240 --> 00:32:58.240
To go out there and actually see the Flask.

00:32:58.240 --> 00:32:59.240
I would see it.

00:32:59.240 --> 00:33:01.240
That's what runs in the Rover and the helicopter.

00:33:01.240 --> 00:33:02.240
Awesome.

00:33:02.240 --> 00:33:03.240
All right.

00:33:03.240 --> 00:33:04.240
So that's Flask.

00:33:04.240 --> 00:33:06.240
what one do you want to talk about next?

00:33:06.240 --> 00:33:07.240
Next on my tablets, I got Jinja.

00:33:07.240 --> 00:33:09.240
We can go wherever you want.

00:33:09.240 --> 00:33:10.240
So like maybe that a good foundation.

00:33:10.240 --> 00:33:21.240
Yeah, we did, like Flask and Variksberg are pretty tied, because most of the stuff that people report to Flask is actually an issue with one of the other libraries that Flask is using.

00:33:21.240 --> 00:33:23.240
And most often that's with Variksberg.

00:33:23.240 --> 00:33:25.240
So you can see we're not at inbox zero.

00:33:25.240 --> 00:33:26.240
We're at inbox nine right now.

00:33:26.240 --> 00:33:28.240
That's still, that's incredible.

00:33:28.240 --> 00:33:35.240
you know, maybe like I asked you to explain palettes like Variksberg, you know, that's probably not how English speaking folks would say that.

00:33:35.240 --> 00:33:38.240
Workzoyger, Workzug or something, right?

00:33:38.240 --> 00:33:42.240
But Armin, the creator of this is German or Austrian, but speaks German.

00:33:42.240 --> 00:33:44.240
And so that's the German pronunciation.

00:33:44.240 --> 00:33:46.240
And hence, that's why we're saying it that way.

00:33:46.240 --> 00:33:47.240
Right.

00:33:47.240 --> 00:33:51.240
That's my best approximation of the, I'm sure I'm doing it wrong also, but, pretty close.

00:33:51.240 --> 00:33:52.240
Yeah.

00:33:52.240 --> 00:33:56.240
It literally is like, it means like work thing, which is like, yeah.

00:33:56.240 --> 00:33:57.240
Yeah.

00:33:57.240 --> 00:33:57.240
Yeah.

00:33:57.240 --> 00:33:58.240
Basically tool.

00:33:58.240 --> 00:33:58.240
Yeah.

00:33:58.240 --> 00:34:02.240
It's like tools, like work, work, work, your carpentry tools or yes.

00:34:02.240 --> 00:34:03.240
Handyman tools type thing.

00:34:03.240 --> 00:34:04.240
Yeah.

00:34:04.240 --> 00:34:07.240
This is, this was written before, before flask existed.

00:34:07.240 --> 00:34:14.240
And it's, it, I think it was written more when like WSGI was like, was becoming a spec or had just become a spec.

00:34:14.240 --> 00:34:27.240
because it is just a bunch of utilities for doing HTTP header parsing, doing all the low level WSGI, environment management, wrapping that information in request and response objects.

00:34:27.240 --> 00:34:30.240
So you can kind of work with them a little easier.

00:34:30.240 --> 00:34:36.240
so it's all like the underlying tools that you need, to build flask.

00:34:36.240 --> 00:34:49.240
there's also like the whole routing system, you know, so you can, in flask, you just do at app dot route, but behind the scenes, what that's doing is it's adding it to a, route map that very so like defines.

00:34:49.240 --> 00:34:55.240
And that defines like, here's how we actually like collect that and like turn it into a bunch of rules that we can match URLs against.

00:34:55.240 --> 00:34:57.240
And there's other things in there as well.

00:34:57.240 --> 00:35:00.240
The reloader, the debugger, the dev server.

00:35:00.240 --> 00:35:10.240
So one of the updates you gave on Vexo is, performance improvement by way of getting rid of the stir bites duopoly.

00:35:10.240 --> 00:35:11.240
Yeah.

00:35:11.240 --> 00:35:13.240
I've been doing a lot in Vexo.

00:35:13.240 --> 00:35:21.240
So that, that one and the, URL of one that we'll talk about, were two big things, but basically like this library, like I just described it.

00:35:21.240 --> 00:35:26.240
It's like just a huge collection of tools and little utility functions.

00:35:26.240 --> 00:35:34.240
And there, there was a his, there's a history there because when this, when all these libraries first started, Python three didn't exist or barely existed.

00:35:34.240 --> 00:35:41.240
And so everything was written originally for Python two, where strings and bytes worked a lot different.

00:35:41.240 --> 00:35:45.240
it was one of the primary breaking changes.

00:35:45.240 --> 00:35:54.240
There were other changes, but that was the, that was the long, the one that people really had a long live bug tracking, you know, if it's different syntax, you just change the syntax.

00:35:54.240 --> 00:35:57.240
But if it's subtle behavior changes, then trouble looms.

00:35:57.240 --> 00:35:58.240
Yeah.

00:35:58.240 --> 00:36:08.240
and so, yeah, in Python two, it was much easier to like, like, well, not, yeah, it was easier to treat like incoming data as bytes, but like treat it as a string.

00:36:08.240 --> 00:36:18.240
There wasn't like as big a distinction between strings and bytes, which was convenient in some ways, especially for like low level tools like HTTP, where you just work in ASCII bytes.

00:36:18.240 --> 00:36:19.240
Yeah.

00:36:19.240 --> 00:36:20.240
So I was gonna say if you like ASCII, it's probably fine.

00:36:20.240 --> 00:36:22.240
If you don't like ASCII, you might not like it so much.

00:36:22.240 --> 00:36:23.240
Yeah.

00:36:23.240 --> 00:36:27.240
But it also like cause like, like, like I first learned Python three.

00:36:27.240 --> 00:36:32.240
So I like, I have a kind of difference on this, but I like, I like Python three's distinction.

00:36:32.240 --> 00:36:35.240
I think it's much better to have that distinction.

00:36:35.240 --> 00:36:38.240
Yeah. You and me both.

00:36:38.240 --> 00:36:45.240
but at the time, like when it was first happening, it wasn't as clear cut, like, oh yeah, this is better or this is easier because you had to support both.

00:36:45.240 --> 00:37:03.240
And, so when Python three came out and started getting like more momentum, all these libraries tacked on, support for both Python two and Python three, which among other things meant that you had to now check for like, whether you were getting strings or bytes everywhere.

00:37:03.240 --> 00:37:10.240
because you might be in Python two land where you might be in Python three land where you're getting strings and need to like do other conversions.

00:37:10.240 --> 00:37:16.240
So it was especially bad because it's a collection of like kind of independent utility functions.

00:37:16.240 --> 00:37:25.240
some functions build on each other, but every function could potentially be imported and used for its own little piece of functionality.

00:37:25.240 --> 00:37:30.240
And so every single function needed to check all its arguments for like, am I a string or bytes?

00:37:30.240 --> 00:37:42.240
So even if most of the time, especially nowadays, people aren't using VaricsOic directly and all these tools, they're using flask, which just does the right thing from the get go, which means all those intermediate checks on the way are totally unnecessary.

00:37:42.240 --> 00:37:48.240
You know, because you already knew from like the first function that it's already testing 10 times for the same thing down the cross.

00:37:48.240 --> 00:37:54.240
Right. And this was just pervasive throughout, VaricsOic was just everywhere with all these unnecessary checks.

00:37:54.240 --> 00:38:00.240
And it made the code more complex to maintain reason about made the like execution slower.

00:38:00.240 --> 00:38:09.240
there's kind of a, another thing going on at the same time, which is like we had, because we could support like, because we were working with bytes in a lot of places.

00:38:09.240 --> 00:38:21.240
there was also like a lot more support for, well, maybe the data is encoded in this encoding or this one, but nowadays everybody like I looked at before I made this decision, I looked at stats.

00:38:21.240 --> 00:38:28.240
everybody, 99.5% of people, web applications on the web right now are using UTF-8.

00:38:28.240 --> 00:38:30.240
So they're never dealing with other encodings.

00:38:30.240 --> 00:38:32.240
And UTF-8 can encode everything.

00:38:32.240 --> 00:38:33.240
Yeah.

00:38:33.240 --> 00:38:38.240
and, so like BericsOic was doing all these things about letting you pass encodings all over the place.

00:38:38.240 --> 00:38:40.240
And switch between things.

00:38:40.240 --> 00:38:42.240
And that was also complexity.

00:38:42.240 --> 00:38:44.240
So finally decided, okay.

00:38:44.240 --> 00:39:00.240
I had heard some anecdotes as well, from people who had switched from using Python 2 to Python 3 or had stuck with Python 2 and old versions of BericsOic because they had noticed a significant performance difference in the first versions of BericsOic that added that 2 and 3 compatibility.

00:39:00.240 --> 00:39:07.240
and so I figured, okay, I'm going to get a similar speed up if I remove that now, now that we don't support Python 2 at all.

00:39:07.240 --> 00:39:08.240
that was very complicated.

00:39:08.240 --> 00:39:20.240
I basically like just had to go through every single function and start removing it, run all the tests, see what failed, pick another function to keep working on and just slowly, slowly pull it all apart.

00:39:20.240 --> 00:39:33.240
but I did end up with, so now BericsOic just supports strings everywhere except in the very few places where it works directly with the request and response data, where it, like, it was like.

00:39:33.240 --> 00:39:34.240
Right.

00:39:34.240 --> 00:39:35.240
Like multi-part form file.

00:39:35.240 --> 00:39:36.240
Yeah.

00:39:36.240 --> 00:39:42.240
When you first get the request in and it's just the raw body that you might turn into JSON or form data, et cetera.

00:39:42.240 --> 00:39:52.240
or, when you're finally producing the response and taking like either file data, which is binary or, you know, string data and turning it into the bytes.

00:39:52.240 --> 00:39:56.240
that's the only place now where it deals with bytes everywhere else is strings.

00:39:56.240 --> 00:39:59.240
And the boundary there is always UTFA.

00:39:59.240 --> 00:40:03.240
and if UTFA isn't your thing, it's not, we're not preventing you from using other things.

00:40:03.240 --> 00:40:10.240
It just means that when you're at those boundaries, you pick the new, you know, you can take the bytes directly and work with them.

00:40:10.240 --> 00:40:11.240
Cool.

00:40:11.240 --> 00:40:23.240
surprisingly I have gotten, like, this was a huge, massive change and I have not gotten any bug reports about it, which I'm just, I was, I was like, I was stressing so much about like, okay, this is huge.

00:40:23.240 --> 00:40:29.240
I mean, we tested it first and, like maybe the releases and everything, but those go to almost no attempt.

00:40:29.240 --> 00:40:33.240
Talk Python To Me is partially supported by our training courses.

00:40:33.240 --> 00:40:39.240
Do you want to learn Python, but you can't bear to subscribe to yet another service at Talk Python training?

00:40:39.240 --> 00:40:41.240
We hate subscriptions too.

00:40:41.240 --> 00:40:46.240
That's why our course bundle gives you full access to the entire library of courses for just one fair price.

00:40:46.240 --> 00:40:47.240
That's right.

00:40:47.240 --> 00:40:52.240
With the everything bundle, you save over 80% off the full price of our courses.

00:40:52.240 --> 00:40:54.240
And you own them all forever.

00:40:54.240 --> 00:41:01.240
That includes the courses published at the time of purchase, as well as courses released within about a year after the bundle.

00:41:01.240 --> 00:41:06.240
Stop subscribing and start learning at talkpython.fm/everything.

00:41:06.240 --> 00:41:08.240
All right.

00:41:08.240 --> 00:41:10.240
I can't leave the house for the next week.

00:41:10.240 --> 00:41:11.240
Publish.

00:41:11.240 --> 00:41:22.240
Yeah, no, like you joke, but like, seriously, when I hit the publish button or when I used to hit the publish button, I would be like, I want to go for a walk now because I just did a ton of work and I just want to clear my

00:41:22.240 --> 00:41:27.240
head, but oh God, then an hour from now when I get back, what is my inbox going to look like?

00:41:27.240 --> 00:41:27.240
Yeah.

00:41:27.240 --> 00:41:28.240
Yeah.

00:41:28.240 --> 00:41:29.240
Yeah.

00:41:29.240 --> 00:41:30.240
That's great.

00:41:30.240 --> 00:41:37.240
And you know, you talk another part of your presentation at FlaskCon was about project level stuff.

00:41:37.240 --> 00:41:41.240
And you also talked about the systemization type of thing you're looking for.

00:41:41.240 --> 00:41:44.240
So one of the things you switched to is the trusted publishers.

00:41:44.240 --> 00:41:45.240
That's kind of cool, right?

00:41:45.240 --> 00:41:46.240
Yeah.

00:41:46.240 --> 00:41:47.240
Yeah.

00:41:47.240 --> 00:42:03.240
So I mentioned a little bit about like when we were talking about, sorry, when we were talking about pinning requirements, I was saying, oh, you know, it makes it a lot easier for every contributor to work on things at sprints if every single environment is the same.

00:42:03.240 --> 00:42:13.240
And so kind of on a meta level, I, there's a lot of like different tools and configurations and workflows we use across projects.

00:42:13.240 --> 00:42:17.240
But they've kind of been developed over time as I've learned them.

00:42:17.240 --> 00:42:21.240
And so I've been doing, I've been doing work on like a meta level.

00:42:21.240 --> 00:42:28.240
So every project now, if you go look at Flask and Verksoeg and Jinja and you clone, clone all the repos, all the repos look exactly the same.

00:42:28.240 --> 00:42:34.240
And they all have the same files, the same directory layout, the same tool configurations, et cetera.

00:42:34.240 --> 00:42:44.240
Because just like it should be easy for every contributor to get the same environment, it should be easy for anybody who's used to contributing to Flask to go over to Verksoeg and be just as comfortable in that project.

00:42:44.240 --> 00:42:47.240
It's the Flask way and it all goes the same, right?

00:42:47.240 --> 00:42:48.240
Mm-hmm.

00:42:48.240 --> 00:42:54.240
So yeah, like trusted publishing, that was another big part of this was like making workflows.

00:42:54.240 --> 00:42:57.240
So we have a workflow for running tests, for example.

00:42:57.240 --> 00:43:01.240
But publishing used to be a very manual process.

00:43:01.240 --> 00:43:04.240
And it's evolved over the years too, because we were on Travis before.

00:43:04.240 --> 00:43:10.240
And then we needed to make like Windows builds for MarkupSafe, which has wheels.

00:43:10.240 --> 00:43:12.240
So we were on AppVayor also.

00:43:12.240 --> 00:43:16.240
Then Travis went away and stuff and GitHub Actions became more.

00:43:16.240 --> 00:43:18.240
And so, but like that was all for tests.

00:43:18.240 --> 00:43:31.240
Like for building, we basically, when we wanted to make a new release, it was way harder in the past, which is why releases happened less often.

00:43:31.240 --> 00:43:36.240
So we had to do all the little bookkeeping stuff to like set the release version and the release date and everything.

00:43:36.240 --> 00:43:42.240
Now I have to go get my Mac, get my Windows machine, get my Linux machine, make the builds on all of them.

00:43:42.240 --> 00:43:43.240
Oh my gosh.

00:43:43.240 --> 00:43:49.240
So we can manually like consolidate them, upload them manually to PyPI, etc. and make sure that all worked.

00:43:49.240 --> 00:43:54.240
So what I have now is they have a standard publish workflow on every single project.

00:43:54.240 --> 00:43:56.240
It works exactly the same way.

00:43:56.240 --> 00:43:59.240
And you make a PR so that you can see all the tests run.

00:43:59.240 --> 00:44:03.240
You know, you make a PR that just does that version bump and the date, you know, says the release date.

00:44:03.240 --> 00:44:10.240
You watch all the tests pass and then you push a tag before you merge, you push the release tag and that kicks off the build workflow.

00:44:10.240 --> 00:44:12.240
So we run our build.

00:44:12.240 --> 00:44:22.240
We do SLSA or SALSA out of station, say like these are, these builds are associated with these commits in Git and were built by these workers.

00:44:22.240 --> 00:44:24.240
It's kind of like a supply chain level thing.

00:44:24.240 --> 00:44:30.240
And then we automatic, like it will collect all that stuff, show you here is the release.

00:44:30.240 --> 00:44:33.240
Like here's a draft release for this here.

00:44:33.240 --> 00:44:39.240
Like you have one more opportunity to look at the files and then a maintainer can go in and click publish in GitHub's UI.

00:44:39.240 --> 00:44:43.240
And that will kick off like, okay, maintainer said everything's good.

00:44:43.240 --> 00:44:44.240
We're just going to upload it now.

00:44:44.240 --> 00:44:45.240
And that's all automated.

00:44:45.240 --> 00:44:51.240
You don't, we're using the trusted workflow, trusted publishing workflow between PyPI and GitHub.

00:44:51.240 --> 00:45:00.240
So I no longer have to have my password stored locally for PyPI or have like tokens made for each project.

00:45:00.240 --> 00:45:05.240
All the authentication happens between GitHub and PyPI automatically and securely.

00:45:05.240 --> 00:45:06.240
It's pretty cool.

00:45:06.240 --> 00:45:11.240
If you go look up like trusted publishing on PyPI has like a blog or documentation that explains it.

00:45:11.240 --> 00:45:14.240
But it is really, really convenient.

00:45:14.240 --> 00:45:23.240
And it makes like this whole workflow means that whenever I want to make a new release, I just make a regular PR, push a tag and then see everything pass and say, yes, we're good.

00:45:23.240 --> 00:45:26.240
So I just basically have to push three buttons now.

00:45:26.240 --> 00:45:27.240
Yeah, that's fantastic.

00:45:27.240 --> 00:45:30.240
Which makes it a lot easier to just make more regular releases.

00:45:30.240 --> 00:45:31.240
Like even bug fix releases.

00:45:31.240 --> 00:45:34.240
I was always unwilling to make them fast because it was so much work.

00:45:34.240 --> 00:45:43.240
Well, if it's a matter of just pushing, pushing a commit and then saying, okay, you're way more likely to quickly ship fixes and ship smaller releases and all sorts of stuff.

00:45:43.240 --> 00:45:44.240
It's really good.

00:45:44.240 --> 00:45:49.240
So you don't have the whole supply chain problem of your machine somehow got hacked.

00:45:49.240 --> 00:45:54.240
But then now when you do your build, somebody's injected something gnarly into the wheel, right?

00:45:54.240 --> 00:45:55.240
Because it never goes through you.

00:45:55.240 --> 00:45:59.240
It just goes from GitHub directly to PyPI through GitHub actions, right?

00:45:59.240 --> 00:46:00.240
Yeah.

00:46:00.240 --> 00:46:02.240
And GitHub added their own.

00:46:02.240 --> 00:46:12.240
So the SLSS attestation that I was talking about, if you scroll down on this screen, you can see that multiple.intoto.jsonl.

00:46:12.240 --> 00:46:15.240
If you click on it, it's just a big blob of text.

00:46:15.240 --> 00:46:20.240
But that's basically describing here are these wheel files, like those wheel files and SDISD files.

00:46:20.240 --> 00:46:27.240
And here's like signatures and about like the GitHub environment that built this and everything.

00:46:27.240 --> 00:46:30.240
GitHub itself is adding that similar sort of attestation.

00:46:30.240 --> 00:46:34.240
And then PyPI is also adding more attestations.

00:46:34.240 --> 00:46:40.240
It's not out yet though, but I'm sure I'm testing it once they're starting it and release it in beta.

00:46:40.240 --> 00:46:54.240
So being able to attest that like our build environment was consistent with what the artifacts you're seeing and like the upload along the way was secured and like it is gaining more, like that's more getting more attention nowadays.

00:46:54.240 --> 00:46:57.240
Yeah, that's really trying to keep it all.

00:46:57.240 --> 00:46:58.240
It's excellent.

00:46:58.240 --> 00:47:02.240
It's also makes it easier to hand it over to someone else and trust that they're doing it right.

00:47:02.240 --> 00:47:04.240
Not like something new.

00:47:04.240 --> 00:47:05.240
Oh, they only like windows seven.

00:47:05.240 --> 00:47:07.240
So you got a weird wheel or something now.

00:47:07.240 --> 00:47:08.240
Yeah.

00:47:08.240 --> 00:47:08.240
Yeah.

00:47:08.240 --> 00:47:09.240
I mean, this.

00:47:09.240 --> 00:47:09.240
Yeah.

00:47:09.240 --> 00:47:10.240
This line is on.

00:47:10.240 --> 00:47:14.240
It's like was such an impediment to finding other maintainers because you had to teach.

00:47:14.240 --> 00:47:18.240
Like, I think I probably had some document that explained how to do this build before.

00:47:18.240 --> 00:47:22.240
Like all the steps I went through, but it was like it was so complicated.

00:47:22.240 --> 00:47:27.240
And like, yeah, if somebody else wanted to make a release, I would have to make sure they did everything correctly.

00:47:27.240 --> 00:47:29.240
I had just gotten used to it.

00:47:29.240 --> 00:47:31.240
It was like wrote for me, but it was a lot of steps.

00:47:31.240 --> 00:47:32.240
Yeah.

00:47:32.240 --> 00:47:36.240
Now it's just anybody does the same, you know, make a PR, push a button.

00:47:36.240 --> 00:47:37.240
Everything else is done for them.

00:47:37.240 --> 00:47:38.240
Yeah.

00:47:38.240 --> 00:47:39.240
Yeah, that's awesome.

00:47:39.240 --> 00:47:40.240
All right.

00:47:40.240 --> 00:47:46.240
So the two takeaways that I got from Virksog's update was this dropping of the two to three juggling

00:47:46.240 --> 00:47:49.240
made it 50% faster for request response.

00:47:49.240 --> 00:47:53.240
And URL lib is no longer URL lib-ish.

00:47:53.240 --> 00:47:54.240
Yeah.

00:47:54.240 --> 00:47:55.240
Yeah.

00:47:55.240 --> 00:47:56.240
So that was the other part.

00:47:56.240 --> 00:47:57.240
If we're going back to Virksog.

00:47:57.240 --> 00:48:02.240
So we removed the string bytes, testing all over the place.

00:48:02.240 --> 00:48:08.240
And Virksog, this was again, historically because of like Python two versus Python three differences

00:48:08.240 --> 00:48:10.240
and then compatibility and stuff.

00:48:10.240 --> 00:48:13.240
But another of the changes in Python three was URL lib.

00:48:13.240 --> 00:48:17.240
In Python two, there was like URL lib and URL lib two.

00:48:17.240 --> 00:48:19.240
And that's why there's also the project URL of three.

00:48:19.240 --> 00:48:20.240
Yeah.

00:48:20.240 --> 00:48:26.240
But Python three kind of consolidated that back into URL lib with sub packages instead.

00:48:26.240 --> 00:48:30.240
And so it kind of changed the interfaces and where everything was.

00:48:30.240 --> 00:48:37.240
So at the time it made sense for Virksog to just copy that code into our own code base

00:48:37.240 --> 00:48:42.240
and then make our own tweaks to it to be compatible with everything.

00:48:42.240 --> 00:48:49.240
And, but what that ended up meaning was we had an entire copy of URL lib with our own tweaks in our code base.

00:48:49.240 --> 00:48:52.240
And then we weren't keeping up with changes.

00:48:52.240 --> 00:48:56.240
So like CPython has a, has like a hundred different core devs on it.

00:48:56.240 --> 00:49:04.240
I mean, they're not all paying attention to URL, but they're making regular, you know, security updates or just performance improvements and that sort of stuff.

00:49:04.240 --> 00:49:08.240
And we're not getting any of those benefits because we now have like this vendor copy that we've changed ourselves.

00:49:08.240 --> 00:49:10.240
We couldn't even bring in the changes.

00:49:10.240 --> 00:49:19.240
And just like the string bytes everywhere, it, it having that our own copy of that really complex low level code made it harder to reason about the code and be like maintain it.

00:49:19.240 --> 00:49:23.240
And all this stuff is kind of like, it's not the essential parts of Virksog.

00:49:23.240 --> 00:49:26.240
Virksog is like trying to be the WSGI utilities and stuff.

00:49:26.240 --> 00:49:33.240
It's not trying to be like every single possible, like it's not trying to, we don't need to make our own URL of utility, everything to be Virksog.

00:49:33.240 --> 00:49:34.240
Yeah.

00:49:34.240 --> 00:49:37.240
So that was another big one where identified like, okay, this is just a lot of complexity.

00:49:37.240 --> 00:49:52.240
I didn't actually expect this to be a performance improvement, but when I actually went through and removed URL lib and our own copy and replaced it with Python's version, we got like a 30% speed up just on our own.

00:49:52.240 --> 00:49:57.240
So the combined of those two big changes was like about a 50% speed up in our request response handling.

00:49:57.240 --> 00:49:58.240
Yeah, that's awesome.

00:49:58.240 --> 00:50:04.240
Like it turns out that the, like Python's implementation of all this was just faster than ours.

00:50:04.240 --> 00:50:07.240
And it's still, you know, does all the same things.

00:50:07.240 --> 00:50:08.240
Yeah.

00:50:08.240 --> 00:50:09.240
So now you don't have to mess with it.

00:50:09.240 --> 00:50:10.240
You get it for free.

00:50:10.240 --> 00:50:11.240
Yeah, exactly.

00:50:11.240 --> 00:50:12.240
Like everyone else.

00:50:12.240 --> 00:50:22.240
We can, like the, a lot of these changes, a lot of the changes in all the libraries, stuff where I've been, you know, like, like I said, I wasn't the original author of this stuff.

00:50:22.240 --> 00:50:25.240
So I've had to like, learn the code bases.

00:50:25.240 --> 00:50:28.240
I've had to like dig into them and say like, what is written here?

00:50:28.240 --> 00:50:29.240
Why is it written this way?

00:50:29.240 --> 00:50:30.240
How is it all related?

00:50:30.240 --> 00:50:38.240
And along the way, I just keep identifying like, okay, this is the actual, you know, purpose of this library.

00:50:38.240 --> 00:50:42.240
Does this fit into that purpose or can we be doing something different?

00:50:42.240 --> 00:50:50.240
And so kind of trying to like slim down the libraries and like focus, tighten up their, the focus on their like purposes more.

00:50:50.240 --> 00:50:51.240
Right.

00:50:51.240 --> 00:50:54.240
If there's parts that are, it needs to work, but it's not its purpose.

00:50:54.240 --> 00:50:55.240
Maybe that can come from somewhere else.

00:50:55.240 --> 00:50:56.240
Yeah.

00:50:56.240 --> 00:50:57.240
Yeah.

00:50:57.240 --> 00:50:58.240
All right.

00:50:58.240 --> 00:50:59.240
Yeah, absolutely.

00:50:59.240 --> 00:51:01.240
We've got about 10 more minutes.

00:51:01.240 --> 00:51:02.240
Okay.

00:51:02.240 --> 00:51:03.240
Probably.

00:51:03.240 --> 00:51:07.240
So what else do you want to cover to, to, to, to, the state?

00:51:07.240 --> 00:51:14.240
There's there, I'll mention, Jinja and click really briefly because, these two libraries are also huge.

00:51:14.240 --> 00:51:15.240
They're used everywhere.

00:51:15.240 --> 00:51:16.240
downloaded a ton.

00:51:16.240 --> 00:51:18.240
Jinja is a templating library.

00:51:18.240 --> 00:51:23.240
you write template files and then you can render them with, you know, variables to produce output.

00:51:23.240 --> 00:51:27.240
HTML, you know, but also like text files or all sorts of stuff.

00:51:27.240 --> 00:51:33.240
yeah, I think people, yeah, I think people pigeonhole Jinja2 much.

00:51:33.240 --> 00:51:37.240
They think, okay, well I'm generating dynamic HTML from a server request.

00:51:37.240 --> 00:51:40.240
Like you can use Jinja to generate all sorts of files.

00:51:40.240 --> 00:51:46.240
I use it on, stuff basically on, Python generate like emails.

00:51:46.240 --> 00:51:48.240
Somebody wants to reset their password, right?

00:51:48.240 --> 00:51:51.240
Like I'll generate an email body from it, for example.

00:51:51.240 --> 00:51:52.240
Right.

00:51:52.240 --> 00:51:53.240
That kind of stuff.

00:51:53.240 --> 00:51:54.240
Yeah.

00:51:54.240 --> 00:51:57.240
And then click is a, just like flask is a framework for web applications.

00:51:57.240 --> 00:51:59.240
Click is a framework for command line applications.

00:51:59.240 --> 00:52:06.240
and both of these libraries have gotten a lot of attention from me, but they are not at inbox zero.

00:52:06.240 --> 00:52:09.240
Unlike the other libraries, I have not managed to get them down there.

00:52:09.240 --> 00:52:12.240
because I was working on all the other libraries.

00:52:12.240 --> 00:52:17.240
And, so these are where I'm like going to need to focus.

00:52:17.240 --> 00:52:22.240
like I said, like, like my current focus for the rest of this year is writing maintainer documentation.

00:52:22.240 --> 00:52:25.240
So I'm trying to do less code and all of these libraries are stable.

00:52:25.240 --> 00:52:26.240
Everybody downloads them.

00:52:26.240 --> 00:52:27.240
Like a ton of people download them.

00:52:27.240 --> 00:52:28.240
They all work.

00:52:28.240 --> 00:52:34.240
You know, we can make them better and everything, but they're not in like, it's not like they're, immediate danger or need of anything.

00:52:34.240 --> 00:52:38.240
But I do want to like clear out the backlogs of those as well.

00:52:38.240 --> 00:52:42.240
And, you know, looking for more contributors for that, help with that.

00:52:42.240 --> 00:52:55.240
you said you're looking for contributors who are really psyched about typing and also for God, if anybody isn't, if anybody knows, like is an expert in typing and like type annotations and static type tools.

00:52:55.240 --> 00:53:01.240
All the libraries do pass my PI strict tests and, export.

00:53:01.240 --> 00:53:04.240
they're like, we do do some testing against PI, right?

00:53:04.240 --> 00:53:05.240
To some degree.

00:53:05.240 --> 00:53:08.240
but I'm just typing.

00:53:08.240 --> 00:53:11.240
Just, it's very hard for me to understand.

00:53:11.240 --> 00:53:17.240
Like it's a very complicated, subject on its own versus all the other stuff I have to be doing.

00:53:17.240 --> 00:53:21.240
So I really would like somebody who's like, I am an expert at typing.

00:53:21.240 --> 00:53:28.240
I'm going to like start fixing up what you're, cause I like had to, I had to learn typing as I was like adding it to these libraries.

00:53:28.240 --> 00:53:31.240
yeah, yeah, that's a big thing that we can improve.

00:53:31.240 --> 00:53:32.240
okay.

00:53:32.240 --> 00:53:33.240
Yeah.

00:53:33.240 --> 00:53:40.240
And yeah, you know, there's like, we've gotten a lot of attention, a lot of the stuff in click and Jinja also, we have PRs for a lot of stuff.

00:53:40.240 --> 00:53:45.240
It's just a matter of me having the time to go through and review all of them to cut down that backlog, but we're getting there.

00:53:45.240 --> 00:53:46.240
I'll get there eventually.

00:53:46.240 --> 00:53:47.240
Yeah.

00:53:47.240 --> 00:53:48.240
Beautiful.

00:53:48.240 --> 00:53:55.240
and then the last, so the last thing I want to mention, or we ran out of time completely is, besides pallets, the core projects itself.

00:53:55.240 --> 00:54:02.240
I've kind of mentioned this theme of trying to make the projects more maintainable and grow the community and the team.

00:54:02.240 --> 00:54:09.240
And part of that that I've started identifying is, the greater ecosystem around these projects.

00:54:09.240 --> 00:54:24.240
so flask is great to use on its own, but it's made even better by all the extensions out there that people have written, you know, for doing email, doing database stuff, authentication, all sorts of things.

00:54:24.240 --> 00:54:34.240
and just like flask itself, you know, and all those libraries, there was a long period where they weren't getting as maintained, you know, as much attention and stuff.

00:54:34.240 --> 00:54:39.240
And then I started stepping in, a lot of those extensions were written quite a long time ago now.

00:54:39.240 --> 00:54:43.240
And the maintainers of those have kind of moved on to different things.

00:54:43.240 --> 00:54:47.240
And so there's a lot of stuff in the ecosystem that isn't getting as much attention as it needs.

00:54:47.240 --> 00:54:56.240
And a lot of the times, maintainers are aware of this and they're willing to like say, like to take help, you know, to, to get help with those things.

00:54:56.240 --> 00:55:01.240
And so, I was really inspired by a project for Django extensions called jazz band.

00:55:01.240 --> 00:55:02.240
Oh yeah.

00:55:02.240 --> 00:55:09.240
we're basically they're an organization that says, are you a popular Django extension or pip or pip-tools?

00:55:09.240 --> 00:55:14.240
For some reason they also control pip-tools, but, do you not have time to be the maintainer of it anymore?

00:55:14.240 --> 00:55:17.240
come over to jazz band.

00:55:17.240 --> 00:55:24.240
We'll you'll, you'll still be like, you can still be involved in the project, but we'll also help you find more people from the community.

00:55:24.240 --> 00:55:32.240
Like we will open up the maintaining, the maintain, maintaining process to your interested, you know, users in the community.

00:55:32.240 --> 00:55:37.240
and so I'm doing a similar thing with pallets called pallets eco or ecosystem.

00:55:37.240 --> 00:55:38.240
Okay.

00:55:38.240 --> 00:55:42.240
so if you don't go to github.com/pallets, eco, yeah.

00:55:42.240 --> 00:55:44.240
Yeah.

00:55:44.240 --> 00:55:45.240
Yeah.

00:55:45.240 --> 00:55:46.240
Pallets, dash eco, github.

00:55:46.240 --> 00:56:00.240
What we've started to do is reach out to, maintainers of like, well flask, SQL, Alchemy flask, admin flask, security flask, mail, blinker caching, debug toolbar, like all these huge extensions.

00:56:00.240 --> 00:56:08.240
So many of them, have these huge backlogs just like flask and all the other projects did when I got started with them, you know, and, their, their maintainers are overwhelmed.

00:56:08.240 --> 00:56:10.240
And so I reach out to them.

00:56:10.240 --> 00:56:14.240
I've been reaching out to them and, you know, kind of explaining, Hey, we're, we're starting this thing up.

00:56:14.240 --> 00:56:15.240
Do you want to add your project?

00:56:15.240 --> 00:56:18.240
so we've had some successful already.

00:56:18.240 --> 00:56:21.240
we've had people at sprints contribute to them.

00:56:21.240 --> 00:56:24.240
And, like I was talking about, I've kind of standardized.

00:56:24.240 --> 00:56:30.240
How flask and the other projects look like all the tools they're using the layouts they're using the workflows they're using.

00:56:30.240 --> 00:56:35.240
I'm taking that same approach and trying to standardize all the extensions we get to.

00:56:35.240 --> 00:56:45.240
so the idea is that anybody who's used to contributing to one of these extensions should, it should be just as familiar to them to jump into another extension and contribute there as well.

00:56:45.240 --> 00:56:46.240
Right.

00:56:46.240 --> 00:56:46.240
That's a great idea.

00:56:46.240 --> 00:56:47.240
Yeah.

00:56:47.240 --> 00:56:58.240
and so with pallets eco, we can help find maintainers, from the community, add them, but the core team for pallets themselves still has access as well.

00:56:58.240 --> 00:57:10.240
So, you know, if we make some change to flask that finally removes something that some, like some internal thing that somebody was relying on and like suddenly this popular live extension no longer works.

00:57:10.240 --> 00:57:11.240
We at least have access.

00:57:11.240 --> 00:57:20.240
Like we're not, we're probably not going to take on the responsibility of being the like core maintainers of all these things, but we can step in and make an emergency release that just, Oh, you just needed to change this line here.

00:57:20.240 --> 00:57:29.240
Make a bug fix release really quick so we can at least keep the ecosystem going while we like work on finding longer term sustainability with more maintainers.

00:57:29.240 --> 00:57:30.240
I love that idea.

00:57:30.240 --> 00:57:34.240
Cause a lot of times it is a really small change, but if it doesn't work, it doesn't work.

00:57:34.240 --> 00:57:35.240
Right.

00:57:35.240 --> 00:57:36.240
Right.

00:57:36.240 --> 00:57:37.240
Exactly.

00:57:37.240 --> 00:57:48.240
Like a lot of the times it's been like, I like we have made like little deprecations and then remittles and stuff, which have just, that was the one thing that some random extension was relying on that every, like half the ecosystem ended up relying on.

00:57:48.240 --> 00:57:52.240
And we just had to let you know, change a line or change an importer or add an argument.

00:57:52.240 --> 00:57:53.240
Yeah.

00:57:53.240 --> 00:57:55.240
So yeah, like that's, that's my big focus.

00:57:55.240 --> 00:58:03.240
Now, if people are interested in contributing to pallets, they're welcome to, you know, contribute to like Jinja and click or any of the projects as well.

00:58:03.240 --> 00:58:11.240
If there's open issues, they can work on them, but like a huge new source of like involvement for people can be, what are the extensions you're using?

00:58:11.240 --> 00:58:13.240
Let's get you involved in those as well.

00:58:13.240 --> 00:58:25.240
Yeah, it makes a lot of sense because to make a change to flask is, it's a highly polished piece of software, but the extensions potentially are more open to just jumping in and getting into it.

00:58:25.240 --> 00:58:26.240
Yeah.

00:58:26.240 --> 00:58:27.240
It's really, it's really hard for people.

00:58:27.240 --> 00:58:32.240
It's hard to tell people this, but like, you know, people come in excited, like, Oh, I want to contribute to flask.

00:58:32.240 --> 00:58:35.240
And then they look at it and they're like, Oh, three open issues.

00:58:35.240 --> 00:58:36.240
What do I do?

00:58:36.240 --> 00:58:41.240
You know, or like, and these three issues are like really low level stuff or like they've already been handled or something.

00:58:41.240 --> 00:58:42.240
Sure.

00:58:42.240 --> 00:58:52.240
And so we like, yeah, like what we're telling people now is like, okay, well flask, not only is it made up of these five other libraries, but there's also this whole extension ecosystem out there for you to contribute to.

00:58:52.240 --> 00:58:57.240
Like everybody's heard of flask, you know, so we can point them at the right place.

00:58:57.240 --> 00:58:59.240
They come to us and then we point them.

00:58:59.240 --> 00:59:00.240
Yeah.

00:59:00.240 --> 00:59:01.240
Excellent.

00:59:01.240 --> 00:59:02.240
Well, I'll be sure to link to that in the show notes as well.

00:59:02.240 --> 00:59:03.240
Yeah.

00:59:03.240 --> 00:59:04.240
And with that, I think we're out of time.

00:59:04.240 --> 00:59:05.240
Thank you for being here.

00:59:05.240 --> 00:59:07.240
Just final call to action.

00:59:07.240 --> 00:59:10.240
You know, people either want to contribute or just want to use flask.

00:59:10.240 --> 00:59:11.240
What do you tell them?

00:59:11.240 --> 00:59:12.240
Yeah.

00:59:12.240 --> 00:59:13.240
Yeah.

00:59:13.240 --> 00:59:15.240
So like I said, we're like developing all its eco.

00:59:15.240 --> 00:59:17.240
I'm currently writing maintainer documentation.

00:59:17.240 --> 00:59:24.240
So it'll make it easier for people to get involved in that way, writing a new website with a lot of our policies and everything.

00:59:24.240 --> 00:59:31.240
But the main point of contact for all of this and the way we could coordinate with our community is on our discord server.

00:59:31.240 --> 00:59:37.240
So if you go to discord.gg/palettes, that will let you join the palette server.

00:59:37.240 --> 00:59:40.240
It's, you know, open to everybody.

00:59:40.240 --> 00:59:49.240
We need help, you know, not only contributing to libraries, but answering questions in our questions channel or, you know, like triaging issues and all sorts of things.

00:59:49.240 --> 00:59:53.240
There's lots of different ways to be involved in the projects without writing code.

00:59:53.240 --> 00:59:55.240
And it all starts on that discord server.

00:59:55.240 --> 00:59:56.240
Awesome.

00:59:56.240 --> 00:59:59.240
Well, thanks again for being here and catch you next time.

00:59:59.240 --> 01:00:00.240
Yeah.

01:00:00.240 --> 01:00:01.240
Thank you.

01:00:01.240 --> 01:00:02.240
Bye.

01:00:02.240 --> 01:00:03.240
Bye.

01:00:03.240 --> 01:00:05.240
This has been another episode of Talk Python To Me.

01:00:05.240 --> 01:00:07.240
Thank you to our sponsors.

01:00:07.240 --> 01:00:08.240
Be sure to check out what they're offering.

01:00:08.240 --> 01:00:10.240
It really helps support the show.

01:00:10.240 --> 01:00:12.240
Take some stress out of your life.

01:00:12.240 --> 01:00:18.240
Get notified immediately about errors and performance issues in your web or mobile applications with Sentry.

01:00:18.240 --> 01:00:23.240
Just visit talkpython.fm/sentry and get started for free.

01:00:23.240 --> 01:00:24.240
Want to level up your Python?

01:00:24.240 --> 01:00:28.240
We have one of the largest catalogs of Python video courses over at Talk Python.

01:00:28.240 --> 01:00:33.240
Our content ranges from true beginners to deeply advanced topics like memory and async.

01:00:33.240 --> 01:00:36.240
And best of all, there's not a subscription in sight.

01:00:36.240 --> 01:00:39.240
Check it out for yourself at training.talkpython.fm.

01:00:39.240 --> 01:00:41.240
Be sure to subscribe to the show.

01:00:41.240 --> 01:00:44.240
Open your favorite podcast app and search for Python.

01:00:44.240 --> 01:00:45.240
We should be right at the top.

01:00:45.240 --> 01:00:51.240
You can also find the iTunes feed at /itunes, the Google Play feed at /play, and the direct

01:00:51.240 --> 01:00:54.240
RSS feed at /rss on talkpython.fm.

01:00:54.240 --> 01:00:57.240
We're live streaming most of our recordings these days.

01:00:57.240 --> 01:01:01.240
If you want to be part of the show and have your comments featured on the air, be sure

01:01:01.240 --> 01:01:05.240
to subscribe to our YouTube channel at talkpython.fm/youtube.

01:01:05.240 --> 01:01:07.240
This is your host, Michael Kennedy.

01:01:07.240 --> 01:01:08.240
Thanks so much for listening.

01:01:08.240 --> 01:01:09.240
I really appreciate it.

01:01:09.240 --> 01:01:10.240
Now get out there and write some Python code.

01:01:10.240 --> 01:01:11.240
Get out there and write some Python code.

01:01:11.240 --> 01:01:11.240
Get out there and write some Python code.

01:01:11.240 --> 01:01:12.240
Get out there and write some Python code.

01:01:12.240 --> 01:01:12.240
Get out there and write some Python code.

01:01:12.240 --> 01:01:12.240
Get out there and write some Python code.

01:01:12.240 --> 01:01:13.240
Get out there and write some Python code.

01:01:13.240 --> 01:01:14.240
Get out there and write some Python code.

01:01:14.240 --> 01:01:15.240
Get out there and write some Python code.

01:01:15.240 --> 01:01:16.240
Get out there and write some Python code.

01:01:16.240 --> 01:01:17.240
Get out there and write some Python code.

01:01:17.240 --> 01:01:18.240
Get out there and write some Python code.

01:01:18.240 --> 01:01:19.240
Get out there and write some Python code.

01:01:19.240 --> 01:01:20.240
Get out there and write some Python code.

01:01:20.240 --> 01:01:21.240
Get out there and write some Python code.

01:01:21.240 --> 01:01:22.240
Get out there and write some Python code.

01:01:22.240 --> 01:01:23.240
Get out there and write some Python code.

01:01:23.240 --> 01:01:24.240
Get out there and write some Python code.

01:01:24.240 --> 01:01:25.240
Get out there and write some Python code.

01:01:25.240 --> 01:01:26.240
Get out there and write some Python code.

01:01:26.240 --> 01:01:27.240
Get out there and write some Python code.

01:01:27.240 --> 01:01:28.240
Get out there and write some Python code.

01:01:28.240 --> 01:01:29.240
Get out there and write some Python code.

01:01:29.240 --> 01:01:29.740
you

01:01:29.740 --> 01:01:30.240
you

01:01:30.240 --> 01:01:32.240
Thank you.

01:01:32.240 --> 01:02:02.220
Thank you.

