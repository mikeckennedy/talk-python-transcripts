WEBVTT

00:00:00.001 --> 00:00:06.120
How do you keep track of your security, configuration states, and even out-of-date system-level packages in your servers?

00:00:06.120 --> 00:00:10.320
Well, what if you had 40,000 or more servers to manage?

00:00:10.320 --> 00:00:12.260
How would your process scale then?

00:00:12.260 --> 00:00:14.280
I'll tell you, mine would take a few tweaks.

00:00:14.280 --> 00:00:18.460
On this episode, you'll meet Colton Myers, who is a co-creator of Hubblestack.

00:00:18.460 --> 00:00:21.680
Hubblestack is an open-source security compliance framework.

00:00:21.680 --> 00:00:27.380
It provides on-demand profile-based auditing, real-time security event notifications, alerting, reporting.

00:00:27.380 --> 00:00:34.020
And yes, Colton, the group, has over 40,000 servers, and Hubblestack is watching over all of them.

00:00:34.020 --> 00:00:38.420
Learn about this cool Python-based framework on this episode of Talk Python To Me.

00:00:38.420 --> 00:00:42.840
It's episode 187, recorded November 14th, 2018.

00:00:56.020 --> 00:01:02.260
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:01:02.260 --> 00:01:04.180
This is your host, Michael Kennedy.

00:01:04.180 --> 00:01:06.320
Follow me on Twitter, where I'm @mkennedy.

00:01:06.320 --> 00:01:10.100
Keep up with the show and listen to past episodes at talkpython.fm.

00:01:10.100 --> 00:01:12.560
And follow the show on Twitter via at Talk Python.

00:01:12.560 --> 00:01:16.060
This episode is sponsored by Linode and Rollbar.

00:01:16.060 --> 00:01:18.280
Please check out what they're offering during their segments.

00:01:18.280 --> 00:01:19.820
It really helps support the show.

00:01:19.820 --> 00:01:22.800
Colton, welcome to Talk Python.

00:01:22.800 --> 00:01:25.340
Let's get started with your story and how you got into Python.

00:01:25.340 --> 00:01:29.840
I've been using computers since my parents got a black and white Macintosh.

00:01:29.840 --> 00:01:30.920
I don't actually know what it is.

00:01:30.920 --> 00:01:33.940
I should go back and figure out what Macintosh it was so I can tell people.

00:01:33.940 --> 00:01:36.340
But I would play Lode Runner on that when I was little.

00:01:36.340 --> 00:01:38.260
I'm, what, 30?

00:01:38.260 --> 00:01:38.860
Yeah, 30.

00:01:38.860 --> 00:01:39.800
I can never remember.

00:01:39.800 --> 00:01:43.180
So I'm younger than a lot.

00:01:43.180 --> 00:01:45.840
I guess I'm starting to get into the middle of the pack these days.

00:01:45.840 --> 00:01:49.800
But yeah, I remember playing with that when I was like seven on this little black and white Macintosh.

00:01:49.900 --> 00:01:52.780
Then we had like a Windows 3.1 machine that I'd play games on.

00:01:52.780 --> 00:01:54.860
And I mostly played games until high school.

00:01:54.860 --> 00:02:03.240
And then in high school, I actually, half of my senior year, I did the supplied technology course in computer programming, which was really great, actually.

00:02:03.240 --> 00:02:04.880
Like half the day I would send over here.

00:02:04.880 --> 00:02:05.680
It was C#.

00:02:05.680 --> 00:02:07.640
They had just switched from C++ to C#.

00:02:07.740 --> 00:02:09.280
Wow, that's a pretty big improvement, actually.

00:02:09.280 --> 00:02:10.540
Oh, yeah, yeah, yeah.

00:02:10.540 --> 00:02:11.400
I'm with you on that.

00:02:11.400 --> 00:02:12.900
And C# is a great language.

00:02:12.900 --> 00:02:17.220
And back then I was Windows, Windows, Windows, you know, because I was played video games, right?

00:02:17.220 --> 00:02:19.140
So it worked out just fine.

00:02:19.140 --> 00:02:22.360
And it was a really good course and really gave me like a jump start.

00:02:22.360 --> 00:02:25.320
And from there on, I knew that's what I wanted to do.

00:02:25.320 --> 00:02:26.600
So went into college.

00:02:26.600 --> 00:02:27.120
That's awesome.

00:02:27.120 --> 00:02:30.300
Let me ask you more about that because that sounds so awesome.

00:02:30.300 --> 00:02:32.280
This was a high school program?

00:02:32.280 --> 00:02:33.100
Yeah, yeah.

00:02:33.100 --> 00:02:33.740
It was like...

00:02:33.740 --> 00:02:36.500
And how long did you get to spend programming each day?

00:02:36.640 --> 00:02:37.340
Half the day.

00:02:37.340 --> 00:02:39.340
Like you could either do morning.

00:02:39.340 --> 00:02:41.460
They had a morning session or an afternoon session.

00:02:41.460 --> 00:02:45.140
And so like basically at lunchtime, you would switch either back to your high school or to

00:02:45.140 --> 00:02:46.540
the biotechnology center.

00:02:46.540 --> 00:02:50.100
And it was difficult because you had to like structure your whole schedule around it.

00:02:50.100 --> 00:02:51.160
Like you had to start planning.

00:02:51.160 --> 00:02:54.660
You could technically do it as a junior and a senior if you like really plan.

00:02:54.660 --> 00:02:55.640
But then you'd have to like...

00:02:55.640 --> 00:02:57.320
I was also in like band and stuff like that.

00:02:57.320 --> 00:02:58.420
And I'd have to have dropped that.

00:02:58.420 --> 00:03:00.000
And I was like, no, I'm just going to do it as a senior.

00:03:00.000 --> 00:03:04.040
But you still have to like make sure that you have all your other like things to graduate,

00:03:04.040 --> 00:03:05.780
you know, in the rest of your schedule.

00:03:06.020 --> 00:03:10.000
Your four years of math or three years of English, whatever, right?

00:03:10.000 --> 00:03:11.300
But it was a super cool program.

00:03:11.300 --> 00:03:16.540
Like and our professor, I think he's now working for Microsoft or something.

00:03:16.540 --> 00:03:18.160
But he also used to teach at university.

00:03:18.160 --> 00:03:19.120
Like he was really good.

00:03:19.120 --> 00:03:23.300
And he did a great job of like teaching us the right way.

00:03:23.300 --> 00:03:24.620
And I don't know, man.

00:03:24.620 --> 00:03:27.580
It was a really good introduction to programming for me.

00:03:27.580 --> 00:03:28.740
I am so jealous.

00:03:28.740 --> 00:03:30.260
When I was...

00:03:30.260 --> 00:03:31.200
This wasn't high school.

00:03:31.200 --> 00:03:33.220
It was my last year in middle school, I think.

00:03:33.720 --> 00:03:34.340
I'm pretty sure.

00:03:34.340 --> 00:03:36.420
But, you know, it could have been the same in high school.

00:03:36.420 --> 00:03:39.600
My teacher, you know, I took sort of an intro to programming course, right?

00:03:39.600 --> 00:03:42.640
And my teacher was kind of okay.

00:03:42.640 --> 00:03:44.300
And I was just really loving it.

00:03:44.300 --> 00:03:46.180
I said, oh, I'd love to write this kind of program.

00:03:46.180 --> 00:03:47.420
And like, how can I learn more?

00:03:47.420 --> 00:03:48.460
And they're like, well, you can do that.

00:03:48.460 --> 00:03:51.040
But you got to understand, like real programming is actually super hard.

00:03:51.040 --> 00:03:52.360
And I don't know if you really can do it.

00:03:52.360 --> 00:03:53.520
Like, I mean, that was my idea.

00:03:53.520 --> 00:03:54.500
Like, okay, great.

00:03:54.900 --> 00:03:57.460
Oh, well, that's awesome.

00:03:57.460 --> 00:03:58.120
I don't know.

00:03:58.120 --> 00:03:58.720
I'm blessed.

00:03:58.720 --> 00:04:00.260
Programming just clicks with my brain.

00:04:00.260 --> 00:04:01.520
Like, it's just is...

00:04:01.520 --> 00:04:04.420
It has never been a struggle for me to learn how to program.

00:04:04.420 --> 00:04:07.380
Like, you know, none of the conditionals, none of the advanced logic.

00:04:07.380 --> 00:04:10.880
Like, obviously, I struggle with like advanced algorithms like anybody does.

00:04:10.880 --> 00:04:13.980
But like, the basics of programming just came to me immediately.

00:04:13.980 --> 00:04:15.000
And so...

00:04:15.000 --> 00:04:16.560
And my teacher actually recognized that.

00:04:16.560 --> 00:04:21.600
And it was super nice because he like had me helping other students, which was frustrating as much as it was.

00:04:21.600 --> 00:04:22.560
But it was useful, right?

00:04:22.560 --> 00:04:28.260
Like, I've always been a bad teacher because with stuff that comes so easily to me because I can't bridge that gap.

00:04:28.260 --> 00:04:30.060
But he had me helping other students.

00:04:30.060 --> 00:04:34.600
But then he also like had me doing some of like the second year curriculum along with the first year curriculum.

00:04:34.600 --> 00:04:38.580
Because he's like, like, I would just finish so early on these projects.

00:04:38.580 --> 00:04:41.460
And you just be like, well, you can either just sit here and do whatever you want.

00:04:41.460 --> 00:04:43.160
Or I can get you started on this other stuff.

00:04:43.160 --> 00:04:48.520
And it was a real blessing like to have that start and to have somebody so supportive.

00:04:48.520 --> 00:04:51.080
Yeah, I've never heard of anything like that.

00:04:51.140 --> 00:04:57.120
I've heard of like vocational stuff like shop and, you know, carpentry, but never software.

00:04:57.120 --> 00:04:59.560
So, man, that's awesome for you.

00:04:59.560 --> 00:05:00.140
All right.

00:05:00.140 --> 00:05:03.080
So, that was C# back in the day and Windows.

00:05:03.080 --> 00:05:05.840
And somehow, your project is not in C#.

00:05:05.840 --> 00:05:06.300
No.

00:05:06.300 --> 00:05:09.560
So, college, I went straight into computer science.

00:05:09.560 --> 00:05:10.720
I knew exactly what I wanted to do.

00:05:10.720 --> 00:05:15.480
And I managed to make a couple of friends there that were super useful because I went to the University of Utah.

00:05:16.140 --> 00:05:18.760
And at the time I went, it was still, you know, there.

00:05:18.760 --> 00:05:20.140
They would start in C#.

00:05:20.140 --> 00:05:21.800
And then you go to C++.

00:05:21.800 --> 00:05:25.560
There was a lot of Java involved, like, through all their classes.

00:05:25.560 --> 00:05:36.180
But they didn't like Python hasn't hadn't at that point really pierced the, you know, the education, which, which is a whole different conversation as to whether we should actually be teaching Python as a first language.

00:05:36.180 --> 00:05:40.000
I almost think it's almost doing a disservice because it's so easy to program in Python.

00:05:40.000 --> 00:05:41.260
But I don't know.

00:05:41.260 --> 00:05:42.440
It's a hard conversation.

00:05:42.440 --> 00:05:50.040
But I made some good friends who basically we kind of pushed each other to explore outside of what our classes had.

00:05:50.040 --> 00:05:54.140
So, like some classes where you could choose the language and most people chose C# or Java because that's what we were learning, right?

00:05:54.140 --> 00:05:56.100
But we decided to try Python at one point.

00:05:56.100 --> 00:05:57.420
And it was, you know, really awesome.

00:05:57.520 --> 00:06:07.660
And we were using Git long before they, you know, taught us how to use Git and all these things that really, like, helped jumpstart that and helped me get a base in stuff that maybe I wouldn't have otherwise.

00:06:07.660 --> 00:06:09.180
And I found Python.

00:06:09.180 --> 00:06:13.640
I got my laptop stolen in while I was on vacation in Hawaii.

00:06:13.640 --> 00:06:21.240
And I had a good friend at work who convinced me to buy a Mac instead of a Windows machine, which was a great decision.

00:06:21.240 --> 00:06:25.240
I really like macOS in general, especially because it's just Unix underneath.

00:06:25.720 --> 00:06:30.560
And so, you know, that got me into more of the Unix side of things and kind of away from Windows.

00:06:30.560 --> 00:06:33.640
And you're like, hey, this C# stuff doesn't really work so well.

00:06:33.640 --> 00:06:36.220
There's mono, but it kind of is clunky over there.

00:06:36.220 --> 00:06:37.740
And so now what, right?

00:06:37.740 --> 00:06:41.800
Well, once I found Python, like Python, you just get rid of so much of that boilerplate.

00:06:41.800 --> 00:06:45.360
Like Java and C# have all this boilerplate and it's just so verbose.

00:06:45.360 --> 00:06:52.120
And Python, like, any time, like, Python was really interesting because, like, I would be like, oh, I need to do this.

00:06:52.120 --> 00:06:53.680
I need to, like, open a file or whatever.

00:06:53.820 --> 00:06:57.700
And I'd be like, okay, so I'm betting it's, like, this is the function name.

00:06:57.700 --> 00:06:59.360
And it turns out most of the time it was right.

00:06:59.360 --> 00:07:02.860
Like, it just, like, it felt like it was written out of my, straight out of my brain.

00:07:02.860 --> 00:07:04.280
And it was just so nice.

00:07:04.280 --> 00:07:08.260
But, yeah, like, with C# back then, you couldn't really write C# in Linux.

00:07:08.260 --> 00:07:11.100
Like, mono was just getting off, just getting started.

00:07:11.840 --> 00:07:18.120
And so I didn't really, yeah, I basically avoided it wherever I could from then on.

00:07:18.120 --> 00:07:18.660
That's awesome.

00:07:18.660 --> 00:07:19.360
Yeah, it was really great.

00:07:19.360 --> 00:07:19.580
Yeah.

00:07:19.580 --> 00:07:26.340
And of course, you know, those other libraries didn't have nearly the package management story and the ecosystem story that Python does.

00:07:26.340 --> 00:07:26.760
Sure.

00:07:27.340 --> 00:07:27.580
Yeah.

00:07:27.580 --> 00:07:38.020
And then the way, it's really interesting because I just feel like, I don't know, I just have, like, there are so many things in my life that if they'd changed just a little bit, I could have been on such a different path, right?

00:07:38.020 --> 00:07:39.020
And I think that's true of all of us.

00:07:39.020 --> 00:07:43.620
But, like, when I was getting close to graduating, I was on a local Python user group.

00:07:43.620 --> 00:07:49.980
And local startup advertised on that user group, hey, let's, we're looking for Python developers.

00:07:49.980 --> 00:07:52.500
And I was like, well, I'd love to do Python.

00:07:52.500 --> 00:07:56.040
But, like, my internship that I'm working on is in C# and C++, right?

00:07:56.040 --> 00:08:01.840
I'm working, like, at this, you know, on this legacy code base and this DoD contractor, this local or whatever.

00:08:01.840 --> 00:08:05.120
And I was like, I don't have any experience.

00:08:05.120 --> 00:08:07.640
Like, I've just written some Python for, like, class projects.

00:08:07.640 --> 00:08:09.140
And they're like, well, come in and interview.

00:08:09.140 --> 00:08:10.380
I was like, okay.

00:08:10.380 --> 00:08:12.580
And apparently, I interviewed pretty well.

00:08:12.580 --> 00:08:13.480
They were impressed.

00:08:13.480 --> 00:08:20.100
So, they actually hired me on part-time until I graduated with the expectation that, assuming I did well, you know, they'd hire me full-time.

00:08:20.100 --> 00:08:20.700
And it worked out.

00:08:20.700 --> 00:08:22.900
And I, that's how I joined SaltStack.

00:08:22.900 --> 00:08:35.380
So, I worked with, for SaltStack for three years and really, like, got my Python, you know, really solid and, you know, worked, was able to expand my ops knowledge, you know, because it's a configuration management tool.

00:08:35.380 --> 00:08:37.620
Yeah, it's not just the Python you got to learn.

00:08:37.620 --> 00:08:37.900
Right.

00:08:37.900 --> 00:08:41.440
It's also all the Linux and, you know, DevOps side of things.

00:08:41.440 --> 00:08:41.760
Yeah.

00:08:41.760 --> 00:08:45.040
So, that was, like, that was hugely important to my career.

00:08:45.040 --> 00:08:47.080
Because without that, like, I don't know.

00:08:47.080 --> 00:08:50.140
I could have found something, I'm sure, is like a junior Python dev.

00:08:50.140 --> 00:08:54.180
But it just really jump-started it and actually directly led to my position at Adobe, too.

00:08:54.180 --> 00:08:55.260
So, yeah.

00:08:55.260 --> 00:08:57.360
That's kind of where my career path has been.

00:08:57.360 --> 00:08:59.080
No, that's a super interesting story.

00:08:59.220 --> 00:09:03.540
So, speaking of where you are today, you know, so what do you do day-to-day at Adobe?

00:09:03.540 --> 00:09:05.640
So, I'm a senior software engineer at Adobe.

00:09:05.640 --> 00:09:08.280
And I actually mostly work on Hubble.

00:09:08.280 --> 00:09:12.820
I joined a, I joined actually, the other creator of Hubble.

00:09:13.200 --> 00:09:15.860
It was kind of his brainchild, but he's not really a developer.

00:09:15.860 --> 00:09:19.460
So, he was able to, like, you know, say, hey, I want to do this proof of concept.

00:09:19.460 --> 00:09:20.620
Can I hire somebody for it?

00:09:20.620 --> 00:09:21.280
And he hired me.

00:09:21.280 --> 00:09:24.100
We had met because he was actually in the SaltStack community.

00:09:24.100 --> 00:09:26.680
And his name is Christopher Edwards, by the way.

00:09:26.680 --> 00:09:27.640
I should give him credit.

00:09:27.640 --> 00:09:29.000
But this is his baby.

00:09:29.440 --> 00:09:30.920
And so, he hired me to do this.

00:09:30.920 --> 00:09:32.480
And the idea was to base it on Salt.

00:09:32.480 --> 00:09:41.080
And basically, we were trying to replace an existing vendor solution with this proof of concept because the vendor solution wasn't very popular and was very expensive.

00:09:41.080 --> 00:09:44.480
And so, yeah, we were able to...

00:09:44.480 --> 00:09:45.520
So, he brought me in on this.

00:09:45.520 --> 00:09:48.220
And it became just almost overnight.

00:09:48.220 --> 00:09:49.720
Like, we wrote this proof of concept.

00:09:49.720 --> 00:09:50.940
And it was good, right?

00:09:50.940 --> 00:09:52.680
And people liked it.

00:09:52.680 --> 00:09:54.500
And all of a sudden, it was like, oh, hey.

00:09:54.500 --> 00:09:55.980
Other people heard about it.

00:09:55.980 --> 00:09:59.420
And they're like, hey, by the way, our contract with CloudPassage is up next.

00:09:59.420 --> 00:10:02.320
And we're losing this promotional pricing.

00:10:02.320 --> 00:10:04.600
It's going to get like three times more expensive.

00:10:04.600 --> 00:10:10.640
So, could you maybe make it so that Hubble is everywhere at Adobe within like, you know, the next six months?

00:10:10.640 --> 00:10:11.420
Like, that'd be great.

00:10:11.420 --> 00:10:12.420
It's like...

00:10:12.420 --> 00:10:15.080
No pressure or anything, right?

00:10:15.080 --> 00:10:17.420
Oh, it was crazy.

00:10:17.420 --> 00:10:18.820
It was a crazy, crazy time.

00:10:18.820 --> 00:10:20.520
But we were able to...

00:10:20.520 --> 00:10:22.860
Like, we had an open source from the beginning, which was super awesome.

00:10:22.860 --> 00:10:27.220
And because it's grown so much inside of Adobe and is so important to our security posture,

00:10:28.280 --> 00:10:29.680
it's my full-time job.

00:10:29.680 --> 00:10:33.620
I get paid full-time to write open source software in Python.

00:10:33.620 --> 00:10:35.880
So, you can't really go wrong with that.

00:10:35.880 --> 00:10:36.120
Yeah.

00:10:36.120 --> 00:10:40.160
I feel like that's a lot of Python developers' dreams, right?

00:10:40.160 --> 00:10:42.720
They're like, I want to work on this open source thing I love.

00:10:42.720 --> 00:10:44.080
And I want to get paid full-time for it.

00:10:44.080 --> 00:10:46.240
Like, there's not that many people that get to do that.

00:10:46.240 --> 00:10:47.520
And I just like fell into it.

00:10:47.520 --> 00:10:48.300
Like, I...

00:10:48.300 --> 00:10:49.280
So much, so much...

00:10:49.280 --> 00:10:50.900
Yeah, I don't know.

00:10:50.900 --> 00:10:54.440
I don't even know how to approach how lucky I am that way.

00:10:54.440 --> 00:10:55.940
But it's been really great.

00:10:56.380 --> 00:10:57.780
So, yeah, that's kind of what I do.

00:10:57.780 --> 00:10:58.740
I just work on Hubble Stack.

00:10:58.740 --> 00:10:59.080
Okay.

00:10:59.080 --> 00:10:59.960
Super.

00:10:59.960 --> 00:11:05.020
So, maybe let's start with a super high-level conversation about this.

00:11:05.020 --> 00:11:06.040
Just even...

00:11:06.040 --> 00:11:10.440
Not just Hubble Stack and Hubble and Hubble Stack, but just this idea in general.

00:11:10.440 --> 00:11:15.920
So, what it is an open source security compliance monitoring and auditing system.

00:11:15.920 --> 00:11:17.820
Like, tell us just sort of about that world.

00:11:17.820 --> 00:11:18.940
Like, what kind of...

00:11:18.940 --> 00:11:19.480
So many words.

00:11:19.480 --> 00:11:20.160
What kinds of things...

00:11:20.160 --> 00:11:20.880
Yeah, I know.

00:11:21.380 --> 00:11:21.600
Yeah.

00:11:21.600 --> 00:11:23.240
So, just tell us, you know, what's that world like?

00:11:23.240 --> 00:11:26.000
And what kind of role does this try to play in there?

00:11:26.000 --> 00:11:27.520
So, there's a couple pieces, right?

00:11:27.520 --> 00:11:28.500
We...

00:11:28.500 --> 00:11:29.920
Security has multiple facets.

00:11:29.920 --> 00:11:32.220
And one of those facets is compliance.

00:11:32.220 --> 00:11:35.100
And really, the reason compliance is so important...

00:11:35.100 --> 00:11:37.220
I'm going to put air quotes around important.

00:11:37.220 --> 00:11:41.120
Because the reason compliance is so important is for these certifications, right?

00:11:41.120 --> 00:11:45.280
If you deal with customer data, especially like credit card data and that kind of stuff,

00:11:45.280 --> 00:11:46.780
then you need like PCI.

00:11:46.780 --> 00:11:47.100
Right.

00:11:47.100 --> 00:11:47.620
Exactly.

00:11:47.620 --> 00:11:50.080
You know, you might have SOX compliance.

00:11:50.080 --> 00:11:51.400
You might have HIPAA, right?

00:11:51.400 --> 00:11:55.020
All these different things that if you can check that box, you can have customers that you might

00:11:55.020 --> 00:11:55.920
not otherwise, right?

00:11:55.920 --> 00:12:00.500
And each of these has different requirements for compliance.

00:12:00.500 --> 00:12:03.740
A lot of them are a lot less fleshed out than you'd expect.

00:12:03.740 --> 00:12:05.960
Most of them, like, they just say, like, the audit...

00:12:05.960 --> 00:12:07.040
The auditors come in and they...

00:12:07.040 --> 00:12:08.920
And the audit control says something like,

00:12:09.120 --> 00:12:16.580
you have a baseline security compliance check thing that you audit against regularly and

00:12:16.580 --> 00:12:17.960
make sure that everything is in compliance, right?

00:12:17.960 --> 00:12:19.340
And it's just like written like that.

00:12:19.340 --> 00:12:24.260
And so at Adobe, we use the CIS compliance checks, Center for Internet Security.

00:12:24.260 --> 00:12:29.520
They are a nonprofit that publishes these profiles that allow you to...

00:12:29.520 --> 00:12:33.920
You know, if you follow all these checks in here, then you'll be more secure than if you

00:12:33.920 --> 00:12:34.100
didn't.

00:12:34.100 --> 00:12:34.920
That's the idea, right?

00:12:34.920 --> 00:12:35.240
Right.

00:12:35.240 --> 00:12:41.900
So does it include, like, known vulnerabilities or is it more like guidelines on, like, hardening

00:12:41.900 --> 00:12:42.980
of the server or what's...

00:12:42.980 --> 00:12:44.400
Yeah, it's more along the lines of hardening.

00:12:44.400 --> 00:12:46.060
Like, I don't think CIS...

00:12:46.060 --> 00:12:49.220
I don't actually know if they do, but I don't think they publish, like, a vulnerability list

00:12:49.220 --> 00:12:50.600
or a CVE list or anything like that.

00:12:50.600 --> 00:12:55.320
It's more like, hey, do you have root login enabled on your server, right?

00:12:55.320 --> 00:12:56.420
In SSH.

00:12:56.420 --> 00:12:57.940
And if you do, that's a problem, right?

00:12:57.940 --> 00:13:00.040
Do you have password list login?

00:13:00.040 --> 00:13:02.460
Do you have password login even, right?

00:13:02.460 --> 00:13:03.800
Like, or is it just SSH?

00:13:03.800 --> 00:13:08.260
Like, you know, those are easy ones to point out for SSH, but it's also like, hey, do you

00:13:08.260 --> 00:13:09.700
have Telnet installed, right?

00:13:09.700 --> 00:13:13.620
Do you have all these different things that are just like, you know, do you have FTP?

00:13:13.620 --> 00:13:17.520
Are you serving anything via FTP as opposed to SFTP, right?

00:13:17.520 --> 00:13:19.640
Like, just the gimmies, right?

00:13:19.640 --> 00:13:22.620
And obviously, they get a lot worse, like...

00:13:22.620 --> 00:13:23.240
Or a lot worse.

00:13:23.240 --> 00:13:24.420
A lot more stringent.

00:13:24.420 --> 00:13:29.920
Like, oh, you need to have SSH timeouts on your host set to these low values, right?

00:13:29.920 --> 00:13:32.780
So that it quickly kicks people off if they're not typing and that kind of stuff.

00:13:32.780 --> 00:13:36.720
And those, you know, obviously, as you get further and further into these checks, these

00:13:36.720 --> 00:13:38.600
different levels, they actually split them up into levels.

00:13:38.600 --> 00:13:40.540
It becomes less convenient, right?

00:13:40.540 --> 00:13:44.520
Because security is always a compromise between convenience and security, right?

00:13:44.520 --> 00:13:45.080
Right.

00:13:45.180 --> 00:13:47.820
So we basically choose a subset of those and we audit against them.

00:13:47.820 --> 00:13:49.920
And that is actually where like the big money is.

00:13:49.920 --> 00:13:51.900
Like, that's where we get like customers, right?

00:13:51.900 --> 00:13:56.380
But if I'm being honest, it's not actually making us a lot more secure.

00:13:56.380 --> 00:13:59.680
Like, obviously, if we have root login enabled, we should not, right?

00:13:59.680 --> 00:14:00.820
But like you fix that once.

00:14:00.820 --> 00:14:03.000
But that doesn't mean you're secure now, right?

00:14:03.000 --> 00:14:08.600
And so the other piece, the rest of Hubble is just to collect other data that our blue team

00:14:08.600 --> 00:14:15.660
can use to watch for actual like ongoing attacks, big holes, you know, that maybe an audit wouldn't

00:14:15.660 --> 00:14:16.340
have caught otherwise.

00:14:16.340 --> 00:14:16.720
Right.

00:14:16.720 --> 00:14:18.400
So give me an example.

00:14:18.400 --> 00:14:20.340
This is something I wonder all the time.

00:14:20.340 --> 00:14:21.960
If you don't know, that's fine.

00:14:21.960 --> 00:14:26.120
But give me an example of what an attack looks like, right?

00:14:26.120 --> 00:14:28.880
Like if I log into my server, it seems okay.

00:14:28.880 --> 00:14:31.460
You know, nobody's saying, hey, our data seems to be gone.

00:14:31.580 --> 00:14:36.660
But like, how do I, you know, shared, right, like stolen, but how do I look at the server

00:14:36.660 --> 00:14:39.220
and know outside of say web logs?

00:14:39.220 --> 00:14:41.300
Yeah, I mean, that's kind of a hard question.

00:14:41.300 --> 00:14:42.980
And I and that's actually not my expertise.

00:14:42.980 --> 00:14:46.140
Like I'm not a security engineer, but I work with them a lot.

00:14:46.140 --> 00:14:51.680
One that's pretty common in 2018 is if somebody gets access to your server, they might install

00:14:51.680 --> 00:14:53.860
a cryptocurrency miner on your server, right?

00:14:53.860 --> 00:14:58.600
And so, you know, one of the ways we can look for that kind of stuff is, oh, you know, in

00:14:58.600 --> 00:15:02.820
one piece of Hubble, we collect like the established outbound connections on your host, right?

00:15:02.820 --> 00:15:09.020
Because certain services have outbound connections, like that's a thing that they should

00:15:09.020 --> 00:15:09.180
have.

00:15:09.180 --> 00:15:09.960
But a lot of them don't.

00:15:09.960 --> 00:15:11.280
A lot of them just accept inbound, right?

00:15:11.280 --> 00:15:12.700
Especially if it's just like a web server, right?

00:15:12.700 --> 00:15:15.460
It's accepting inbound connections, but not reaching out.

00:15:15.460 --> 00:15:21.920
So if we see an outbound connection from a process we don't recognize or an uncommon process,

00:15:21.920 --> 00:15:25.060
then we might look into that and say, hey, you know, what's going on here?

00:15:25.060 --> 00:15:25.380
I see.

00:15:25.380 --> 00:15:26.600
That makes a lot of sense.

00:15:26.600 --> 00:15:28.580
Yeah, I mean, there are a lot of like tells like you can.

00:15:28.580 --> 00:15:32.320
You could have increased CPU usage or like, you know, stuff slowing down.

00:15:32.320 --> 00:15:34.440
Like, obviously, they're trying not to leave tracks, right?

00:15:34.440 --> 00:15:40.260
So they will tend, you know, attackers will tend to try to not let you know that they're

00:15:40.260 --> 00:15:40.440
there.

00:15:40.440 --> 00:15:41.040
So it's hard.

00:15:41.040 --> 00:15:42.360
Like, it's not it's a hard problem.

00:15:42.360 --> 00:15:44.220
And that's why we have a whole security team.

00:15:44.220 --> 00:15:47.080
We have the team I work with just with the digital marketing.

00:15:47.080 --> 00:15:52.160
They must have 30 security engineers, both like red team and blue team, like just constantly

00:15:52.160 --> 00:15:54.460
combing this data looking for patterns.

00:15:54.460 --> 00:15:57.620
And we have a whole security operations center looking for these alerts.

00:15:57.620 --> 00:16:03.060
And it's like it's a big thing because it's harder and harder, you know, in 2018 to keep

00:16:03.060 --> 00:16:03.620
your stuff secure.

00:16:03.620 --> 00:16:04.300
It definitely is.

00:16:04.300 --> 00:16:09.520
So maybe just to find some terms for folks who are not super up to date on the security

00:16:09.520 --> 00:16:10.360
side of things.

00:16:10.360 --> 00:16:15.060
Red team is the penetration testers and the folks trying to break in and the blue team

00:16:15.060 --> 00:16:18.420
are people like using Hubble to say, you know, wait, wait, wait.

00:16:18.620 --> 00:16:22.660
Why is it making all these connections to this VP over this VPN to somewhere we don't

00:16:22.660 --> 00:16:23.040
recognize?

00:16:23.040 --> 00:16:23.680
Yeah, exactly.

00:16:23.680 --> 00:16:25.680
The red team is trying to break it.

00:16:25.680 --> 00:16:26.260
They're the hackers.

00:16:26.260 --> 00:16:27.460
They're the white hat hackers, right?

00:16:27.460 --> 00:16:31.060
That say, how can we we're just going to spend all day trying to get into Adobe's hosts.

00:16:31.060 --> 00:16:34.180
And then if we find a way in, then we can patch that hole.

00:16:34.180 --> 00:16:35.260
The blue team can patch that hole.

00:16:35.260 --> 00:16:38.720
And they actually have like these whole things where like red team will set up these different

00:16:38.720 --> 00:16:40.480
things and make sure the blue team catches them.

00:16:40.480 --> 00:16:45.600
Like sometimes red team will work with access to the box and just say, let's assume I get access

00:16:45.600 --> 00:16:46.000
to the box.

00:16:46.000 --> 00:16:47.540
I don't you know, I don't have a way right now.

00:16:47.540 --> 00:16:51.320
We've patched all those holes, but let's assume and I'm going to just set up these breadcrumbs

00:16:51.320 --> 00:16:54.040
and make sure that blue team is catching them because blue team says they're watching for

00:16:54.040 --> 00:16:55.460
these things, but are they actually watching?

00:16:55.460 --> 00:16:55.740
You know?

00:16:55.740 --> 00:16:56.140
Yeah.

00:16:56.140 --> 00:16:57.360
And it's this back and forth.

00:16:57.360 --> 00:16:59.460
And then blue team is trying to catch red team.

00:16:59.460 --> 00:17:03.260
But then they're also trying to catch like black, you know, like the actual attackers,

00:17:03.260 --> 00:17:07.060
you know, because people are always trying to get into our data, right?

00:17:07.060 --> 00:17:08.780
Like they it could be really lucrative.

00:17:08.780 --> 00:17:11.780
And so we've had so many hacks that we see in the in the industry.

00:17:11.780 --> 00:17:14.500
And, you know, nobody doesn't want to be next on that list.

00:17:14.500 --> 00:17:16.320
So we have a substantial team.

00:17:16.320 --> 00:17:17.000
You do not want to be in those headlines.

00:17:17.240 --> 00:17:17.740
That's right.

00:17:17.740 --> 00:17:19.780
So no, no.

00:17:19.780 --> 00:17:25.560
This portion of Talk Python To Me is brought to you by Linode.

00:17:25.560 --> 00:17:29.500
Are you looking for bulletproof hosting that's fast, simple and incredibly affordable?

00:17:29.500 --> 00:17:34.420
Look past that bookstore and check out Linode at talkpython.fm/Linode.

00:17:34.420 --> 00:17:36.360
That's L I N O D E.

00:17:36.360 --> 00:17:40.820
Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:17:41.100 --> 00:17:43.360
They have 10 data centers across the globe.

00:17:43.360 --> 00:17:45.880
So no matter where you are, there's a data center near you.

00:17:45.880 --> 00:17:51.580
Whether you want to run your Python web app, host a private get server or file server, you'll

00:17:51.580 --> 00:18:01.200
get native SSDs on all the machines, a newly upgraded 200 gigabit network, 24 seven friendly support, even on holidays and a seven day money back guarantee.

00:18:01.200 --> 00:18:03.560
Do you need a little help with your infrastructure?

00:18:03.900 --> 00:18:09.780
They even offer professional services to help you get started with architecture, migrations and more.

00:18:09.780 --> 00:18:12.860
Get a dedicated server for free for the next four months.

00:18:12.860 --> 00:18:15.700
Just visit talkpython.fm/Linode.

00:18:17.700 --> 00:18:23.860
Do you think containers and Docker and things like that make this harder or easier to protect?

00:18:23.860 --> 00:18:24.600
It's a combination.

00:18:24.600 --> 00:18:30.140
One thing that we've been struggling with is the so, you know, Docker is 12 factor apps, right?

00:18:30.140 --> 00:18:31.920
Like, are you familiar with the 12 factor thing?

00:18:31.920 --> 00:18:32.320
Yeah.

00:18:32.320 --> 00:18:35.360
But maybe give the listeners a quick, just a super quick rundown.

00:18:35.360 --> 00:18:36.380
What is the site?

00:18:36.380 --> 00:18:40.020
It's like there's like a site 12 factor dot net with like one, two factor dot net.

00:18:40.020 --> 00:18:44.840
And basically it's like this, the systems of things that like make, let's read their introduction.

00:18:45.540 --> 00:18:51.580
Software as a service, 12 factor app is a methodology for building software as a service inputs that have these different things.

00:18:51.580 --> 00:18:55.400
And really it's where containers come from and where these microservices come from.

00:18:55.400 --> 00:19:03.360
Like you want everything to be immutable and like easy to, you know, set up fresh, you know, instead of changing a host when it starts to misbehave, you just burn it down and create a new one.

00:19:03.360 --> 00:19:07.160
Don't embed all the configuration information and put that like in the environment.

00:19:07.160 --> 00:19:11.540
And so it's separate from, say, your source code and your app code and whatnot.

00:19:11.540 --> 00:19:16.680
And there are some great advantages to that because if you start with an image that like, for example, in auditing, right?

00:19:16.680 --> 00:19:20.700
If you start with an image that has all of those audit checks already passing, right?

00:19:20.700 --> 00:19:23.080
Then you're just starting from a much better place, right?

00:19:23.080 --> 00:19:26.480
And you can make sure that everybody is starting from this, you know, hardened, secure image, right?

00:19:26.480 --> 00:19:31.560
And then past that, when you're not messing with hosts, you have a lot fewer snowflakes.

00:19:31.560 --> 00:19:35.320
I mean, you have a lot fewer inconsistencies across your hosts in theory, right?

00:19:35.320 --> 00:19:43.560
And really where the attackers get in is in those snowflake servers that like have kind of been forgotten about, you know, sometimes they get in via dev, you know, whatever.

00:19:43.560 --> 00:19:46.180
Nobody wants to upgrade it because it might break the thing.

00:19:46.180 --> 00:19:46.680
Right.

00:19:46.680 --> 00:19:50.840
That person used to maintain, but they left the company and no one wants to make it their problem.

00:19:50.840 --> 00:19:51.760
So they don't touch it.

00:19:51.760 --> 00:19:52.780
But it has problems too.

00:19:52.780 --> 00:20:00.120
Like, for example, the established way to pass secrets into a container via the 12 factor method is via environment variables.

00:20:00.120 --> 00:20:02.080
And security engineers don't like that.

00:20:02.080 --> 00:20:04.560
They don't like secrets and environment variables.

00:20:04.560 --> 00:20:10.300
Because soon as you're on the box, you can just, you know, query the environment variables and see all the logins and stuff, right?

00:20:10.300 --> 00:20:10.660
Exactly.

00:20:10.660 --> 00:20:16.200
And theoretically, you know, you don't have the ability to log into the actual container, right?

00:20:16.200 --> 00:20:17.080
Because you don't ever need to.

00:20:17.080 --> 00:20:23.260
And so theoretically, and then of course, you're using CoreOS or something that is theoretically more secure, right?

00:20:23.260 --> 00:20:27.300
So like there's frameworks around that to try to prevent that from being as bad of a problem as it is.

00:20:27.300 --> 00:20:29.980
But it still is, you know, a hard thing that we're trying to deal with.

00:20:29.980 --> 00:20:37.260
So I do think 12 factor and containers and immutable images and those kinds of things do have a lot of advantages.

00:20:37.260 --> 00:20:40.840
But and probably the advantages override the disadvantages.

00:20:40.840 --> 00:20:45.180
But the other problem is that not every use case fits into that, right?

00:20:45.180 --> 00:20:51.040
Containers don't like, you know, we have 40,000 some odd servers across our analytics product.

00:20:51.720 --> 00:21:00.540
And like using those, like it's just not, you know, it would take a huge rewrite of that product to make it a microservices, you know, product kind of a thing.

00:21:00.540 --> 00:21:02.580
So like, so like it's going to take many years.

00:21:02.580 --> 00:21:09.580
And even then there are certain applications where like just being on bare metal is just better, more performant, etc.

00:21:09.580 --> 00:21:12.000
So it's never going to be like the only thing that we do.

00:21:12.000 --> 00:21:13.160
I don't think, I don't know.

00:21:13.160 --> 00:21:14.460
I'm not going to try to guess.

00:21:14.460 --> 00:21:18.180
But I do think from a security perspective, it is better overall.

00:21:18.180 --> 00:21:19.220
Yeah, interesting.

00:21:19.220 --> 00:21:20.720
I think it probably is as well.

00:21:20.720 --> 00:21:24.860
It's easier to set one baseline and just create the images from that.

00:21:24.860 --> 00:21:28.440
But still, I think it also, it seems like things change more often.

00:21:28.440 --> 00:21:33.900
And somebody could flip a switch in that image that you don't realize or in a base image, you know, somewhere down that chain.

00:21:33.900 --> 00:21:36.700
And, you know, all of a sudden, everything's like that.

00:21:36.700 --> 00:21:38.500
Not just that snowflake server, right?

00:21:38.500 --> 00:21:40.440
But that's also easy to undo when you find it, right?

00:21:40.440 --> 00:21:43.000
Because again, you just switch it on a higher level.

00:21:43.000 --> 00:21:44.800
And the next time they build their image, they get that, right?

00:21:44.800 --> 00:21:45.960
So I don't know.

00:21:45.960 --> 00:21:47.820
But yeah.

00:21:47.820 --> 00:21:48.880
Yeah, a bit of a diversion.

00:21:48.880 --> 00:21:53.840
But so let's, if you don't mind, tell us as much as you're happy to share.

00:21:53.840 --> 00:21:57.660
Just a little bit about, you talked about 40,000 servers, something like that.

00:21:57.660 --> 00:22:06.380
When I think of Adobe, I think of Photoshop and things like that that are more apps on like a desktop or a tablet or something.

00:22:06.380 --> 00:22:10.740
Give us a sense of what a cloud and server world looks like over there.

00:22:10.740 --> 00:22:14.800
So I have less of a sense on the, so we have two major business units.

00:22:14.800 --> 00:22:20.040
We have our digital media, which is what you referred to, the Photoshop, etc, etc.

00:22:20.040 --> 00:22:23.360
And then we have our digital marketing or digital experience as it's been rebranded recently.

00:22:23.360 --> 00:22:28.100
And that actually started from an acquisition of a company called Omniture here in Utah.

00:22:28.100 --> 00:22:32.620
And it turned into like, Adobe is one of the big players in marketing analytics.

00:22:32.620 --> 00:22:42.400
They do everything from helping customers see what's working as far as advertising on their sites to helping serve social media stuff.

00:22:42.400 --> 00:22:44.900
There's a whole suite of stuff that you can get from Adobe.

00:22:44.900 --> 00:22:47.940
And it's much less known, even though it's a pretty big business unit.

00:22:47.940 --> 00:22:50.860
And that's actually, on the digital media side, we have servers, right?

00:22:50.860 --> 00:22:52.400
Because we have now Creative Cloud, right?

00:22:52.400 --> 00:22:53.360
And we have to serve all that data.

00:22:53.360 --> 00:22:54.460
We have to keep your...

00:22:54.460 --> 00:22:57.460
You can keep your files in our Creative Cloud, all that stuff, right?

00:22:57.460 --> 00:22:57.700
Right.

00:22:57.700 --> 00:23:03.260
But it's much bigger on the digital marketing side because we're doing the software as a service for all these big companies.

00:23:03.260 --> 00:23:04.160
Yeah.

00:23:04.160 --> 00:23:10.460
So on the digital marketing side, we have something like 100, 120,000 servers or so across a whole bunch of teams.

00:23:10.460 --> 00:23:11.460
We just acquired...

00:23:11.460 --> 00:23:16.460
Adobe just finished acquiring Marketo, which added a whole bunch of new infrastructure to our...

00:23:16.460 --> 00:23:18.400
That we have to worry about.

00:23:18.720 --> 00:23:28.440
So how does that kind of stuff sort of shape what you're building and what Hubble is, where somebody outside of the company says,

00:23:28.440 --> 00:23:29.640
Oh, we just acquired this other company.

00:23:29.640 --> 00:23:31.960
And now they use this technology and here's all their servers.

00:23:31.960 --> 00:23:32.760
It changed a lot.

00:23:32.760 --> 00:23:33.780
It affected us a lot.

00:23:33.780 --> 00:23:36.020
LiveFire, we acquired a few years ago.

00:23:36.020 --> 00:23:39.200
And that one was a big one because they did a lot of auto scaling in AWS.

00:23:39.200 --> 00:23:44.260
And our original Hubble was built on top of Salt directly, right?

00:23:44.260 --> 00:23:47.980
You would deploy it as a series of modules inside of Salt.

00:23:48.700 --> 00:23:50.640
And that worked well.

00:23:50.640 --> 00:23:53.180
Not nearly as well as today's product, but they worked well.

00:23:53.180 --> 00:23:58.920
But then we get to LiveFire and it's going to be prohibitively expensive for them to actually deploy SaltStack everywhere.

00:23:58.920 --> 00:24:02.360
Because what they use, they use AWS a lot like containers, right?

00:24:02.360 --> 00:24:03.960
They use AMIs.

00:24:03.960 --> 00:24:05.000
They use images, right?

00:24:05.000 --> 00:24:07.480
And they don't really modify their host.

00:24:07.480 --> 00:24:10.740
They don't really have a good configuration management story in place because they don't need to, right?

00:24:10.740 --> 00:24:11.840
They use it like containers.

00:24:11.840 --> 00:24:15.960
So we basically realized that we needed a product that could be standalone, right?

00:24:15.960 --> 00:24:16.840
That did not rely on Salt.

00:24:16.960 --> 00:24:20.540
Because as this went wider and wider, a lot of teams at Adobe don't use Salt.

00:24:20.540 --> 00:24:22.620
And we couldn't necessarily force them to.

00:24:22.620 --> 00:24:24.480
Or it wasn't going to be prudent, right?

00:24:24.480 --> 00:24:30.080
So we created Hubble, which we use PyInstaller to compile.

00:24:30.340 --> 00:24:35.460
So that it basically, we do our best to compile everything into one directory.

00:24:35.460 --> 00:24:42.700
All of our dependencies, our packages have no dependencies, except glibc, which we can assume is going to be on a Linux host.

00:24:42.700 --> 00:24:44.340
It has no dependencies.

00:24:44.340 --> 00:24:45.780
It ships with its own Python.

00:24:45.780 --> 00:24:47.200
It doesn't mess with existing Pythons.

00:24:47.200 --> 00:24:48.480
It doesn't mess with existing Salt.

00:24:48.560 --> 00:24:49.380
It doesn't mess with anything.

00:24:49.380 --> 00:25:00.800
And that was hugely advantageous because now we can just say, hey, teams, all you need to do is install this package, put the configuration in place once, and restart Hubble.

00:25:00.800 --> 00:25:03.480
And all of a sudden, you were getting all of your reporting, right?

00:25:03.680 --> 00:25:08.680
And we're not adding a whole bunch of new stuff to overwhelm your Salt masters, right?

00:25:08.680 --> 00:25:14.640
We talked directly from those hosts to Splunk, which is the tool we use to collate all of those results.

00:25:14.640 --> 00:25:17.720
And it turned out to be just way better.

00:25:18.280 --> 00:25:19.960
And so eventually, we actually...

00:25:19.960 --> 00:25:23.380
Oh, and by the way, that version of Hubble does still use Salt.

00:25:23.380 --> 00:25:24.580
It just uses it as a library.

00:25:24.580 --> 00:25:25.360
It just imports Salt.

00:25:25.360 --> 00:25:25.560
Right.

00:25:25.560 --> 00:25:38.660
But we were able to just slim it down and make it so much more targeted and make it work so much better and make the onboarding story so much better that we eventually deprecated Hubble Salt and just focused on the standalone.

00:25:38.660 --> 00:25:39.000
Right.

00:25:39.000 --> 00:25:46.500
So Hubble Salt was the original one where it was just completely assuming this is going to be built on SaltStack, right?

00:25:46.500 --> 00:25:47.680
And now you kind of...

00:25:47.680 --> 00:25:51.960
Yeah, you just add it as like a remote in your SaltStack master and it just like pulls down the stuff.

00:25:51.960 --> 00:25:52.860
Right, right.

00:25:52.860 --> 00:25:57.900
But with all these acquisitions and disparate infrastructure, it's like, okay, well, that's not working.

00:25:57.900 --> 00:25:59.960
So let's not require that.

00:25:59.960 --> 00:26:01.940
Let's just do this straight Hubble.

00:26:01.940 --> 00:26:06.380
And what I'm really impressed with is your ability to take this and deploy it.

00:26:06.380 --> 00:26:09.240
No Python dependency on the machine.

00:26:09.240 --> 00:26:14.160
No pip install -r requirements dependency on the machine.

00:26:14.160 --> 00:26:16.080
Just here is a binary, run it.

00:26:16.080 --> 00:26:18.500
Like that seems just golden for Python.

00:26:18.500 --> 00:26:19.260
Oh, it's amazing.

00:26:19.260 --> 00:26:21.880
Like I, you know, yeah, pip is great.

00:26:21.880 --> 00:26:27.140
But like being able to like a lot of if you talk to SREs, they don't like pip in general.

00:26:27.140 --> 00:26:27.540
Yeah.

00:26:27.540 --> 00:26:30.120
They want to install via system packages.

00:26:30.120 --> 00:26:33.760
Why wouldn't they want to just download arbitrary code from the internet and run it?

00:26:33.760 --> 00:26:35.700
That's so, so paranoid.

00:26:35.860 --> 00:26:38.500
It's just, I mean, and pip has gotten so much better.

00:26:38.500 --> 00:26:41.840
But like, you know, it still doesn't even, it has like some uninstall issues.

00:26:41.840 --> 00:26:43.740
Like these days, it's a lot better than it used to be.

00:26:43.740 --> 00:26:47.680
But yeah, like they just want to do it as a package because that's what they're doing with everything else.

00:26:47.680 --> 00:26:47.900
Right.

00:26:47.900 --> 00:26:49.360
They just want to do RPM or deb.

00:26:49.360 --> 00:26:50.280
Like that's it.

00:26:50.360 --> 00:26:52.060
And so it's been really advantageous to do that.

00:26:52.060 --> 00:26:55.240
And we actually, we also use, we cheat a lot, right?

00:26:55.240 --> 00:26:59.400
We actually don't use proper Debian standards for packaging.

00:26:59.400 --> 00:27:05.960
We just use FPM because FPM is amazing and just makes it so easy to package for any operating system.

00:27:05.960 --> 00:27:07.400
And it's just been really good.

00:27:07.460 --> 00:27:08.660
And it was so much better.

00:27:08.660 --> 00:27:11.620
Like even if you're using salt, like my team uses salt.

00:27:11.620 --> 00:27:18.900
And it was like upgrading Hubble salt was much more of a pain to get consistent across our infrastructure than just doing this package.

00:27:18.900 --> 00:27:22.100
And so, you know, I immediately switched us to Hubble instead.

00:27:22.100 --> 00:27:23.260
And I was like, this is so much better.

00:27:23.260 --> 00:27:27.380
So, you know, we're actually in the process of completely phasing out Hubble salt.

00:27:27.380 --> 00:27:31.460
It's mostly gone out of Adobe's infrastructure and Hubble is Hubble's king.

00:27:31.460 --> 00:27:34.480
So is Hubble salt still a thing in open source?

00:27:34.660 --> 00:27:37.840
Or are you trying to push everyone over to Hubble outside Adobe as well?

00:27:37.840 --> 00:27:38.600
It's not a thing.

00:27:38.600 --> 00:27:40.720
Well, if somebody wanted to fork it, it's Apache 2.

00:27:40.720 --> 00:27:41.460
Go for it.

00:27:41.460 --> 00:27:43.620
But we have stopped maintaining it.

00:27:43.620 --> 00:27:48.000
I put a note in the readme and, you know, said we're deprecating this.

00:27:48.000 --> 00:27:52.360
Like I encourage you to try Hubble because it's just better.

00:27:52.360 --> 00:27:54.800
Like it's just a better story for users.

00:27:54.800 --> 00:27:58.160
So obviously, I don't know if we said it explicitly, but Hubble is written in Python.

00:27:58.160 --> 00:27:58.740
Yeah.

00:27:58.740 --> 00:27:59.400
Yes.

00:27:59.400 --> 00:28:00.760
So that's great.

00:28:00.760 --> 00:28:04.640
But I do love that you don't have to, you know, as a consumer,

00:28:04.640 --> 00:28:06.360
of it for your servers.

00:28:06.360 --> 00:28:08.540
You don't have to care that it's in Python.

00:28:08.540 --> 00:28:09.940
You just take the thing and run it.

00:28:09.940 --> 00:28:14.180
It's great that we have pip and it's in Python and all that for developing it.

00:28:14.180 --> 00:28:20.400
But it's, I just don't feel like pip is the right answer for consumers and users in general.

00:28:20.400 --> 00:28:22.560
And it's cool that you guys made that work.

00:28:22.560 --> 00:28:22.820
Yeah.

00:28:22.820 --> 00:28:23.440
We like it a lot.

00:28:23.440 --> 00:28:23.680
Yeah.

00:28:23.740 --> 00:28:28.120
So when I go to the GitHub organization, I see three things at least.

00:28:28.120 --> 00:28:30.080
I see Hubble and Hubble salt.

00:28:30.080 --> 00:28:31.620
Those are the two we talked about, right?

00:28:31.620 --> 00:28:34.040
And then there's also Hubble stack data.

00:28:34.040 --> 00:28:36.420
Now, do you want to maybe tell us about that?

00:28:36.420 --> 00:28:41.080
So the idea behind Hubble is that we, because upgrading is expensive, even though it shouldn't

00:28:41.080 --> 00:28:43.620
be, even though it should just be a, an RPM upgrade, right?

00:28:43.620 --> 00:28:46.900
It's expensive to work with all of these teams to upgrade because they're busy with their own

00:28:46.900 --> 00:28:47.380
stuff, right?

00:28:47.380 --> 00:28:53.940
So the idea was to try to make it as much as possible that we could safely change the information

00:28:53.940 --> 00:28:58.360
that we're gathering from a source that, you know, security engineering controls.

00:28:58.360 --> 00:28:58.600
Right.

00:28:58.700 --> 00:29:03.720
So this is something like the vulnerable, new vulnerabilities or new things to check

00:29:03.720 --> 00:29:04.020
for.

00:29:04.020 --> 00:29:04.520
Exactly.

00:29:04.520 --> 00:29:08.080
So we find out that we need to check for this new file or whatever.

00:29:08.080 --> 00:29:11.060
We want to watch this file that we haven't been watching, or we want to add this new audit

00:29:11.060 --> 00:29:11.640
check or whatever.

00:29:11.640 --> 00:29:15.340
We don't want to necessarily have to deploy new code to the servers, right?

00:29:15.340 --> 00:29:19.980
But on the other hand, we also don't want to give ourselves the ability to run arbitrary

00:29:19.980 --> 00:29:21.300
code on the servers.

00:29:21.300 --> 00:29:22.960
It's this compromise, right?

00:29:22.960 --> 00:29:26.680
We work as hard as we can to give ourselves as much flexibility in data gathering, but we also

00:29:26.680 --> 00:29:30.940
work as hard as we can to make sure that we can't modify the server from Hubble stack data

00:29:30.940 --> 00:29:34.180
and that any changes to Hubble stack data will be safe, right?

00:29:34.180 --> 00:29:39.560
So, you know, we have an agreement with our customers, which are other users at Adobe, that

00:29:39.560 --> 00:29:42.160
we won't push code to that Hubble stack data repo.

00:29:42.160 --> 00:29:46.520
And then we also, you know, we'll notify them and do it with a change request, a change management

00:29:46.520 --> 00:29:50.200
request inside of Adobe whenever we merge to like the master branch, right?

00:29:50.200 --> 00:29:52.860
So we treat it almost like a code deploy, even though it's not.

00:29:52.860 --> 00:29:58.140
And that way, you know, we mitigate the risk and we do testing around it before we merge

00:29:58.140 --> 00:29:58.620
those things.

00:29:58.620 --> 00:30:02.600
And that has just allowed us to create trust with our customers, right?

00:30:02.600 --> 00:30:04.540
That we're not going to, that Hubble is not going to mess up their servers.

00:30:04.540 --> 00:30:09.480
And so, yeah, Hubble stack data is where all of the profiles is the word we've chosen.

00:30:09.480 --> 00:30:12.800
That basically tells Hubble what data to collect.

00:30:12.800 --> 00:30:16.380
And inside of there, we have a couple of different components inside of Hubble.

00:30:16.380 --> 00:30:20.900
I guess I should have given like a high level review earlier than this, probably right?

00:30:20.960 --> 00:30:21.840
35 minutes in here.

00:30:21.840 --> 00:30:22.560
It's all right.

00:30:22.560 --> 00:30:24.240
Like I mentioned, Hubble does a couple of things, right?

00:30:24.240 --> 00:30:31.380
It does these audits, which are success fail checks against like, say, CIS or Red Hat Stig,

00:30:31.380 --> 00:30:34.060
any, you know, these different compliance standards.

00:30:34.060 --> 00:30:36.320
And that the code name for that is Nova.

00:30:36.320 --> 00:30:38.260
Hubble, you know, is named after the telescope.

00:30:38.260 --> 00:30:42.820
The idea is where we are looking with our telescope into the black hole of our infrastructure,

00:30:42.820 --> 00:30:43.220
right?

00:30:43.220 --> 00:30:45.560
We hope it's not a black hole, but sometimes it feels that way.

00:30:45.560 --> 00:30:46.860
But it can be vast, right?

00:30:46.860 --> 00:30:52.100
I mean, like trying to maintain 40,000 servers is not a not an obvious thing to do.

00:30:52.100 --> 00:30:52.720
It's crazy.

00:30:52.720 --> 00:30:56.560
And again, you know, yes, most of the servers are fine, but it's the edges that are hard.

00:30:56.560 --> 00:30:59.360
And those edges are the hardest thing for SREs to keep track of, right?

00:30:59.360 --> 00:31:01.160
So we everything is space themed.

00:31:01.160 --> 00:31:04.900
We may be moving away from that in the near future just because it's really hard to keep

00:31:04.900 --> 00:31:05.300
track of.

00:31:05.300 --> 00:31:07.420
Like if I say Nova, you're like, I don't know what that is.

00:31:07.420 --> 00:31:10.820
But if I say audit, you can say, oh, I get an idea of what that is.

00:31:11.500 --> 00:31:15.060
So Nova is the audit piece and that's all success fail stuff.

00:31:15.060 --> 00:31:16.380
It's built on this.

00:31:16.380 --> 00:31:20.840
You basically write these YAML profiles in kind of an ugly format.

00:31:20.840 --> 00:31:23.080
We're going to hopefully improve that in the near future.

00:31:23.080 --> 00:31:24.500
But but it works well.

00:31:24.500 --> 00:31:27.020
Just returns, you know, you can see all the failures.

00:31:27.020 --> 00:31:32.420
And then, you know, we then can ticket, you know, in JIRA, the teams that need to make changes

00:31:32.420 --> 00:31:33.400
based on those failures.

00:31:33.600 --> 00:31:39.220
And then we have Nebula, which is kind of our like data gathering segment of Hubble.

00:31:39.220 --> 00:31:45.460
It primarily uses OS query, which is a really cool open source project by Facebook.

00:31:45.460 --> 00:31:51.460
And it basically OS query allows you to query your system as if it was an SQL database.

00:31:51.460 --> 00:31:53.200
So you can query everything.

00:31:53.200 --> 00:31:53.620
Right.

00:31:53.620 --> 00:31:54.340
I've seen that.

00:31:54.340 --> 00:31:55.080
That is amazing.

00:31:55.080 --> 00:31:56.680
Yeah, it's really cool.

00:31:56.680 --> 00:32:01.060
You can query everything from like network connections to like installed packages to

00:32:01.060 --> 00:32:02.340
all sorts of stuff.

00:32:02.340 --> 00:32:02.980
It's crazy.

00:32:03.100 --> 00:32:03.920
It's actively developed.

00:32:03.920 --> 00:32:05.380
They fixed for a while.

00:32:05.380 --> 00:32:08.760
Facebook had we had some drama with Facebook around there.

00:32:08.760 --> 00:32:12.900
Oh, it was like a patents clause and like they're in their projects.

00:32:12.900 --> 00:32:16.120
And it was it was a bigger deal for Angular's Angular that they do.

00:32:16.120 --> 00:32:16.560
Or is it?

00:32:16.560 --> 00:32:19.040
I don't remember what JS project it is.

00:32:19.040 --> 00:32:19.900
It's react.

00:32:19.900 --> 00:32:20.900
I think react.

00:32:20.900 --> 00:32:21.340
Thank you.

00:32:21.340 --> 00:32:25.640
And it was this big deal because it's like if you if Facebook ever ends in ends up in

00:32:25.640 --> 00:32:29.680
litigation with your company, right, then we this is revoked and you can't use our

00:32:29.680 --> 00:32:30.280
thing.

00:32:30.280 --> 00:32:30.540
Right.

00:32:30.540 --> 00:32:33.080
And so it's this big thing that like, you know, a bunch of companies were like,

00:32:33.080 --> 00:32:37.260
we got to get react out of our infrastructure because of all this stuff like the lawyers

00:32:37.260 --> 00:32:38.540
were like, no, it cannot be that.

00:32:38.540 --> 00:32:41.460
And anyway, Facebook has fixed that since including with those queries.

00:32:41.460 --> 00:32:42.720
So it's it's been good.

00:32:42.720 --> 00:32:44.340
But yeah, it's a really cool product.

00:32:44.340 --> 00:32:49.520
And we use that to just collect terabytes of data every day from our hosts, everything like

00:32:49.520 --> 00:32:55.660
from the easy gimmies like established outbound connections to like all the packages installed

00:32:55.660 --> 00:33:00.620
on the system to all like the Docker processes running to shell histories to like we just collect

00:33:00.620 --> 00:33:02.120
all this stuff and shove it into Splunk.

00:33:02.260 --> 00:33:05.900
And then our blue team can sift through it and try to try to find actionable insights.

00:33:05.900 --> 00:33:07.720
That's not what makes us the money.

00:33:07.720 --> 00:33:10.700
But that's where the blue team is super excited about the data, right?

00:33:10.700 --> 00:33:12.100
That's the data that's useful to them.

00:33:12.100 --> 00:33:12.440
Right.

00:33:12.560 --> 00:33:16.660
And then we have Pulsar, which is our file integrity monitoring or FIM.

00:33:16.660 --> 00:33:21.400
We use iNotify on Linux and NTFS journaling on Windows.

00:33:21.400 --> 00:33:22.620
By the way, Hubble runs on Windows.

00:33:22.620 --> 00:33:23.740
Yeah, I was going to ask you that.

00:33:23.740 --> 00:33:27.180
So obviously it runs on Linux, but also runs on like Windows server.

00:33:27.180 --> 00:33:27.700
Yeah, yeah.

00:33:27.700 --> 00:33:28.720
Mac, macOS.

00:33:28.920 --> 00:33:30.320
It could run on Mac.

00:33:30.320 --> 00:33:33.280
There's nothing like there's nothing stopping it from running on Mac.

00:33:33.280 --> 00:33:33.860
It runs great.

00:33:33.860 --> 00:33:38.580
We don't have any audit profiles that are Mac specific in Hubble stack data yet.

00:33:38.580 --> 00:33:43.040
And we don't have like packages and like all the P list stuff for services.

00:33:43.040 --> 00:33:43.540
Yeah.

00:33:43.540 --> 00:33:49.460
I mean, there's very few servers running macOS, but there are some, I think, like some of these

00:33:49.460 --> 00:33:50.240
build systems.

00:33:50.240 --> 00:33:50.580
Yeah.

00:33:50.580 --> 00:33:55.820
Well, and theoretically, like some people, some people would like to use Hubble for like,

00:33:55.820 --> 00:33:57.960
like laptops and that kind of stuff.

00:33:58.260 --> 00:34:02.500
And it's really not like desktop management for like, I want to know what my machines

00:34:02.500 --> 00:34:03.000
are up to.

00:34:03.000 --> 00:34:04.360
And it could be useful that way.

00:34:04.360 --> 00:34:06.760
It would take some work to make it like more user friendly.

00:34:06.760 --> 00:34:12.140
Like you can't just like this is meant to be run on the CLI and doesn't have a UI at all.

00:34:12.140 --> 00:34:12.580
You know what I mean?

00:34:12.580 --> 00:34:15.940
Like it would take some work, but potentially, but I've tried to push back on that because

00:34:15.940 --> 00:34:17.140
I don't think it's useful.

00:34:17.140 --> 00:34:20.020
But anyway, so Pulsar.

00:34:20.020 --> 00:34:20.500
Okay.

00:34:20.500 --> 00:34:21.060
Yeah.

00:34:21.060 --> 00:34:22.060
Keep going on the infrastructures.

00:34:22.060 --> 00:34:22.440
Yeah.

00:34:22.440 --> 00:34:22.640
Yeah.

00:34:22.640 --> 00:34:23.440
Pulsar, FIM.

00:34:23.440 --> 00:34:28.120
We just basically collect file changes on the host and you can have it.

00:34:28.120 --> 00:34:29.660
Like send checksums of the new files.

00:34:29.660 --> 00:34:33.460
And that way you can compare, you know, is this, does this match our whitelist of checksums

00:34:33.460 --> 00:34:34.880
for the specific binary or whatever?

00:34:34.880 --> 00:34:40.020
We don't have a good answer on that one for like changes that are supposed to happen.

00:34:40.020 --> 00:34:40.320
Right.

00:34:40.320 --> 00:34:45.360
There's no, I don't have a good way to turn off our monitoring during say a configuration

00:34:45.360 --> 00:34:46.220
management push.

00:34:46.220 --> 00:34:46.560
Right.

00:34:47.060 --> 00:34:50.360
Like, obviously I could say, oh, if you lay down this file, then we'll say, oh, that

00:34:50.360 --> 00:34:50.780
file's there.

00:34:50.780 --> 00:34:51.900
Let's stop collecting for a minute.

00:34:51.900 --> 00:34:53.700
But like then an attacker could lay down that file.

00:34:53.700 --> 00:34:53.900
Right.

00:34:53.900 --> 00:34:58.980
So there's like, we haven't figured out a secure way for like a salt master to tell Hubble to

00:34:58.980 --> 00:35:02.760
stop collecting because Hubble doesn't accept incoming connections.

00:35:02.760 --> 00:35:02.920
Right.

00:35:02.920 --> 00:35:05.740
It only shoves data out and pulls data from, from GitHub.

00:35:05.820 --> 00:35:08.640
So, or from S3 or from wherever else.

00:35:08.640 --> 00:35:10.640
And so those are the big pieces.

00:35:10.640 --> 00:35:15.580
The other code name is Quasar, which is, I don't know if it qualifies as being its own

00:35:15.580 --> 00:35:15.880
section.

00:35:15.880 --> 00:35:18.560
It's basically just, that's the returners in salt.

00:35:18.560 --> 00:35:20.700
That's the salt stack terminology.

00:35:20.700 --> 00:35:25.600
But basically that's the glue that allows us to send the data to a destination.

00:35:25.600 --> 00:35:26.860
We support Splunk.

00:35:26.860 --> 00:35:27.820
That's what we use in Adobe.

00:35:27.820 --> 00:35:29.720
We also support elk and log stash.

00:35:29.880 --> 00:35:33.900
So that's what most of our open source users are using, I think, because Splunk is very

00:35:33.900 --> 00:35:34.280
expensive.

00:35:34.280 --> 00:35:34.920
Yeah.

00:35:34.920 --> 00:35:35.340
Yeah.

00:35:35.340 --> 00:35:38.260
So that's, that's kind of the high level overview of the pieces of Hubble.

00:35:38.260 --> 00:35:44.000
This portion of Talk Python To Me is brought to you by Rollbar.

00:35:44.000 --> 00:35:45.400
Got a question for you.

00:35:45.400 --> 00:35:48.120
Have you been outsourcing your bug discovery to your users?

00:35:48.120 --> 00:35:50.760
Have you been making them send you bug reports?

00:35:50.760 --> 00:35:52.460
You know, there's two problems with that.

00:35:52.460 --> 00:35:54.440
You can't discover all the bugs this way.

00:35:54.440 --> 00:35:57.000
And some users don't bother reporting bugs at all.

00:35:57.000 --> 00:35:58.900
They just leave sometimes forever.

00:35:59.740 --> 00:36:02.700
The best software teams practice proactive error monitoring.

00:36:02.700 --> 00:36:07.660
They detect all the errors in their production apps and services in real time and debug important

00:36:07.660 --> 00:36:11.100
errors in minutes or hours, sometimes before users even notice.

00:36:11.100 --> 00:36:16.180
Teams from companies like Twilio, Instacart, and CircleCI use Rollbar to do this.

00:36:16.180 --> 00:36:21.720
With Rollbar, you get a real-time feed of all the errors so you know exactly what's broken

00:36:21.720 --> 00:36:22.260
in production.

00:36:22.260 --> 00:36:27.780
And Rollbar automatically collects all the relevant data and metadata you need to debug the

00:36:27.780 --> 00:36:29.460
errors so you don't have to sift through logs.

00:36:29.600 --> 00:36:33.420
If you aren't using Rollbar yet, they have a special offer for you and it's really awesome.

00:36:33.420 --> 00:36:37.920
Sign up and install Rollbar at talkpython.fm/Rollbar.

00:36:38.080 --> 00:36:43.360
And Rollbar will send you a $100 gift card to use at the Open Collective, where you can donate

00:36:43.360 --> 00:36:49.100
to any of the 900 plus projects listed under the Open Source Collective or to the Women Who

00:36:49.100 --> 00:36:49.940
Code organization.

00:36:49.940 --> 00:36:53.580
Get notified of errors in real time and make a difference in Open Source.

00:36:53.580 --> 00:36:56.480
Visit talkpython.fm/Rollbar today.

00:36:56.540 --> 00:36:59.060
All right.

00:36:59.060 --> 00:37:06.500
So give me an example of maybe how once this data is collected, like what kinds of questions

00:37:06.500 --> 00:37:07.140
would you ask?

00:37:07.140 --> 00:37:09.400
So I'm not familiar with Splunk.

00:37:09.400 --> 00:37:11.360
You said this is not an Open Source project.

00:37:11.360 --> 00:37:13.740
It's like a paid commercial thing that's kind of pricey.

00:37:13.880 --> 00:37:14.080
Yeah.

00:37:14.080 --> 00:37:15.620
So Splunk is...

00:37:15.620 --> 00:37:16.040
How do they...

00:37:16.040 --> 00:37:16.880
What do they call themselves?

00:37:16.880 --> 00:37:17.920
Describe themselves.

00:37:17.920 --> 00:37:22.100
Search, analyze, and visualize the machine data generated by your organization.

00:37:22.100 --> 00:37:22.780
Right?

00:37:22.880 --> 00:37:27.540
So the idea behind Splunk is it's kind of the same story as like an elk stack, right?

00:37:27.540 --> 00:37:30.880
You have the collection, you know, with Logstash.

00:37:30.880 --> 00:37:33.880
You have the coordination with Elasticsearch that...

00:37:33.880 --> 00:37:34.740
Sorry, not coordination.

00:37:34.740 --> 00:37:35.880
Queryability with...

00:37:35.880 --> 00:37:36.700
Yeah.

00:37:36.700 --> 00:37:38.680
Correlations, I guess, is what I meant to say.

00:37:38.680 --> 00:37:38.960
Yeah, yeah.

00:37:38.960 --> 00:37:39.140
Okay.

00:37:39.140 --> 00:37:39.880
With Logstash...

00:37:39.880 --> 00:37:41.580
Or sorry, with Elasticsearch.

00:37:41.580 --> 00:37:45.240
And then you have Kibana for like reports and stuff.

00:37:45.240 --> 00:37:46.620
And Splunk does all of those things, right?

00:37:46.620 --> 00:37:51.980
You can do these elaborate searches and correlations across the data.

00:37:52.080 --> 00:37:55.000
And then you can turn that into, you know, alerts.

00:37:55.000 --> 00:37:57.280
Or you can turn that into dashboards.

00:37:57.280 --> 00:38:02.940
And they have, you know, machine learning aspects that try to help you do some of these security

00:38:02.940 --> 00:38:06.220
things without having to hire your own machine learning team.

00:38:06.220 --> 00:38:09.240
They're still young, but it's pretty expensive.

00:38:09.240 --> 00:38:12.580
I mean, I think your first few gigabytes are free or whatever.

00:38:12.580 --> 00:38:17.060
But then it's basically billed by the amount of data that you send to it.

00:38:17.060 --> 00:38:19.960
And, you know, it can get out of hand pretty quickly.

00:38:20.340 --> 00:38:24.640
So you save your company money by only upgrading your servers like once a year, things like that?

00:38:24.640 --> 00:38:26.040
Yeah.

00:38:26.040 --> 00:38:28.500
I mean, I don't deal with the Splunk stuff.

00:38:28.500 --> 00:38:31.340
They just tell me I can send as much data as I want to them, basically.

00:38:31.340 --> 00:38:33.260
Send it here and they go do what they do, right?

00:38:33.260 --> 00:38:33.620
Right.

00:38:33.900 --> 00:38:38.160
And so, yeah, we send terabytes of data to our Splunk clusters.

00:38:38.160 --> 00:38:39.240
Like the gimmies.

00:38:39.240 --> 00:38:42.900
I keep going back to this established outbound connections because it's such an easy thing

00:38:42.900 --> 00:38:44.040
for people to see.

00:38:44.040 --> 00:38:47.660
Like if something is calling home that shouldn't, right?

00:38:47.660 --> 00:38:50.640
That's actually pretty easy to spot in general, right?

00:38:50.640 --> 00:38:50.860
Yeah.

00:38:50.900 --> 00:38:54.280
Obviously, on something like, what's a good example of something that reaches out?

00:38:54.280 --> 00:38:56.420
Well, let's talk about, say, a web server, right?

00:38:56.480 --> 00:39:00.140
So it's got like a micro whiskey or a G unicorn worker process.

00:39:00.140 --> 00:39:02.760
But that worker process is probably talking to a database.

00:39:02.760 --> 00:39:10.220
Maybe it's talking to like a Stripe credit card API or a S3 bucket or something like that.

00:39:10.220 --> 00:39:12.760
Maybe that thing, right, would be reaching out.

00:39:12.760 --> 00:39:16.900
Maybe you've got, obviously, all the upgrades, right?

00:39:16.940 --> 00:39:20.920
If you're going to upgrade, just apt upgrade, you know, that sort of thing that's going to

00:39:20.920 --> 00:39:21.500
be reaching out.

00:39:21.500 --> 00:39:23.320
But those are the few, right?

00:39:23.320 --> 00:39:26.620
Those are easy to like limit to a specific whitelist, right?

00:39:26.620 --> 00:39:30.540
Like, you know, the server needs to reach out to the database servers and you know what all

00:39:30.540 --> 00:39:31.380
the database servers are.

00:39:31.380 --> 00:39:34.160
So you say, okay, in the search, I'm going to eliminate all of those.

00:39:34.160 --> 00:39:34.960
We don't care about those.

00:39:34.960 --> 00:39:38.640
You know, it's going to be reaching out to the package servers, right?

00:39:38.640 --> 00:39:41.500
And theoretically, hopefully you're rehosting those package servers, right?

00:39:41.500 --> 00:39:45.220
So that you know, so you can keep that list, you know, you don't have to whitelist every

00:39:45.220 --> 00:39:46.140
mirror in the world, right?

00:39:46.140 --> 00:39:46.340
Right.

00:39:46.340 --> 00:39:48.980
Or maybe your cloud server is, right?

00:39:48.980 --> 00:39:50.400
Like something like that.

00:39:50.400 --> 00:39:52.180
And then, you know, all these other things.

00:39:52.180 --> 00:39:57.360
But then past that, like the only thing that it accepts, like from any location is incoming

00:39:57.360 --> 00:39:58.040
connections, right?

00:39:58.040 --> 00:40:00.060
On 80 or 443 or whatever, right?

00:40:00.060 --> 00:40:05.500
So if you can create a search such that it says, hey, we know about all these different

00:40:05.500 --> 00:40:09.300
things on these servers that are good reaching out or okay reaching out.

00:40:09.300 --> 00:40:15.180
But if we see something from a new process that isn't in our whitelist or from an existing

00:40:15.340 --> 00:40:18.480
process, because somebody could say, oh, I'm a I'm Apache too, right?

00:40:18.480 --> 00:40:23.320
Like, you know, if you see see something from an existing process that is reaching out to

00:40:23.320 --> 00:40:26.920
somewhere we don't know about, then we send an alert to the security operations center and

00:40:26.920 --> 00:40:29.300
they contact the team and say, hey, is this normal?

00:40:29.300 --> 00:40:31.100
Like, is this something we should add to our whitelist?

00:40:31.100 --> 00:40:31.920
Can we look into this?

00:40:31.920 --> 00:40:36.140
You might find that you have a cryptocurrency miner on there or something, right?

00:40:36.140 --> 00:40:36.960
Like it's, you know.

00:40:36.960 --> 00:40:37.260
Sure.

00:40:37.600 --> 00:40:38.700
So that's like the easy one.

00:40:38.700 --> 00:40:39.160
Yeah.

00:40:39.160 --> 00:40:42.200
So you start with, let's just see what connections are being made.

00:40:42.200 --> 00:40:42.420
All right.

00:40:42.420 --> 00:40:43.380
These look valid.

00:40:43.380 --> 00:40:44.660
Hide them.

00:40:44.660 --> 00:40:46.340
Don't, you know, don't don't worry about those.

00:40:46.340 --> 00:40:49.820
And then you just slowly either go through till there's no more.

00:40:49.820 --> 00:40:54.260
There's none in your list or you start to get worried and figure out what the abnormal ones

00:40:54.260 --> 00:40:54.460
are.

00:40:54.460 --> 00:40:55.020
Exactly.

00:40:55.020 --> 00:40:57.140
And it's a hard problem, right?

00:40:57.140 --> 00:40:57.400
Right.

00:40:57.400 --> 00:41:00.400
Like I mentioned, we have like 30 security engineers.

00:41:00.400 --> 00:41:05.080
And it's because every time that you put something on that whitelist, you've given yourself a

00:41:05.080 --> 00:41:05.620
blind spot.

00:41:05.620 --> 00:41:06.160
Right.

00:41:06.160 --> 00:41:06.660
Yeah.

00:41:06.660 --> 00:41:12.220
So like, you still like, you know, ideally, you know, if we would have like some crazy AI

00:41:12.220 --> 00:41:15.360
that could go through and be like, hey, let's investigate this data.

00:41:15.360 --> 00:41:20.360
And it could notice things that we couldn't, you know, and that's and, you know, that's something

00:41:20.360 --> 00:41:21.300
that Adobe is working on.

00:41:21.300 --> 00:41:22.680
And so many companies are working on, right?

00:41:22.680 --> 00:41:24.340
Machine learning and AI is huge everywhere.

00:41:24.340 --> 00:41:24.680
Right.

00:41:24.680 --> 00:41:27.140
But yeah, it's it's it's a really difficult problem.

00:41:27.360 --> 00:41:31.320
And one that I'm not super qualified to talk about because yeah, no worries.

00:41:31.320 --> 00:41:31.960
Not what I do all day.

00:41:31.960 --> 00:41:39.020
So what we've spoken about so far to me sounds like one, a configuration of the machine and

00:41:39.020 --> 00:41:41.940
two, oh crap, something is bad here.

00:41:41.940 --> 00:41:47.440
At that point, I feel like you're it's not necessarily too late, but you're way far down the road of

00:41:47.440 --> 00:41:48.540
it's not good.

00:41:48.540 --> 00:41:54.280
You know, if there's a process connecting to something else on your server and it really is

00:41:54.280 --> 00:41:56.880
malicious, like that's a long ways down the path to not good.

00:41:56.880 --> 00:42:02.860
So one of the things that might be really helpful is to just say, I'm using this version

00:42:02.860 --> 00:42:04.960
of Django or that version of request.

00:42:04.960 --> 00:42:08.340
And it turns out that there's a critical security problem found in it.

00:42:08.340 --> 00:42:11.960
We had better upgrade that before someone else, you know, figures it out.

00:42:11.960 --> 00:42:12.200
Right.

00:42:12.200 --> 00:42:14.120
Does it support searching for that kind of stuff?

00:42:14.120 --> 00:42:14.400
Yeah.

00:42:14.400 --> 00:42:17.480
So we don't actually use it for that in Adobe.

00:42:17.480 --> 00:42:20.180
We have a different tool that they've been using for many years.

00:42:20.180 --> 00:42:22.900
And so we didn't see the need to change on that one yet.

00:42:22.900 --> 00:42:24.700
But we do have support for it in Hubble.

00:42:24.700 --> 00:42:25.820
It's not perfect.

00:42:25.820 --> 00:42:28.640
We use a site called Vulners, Vulners.com.

00:42:28.640 --> 00:42:33.580
Originally, we were we were downloading like their original API had the ability to download

00:42:33.580 --> 00:42:37.520
the whole vulnerability list, basically.

00:42:37.520 --> 00:42:42.340
And then you could audit it locally and look against the existing packages and see if you

00:42:42.340 --> 00:42:43.600
had any issues and then report those.

00:42:43.600 --> 00:42:49.760
And that was nice because it's a hard sell to send your list of installed packages to an

00:42:49.760 --> 00:42:50.060
API.

00:42:50.060 --> 00:42:50.960
Right.

00:42:51.300 --> 00:42:53.520
Because now they know if you have any vulnerabilities.

00:42:53.520 --> 00:42:54.020
Right.

00:42:54.020 --> 00:42:58.320
I'm not saying that Vulners can't be trusted, but I would, you know, I would hesitate to use

00:42:58.320 --> 00:42:59.920
them without without paying for them.

00:42:59.920 --> 00:43:00.100
Right.

00:43:00.100 --> 00:43:01.300
Like it just in general.

00:43:01.300 --> 00:43:01.820
Yeah.

00:43:01.820 --> 00:43:03.820
Just so that you can have somebody to blame.

00:43:03.820 --> 00:43:04.580
You know what I mean?

00:43:05.120 --> 00:43:08.980
So basically, with that original version, we were just hammering their servers and they

00:43:08.980 --> 00:43:09.640
were like, please stop.

00:43:09.640 --> 00:43:10.800
Please don't do this.

00:43:10.800 --> 00:43:12.240
And I was like, OK.

00:43:12.440 --> 00:43:17.280
And so like their new method is you actually get an API key from them and then you plug

00:43:17.280 --> 00:43:24.200
that into our Vulner's module configuration and then it can basically it will securely send

00:43:24.200 --> 00:43:27.280
your list of installed packages to them and they'll report if you have any vulnerabilities.

00:43:27.280 --> 00:43:28.800
And that's not perfect.

00:43:28.800 --> 00:43:29.120
Yeah.

00:43:29.120 --> 00:43:29.920
How does it do that?

00:43:29.920 --> 00:43:32.860
Does it look at the requirement like the pin versions and the requirements?

00:43:32.860 --> 00:43:37.120
Does it look at your virtual environments or your system level one and see what's installed

00:43:37.120 --> 00:43:40.120
or what's the process of even knowing what to send them?

00:43:40.380 --> 00:43:43.280
So I don't think it does stuff like Python packages.

00:43:43.280 --> 00:43:45.900
I think it's mostly dealing with system packages.

00:43:45.900 --> 00:43:46.240
Right.

00:43:46.240 --> 00:43:50.620
Like we know, you know, so they can keep a list of, hey, like bash or something.

00:43:50.620 --> 00:43:50.940
Yeah.

00:43:50.940 --> 00:43:53.100
CVE came out on.

00:43:53.100 --> 00:43:53.460
Yeah.

00:43:53.460 --> 00:43:55.300
And, you know, a lot of these things are repackaged.

00:43:55.300 --> 00:43:55.520
Right.

00:43:55.520 --> 00:43:59.880
Like you have you can install you can do yum install Python dash requests.

00:43:59.880 --> 00:44:00.140
Right.

00:44:00.140 --> 00:44:03.020
And you can get requests in its packaged Python version.

00:44:03.020 --> 00:44:03.320
Right.

00:44:03.320 --> 00:44:06.060
And so, you know, that kind of stuff would be reported.

00:44:06.060 --> 00:44:06.260
Right.

00:44:06.260 --> 00:44:10.300
If there's a big request vulnerability, then you can know that you're vulnerable and you need

00:44:10.300 --> 00:44:11.300
and you need to upgrade.

00:44:11.300 --> 00:44:13.460
But yeah, I don't think it does the Python stuff.

00:44:13.460 --> 00:44:18.320
So so like this is something where we don't have a super great answer for because it's

00:44:18.320 --> 00:44:22.380
arguably not a great thing to send all of your security data off to vulners who you maybe

00:44:22.380 --> 00:44:23.500
don't necessarily trust.

00:44:23.500 --> 00:44:23.700
Right.

00:44:23.700 --> 00:44:23.940
Yeah.

00:44:23.940 --> 00:44:27.120
And I haven't figured out a good way to do that because I don't want to be in the business

00:44:27.120 --> 00:44:34.160
of trying to compile that list of vulnerabilities because that's why companies get paid big bucks

00:44:34.160 --> 00:44:36.540
is because it would just consume all my time.

00:44:36.660 --> 00:44:36.760
Right.

00:44:36.760 --> 00:44:37.980
Like, you know, that's right.

00:44:37.980 --> 00:44:38.400
Right.

00:44:38.400 --> 00:44:41.580
Whole companies like vulners are just designed just to do that.

00:44:41.580 --> 00:44:41.760
Right.

00:44:41.760 --> 00:44:43.160
And they make money doing just that.

00:44:43.160 --> 00:44:46.620
So I don't know where that's going to go in the future with Hubble.

00:44:46.620 --> 00:44:49.760
But, you know, for now, you can do it with vulners, which is great.

00:44:49.760 --> 00:44:52.500
You know, as long as you're OK with that compromise.

00:44:52.500 --> 00:44:53.440
So sure.

00:44:53.440 --> 00:44:54.180
That's interesting.

00:44:54.440 --> 00:45:00.660
So one of the things I do for my servers and projects is I use a thing called pyup.io.

00:45:00.660 --> 00:45:06.020
And basically, it looks at your requirements.txt, pins the versions.

00:45:06.020 --> 00:45:09.660
And if there's new ones, it'll do a PR to automatically increment that.

00:45:09.660 --> 00:45:13.100
And it'll let you know if there's a security vulnerability in them.

00:45:13.100 --> 00:45:14.660
But that's only the Python side.

00:45:14.660 --> 00:45:17.700
And you still have the problem if you're sending them your requirements file.

00:45:18.320 --> 00:45:20.680
And GitHub has been doing great work recently.

00:45:20.680 --> 00:45:21.540
Have you seen that?

00:45:21.540 --> 00:45:25.120
Where they'll just like, they'll inspect your requirements file for you and say,

00:45:25.120 --> 00:45:26.480
hey, there's a CVE on this.

00:45:26.480 --> 00:45:27.300
You should upgrade this.

00:45:27.300 --> 00:45:28.680
And it's like, whoa, thank you, GitHub.

00:45:28.680 --> 00:45:29.660
Like, that's awesome.

00:45:29.660 --> 00:45:30.480
It is really good.

00:45:30.480 --> 00:45:34.480
And it's a huge like warning across when you log in and they update it weekly.

00:45:34.480 --> 00:45:35.940
You're not going to miss it.

00:45:35.940 --> 00:45:36.500
Yeah.

00:45:36.500 --> 00:45:36.780
Yeah.

00:45:36.780 --> 00:45:39.240
That used to would have been around for about a year, I think.

00:45:39.240 --> 00:45:41.340
But it was only for JavaScript and Ruby.

00:45:41.340 --> 00:45:43.200
I think it's doing it for Python now.

00:45:43.200 --> 00:45:43.520
Yeah.

00:45:43.520 --> 00:45:45.340
Now they added Python support, which is great.

00:45:45.340 --> 00:45:46.480
Just like a few months ago.

00:45:46.900 --> 00:45:49.460
So yeah, that's a really good one as well.

00:45:49.460 --> 00:45:54.320
I guess maybe we could talk just a little bit about some of the pieces involved and some

00:45:54.320 --> 00:45:55.060
of the building blocks.

00:45:55.060 --> 00:45:58.560
So we talked about salt and we also talked about vulnerable.

00:45:58.560 --> 00:46:00.360
So what else is involved here?

00:46:00.360 --> 00:46:02.820
It's your Python code, those two projects.

00:46:02.820 --> 00:46:03.560
And what else?

00:46:03.560 --> 00:46:04.300
Like, how have you built it?

00:46:04.300 --> 00:46:07.780
We actually use Docker to create our packages, which I recommend highly.

00:46:07.780 --> 00:46:08.440
It's really great.

00:46:08.440 --> 00:46:12.020
Like I can just basically do a Docker build and then a Docker run.

00:46:12.020 --> 00:46:13.040
And I just have packages.

00:46:13.040 --> 00:46:13.800
It's beautiful.

00:46:14.280 --> 00:46:17.980
We have a security engineer who's all about like not trusting what's on the host, which

00:46:17.980 --> 00:46:18.740
is smart, right?

00:46:18.740 --> 00:46:24.080
Like theoretically, an attacker could compromise the tools that you're using to try to track

00:46:24.080 --> 00:46:25.220
down the attacker, right?

00:46:25.220 --> 00:46:30.420
So like in a security like Utopia, Hubble would have nothing that comes from the host.

00:46:30.420 --> 00:46:31.360
It would have all its own stuff.

00:46:31.360 --> 00:46:34.620
It would lock itself down immediately and like, you know, not be modifiable.

00:46:35.280 --> 00:46:40.700
So we've worked to one of the easy ways to serve profiles to Hubble is via Git.

00:46:40.700 --> 00:46:44.680
And we include, apparently I'm still going through puberty.

00:46:44.680 --> 00:46:49.280
We include the Git libraries, you know, the Git Python libraries.

00:46:49.280 --> 00:46:51.220
We can use Git Python or LibGit2.

00:46:51.220 --> 00:46:52.280
We prefer LibGit2.

00:46:52.280 --> 00:46:53.740
And so we actually ship that with Hubble.

00:46:53.740 --> 00:46:57.300
But that also requires Git to be installed on the host.

00:46:57.580 --> 00:47:01.380
And Git is a really easy requirement to source, right?

00:47:01.380 --> 00:47:06.680
Like if you add a dependency for Git, it's almost certain that the host will be able to

00:47:06.680 --> 00:47:08.020
serve that dependency, right?

00:47:08.020 --> 00:47:11.320
Because that's a problem with like something like OS query, which is not necessarily in

00:47:11.320 --> 00:47:12.800
all of the normal repos, right?

00:47:12.800 --> 00:47:15.820
So like, that's harder to assume that it's going to be there.

00:47:15.820 --> 00:47:21.440
But even with stuff like Git, we actually, we semi recently added code into our build process

00:47:21.440 --> 00:47:23.560
to actually just compile Git from source.

00:47:23.780 --> 00:47:27.020
So we don't, we don't even reply, rely on Git on the host, right?

00:47:27.020 --> 00:47:32.040
We compile OS query from source, not because we need it to be newer than what they do, than

00:47:32.040 --> 00:47:33.300
the stuff that they provide.

00:47:33.300 --> 00:47:39.520
But just because we can add some different compile flags that are useful to our like little siloed,

00:47:39.520 --> 00:47:40.600
you know, OS query over here.

00:47:40.600 --> 00:47:44.220
So we compile a bunch of stuff from source as part of our build process.

00:47:44.220 --> 00:47:47.040
But yeah, the big pieces are salt and its dependencies.

00:47:47.040 --> 00:47:52.620
The reason we use salt SSH is because we don't need any of the transport stuff, which is where

00:47:52.620 --> 00:47:55.440
all of the difficulties in sourcing come from.

00:47:55.440 --> 00:48:00.080
Like all of a sudden, when you're sourcing zero MQ and these other things, you're talking about

00:48:00.080 --> 00:48:01.800
C code and binaries, right?

00:48:01.800 --> 00:48:04.320
Like it's not just pure Python and pure Python is easier.

00:48:04.320 --> 00:48:04.660
Right.

00:48:04.660 --> 00:48:08.200
And so we use all this as H because it doesn't have any of those dependencies.

00:48:08.200 --> 00:48:14.760
Volners, we have their, we now package their Python package in with our stuff so you can hit

00:48:14.760 --> 00:48:15.620
their API easily.

00:48:15.620 --> 00:48:17.480
And we package OS query in there.

00:48:17.900 --> 00:48:20.900
And yeah, those are really the biggest pieces that we add.

00:48:20.900 --> 00:48:21.180
Yeah.

00:48:21.180 --> 00:48:21.640
And that's cool.

00:48:21.640 --> 00:48:22.740
It's pretty standalone then.

00:48:22.740 --> 00:48:24.340
It doesn't have a huge list of dependencies.

00:48:24.340 --> 00:48:29.800
You know, you open this whole section by saying, well, there's this trade-off like security

00:48:29.800 --> 00:48:33.380
generally makes usability worse, but you kind of want it.

00:48:33.380 --> 00:48:38.420
I know, but what's surprising is like in your description here, your security considerations,

00:48:38.420 --> 00:48:41.080
like let's just package Git in there, even though it's a pain for us.

00:48:41.080 --> 00:48:43.260
And let's package it in OS query and all that.

00:48:43.260 --> 00:48:45.420
Like that actually makes it easier to deploy and maintain.

00:48:45.540 --> 00:48:46.660
So it's not always true, right?

00:48:46.660 --> 00:48:47.400
You're certainly right.

00:48:47.400 --> 00:48:47.600
Yeah.

00:48:47.600 --> 00:48:49.660
Like, but it does still have trade-offs.

00:48:49.660 --> 00:48:54.140
Like let's, let's be clear because now our package is, you know, 50 megabytes instead

00:48:54.140 --> 00:48:55.180
of five, right?

00:48:55.180 --> 00:48:58.960
Like, so theoretically, if we could use the stuff that's already on the host, like that could

00:48:58.960 --> 00:49:00.600
make our packages smaller and stuff like that.

00:49:00.600 --> 00:49:06.580
But let's face it, it's 2018 and a hundred megabyte package is just not really a big deal

00:49:06.580 --> 00:49:08.920
in general, like in most cases.

00:49:08.920 --> 00:49:09.280
Yeah.

00:49:09.280 --> 00:49:09.600
Yeah.

00:49:09.600 --> 00:49:10.080
What is that?

00:49:10.080 --> 00:49:11.940
Two, three seconds to download on a good connection.

00:49:11.940 --> 00:49:12.600
Yeah.

00:49:12.660 --> 00:49:13.780
It's just, I mean, yeah.

00:49:13.780 --> 00:49:17.220
And, and, you know, usually you're going to rehost these in your data center, you know,

00:49:17.220 --> 00:49:20.020
cause you usually will have mirrors of the repos or whatever.

00:49:20.020 --> 00:49:21.400
And it's just, it's just not a big deal.

00:49:21.400 --> 00:49:21.680
Yeah.

00:49:21.680 --> 00:49:23.920
So it sounds like such a cool project.

00:49:23.920 --> 00:49:28.540
People might be interested in participating, maybe bringing it over into their organization

00:49:28.540 --> 00:49:30.740
or just working on it in general.

00:49:30.740 --> 00:49:32.360
Are you looking for contributors?

00:49:32.360 --> 00:49:35.280
And if so, how, what things like that?

00:49:35.280 --> 00:49:36.080
So we definitely are.

00:49:36.080 --> 00:49:41.420
Our repo is, I'll make sure it's in the show notes, but it's all open source.

00:49:41.520 --> 00:49:42.280
It's all Apache too.

00:49:42.280 --> 00:49:43.300
You can use it.

00:49:43.300 --> 00:49:45.020
You don't have to worry about licensing issues.

00:49:45.020 --> 00:49:46.260
It's not GPL or anything like that.

00:49:46.260 --> 00:49:48.680
And we would love contributors.

00:49:48.680 --> 00:49:54.520
I have been so swamped with like actually doing this at Adobe that I have, I have not been able

00:49:54.520 --> 00:49:57.520
to spend as much time community building as I wish.

00:49:57.520 --> 00:49:57.840
Right.

00:49:57.840 --> 00:50:03.420
I've given a few talks and been on, you know, FOSS weekly earlier this year and now this podcast,

00:50:03.420 --> 00:50:07.360
but like, I'm not great at, you know, doing the social media stuff, the aspect and all those

00:50:07.360 --> 00:50:07.840
different things.

00:50:08.080 --> 00:50:11.500
So I apologize if it doesn't look like stuff's going on, but you can see in the PRs that we

00:50:11.500 --> 00:50:14.440
are actively developing and we would love people to report issues.

00:50:14.440 --> 00:50:17.320
We'd love people to add pull requests and it's all Python.

00:50:17.320 --> 00:50:19.060
It's a little bit salty.

00:50:19.060 --> 00:50:23.620
Like it's a little, there's some salt stuff, salt isms in there, which might put some people

00:50:23.620 --> 00:50:23.880
off.

00:50:23.880 --> 00:50:28.160
But like when you get actually down to like the modules that do the work, it's pretty much

00:50:28.160 --> 00:50:28.840
just straight Python.

00:50:29.220 --> 00:50:30.500
So it can be pretty fun to write.

00:50:30.500 --> 00:50:35.300
And we try to keep some of our issues labeled with like the help wanted good first issues

00:50:35.300 --> 00:50:35.940
labels.

00:50:35.940 --> 00:50:37.280
So that's a good place to start.

00:50:37.280 --> 00:50:43.420
We have a Slack workspace, which you can get to from our, from our homepage, which will also

00:50:43.420 --> 00:50:44.080
be in the show notes.

00:50:44.080 --> 00:50:46.720
And we'd love to see it.

00:50:46.720 --> 00:50:48.740
Like the Slack workspace is the best place.

00:50:48.740 --> 00:50:51.140
How about writing tutorials or something like that?

00:50:51.140 --> 00:50:51.800
Yeah, sure.

00:50:51.800 --> 00:50:52.800
Like documentation.

00:50:53.220 --> 00:50:56.880
I recently did a big overhaul of our documentation, which was way out of date.

00:50:56.880 --> 00:50:59.820
And so it's all hosted on read the docs now.

00:50:59.820 --> 00:51:01.680
And, but obviously that doesn't update itself.

00:51:01.680 --> 00:51:05.800
You know, some of it does if you, if you base it off of the doc strings, but like we'd love

00:51:05.800 --> 00:51:06.360
work there.

00:51:06.360 --> 00:51:09.760
You know, if you, if you get into Hubble and run into issues and you're like, this was

00:51:09.760 --> 00:51:14.060
not clear in the documentation, please submit a PR and let's fix the documentation or at least

00:51:14.060 --> 00:51:14.380
an issue.

00:51:14.380 --> 00:51:17.740
Like I don't even care if you don't want to like submit a PR that's, that takes time if you're

00:51:17.740 --> 00:51:18.420
not set up for it.

00:51:18.420 --> 00:51:21.940
But if you just file an issue and say, Hey, this could be better in this way.

00:51:21.940 --> 00:51:23.500
Like I'll love you forever.

00:51:23.500 --> 00:51:26.240
So yeah, we'd love to have people contribute.

00:51:26.240 --> 00:51:29.260
We'd love to grow the community and make this just like a really good tool.

00:51:29.260 --> 00:51:32.760
And yeah, I'm looking forward to your feedback.

00:51:32.760 --> 00:51:33.300
Sounds good.

00:51:33.300 --> 00:51:39.880
So when I was researching this project, I stumbled upon the Adobe security blog and it looks like

00:51:39.880 --> 00:51:43.060
you guys are actually doing a lot of interesting stuff out in public.

00:51:43.060 --> 00:51:45.880
Do you want to maybe just talk a little bit about that?

00:51:45.880 --> 00:51:51.520
Cause it seems way more open and sort of put together for public consumption than I would

00:51:51.520 --> 00:51:52.000
have expected.

00:51:52.000 --> 00:51:52.580
Yeah.

00:51:52.580 --> 00:51:55.260
Adobe is, is huge.

00:51:55.260 --> 00:51:55.560
Right.

00:51:55.560 --> 00:51:58.720
And, and all of a sudden it was so funny cause we did all this Hubble stuff and we're like

00:51:58.720 --> 00:52:00.120
deploying it everywhere at Adobe.

00:52:00.120 --> 00:52:04.060
And then my, my coworker, Krister, who came up with the idea for Hubble, he's like, Hey,

00:52:04.060 --> 00:52:10.820
the security at Adobe guys want to sponsor, have Hubble stack sponsor scale over in California,

00:52:10.820 --> 00:52:12.800
Southern California Linux expo.

00:52:13.140 --> 00:52:17.200
And they're going to sponsor a booth and give us some materials to take down and stuff like

00:52:17.200 --> 00:52:17.360
that.

00:52:17.360 --> 00:52:19.080
And I was like, we, that's the thing.

00:52:19.080 --> 00:52:23.300
Like we have like a, like a marketing team dedicated to security at Adobe.

00:52:23.300 --> 00:52:24.120
And he's like, yeah, dude.

00:52:24.120 --> 00:52:24.880
And I'm like, okay.

00:52:24.880 --> 00:52:26.500
So like, they've been great.

00:52:26.500 --> 00:52:27.040
That's pretty cool.

00:52:27.200 --> 00:52:30.740
They blogged about Hubble a couple of times and they kind of ping us on their social media

00:52:30.740 --> 00:52:31.360
and stuff like that.

00:52:31.360 --> 00:52:32.640
Open source at Adobe.

00:52:32.640 --> 00:52:34.420
You had a known here about that.

00:52:34.420 --> 00:52:38.760
That was another thing that I was super surprised about because like, I don't think of Adobe as

00:52:38.760 --> 00:52:40.560
an open source, as an open source company.

00:52:40.560 --> 00:52:40.780
Right.

00:52:40.780 --> 00:52:43.820
And it's really been in the last few years that it's really grown.

00:52:43.940 --> 00:52:48.720
We have like an open source committee inside that both goes for like open source into the

00:52:48.720 --> 00:52:52.920
like open, open source to the world, but then also encourages like open source inside of

00:52:52.920 --> 00:52:53.180
Adobe.

00:52:53.180 --> 00:52:53.620
Right.

00:52:53.620 --> 00:52:56.820
Which, you know, sometimes teams make their stuff.

00:52:56.820 --> 00:53:02.520
Like we have our own enterprise GitHub instance and, you know, you might be tempted to make your

00:53:02.520 --> 00:53:04.900
stuff private, even though it's in Adobe only.

00:53:04.900 --> 00:53:06.580
And they're like working, no, make it public.

00:53:06.580 --> 00:53:09.680
Like let's, let's share, let's, you know, collaborate inside of Adobe.

00:53:09.680 --> 00:53:11.260
And, and it's a really cool effort.

00:53:11.380 --> 00:53:16.360
And in fact, we're having our Adobe open source summit internally tomorrow, which will be

00:53:16.360 --> 00:53:16.780
really fun.

00:53:16.780 --> 00:53:20.140
And they like have been helping teams through the legal stuff, you know, cause you have to

00:53:20.140 --> 00:53:23.860
get legal approval to, you know, open source project, make sure that Adobe doesn't want

00:53:23.860 --> 00:53:26.440
to actually, you know, compete in that space, that kind of stuff.

00:53:26.440 --> 00:53:32.720
But anyway, so Adobe does have a, an org that's pretty substantial these days on GitHub.

00:53:32.720 --> 00:53:34.040
So it's github.com/Adobe.

00:53:34.040 --> 00:53:36.600
And you can check out all of our open source stuff there.

00:53:36.600 --> 00:53:39.620
Hubble stack is not on that org because we have multiple repos.

00:53:39.720 --> 00:53:43.260
So it doesn't gel well with having a giant, you know, being part of a giant org.

00:53:43.260 --> 00:53:46.800
If it was one repo, it would be there, but we have our own org.

00:53:46.800 --> 00:53:47.560
So yeah, cool.

00:53:47.560 --> 00:53:48.360
Yeah.

00:53:48.360 --> 00:53:48.540
Yeah.

00:53:48.540 --> 00:53:49.500
I was surprised to see that.

00:53:49.500 --> 00:53:50.460
And it's, it's a good sign.

00:53:50.460 --> 00:53:53.920
So let's close this out with sort of a high level conversation.

00:53:53.920 --> 00:53:59.040
You know, you've been building all the software to defend the servers and sound the alarms when

00:53:59.040 --> 00:53:59.360
needed.

00:53:59.560 --> 00:54:04.640
Are you hopeful about security, cybersecurity stuff in 2018?

00:54:04.640 --> 00:54:05.900
Things get better.

00:54:05.900 --> 00:54:06.500
Are they getting worse?

00:54:06.500 --> 00:54:07.080
What do you think?

00:54:07.080 --> 00:54:08.200
I think they're getting better.

00:54:08.200 --> 00:54:11.620
I mean, it's so hard with all the legacy stuff, right?

00:54:11.620 --> 00:54:15.160
Like that's, that's really where the problems come in is when you have this product that's

00:54:15.160 --> 00:54:19.900
been around for 10 years and rewriting it from scratch is super expensive.

00:54:19.900 --> 00:54:22.860
And that's a hard sell until you actually get owned.

00:54:22.860 --> 00:54:23.160
Right.

00:54:23.160 --> 00:54:25.760
And then it's like, okay, well, this is, this is going away in the year.

00:54:25.760 --> 00:54:25.960
Right.

00:54:25.960 --> 00:54:29.180
And so, you know, I think it's still okay.

00:54:29.180 --> 00:54:34.980
The thing that I probably worry about more is if quantum computing, you know, breaks SSL

00:54:34.980 --> 00:54:35.780
or something like that.

00:54:35.820 --> 00:54:39.360
Like, I think that's probably the bigger risk to like the overall internet.

00:54:39.360 --> 00:54:43.060
Like, cause if you don't have SSL, like, I don't, I don't know what you do at that point.

00:54:43.060 --> 00:54:43.340
Yeah.

00:54:43.340 --> 00:54:44.620
Economies come to a halt.

00:54:44.620 --> 00:54:46.000
I just try not to think about it too much.

00:54:46.000 --> 00:54:47.680
Yeah.

00:54:47.680 --> 00:54:51.840
That's like thinking about the 9.7 magnitude earthquake.

00:54:51.840 --> 00:54:53.400
It's like, well, there's nothing we can do about it.

00:54:53.400 --> 00:54:54.720
So let's just hope that doesn't happen.

00:54:54.720 --> 00:54:55.040
Yeah.

00:54:55.040 --> 00:55:01.000
I feel like I'm not super pessimistic about quantum computing breaking the internet because

00:55:01.000 --> 00:55:05.680
I feel like when that breakthrough happens, it's, there's going to be like one or two

00:55:05.680 --> 00:55:07.780
quantum computers in the world.

00:55:07.780 --> 00:55:12.180
And there's going to be a long time before that becomes something in the hands of standard

00:55:12.180 --> 00:55:12.640
people.

00:55:12.640 --> 00:55:16.080
And maybe by the time it's something in the hands of standard people, we'll have something

00:55:16.080 --> 00:55:20.080
that is, we'll come up with another math problem that will solve that for us.

00:55:20.080 --> 00:55:20.500
You know what I mean?

00:55:20.500 --> 00:55:21.060
Like, you know.

00:55:21.060 --> 00:55:21.520
Yeah, exactly.

00:55:21.520 --> 00:55:25.940
Like TLS three, that's quantum safe, you know, encryption or something like this.

00:55:25.940 --> 00:55:30.860
But yeah, that is, that is a little, a little concerning, but yeah, it's, I'm generally

00:55:30.860 --> 00:55:32.080
hopeful for it, but I don't know.

00:55:32.080 --> 00:55:33.980
I think I would say I'm generally hopeful as well.

00:55:33.980 --> 00:55:35.620
That's just the one thing that like niggles at the back.

00:55:35.620 --> 00:55:35.960
of my mind.

00:55:35.960 --> 00:55:37.400
I'm like, Oh, that would be really bad.

00:55:37.400 --> 00:55:41.900
This is like, this is like apocalypse, you know, fiction level stuff right here.

00:55:41.900 --> 00:55:43.760
But hopefully, yeah, it is.

00:55:43.760 --> 00:55:48.020
I mean, we've had, we've had plenty of those kinds of problems that we've, I don't know

00:55:48.020 --> 00:55:49.080
if we've had problems like that.

00:55:49.080 --> 00:55:50.900
We've been able to weather a lot of things already.

00:55:50.900 --> 00:55:52.840
So I'm not, I'm not super worried about it.

00:55:52.840 --> 00:55:56.780
And I think, I think we'll always have something that we can, that we can add on top and, and

00:55:56.780 --> 00:55:57.800
weather the next storm.

00:55:57.800 --> 00:56:02.280
So it would definitely send people scrambling and it would make the front page of a lot of news.

00:56:02.280 --> 00:56:02.700
Yeah.

00:56:02.700 --> 00:56:03.440
If it happened though.

00:56:03.440 --> 00:56:04.180
Yeah.

00:56:04.420 --> 00:56:04.620
Cool.

00:56:04.620 --> 00:56:04.960
All right.

00:56:04.960 --> 00:56:06.360
Well, I guess we'll leave it there for now.

00:56:06.360 --> 00:56:08.320
We could talk about this last part for a whole nother episode.

00:56:08.320 --> 00:56:08.660
I'm sure.

00:56:09.080 --> 00:56:12.380
So before, before we move on though, let me ask you the final two questions.

00:56:12.380 --> 00:56:15.060
When you write Python code, what editor do you use?

00:56:15.060 --> 00:56:15.580
I use Vim.

00:56:15.580 --> 00:56:20.020
I keep trying to, if I were going to switch to an IDE, it would be PyCharm.

00:56:20.020 --> 00:56:24.020
They have the best Vim integration I've ever, or Vim emulation that I've ever used.

00:56:24.020 --> 00:56:27.780
And they have a lot of other cool tools, but I hate not having it in my terminal.

00:56:27.780 --> 00:56:29.240
So I stick to Vim.

00:56:29.360 --> 00:56:29.500
Yeah.

00:56:29.500 --> 00:56:33.280
I think a lot of people like the, it's just always around everywhere.

00:56:33.280 --> 00:56:35.960
So I'm going to use that, but I hear you about PyCharm.

00:56:35.960 --> 00:56:36.240
Okay.

00:56:36.240 --> 00:56:38.900
And then notable PyPI packages.

00:56:38.900 --> 00:56:42.960
Obviously you could install Hubble from.

00:56:42.960 --> 00:56:43.480
Yeah.

00:56:43.480 --> 00:56:46.900
PyPI, but you're probably better off getting one of the prebuilt binaries, right?

00:56:46.960 --> 00:56:50.420
I definitely recommend using the prebuilt binaries because that way you get OS query, you get all

00:56:50.420 --> 00:56:50.980
these different things.

00:56:50.980 --> 00:56:56.300
I have been lax and like, there's no actual reason that Hubble shouldn't be on PyPI and

00:56:56.300 --> 00:56:57.380
I just haven't done it yet.

00:56:57.380 --> 00:57:00.340
So look for it in the near future, hopefully.

00:57:00.340 --> 00:57:04.320
Cause I just, I just need to do it because it's not that hard, but yeah, technically you

00:57:04.320 --> 00:57:07.120
can source install Hubble without any difficulty.

00:57:07.120 --> 00:57:08.020
So yeah, cool.

00:57:08.020 --> 00:57:12.720
And so another one besides Hubble, I don't have any others off the top of my head and I love

00:57:12.720 --> 00:57:13.200
requests.

00:57:13.200 --> 00:57:15.880
Like I know the whole world loves requests, but it's great.

00:57:16.240 --> 00:57:17.800
Well, Hubble is my, is my main one right now.

00:57:17.800 --> 00:57:20.720
I worked for a long time on SaltStack, which is a pretty good product.

00:57:20.720 --> 00:57:24.920
I don't love some of the directions that the company's going, that backs it, but it is

00:57:24.920 --> 00:57:26.000
open source Apache too.

00:57:26.000 --> 00:57:27.180
So, and it has a great community.

00:57:27.180 --> 00:57:28.740
So, check out SaltStack as well.

00:57:28.740 --> 00:57:29.320
Right on.

00:57:29.320 --> 00:57:30.040
All right.

00:57:30.040 --> 00:57:34.920
So final call action, maybe there's a bunch of companies or organizations out there that

00:57:34.920 --> 00:57:38.720
are nowhere near as organized as you guys are at Adobe.

00:57:38.720 --> 00:57:40.340
They maybe want to start using Hubble.

00:57:40.340 --> 00:57:42.640
They want to start putting some of these practices in place.

00:57:42.640 --> 00:57:43.140
What do you tell them?

00:57:43.140 --> 00:57:45.640
It's never too early to start thinking about security.

00:57:45.640 --> 00:57:47.540
That's, I guess, I guess is where I'd go.

00:57:47.540 --> 00:57:48.720
Like it's expensive.

00:57:48.720 --> 00:57:52.920
I know like to actually start looking at this stuff, you have to like hire security engineers

00:57:52.920 --> 00:57:53.320
and stuff.

00:57:53.320 --> 00:57:55.160
And you know, how do you have the money to do that?

00:57:55.160 --> 00:57:58.400
But if you lose a whole bunch of customer data, it's going to be way more expensive.

00:57:58.400 --> 00:58:03.040
So yeah, think about it early use, you know, the tools are so good these days, you know,

00:58:03.040 --> 00:58:03.820
Hubble stack included.

00:58:03.820 --> 00:58:06.860
I think Hubble is a pretty great tool and it's pretty easy to deploy.

00:58:06.860 --> 00:58:12.600
So there are things you can do from the beginning just to do a baseline thing that will just at

00:58:12.600 --> 00:58:13.260
least give you something.

00:58:13.260 --> 00:58:13.620
Right.

00:58:13.620 --> 00:58:15.240
And so just start.

00:58:15.240 --> 00:58:15.680
That's all.

00:58:15.680 --> 00:58:16.160
Sounds good.

00:58:16.160 --> 00:58:17.180
All right, Colton.

00:58:17.180 --> 00:58:18.080
Thanks for being on the podcast.

00:58:18.080 --> 00:58:18.380
Yep.

00:58:18.380 --> 00:58:19.040
Thanks so much.

00:58:19.040 --> 00:58:19.320
Yep.

00:58:19.320 --> 00:58:19.460
Bye.

00:58:20.560 --> 00:58:23.120
This has been another episode of Talk Python To Me.

00:58:23.120 --> 00:58:27.900
Our guest on this episode was Colton Myers, and it's been brought to you by Linode and Rollbar.

00:58:27.900 --> 00:58:31.700
Linode is bulletproof hosting for whatever you're building with Python.

00:58:31.700 --> 00:58:36.020
Get four months free at talkpython.fm/Linode.

00:58:36.020 --> 00:58:37.820
That's L-I-N-O-D-E.

00:58:37.820 --> 00:58:40.980
Rollbar takes the pain out of errors.

00:58:40.980 --> 00:58:45.420
They give you the context and insight you need to quickly locate and fix errors that might have

00:58:45.420 --> 00:58:47.680
gone unnoticed until your users complained, of course.

00:58:48.280 --> 00:58:53.900
Track a ridiculous number of errors for free as Talk Python To Me listeners at talkpython.fm

00:58:53.900 --> 00:58:54.980
slash Rollbar.

00:58:54.980 --> 00:58:57.220
Want to level up your Python?

00:58:57.220 --> 00:59:02.400
If you're just getting started, try my Python jumpstart by building 10 apps or our brand new

00:59:02.400 --> 00:59:04.260
100 days of code in Python.

00:59:04.260 --> 00:59:08.080
And if you're interested in more than one course, be sure to check out the Everything Bundle.

00:59:08.080 --> 00:59:10.340
It's like a subscription that never expires.

00:59:10.340 --> 00:59:12.520
Be sure to subscribe to the show.

00:59:12.520 --> 00:59:14.720
Open your favorite podcatcher and search for Python.

00:59:14.720 --> 00:59:15.960
We should be right at the top.

00:59:16.340 --> 00:59:21.740
You can also find the iTunes feed at /itunes, Google Play feed at /play, and

00:59:21.740 --> 00:59:25.280
direct RSS feed at /rss on talkpython.fm.

00:59:25.280 --> 00:59:27.140
This is your host, Michael Kennedy.

00:59:27.140 --> 00:59:28.500
Thanks so much for listening.

00:59:28.500 --> 00:59:29.560
I really appreciate it.

00:59:29.560 --> 00:59:31.520
Now get out there and write some Python code.

00:59:35.960 --> 00:59:51.340
I'll see you next time.

00:59:51.340 --> 00:59:52.040
Thank you.

00:59:52.040 --> 01:00:22.020
Thank you.

