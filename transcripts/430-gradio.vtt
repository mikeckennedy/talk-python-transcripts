WEBVTT

00:00:00.120 --> 00:00:06.600
You've got this amazing machine learning model you created, and you want to share it and let your colleagues and users experiment with it on the web.

00:00:06.600 --> 00:00:09.980
How do you get started? Learning Flask or Django?

00:00:09.980 --> 00:00:16.120
Great frameworks, but you might consider Gradio, which is a rapid development UI framework for ML models.

00:00:16.120 --> 00:00:20.120
On this episode, we have Freddie Bolton to introduce us all to Gradio.

00:00:20.120 --> 00:00:24.780
This is Talk Python To Me, episode 430, recorded August 10th, 2023.

00:00:24.780 --> 00:00:40.980
Welcome to Talk Python To Me, a weekly podcast on Python.

00:00:40.980 --> 00:00:42.720
This is your host, Michael Kennedy.

00:00:42.720 --> 00:00:50.200
Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython, both on fosstodon.org.

00:00:50.200 --> 00:00:53.760
Be careful with impersonating accounts on other instances. There are many.

00:00:53.960 --> 00:00:58.840
Keep up with the show and listen to over seven years of past episodes at talkpython.fm.

00:00:58.840 --> 00:01:02.880
We've started streaming most of our episodes live on YouTube.

00:01:02.880 --> 00:01:10.400
Subscribe to our YouTube channel over at talkpython.fm/youtube to get notified about upcoming shows and be part of that episode.

00:01:10.400 --> 00:01:16.900
This episode is brought to you by JetBrains, who encourage you to get work done with PyCharm.

00:01:16.900 --> 00:01:23.800
Download your free trial of PyCharm Professional at talkpython.fm/done dash with dash PyCharm.

00:01:24.560 --> 00:01:26.300
And it's brought to you by Sentry.

00:01:26.300 --> 00:01:28.540
Don't let those errors go unnoticed.

00:01:28.540 --> 00:01:29.560
Use Sentry.

00:01:29.560 --> 00:01:32.400
Get started at talkpython.fm/sentry.

00:01:32.400 --> 00:01:35.160
Brady, welcome to Talk Python To Me.

00:01:35.160 --> 00:01:36.020
Thanks for having me, Michael.

00:01:36.020 --> 00:01:37.420
Yeah, it's great to have you here.

00:01:37.680 --> 00:01:41.840
I think people are going to learn a lot about some machine learning on this episode.

00:01:41.840 --> 00:01:47.240
And you've got this really cool visual way, this visual tool of working with machine learning projects.

00:01:47.240 --> 00:01:55.120
And oftentimes people ask me, I'm not really a web developer, but I have some machine learning stuff or I'm a data scientist and I want to share with people.

00:01:55.120 --> 00:01:55.960
How do I do that?

00:01:56.280 --> 00:01:59.940
So your project might be a good answer to that for some folks, right?

00:01:59.940 --> 00:02:00.640
Yeah, absolutely.

00:02:00.640 --> 00:02:03.660
I think, yeah, Gradio is built for that use case.

00:02:03.660 --> 00:02:11.640
I think you can build like lots of complex stuff with Gradio, web apps and stuff, but you could, it's optimized for the ML use case.

00:02:11.640 --> 00:02:16.400
Like how do you get like an ML workflow, like on the web and share it with people as quickly as possible?

00:02:16.400 --> 00:02:17.720
That's kind of what Gradio is built for.

00:02:17.720 --> 00:02:19.140
I've got it running my computer.

00:02:19.140 --> 00:02:23.520
How do I take it from a notebook to something that other people who are not programmers can use, right?

00:02:23.520 --> 00:02:24.120
Yeah, exactly.

00:02:24.120 --> 00:02:25.080
That's kind of it.

00:02:25.080 --> 00:02:26.620
And it's with Gradio, it's one line.

00:02:26.620 --> 00:02:32.540
You can get a shareable link directly from your Colab notebook, Jupyter notebook, SageMaker, local, whatever.

00:02:32.540 --> 00:02:35.460
Yeah, so it's really easy to share with people.

00:02:35.460 --> 00:02:35.900
Excellent.

00:02:35.900 --> 00:02:38.060
All right, before we dive into that, let's start with you.

00:02:38.060 --> 00:02:42.260
A quick story, quick introduction about you and how you got into programming Python.

00:02:42.260 --> 00:02:42.940
Yeah, absolutely.

00:02:42.940 --> 00:02:50.500
So all the way from the beginning, I graduated with a degree in statistics and my first job was working as a data scientist in Chicago.

00:02:50.500 --> 00:02:54.060
And that was doing more like bread and butter data science-y stuff.

00:02:54.060 --> 00:02:59.540
Like you pull data from like database and like you train a model and then you like try to communicate the results with someone.

00:02:59.540 --> 00:03:05.280
And then at the time, yeah, I mean, it wasn't that long ago, but to me, it feels like it was like a millennia ago.

00:03:05.280 --> 00:03:07.340
Technologically speaking, it's so different.

00:03:07.340 --> 00:03:07.620
Yeah.

00:03:07.800 --> 00:03:09.520
Yeah, it was like a really long time ago.

00:03:09.520 --> 00:03:09.700
Yeah.

00:03:09.700 --> 00:03:15.060
But then basically like what happens or what happened to me a lot was just like, okay, like we need to like, we're training this model.

00:03:15.060 --> 00:03:18.440
Like how do we share, like share with the relevant like stakeholders, right?

00:03:18.440 --> 00:03:21.220
There's like a PM or like someone that's interested in this.

00:03:21.220 --> 00:03:23.080
Like how do you, how do we, how do you make them care?

00:03:23.080 --> 00:03:24.820
And then there really wasn't a good answer.

00:03:24.820 --> 00:03:29.420
Like you would have to like, you'd like compute like some metrics and then try to explain what they mean.

00:03:29.420 --> 00:03:31.180
And you like draw like a bar plot or something.

00:03:31.180 --> 00:03:33.180
And it just wasn't really that useful.

00:03:33.180 --> 00:03:36.720
And I think it really was, to be fair, it was like a skill gap.

00:03:36.720 --> 00:03:40.840
I didn't even know how to build like an interactive website to share with people.

00:03:40.840 --> 00:03:46.060
Because at the end of the day, what really, what people really care about or how to make someone really care about it is they can play with it.

00:03:46.060 --> 00:03:46.260
Right.

00:03:46.320 --> 00:03:51.560
Because if you show them these plots and these metrics, it's like a machine learning model is like very abstract.

00:03:51.560 --> 00:03:52.000
Right.

00:03:52.000 --> 00:03:54.060
It's like just this thing that's somewhere else.

00:03:54.060 --> 00:03:57.980
And then this is like the output of it, but it's not really even like the actual output.

00:03:57.980 --> 00:04:00.560
It's just like some sort of summary statistics of it.

00:04:00.560 --> 00:04:00.780
Right.

00:04:00.780 --> 00:04:06.900
But if you give someone like this is what the model is and you can let them like manually play with the inputs and see how the outputs change.

00:04:06.900 --> 00:04:12.360
They get a sense of, well, like what the model is and how it works and stuff like that.

00:04:12.360 --> 00:04:12.540
Right.

00:04:12.540 --> 00:04:17.020
And I think that's where I learned about this problem and why this problem is important.

00:04:17.020 --> 00:04:24.680
And then ever since then, I've been sort of devoting to devoting myself to working on like open source tools to like make data science like more efficient.

00:04:24.680 --> 00:04:29.400
And like my, my, the latest product that I worked on is called Gradio, which kind of does this.

00:04:29.400 --> 00:04:33.680
It basically lets you turn a machine learning function into a web app in one line of code.

00:04:33.680 --> 00:04:38.380
And from there you can jump off and build like as complex of a web app as you want.

00:04:38.380 --> 00:04:43.100
But from the beginning, you can get up and running with just like basically two lines of code.

00:04:43.100 --> 00:04:43.800
So yeah.

00:04:43.800 --> 00:04:44.160
Excellent.

00:04:44.160 --> 00:04:45.300
A little bit about me.

00:04:45.300 --> 00:04:50.820
You talked about let people play with the machine learning model and you change the inputs and stuff.

00:04:50.900 --> 00:04:58.360
It just completely changes the round trip speed because the alternative might be, I'll make, I'll get you a PDF and you can read the report.

00:04:58.360 --> 00:04:59.840
And then what if we change this?

00:04:59.840 --> 00:05:00.180
All right.

00:05:00.180 --> 00:05:02.280
At tomorrow's meeting, I'll bring the new PDF.

00:05:02.280 --> 00:05:05.220
Just empower people and give them these tools.

00:05:05.220 --> 00:05:13.680
And yet at the same time, data scientists are not web developers, certainly not in the super dynamic front end Ajax callback way of programming.

00:05:13.680 --> 00:05:14.220
Right.

00:05:14.220 --> 00:05:15.800
That's a different skill to be sure.

00:05:16.100 --> 00:05:21.320
And so it's not like their data science skills by default make them able to build these.

00:05:21.320 --> 00:05:23.520
And even if you could, is it a good use of your time?

00:05:23.520 --> 00:05:23.740
Right.

00:05:23.740 --> 00:05:24.380
Yeah, absolutely.

00:05:24.600 --> 00:05:28.900
And yeah, so it's like the PDF report is definitely like one, one way of doing it.

00:05:28.900 --> 00:05:33.960
The other way that we tried to do sometimes is we'll just hand it off to someone and we'll, we'll have them build the web.

00:05:33.960 --> 00:05:34.940
But then that just takes longer.

00:05:34.940 --> 00:05:36.280
You have to like explain everything to them.

00:05:36.280 --> 00:05:36.600
Right.

00:05:36.600 --> 00:05:44.500
I think like the, make it really impactful as if the person who made the model can they themselves, they can just create the web app, the demo, like immediately.

00:05:44.500 --> 00:05:46.900
A lot of these, a lot of data scientists are in Python, right?

00:05:46.900 --> 00:05:51.200
So that kind of means you need like a Python based tool to get you up and running really quickly.

00:05:51.200 --> 00:05:53.760
And a lot of them, yeah, like you said, don't know about web programming.

00:05:53.760 --> 00:05:57.400
So you've got to like abstract that away as much as you can, like as much as it makes sense.

00:05:57.400 --> 00:06:03.840
So that they're not like daunted or it's not like, okay, now I'm like, I'm really good at PyTorch and training or like all these things.

00:06:03.840 --> 00:06:07.300
And like now I need to learn about whatever, like servers and all that stuff.

00:06:07.300 --> 00:06:10.000
It's like, it's like almost a different skill set for a lot of people.

00:06:10.000 --> 00:06:10.820
It really is.

00:06:10.820 --> 00:06:16.900
And the handed off to somebody else, it's also, it's slow, but also it only works for certain situations, right?

00:06:16.900 --> 00:06:22.920
Like a lot of data scientists, I suspect don't have a whole software team supporting them as they need, right?

00:06:22.920 --> 00:06:25.200
They're the sole person at their company.

00:06:25.200 --> 00:06:29.840
So you said you had gone into statistics and found your way over to this side of that world.

00:06:29.840 --> 00:06:39.980
You feel like it's a golden age for statisticians now, because when I went to college, it's like, well, you could be an actuary or you could work at an insurance company.

00:06:39.980 --> 00:06:43.940
Or maybe some other company might be interested in hiring somebody who does stats.

00:06:43.940 --> 00:06:46.760
You could work at the U.S. Bureau of Statistics.

00:06:46.760 --> 00:06:47.660
Yeah, exactly.

00:06:47.660 --> 00:06:53.180
And that was, and now with the kind of blending into data science, there's just so in demand.

00:06:53.180 --> 00:06:55.940
So when it was like, the world is so open for that now.

00:06:55.940 --> 00:06:58.240
It definitely became a much sexier career.

00:06:58.240 --> 00:07:03.720
And I think I got lucky that I got into it like right before, right as it was starting to take off.

00:07:03.720 --> 00:07:07.060
Like at that point, like data science wasn't really like a term yet.

00:07:07.060 --> 00:07:09.540
I'm not that old, but yeah, at that time it wasn't really.

00:07:09.540 --> 00:07:15.480
There were like, I think at that point, like they were called, it's like research scientists was more like the term, right?

00:07:15.480 --> 00:07:18.900
Which still sounds a little bit dry, but then it got rebranded as data science.

00:07:18.900 --> 00:07:19.380
Yeah.

00:07:19.380 --> 00:07:22.740
I mean, I think it's a, I mean, I would say it's always a good time to study statistics.

00:07:22.740 --> 00:07:28.680
I think like a lot of people, if someone were to come back to me and say, I have no idea what I want to major in, but I have some aptitude for math.

00:07:28.680 --> 00:07:29.940
I would say like major in statistics.

00:07:29.940 --> 00:07:31.020
I think it's like really useful.

00:07:31.020 --> 00:07:32.620
It has like a lot of applications.

00:07:32.620 --> 00:07:39.840
But I think now also in terms of tech, I feel like definitely like it's sort of like the, it's the era of the Renaissance person, right?

00:07:39.840 --> 00:07:41.740
Like you have to know a little bit of everything now.

00:07:41.740 --> 00:07:42.160
Like, right.

00:07:42.160 --> 00:07:45.360
Cause it's like stats, programming, math.

00:07:45.360 --> 00:07:48.300
Like all these things are starting to like blend it, blend together.

00:07:48.300 --> 00:07:53.780
And yeah, I think it's like a lot of people I really respect pulled from all these disciplines, like seamlessly.

00:07:53.780 --> 00:07:54.180
Right.

00:07:54.180 --> 00:07:56.820
And I think it's, yeah, I think that's kind of where we are now.

00:07:56.820 --> 00:07:57.100
Yeah.

00:07:57.100 --> 00:07:58.260
It's a super fun time.

00:07:58.260 --> 00:08:04.560
If you're excited about always learning new things and sort of bettering yourself and bringing in this thing and mixing it that way.

00:08:04.560 --> 00:08:07.560
If you'd rather just be done learning, maybe not so much.

00:08:07.560 --> 00:08:08.100
Absolutely.

00:08:08.100 --> 00:08:10.100
Can't just show up for 20 years.

00:08:10.100 --> 00:08:10.980
It'd be okay.

00:08:10.980 --> 00:08:14.200
I guess if you were like maintaining COBOL to code, it would be okay.

00:08:14.280 --> 00:08:18.820
But not in the machine learning space and machine learning also is just crazy.

00:08:18.820 --> 00:08:22.800
We've got large language models just running loose everywhere now.

00:08:22.800 --> 00:08:23.820
What do you think about all that?

00:08:23.820 --> 00:08:26.500
It's definitely like a very exciting time to be alive.

00:08:26.500 --> 00:08:32.500
I think it's pretty crazy that when I got started in ML six years ago, it was, it definitely was like very niche.

00:08:32.500 --> 00:08:32.780
Right.

00:08:32.780 --> 00:08:37.780
And like the tools that people use and like the language about it definitely did not penetrate the mainstream.

00:08:37.780 --> 00:08:43.980
But now it seems like, like the technologies and the algorithms, the models, the datasets are all things that people talk about now.

00:08:43.980 --> 00:08:44.140
Right.

00:08:44.140 --> 00:08:52.960
And I think we've all had an older relative ask us about ChatGPT or like the latest trend or stable diffusion with the image, the AI image generation.

00:08:52.960 --> 00:08:55.460
I think it has penetrated every part of this.

00:08:55.460 --> 00:09:00.120
I think like part of the reason why that is, is one, because like one, like the technology is like way more impressive now.

00:09:00.120 --> 00:09:00.320
Right.

00:09:00.320 --> 00:09:05.700
Like these algorithms are able to do things that were unimaginable, like 2017, right.

00:09:05.700 --> 00:09:06.820
When I graduated college.

00:09:06.820 --> 00:09:10.280
But also it's just, these models are much easier to share and use now.

00:09:10.280 --> 00:09:10.480
Right.

00:09:10.480 --> 00:09:16.160
And I think part of the reason why ChatGPT is so, we took off so quickly, which is like the interface is so intuitive.

00:09:16.160 --> 00:09:16.580
It is.

00:09:16.700 --> 00:09:20.280
We've been chatting with each other for like decades, like over the internet.

00:09:20.280 --> 00:09:20.620
Right.

00:09:20.620 --> 00:09:23.660
And the user interface is so simple and it works.

00:09:23.660 --> 00:09:27.400
So fits our mental model so quickly or so easily.

00:09:27.400 --> 00:09:30.580
But, you know, under the hood, it's like this incredibly complex process.

00:09:30.580 --> 00:09:30.840
Right.

00:09:30.840 --> 00:09:31.440
Right.

00:09:31.440 --> 00:09:31.740
Right.

00:09:31.740 --> 00:09:32.280
Yeah.

00:09:32.280 --> 00:09:32.980
Right.

00:09:32.980 --> 00:09:35.700
And I think that's like where tools like radio come into play.

00:09:35.700 --> 00:09:35.940
Right.

00:09:35.940 --> 00:09:45.280
It's just, there's a bunch of like incredible, like amazing research happening, but unless other people can use it, play with it, evaluate it, like it's almost as if it doesn't exist.

00:09:45.280 --> 00:09:45.520
Right.

00:09:45.520 --> 00:09:52.460
And I think radio really helps you create like a demo, an app that other people can use and play with and evaluate your model.

00:09:52.460 --> 00:09:54.960
And then, and then just like that, anyone can use it.

00:09:54.960 --> 00:09:55.080
Right.

00:09:55.080 --> 00:10:01.680
Like, you don't, you no longer have to be like a technical person and you don't have to like type on some script or something and then go to a website.

00:10:01.680 --> 00:10:01.880
Right.

00:10:01.880 --> 00:10:03.020
You can just go to a website, right.

00:10:03.020 --> 00:10:05.680
You can just send someone a link and then they can play with the state of the art.

00:10:05.680 --> 00:10:06.540
It's pretty, pretty cool.

00:10:06.540 --> 00:10:09.120
Can you control a combo box and a button?

00:10:09.120 --> 00:10:09.460
Yeah.

00:10:09.460 --> 00:10:10.120
Something like that.

00:10:10.120 --> 00:10:10.320
Right.

00:10:10.320 --> 00:10:10.580
Yeah.

00:10:10.580 --> 00:10:11.280
Then you're qualified.

00:10:11.280 --> 00:10:11.920
It's wild.

00:10:11.920 --> 00:10:23.280
One of the things that surprises me is for such insane technology that leverages so many servers to chat to PT and friends, the user interface for it is so mundane.

00:10:23.280 --> 00:10:28.380
I don't mean that as a derogatory term, but it's just like, well, you just talk to it in this text box and it just talks.

00:10:28.500 --> 00:10:32.280
There's not like a crazy new UI where you put on 3D glasses.

00:10:32.280 --> 00:10:34.120
It's just a chat box.

00:10:34.120 --> 00:10:36.000
But what it does is incredible.

00:10:36.000 --> 00:10:38.600
Similar for mid journey and other things.

00:10:38.600 --> 00:10:41.280
You just slash imagine, just chat with it.

00:10:41.280 --> 00:10:47.560
But so there's this sort of weird paradox of this incredible, simple way to interact with it.

00:10:47.560 --> 00:10:52.200
And yet what it does is, I guess it's a natural way to interact with it, which is what's surprising.

00:10:52.440 --> 00:10:52.580
Yeah.

00:10:52.580 --> 00:10:55.980
Part of the reason, I think it's just like the natural language interface.

00:10:55.980 --> 00:10:57.900
I think a lot of people resonate with that.

00:10:57.900 --> 00:10:59.140
I think you don't have to explain that.

00:10:59.140 --> 00:10:59.320
Right.

00:10:59.320 --> 00:11:01.400
Like you just type something and then it'll respond.

00:11:01.400 --> 00:11:01.640
Right.

00:11:01.640 --> 00:11:02.900
Like it won't error.

00:11:02.900 --> 00:11:03.240
Right.

00:11:03.240 --> 00:11:09.720
And I think even like stuff that isn't just purely chat based, I think like stable diffusion, like the web UI.

00:11:09.720 --> 00:11:09.980
Right.

00:11:09.980 --> 00:11:11.660
I think it's, it has a lot of controls.

00:11:11.660 --> 00:11:11.920
Right.

00:11:11.920 --> 00:11:15.200
But at the end of the day, it's like a Photoshop-esque interface.

00:11:15.200 --> 00:11:15.520
Right.

00:11:15.520 --> 00:11:20.200
Where it's like someone who's used to that kind of software, like it's what they expect, right?

00:11:20.200 --> 00:11:28.140
You like upload an image and then you like, you can like get a tool to blur something out and then you can intaint it or outpaint it and stuff like that.

00:11:28.140 --> 00:11:33.720
So I forget who said it, but I think someone, someone said that MLs, it's not really like the product.

00:11:33.720 --> 00:11:35.960
It's like the, like in the background, right?

00:11:35.960 --> 00:11:39.660
Like the most successful ML products, they don't really feel like they're ML.

00:11:39.660 --> 00:11:40.020
Right.

00:11:40.020 --> 00:11:44.320
It's like the MLs, like abstracted away and it just makes your experience like that much better.

00:11:44.320 --> 00:11:44.560
Right.

00:11:44.560 --> 00:11:47.440
And I think that's what all these different tools are showing.

00:11:47.440 --> 00:11:47.920
Amazing.

00:11:47.920 --> 00:11:48.340
All right.

00:11:48.340 --> 00:11:57.640
So let's talk about Gradio and I'm going to ask you just something a little bit funky to kick this off, but let's talk about what just what other apps are like Gradio.

00:11:57.640 --> 00:12:01.420
So things that come to mind for me are like StreamYard, for example.

00:12:01.420 --> 00:12:01.960
Streamlit?

00:12:01.960 --> 00:12:02.800
Sorry, that's what I mean.

00:12:02.800 --> 00:12:03.360
Yeah.

00:12:03.360 --> 00:12:06.180
Stream, I'm reading the words of our app that we're using.

00:12:06.180 --> 00:12:07.680
Streamlit, not StreamYard.

00:12:07.680 --> 00:12:14.440
Streamlit and other, just give people a sense of what are the categories of apps that's in the same space so they can get a mental model for what

00:12:14.440 --> 00:12:14.920
Gradio is.

00:12:14.920 --> 00:12:15.320
For sure.

00:12:15.320 --> 00:12:15.500
Yeah.

00:12:15.500 --> 00:12:17.640
So I think like Streamlit is a good comparison.

00:12:17.640 --> 00:12:22.360
Like Plotly, Dash, I think is also in the same ecosystem.

00:12:22.360 --> 00:12:24.820
Shiny, if I think.

00:12:24.820 --> 00:12:25.460
Yeah.

00:12:25.460 --> 00:12:26.940
I think like the first programming language.

00:12:26.940 --> 00:12:27.160
Yeah.

00:12:27.160 --> 00:12:29.720
I just had Joe on to talk about Shiny for Python.

00:12:29.720 --> 00:12:30.140
Yeah.

00:12:30.220 --> 00:12:30.840
Recently, yeah.

00:12:30.840 --> 00:12:32.680
They're all definitely in the same ecosystem.

00:12:32.680 --> 00:12:39.860
If you go to the Gradio homepage, Gradio.app, you can see some of the apps that you can build with Gradio really quickly.

00:12:39.860 --> 00:12:40.400
Absolutely.

00:12:40.400 --> 00:12:40.920
Yeah.

00:12:40.920 --> 00:12:42.660
But that doesn't necessarily limit.

00:12:42.660 --> 00:12:45.440
Like what you see on the landing page is not all that you can build with Gradio.

00:12:45.520 --> 00:12:53.900
I think those are just like the eye-catching quick examples just because, like I said, like Gradio is built to get these kind of examples up and running really quickly.

00:12:53.900 --> 00:12:56.900
But you can do like lots of complex stuff with Gradio.

00:12:56.900 --> 00:12:57.280
Excellent.

00:12:57.280 --> 00:12:57.560
Yeah.

00:12:57.620 --> 00:12:59.380
So let's dive into it.

00:12:59.380 --> 00:13:02.860
So you've already given a bit of an introduction for us.

00:13:02.860 --> 00:13:08.940
Maybe we could work, just start by discussing how you might take, you've got some different types of problems you can solve on your homepage.

00:13:08.940 --> 00:13:11.380
And it shows you the code, the entire code.

00:13:11.380 --> 00:13:12.120
Yeah.

00:13:12.120 --> 00:13:14.300
Then the UI that comes out of it.

00:13:14.300 --> 00:13:16.740
So maybe you could just talk us through the sketch recognition.

00:13:16.740 --> 00:13:19.240
It's one of the types of UIs you could build here.

00:13:19.240 --> 00:13:23.680
So with the sketch recognition, you just, when you draw, it's definitely a bird I drew there.

00:13:23.680 --> 00:13:24.400
Or a mountain.

00:13:24.400 --> 00:13:24.980
I'm not sure.

00:13:24.980 --> 00:13:25.860
How do you think about Gradio?

00:13:25.940 --> 00:13:29.660
So Gradio is a Python library, right?

00:13:29.660 --> 00:13:32.560
Python is the main language used to interface or to build Gradio apps.

00:13:32.560 --> 00:13:33.500
Pip install Gradio.

00:13:33.500 --> 00:13:33.840
Yeah.

00:13:33.840 --> 00:13:35.160
You pip install Gradio, right?

00:13:35.160 --> 00:13:36.720
And then what does Gradio do?

00:13:36.720 --> 00:13:43.760
At the highest level, Gradio turns a Python function, any Python function into a interactive web app, right?

00:13:43.760 --> 00:13:45.280
So when you think of function, right?

00:13:45.280 --> 00:13:46.980
Function has inputs and outputs.

00:13:46.980 --> 00:13:51.860
So these inputs correspond, these inputs and outputs correspond to things that will be drawn on the page, right?

00:13:51.860 --> 00:13:55.020
And Gradio comes with a standard set of inputs, right?

00:13:55.060 --> 00:14:01.680
There's like text boxes, drop downs, number fields, data frames, plots, anything like that.

00:14:01.680 --> 00:14:04.380
But also like drawing tools like a sketch pad.

00:14:04.380 --> 00:14:09.660
And then the output, it can be any of these other components, but it could also be like a label, right?

00:14:09.660 --> 00:14:11.200
To show like a machine learning prediction.

00:14:11.200 --> 00:14:18.980
So all you need to do is take, write a plain Python function that takes in a drawing and returns a set of probabilities or competences.

00:14:18.980 --> 00:14:24.080
And then Gradio can wrap that in one line of code and turn it into an interactive web app.

00:14:24.080 --> 00:14:27.960
Like we see here, if you're on the YouTube stream, you can see what Michael is doing.

00:14:27.960 --> 00:14:33.580
There's like a sketch pad area and then he can scribble on it and then immediately he'll get a prediction out.

00:14:34.440 --> 00:14:34.680
Yeah.

00:14:34.680 --> 00:14:37.120
Let's see if I can draw an owl, maybe.

00:14:37.120 --> 00:14:37.560
Right.

00:14:37.560 --> 00:14:38.320
So it's like updating.

00:14:38.320 --> 00:14:39.280
Let's see how I do.

00:14:39.280 --> 00:14:39.900
I don't know.

00:14:39.900 --> 00:14:40.100
Yeah.

00:14:40.100 --> 00:14:40.500
Syringe.

00:14:40.500 --> 00:14:42.720
We've got to make the model better, right?

00:14:42.720 --> 00:14:44.460
It could be a cat.

00:14:44.460 --> 00:14:45.620
It definitely could be a cat.

00:14:45.620 --> 00:14:46.860
I can see cat.

00:14:46.860 --> 00:14:47.260
I can see.

00:14:47.260 --> 00:14:48.760
I think I've got to make my drawing better.

00:14:49.100 --> 00:14:53.180
But so the idea is you have a regular function that takes the inputs and outputs.

00:14:53.180 --> 00:14:54.680
There's no UI whatsoever.

00:14:54.680 --> 00:14:57.020
And there's also no reactive programming.

00:14:57.020 --> 00:15:01.100
You're not like hooking events where I redraw and it just reruns, right?

00:15:01.100 --> 00:15:04.020
That's not part of my code I write as a Python person.

00:15:04.020 --> 00:15:04.420
Right.

00:15:04.420 --> 00:15:07.980
And then you just say gr.interface, give it the function.

00:15:07.980 --> 00:15:11.520
And then you say the inputs are, in this case, you say it's just a sketch pad.

00:15:11.520 --> 00:15:16.320
And so I get this UI that I can draw on that I've been attempting to draw an owl on.

00:15:16.320 --> 00:15:17.600
It's probably missing the eyes.

00:15:17.740 --> 00:15:19.060
I think it's the eyes that are missing.

00:15:19.060 --> 00:15:19.580
The latter.

00:15:19.580 --> 00:15:24.880
It's not about testing the underlying model, is it?

00:15:24.880 --> 00:15:26.520
And then you say the outputs in our label.

00:15:26.520 --> 00:15:32.080
Now, a lot of UIs, people might think of label is just a non-interactive piece of text.

00:15:32.080 --> 00:15:34.800
But here, there's more of a machine learning label, right?

00:15:34.800 --> 00:15:39.460
You've got like a cool horizontal bar graph that has percentages and talks about its guesses.

00:15:39.460 --> 00:15:43.560
So it's like a machine learning labeled response report.

00:15:43.560 --> 00:15:47.720
A machine learning person would, when they see label, they think that,

00:15:47.720 --> 00:15:52.300
they don't think of the standard web, like just like a text box, right?

00:15:52.300 --> 00:15:52.520
Yeah.

00:15:52.520 --> 00:15:55.000
Like label four type of thing in HTML.

00:15:55.000 --> 00:15:55.260
Yeah.

00:15:55.260 --> 00:15:55.540
Right.

00:15:55.540 --> 00:15:59.480
So that's one of the things that, or one of the ways that kind of Gradio is built for that

00:15:59.480 --> 00:16:00.320
kind of audience, right?

00:16:00.340 --> 00:16:03.620
It's like the high-level perimedal, match that mental model.

00:16:07.000 --> 00:16:11.340
This portion of Talk Python To Me is brought to you by JetBrains and PyCharm.

00:16:11.340 --> 00:16:16.140
Are you a data scientist or a web developer looking to take your projects to the next level?

00:16:16.140 --> 00:16:18.820
Well, I have the perfect tool for you, PyCharm.

00:16:18.820 --> 00:16:23.900
PyCharm is a powerful integrated development environment that empowers developers and data

00:16:23.900 --> 00:16:28.120
scientists like us to write clean and efficient code with ease.

00:16:28.380 --> 00:16:33.820
Whether you're analyzing complex data sets or building dynamic web applications, PyCharm has

00:16:33.820 --> 00:16:34.460
got you covered.

00:16:34.460 --> 00:16:39.460
With its intuitive interface and robust features, you can boost your productivity and bring your

00:16:39.460 --> 00:16:41.600
ideas to life faster than ever before.

00:16:41.600 --> 00:16:46.400
For data scientists, PyCharm offers seamless integration with popular libraries like NumPy,

00:16:46.400 --> 00:16:47.760
Pandas, and Matplotlib.

00:16:47.760 --> 00:16:53.660
You can explore, visualize, and manipulate data effortlessly, unlocking valuable insights with

00:16:53.660 --> 00:16:54.920
just a few lines of code.

00:16:55.120 --> 00:16:59.560
And for us web developers, PyCharm provides a rich set of tools to streamline your workflow.

00:16:59.560 --> 00:17:04.540
From intelligent code completion to advanced debugging capabilities, PyCharm helps you write

00:17:04.540 --> 00:17:08.560
clean, scalable code that powers stunning web applications.

00:17:08.560 --> 00:17:14.980
Plus, PyCharm's support for popular frameworks like Django, FastAPI, and React make it a breeze

00:17:14.980 --> 00:17:16.840
to build and deploy your web projects.

00:17:16.840 --> 00:17:21.780
It's time to say goodbye to tedious configuration and hello to rapid development.

00:17:21.780 --> 00:17:23.300
But wait, there's more.

00:17:23.780 --> 00:17:28.420
With PyCharm, you get even more advanced features like remote development, database integration,

00:17:28.420 --> 00:17:32.020
and version control, ensuring your projects stay organized and secure.

00:17:32.020 --> 00:17:36.460
So whether you're diving into data science or shaping the future of the web, PyCharm is

00:17:36.460 --> 00:17:37.480
your go-to tool.

00:17:37.480 --> 00:17:39.540
Join me and try PyCharm today.

00:17:39.540 --> 00:17:47.140
Just visit talkpython.fm/done-with-pycharm, links in your show notes, and experience the

00:17:47.140 --> 00:17:50.200
power of PyCharm firsthand for three months free.

00:17:50.200 --> 00:17:51.380
PyCharm.

00:17:51.700 --> 00:17:53.120
It's how I get work done.

00:17:53.120 --> 00:17:58.360
One thing you mentioned earlier is that there's no explicit reactivity that you as a programmer

00:17:58.360 --> 00:17:58.940
have to write.

00:17:58.940 --> 00:18:01.880
That's definitely true in the gr.interface case.

00:18:01.880 --> 00:18:04.720
gr.interface abstracts all that away from you.

00:18:04.720 --> 00:18:06.140
But Gradio also offers...

00:18:06.140 --> 00:18:07.460
So this is your simple case.

00:18:07.460 --> 00:18:09.020
Like, I just want...

00:18:09.020 --> 00:18:12.620
Just run this function with these inputs and outputs, and I want a real basic variant.

00:18:12.620 --> 00:18:12.960
Okay?

00:18:12.960 --> 00:18:18.320
Gradio also offers like a lower-level API where you can explicitly control the layout, right?

00:18:18.320 --> 00:18:19.900
So right now, everything is like side-by-side.

00:18:19.900 --> 00:18:23.140
You can put them horizontally across columns, rows.

00:18:23.140 --> 00:18:24.820
You can add components, right?

00:18:24.840 --> 00:18:30.380
And then you can also be more explicit in saying, okay, when this input changes, run this function,

00:18:30.380 --> 00:18:33.000
and then that will populate this and stuff like that.

00:18:33.000 --> 00:18:34.380
And you can change these things together.

00:18:34.380 --> 00:18:35.060
So...

00:18:35.060 --> 00:18:35.460
It makes sense.

00:18:35.460 --> 00:18:37.380
Maybe it's expensive to...

00:18:37.380 --> 00:18:39.420
It's expensive to generate some portion.

00:18:39.420 --> 00:18:41.120
You want to cache it as much as possible.

00:18:41.120 --> 00:18:41.440
Yeah.

00:18:41.440 --> 00:18:47.260
You just want to have like more control over like exactly what happens when things change,

00:18:47.260 --> 00:18:47.540
right?

00:18:47.540 --> 00:18:48.340
You could...

00:18:48.340 --> 00:18:49.420
Gradio gives you that control.

00:18:49.420 --> 00:18:52.000
But for a lot of use cases, you can get...

00:18:52.000 --> 00:18:53.960
You can get really far with gr.interface.

00:18:53.960 --> 00:18:58.040
And then the other companion piece, which isn't on the landing page because we just released

00:18:58.040 --> 00:19:01.100
it maybe two weeks ago, it's gr.chat interface, right?

00:19:01.100 --> 00:19:02.720
So you could build like a...

00:19:02.720 --> 00:19:02.740
Oh, interesting.

00:19:02.740 --> 00:19:04.160
To an LLM or something.

00:19:04.400 --> 00:19:06.780
Yeah, you could build a chat UI for...

00:19:06.780 --> 00:19:09.780
Yeah, like an LLM just in one line of code.

00:19:09.780 --> 00:19:13.640
And I think I can try to maybe find an example of that real quick.

00:19:13.640 --> 00:19:13.920
Yeah.

00:19:13.920 --> 00:19:19.960
While you're looking, do you offer any guidance or any opinionated stuff on which LLM to choose?

00:19:19.960 --> 00:19:23.860
Or do you just say, it's just a chat interface and you write the code to make it happen?

00:19:23.860 --> 00:19:25.900
You just write the code to...

00:19:25.900 --> 00:19:29.060
Yeah, just given the message, what should the response be?

00:19:29.060 --> 00:19:30.880
And then that's the interface.

00:19:30.880 --> 00:19:31.200
Yeah.

00:19:31.200 --> 00:19:31.800
And then...

00:19:31.800 --> 00:19:33.220
There's some interesting options.

00:19:33.380 --> 00:19:34.600
People might want to pick.

00:19:34.600 --> 00:19:40.420
Obviously, you could pick OpenAI and use their API, but there's things like private GPT, which

00:19:40.420 --> 00:19:44.880
allows you to ask questions about your documents, but 100% private, right?

00:19:44.880 --> 00:19:49.380
You could just give it hundreds of docs and say, learn these and we're going to talk to you

00:19:49.380 --> 00:19:49.760
about it.

00:19:49.760 --> 00:19:51.500
Or something along those lines.

00:19:51.500 --> 00:19:53.400
There's Langchain, right?

00:19:53.400 --> 00:19:53.900
Yeah.

00:19:54.020 --> 00:19:56.940
Which is a pretty interesting option for building these things.

00:19:56.940 --> 00:19:57.460
Llama.

00:19:57.460 --> 00:19:58.880
Like the new Llama 2.

00:19:58.880 --> 00:19:58.980
Yeah.

00:19:58.980 --> 00:19:59.580
The Llama 2.

00:19:59.580 --> 00:20:00.060
Yeah.

00:20:00.060 --> 00:20:04.620
So I think in the chat, I just posted like a radio Llama 2 UI that we can show.

00:20:04.620 --> 00:20:05.740
It's on Hugging Face.

00:20:05.740 --> 00:20:08.960
So I think we can talk about the hosting on Hugging Face as well.

00:20:08.960 --> 00:20:09.280
Okay.

00:20:09.280 --> 00:20:09.580
Yeah.

00:20:09.580 --> 00:20:10.800
So this is the chat UI.

00:20:11.000 --> 00:20:13.460
So if you were to scroll down a little bit...

00:20:13.460 --> 00:20:15.360
UI says chat bot, you can type a message.

00:20:15.360 --> 00:20:15.680
Yeah.

00:20:15.680 --> 00:20:17.120
I'll ask it what the podcast says.

00:20:17.120 --> 00:20:18.300
Hey, I'm here to help you.

00:20:18.300 --> 00:20:22.700
HugPython is a podcast and community dedicated to helping developers improve their skills,

00:20:22.700 --> 00:20:24.480
interviews, and experts in the field.

00:20:24.480 --> 00:20:25.040
That's you, Freddie.

00:20:25.040 --> 00:20:26.480
Resources.

00:20:26.480 --> 00:20:26.880
Yeah.

00:20:26.880 --> 00:20:27.780
What do you want to know?

00:20:27.780 --> 00:20:30.720
Under the hood, this is using Llama 2, 70 billion.

00:20:30.720 --> 00:20:31.820
Nice.

00:20:31.820 --> 00:20:33.700
I can ask you what the latest episode is.

00:20:33.700 --> 00:20:35.300
So it gives me a sense how far back it goes.

00:20:35.300 --> 00:20:36.480
That's about two years old.

00:20:36.480 --> 00:20:36.860
So okay.

00:20:36.860 --> 00:20:37.220
Interesting.

00:20:37.220 --> 00:20:37.720
Very good.

00:20:37.720 --> 00:20:37.860
Yeah.

00:20:37.860 --> 00:20:38.300
Makes sense.

00:20:38.300 --> 00:20:38.720
Oh, wait.

00:20:38.720 --> 00:20:40.500
No, this is...

00:20:40.500 --> 00:20:41.460
I'm not so sure about that.

00:20:41.460 --> 00:20:41.640
That's accurate.

00:20:41.640 --> 00:20:42.520
Yeah.

00:20:42.520 --> 00:20:44.920
I think there's a little bit of a mismatch, but this is really cool.

00:20:44.920 --> 00:20:50.540
So you basically plug in whatever LLM you want to into this and they put the...

00:20:50.540 --> 00:20:52.280
Or you put the Llama 2.

00:20:52.280 --> 00:20:55.260
If you scroll up a little bit in the website, if you...

00:20:55.260 --> 00:20:57.200
Like you see those like three bars?

00:20:57.200 --> 00:20:57.660
Yeah.

00:20:57.660 --> 00:20:58.700
The hamburger deal.

00:20:58.700 --> 00:20:59.200
Oh, no.

00:20:59.200 --> 00:20:59.420
Sorry.

00:20:59.420 --> 00:21:00.260
That's not it.

00:21:00.260 --> 00:21:00.960
Other hamburger.

00:21:00.960 --> 00:21:01.520
Where is it?

00:21:01.520 --> 00:21:02.440
There are three dots maybe?

00:21:02.440 --> 00:21:04.100
Oh, I guess maybe because you don't have an account.

00:21:04.100 --> 00:21:05.020
You can't see the file.

00:21:05.020 --> 00:21:05.420
Oh, yeah.

00:21:05.420 --> 00:21:08.680
If you go to files there, if you go to files, I'm going to app.py.

00:21:08.680 --> 00:21:10.580
This is the source code of the...

00:21:10.580 --> 00:21:11.020
Oh, interesting.

00:21:11.020 --> 00:21:11.380
Okay.

00:21:11.500 --> 00:21:14.960
If you scroll down, the helper text, and then this is the actual prediction function.

00:21:14.960 --> 00:21:16.160
It's about 20 lines of code.

00:21:16.160 --> 00:21:19.140
But if you scroll down, you see the chat interface code.

00:21:19.140 --> 00:21:21.280
With GR blocks as demo?

00:21:21.280 --> 00:21:21.740
Okay.

00:21:21.740 --> 00:21:22.820
The tab, a batch.

00:21:22.820 --> 00:21:23.140
Okay.

00:21:23.280 --> 00:21:28.500
The important thing is that your chat interface is just like a one-line way to create a chatbot.

00:21:28.500 --> 00:21:30.920
It works similarly to the interface case.

00:21:30.920 --> 00:21:31.920
There's just a function.

00:21:31.920 --> 00:21:36.560
In this case, it's an LLM, so it handles like the responding to each user message.

00:21:36.560 --> 00:21:40.540
And then you just call that, and then you can call launch, and then you get a UI.

00:21:40.540 --> 00:21:41.260
Nice.

00:21:41.380 --> 00:21:43.680
You get like a chatbot-esque UI.

00:21:43.680 --> 00:21:46.420
And in this case, it's 100 lines of code.

00:21:46.420 --> 00:21:48.300
But, you know, yeah, pretty simple.

00:21:48.300 --> 00:21:48.880
That is simple.

00:21:48.880 --> 00:21:51.440
And one of the things that's pretty cool here is section.

00:21:51.440 --> 00:21:58.200
You hook it to the type you set up is a streaming type versus the place I type is a batch.

00:21:58.480 --> 00:22:01.860
And then the function you give it is a generator with yield keyword.

00:22:01.860 --> 00:22:05.180
So it just, as you go through it, it makes choices and sends them back.

00:22:05.180 --> 00:22:09.160
Pretty advanced interaction for the UI to be running like that.

00:22:09.160 --> 00:22:09.460
That's cool.

00:22:09.460 --> 00:22:12.260
In order to get streaming, there's no special syntax.

00:22:12.260 --> 00:22:16.560
You can just use the normal Python yield, and then Gradio knows how to feed that iteratively.

00:22:16.560 --> 00:22:20.560
Feed that to the front end, and then you get like this responsive streaming UI.

00:22:20.560 --> 00:22:21.820
That's a really good call out.

00:22:21.820 --> 00:22:27.880
It's just like the, and Gradio tries to use like the core Python syntax and the core Python data types as much as possible.

00:22:28.320 --> 00:22:30.740
Just to make it easy for people to get up and running.

00:22:30.740 --> 00:22:32.940
I just blew through this really quickly here.

00:22:32.940 --> 00:22:37.540
But basically, from what I can tell, is the amount of code here to actually implement this,

00:22:37.540 --> 00:22:42.600
that is not just the details of giving this text, make the LLM do the thing.

00:22:42.600 --> 00:22:43.500
Five lines of code.

00:22:43.500 --> 00:22:44.680
Yeah, definitely true.

00:22:44.680 --> 00:22:48.320
That should make people pretty excited about, hey, I can write five lines of code,

00:22:48.320 --> 00:22:49.720
especially with an example to work from.

00:22:49.720 --> 00:22:50.500
Exactly, yeah.

00:22:50.500 --> 00:22:53.920
So, yeah, definitely we need to get chat interface up in the landing page.

00:22:53.920 --> 00:22:56.920
But, yeah, I think it's super easy to get complex demos running.

00:22:57.620 --> 00:22:59.540
I think it's just a handful of lines of code.

00:22:59.540 --> 00:23:01.000
We mentioned Shiny a little bit.

00:23:01.000 --> 00:23:03.720
Boomyar asks, how does it compare to Shiny?

00:23:03.720 --> 00:23:05.380
How familiar with Shiny can you?

00:23:05.380 --> 00:23:06.800
I'm not super familiar.

00:23:06.800 --> 00:23:08.140
I'm ominously not familiar.

00:23:08.140 --> 00:23:11.460
I'm familiar with Shiny, but not well enough to compare it directly to Gradio either.

00:23:11.460 --> 00:23:17.860
I mean, they live in the same general world of trying to create a UI that you don't have to write web apps for.

00:23:18.240 --> 00:23:20.760
But I don't think they're totally the same, but they're similar.

00:23:20.760 --> 00:23:21.220
Okay.

00:23:21.220 --> 00:23:24.120
So, we talked about setting up pip install.

00:23:24.120 --> 00:23:24.780
That's easy.

00:23:24.780 --> 00:23:27.520
You say you can choose from a variety of interface types.

00:23:27.520 --> 00:23:29.340
These are the widgets that you're talking about, right?

00:23:29.340 --> 00:23:33.100
You could, like, in terms of the inputs and the outputs, we call them components.

00:23:33.100 --> 00:23:34.620
But, yeah, there's...

00:23:34.620 --> 00:23:37.820
If you go to the docs page, we have about 30-something components.

00:23:37.820 --> 00:23:38.420
Wow, okay.

00:23:38.580 --> 00:23:44.780
Yeah, so code, buttons, data frames, plots, files, pretty much, like, you name it.

00:23:44.780 --> 00:23:47.120
And we're adding components all the time.

00:23:47.120 --> 00:23:48.340
And we're also...

00:23:48.340 --> 00:23:51.720
One of the things that we're going to work on is letting the community create their own components.

00:23:51.720 --> 00:23:57.800
So, if you have your own particular demo, your own particular web app, and you want this new component that we don't support, like, how do you...

00:23:57.800 --> 00:24:03.020
We're working to make it easy for you to do that without having to merge something into Gradio upstream, right?

00:24:03.020 --> 00:24:04.240
And then other people can play with it.

00:24:04.240 --> 00:24:05.860
So, we're working on that as well.

00:24:05.860 --> 00:24:09.220
But for the time being, it's, yeah, about these, like, 30-something components.

00:24:09.220 --> 00:24:12.200
And then, yeah, you can mix and match them however you want.

00:24:12.200 --> 00:24:13.480
You've got quite a bit of them.

00:24:13.480 --> 00:24:16.240
Many of them, I suspect, people would imagine.

00:24:16.240 --> 00:24:17.180
So, you've got button.

00:24:17.180 --> 00:24:17.640
Yeah.

00:24:17.640 --> 00:24:18.320
Let's see.

00:24:18.320 --> 00:24:20.280
You've got data frame, which is pretty cool.

00:24:20.280 --> 00:24:22.440
And then gallery image.

00:24:22.440 --> 00:24:23.120
The plots.

00:24:23.120 --> 00:24:24.460
The plots, like the line plot, scatter plot.

00:24:24.460 --> 00:24:25.280
Those are all pretty cool.

00:24:25.280 --> 00:24:27.180
But you've also got things like audio.

00:24:27.180 --> 00:24:28.740
What's the story with audio?

00:24:28.740 --> 00:24:29.780
This is how you...

00:24:29.780 --> 00:24:33.940
Yeah, you can upload, like, an MP3 or a WAV file directly.

00:24:33.940 --> 00:24:34.260
Okay.

00:24:34.260 --> 00:24:35.700
Maybe for a transcript.

00:24:35.700 --> 00:24:37.740
Or a sentiment analysis or something?

00:24:37.740 --> 00:24:38.320
Exactly.

00:24:38.320 --> 00:24:39.200
Like, whisper.

00:24:39.200 --> 00:24:41.920
Essentially, audio to transcription.

00:24:41.920 --> 00:24:44.120
Or also just synthetic audio, right?

00:24:44.120 --> 00:24:45.320
So, there's, like, Bark.

00:24:45.320 --> 00:24:47.340
And there's all these, like, machine learning demos.

00:24:47.340 --> 00:24:49.840
They go text-to-speech, basically.

00:24:49.840 --> 00:24:51.040
And they're really advanced.

00:24:51.040 --> 00:24:52.880
So, if you wanted to display that, right?

00:24:52.880 --> 00:24:55.300
Like, you ingest text, come out with audio.

00:24:55.300 --> 00:24:57.840
Like, you could use, like, an audio output component.

00:24:58.240 --> 00:25:00.240
And then you get, yeah, you get, like, a...

00:25:00.240 --> 00:25:01.720
You can play the audio directly in the browser.

00:25:01.720 --> 00:25:03.380
It's just like an audio tag in HTML.

00:25:03.380 --> 00:25:05.320
Obviously, it does more from the UI, I'm sure.

00:25:05.320 --> 00:25:07.580
But it's to not just...

00:25:07.580 --> 00:25:10.020
I guess you would just do file if you really wanted to drop it in MP3.

00:25:10.020 --> 00:25:14.880
But if you wanted to generate audio and let people see the results, then this audio thing

00:25:14.880 --> 00:25:16.060
would be the way to go.

00:25:16.060 --> 00:25:16.360
Yeah.

00:25:16.360 --> 00:25:17.340
And then you could also...

00:25:17.340 --> 00:25:19.080
The audio could also be, like, the input, right?

00:25:19.080 --> 00:25:20.620
You could just drag it, drop it, you know.

00:25:20.620 --> 00:25:24.240
If you click on that box, it'll let you upload an audio if you have it.

00:25:24.240 --> 00:25:25.020
And then you could...

00:25:25.020 --> 00:25:25.060
Interesting.

00:25:25.060 --> 00:25:26.180
You could play it, right?

00:25:26.180 --> 00:25:26.820
I'm sure I have some audio.

00:25:26.820 --> 00:25:27.240
Yeah.

00:25:27.240 --> 00:25:28.520
I know that I have some.

00:25:28.520 --> 00:25:31.360
But let's see if I can find something to upload here.

00:25:31.360 --> 00:25:32.660
Here, I'll upload a sponsor.

00:25:32.660 --> 00:25:34.640
Here, this is super short.

00:25:34.640 --> 00:25:35.480
So, I can upload.

00:25:35.480 --> 00:25:36.140
Yeah, look at that.

00:25:36.140 --> 00:25:37.280
And it just becomes a player.

00:25:37.280 --> 00:25:37.700
Excellent.

00:25:37.840 --> 00:25:40.080
You can play it and then you can also edit it as well.

00:25:40.080 --> 00:25:41.360
So, you see that little pencil?

00:25:41.360 --> 00:25:41.880
Uh-huh.

00:25:41.880 --> 00:25:43.200
And you could, like, trim it.

00:25:43.200 --> 00:25:45.380
You could do, like, trim it to make it shorter.

00:25:45.380 --> 00:25:45.920
Okay.

00:25:45.920 --> 00:25:46.140
Yeah.

00:25:46.140 --> 00:25:47.120
Very nice.

00:25:47.120 --> 00:25:47.520
Yeah.

00:25:47.520 --> 00:25:47.920
Yeah.

00:25:47.920 --> 00:25:50.040
Lots of cool components like that that we have.

00:25:50.040 --> 00:25:50.500
Yeah.

00:25:50.500 --> 00:25:53.820
All the standard form stuff, like sliders and drop-downs and, yeah.

00:25:53.820 --> 00:25:54.700
Highlighted text.

00:25:54.700 --> 00:25:56.940
And, yeah, so the standard, like, form stuff.

00:25:56.940 --> 00:25:58.120
But then there's also complex...

00:25:58.120 --> 00:26:01.820
Not complex, but more maybe domain-specific ML stuff.

00:26:01.820 --> 00:26:03.320
So, highlighted text, for example.

00:26:03.320 --> 00:26:05.820
Like, really big and, like, part of speech tagging, like NLP.

00:26:05.820 --> 00:26:06.320
Right?

00:26:06.360 --> 00:26:07.800
So, you can get, like, highlighted.

00:26:07.800 --> 00:26:14.340
It's, like, depending on the tag that you apply to each word in the text, you get, like, different coloring and stuff like that.

00:26:14.340 --> 00:26:14.600
Yeah.

00:26:14.600 --> 00:26:16.760
So, it's for MLP, like, Model 3D.

00:26:16.760 --> 00:26:21.700
So, there's a lot of ML demos that come out that you can generate Model 3D assets directly.

00:26:21.980 --> 00:26:24.060
So, this lets you display them, as well.

00:26:24.060 --> 00:26:24.440
So, yeah.

00:26:24.440 --> 00:26:25.900
So, everywhere...

00:26:25.900 --> 00:26:30.080
We have everything from the most kind of basic, general, like, web app stuff.

00:26:30.080 --> 00:26:32.400
Domain-specific machine learning...

00:26:32.400 --> 00:26:32.700
Yeah.

00:26:32.700 --> 00:26:33.600
...components as well.

00:26:33.700 --> 00:26:33.800
Yeah.

00:26:33.800 --> 00:26:35.600
Let's see what else jumps out here.

00:26:35.600 --> 00:26:38.220
We have video as well, which is pretty cool.

00:26:38.220 --> 00:26:38.720
JSON.

00:26:38.720 --> 00:26:39.520
Yeah.

00:26:39.520 --> 00:26:40.940
There's a lot of what you can type in.

00:26:40.940 --> 00:26:45.900
JSON, I guess it probably validates it and auto-formats it, something, rather than just plain text.

00:26:45.900 --> 00:26:46.200
Yeah.

00:26:46.200 --> 00:26:48.640
When you return the JSON, it highlights it for you.

00:26:48.640 --> 00:26:50.640
You can copy it directly as well, so...

00:26:50.640 --> 00:26:50.880
Okay.

00:26:50.880 --> 00:26:57.660
So, when we were talking about the Gradio.interface, it had, well, here's an input and here's an output.

00:26:57.660 --> 00:26:58.240
Floral?

00:26:58.240 --> 00:27:02.100
So, could you have, if I say, there's a sketch pad and a text box?

00:27:02.100 --> 00:27:02.500
Yeah.

00:27:02.500 --> 00:27:06.020
As the input, and then the outputs are, I don't know, three other things?

00:27:06.020 --> 00:27:06.520
Yeah.

00:27:06.520 --> 00:27:06.940
Yeah.

00:27:06.940 --> 00:27:07.960
That's a really good observation.

00:27:07.960 --> 00:27:08.200
Yeah.

00:27:08.200 --> 00:27:12.040
So, you can have more than one input, more than one output, for sure, right?

00:27:12.040 --> 00:27:16.680
So, if you go to the, I think, the time series forecasting demo, I think that one has two inputs, right?

00:27:16.680 --> 00:27:17.180
That's also on the homepage.

00:27:17.180 --> 00:27:17.540
Yeah.

00:27:17.540 --> 00:27:19.280
Also on the homepage, right?

00:27:19.280 --> 00:27:20.780
So, you can pick...

00:27:20.780 --> 00:27:21.060
I see.

00:27:21.060 --> 00:27:22.940
It's like a toy example, like forecasting.

00:27:22.940 --> 00:27:24.960
If I installs, but you could pick...

00:27:24.960 --> 00:27:26.780
Here has two inputs, right?

00:27:26.780 --> 00:27:29.580
Like, the time horizon and the library itself.

00:27:29.580 --> 00:27:31.140
Both of them are dropdowns, right?

00:27:31.140 --> 00:27:34.300
And then when either updates, the plot updates, right?

00:27:34.300 --> 00:27:36.820
So, there's also, like, how you can do plotting in Gradio.

00:27:36.820 --> 00:27:38.620
And then, also, this is interesting.

00:27:38.620 --> 00:27:41.760
This demo is built with the lower-level API.

00:27:41.760 --> 00:27:43.860
You could build it with interface if you wanted to.

00:27:43.860 --> 00:27:46.820
Just as an example, it's built with the lower-level API.

00:27:47.060 --> 00:27:47.160
Yeah.

00:27:47.160 --> 00:27:52.400
So, I guess there's probably a library and time span, two arguments to the function that

00:27:52.400 --> 00:27:52.740
you write.

00:27:52.740 --> 00:27:56.820
And then, just as you interact with these widgets, it just recalls it with whatever the values are.

00:27:56.820 --> 00:27:57.260
Exactly.

00:27:57.260 --> 00:27:59.560
And then, the function itself returns a plot.

00:27:59.560 --> 00:28:01.680
So, in this case, it's a plotly plot, right?

00:28:01.680 --> 00:28:07.840
So, by default, we ship with support for mapplotlib, plotly, bokeh, and altair.

00:28:07.840 --> 00:28:13.180
So, if I would create, like, a mapplotlib object, do all the stuff to it that I would do in a notebook,

00:28:13.180 --> 00:28:17.000
instead of calling show, I just return it from my function, and then it becomes part of the UI?

00:28:17.000 --> 00:28:17.280
Yep.

00:28:17.280 --> 00:28:17.580
Okay.

00:28:17.580 --> 00:28:18.760
Yeah, that seems pretty straightforward.

00:28:18.760 --> 00:28:19.240
Yeah.

00:28:19.300 --> 00:28:22.680
This one happens to be done with profit, a time series library.

00:28:22.680 --> 00:28:26.880
Yeah, you've got integration with a bunch of cool machine learning libraries here as well.

00:28:27.020 --> 00:28:31.260
Yeah, so, the cool thing is, pretty much, if you can write a Python function for it, like, it'll work with Gradio.

00:28:31.260 --> 00:28:37.160
It really doesn't need to be, like, us as the development team don't really need to build that many integrations

00:28:37.160 --> 00:28:39.940
to get anything that you're working with to work with Gradio.

00:28:39.940 --> 00:28:45.700
Pretty much, if you can call a Reddip Python function to do it, and we have supported output types and stuff like that,

00:28:45.700 --> 00:28:47.280
you can display it with Gradio.

00:28:47.280 --> 00:28:47.600
Nice.

00:28:47.600 --> 00:28:47.860
Yeah.

00:28:47.860 --> 00:28:52.460
So, yeah, there's a couple of demos, for example, like, connecting to, like, databases and stuff.

00:28:52.460 --> 00:28:54.360
You can connect to S3 if you wanted to, right?

00:28:54.360 --> 00:28:55.020
Like, you're not...

00:28:55.020 --> 00:28:55.640
Oh, interesting.

00:28:55.940 --> 00:28:57.600
I don't know exactly where they are now, but yeah.

00:28:57.600 --> 00:28:58.380
It's got to be one.

00:28:58.380 --> 00:28:59.060
Yeah.

00:28:59.060 --> 00:29:00.740
This looks like it might be one, potentially.

00:29:00.740 --> 00:29:01.360
Yeah.

00:29:01.360 --> 00:29:03.200
I'll click, I'll find some S3 stuff.

00:29:03.200 --> 00:29:04.700
Here's, there's got to be someone here somewhere.

00:29:04.700 --> 00:29:05.500
Yeah, very cool.

00:29:05.500 --> 00:29:11.140
So, one of the things people may be wondering, and the fact that I don't see a pricing up at the top,

00:29:11.140 --> 00:29:12.620
it might be a big hint here.

00:29:12.620 --> 00:29:14.260
What's the business model?

00:29:14.260 --> 00:29:15.640
What's the story with this?

00:29:15.640 --> 00:29:17.360
Is this just straight open source?

00:29:17.360 --> 00:29:18.780
Is it open core?

00:29:18.780 --> 00:29:20.660
What's the story around your project here?

00:29:20.660 --> 00:29:24.860
Gradio is completely open source, and you can host it anywhere, so you're not tied into

00:29:24.860 --> 00:29:26.400
any platform.

00:29:26.400 --> 00:29:30.600
Gradio did get acquired by Hugging Face maybe, like, almost two years ago, right?

00:29:30.600 --> 00:29:35.860
So, Gradio integrates really tightly with the Hugging Face ecosystem, but...

00:29:35.860 --> 00:29:36.600
Okay, I see.

00:29:36.720 --> 00:29:39.160
Those integrations are normally free, right?

00:29:39.160 --> 00:29:42.460
So, for example, you could host Gradio demos on...

00:29:42.460 --> 00:29:44.220
On Hugging Face spaces or something?

00:29:44.220 --> 00:29:44.560
Yeah.

00:29:44.560 --> 00:29:46.260
On Hugging Face spaces, right?

00:29:46.260 --> 00:29:50.800
And then if your demo needs special, like, hardware or stuff like that, like, you could pay

00:29:50.800 --> 00:29:52.280
Hugging Face to provision that for you.

00:29:52.280 --> 00:29:52.540
Sure.

00:29:52.680 --> 00:29:54.480
But you're not paying for the Gradio.

00:29:54.480 --> 00:29:57.120
You could use whatever you want on Hugging Face spaces now, right?

00:29:57.120 --> 00:29:58.360
It doesn't have the Gradio.

00:29:58.360 --> 00:29:58.760
Yeah, yeah.

00:29:58.760 --> 00:29:59.720
So it's freely available.

00:29:59.860 --> 00:30:05.460
So it's completely open source with kind of a Gradio as a service via Hugging Face.

00:30:05.460 --> 00:30:06.180
Hugging Face.

00:30:06.180 --> 00:30:06.980
Hugging Face, yeah.

00:30:06.980 --> 00:30:07.320
Yeah.

00:30:07.320 --> 00:30:08.280
On their spaces.

00:30:08.280 --> 00:30:10.040
Say that fast a bunch of times.

00:30:10.040 --> 00:30:11.500
So, yeah, really cool.

00:30:11.500 --> 00:30:15.220
One of the things people might not know if they haven't heard of Gradio before is you go to

00:30:15.220 --> 00:30:17.300
your GitHub repo for it.

00:30:17.300 --> 00:30:19.480
Almost 21,000 GitHub stars.

00:30:19.480 --> 00:30:22.280
A serious bit of attention that it's gotten.

00:30:22.280 --> 00:30:26.480
We've seen a lot of growth in the last, yeah, about year and a half, like, ever since the

00:30:26.480 --> 00:30:27.380
Hugging Face acquisition.

00:30:27.380 --> 00:30:31.100
That's really helped us put the library in front of a new audience.

00:30:31.100 --> 00:30:31.460
Yeah.

00:30:31.460 --> 00:30:36.160
The recent advances in ML, like, a lot of people want to build demos for ML models now, right?

00:30:36.160 --> 00:30:38.060
So I think that's definitely helping Gradio as well.

00:30:38.060 --> 00:30:38.360
Yeah.

00:30:38.360 --> 00:30:40.840
Trying to give people a sense of scale.

00:30:40.840 --> 00:30:43.540
This is, like, third of FastAPI, third of Fast.

00:30:43.540 --> 00:30:45.320
It's, like, that's a lot of people using this.

00:30:45.320 --> 00:30:49.700
So the reason I'm bringing that up is it's not some brand new thing that you came up with

00:30:49.700 --> 00:30:52.480
that maybe people could try, but it's got a lot of users, right?

00:30:52.480 --> 00:30:57.100
Month to month, we're seeing, like, hundreds of thousands of people building these Gradio

00:30:57.100 --> 00:30:58.200
demos repeatedly.

00:30:58.200 --> 00:30:59.640
So, yeah, definitely a lot of growth.

00:30:59.640 --> 00:31:01.920
And, yeah, Gradio is about five years old now, so it's not.

00:31:01.920 --> 00:31:02.280
Awesome.

00:31:02.280 --> 00:31:02.780
Congrats.

00:31:02.780 --> 00:31:03.820
That's really cool.

00:31:03.820 --> 00:31:04.420
That's nothing new.

00:31:04.420 --> 00:31:07.160
Yeah, 3.9, almost 4 million monthly downloads.

00:31:07.160 --> 00:31:08.120
That's a decent chunk.

00:31:08.120 --> 00:31:12.740
This portion of Talk Python To Me is brought to you by Sentry.

00:31:12.740 --> 00:31:16.960
You know that Sentry captures the errors that would otherwise go unnoticed.

00:31:16.960 --> 00:31:21.340
Of course, they have incredible support for basically any Python framework.

00:31:21.340 --> 00:31:28.140
They have direct integrations with Flask, Django, FastAPI, and even things like AWS Lambda and

00:31:28.140 --> 00:31:28.600
Celery.

00:31:28.600 --> 00:31:32.760
But did you know they also have native integrations with mobile app frameworks?

00:31:32.760 --> 00:31:38.220
Whether you're building an Android or iOS app, or both, you can gain complete visibility

00:31:38.220 --> 00:31:43.100
into your application's correctness, both on the mobile side and server side.

00:31:43.100 --> 00:31:49.300
We just completely rewrote Talk Python's mobile apps for taking our courses, and we massively

00:31:49.300 --> 00:31:52.660
benefited from having Sentry integration right from the start.

00:31:52.660 --> 00:31:58.340
We used Flutter for our native mobile framework, and with Sentry, it was literally just two lines

00:31:58.340 --> 00:32:01.360
of code to start capturing errors as soon as they happen.

00:32:01.900 --> 00:32:05.320
Of course, we don't love errors, but we do love making our users happy.

00:32:05.320 --> 00:32:11.420
Solving problems as soon as possible with Sentry on the mobile Flutter code and the Python server

00:32:11.420 --> 00:32:15.240
side code together made understanding error reports a breeze.

00:32:15.240 --> 00:32:21.620
So whether you're building Python server side apps, or mobile apps, or both, give Sentry a

00:32:21.620 --> 00:32:24.720
try to get a complete view of your app's correctness.

00:32:25.080 --> 00:32:29.600
Thank you to Sentry for sponsoring the show and helping us ship more reliable mobile apps

00:32:29.600 --> 00:32:30.420
to all of you.

00:32:30.420 --> 00:32:34.860
What do we think about, I don't want to do an imaging one.

00:32:34.860 --> 00:32:38.920
You can do other demos you've got here, you've got time series forecasting, we talked about that

00:32:38.920 --> 00:32:40.220
as the multiple inputs.

00:32:40.220 --> 00:32:40.560
Yeah.

00:32:40.560 --> 00:32:43.080
XGBoost with explainability.

00:32:43.080 --> 00:32:44.680
Want to tell us about this a little bit?

00:32:44.880 --> 00:32:45.040
Yeah.

00:32:45.040 --> 00:32:48.300
This one also, I think, has like, this one has 12 inputs, right?

00:32:48.300 --> 00:32:52.700
And the idea is it's one of these like kind of Kaggle-esque things where you like predict

00:32:52.700 --> 00:32:55.820
income based on a slew of predictors, right?

00:32:55.820 --> 00:33:00.940
And then the cool thing is that this isn't explicitly built into Gradio, or yeah, this isn't explicitly

00:33:00.940 --> 00:33:03.740
built into Gradio, but you could hook into SHAP really easily, right?

00:33:03.740 --> 00:33:08.700
So if you hit explain, it'll try to explain the prediction of the model and display it in a

00:33:08.700 --> 00:33:09.260
plot for you.

00:33:09.260 --> 00:33:09.620
Wow.

00:33:09.620 --> 00:33:09.980
Okay.

00:33:09.980 --> 00:33:10.340
Right.

00:33:10.340 --> 00:33:14.700
So for those of you who don't know, SHAP is like this algorithm for explaining the predictions

00:33:14.700 --> 00:33:15.840
of any machine learning model.

00:33:15.840 --> 00:33:16.180
I see.

00:33:16.180 --> 00:33:18.160
It's hooking into XGBoost, right?

00:33:18.160 --> 00:33:21.940
But there isn't like an explicit, in this demo, there isn't like an explicit Gradio feature

00:33:21.940 --> 00:33:22.700
that's being used.

00:33:22.700 --> 00:33:27.100
It's just calling SHAP directly from this Python function and then displaying the results as

00:33:27.100 --> 00:33:27.760
a plot.

00:33:27.760 --> 00:33:30.700
The thing it does is it's got a bunch of different sliders and dropdowns.

00:33:30.700 --> 00:33:36.820
It says given an age, your education level, years of school, whether you're married or not,

00:33:36.820 --> 00:33:42.000
all those male, female, how many hours a week you work, and then it predicts, what is

00:33:42.000 --> 00:33:42.140
this?

00:33:42.140 --> 00:33:42.680
Yeah.

00:33:42.680 --> 00:33:44.520
Predicts your yearly income.

00:33:44.520 --> 00:33:48.880
And then the thing you're talking about is with that model, you can ask it, okay, well,

00:33:48.880 --> 00:33:52.860
of all these different things we could put into it, what features, what aspects of that

00:33:52.860 --> 00:33:54.900
are more important and what are less important, right?

00:33:54.900 --> 00:33:55.260
Right.

00:33:55.260 --> 00:33:55.660
Okay.

00:33:55.660 --> 00:34:00.940
The use case is like, let's say like you are a data scientist that was charged with building

00:34:00.940 --> 00:34:01.780
this kind of model.

00:34:01.780 --> 00:34:05.500
The first question after someone seeing the prediction is someone might have is like, why?

00:34:05.500 --> 00:34:06.860
Like, why is it predicting this?

00:34:06.860 --> 00:34:07.060
Right.

00:34:07.100 --> 00:34:12.440
And then you ideally want to be able to explain exactly what element of the predictors contributed

00:34:12.440 --> 00:34:13.500
to the prediction the most.

00:34:13.500 --> 00:34:15.860
And there's a lot of tools that you can use for that.

00:34:15.860 --> 00:34:16.040
Right.

00:34:16.040 --> 00:34:19.160
Shab is, I think, the most well-known to my understanding.

00:34:19.160 --> 00:34:20.740
And then, yeah.

00:34:20.740 --> 00:34:24.520
And then you can just with Gradio really easily just call that algorithm and then just display

00:34:24.520 --> 00:34:25.380
it in a plot.

00:34:25.380 --> 00:34:25.600
Right.

00:34:25.600 --> 00:34:29.140
And then in this example, like one of the inputs is like the capital gain.

00:34:29.140 --> 00:34:30.800
So like how much you make on your investments.

00:34:30.800 --> 00:34:31.360
Right.

00:34:31.360 --> 00:34:34.480
So, and I think in this particular case, like the capital gain is like really big.

00:34:34.480 --> 00:34:34.700
Right.

00:34:34.700 --> 00:34:38.940
So obviously because the capital gain is so big in this particular case, we predict that

00:34:38.940 --> 00:34:40.420
the income will be really big.

00:34:40.420 --> 00:34:40.580
Right.

00:34:40.580 --> 00:34:43.880
Because capital gain is pretty much synonymous with income really.

00:34:43.880 --> 00:34:44.520
So yeah.

00:34:44.520 --> 00:34:44.760
Yeah.

00:34:44.760 --> 00:34:45.980
So that's what this is showing.

00:34:45.980 --> 00:34:46.200
Yeah.

00:34:46.200 --> 00:34:48.760
And I suspect this is important for a lot of reasons.

00:34:48.760 --> 00:34:53.460
If you're building this for your company or for some kind of project, people want to know,

00:34:53.460 --> 00:34:55.080
well, we have all these different inputs.

00:34:55.220 --> 00:34:57.300
what ones actually matter to making a prediction.

00:34:57.300 --> 00:35:00.060
Maybe only the top three are the ones that really matter.

00:35:00.060 --> 00:35:02.260
And you can throw out things like marital status.

00:35:02.260 --> 00:35:04.680
Like it actually doesn't make much of a difference.

00:35:04.680 --> 00:35:04.940
Right.

00:35:04.940 --> 00:35:09.780
Or if you're a policy person and you're this model actually matches real data, you could

00:35:09.780 --> 00:35:13.700
say, well, we're trying to improve the policy for a certain group of people.

00:35:13.700 --> 00:35:18.340
We could focus on any of these aspects, which one or two would make the biggest return for

00:35:18.340 --> 00:35:19.900
our effort to make a change.

00:35:19.900 --> 00:35:20.160
Right.

00:35:20.160 --> 00:35:22.420
There's a lot of cool stuff that comes out of this, I think.

00:35:22.420 --> 00:35:24.840
And then you as a developer,

00:35:24.840 --> 00:35:27.260
I think it's like the data scientist.

00:35:27.260 --> 00:35:27.520
Right.

00:35:27.520 --> 00:35:29.160
It's really easy to make this kind of thing.

00:35:29.160 --> 00:35:29.340
Right.

00:35:29.340 --> 00:35:31.380
This is like a GR.interface, I believe.

00:35:31.380 --> 00:35:31.760
Right.

00:35:31.760 --> 00:35:34.780
So this is just one line of code to build this.

00:35:34.780 --> 00:35:36.000
So yeah, that's OK.

00:35:36.000 --> 00:35:37.160
Not GR.interfaces.

00:35:37.160 --> 00:35:40.500
The other API that we can talk about now is called blocks.

00:35:40.500 --> 00:35:40.860
Yeah.

00:35:40.860 --> 00:35:41.540
Tell us about that.

00:35:41.540 --> 00:35:42.620
It's it's cool.

00:35:42.620 --> 00:35:42.980
Yeah.

00:35:42.980 --> 00:35:46.360
The way that it works is that you declaratively define your UI.

00:35:46.360 --> 00:35:46.640
Right.

00:35:46.640 --> 00:35:50.680
So it's like this input is going to go in this column and say, well, this input is like

00:35:50.680 --> 00:35:51.800
a dropdown, for example.

00:35:51.800 --> 00:35:52.060
Right.

00:35:52.060 --> 00:35:56.720
So in this example, there's lots of dropdown components, lots of sliders for the age and

00:35:56.720 --> 00:35:57.600
stuff like that.

00:35:57.600 --> 00:36:02.300
And then you define all these components and then you can define the reactivity separately.

00:36:02.440 --> 00:36:05.220
So if you were to scroll down, there should be like a button dot click.

00:36:05.220 --> 00:36:05.460
Right.

00:36:05.460 --> 00:36:07.720
So whenever the predict button gets clicked.

00:36:07.720 --> 00:36:08.220
Yeah.

00:36:08.220 --> 00:36:12.380
So you call this function with these inputs and then return this one thing.

00:36:12.380 --> 00:36:12.720
Yeah.

00:36:12.720 --> 00:36:14.120
So that's like the model.

00:36:14.120 --> 00:36:14.380
Right.

00:36:14.380 --> 00:36:17.780
Like right now, it looks like a lot of code just because there's a lot of like inputs and

00:36:17.780 --> 00:36:18.000
stuff.

00:36:18.000 --> 00:36:19.820
But at the end of the day, it's like pretty simple.

00:36:19.820 --> 00:36:24.020
You're just defining a UI and then you define like what happens when and then Gradio handles

00:36:24.020 --> 00:36:24.440
the rest.

00:36:24.440 --> 00:36:24.760
Yeah.

00:36:24.760 --> 00:36:25.740
It's pretty straightforward.

00:36:25.740 --> 00:36:26.880
So people listen.

00:36:26.880 --> 00:36:32.380
Basically, the UI for the more advanced version is you use context managers, create width blocks.

00:36:32.660 --> 00:36:37.380
So then you'd say, here's something that goes across and with another row, put some columns

00:36:37.380 --> 00:36:38.440
in there with another row.

00:36:38.440 --> 00:36:40.100
And then that's how you build it up.

00:36:40.100 --> 00:36:41.020
So it's pretty straightforward.

00:36:41.020 --> 00:36:44.600
What it reminds me of a little bit is it reminds me a little of Flutter.

00:36:44.600 --> 00:36:47.140
Are you familiar with how Flutter looks?

00:36:47.140 --> 00:36:47.520
No.

00:36:47.520 --> 00:36:50.680
And the code it's, I don't know if I can find a quick example.

00:36:50.680 --> 00:36:52.200
How about an example Flutter?

00:36:52.200 --> 00:36:52.760
Come on.

00:36:52.760 --> 00:36:54.800
It's really sort of hierarchical.

00:36:54.800 --> 00:37:01.860
So that the thing that I think is interesting is the code hierarchy matches the sort of UI hierarchy,

00:37:01.860 --> 00:37:02.280
right?

00:37:02.320 --> 00:37:06.500
So it's a code driven UI where as it gets more indented, that talks about, okay, well,

00:37:06.500 --> 00:37:09.040
that's a row or then you pop off and stuff.

00:37:09.040 --> 00:37:13.340
And they've got, it's real similar in that sense that all right there in the code, there's

00:37:13.340 --> 00:37:16.340
not a designer or a markup language or something like that.

00:37:16.340 --> 00:37:17.620
But yeah, pretty cool.

00:37:17.620 --> 00:37:17.900
Yeah.

00:37:17.900 --> 00:37:20.000
So like the UI is all declarative, right?

00:37:20.000 --> 00:37:22.720
So yeah, like you said, you just say this is this row.

00:37:22.720 --> 00:37:26.600
And then, yeah, there's ways to control like the relative width of each of these columns,

00:37:26.600 --> 00:37:27.100
for example.

00:37:27.100 --> 00:37:29.180
So if you wanted that, you could.

00:37:29.180 --> 00:37:29.620
And then.

00:37:29.900 --> 00:37:32.940
Another thing I saw, I can't remember which demo it is, so I'm not going to pull it up,

00:37:32.940 --> 00:37:37.760
but I saw that there's a way to pass like CSS and styling over as well.

00:37:37.760 --> 00:37:38.340
Is that right?

00:37:38.340 --> 00:37:39.620
That was maybe the very first thing.

00:37:39.620 --> 00:37:43.060
There's a Python API for like defining the theme, right?

00:37:43.060 --> 00:37:48.340
So like every UI element has certain CSS variables and you can control their value via like the

00:37:48.340 --> 00:37:51.740
values of this Python class that you then pass to your Gradio instance.

00:37:51.740 --> 00:37:56.240
But at the same time, there's like a top level CSS parameter that you could do whatever you

00:37:56.240 --> 00:37:56.860
want in that case.

00:37:56.860 --> 00:37:58.420
You don't have to use like the Python API.

00:37:58.420 --> 00:38:02.760
If you don't want to, if there's something different that you want to change, you can change

00:38:02.760 --> 00:38:04.400
the CSS variables.

00:38:04.400 --> 00:38:06.600
You're saying I could do something in Python.

00:38:06.600 --> 00:38:12.120
I could say, well, the style is button order width is three and the color of the borders

00:38:12.120 --> 00:38:12.840
is blue.

00:38:12.840 --> 00:38:17.140
But if I just want to have arbitrary CSS, I can just go, here's your arbitrary CSS string.

00:38:17.140 --> 00:38:17.680
Go with that.

00:38:17.680 --> 00:38:22.280
You could pass it a file and then it'll, we'll read that file and use that CSS in the demo.

00:38:22.280 --> 00:38:22.640
Yeah.

00:38:22.720 --> 00:38:27.440
And then with that, you can also add IDs to each of the UI elements and then you could

00:38:27.440 --> 00:38:30.020
write your CSS to target the IDs that you add, right?

00:38:30.020 --> 00:38:32.260
So let's say you only wanted to modify like one button.

00:38:32.260 --> 00:38:33.420
You could do it that way.

00:38:33.420 --> 00:38:33.640
Right.

00:38:33.640 --> 00:38:35.600
You just want to control one of the plots or something.

00:38:35.600 --> 00:38:40.640
I guess if you're writing arbitrary code to return things like matplotlib plots, do things

00:38:40.640 --> 00:38:43.420
like the XKCD matplotlib.

00:38:43.420 --> 00:38:44.220
Oh yeah, for sure.

00:38:44.220 --> 00:38:44.540
Right?

00:38:44.540 --> 00:38:45.560
Like you could control.

00:38:45.560 --> 00:38:45.920
Yeah.

00:38:45.920 --> 00:38:47.740
Joking, but it's also awesome.

00:38:47.740 --> 00:38:50.280
There's an XKCD Gradio theme, right?

00:38:50.280 --> 00:38:52.100
So let me show you this.

00:38:52.100 --> 00:38:52.920
There is?

00:38:52.920 --> 00:38:53.400
Yes.

00:38:53.400 --> 00:38:53.800
Okay.

00:38:53.800 --> 00:38:55.180
That takes it to another level.

00:38:55.180 --> 00:38:56.160
That's pretty excellent.

00:38:56.160 --> 00:38:59.220
That's the cool thing about the theming is that it's shareable, right?

00:38:59.220 --> 00:39:02.260
So someone built this XKCD theme.

00:39:02.260 --> 00:39:02.720
Wow.

00:39:02.720 --> 00:39:03.400
It's amazing.

00:39:03.400 --> 00:39:05.840
Anyone can use this in their Gradio demo, right?

00:39:05.840 --> 00:39:09.920
All you have to do is pass theme equals gstaff slash XKCD.

00:39:09.920 --> 00:39:12.100
And then your demo will look like the XKCD theme.

00:39:12.100 --> 00:39:13.120
It's so good.

00:39:13.120 --> 00:39:13.720
I love it.

00:39:13.720 --> 00:39:14.660
Oh my gosh.

00:39:14.660 --> 00:39:15.400
This is.

00:39:15.400 --> 00:39:15.740
Yeah.

00:39:15.740 --> 00:39:18.200
Completely community driven.

00:39:18.200 --> 00:39:18.520
Yeah.

00:39:18.520 --> 00:39:19.700
Well done to whoever did this one.

00:39:19.780 --> 00:39:20.440
That's really cool.

00:39:20.440 --> 00:39:21.780
It goes beyond the plot, right?

00:39:21.780 --> 00:39:26.340
You can for sure return a plot in the XKCD theme, but you could also have the whole demo in the

00:39:26.340 --> 00:39:27.160
XKCD theme.

00:39:27.160 --> 00:39:32.200
I often pull this example up, this theme, this XKCD thing for Matplotlib because it's fun.

00:39:32.200 --> 00:39:37.440
But also I think there's genuine value in putting together something that looks like this.

00:39:37.540 --> 00:39:44.100
Because if you show this to decision makers, bosses, managers, types, and they see that they look

00:39:44.100 --> 00:39:47.800
at something that looks like it's working and they're like, oh, well, we're done then.

00:39:47.800 --> 00:39:49.420
No, we have two months more work.

00:39:49.420 --> 00:39:50.200
We're not done.

00:39:50.200 --> 00:39:52.060
But I click the button and it's giving me answers.

00:39:52.060 --> 00:39:53.440
We're really not done.

00:39:53.740 --> 00:39:55.120
But it's not scalable.

00:39:55.120 --> 00:39:55.660
It's not this.

00:39:55.660 --> 00:39:56.380
It's not that, right?

00:39:56.380 --> 00:39:57.280
It's only an estimate.

00:39:57.280 --> 00:39:59.220
Just an XKCD front end on it.

00:39:59.220 --> 00:40:00.700
You're like, look, you see it's not done.

00:40:00.700 --> 00:40:02.340
It's just, it's got squiggly lines.

00:40:02.340 --> 00:40:03.100
It's hand-drawn.

00:40:03.100 --> 00:40:04.520
It's clearly a prototype.

00:40:04.520 --> 00:40:05.300
Like, oh yeah, okay.

00:40:05.300 --> 00:40:06.820
But I could see where this is going.

00:40:06.820 --> 00:40:11.320
I think actually, psychologically, it may have a big impact, even though it's silly.

00:40:11.620 --> 00:40:12.660
Yeah, it's a super interesting point.

00:40:12.660 --> 00:40:13.580
I never thought about it that way.

00:40:13.580 --> 00:40:16.460
But yeah, I mean, I think it definitely gives it a little bit more sketch vibe.

00:40:16.460 --> 00:40:18.520
Like this is like in the...

00:40:18.520 --> 00:40:19.820
Yeah, like a wireframe vibe.

00:40:19.820 --> 00:40:20.100
Yeah.

00:40:20.100 --> 00:40:22.000
Yeah, wireframe, like straight from the workshop.

00:40:22.000 --> 00:40:22.740
Exactly.

00:40:22.740 --> 00:40:23.420
Yeah.

00:40:23.420 --> 00:40:27.100
That's what I was thinking because I presented projects to various stakeholders when I used

00:40:27.100 --> 00:40:27.980
to do that kind of stuff.

00:40:27.980 --> 00:40:30.080
And they'd be like, oh, well, that looks like it's done.

00:40:30.080 --> 00:40:32.680
No, we're going to need some time because it's really not done.

00:40:32.680 --> 00:40:34.640
I know it looks good, but it's not.

00:40:34.640 --> 00:40:35.480
Yeah, yeah, yeah.

00:40:35.480 --> 00:40:36.960
You made it look too good, basically.

00:40:36.960 --> 00:40:37.820
Yeah, exactly.

00:40:37.820 --> 00:40:39.300
That was a serious mistake.

00:40:39.300 --> 00:40:40.040
Okay.

00:40:40.220 --> 00:40:43.140
So we got a little bit more time to talk about a couple of things.

00:40:43.140 --> 00:40:45.760
I want to talk about how people actually share this.

00:40:45.760 --> 00:40:49.760
Like we're still talking about a thing I pip install locally and it has a UI, but what do

00:40:49.760 --> 00:40:50.040
I do?

00:40:50.040 --> 00:40:54.260
I still don't want to set up a Linux machine and Nginx and domains and all that.

00:40:54.260 --> 00:40:55.060
So what are the options?

00:40:55.060 --> 00:40:58.220
But before we get to that, tell us a bit about the internals.

00:40:58.220 --> 00:41:02.620
Like when you guys work on Gradio and I pip install it, like what's running?

00:41:02.620 --> 00:41:03.720
What is this project?

00:41:03.720 --> 00:41:06.940
The backend is a FastAPI server.

00:41:06.940 --> 00:41:09.600
So what Gradio will do, it'll spin up a server for you.

00:41:09.820 --> 00:41:12.480
And then that server will serve like the front end assets.

00:41:12.480 --> 00:41:14.480
The front end is built in Svelte.

00:41:14.480 --> 00:41:14.880
Interesting.

00:41:14.880 --> 00:41:15.180
Okay.

00:41:15.300 --> 00:41:20.480
Basically, whenever you, whenever these reactivity events happen, what that'll happen is that,

00:41:20.480 --> 00:41:24.480
or what will happen is that the front end will just call the backend API and then run your

00:41:24.480 --> 00:41:28.500
function and then make sure that all the necessary processing that needs to happen to get your

00:41:28.500 --> 00:41:29.680
data ready happens.

00:41:29.680 --> 00:41:33.920
But at the end of the day, it's kind of a simple model in that sense, right?

00:41:33.920 --> 00:41:37.620
Obviously there's some more complications with like the streaming, for example.

00:41:37.620 --> 00:41:40.060
That's like a whole kind of different code path almost.

00:41:40.060 --> 00:41:46.560
But at the end of the day, it's like a REST server that's talking with a JavaScript client.

00:41:46.560 --> 00:41:53.060
So it's like the standard developer tools story for Python people is it's not, some of it

00:41:53.060 --> 00:41:57.260
is Python, but you probably end up writing a lot of JavaScript or TypeScript to build this

00:41:57.260 --> 00:41:58.140
tool for other people.

00:41:58.140 --> 00:41:58.420
Right.

00:41:58.420 --> 00:41:59.600
So they don't have to.

00:41:59.720 --> 00:42:01.640
I'm not a huge Svelte expert.

00:42:01.640 --> 00:42:06.020
I like, thankfully there's some of the people I work with are like really good at the really

00:42:06.020 --> 00:42:06.720
knowledgeable and that stuff.

00:42:06.720 --> 00:42:10.500
And yeah, like the front end code, I think it's, I think there's more Svelte code than

00:42:10.500 --> 00:42:11.060
Python code.

00:42:11.060 --> 00:42:12.380
Actually, I'm curious to put the.

00:42:12.380 --> 00:42:13.480
What's the code breakdown?

00:42:13.480 --> 00:42:14.600
Let's break it down.

00:42:14.600 --> 00:42:15.020
Yeah.

00:42:15.020 --> 00:42:19.580
65% Python, 16% Svelte, 13% TypeScript.

00:42:19.580 --> 00:42:23.040
Well, so I think the reason might be that we have a lot of like demos and stuff.

00:42:23.040 --> 00:42:23.440
Yeah.

00:42:23.440 --> 00:42:24.880
I think there might be some stuff like that.

00:42:24.880 --> 00:42:25.260
Yeah.

00:42:25.260 --> 00:42:26.240
The demos are in there.

00:42:26.240 --> 00:42:26.440
Yeah.

00:42:26.440 --> 00:42:27.200
There's a lot of demos.

00:42:27.200 --> 00:42:29.080
You know what feature GitHub needs?

00:42:29.280 --> 00:42:31.620
As you navigate the source tree, right?

00:42:31.620 --> 00:42:36.160
When I click on like client or demo or Gradio, it would be awesome if those stats would also

00:42:36.160 --> 00:42:36.800
be repeated.

00:42:36.800 --> 00:42:38.980
But just for that section of code, wouldn't that be great?

00:42:38.980 --> 00:42:40.520
Like how much of the demos are Python?

00:42:40.520 --> 00:42:41.120
I don't know.

00:42:41.120 --> 00:42:42.860
Maybe I just want to know that, but that'd be cool.

00:42:42.860 --> 00:42:43.400
Anyway.

00:42:43.400 --> 00:42:43.680
Yeah.

00:42:43.680 --> 00:42:47.440
So I suspect that is, there's probably a lot of code and you've got a lot of notebooks

00:42:47.440 --> 00:42:48.340
and stuff in there too.

00:42:48.340 --> 00:42:50.420
That probably puts a big change on it there.

00:42:50.420 --> 00:42:52.520
A lot of the code is actually, yeah.

00:42:52.520 --> 00:42:52.760
Yeah.

00:42:52.760 --> 00:42:53.640
JavaScript Svelte.

00:42:53.640 --> 00:42:54.060
Right.

00:42:54.060 --> 00:42:55.740
It's the take one for the team.

00:42:55.740 --> 00:42:57.580
So the rest of us don't have to write JavaScript.

00:42:57.580 --> 00:42:58.800
Exactly.

00:42:58.840 --> 00:42:59.040
Yeah.

00:42:59.040 --> 00:42:59.360
Cool.

00:42:59.360 --> 00:42:59.940
Interesting.

00:42:59.940 --> 00:43:00.500
Very nice.

00:43:00.500 --> 00:43:06.300
And it says it can be embedded in a notebook, which is interesting, or it can be presented

00:43:06.300 --> 00:43:07.260
as a webpage.

00:43:07.260 --> 00:43:08.560
Tell us about this part.

00:43:08.560 --> 00:43:13.320
If you were to run this on any notebook, like Google Colab, for example, I think this might

00:43:13.320 --> 00:43:13.620
be an example.

00:43:13.620 --> 00:43:13.840
Right.

00:43:13.920 --> 00:43:16.240
So if you call like the way that Gradio works, right?

00:43:16.240 --> 00:43:21.560
Once you create your Gradio interface or blocks, once you call launch, that's how you start

00:43:21.560 --> 00:43:22.020
up the server.

00:43:22.020 --> 00:43:24.600
That's like you kick off the whole process of serving this.

00:43:24.600 --> 00:43:25.980
That'll create the server locally.

00:43:25.980 --> 00:43:26.180
Right.

00:43:26.180 --> 00:43:27.640
So no data is like leaving your machine.

00:43:27.640 --> 00:43:28.120
Right.

00:43:28.160 --> 00:43:32.040
And then if you click, if you call launch on like a Jupyter notebook, Colab, SageMaker,

00:43:32.040 --> 00:43:34.420
like the UI will display like in the notebook.

00:43:34.420 --> 00:43:34.740
Right.

00:43:34.740 --> 00:43:35.120
Right.

00:43:35.120 --> 00:43:40.980
And then you could, if you're doing locally as well, you can go to the local host URL and

00:43:40.980 --> 00:43:42.280
go to the server that way.

00:43:42.280 --> 00:43:44.980
And then the really cool thing is that, yeah, there you go.

00:43:44.980 --> 00:43:45.660
There's a UI.

00:43:45.660 --> 00:43:47.840
That's what we mean that it's embedded locally.

00:43:47.840 --> 00:43:48.740
It feels good.

00:43:48.740 --> 00:43:51.920
Like a little bit like the iWidgets sort of thing.

00:43:51.920 --> 00:43:53.100
It's similar to that, right?

00:43:53.100 --> 00:43:54.980
Like it'll display right underneath the cell.

00:43:54.980 --> 00:43:55.200
Right.

00:43:55.200 --> 00:43:58.960
And then if you run the cell again, like you'll get like a new, like a new server basically.

00:43:58.960 --> 00:43:59.160
Right.

00:43:59.160 --> 00:44:01.140
So you can, you can iteratively build these things.

00:44:01.140 --> 00:44:01.360
Right.

00:44:01.360 --> 00:44:03.920
Is it running FastAPI somewhere in the background when you do that?

00:44:03.920 --> 00:44:04.260
Yeah.

00:44:04.260 --> 00:44:04.940
Crazy.

00:44:04.940 --> 00:44:05.340
Yeah.

00:44:05.340 --> 00:44:06.340
It's pretty, pretty nuts.

00:44:06.340 --> 00:44:07.260
Turtles all the way down.

00:44:07.260 --> 00:44:07.640
Yeah.

00:44:07.640 --> 00:44:10.540
And then what we mean that they can be embedded in a notebook.

00:44:10.540 --> 00:44:12.600
And then you could also like host it anywhere.

00:44:12.600 --> 00:44:12.860
Right.

00:44:12.860 --> 00:44:16.060
So you could, if your machine is exposed to the internet, right?

00:44:16.060 --> 00:44:17.360
You have a fixed IP address.

00:44:17.360 --> 00:44:19.320
You could just give people that URL.

00:44:19.320 --> 00:44:21.300
You could also share it another way.

00:44:21.300 --> 00:44:21.520
Right.

00:44:21.520 --> 00:44:24.360
So every radio interface is like a launch method.

00:44:24.360 --> 00:44:25.780
That's what kicks off the server.

00:44:25.780 --> 00:44:27.480
And that takes a parameter called share.

00:44:27.480 --> 00:44:27.960
Right.

00:44:27.960 --> 00:44:32.620
So if you hit share equals through true, that'll create like a temporary link for 72 hours.

00:44:32.620 --> 00:44:33.620
So you could share with someone.

00:44:33.620 --> 00:44:33.920
Right.

00:44:33.920 --> 00:44:36.760
So you don't have to, you could host it right on your laptop if you wanted to, as long as your

00:44:36.760 --> 00:44:37.200
laptop.

00:44:37.200 --> 00:44:38.120
As long as you leave it on.

00:44:38.120 --> 00:44:38.340
Yeah.

00:44:38.340 --> 00:44:38.620
Yeah.

00:44:38.700 --> 00:44:41.100
As long as you leave it on, it's like not sleeping and stuff.

00:44:41.100 --> 00:44:44.860
Like people can access your, if you go back to that collab notebook, I think we might be

00:44:44.860 --> 00:44:45.760
able to like demo that.

00:44:45.760 --> 00:44:46.320
Oh, interesting.

00:44:46.320 --> 00:44:50.140
If I just say here and say share equals true and rerun it.

00:44:50.140 --> 00:44:50.800
Equals true.

00:44:50.800 --> 00:44:51.620
Let's see what we're getting.

00:44:51.820 --> 00:44:53.300
So you see greater dot live.

00:44:53.300 --> 00:44:53.480
Right.

00:44:53.480 --> 00:44:54.320
So if you click that.

00:44:54.320 --> 00:44:55.000
Totally works.

00:44:55.000 --> 00:44:55.340
Yeah.

00:44:55.340 --> 00:44:58.260
You can select that to whoever you want and they can just use this.

00:44:58.260 --> 00:44:58.580
Right.

00:44:58.580 --> 00:44:59.780
So that, yeah.

00:44:59.780 --> 00:45:01.060
No install needed.

00:45:01.060 --> 00:45:01.320
Right.

00:45:01.320 --> 00:45:06.920
If you're sharing this with your collaborator, your PM, your manager, your friend or whatever,

00:45:06.920 --> 00:45:08.620
you could just give them this link.

00:45:08.620 --> 00:45:08.880
Right.

00:45:08.880 --> 00:45:10.180
So you don't have to do anything.

00:45:10.720 --> 00:45:12.560
I guess it's probably worth emphasizing.

00:45:12.560 --> 00:45:15.140
You should never try to host like production.

00:45:15.140 --> 00:45:19.200
So over this, it sounds like, cause it's only for a limited time and it's gonna, it's just

00:45:19.200 --> 00:45:20.520
a gooey looking URL.

00:45:20.520 --> 00:45:25.160
But so often you'll be in meetings over zoom or something else.

00:45:25.160 --> 00:45:26.540
And they'll be like, Hey, what have you done?

00:45:26.540 --> 00:45:27.340
Can you show me?

00:45:27.400 --> 00:45:28.960
And then you're like, all right, well, let me do screen sharing.

00:45:28.960 --> 00:45:30.560
Oh, I don't have, I'm not a host.

00:45:30.560 --> 00:45:31.640
Can you make me a host now?

00:45:31.640 --> 00:45:33.400
Can I, you're sharing, can I share?

00:45:33.400 --> 00:45:36.580
And then finally you get it up and it's blocky and they're like, Oh, zoom in.

00:45:36.580 --> 00:45:37.300
It's too small.

00:45:37.300 --> 00:45:38.200
I'm on my phone.

00:45:38.200 --> 00:45:40.920
This way you just take that and you give it to them in the meeting.

00:45:40.920 --> 00:45:41.160
Right.

00:45:41.160 --> 00:45:44.120
And they, they have a full fidelity thing they can play with, which is awesome.

00:45:44.120 --> 00:45:46.320
They have the demo itself that's running on your machine.

00:45:46.320 --> 00:45:46.680
Right.

00:45:46.680 --> 00:45:47.740
So they don't have to.

00:45:47.740 --> 00:45:48.020
Yeah.

00:45:48.020 --> 00:45:48.200
Yeah.

00:45:48.200 --> 00:45:48.700
Yeah.

00:45:48.700 --> 00:45:50.320
Like no, you don't have to install anything.

00:45:50.320 --> 00:45:50.540
Right.

00:45:50.540 --> 00:45:52.780
Just go to your point, your browser at this URL.

00:45:53.020 --> 00:45:54.940
And yeah, it'll work for that quick demo.

00:45:54.940 --> 00:45:55.780
Yeah, exactly.

00:45:55.780 --> 00:45:56.740
Use case as well.

00:45:56.740 --> 00:45:56.880
Yeah.

00:45:56.880 --> 00:45:58.160
Definitely don't use it for production.

00:45:58.160 --> 00:45:58.820
Yeah.

00:45:58.820 --> 00:46:03.200
If you wanted to use reproduction, I think like the easiest, the absolutely easiest way to use

00:46:03.200 --> 00:46:04.040
hugging face spaces.

00:46:04.040 --> 00:46:07.740
So if you go to hugging face spaces, it's basically like a drag and drop, right?

00:46:07.740 --> 00:46:12.700
Like all you have to do is just drag your radio script into like their UI and then that'll

00:46:12.700 --> 00:46:13.300
upload it.

00:46:13.300 --> 00:46:17.240
And then radio will already be installed and then the server will, will start.

00:46:17.240 --> 00:46:19.140
And then you have, you have your permanent hosting.

00:46:19.140 --> 00:46:21.640
And then it's also like a, it has like a Git interface, right?

00:46:21.660 --> 00:46:24.040
So like your demo has several files, like directory.

00:46:24.040 --> 00:46:27.740
There's some assets, some images that you need that you want to upload as well.

00:46:27.740 --> 00:46:32.880
Like you could just get pushed to your hugging face space and then you'll, you can do it like

00:46:32.880 --> 00:46:33.440
that as well.

00:46:33.440 --> 00:46:33.800
Okay.

00:46:33.800 --> 00:46:36.440
So you add it as an origin or something and then just push to it.

00:46:36.440 --> 00:46:36.620
Yeah.

00:46:36.620 --> 00:46:37.320
I could try to show it.

00:46:37.320 --> 00:46:40.220
I don't know if you can have a, can I share my screen?

00:46:40.220 --> 00:46:40.560
I wonder.

00:46:40.560 --> 00:46:41.240
Yeah, sure.

00:46:41.240 --> 00:46:42.920
Click at the bottom and share.

00:46:42.920 --> 00:46:44.820
It's easier if you share an app.

00:46:44.820 --> 00:46:45.060
Yeah.

00:46:45.120 --> 00:46:50.840
If I go to my hugging face account and go here and then new space, and then this is

00:46:50.840 --> 00:46:54.680
talk Python demo, then MIT.

00:46:54.680 --> 00:46:55.680
Oh yeah.

00:46:55.680 --> 00:46:57.000
We can do whatever we want with this.

00:46:57.000 --> 00:46:57.240
Right.

00:46:57.240 --> 00:46:57.980
So you could, right.

00:46:57.980 --> 00:47:00.820
You could host stream, like radio, Docker.

00:47:00.820 --> 00:47:01.120
Yeah.

00:47:01.120 --> 00:47:02.020
Anything you want.

00:47:02.020 --> 00:47:02.520
Right.

00:47:02.620 --> 00:47:06.340
So for free, very generous free tier, you have two CPUs.

00:47:06.340 --> 00:47:07.440
That is a generous free tier.

00:47:07.440 --> 00:47:09.100
Two CPU, 16 gigs.

00:47:09.100 --> 00:47:09.980
Yeah, that is good.

00:47:09.980 --> 00:47:14.420
The only caveat is that this will go to sleep after 72 hours if no one uses it.

00:47:14.420 --> 00:47:14.640
Right.

00:47:14.640 --> 00:47:16.420
So, but you could also upgrade.

00:47:16.420 --> 00:47:19.580
You have a machine learning model, you need a GPU, you pay for the GPU per hour.

00:47:19.580 --> 00:47:22.700
And then yeah, you can set public or private and then you just create space.

00:47:22.700 --> 00:47:25.500
And then yeah, this is how the Git interface works.

00:47:25.500 --> 00:47:26.060
Right.

00:47:26.060 --> 00:47:31.000
So you could just get clone this and then add your code and then just get pushed.

00:47:31.320 --> 00:47:32.760
Or you could just copy this.

00:47:32.760 --> 00:47:35.120
Chop, copy the code and just paste it into a file.

00:47:35.120 --> 00:47:35.340
Yeah.

00:47:35.340 --> 00:47:36.880
Add file, create new file.

00:47:36.880 --> 00:47:38.980
It does feel a very Git, right?

00:47:38.980 --> 00:47:42.780
Even has the similar look and feel of like when you go to Git and you say add new file.

00:47:42.780 --> 00:47:43.360
Yeah.

00:47:43.360 --> 00:47:43.720
True.

00:47:43.720 --> 00:47:45.120
A perfect commit message.

00:47:45.120 --> 00:47:46.980
No, no comment.

00:47:46.980 --> 00:47:47.600
Just blank.

00:47:47.600 --> 00:47:48.100
I love it.

00:47:48.100 --> 00:47:49.280
Yeah.

00:47:49.280 --> 00:47:49.660
And then.

00:47:49.660 --> 00:47:53.920
So over here, they run in Docker containers or Kubernetes or something like that.

00:47:53.920 --> 00:47:54.800
The Docker container.

00:47:54.800 --> 00:47:59.520
So what this is doing, it's that it's, it has like a pre-configured Gradio Docker image,

00:47:59.520 --> 00:47:59.720
right?

00:47:59.740 --> 00:48:01.040
That comes with, there we go.

00:48:01.040 --> 00:48:01.480
It already built.

00:48:01.480 --> 00:48:06.440
But it comes with Gradio and like a bunch of standard like data science libraries.

00:48:06.440 --> 00:48:08.620
And then you write them in.

00:48:08.620 --> 00:48:11.720
It'll, and then it adds your code to the container and then it starts a container.

00:48:11.720 --> 00:48:11.920
Right.

00:48:11.920 --> 00:48:14.840
But you could also just use your own Docker file if you wanted to.

00:48:14.840 --> 00:48:15.200
Okay.

00:48:15.200 --> 00:48:16.560
You could host whatever you want.

00:48:16.560 --> 00:48:16.760
Right.

00:48:16.760 --> 00:48:17.360
So here.

00:48:17.360 --> 00:48:17.640
Yeah.

00:48:17.640 --> 00:48:18.640
You got to put your name in a present.

00:48:18.640 --> 00:48:19.240
Wow.

00:48:19.240 --> 00:48:19.600
Look at that.

00:48:19.600 --> 00:48:20.100
Hello, Michael.

00:48:20.100 --> 00:48:20.480
Yeah.

00:48:20.480 --> 00:48:24.960
In the time that we've been talking about this, you've created a space and created a

00:48:24.960 --> 00:48:25.900
new UI and hosted it.

00:48:25.900 --> 00:48:27.060
That's pretty ridiculous.

00:48:27.060 --> 00:48:27.360
Yeah.

00:48:27.360 --> 00:48:29.540
And then you could just share this.

00:48:29.540 --> 00:48:30.760
Share the URL or whatever.

00:48:30.760 --> 00:48:31.060
Yeah.

00:48:31.060 --> 00:48:31.440
Yeah.

00:48:31.440 --> 00:48:32.500
You can just share the URL there.

00:48:32.500 --> 00:48:36.460
And then they have like a machine learning app that they can share to be used with, with,

00:48:36.460 --> 00:48:38.700
they can share with anyone and it'll stay up.

00:48:38.700 --> 00:48:39.720
It's just Git, right?

00:48:39.780 --> 00:48:44.200
So if you have Git locally, if you know how to use Git, you can very seamlessly use, push

00:48:44.200 --> 00:48:45.080
to the Hugging Face platform.

00:48:45.080 --> 00:48:46.840
There's no special magic.

00:48:46.840 --> 00:48:47.940
What if I'm not a hugger?

00:48:47.940 --> 00:48:52.780
What if I, for some reason, don't want to use Hugging Face, can I post this behind Nginx

00:48:52.780 --> 00:48:57.320
or somewhere if I like infrastructure, or I'd like to do my infrastructure as a service?

00:48:57.320 --> 00:48:58.880
Just that app.py file.

00:48:58.880 --> 00:49:01.740
Python.app.py from your cloud.

00:49:01.740 --> 00:49:05.180
And then just make sure that the URL is, the port is accessible for the internet.

00:49:05.180 --> 00:49:06.300
And then you just give that to everyone.

00:49:06.300 --> 00:49:08.460
Or front that with Nginx and put some.

00:49:08.460 --> 00:49:09.340
Yeah, exactly.

00:49:09.340 --> 00:49:12.320
Let's encrypt and then just point it over to that URL and let it go.

00:49:12.320 --> 00:49:13.120
It'd be pretty straightforward.

00:49:13.120 --> 00:49:14.260
You could host it wherever you want.

00:49:14.260 --> 00:49:16.580
It's just, it's all open source tech under the hood, right?

00:49:16.580 --> 00:49:19.740
It's just FastAPI built and then some Python libraries, right?

00:49:19.740 --> 00:49:21.900
There's no, there's no lock in anywhere, right?

00:49:21.900 --> 00:49:22.600
Yeah, cool.

00:49:22.600 --> 00:49:28.220
So it's probably running UVicorn, I would guess, as the server, which is production-ish.

00:49:28.220 --> 00:49:33.540
I guess if you did like really large scale, you might want to do Genicorn with the UVicorn

00:49:33.540 --> 00:49:37.120
workers or other than just UVicorn itself, but you know, for the failover and whatnot.

00:49:37.120 --> 00:49:41.760
But that sounds like, if these words sound familiar to you, it should sound really familiar.

00:49:41.760 --> 00:49:43.100
If they don't, then don't worry about it.

00:49:43.100 --> 00:49:43.500
Exactly.

00:49:43.500 --> 00:49:47.160
That's the standard Python web infrastructure stack type of stuff.

00:49:47.160 --> 00:49:47.380
Right.

00:49:47.380 --> 00:49:49.540
And in that model, it's completely free, right?

00:49:49.540 --> 00:49:50.140
It's open source.

00:49:50.140 --> 00:49:51.620
I can do, I can just run it there, right?

00:49:51.620 --> 00:49:51.920
Yeah.

00:49:51.920 --> 00:49:53.000
Just run it wherever you want.

00:49:53.100 --> 00:49:53.660
Very nice.

00:49:53.660 --> 00:49:58.140
Well, Freddie, let's wrap up our conversation, get a little short on time with just where

00:49:58.140 --> 00:49:58.680
things are going.

00:49:58.680 --> 00:50:01.380
We'll talk about where we are, where it came from, where are we going?

00:50:01.380 --> 00:50:01.880
Thanks for that.

00:50:01.880 --> 00:50:08.320
So I think where we are, so I think we're trying to get Gradio into like as many platforms as

00:50:08.320 --> 00:50:09.060
possible, right?

00:50:09.060 --> 00:50:12.420
So, and like as many kind of like deployment modes as possible.

00:50:12.420 --> 00:50:16.360
So one of the cool projects that we're working on is Gradio Wasm, right?

00:50:16.360 --> 00:50:18.700
So like running Gradio entirely in the browser.

00:50:18.700 --> 00:50:19.020
Wow.

00:50:19.020 --> 00:50:19.220
Okay.

00:50:19.340 --> 00:50:24.020
So yeah, so that's, it's not ready, it's not released yet, but it's something that we're

00:50:24.020 --> 00:50:25.020
actively working on, right?

00:50:25.020 --> 00:50:30.320
So you can, yeah, so if you want to just build your machine learning demo, running everything

00:50:30.320 --> 00:50:31.500
directly in the browser, right?

00:50:31.500 --> 00:50:34.380
There's like the ML for the web space is growing a lot.

00:50:34.380 --> 00:50:35.340
It's advancing really quickly.

00:50:35.340 --> 00:50:36.860
Like we're getting ready.

00:50:36.860 --> 00:50:38.280
We're getting ready for that.

00:50:38.280 --> 00:50:40.960
So what's that look like in terms of foundations?

00:50:40.960 --> 00:50:42.300
Is that Iodide?

00:50:42.300 --> 00:50:43.460
Is that PyScript?

00:50:43.460 --> 00:50:44.580
Is that something else?

00:50:44.580 --> 00:50:46.540
It's using Pyodide right now.

00:50:46.540 --> 00:50:46.800
Okay.

00:50:46.800 --> 00:50:47.200
Yeah.

00:50:47.260 --> 00:50:49.140
So yeah, that's how.

00:50:49.140 --> 00:50:49.520
Yeah.

00:50:49.520 --> 00:50:53.500
That's a pretty good choice because one of the selling points of Pyodide, not just that

00:50:53.500 --> 00:50:57.680
it has Python in the browser, but that it has the ability, it has a bunch of the machine

00:50:57.680 --> 00:51:02.260
learning libraries either available or compiled over to Wasm WebAssembly.

00:51:02.260 --> 00:51:07.100
And so you can actually do machine learning stuff, not just like, hi, my name is plus name.

00:51:07.100 --> 00:51:07.640
You know what I mean?

00:51:07.780 --> 00:51:09.400
That's one of the cool projects we're working on this year.

00:51:09.400 --> 00:51:13.120
The other cool project that we're working on is, yeah, like the custom components, right?

00:51:13.120 --> 00:51:17.700
So let's say that you wanted to build your own custom machine learning demo, your own custom

00:51:17.700 --> 00:51:18.460
web app, right?

00:51:18.460 --> 00:51:20.420
But you need something that we don't have.

00:51:20.420 --> 00:51:24.960
Giving you the API to build that component locally and then just hook it into the app without

00:51:24.960 --> 00:51:27.280
having to like merge anything into Gradio upstream.

00:51:27.280 --> 00:51:28.800
We're working on that actively.

00:51:28.960 --> 00:51:30.140
So that'll be really exciting.

00:51:30.140 --> 00:51:35.240
And then, yeah, really excited just because it'll enable like a lot of people like in the

00:51:35.240 --> 00:51:38.940
creative community to collaborate with each other and build like really impressive stuff.

00:51:38.940 --> 00:51:39.200
Yeah.

00:51:39.200 --> 00:51:40.280
Kind of like on their own, right?

00:51:40.280 --> 00:51:43.600
Like they don't need like, they don't need like the core development team necessarily.

00:51:43.600 --> 00:51:44.040
Sure.

00:51:44.040 --> 00:51:46.900
Like pytest plugins rather than trying to change pytest.

00:51:46.900 --> 00:51:48.920
So that, yeah, really excited about that.

00:51:48.920 --> 00:51:53.540
And then, yeah, the other cool stuff is that we're, one thing that we didn't talk about that

00:51:53.540 --> 00:51:57.920
I would want to talk about if we have time is that all these demos that we've built

00:51:57.920 --> 00:52:00.260
are sort of available via API, right?

00:52:00.260 --> 00:52:03.480
So if you click on any of these demos, like if you click on that first one, if you scroll

00:52:03.480 --> 00:52:06.460
to the bottom and you see it says use via API, right?

00:52:06.460 --> 00:52:11.180
So this gives you like a little code snippet as to how you can call this demo from Python

00:52:11.180 --> 00:52:11.820
or JavaScript.

00:52:11.820 --> 00:52:12.260
Okay.

00:52:12.260 --> 00:52:13.060
What does that mean, right?

00:52:13.060 --> 00:52:16.820
That means that basically all these ML apps that are available on Huggy Face or just anywhere

00:52:16.820 --> 00:52:20.780
on the internet, like they now become like building blocks that you can use in your

00:52:20.780 --> 00:52:21.620
own workflow, right?

00:52:21.620 --> 00:52:25.340
So, and actually this demo itself, I'm familiar with it.

00:52:25.360 --> 00:52:29.480
It's actually really cool because it's calling two other Gradio demos via API, right?

00:52:29.480 --> 00:52:33.580
So this is an example of someone building their Gradio app by calling other Gradio apps.

00:52:33.580 --> 00:52:33.880
Wow.

00:52:33.880 --> 00:52:34.160
Okay.

00:52:34.160 --> 00:52:36.520
We're creating this ecosystem where...

00:52:36.520 --> 00:52:38.020
It's like Gradio microservices.

00:52:38.020 --> 00:52:38.740
Exactly.

00:52:38.740 --> 00:52:38.980
Right.

00:52:38.980 --> 00:52:43.120
So it's like all these Gradio apps are building blocks that you can then connect together via

00:52:43.120 --> 00:52:43.500
API.

00:52:43.880 --> 00:52:45.040
And that's really cool, right?

00:52:45.040 --> 00:52:48.440
Because like it basically means that machine learning is available.

00:52:48.440 --> 00:52:53.420
Like you don't need to use a GUI to get state-of-the-art machine learning, right?

00:52:53.420 --> 00:52:57.440
You could like use an API and that means that you could put these models like pretty much

00:52:57.440 --> 00:52:57.980
anywhere, right?

00:52:57.980 --> 00:53:01.280
So like one of the cool things that we launched two weeks ago, I believe, or like a week and

00:53:01.280 --> 00:53:06.660
a half ago is that you can deploy like a Gradio chatbot to Discord, like just one line of code,

00:53:06.660 --> 00:53:06.840
right?

00:53:06.840 --> 00:53:13.860
So if you, let's say if you have a Gradio app that talks with open AI, like GPT-3 or Llama

00:53:13.860 --> 00:53:18.020
or any of these like open source LLMs, if you can build a Gradio app for it, you can like

00:53:18.020 --> 00:53:20.440
seamlessly hook it into your Discord server, right?

00:53:20.520 --> 00:53:24.040
So that's all built via this like API functionality, right?

00:53:24.040 --> 00:53:27.360
So this is something like, I'm personally like super excited about it.

00:53:27.360 --> 00:53:32.180
Like we want to push this further just because it's like Gradios that you like Gradio historically

00:53:32.180 --> 00:53:36.480
has been built for the UI, but it can also be used to get these machine learning models into

00:53:36.480 --> 00:53:37.180
more places.

00:53:37.180 --> 00:53:40.740
One of the things that I'm really excited about in the coming years, making this a little

00:53:40.740 --> 00:53:42.360
bit more, a little bit more visible and getting.

00:53:42.360 --> 00:53:42.740
Yeah.

00:53:42.740 --> 00:53:48.340
You could integrate some really cool LLMs and other types of chat into your Discord.

00:53:48.600 --> 00:53:50.920
I imagine you could probably do it with a Slack as well.

00:53:50.920 --> 00:53:55.760
And if somebody asks in your company, how do I, whatever you could think of go, Hey,

00:53:55.760 --> 00:53:58.000
I've already, I'm private GPT.

00:53:58.000 --> 00:53:59.520
I've already ingested all of our docs.

00:53:59.520 --> 00:54:01.480
You want me to take a shot at answering that?

00:54:01.480 --> 00:54:02.020
Like, sure.

00:54:02.020 --> 00:54:02.400
Why not?

00:54:02.400 --> 00:54:06.900
That's one of the pet projects I want to do is just do that for the Gradio Discord,

00:54:06.900 --> 00:54:07.160
right?

00:54:07.160 --> 00:54:10.440
So there's like a Gradio Discord where you could chat with the Gradio community and there's

00:54:10.440 --> 00:54:14.220
like people ask questions in it, but it'd be really cool if we had a Gradio chat bot that

00:54:14.220 --> 00:54:16.720
like knew a lot about Gradio that then you could just ask.

00:54:16.720 --> 00:54:17.140
Exactly.

00:54:17.480 --> 00:54:19.900
Chatbot slash Gradio chat.

00:54:19.900 --> 00:54:22.760
Like, like how do I, whatever, how do I display a plot?

00:54:22.760 --> 00:54:23.000
Right.

00:54:23.000 --> 00:54:26.260
And then it'll tell you, just return a matplotlib from your function.

00:54:26.260 --> 00:54:28.600
People could think, well, why don't I just use ChatGPT or something?

00:54:28.600 --> 00:54:32.960
But these are the things you teach it like deeply about, you give it all the docs and you

00:54:32.960 --> 00:54:34.280
say, study this.

00:54:34.280 --> 00:54:35.760
And then I want to ask you about it.

00:54:35.760 --> 00:54:36.000
Right.

00:54:36.080 --> 00:54:40.900
And a lot of times the docs and other things go beyond the token level that the standard

00:54:40.900 --> 00:54:41.920
models can take.

00:54:41.920 --> 00:54:46.740
Like I've tried to get ChatGPT to tell me about transcripts on Talk Python and it can't even

00:54:46.740 --> 00:54:49.700
adjust like one transcript before it runs out of space.

00:54:49.700 --> 00:54:51.120
Like I can't quite load all that.

00:54:51.340 --> 00:54:52.960
Well, that's, I wanted to ask you about all of them.

00:54:52.960 --> 00:54:53.840
You can't even do one.

00:54:53.840 --> 00:54:55.380
So this is not working for me.

00:54:55.380 --> 00:54:55.620
Yeah.

00:54:55.620 --> 00:54:58.420
So you could fine tune like an open source LLM and then host it wherever you want.

00:54:58.420 --> 00:54:58.620
Right.

00:54:58.620 --> 00:54:58.820
So.

00:54:58.820 --> 00:54:59.380
Yes, exactly.

00:54:59.380 --> 00:55:00.260
More control.

00:55:00.260 --> 00:55:00.580
Yeah.

00:55:00.580 --> 00:55:00.840
That's cool.

00:55:00.840 --> 00:55:02.280
So you could teach all about Gradio.

00:55:02.280 --> 00:55:03.100
Real quick question.

00:55:03.100 --> 00:55:03.620
Mr.

00:55:03.620 --> 00:55:07.780
Magnetic in the audience asks, what about a hugging face desktop app instead of the browser app?

00:55:07.860 --> 00:55:08.060
Yeah.

00:55:08.060 --> 00:55:10.580
So that's something that there's an open issue for that.

00:55:10.580 --> 00:55:13.220
It's something that we've been kicking around as well.

00:55:13.220 --> 00:55:16.600
It's just like, how do we get like a Gradio desktop app as well?

00:55:16.600 --> 00:55:18.340
So yes, stay tuned.

00:55:18.340 --> 00:55:21.080
I think let me try to find that issue and then comment on the YouTube.

00:55:21.080 --> 00:55:22.880
But yeah, I would love your thoughts on that.

00:55:22.880 --> 00:55:24.380
If anyone has thoughts on that.

00:55:24.380 --> 00:55:26.080
But yeah, we, it's something we're thinking about.

00:55:26.080 --> 00:55:29.540
It's not, I don't think it'll happen maybe in the next like month or two, but maybe before

00:55:29.540 --> 00:55:31.280
the end of the year or next year, it could happen.

00:55:31.280 --> 00:55:31.620
Excellent.

00:55:31.620 --> 00:55:32.260
All right.

00:55:32.260 --> 00:55:35.000
Well, I think that pretty well covers it.

00:55:35.000 --> 00:55:36.060
It's a super exciting project.

00:55:36.060 --> 00:55:37.400
So good luck with it.

00:55:37.580 --> 00:55:39.280
I mean, already you've had a lot of luck with it.

00:55:39.280 --> 00:55:42.220
So you don't need my wishes, but further good luck on that.

00:55:42.220 --> 00:55:46.120
And yeah, before we get out of here, let me ask you a final question here.

00:55:46.120 --> 00:55:50.540
If you're always asked, like to ask the guests or like some cool IPI project they've run across.

00:55:50.540 --> 00:55:51.520
It's been really awesome.

00:55:51.520 --> 00:55:54.920
Maybe not super popular, but has made a difference or you've, wow.

00:55:54.920 --> 00:55:56.280
How did I not know about this?

00:55:56.280 --> 00:55:57.340
Any come to mind for you?

00:55:57.340 --> 00:55:57.980
Python project?

00:55:57.980 --> 00:55:58.220
Yeah.

00:55:58.220 --> 00:56:01.860
Something I can pip install like FastAPI, but not FastAPI.

00:56:01.860 --> 00:56:02.760
Cause everyone knows that.

00:56:02.760 --> 00:56:07.040
I think when I was just starting out, I think I was like a really big noob and like I always

00:56:07.300 --> 00:56:09.580
ran into like environment issues.

00:56:09.580 --> 00:56:12.500
And then a friend of mine showed me about like pip depth tree.

00:56:12.500 --> 00:56:15.540
It shows you exactly like why things get installed.

00:56:15.540 --> 00:56:16.400
And that's a good one.

00:56:16.400 --> 00:56:16.640
Yeah.

00:56:16.640 --> 00:56:18.880
I think it's really, I think it's really magical, honestly.

00:56:18.880 --> 00:56:19.220
Yeah.

00:56:19.220 --> 00:56:23.700
I think it's really helpful just to like figure out like, especially like when someone files

00:56:23.700 --> 00:56:26.100
an issue and like they, we don't know what's wrong with them.

00:56:26.100 --> 00:56:28.980
Like sometimes I'll just like, where did this thing even come from?

00:56:28.980 --> 00:56:30.260
And then just use like pip depth tree.

00:56:30.260 --> 00:56:31.360
I think that's, it's really cool.

00:56:31.360 --> 00:56:32.160
And it's like really simple.

00:56:32.160 --> 00:56:35.520
But yeah, I think it definitely has saved me a couple hours of time.

00:56:35.520 --> 00:56:35.880
So.

00:56:35.880 --> 00:56:36.260
It's cool.

00:56:36.260 --> 00:56:37.440
I've used it for my own stuff.

00:56:37.440 --> 00:56:41.120
I hadn't thought about using it for tech support, but yeah, of course, because then

00:56:41.120 --> 00:56:44.280
people run into problems because their environments are screwed up and they say they have a thing

00:56:44.280 --> 00:56:46.880
or they don't, or they say they have a version of a thing, but they don't.

00:56:47.320 --> 00:56:50.900
And with this, you can just say, run this one command and it'll give you like a really

00:56:50.900 --> 00:56:54.900
cool, they have all these things installed and this is installed because it's required.

00:56:54.900 --> 00:56:55.840
Yeah, exactly.

00:56:55.840 --> 00:56:56.760
It's really nice.

00:56:56.760 --> 00:56:56.980
Yeah.

00:56:56.980 --> 00:56:57.180
Cool.

00:56:57.180 --> 00:56:58.240
Excellent recommendation.

00:56:58.240 --> 00:56:58.800
All right.

00:56:58.800 --> 00:56:59.860
Final call to action.

00:56:59.860 --> 00:57:01.540
People want to get started with Gradio.

00:57:01.540 --> 00:57:02.420
What do you tell them?

00:57:02.420 --> 00:57:07.180
Hit install Gradio and then go to gradioapp.com and then get see the demos there.

00:57:07.180 --> 00:57:09.500
In our website, there's a link to our discord server.

00:57:09.500 --> 00:57:12.320
So yeah, join the discord and say hi.

00:57:12.320 --> 00:57:13.660
And then yeah, there's lots of people there.

00:57:13.660 --> 00:57:14.520
We're willing to help.

00:57:14.520 --> 00:57:17.140
And then yeah, never hesitate to file an issue.

00:57:17.520 --> 00:57:20.640
What's really cool about this is like seeing that the demos that people build and like

00:57:20.640 --> 00:57:24.360
people build stuff that I frankly push the limits of what I thought people could build

00:57:24.360 --> 00:57:25.160
with Gradio.

00:57:25.160 --> 00:57:26.800
And it's really cool seeing that.

00:57:26.800 --> 00:57:27.500
Yeah, that's awesome.

00:57:27.500 --> 00:57:31.260
Don't be afraid to, or don't hesitate to build really cool stuff with Gradio and think, well,

00:57:31.260 --> 00:57:32.880
we're really good about amplifying that.

00:57:32.880 --> 00:57:37.180
So if you have something really cool, just like tag the Gradio Twitter account or reach

00:57:37.180 --> 00:57:38.540
out to us on discord or something.

00:57:38.540 --> 00:57:39.820
We'll amplify it for you.

00:57:39.820 --> 00:57:39.980
Cool.

00:57:39.980 --> 00:57:41.160
Well, excellent project.

00:57:41.160 --> 00:57:43.080
And thank you for being on the show.

00:57:43.080 --> 00:57:44.060
Thank you for having me, Michael.

00:57:44.060 --> 00:57:44.620
I had a lot of fun.

00:57:44.620 --> 00:57:45.180
Yeah, same.

00:57:46.980 --> 00:57:49.540
This has been another episode of Talk Python To Me.

00:57:49.540 --> 00:57:51.360
Thank you to our sponsors.

00:57:51.360 --> 00:57:52.960
Be sure to check out what they're offering.

00:57:52.960 --> 00:57:54.400
It really helps support the show.

00:57:54.400 --> 00:57:59.380
The folks over at JetBrains encourage you to get work done with PyCharm.

00:57:59.380 --> 00:58:04.940
PyCharm Professional understands complex projects across multiple languages and technologies.

00:58:05.280 --> 00:58:10.600
So you can stay productive while you're writing Python code and other code like HTML or SQL.

00:58:10.600 --> 00:58:15.720
Download your free trial at talkpython.fm/done with PyCharm.

00:58:15.720 --> 00:58:18.140
Take some stress out of your life.

00:58:18.140 --> 00:58:23.600
Get notified immediately about errors and performance issues in your web or mobile applications with

00:58:23.600 --> 00:58:23.920
Sentry.

00:58:23.920 --> 00:58:28.920
Just visit talkpython.fm/sentry and get started for free.

00:58:29.020 --> 00:58:32.520
And be sure to use the promo code talkpython, all one word.

00:58:32.520 --> 00:58:34.220
Want to level up your Python?

00:58:34.220 --> 00:58:38.260
We have one of the largest catalogs of Python video courses over at Talk Python.

00:58:38.260 --> 00:58:43.440
Our content ranges from true beginners to deeply advanced topics like memory and async.

00:58:43.440 --> 00:58:46.100
And best of all, there's not a subscription in sight.

00:58:46.100 --> 00:58:49.000
Check it out for yourself at training.talkpython.fm.

00:58:49.140 --> 00:58:53.680
Be sure to subscribe to the show, open your favorite podcast app, and search for Python.

00:58:53.680 --> 00:58:55.000
We should be right at the top.

00:58:55.000 --> 00:59:00.160
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

00:59:00.160 --> 00:59:04.360
and the direct RSS feed at /rss on talkpython.fm.

00:59:04.360 --> 00:59:07.780
We're live streaming most of our recordings these days.

00:59:07.780 --> 00:59:11.200
If you want to be part of the show and have your comments featured on the air,

00:59:11.200 --> 00:59:15.580
be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

00:59:15.580 --> 00:59:17.480
This is your host, Michael Kennedy.

00:59:17.480 --> 00:59:18.760
Thanks so much for listening.

00:59:18.760 --> 00:59:19.940
I really appreciate it.

00:59:19.940 --> 00:59:21.860
Now get out there and write some Python code.

00:59:21.860 --> 00:59:27.380
music

00:59:27.380 --> 00:59:33.220
music

00:59:33.220 --> 00:59:36.760
music

00:59:36.760 --> 00:59:37.780
music

00:59:37.780 --> 00:59:39.560
music

00:59:39.560 --> 00:59:40.600
music

00:59:40.600 --> 00:59:41.600
Thank you.

00:59:41.600 --> 00:59:42.600
Thank you.

