WEBVTT

00:00:00.001 --> 00:00:03.860
In this episode, we catch up with David Crook, a developer evangelist at Microsoft.

00:00:03.860 --> 00:00:09.020
He is a co-organizer for the Fort Lauderdale Machine Learning User Group and is involved

00:00:09.020 --> 00:00:12.900
in many more user groups and meetups. You'll hear about some really cool projects where

00:00:12.900 --> 00:00:16.320
they're using Python and TensorFlow to work on simple things like

00:00:16.320 --> 00:00:19.880
growing more food to help feed the world. This is Talk Python to Me,

00:00:19.880 --> 00:00:23.960
episode 73, recorded August 25th, 2016.

00:00:23.960 --> 00:00:53.940
Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries,

00:00:54.040 --> 00:00:58.700
the ecosystem, and the personalities. This is your host, Michael Kennedy. Follow me on Twitter

00:00:58.700 --> 00:01:03.620
where I'm @mkennedy. Keep up with the show and listen to past episodes at talkpython.fm

00:01:03.620 --> 00:01:09.760
and follow the show on Twitter via at Talk Python. This episode is brought to you by Hired and now

00:01:09.760 --> 00:01:14.720
Capital One. They both have great offers for Python developers, so please check out what

00:01:14.720 --> 00:01:19.300
they're offering when you hear their spot. It helps support the show. David, welcome to the show.

00:01:19.300 --> 00:01:23.920
Hi, Michael. It's good to be here. Yeah, it's great to have you here. I'm super excited to talk about

00:01:23.920 --> 00:01:28.540
all the cool machine learning and Python stuff you guys have going on over there at Microsoft and in

00:01:28.540 --> 00:01:33.780
your little area in particular. But before we get to all those stories, how did you get started in

00:01:33.780 --> 00:01:40.720
programming Python? So Python in particular is an interesting one because I resisted it for a long

00:01:40.720 --> 00:01:46.240
time. Let me step back a bit and just start. Where did I start with my parents were like, you're going to

00:01:46.240 --> 00:01:50.120
go to college and you're going to be a programmer. And I was like, I want to be an archaeologist, not a

00:01:50.120 --> 00:01:55.560
programmer. And then they kind of said, well, we're not going to pay for college if you don't

00:01:55.560 --> 00:02:00.560
do programming. So I said, all right, I guess I'll do it. So it really got kicked off around college.

00:02:00.560 --> 00:02:05.920
And I started a video game club. I did a lot of XNA programming.

00:02:06.680 --> 00:02:12.760
That's cool. So XNA, just for people listening, XNA was like a high level game programming environment

00:02:12.760 --> 00:02:18.840
that you could write games for both Windows and Xbox and C#, right? But it abstracted a lot

00:02:18.840 --> 00:02:20.300
of the game engine stuff, right?

00:02:20.300 --> 00:02:24.620
Oh, yeah. Yeah. And when you're just getting started into programming, like you don't want to have to sit

00:02:24.620 --> 00:02:30.760
there and figure out how to do like different swaps with the GPU and all that kind of stuff. It was just

00:02:30.760 --> 00:02:38.480
a really good way to get into programming, throw it on your Xbox and be able to have something that's

00:02:38.480 --> 00:02:45.200
useful and like a lot your own. So, you know, like if you're doing a lot of game mods, you were kind of

00:02:45.200 --> 00:02:50.720
stuck with whatever you had in that environment. XNA was just whatever you want to do and gave you just a,

00:02:50.720 --> 00:02:54.460
you know, high level abstraction on it. So that was a really cool start.

00:02:54.780 --> 00:02:58.320
Awesome. So you had a group in college doing that, huh?

00:02:58.320 --> 00:03:03.240
Yeah. You know, I didn't really know how to code that much. So I discovered that if I surrounded

00:03:03.240 --> 00:03:09.740
myself with a bunch of people who could, that I could hopefully learn from them. So I formed a

00:03:09.740 --> 00:03:15.500
little group and basically recruited a bunch of people to teach me in the guise that I was teaching them.

00:03:15.500 --> 00:03:21.420
How interesting. You know, I think that's really common and really effective. I 100% agree with you

00:03:21.420 --> 00:03:27.100
that surrounding yourself with programmers is almost key to making you a programmer. You can do it just

00:03:27.100 --> 00:03:32.120
on your own, but it's, it's really not the same experience. And I don't know very many other groups

00:03:32.120 --> 00:03:37.600
that are like that. Like do lawyers say, Hey, let's all just get together after work and just talk about

00:03:37.600 --> 00:03:45.740
law, like passionately, you know, maybe, maybe some, I mean, there's plumbers don't necessarily do that.

00:03:45.740 --> 00:03:50.300
Right. I know plumbers have a real craft and expertise and they might have apprenticeships,

00:03:50.300 --> 00:03:55.660
but this, like, we're so excited. We want to just get together and make everybody better. It seems

00:03:55.660 --> 00:04:00.260
fairly unique to programming. And I think that's one of the reasons it's so awesome, right?

00:04:00.260 --> 00:04:04.580
Yeah. You know, I think there's a couple of trades maybe where they do that kind of thing. Like,

00:04:04.660 --> 00:04:12.000
my uncle is a, he's in construction and does industrial air conditioning. And I guess they

00:04:12.000 --> 00:04:17.120
have like a builder's guild, but it's not nearly like what you see in the tech ecosystem where you

00:04:17.120 --> 00:04:22.440
can just like hop online and be like, I want to go to some really obscure group in my area. And bam,

00:04:22.440 --> 00:04:24.640
you found it. It's like, holy cow, that exists.

00:04:25.640 --> 00:04:30.780
Yeah, absolutely. And you actually have a big hand in those existing in Florida, which we'll get to,

00:04:30.780 --> 00:04:35.980
but I interrupted your story about, moving on towards Python, but your path there.

00:04:35.980 --> 00:04:40.840
Yeah. Yeah. So I started, it was a lot of C# development and then, you know, schools like,

00:04:40.840 --> 00:04:45.780
we're going to teach you this Java thing. I graduated, worked through Microsoft for a while,

00:04:45.780 --> 00:04:51.080
and then, started discovering this machine learning. IOT space was a really neat place to get

00:04:51.080 --> 00:04:55.440
into. And, I keep seeing this Python thing pop up over and over again. I was like,

00:04:55.440 --> 00:04:59.420
Oh, it's another language. I already know like seven. I don't want to know another one. Let's

00:04:59.420 --> 00:05:06.560
see how long I can put it off for. So I think I put learning Python off for about four years until

00:05:06.560 --> 00:05:13.900
like recently I finally broke down and said, all right, that's the last library hits the, it's the

00:05:13.900 --> 00:05:20.340
straw in the camel's back. I better just break down and learn this thing. And, so I started

00:05:20.340 --> 00:05:26.180
picking it up about two or three months ago, just kind of slowly to just explore and see.

00:05:26.180 --> 00:05:32.320
And, once I kind of got in, it was like, you know, a lot of this is really familiar.

00:05:32.320 --> 00:05:37.600
It's not really that different from anything else. And tactically it's a little print, but you know,

00:05:37.600 --> 00:05:42.660
a lot of the same kind of stuff, but I get all these other libraries and capabilities along with it.

00:05:42.660 --> 00:05:49.840
So it's been a really nice, transition, and a lot less painful than I thought it would be.

00:05:49.840 --> 00:05:55.960
Yeah. I think there's a lot of myths about Python that are out there. And once you get into it,

00:05:55.960 --> 00:06:00.000
it's, it's a little different than maybe what the preconceived notions about it might be.

00:06:00.000 --> 00:06:04.200
You know, I think some of the myths were like, you know, I was challenged with a couple of them.

00:06:04.200 --> 00:06:08.640
One was like the performance thing, like, Oh, Python's not performant enough or whatever.

00:06:08.640 --> 00:06:14.800
And I was like, I was like, well, at the end of the day, my performance is mostly, like in web,

00:06:14.800 --> 00:06:21.040
like stateless servers, or it's going to be from GPU compute. Well, it has great GPU libraries.

00:06:21.200 --> 00:06:26.580
And then, okay. I don't know if flask has the most performance, but it's a stateless web server.

00:06:26.580 --> 00:06:31.500
So I can just always throw more servers at the problem. So I'd rather just have something that

00:06:31.500 --> 00:06:35.340
does everything and reduce the number of skills I need and throw servers at it.

00:06:35.900 --> 00:06:38.840
than, fight with trying to learn something else.

00:06:38.840 --> 00:06:46.280
Yeah, that's a good point. I mean, the performance story around Python is not straightforward. I think

00:06:46.280 --> 00:06:49.220
it's pretty good in a lot of areas. And there are certainly some areas where

00:06:49.220 --> 00:06:56.460
other languages like you were coming from .NET, for example, where it is better over there. But,

00:06:56.460 --> 00:07:03.320
you know, for example, I did a conference talk that was trying to compare working with a

00:07:03.320 --> 00:07:08.660
NoSQL schema-less database and saying, should use a dynamic language or a statically typed language.

00:07:08.660 --> 00:07:14.920
And I chose C# and Python as the two comparison languages. And the Python web app was actually

00:07:14.920 --> 00:07:20.680
quicker end-to-end from the browser perspective than C#. So I think part of the story is

00:07:20.680 --> 00:07:26.060
the C# code surely ran faster because it's JIT compiled, right, to machine instructions. But

00:07:26.060 --> 00:07:33.040
the framework was doing less so that it actually was overall faster, which is

00:07:33.040 --> 00:07:38.180
part of that interesting trade-off. Like, you wouldn't think that it would be, but there's

00:07:38.180 --> 00:07:42.540
just so many factors that it's hard to say. So yeah, that's cool. I think most of the time it's

00:07:42.540 --> 00:07:44.280
good, but you've got to just test it, right?

00:07:44.280 --> 00:07:48.000
Yeah. And from what I've seen most of the time, it's just a shot in the dark. You know, you don't

00:07:48.000 --> 00:07:52.580
really know what it's doing under the hood anyways. So it's like, you just cross your fingers and

00:07:52.580 --> 00:07:57.480
hope. And, you know, even in the other worlds, I end up like, even in C#,

00:07:57.480 --> 00:08:01.740
eventually you're like, okay, now you need a West Coast server and an East Coast server. Oh no,

00:08:01.800 --> 00:08:05.200
we've got a bunch of people coming from Texas. Let's throw a central server in there. So you're

00:08:05.200 --> 00:08:10.360
doing it anyways. You might as well just pick what is, gets the job done the most with the

00:08:10.360 --> 00:08:15.360
least number of headaches. And then that'd be in Python because you get all the nice machine

00:08:15.360 --> 00:08:22.100
learning tools and, and you get web servers and you get desktop and, the documentation

00:08:22.100 --> 00:08:29.800
is just absolutely phenomenal. Yeah. It's, it's a fantastic ecosystem. So before we move on to some

00:08:29.800 --> 00:08:35.780
sort of what you're up to nowadays, I did want to ask you, since you are sort of fresh to Python,

00:08:35.780 --> 00:08:42.980
what was surprisingly easy or, or nice about the language and what gave you challenges? You said a

00:08:42.980 --> 00:08:48.160
little bit, but like, give me the summary of your, your learning experience here while it's still fresh

00:08:48.160 --> 00:08:54.160
to your mind. Yeah. So, I've got a customer project that I'm working on now. so this is

00:08:54.160 --> 00:08:59.880
like the first real, like we're going to do something production level with it previously till about a

00:08:59.880 --> 00:09:04.900
couple of weeks ago, it was all just dipping my toes in and now we're going full on production level.

00:09:05.160 --> 00:09:15.120
Some of the easiest things was, Flask. Like I come from, ASP.NET MVC web API background and like Flask

00:09:15.120 --> 00:09:21.960
is basically just like that with like a different syntax. And I was like, this is phenomenally easy. Like

00:09:21.960 --> 00:09:28.220
the authentication and token stuff is all very similar. The way that you do the headers and decorators is all

00:09:28.220 --> 00:09:34.540
very similar. There's some nice things like Python doesn't really seem to care what kind of object you return.

00:09:34.540 --> 00:09:40.720
So from the same function, I can return like some ambiguous object one and some other completely

00:09:40.720 --> 00:09:46.180
different ambiguous object. And I'm just, that's really neat. I didn't think that was something that,

00:09:46.180 --> 00:09:52.540
uh, you know, C#. I don't know how you do that. Usually you do a wrapper with like generic types and,

00:09:52.540 --> 00:09:57.880
uh, you know, C# six made that easier, but yeah, there's so much ceremony in the static languages,

00:09:57.880 --> 00:10:03.020
right? Even the nice ones. Yeah. You know, so that was a really nice thing.

00:10:03.920 --> 00:10:10.260
Some of the challenges really is just kind of getting used to some of the tooling around,

00:10:10.260 --> 00:10:14.960
uh, Python. So I spent like forever trying to figure out which editors I wanted to use and

00:10:14.960 --> 00:10:21.220
how packaging worked. it took me a while to just like, kind of just conceptualize packages

00:10:21.220 --> 00:10:25.900
because the way packages are in Python are very different because it acts more like a,

00:10:25.900 --> 00:10:30.700
it's like a script. It's not like a compiled language. So you don't have like different projects

00:10:30.700 --> 00:10:36.600
libraries. You have packages, which literally are just script files with initialization to it. And

00:10:36.600 --> 00:10:42.260
there's no, there's reduced ceremony and how that happens. So even with the reduced ceremony,

00:10:42.260 --> 00:10:47.700
it's just not what I was used to. So coming to it from more of the statically typed and,

00:10:47.700 --> 00:10:53.500
compiled language background was like just a weird transition and took a little bit of mental getting

00:10:53.500 --> 00:10:59.660
over. Yeah. It's interesting when you're learning stuff that somewhat the challenges of learning

00:10:59.660 --> 00:11:05.440
things, programming techniques and so on has to do with, is the thing you're learning actually hard?

00:11:05.440 --> 00:11:09.580
And the other one just has to do with your preconceived notions of how things should be done.

00:11:09.580 --> 00:11:16.660
Right? Yeah. Yeah. I was trying to like figure out how to stick, extra libraries. And I was doing a,

00:11:16.760 --> 00:11:21.340
um, just doing all this extra abstraction that I just didn't need to do. I was like, okay,

00:11:21.340 --> 00:11:27.020
we're going to do some dependency injections that I can swap out my backend. Cause like right now I'm

00:11:27.020 --> 00:11:31.800
pointed to some local files, but I want to swap out with the actual database. And right now they're on

00:11:31.800 --> 00:11:37.360
SQL, but they're probably going to go to Mongo. So I needed to figure out how to easily swap that out.

00:11:37.360 --> 00:11:43.500
just, I think it ended up just being easier to not use something like dependency injection because

00:11:43.500 --> 00:11:50.020
the abstraction and, Python is almost, it wasn't quite as necessary as it was before, I guess is

00:11:50.020 --> 00:11:54.360
what it seems to be boiling down to. I'm still working through that problem specifically though.

00:11:54.360 --> 00:11:59.740
Yeah. It's interesting. If you look at the design patterns that typically were created,

00:11:59.740 --> 00:12:05.940
decorator state, all these various design patterns, and you look at them for static languages,

00:12:05.940 --> 00:12:10.300
there's so much ceremony and formalization. And then you, you look at them in the Python world and

00:12:10.300 --> 00:12:15.180
they're usually, you know, a couple of lines, like, Oh, that's all it is. It's nice, but it's a mind

00:12:15.180 --> 00:12:19.940
shift for sure. Yeah. There was one thing that I thought of that actually was more of a challenge.

00:12:19.940 --> 00:12:27.260
So I have a fairly hefty F sharp background and, I really like functional composition and

00:12:27.260 --> 00:12:33.220
pipelining and, there wasn't anything out of the box, especially with like a data manipulation

00:12:33.220 --> 00:12:39.720
pipelines. I wasn't finding very much out of the box for that in Python. So there's the pandas package,

00:12:39.720 --> 00:12:46.240
but it wasn't really set up so that I could kind of do functional composition easily, but using some

00:12:46.240 --> 00:12:52.980
of the decorators and kind of making up this infix thing. I'm not really sure how exactly it works. I got

00:12:52.980 --> 00:12:58.420
it to somehow work, but it gives me functional composition. It's just, instead of being out of the

00:12:58.420 --> 00:13:02.640
box, I had to kind of write it and I had to fight with it a little bit to make it happen.

00:13:02.640 --> 00:13:07.920
And there's some magic behind the scenes that I don't fully understand that somehow I got it to

00:13:07.920 --> 00:13:15.540
work. Whereas like in like, R has like the D play R and mag reader packages and F sharp just has

00:13:15.540 --> 00:13:19.760
it out of the box. Python, a little bit of a fight, but it works. And now I get what I wanted.

00:13:19.980 --> 00:13:25.340
Yeah. Okay. Really nice. Really nice. You work at Microsoft doing some interesting stuff and you

00:13:25.340 --> 00:13:31.340
said you kind of live inside the company, but also outside in a little bit of a bubble. So maybe tell

00:13:31.340 --> 00:13:32.180
us what do you do there?

00:13:32.180 --> 00:13:39.860
Yeah. So I'm a developer evangelist at Microsoft and, you know, the easiest way to think of what

00:13:39.860 --> 00:13:46.540
a developer evangelist is and does is that we spend about 50% of our time focusing on creating a healthy

00:13:46.540 --> 00:13:53.560
technology ecosystem in our area, typically focused around what we like to do. so I do IOT and

00:13:53.560 --> 00:13:58.620
machine learning. So you'll see there's a very healthy IOT machine learning ecosystem in South

00:13:58.620 --> 00:14:06.860
Florida. And then the other 50% of the time is spent working on customer engagement. So finding, some

00:14:06.860 --> 00:14:12.400
really cool stuff that, folks are working on in the area and just help them be successful with it.

00:14:12.400 --> 00:14:16.940
And it's interesting cause we don't charge any money. We're just focused on ensuring that people

00:14:16.940 --> 00:14:22.540
are successful with our technology and, getting insight from that and delivering it back to the

00:14:22.540 --> 00:14:29.360
product group. So it's very much a field position. And, you know, that said, I don't live in Redmond.

00:14:29.360 --> 00:14:36.720
I live in South Florida and, there's a very different kind of view because I'm not like at the

00:14:36.720 --> 00:14:42.880
Microsoft office 24 seven. I'm spending more time with people who are like outside of that world.

00:14:42.880 --> 00:14:48.720
You know, literally, I think we're about 3000 miles away or something like that. Yeah. You have to go

00:14:48.720 --> 00:14:50.940
diagonally across the entire United States.

00:14:50.940 --> 00:14:54.560
Yeah. That's about the maximum distance you can get in the continental United States. I think.

00:14:54.560 --> 00:15:00.560
Yeah. That was kind of a neat, neat thing for me. It was as far away from HQ as I can get without

00:15:00.560 --> 00:15:05.100
leaving the country. So it's a, it's a very interesting perspective because you get to see a

00:15:05.100 --> 00:15:11.960
lot of the inner workings of Microsoft without necessarily being a part of those inner workings

00:15:11.960 --> 00:15:18.840
24 seven. So it gives you a very different perspective on, kind of what like outside

00:15:18.840 --> 00:15:24.960
of Microsoft is doing. And you can, feed that back into Microsoft so that we can better build tools

00:15:24.960 --> 00:15:30.080
and technologies that are more aligned with what folks are doing. So if you see like, Hey,

00:15:30.080 --> 00:15:36.480
this technology, whatever it is, doesn't seem to work or meet exactly the expectations because really

00:15:36.480 --> 00:15:41.440
they're doing this. It gives you the perspective to provide that insight back.

00:15:41.440 --> 00:15:47.560
Yeah, that's cool. And we can definitely talk more about the shift in perspective at Microsoft around

00:15:47.560 --> 00:15:52.720
these types of things a little bit, but it, I think it's the short version for now is it's an

00:15:52.720 --> 00:15:58.120
interesting, it's an interesting change and those things are way more possible than they used to be.

00:15:58.120 --> 00:15:58.300
Right.

00:15:58.300 --> 00:16:07.620
I'm calling it the Satya decade or Satya era of Satya. It's very different. I get to have an Android phone.

00:16:07.620 --> 00:16:13.360
Exactly. That's so Satya Nadella, the new CEO has made a lot of, changes on how that works,

00:16:13.360 --> 00:16:13.600
right?

00:16:13.600 --> 00:16:21.300
Yeah. It's, it's very interesting. It's like, he's, he keeps using the term, customer obsessed.

00:16:21.480 --> 00:16:27.000
Like he wants us to be obsessed with our customer and just focus on the customer 110%,

00:16:27.000 --> 00:16:32.200
no matter what it is. And just make sure that they can be successful with what they want to do

00:16:32.200 --> 00:16:38.380
using what they want to use on the Microsoft platform. And it's a very different mentality

00:16:38.380 --> 00:16:41.620
shift than, what used to be in place.

00:16:41.620 --> 00:16:47.400
Yeah, absolutely. So you said you work with, IOT a little bit, internet of things.

00:16:47.480 --> 00:16:48.920
What, what do you guys have going on there?

00:16:48.920 --> 00:16:55.560
Yeah. So this has been a really big space for us, lately. we have this whole IOT suite,

00:16:55.560 --> 00:17:02.940
which is there's primarily cloud hosted services, but we have some on-premise offerings, but it's all

00:17:02.940 --> 00:17:10.240
about being able to pump as much data as you possibly can into the cloud and do meaningful things with it.

00:17:10.320 --> 00:17:16.180
So there's a variety of different projects that I've seen where we do this, everything from

00:17:16.180 --> 00:17:23.640
collecting telemetry from pipelines to creating intelligent teddy bears to there was a water flow

00:17:23.640 --> 00:17:29.700
analysis project and intelligence skateboards, just all sorts of cool stuff.

00:17:30.160 --> 00:17:33.780
Yeah. That sounds really awesome. And then what does machine learning have to do with it?

00:17:33.780 --> 00:17:38.900
A lot of that's around delivering, value back through the data that you collect through

00:17:38.900 --> 00:17:46.820
IOT devices. At least my focus area is. So, you know, if you're collecting telemetry, you have maybe

00:17:46.820 --> 00:17:55.600
pH and, humidity temperature, and you might have vibration. It's okay. You've collected all of this

00:17:55.600 --> 00:18:01.080
information. You're streaming it all up into the cloud, but what do you do with it? And, machine

00:18:01.080 --> 00:18:08.560
learning will help you recognize various patterns and attributes to that sensory data so that while the

00:18:08.560 --> 00:18:15.420
data is actually in motion in the real-time data pipeline, you can actually execute machine learning

00:18:15.420 --> 00:18:23.540
algorithms against that in motion data and surface interesting things to be aware of. So for example,

00:18:23.540 --> 00:18:29.020
if you see a pattern that looks kind of like, Hey, there's about to be a leak in your pipeline, you can

00:18:29.020 --> 00:18:37.780
actually recognize that pattern in the data pipeline and then put a message on a, on a data queue for like a

00:18:37.780 --> 00:18:45.460
worker role to pick up and send SMS text messages to the engineers and the executives saying, dude, your pipe's about

00:18:45.460 --> 00:18:48.140
to explode. You need to go like, take care of us now.

00:18:48.140 --> 00:18:53.480
Yeah, that's really cool. So that's, that's really different than, oh, this is just outside the parameters.

00:18:53.480 --> 00:19:01.020
But, you know, something instead, like the last four times we saw the pipe books blowed, you know, it kind of did this.

00:19:01.020 --> 00:19:02.180
It looks a lot like this.

00:19:02.180 --> 00:19:08.100
And the machine says, you know, that looks a lot like something I've seen before. And you didn't like it last time. Go check it out.

00:19:19.100 --> 00:19:29.860
This portion of Talk Python To Me is brought to you by Hired. Hired is the platform for top Python developer jobs. Create your profile and instantly get access to 3,500 companies who will work to compete with you.

00:19:30.000 --> 00:19:58.540
Take it from one of Hired's users who recently got a job and said, I had my first offer on Thursday after going live on Monday and I ended up getting eight offers in total. I've worked with recruiters in the past, but they've always been pretty hit and miss. I tried LinkedIn, but I found Hired to be the best. I really like knowing the salary up front. Privacy was also a huge seller for me. Sounds awesome, doesn't it? Well, wait until you hear about the sign-in bonus. Everyone who accepts a job from Hired gets $1,000 sign-in bonus. And as Talk Python listeners, it gets way sweeter.

00:19:58.600 --> 00:20:09.340
Use the link Hired.com slash Talk Python To Me and Hired will double the signing bonus to $2,000. Opportunities knocking. Visit Hired.com slash Talk Python To Me and answer the door.

00:20:17.020 --> 00:20:35.440
That's cool. I've thought about that for software, right? Like Netflix actually uses machine learning to monitor their servers and their apps in production. But that seems to me like really, I don't know, really clear and cut like what it is you're processing. But for pipes and all sorts of physical things, that's really cool.

00:20:35.700 --> 00:21:01.880
Yeah, I really wanted to spend some time like getting out into the physical world a bit so that I could see it. Like I really want to like, you know, everything that we do as software engineers is virtual all the time. And I wanted to see, you know, is there a way to create a stronger relationship between the physical and the virtual and kind of pass information between those two worlds in a meaningful way that delivers value to our customers?

00:21:01.880 --> 00:21:25.880
And IoT and machine learning together really is a powerful way to do that. And it's neat, especially with like a lot of the stuff that's coming out. Like, I don't know if anyone watches GPU conference, but NVIDIA just came out with this RoboCup dev car. Literally, it's like a Formula One race car. That's like a self-driving car platform for like Formula One race cars.

00:21:25.880 --> 00:21:33.740
Yeah, I just did hear that they just came out with CPU, GPU type thing for cars. That's really cool.

00:21:33.740 --> 00:21:57.300
Yeah, it's, you know, and seeing that kind of technology come out is absolutely amazing. So that will be an example of something that's really powerful that you can stick on any number of sophisticated devices. And you will collect a lot of the information and video feeds from that device that it's computing, stream that up to the cloud.

00:21:57.300 --> 00:22:11.500
So you can optimize your algorithms, your self-driving car algorithms, your image recognition, what have you. And then basically, you get back a matrix of numbers, huge matrices of numbers, and you just shove that back down onto the device.

00:22:12.240 --> 00:22:17.200
And it's a really neat pipeline, because you, I don't know, it's just so cool to see that happening.

00:22:17.200 --> 00:22:24.280
Yeah, it is really cool to see those dedicated things. I mean, GPUs used to be just for graphics, right?

00:22:24.280 --> 00:22:27.920
But now they're for so much more. And you said you're doing some stuff with GPU wrappers.

00:22:28.680 --> 00:22:44.180
But it's been a little while since I've talked about this whole programming logic on GPUs and why you might care. But maybe give people, like new listeners, a quick summary. Like, why would people program GPUs over just like regular code? Like, what's the performance story there?

00:22:44.540 --> 00:23:02.240
Yeah, so it's, I'm taking a look at the Microsoft Cocos database as an example. So you can go look at this. I think it's mscocos.com, or if you just like Bing, Microsoft Cocos database, you'll find it. You can Google it, too. I'm sure you'll find it both ways.

00:23:02.540 --> 00:23:26.380
Anyways, it's an image recognition database that you can use. And there's a challenge out there. Anyways, what's interesting about images, especially if you're talking like 1080 by 1920, literally, to get the number of features or columns that you're going to need to compute against, you multiply 1920 times 1080. That's the number of pixels. And if you have an RGB image, you have three channels. So now multiply that number by three.

00:23:27.020 --> 00:23:35.480
You're upwards in the 5 million representations of an image. So, and each one of those pixels is potentially important.

00:23:35.480 --> 00:23:37.460
Right. And how many frames a second, right?

00:23:37.460 --> 00:23:54.800
Yeah. So if you're doing 60 frames a second, and you have one second, you just generated 60 times whatever that giant freaking number was. And that's, that's one second worth of information. Now, out of that, you'll probably extract a few key images and compare against that.

00:23:54.800 --> 00:24:18.500
But, you know, at the end of the day, you're talking huge quantities of compute data. And when you think about a GPU versus a CPU, you're doing a single mathematical computation. And on a CPU, you have, you have one. So you can do one computation at a time. Maybe you have six CPUs in like 12 virtual processors. So maybe you can do 12.

00:24:18.840 --> 00:24:35.080
Well, on a GPU, I just built my own dev box. I've got the new Titan X. Each one of those has 3,100 processors. So on my dev box that I have, I have about 6,000 processors.

00:24:35.080 --> 00:24:51.240
So with each one of those, I can actually do a numerical computation against each pixel, literally 6,000 times more and faster than a CPU because I have 6,000 processors instead of one.

00:24:51.240 --> 00:24:54.480
Yeah, that's insane. When you think about the parallelism differences there, right?

00:24:54.980 --> 00:25:06.200
Yeah. So when you're thinking GPU versus CPU, it's how, how are you paralyzing your workload and what is it specific for? And the other things are like a GPU has its own internal memory.

00:25:06.200 --> 00:25:17.720
So each one of my GPUs has 12 gigabytes of internal memory. So I can load, because I've got two, I can load 24 gigabytes of image data onto those.

00:25:17.720 --> 00:25:24.920
And I have them set up with the standard SLI bridge. So it's basically a video, like a super awesome video game box.

00:25:24.920 --> 00:25:29.800
One of the benefits of deep learning is you can play awesome video games on your workstation.

00:25:30.420 --> 00:25:36.120
But you transfer, you load the data on and you transfer the model back and forth over the SLI bridge.

00:25:36.120 --> 00:25:48.120
And it allows you to compute so much faster because you have the onboard GPU memory, which is typically GDRG 5X.

00:25:48.120 --> 00:25:49.520
I don't even know.

00:25:49.520 --> 00:25:56.860
It's the one with the 5 and the X in it, as opposed to DDR4, which is just a much faster memory.

00:25:56.860 --> 00:26:04.820
So it's a more performant way to do large quantities of data that have excessive numbers of features.

00:26:04.820 --> 00:26:15.580
Whereas like you might use something like Spark if you have large quantities of data, but maybe not as much parallelism in each computation task.

00:26:15.580 --> 00:26:23.040
Like in an image, you know, you have 1920 times 1080 times three number of computations per observation.

00:26:23.240 --> 00:26:32.260
Whereas like in business data, you might have upwards of 200 computations, maybe a thousand computations per observation.

00:26:32.260 --> 00:26:33.820
Right. That makes sense.

00:26:33.820 --> 00:26:38.140
So how do you program these GPUs? Can you do that from Python?

00:26:38.140 --> 00:26:38.940
You can.

00:26:38.940 --> 00:26:42.560
So there's two libraries that I was evaluating.

00:26:42.560 --> 00:26:46.580
There's one that's made by Microsoft and there's one that's made by Google.

00:26:46.980 --> 00:26:48.520
Both are open sourced.

00:26:48.520 --> 00:26:53.860
The Microsoft one is CNTK or Computational Network Toolkit.

00:26:53.860 --> 00:26:57.580
I don't know if the Python wrappers are available yet.

00:26:57.580 --> 00:26:59.000
They should be sometime.

00:26:59.000 --> 00:27:00.320
You have to check their Git repo.

00:27:00.320 --> 00:27:02.400
I ended up not using that one.

00:27:02.400 --> 00:27:03.780
I went the Google route.

00:27:03.780 --> 00:27:06.960
I work for Microsoft and I get to use Google compute graphs.

00:27:06.960 --> 00:27:07.880
It's awesome.

00:27:07.880 --> 00:27:09.660
Welcome to the Satya era.

00:27:10.220 --> 00:27:11.400
So I'm using TensorFlow.

00:27:11.400 --> 00:27:13.860
It works wonderfully on Azure.

00:27:13.860 --> 00:27:15.900
It works wonderfully on my box.

00:27:15.900 --> 00:27:19.460
So I get to use Google technology on the Microsoft platform.

00:27:19.460 --> 00:27:22.420
So that's kind of how I get to use it with work.

00:27:22.420 --> 00:27:30.780
But the neat thing about TensorFlow is that you get to use Python and it has interactive and batch execution.

00:27:31.260 --> 00:27:36.120
So, you know, if you're just getting started into it and you're like, I don't know how this thing works.

00:27:36.120 --> 00:27:46.500
Well, pop open a console and start like having at it in interactive mode and outputting some stuff and just see what the heck happens and poke around with it.

00:27:46.500 --> 00:27:56.960
Whereas like a lot of the other compute frameworks require you're back to almost like compilation style where you generate your full graph.

00:27:56.960 --> 00:27:59.880
Then you more or less compile it and then execute it.

00:27:59.880 --> 00:28:03.020
And it shoots back really cryptic errors when something goes wrong.

00:28:03.020 --> 00:28:03.800
I see.

00:28:03.800 --> 00:28:10.300
So like you would write it in, let's just say, Python and then compile it to like shader language or something like that.

00:28:10.300 --> 00:28:12.620
You send over to the GPU and then get the answer back.

00:28:12.620 --> 00:28:13.120
Yeah.

00:28:13.120 --> 00:28:13.500
Yeah.

00:28:13.500 --> 00:28:15.460
That's kind of how most of them work.

00:28:15.460 --> 00:28:17.860
And TensorFlow has that capability as well.

00:28:17.860 --> 00:28:25.660
The benefit to doing it that way is that you actually take full advantage of everything that it does behind the scenes for you.

00:28:25.660 --> 00:28:32.740
Whereas when you run TensorFlow in interactive mode, you're just going to thrash your performance to you might as well be doing it on a CPU.

00:28:32.740 --> 00:28:40.240
But the benefit is that you can experiment and learn in interactive mode and then just swap your flag back to batch mode.

00:28:40.240 --> 00:28:42.100
And then you get all the performance goodness.

00:28:42.100 --> 00:28:42.880
Okay.

00:28:42.880 --> 00:28:43.640
That's really awesome.

00:28:43.880 --> 00:28:44.000
Yeah.

00:28:44.000 --> 00:28:48.740
So if you're doing machine learning or just real computational stuff, right?

00:28:48.740 --> 00:28:49.720
TensorFlow sounds great.

00:28:49.720 --> 00:28:50.380
Yeah.

00:28:50.380 --> 00:28:56.340
And it supports multi-GPU, multi-node, just really cool stuff.

00:28:56.340 --> 00:28:58.040
And I'm pretty excited.

00:28:58.040 --> 00:29:02.180
It's really expensive to buy GPUs, but now you get these rentable GPUs.

00:29:02.340 --> 00:29:08.380
Azure just went into private preview with the N-series and AWS has some virtualized ones.

00:29:08.380 --> 00:29:10.840
And you can get as many nodes as you want.

00:29:10.840 --> 00:29:12.380
Learn TensorFlow.

00:29:12.380 --> 00:29:16.560
And if you can't do it on your own box, just rent some GPUs.

00:29:16.560 --> 00:29:20.180
They're usually like $2 an hour or so for a GPU box on the cloud.

00:29:20.180 --> 00:29:20.720
Yeah.

00:29:20.720 --> 00:29:22.060
Maybe it was $2 a minute.

00:29:22.060 --> 00:29:24.180
I can't remember if it was $2 a minute or $2 an hour.

00:29:24.180 --> 00:29:25.240
I think it's $2 an hour.

00:29:25.240 --> 00:29:26.360
That's pretty awesome.

00:29:26.680 --> 00:29:26.980
Yeah.

00:29:26.980 --> 00:29:32.500
Really, it's helping democratize kind of scientific hyperscale computing.

00:29:32.500 --> 00:29:35.080
The cloud is just an absolutely phenomenal thing.

00:29:35.080 --> 00:29:40.140
Like, you know, before, like my workstation, I'm lucky to have had a lot of success in my

00:29:40.140 --> 00:29:41.120
career and my life.

00:29:41.120 --> 00:29:44.720
So I can go buy like a $5,000 workstation for work.

00:29:45.100 --> 00:29:47.360
That's not necessarily possible for everybody.

00:29:47.360 --> 00:29:53.860
But in the cloud, you just go grab a GPU box for a few hours and have a script that turns

00:29:53.860 --> 00:29:55.100
it on and turns it off for you.

00:29:55.100 --> 00:29:55.820
That's awesome.

00:29:55.820 --> 00:29:56.120
Yeah.

00:29:56.120 --> 00:30:01.460
I mean, even if you work at a company where they would buy you a $5,000 GPU box, if you

00:30:01.460 --> 00:30:06.720
have no idea if it's actually going to solve your problem, spending $10 to find out and then

00:30:06.720 --> 00:30:12.560
buying the $5,000 machine is really a nice possibility rather than, you know, leaping in and seeing if

00:30:12.560 --> 00:30:14.180
it's going to work and maybe it won't.

00:30:14.180 --> 00:30:14.540
Yeah.

00:30:14.540 --> 00:30:18.420
And yeah, I think there's other benefits to having the cloud GPUs as well.

00:30:18.420 --> 00:30:20.840
Mostly that they're even faster than mine.

00:30:20.840 --> 00:30:26.040
So like the, I don't, I don't, I'm not terribly familiar with AWS is on frame what they have,

00:30:26.040 --> 00:30:30.980
but ours we've got, you can get four of the latest ones that Nvidia has.

00:30:30.980 --> 00:30:35.620
And that's the one that's $2 an hour and you get direct hardware access is like, okay, so

00:30:35.620 --> 00:30:40.400
it was five grand for me to get like a box with two GPUs and they're not even the top of

00:30:40.400 --> 00:30:41.340
the line or the Titans.

00:30:41.340 --> 00:30:42.740
They're not the Kepler series.

00:30:42.740 --> 00:30:46.500
Whereas I can go and get the Kepler series and I got four of them and all the backing

00:30:46.500 --> 00:30:48.900
hardware at $2 an hour.

00:30:48.900 --> 00:30:54.080
I just say, it's just, my mind is getting blown with what you can get and what price you can

00:30:54.080 --> 00:30:54.640
get it for.

00:30:55.280 --> 00:30:57.280
We definitely live in a special time, don't we?

00:30:57.280 --> 00:30:57.680
Yeah.

00:30:57.680 --> 00:30:59.780
I'm feeling a little spoiled about that.

00:30:59.780 --> 00:31:03.940
So you talked about your career and you said maybe it's a good time to touch on that.

00:31:03.940 --> 00:31:12.220
You said that you had a bit of a rough start in college and the contrast between college

00:31:12.220 --> 00:31:15.300
career and professional programmer career are really different.

00:31:15.360 --> 00:31:16.700
You had some great tips there.

00:31:16.700 --> 00:31:17.100
Yeah.

00:31:17.100 --> 00:31:17.500
Yeah.

00:31:17.500 --> 00:31:23.480
So I was pretty much your typical college student, went in and was like, I don't want to

00:31:23.480 --> 00:31:24.180
do programming.

00:31:24.180 --> 00:31:26.400
And parents were like, you're going to do programming.

00:31:26.400 --> 00:31:29.460
And it's like, okay, well I'm going to be rebellious while they do programming.

00:31:29.920 --> 00:31:34.140
So I was pretty much throwing parties all the time and, you know, doing all that kind of

00:31:34.140 --> 00:31:34.540
stuff.

00:31:34.540 --> 00:31:37.940
And, was like, I had a super low GPA.

00:31:37.940 --> 00:31:39.740
Like it was my senior year.

00:31:39.740 --> 00:31:44.300
My GPA was like 2.4 and you needed a 2.6 to graduate.

00:31:44.300 --> 00:31:48.500
And I was like, crap, I've got three years behind me with a 2.4.

00:31:48.500 --> 00:31:50.220
I need a minimum 2.6.

00:31:50.220 --> 00:31:51.160
I can get out of here.

00:31:51.160 --> 00:31:51.920
Yeah.

00:31:51.920 --> 00:31:53.400
It's a little stressed on the last year.

00:31:53.400 --> 00:31:58.400
And, man, I wish I had focused and took advantage of the opportunity and seeing it

00:31:58.400 --> 00:32:01.560
for what it was when I had it, but, that's not what I did.

00:32:01.560 --> 00:32:04.480
So, you know, I had, I had to deal with that situation.

00:32:04.480 --> 00:32:11.680
So I started a bunch of groups like, you know, the game dev group, study groups, programming

00:32:11.680 --> 00:32:12.280
groups.

00:32:12.280 --> 00:32:18.080
I had about three different groups that I was managing and running to just hopefully surround

00:32:18.080 --> 00:32:20.180
myself with enough experts that I could pass.

00:32:20.180 --> 00:32:26.420
And I made straight A's the final, the final, year, I was able to get, I think like

00:32:26.420 --> 00:32:30.600
a two seven GPA, which was enough to graduate college with my major.

00:32:30.600 --> 00:32:37.040
And, it created a really difficult hiring experience, but luckily, like I did the interview

00:32:37.040 --> 00:32:39.680
for Microsoft and they didn't ask me what my GPA was.

00:32:39.680 --> 00:32:42.380
They, they wanted to ask what I did and what I liked doing.

00:32:42.380 --> 00:32:47.380
And luckily that last year of college, I was like hacking on, like I had a motorcycle with

00:32:47.380 --> 00:32:52.620
like a performance module that you could like, hack into and make your motorcycle go faster.

00:32:52.620 --> 00:32:58.260
So I, hacked into that thing and like did all sorts of craziness to my motorcycle

00:32:58.260 --> 00:32:59.840
and, made a bunch of video games.

00:32:59.840 --> 00:33:01.580
It was like, here's what I got.

00:33:01.580 --> 00:33:05.220
Microsoft is more interested in what I could do and not what my GPA was.

00:33:05.220 --> 00:33:10.100
So I got super lucky that they never asked that question and, was able to get a job.

00:33:10.100 --> 00:33:11.780
That's really cool.

00:33:11.880 --> 00:33:17.520
You know, I mean, I've been in hiring roles at companies I've been at and we, we almost

00:33:17.520 --> 00:33:18.940
didn't care what degree you had.

00:33:18.940 --> 00:33:23.740
If you had a PhD, it gave you a little more credibility than, you know, a college degree,

00:33:23.740 --> 00:33:27.140
a little bit more, which gave you a little more credibility than no degree.

00:33:27.140 --> 00:33:29.280
But it really was, what can you do?

00:33:29.280 --> 00:33:29.960
What have you done?

00:33:29.960 --> 00:33:30.940
Do you have proof of that?

00:33:31.100 --> 00:33:33.500
And I think that's also pretty neat about programming.

00:33:33.500 --> 00:33:34.080
Yeah.

00:33:34.080 --> 00:33:38.620
And that was actually Microsoft was the first company I interviewed with that was like that.

00:33:38.620 --> 00:33:43.220
The issue I had was getting just into the first interview.

00:33:43.220 --> 00:33:47.060
You know, you submit your resume and they have like these processors that go and say,

00:33:47.060 --> 00:33:49.580
not three, oh, not three, oh, not three, oh, not three, oh.

00:33:49.580 --> 00:33:51.400
So you'd never even gotten a phone call.

00:33:52.000 --> 00:33:55.180
Like, actually it was a developer evangelist who showed up at my school.

00:33:55.180 --> 00:33:58.300
I just talked their ear off and I gave them my resume.

00:33:58.300 --> 00:33:59.400
It was like, just read it.

00:33:59.400 --> 00:33:59.880
Just shove it.

00:33:59.880 --> 00:34:00.360
I don't care.

00:34:00.360 --> 00:34:01.740
Just do something with it.

00:34:01.740 --> 00:34:03.100
Make sure you call me.

00:34:03.100 --> 00:34:04.320
I don't care.

00:34:04.320 --> 00:34:07.060
And that happened.

00:34:07.060 --> 00:34:11.340
Whereas a lot of the ones where I was applying online, I didn't make it past that automatic

00:34:11.340 --> 00:34:11.820
filter.

00:34:11.820 --> 00:34:18.320
You know, they, there's a lot of like, you know, you get however many students graduating

00:34:18.320 --> 00:34:21.840
out of college, you get to process it through it somehow autonomously.

00:34:21.840 --> 00:34:23.240
So I think that's what they did.

00:34:23.240 --> 00:34:23.860
Yeah.

00:34:23.860 --> 00:34:25.200
That definitely makes sense.

00:34:25.200 --> 00:34:26.180
Well, very cool.

00:34:26.180 --> 00:34:30.080
And since you got to Microsoft, you said your career is really accelerated.

00:34:30.080 --> 00:34:33.200
You had some, some process to make that happen.

00:34:33.200 --> 00:34:34.140
You want to share it?

00:34:34.140 --> 00:34:34.760
Yeah.

00:34:34.760 --> 00:34:41.500
So I think the big thing was I had this kind of, oh shit moment in college and, you

00:34:41.500 --> 00:34:42.760
know, now, now I'm out.

00:34:42.760 --> 00:34:48.020
I actually got married and it was like, you know, now I've got a family and failure is not

00:34:48.020 --> 00:34:49.740
really an option at that point.

00:34:50.420 --> 00:34:57.280
I had to come up with a process and a method to kind of ensure I was successful and never

00:34:57.280 --> 00:34:58.680
encountered like that.

00:34:58.680 --> 00:35:01.900
You're on the edge of failure scenario ever again.

00:35:01.900 --> 00:35:03.500
That's like the scariest place to be.

00:35:03.820 --> 00:35:10.760
And so a lot of it boiled down to focusing and working really, really hard on specific areas

00:35:10.760 --> 00:35:18.200
and building a community around those areas that I was actively engaged in, which is kind

00:35:18.200 --> 00:35:21.380
of abstract, but I'll, I'll give you a consensus.

00:35:21.380 --> 00:35:26.140
When, when I, first joined Microsoft, I came in as a consultant, doing development

00:35:26.140 --> 00:35:29.640
operations and, you know, I didn't know the first thing about it.

00:35:29.640 --> 00:35:33.380
So I went to a local user group.

00:35:34.080 --> 00:35:40.420
which is a .NET user group and started talking about TFS and application lifecycle management

00:35:40.420 --> 00:35:45.240
and source control and best practices and built a group up.

00:35:45.360 --> 00:35:52.860
We got to a few hundred there and, it was once a month, sometimes twice a month meeting

00:35:52.860 --> 00:35:57.960
with other professionals in the area to a really zero in on this one specific thing.

00:35:57.960 --> 00:36:02.620
The main thing I learned was that like, if you were to be successful, a lot of people can

00:36:02.620 --> 00:36:08.140
do different things very poorly, but very few can do one thing extremely, extremely well.

00:36:08.300 --> 00:36:12.180
So if you want to be the one who gets the phone call, you want to be the best of the

00:36:12.180 --> 00:36:12.940
best of the best.

00:36:12.940 --> 00:36:18.800
Of course, you're going to pass up opportunities, but you're going to be the one who gets the

00:36:18.800 --> 00:36:21.100
most opportunities in that specific area.

00:36:21.100 --> 00:36:25.780
And if you look at programming, there's so much opportunity out there that it's better to

00:36:25.780 --> 00:36:30.740
be the one that everybody thinks of, oh, I need to do like this type of server.

00:36:30.740 --> 00:36:32.180
Let's call David.

00:36:32.640 --> 00:36:40.500
So once I kind of understood that focus on that very specific thing and be the best in

00:36:40.500 --> 00:36:44.380
like North Carolina at it, that's when it kind of clicked.

00:36:44.380 --> 00:36:49.600
And I started seeing a lot of success in my career because servers would go down, you know,

00:36:49.600 --> 00:36:53.960
as they always do, and they have to call somebody and it could be a critical scenario.

00:36:53.960 --> 00:36:54.880
So who do they call?

00:36:54.880 --> 00:37:02.220
Do they call the guy who's like a web developer, DevOps, TFS, open source, big data guy, or do

00:37:02.220 --> 00:37:06.940
they call the person who is the best in class at that one type of server?

00:37:06.940 --> 00:37:14.420
So I actually saw a significant increase in my billable hours being utilized once I focused.

00:37:14.420 --> 00:37:19.580
And a lot of that was enabled by focusing on the community and trying to see success with

00:37:19.580 --> 00:37:22.580
that community and growing it into myself.

00:37:22.580 --> 00:37:23.620
That's really awesome.

00:37:23.620 --> 00:37:27.400
I totally agree with you that specialization is key.

00:37:27.640 --> 00:37:32.720
I mean, you need to have enough broad skill that you can get along with general situations,

00:37:32.720 --> 00:37:36.320
but there needs to be a thing that is your specialty, right?

00:37:36.320 --> 00:37:41.000
And if you pull that off, you can really, like you said, you get the invitations for the conference

00:37:41.000 --> 00:37:41.320
talk.

00:37:41.320 --> 00:37:43.260
You get the call when people need help.

00:37:43.260 --> 00:37:45.520
When people Google something, they find you.

00:37:45.680 --> 00:37:47.700
It's just, it unlocks opportunity.

00:37:47.700 --> 00:37:50.840
And that doesn't need to be a broad specialty.

00:37:50.840 --> 00:37:53.140
It could be something fairly niche.

00:37:53.140 --> 00:37:53.820
Yeah.

00:37:53.820 --> 00:37:58.680
Like if you're the best dude at charting or the best girl at charting, like who are they

00:37:58.680 --> 00:37:59.480
going to call for charting?

00:37:59.480 --> 00:38:01.100
How many charts do people need to draw?

00:38:01.100 --> 00:38:02.900
Like millions of charts.

00:38:02.900 --> 00:38:04.300
There's charts being drawn all the time.

00:38:04.400 --> 00:38:08.760
So if you're just the best charter in the world, you'll do very successfully.

00:38:08.760 --> 00:38:14.900
And I think you honed in on something that was really interesting, Mike, was the, I called

00:38:14.900 --> 00:38:16.760
it the integration points.

00:38:16.760 --> 00:38:21.840
So it became more apparent that I had to learn my integration points as I started moving over

00:38:21.840 --> 00:38:27.700
to data and machine learning was that I could do machine learning and be the best at machine

00:38:27.700 --> 00:38:28.140
learning.

00:38:28.140 --> 00:38:35.620
But unless I knew how to surface those capabilities into a web server or onto a physical device,

00:38:35.620 --> 00:38:37.440
I was still kind of useless.

00:38:37.440 --> 00:38:44.640
I needed to know like my specialty and like three or four ways to expose my specialty to

00:38:44.640 --> 00:38:46.780
other people that was useful.

00:38:46.780 --> 00:38:52.520
So like the microservices phenomena has become a really impactful thing because now it's like

00:38:52.520 --> 00:38:56.760
machine learning flask, wrap it in API, ship it up to the cloud.

00:38:57.020 --> 00:38:57.860
Anybody can use it.

00:38:57.860 --> 00:38:59.460
That's integration point one.

00:38:59.460 --> 00:39:00.500
Yeah, absolutely.

00:39:00.500 --> 00:39:02.080
That's a really great point.

00:39:02.080 --> 00:39:07.520
You know, I had John Sonmez on episode 71 talking about specialization and niches and he

00:39:07.520 --> 00:39:09.900
often talks about T shaped knowledge.

00:39:09.900 --> 00:39:12.500
You've got some broad base, like you can set up a web server.

00:39:12.500 --> 00:39:14.100
You can create a basic web page.

00:39:14.100 --> 00:39:19.280
You can talk to database, but then you've got some vertical deep slice that is like the

00:39:19.280 --> 00:39:20.300
reason people call you.

00:39:20.300 --> 00:39:20.760
Right.

00:39:20.760 --> 00:39:22.800
And I think that's a great way to think of careers.

00:39:22.800 --> 00:39:26.260
Yeah, that was actually when I came into Microsoft consulting services.

00:39:26.260 --> 00:39:30.820
That was the first thing they said is that here's what the T model is.

00:39:30.820 --> 00:39:33.020
Here's what your specialization is.

00:39:33.020 --> 00:39:35.580
Here's everything that surrounds that specialization.

00:39:35.580 --> 00:39:37.220
Know it or die.

00:39:37.220 --> 00:39:38.340
It's like, okay.

00:39:39.420 --> 00:39:40.380
Okay, I'm listening.

00:39:40.380 --> 00:39:40.460
Okay.

00:39:40.460 --> 00:39:40.460
I'm listening.

00:39:40.460 --> 00:39:56.480
Capital One has a special message for you.

00:39:56.480 --> 00:39:58.920
They need Python pros who love to work with data.

00:39:59.060 --> 00:40:03.520
Put your Python experience to work at Capital One and help them use data to make life better

00:40:03.520 --> 00:40:04.640
for millions of customers.

00:40:04.640 --> 00:40:09.480
Capital One is employing the latest tools and approaches to do data analytics and data science

00:40:09.480 --> 00:40:10.560
from the ground up.

00:40:10.560 --> 00:40:14.440
They're smart, creative professionals who love to explore new ways to interact with data.

00:40:14.440 --> 00:40:19.020
They're interested in figuring out novel, advanced Python techniques, and even more interested

00:40:19.020 --> 00:40:21.860
in finding more people who will help them do that.

00:40:22.020 --> 00:40:25.360
When you join their state-of-the-art Python community, you'll work with people you really

00:40:25.360 --> 00:40:25.680
like.

00:40:25.680 --> 00:40:28.060
People who might be listening to this podcast right now.

00:40:28.060 --> 00:40:30.380
Relentless innovation is their way of life.

00:40:30.380 --> 00:40:31.920
Make it yours at Capital One.

00:40:32.340 --> 00:40:37.220
Visit jobs.capitalone.com slash talkpython to learn more and apply today.

00:40:37.220 --> 00:40:42.780
Awesome.

00:40:42.780 --> 00:40:47.500
One of the things you said that really helped you get into that position was surrounding yourself

00:40:47.500 --> 00:40:48.020
with people.

00:40:48.020 --> 00:40:52.740
And we talked briefly about some of the user groups that you've been part of.

00:40:52.740 --> 00:40:57.780
You've got a long history of creating and setting up and facilitating user groups, and you

00:40:57.780 --> 00:40:58.580
have some going now.

00:40:58.580 --> 00:40:59.800
Let's talk about that a little bit.

00:40:59.800 --> 00:41:01.200
Give us the history first.

00:41:01.320 --> 00:41:05.540
Yeah, it started back in college, like I said, starting the video game group.

00:41:05.540 --> 00:41:10.720
And then when I got into Microsoft, creating other community groups.

00:41:10.720 --> 00:41:15.700
I've always been a field role at Microsoft, so I've never really been able to surround myself

00:41:15.700 --> 00:41:16.900
with other Microsoft people.

00:41:16.900 --> 00:41:22.420
So I had to come up with more creative ways to gain that knowledge and that expertise.

00:41:22.420 --> 00:41:28.880
And all the different big companies have things like MVPs, which most value professionals, or some

00:41:28.880 --> 00:41:33.260
sort of like honorary role for you're not part of the company, but you're super awesome.

00:41:33.260 --> 00:41:34.940
So we're going to give you a lot of special privileges.

00:41:34.940 --> 00:41:36.540
Like MongoDB has MongoMasters.

00:41:36.540 --> 00:41:38.480
Google has their equivalent.

00:41:38.480 --> 00:41:41.760
You guys have your MVPs and so on, right?

00:41:41.760 --> 00:41:42.340
Yeah.

00:41:42.480 --> 00:41:47.620
So you find those guys and you really just surround yourself with them.

00:41:47.620 --> 00:41:51.940
And then you invite other people in and you create a very open ecosystem.

00:41:52.200 --> 00:42:07.360
So I started joining a very successful one in North Carolina, the TriNug, the Triangle.net user group, and the Research Triangle Park Data Analyst user group.

00:42:07.360 --> 00:42:09.960
Two very large groups in North Carolina.

00:42:10.300 --> 00:42:14.940
And really got me going and understanding how a professional group is run and operated.

00:42:14.940 --> 00:42:23.260
They've got memberships in excess of like 1,500 per group now of some of the best scientists in Research Triangle Park.

00:42:23.260 --> 00:42:32.380
So kind of after my tenure there for a couple of years learning how that is, I transitioned to this developer evangelism role,

00:42:32.380 --> 00:42:37.980
where now one of my primary jobs was to lead and facilitate and grow groups of that nature.

00:42:38.680 --> 00:42:48.300
So then I moved down to Florida and there are some really strong groups in Florida already, but maybe not specifically in the areas that I'm going.

00:42:48.300 --> 00:42:54.800
At this point, I've already transitioned to a lot of data science and I was doing a lot of F Sharp and stuff.

00:42:54.800 --> 00:42:56.500
Now I'm trying to do Python and TensorFlow.

00:42:56.500 --> 00:43:02.340
There's like three or five groups here that I'm really focusing on.

00:43:02.340 --> 00:43:06.380
There's the Fort Lauderdale Machine Learning User Group, Miami Data Scientists.

00:43:07.280 --> 00:43:11.820
There's FLA.net, Gold Coast User Group, Code for Fort Lauderdale.

00:43:11.820 --> 00:43:13.480
I'm actually speaking there tonight.

00:43:13.480 --> 00:43:14.880
Code for Miami.

00:43:14.880 --> 00:43:16.780
Just a variety of groups.

00:43:16.780 --> 00:43:24.000
And what's interesting is that you can, each group has its own different specialization.

00:43:24.000 --> 00:43:29.680
So like Fort Lauderdale Machine Learning is all basically Python, TensorFlow Machine Learning.

00:43:29.680 --> 00:43:31.880
And they have a fair amount of R in there as well.

00:43:32.460 --> 00:43:38.780
FLA.net is all like .net and Node.js Miami is all JavaScript.

00:43:38.780 --> 00:43:40.860
Yeah, excellent.

00:43:40.860 --> 00:43:47.420
And you said that you had a pretty interesting format or style for your Fort Lauderdale Machine Learning User Group.

00:43:47.600 --> 00:43:51.780
Yeah, we started, we just experimented with this a couple weeks ago.

00:43:51.780 --> 00:43:55.940
I've done a couple of these before at other user groups and seen some success.

00:43:55.940 --> 00:43:58.960
But I call it an open forum.

00:43:58.960 --> 00:44:04.200
And basically it's a semi-structured user group.

00:44:04.200 --> 00:44:09.300
A lot of what I see at other user groups is very presentation lecture oriented.

00:44:09.300 --> 00:44:15.040
You go in, somebody talks at you for a while, and then you network for 20 minutes or so, and then you leave.

00:44:15.700 --> 00:44:18.000
But this is a very different take.

00:44:18.000 --> 00:44:24.620
You know, everything that I've seen for how I get successful or see other people get successful is that they have hands-on experience.

00:44:24.620 --> 00:44:44.580
So we've created a semi-structured event that happens every other week where we have a three-hour block where everybody shows up and we talk about high-level, what are people struggling with, what's the direction that you've seen over the past two weeks, anything interesting you want to talk about.

00:44:44.580 --> 00:44:47.260
And we do about 20, 30 minutes of that.

00:44:47.260 --> 00:44:54.880
And then we spend about two and a half hours or two hours actually hands-on solving problems.

00:44:54.880 --> 00:45:04.200
So right now we've broken out into groups to try to win Kaggle or the Microsoft Cocos image recognition challenge.

00:45:04.860 --> 00:45:21.120
And what's neat is that you see a natural tendency where people share their knowledge and form into groups and are actively pursuing knowledge and actively using the tools and solving problems.

00:45:21.120 --> 00:45:29.380
So, you know, you can go and do a presentation on how to do data pipelining or how to ensure that your GPU kernel is always awake.

00:45:30.420 --> 00:45:39.400
Or you can say, here's a giant database of images with labels for the next three hours over the next three months.

00:45:39.400 --> 00:45:44.320
We're actually going to get an accuracy of 90%.

00:45:44.320 --> 00:45:49.480
And what's neat is that nobody has to even know how to do it.

00:45:49.480 --> 00:45:55.380
So, like, when you have a lecture-style group, you're forced into this thing where you have to have an expert.

00:45:55.380 --> 00:45:59.660
If you do an open forum, nobody has to be an expert because everybody's learning.

00:45:59.840 --> 00:46:03.620
Nobody even, you know, you have to have a general idea of where you want to go.

00:46:03.620 --> 00:46:13.100
But you don't actually need an expert because you're actively coding and you're going to surface these issues and you're going to naturally solve them.

00:46:13.100 --> 00:46:17.460
That said, we do have experts around because people do this for a living.

00:46:17.460 --> 00:46:19.360
So that's really beneficial.

00:46:19.360 --> 00:46:22.520
And you see, like, we had a couple Docker experts.

00:46:22.880 --> 00:46:25.860
We had some Python experts and some TensorFlow experts.

00:46:25.860 --> 00:46:34.060
And, you know, some people knew TensorFlow and Python but didn't know how to use the GPUs and the cloud.

00:46:34.060 --> 00:46:37.380
So the Docker people come over like, I can help you with that.

00:46:37.380 --> 00:46:40.320
Can you show me a little bit about this TensorFlow stuff that you're doing?

00:46:40.320 --> 00:46:42.380
Because the Docker experts don't know about TensorFlow.

00:46:43.080 --> 00:46:46.860
So you get this really cool cross-collaboration of skill sets.

00:46:47.460 --> 00:46:48.240
Yeah, that's really great.

00:46:48.240 --> 00:46:54.360
And, you know, for those who are not familiar with Kaggle, Kaggle sets up periodic data science competitions.

00:46:54.360 --> 00:46:57.520
And they're probably the best known out there for that.

00:46:57.520 --> 00:47:02.140
And so I think it's fantastic that you guys are like, the goal of this user group is to win Kaggle.

00:47:03.120 --> 00:47:10.680
Because when people come back and they try to get a job or a raise or whatever, they say, well, you know, what experience do you have?

00:47:10.680 --> 00:47:14.140
Well, I placed this level in Kaggle and here's how we solved it.

00:47:14.140 --> 00:47:18.140
And it's super concrete rather than I sat through four talks on data science.

00:47:18.140 --> 00:47:18.760
I'm really ready.

00:47:18.760 --> 00:47:19.340
Yeah.

00:47:19.340 --> 00:47:19.960
Yeah.

00:47:19.960 --> 00:47:24.560
And, you know, like, because when you do interviews, it's, you know, like we were talking at the beginning.

00:47:24.560 --> 00:47:25.780
It's what have you done?

00:47:25.780 --> 00:47:26.760
What can you do for me?

00:47:26.760 --> 00:47:27.500
Where's the proof?

00:47:27.500 --> 00:47:31.980
Well, I'm second place on Kaggle kind of speaks for itself, right?

00:47:31.980 --> 00:47:33.900
Like, here you go.

00:47:33.900 --> 00:47:35.080
How much money do you want?

00:47:35.080 --> 00:47:36.060
Exactly.

00:47:36.060 --> 00:47:39.120
That's when people start calling you rather than when you call people.

00:47:39.120 --> 00:47:45.640
And, of course, just like being a specialist, having people call you, it puts you in a much better position to get the job.

00:47:45.640 --> 00:47:46.360
Yeah.

00:47:46.360 --> 00:47:55.420
And, you know, the other neat thing to mention about this particular user group is we actually partner with a couple local recruiting firms.

00:47:55.940 --> 00:48:02.200
So what's neat is the recruiting firms have jobs available and they'll send the recruiters in.

00:48:02.200 --> 00:48:03.780
They actually provide food.

00:48:03.780 --> 00:48:04.900
They give us prizes.

00:48:05.080 --> 00:48:12.300
So, like, last time they ordered a bunch of, like, really fancy pizza, not like the typical, like, nasty stuff, but, like, really good pizza.

00:48:12.300 --> 00:48:16.140
And they had Amazon gift cards.

00:48:16.140 --> 00:48:18.620
And we had about 50 people show up.

00:48:19.180 --> 00:48:24.700
And at the end, you know, they said, okay, by the way, we've got three jobs in Python.

00:48:24.700 --> 00:48:30.500
We've got two jobs in Java, a couple .NET, and, like, one data science position.

00:48:30.500 --> 00:48:33.980
You know, come up and let us know if you're interested in any of these jobs.

00:48:34.060 --> 00:48:47.940
Not only are you growing your skills, because we've placed these events in partnership with recruiting firms, you get to learn your skills, apply your skills, and then hopefully go get a job with those same exact skills.

00:48:47.940 --> 00:48:52.820
And the recruiters know who you are, what you're doing, if you're showing up, and they'll vouch for you.

00:48:52.820 --> 00:48:53.420
Yeah.

00:48:53.420 --> 00:48:55.140
A really excellent combination there.

00:48:55.800 --> 00:49:04.000
So, with all this community building and stuff, you had some funny stories about the challenges of building community.

00:49:04.000 --> 00:49:05.900
One of them involved office hours.

00:49:05.900 --> 00:49:06.660
You want to tell us that?

00:49:06.660 --> 00:49:07.260
Yeah.

00:49:07.260 --> 00:49:09.160
So, office hours.

00:49:09.160 --> 00:49:13.540
I run office hours in downtown Miami every week on Fridays.

00:49:13.540 --> 00:49:19.680
And you can get some really incredible people and things to show up at your door.

00:49:19.680 --> 00:49:24.740
And then, conversely, you can get some really crazy people to show up, too.

00:49:25.160 --> 00:49:27.400
So, we've done a lot of stuff about, like, the goodness.

00:49:27.400 --> 00:49:30.200
So, we can mention a few of the crazy ones.

00:49:30.200 --> 00:49:34.320
So, I'm not going to mention any names or events or anything like that.

00:49:34.320 --> 00:49:38.340
But, you know, when I post my office hours, I post them up on Meetup.

00:49:38.340 --> 00:49:47.520
And it says, machine learning office hours, Microsoft developer evangelist will be present, you know, free, no charge kind of thing.

00:49:47.520 --> 00:49:56.420
So, this one day, this individual shows up just, like, I don't know, just to harass me about stuff, like Google, I guess.

00:49:56.420 --> 00:49:58.380
She's like, I really like Google.

00:49:58.380 --> 00:50:01.400
But, like, oh, I said this individual was like, I really like Google.

00:50:01.400 --> 00:50:03.100
But, like, Microsoft kind of sucks.

00:50:03.100 --> 00:50:04.440
And, like, I really want to get a job with Google.

00:50:04.440 --> 00:50:05.700
Can you, like, get me a job with Google?

00:50:05.780 --> 00:50:08.340
I was like, look, I work for Microsoft.

00:50:08.340 --> 00:50:10.480
I can't get you a job at Google.

00:50:10.480 --> 00:50:12.880
If you want to get a job, I can give you some direction.

00:50:12.880 --> 00:50:15.360
She's like, great, but I don't want to, like, code or anything.

00:50:15.360 --> 00:50:16.260
Can you, like, do this?

00:50:16.260 --> 00:50:17.920
I was like, oh, my God.

00:50:18.280 --> 00:50:27.900
And I'm sitting there in my head, like, staring at her, wondering how long I can let her talk until she disappears.

00:50:27.900 --> 00:50:31.020
And it must have been two hours.

00:50:31.020 --> 00:50:36.860
It was an interesting experiment to see how long I could just, like, sit there.

00:50:36.860 --> 00:50:39.580
Yeah, nobody else showed up that day.

00:50:39.580 --> 00:50:41.660
So, it wasn't like I had anything better to do.

00:50:41.740 --> 00:50:45.980
But it was just an example of some of the craziness that you'll get.

00:50:45.980 --> 00:50:53.380
And you'll get all sorts of different people showing up that are, like, that we've had people come in and, like, start throwing things.

00:50:53.380 --> 00:50:57.000
But there's not too many of those.

00:50:57.000 --> 00:51:01.200
But when it happens, you're like, you can tell as soon as that person walks in the door.

00:51:01.200 --> 00:51:02.360
There's, like, I don't know.

00:51:02.360 --> 00:51:04.880
You can just, like, smell it or something at this point.

00:51:04.880 --> 00:51:08.040
And you just, like, clap your hands and, like, rub them together.

00:51:08.040 --> 00:51:10.960
And you're like, all right, let's get this going.

00:51:10.960 --> 00:51:11.400
Let's do this.

00:51:11.400 --> 00:51:15.200
Yeah, it's an interesting experience.

00:51:15.200 --> 00:51:21.060
But then you have other things, like, I mean, so many amazing innovations that have come through the door.

00:51:21.060 --> 00:51:23.340
Just blow your mind.

00:51:23.340 --> 00:51:28.500
There's this one individual who came in, and he lost his job.

00:51:28.500 --> 00:51:30.960
And he's an older fellow.

00:51:30.960 --> 00:51:31.740
I'm not sure.

00:51:31.740 --> 00:51:33.980
I'd probably place him probably in his 60s.

00:51:33.980 --> 00:51:40.620
But anyways, he lost his job and decided, whatever, I'm not going to let that get me down.

00:51:40.700 --> 00:51:41.700
So I'm going to start a company.

00:51:41.700 --> 00:51:47.960
So he starts this company around, like, executive financial planning.

00:51:48.440 --> 00:52:03.600
And just total ninja style builds this incredible platform for every wild thing that you could ever imagine that you'd want to do as an executive planning financials for your global organization.

00:52:03.600 --> 00:52:06.380
Like, he came from a really, really large company.

00:52:06.900 --> 00:52:13.340
So he kind of knew how, like, when he moved around and what you had to do, because he was the programmer for those tools.

00:52:13.340 --> 00:52:16.720
And he basically rebuilt this huge platform.

00:52:16.720 --> 00:52:18.940
And you could just attach anything to it.

00:52:18.940 --> 00:52:21.100
And it would do planning.

00:52:21.100 --> 00:52:23.060
Like, I'll give you some insight.

00:52:23.740 --> 00:52:30.660
Some of the planning that it would do would be things like, I have my primary workforce is in the United States.

00:52:30.660 --> 00:52:32.800
But my primary sales are in China.

00:52:32.800 --> 00:52:35.240
I need to pay my workforce.

00:52:35.740 --> 00:52:44.220
But every quarter, it seems like the Chinese currency keeps dropping, which decreases the value of my stock by this much.

00:52:44.220 --> 00:52:49.160
So if I transfer my money in via these three ways, this is how much money I lose.

00:52:49.200 --> 00:52:55.180
Then I'm going to get impacted with the bringing my money into the United States tax.

00:52:55.180 --> 00:53:02.460
Well, here's a more creative solution around that that reduces the impact on your ability to pay your U.S. workers.

00:53:02.460 --> 00:53:05.580
OK, well, now we've generated some debt in the U.S.

00:53:05.580 --> 00:53:09.060
We still have the money in China because we didn't move it over that intelligently.

00:53:09.060 --> 00:53:19.460
How do we transfer the debt over to China via some back methods so that I can then pay off my debt in China as opposed to paying it off in the United States?

00:53:19.460 --> 00:53:30.000
And it has this whole, like, predictive aspect of, like, everything you could ever imagine from, like, a perspective that just blows your mind.

00:53:30.000 --> 00:53:31.980
How interesting.

00:53:31.980 --> 00:53:34.500
Yeah, so that guy just walks in and says, look, I built this.

00:53:34.500 --> 00:53:34.880
Help me.

00:53:34.880 --> 00:53:35.560
Very cool.

00:53:35.560 --> 00:53:39.040
Yeah, and you walked in and was like, what can I do?

00:53:39.040 --> 00:53:39.700
I built this.

00:53:39.700 --> 00:53:40.800
I don't know what to do with it now.

00:53:40.800 --> 00:53:43.440
And I was like, you know what?

00:53:43.440 --> 00:53:45.180
Let me just shop this around.

00:53:45.180 --> 00:53:46.500
See what's going on.

00:53:46.500 --> 00:53:48.400
We might need to make it look a little prettier.

00:53:48.400 --> 00:53:52.660
You know, it was much more focused on the abilities as opposed to the prettiness.

00:53:52.660 --> 00:53:56.420
But it looks like it's going to go somewhere.

00:53:56.420 --> 00:53:57.660
Yeah, nice.

00:53:57.660 --> 00:54:01.760
I mean, just something of that magnitude is just absolutely phenomenal.

00:54:01.760 --> 00:54:03.980
Yeah, that's really cool to be able to help people like that.

00:54:03.980 --> 00:54:06.160
So, David, we're getting kind of short on time.

00:54:06.160 --> 00:54:08.060
There's a few things I do want to still touch on.

00:54:08.220 --> 00:54:15.280
So let me ask you about the state of Python and machine learning and stuff in Azure, because

00:54:15.280 --> 00:54:18.180
that's something you guys have actually been pushing pretty seriously lately.

00:54:18.180 --> 00:54:24.060
You know, with the onset of Satya and kind of a lot of the folks in my position, we have

00:54:24.060 --> 00:54:24.880
other evangelists.

00:54:24.880 --> 00:54:27.840
A lot of us have started transitioning to Python.

00:54:27.840 --> 00:54:29.760
There's more than just me out there doing this.

00:54:30.000 --> 00:54:34.460
And we're seeing that, you know, Python currently is the number five language in the world.

00:54:34.460 --> 00:54:38.140
And if you look at it, the top three are like C and C++.

00:54:38.140 --> 00:54:39.520
Well, those are basically the same.

00:54:39.520 --> 00:54:42.060
And then there's Java and C#.

00:54:42.240 --> 00:54:44.740
So then you've got Python after that.

00:54:44.740 --> 00:54:50.540
So we're seeing a huge need for enabling Python on our platform.

00:54:50.540 --> 00:54:57.540
So actually, I think every single one of our platform as a service offerings on Azure are,

00:54:57.540 --> 00:54:59.180
in fact, Python enabled.

00:54:59.720 --> 00:55:04.240
So my current workload is Python and Azure.

00:55:04.240 --> 00:55:09.300
So I'm deploying web applications to Azure with Flask.

00:55:09.640 --> 00:55:15.700
And there's things like Azure functions, which is analogous to AWS's Lambda.

00:55:15.700 --> 00:55:17.900
And that's all Python enabled.

00:55:17.900 --> 00:55:20.160
Everything has a Python API.

00:55:20.160 --> 00:55:23.980
And it's just, it seems to be working really well.

00:55:23.980 --> 00:55:30.280
And there's a lot of interesting things that you can do as well, because everything has a Python API.

00:55:30.280 --> 00:55:35.000
So if you want to deploy a series of servers and get the state of your servers and do really

00:55:35.000 --> 00:55:41.500
interesting distributed compute or even stateful stateless, it's a crazy concept.

00:55:41.500 --> 00:55:43.040
There's this thing called service fabric.

00:55:43.040 --> 00:55:52.900
It's a stateful stateless service that helps you do distributed computation in a stateless slash state,

00:55:52.900 --> 00:55:55.380
like distributed fabric kind of fashion.

00:55:55.380 --> 00:55:55.940
I see.

00:55:55.940 --> 00:56:01.020
So like as a whole, it's stateful, but any individual piece is stateless, something like that?

00:56:01.020 --> 00:56:01.760
Exactly.

00:56:01.760 --> 00:56:05.620
And it distributes your compute across in number of nodes.

00:56:05.620 --> 00:56:08.140
And it's super cutting edge.

00:56:08.140 --> 00:56:10.880
Like nobody else has anything like this right now.

00:56:10.880 --> 00:56:15.520
And it is, you know, first thing they came out with was C#.

00:56:15.520 --> 00:56:16.580
Next up is Python.

00:56:16.580 --> 00:56:22.660
It's like, that's really cool to see like the priority seems to be.

00:56:22.660 --> 00:56:26.840
And, you know, you have to balance this with I'm inside outside, right?

00:56:26.840 --> 00:56:29.240
Like I don't actually get to see what's on the backlog.

00:56:29.240 --> 00:56:34.360
I just get to look at what is coming out and what order the tools are coming out.

00:56:34.360 --> 00:56:40.020
But if you look at Azure, it seems to be C# and then either JavaScript or Python.

00:56:40.020 --> 00:56:42.860
It's going to be kind of in that order.

00:56:42.860 --> 00:56:48.400
And they're going back and forth between, well, do we support JavaScript first or do we support Python first?

00:56:48.580 --> 00:56:55.300
Because some of the tools will come out with JavaScript or Node first and then others will come out with Python first.

00:56:55.300 --> 00:57:01.300
And it's a very interesting perspective to see that those are key priorities.

00:57:01.300 --> 00:57:03.360
And the cognitive services.

00:57:03.360 --> 00:57:05.220
I forgot about the cognitive services.

00:57:05.220 --> 00:57:15.640
Just there's a whole host of APIs out there on Azure that are focused on data science that are basically prepackaged solutions.

00:57:15.820 --> 00:57:22.160
They're all Python enabled and like Jupyter Notebooks as a service and just tons of Python stuff.

00:57:22.160 --> 00:57:23.220
Oh, that's really awesome.

00:57:23.220 --> 00:57:24.200
Yeah.

00:57:24.200 --> 00:57:29.760
The whole bot framework that you guys are coming out with also looks pretty interesting as well.

00:57:29.760 --> 00:57:30.980
Oh, yeah.

00:57:30.980 --> 00:57:33.880
I can't I can't wait to kind of get my hands on that.

00:57:34.060 --> 00:57:39.580
Like the there's a big focus on natural language processing and bots are a part of that.

00:57:39.580 --> 00:57:48.960
So, like, you'll see that especially if you're using Python, you get a lot of like ad hoc power that you don't normally get because you get things like scikit learn.

00:57:48.960 --> 00:57:55.680
And then you get to put that in things like Azure machine learning, which is our democratized drag and drop machine learning toolkit.

00:57:56.020 --> 00:58:05.060
But if you're good with like Python scikit learn, you use the bot framework and we have something called Lewis, the language understanding intelligent services.

00:58:05.060 --> 00:58:17.940
You can do you can make combinations of these prepackaged solutions and then throw some semi custom to fully custom stuff into the Azure machine learning as like a microservice.

00:58:17.940 --> 00:58:25.040
And the powerful offerings that you can develop as a consumer of Microsoft services.

00:58:25.040 --> 00:58:32.760
So, like you would consume the Microsoft services to create value for a customer, but you can create that value super fast.

00:58:32.760 --> 00:58:47.580
Like I had to do a pre sales engagement where I had to develop a Slack bot that could respond to random queries about a specific customer's product offerings.

00:58:47.580 --> 00:58:51.160
I had 48 hours to build this thing from scratch.

00:58:51.160 --> 00:58:55.340
And it also had to handle speech to text and text to speech.

00:58:55.340 --> 00:59:07.380
Out the door in less than 48 hours because of the ability to take advantage of those prepackaged solutions and throw a little scikit learn in there where needed.

00:59:07.380 --> 00:59:08.360
Oh, that's awesome.

00:59:08.360 --> 00:59:10.260
Yeah, very, very cool.

00:59:10.260 --> 00:59:11.360
But you guys got going on.

00:59:11.360 --> 00:59:12.440
There's great.

00:59:12.880 --> 00:59:16.140
So I think we have time for one more thing that I wanted to touch on.

00:59:16.140 --> 00:59:20.440
And you said you're working on a project with autonomous farming.

00:59:20.440 --> 00:59:21.420
Can you talk about that?

00:59:21.420 --> 00:59:21.860
Yeah.

00:59:21.860 --> 00:59:28.520
So I'm not allowed to talk about it too, too much because it's just now going under development.

00:59:29.060 --> 00:59:35.940
But the details that I'm allowed to share is another one of those tight timelines.

00:59:35.940 --> 00:59:41.400
You're working with folks who aren't necessarily experts in IoT and machine learning.

00:59:41.400 --> 00:59:48.280
And you have very high value crops in like huge quantities.

00:59:48.280 --> 00:59:55.740
And there will be things like the state of the environment will change throughout the night.

00:59:55.740 --> 01:00:04.280
And you need to autonomously deal with that because you might have one farmer or one farm hand for every hundred acres or so.

01:00:04.280 --> 01:00:16.360
And if something terrible happens, like the pH levels go completely out of bounds, well, your farmer might be a hundred acres away.

01:00:16.360 --> 01:00:20.380
And now he has to ride his bicycle or his golf cart all the way over there.

01:00:20.380 --> 01:00:24.540
And by that point, if it's a super young plant, you might be in trouble.

01:00:24.720 --> 01:00:48.240
So having the ability to create what I call command and control systems, you were able to kind of extract information out of the sensors that you have, figure out what the state of that system is, and then send messages, not just down via text message to the farmer, but down to like an Arduino-like device.

01:00:49.200 --> 01:00:53.660
And actuate motor controls, valves, et cetera, et cetera.

01:00:53.660 --> 01:01:02.740
And it can actually impact and resolve the system and put it back into a stable state autonomously.

01:01:02.740 --> 01:01:07.740
And farming is one area that we're seeing is a very interesting place.

01:01:07.740 --> 01:01:14.380
And again, a lot of that gets enabled, you know, the tight timelines and data consolidation.

01:01:14.380 --> 01:01:16.720
They have data from all over the place.

01:01:16.880 --> 01:01:31.380
You can just throw it all up into cloud-based storage in Azure, build your models, and then surface the actual generated algorithms, either on device, edge devices, or in the cloud, depending on what you need to do.

01:01:31.380 --> 01:01:32.300
That's really cool.

01:01:32.300 --> 01:01:33.640
That sounds like a fun project.

01:01:33.640 --> 01:01:35.600
It's probably one of my favorites.

01:01:35.600 --> 01:01:50.900
There's, if we touch base again, probably around March, there will be a lot more details that I can share on probably about three or four projects that we have going on of similar just neatness.

01:01:50.900 --> 01:01:51.780
Nice.

01:01:51.780 --> 01:01:52.360
Awesome.

01:01:52.360 --> 01:01:53.200
It sounds very exciting.

01:01:53.200 --> 01:01:55.300
So, David, I think we'll have to leave it there.

01:01:55.300 --> 01:01:59.200
Let me hit you with a couple of questions before I let you go, of course.

01:02:00.000 --> 01:02:09.080
There's over 80,000 packages on PyPI you can grab and create autonomous farms from or various other things, right?

01:02:09.080 --> 01:02:13.280
So, what one's your favorite or you found really useful you want to tell people about?

01:02:13.280 --> 01:02:14.920
PIP install TensorFlow.

01:02:14.920 --> 01:02:24.100
I mean, for some of the large-scale stuff that I'm doing and some of the neat things that you can do with it, just you can pip install TensorFlow.

01:02:24.520 --> 01:02:25.660
So, I'd say that's it.

01:02:25.660 --> 01:02:26.340
Oh, that's awesome.

01:02:26.340 --> 01:02:26.640
Yeah.

01:02:26.640 --> 01:02:27.440
Very, very cool.

01:02:27.440 --> 01:02:29.500
And editor, what one do you use?

01:02:29.500 --> 01:02:31.480
I actually have to split it.

01:02:31.480 --> 01:02:33.660
There's two editors that I use.

01:02:33.660 --> 01:02:39.280
I use PyCharm for a lot of the class development and what I'll call productionifying my code.

01:02:39.280 --> 01:02:54.500
And then I actually use Continuum Analytics Spider 3 or Spider 2, the command of Spider 3, because I find that for doing interactive visualizations and experimentation, it's really nice.

01:02:54.500 --> 01:03:01.460
So, I'll write a lot of my code in Spider and figure out my algorithms, and then I'll copy-paste it into PyCharm.

01:03:01.460 --> 01:03:02.500
Oh, that's awesome.

01:03:02.500 --> 01:03:04.220
Yeah, I can definitely second both of those.

01:03:04.220 --> 01:03:04.560
That's great.

01:03:04.560 --> 01:03:07.680
All right, you got one final call to action for everybody.

01:03:07.680 --> 01:03:12.440
I'd say check out the Python capabilities on Azure.

01:03:12.440 --> 01:03:20.200
Like, the power that the cloud can bring to the table at the cost that it brings is just mind-boggling.

01:03:20.200 --> 01:03:23.220
So, that's just definitely something to take a look at.

01:03:23.220 --> 01:03:24.080
Oh, yeah.

01:03:24.440 --> 01:03:24.880
Very cool.

01:03:24.880 --> 01:03:25.820
All right.

01:03:25.820 --> 01:03:27.140
It's been a great conversation, David.

01:03:27.140 --> 01:03:27.860
Thanks for being on the show.

01:03:27.860 --> 01:03:28.340
All right.

01:03:28.340 --> 01:03:29.000
Thank you, Michael.

01:03:29.000 --> 01:03:29.400
You bet.

01:03:29.400 --> 01:03:29.840
Have a good one.

01:03:29.840 --> 01:03:29.980
Bye.

01:03:29.980 --> 01:03:34.180
This has been another episode of Talk Python to Me.

01:03:34.180 --> 01:03:39.920
Today's guest has been David Crook, and this episode has been sponsored by Hired and Capital One.

01:03:39.920 --> 01:03:41.840
Thank you both for supporting the show.

01:03:41.840 --> 01:03:44.880
Hired wants to help you find your next big thing.

01:03:44.880 --> 01:03:53.360
Visit Hired.com slash Talk Python to Me to get five or more offers with salary and equity presented right up front and a special listener signing bonus of $2,000.

01:03:54.380 --> 01:03:57.640
Are you a data scientist or Python developer who loves data?

01:03:57.760 --> 01:04:11.700
If you're looking for a place to work on data science with truly big data that can affect millions of lives, then head on over to jobs.capitalone.com slash Talk Python and check out the wide range of jobs that Capital One is trying to fill right now.

01:04:12.020 --> 01:04:13.980
Are you or a colleague trying to learn Python?

01:04:13.980 --> 01:04:18.640
Have you tried books and videos that just left you bored by covering topics point by point?

01:04:18.640 --> 01:04:27.280
Well, check out my online course, Python Jumpstart by Building 10 Apps at talkpython.fm/course to experience a more engaging way to learn Python.

01:04:27.280 --> 01:04:34.600
And if you're looking for something a little more advanced, try my WritePythonic code course at talkpython.fm/Pythonic.

01:04:35.300 --> 01:04:41.440
You can find the links from this episode at talkpython.fm/episodes slash show slash 73.

01:04:41.440 --> 01:04:43.920
Be sure to subscribe to the show.

01:04:43.920 --> 01:04:46.120
Open your favorite podcatcher and search for Python.

01:04:46.120 --> 01:04:47.360
We should be right at the top.

01:04:47.360 --> 01:04:56.640
You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

01:04:56.640 --> 01:05:01.600
Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

01:05:01.600 --> 01:05:08.280
Corey just recently started selling his tracks on iTunes, so I recommend you check it out at talkpython.fm/music.

01:05:08.280 --> 01:05:13.620
You can browse his tracks he has for sale on iTunes and listen to the full-length version of the theme song.

01:05:13.620 --> 01:05:15.540
This is your host, Michael Kennedy.

01:05:15.540 --> 01:05:16.820
Thanks so much for listening.

01:05:16.820 --> 01:05:18.040
I really appreciate it.

01:05:18.040 --> 01:05:20.160
Smix, let's get out of here.

