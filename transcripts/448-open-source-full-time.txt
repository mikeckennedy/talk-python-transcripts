00:00:00 So you've created a Python-based open source project, and it's starting to take off.

00:00:04 You're getting contributors, lots of buzz in the podcast space, and more.

00:00:08 But you have that day job working on Java still.

00:00:12 How do you make that transition from popular hobby project to a full-time job?

00:00:17 After all, you're giving away your open source project for free, right?

00:00:21 Well, on this episode, I put together an amazing panel of guests who all have done exactly this.

00:00:27 Turned their project into full-time work and even companies in some cases.

00:00:31 We have Samuel Colvin, Gina Häußge, Sebastian Ramirez, Charlie Marsh, Will McGugan, and Eric Hulsher on to share their stories.

00:00:40 This is Talk Python to Me, episode 448, recorded December 7th, 2023.

00:00:46 Welcome to Talk Python to Me, a weekly podcast on Python.

00:01:03 This is your host, Michael Kennedy.

00:01:05 Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython, both on fosstodon.org.

00:01:13 Keep up with the show and listen to over seven years of past episodes at talkpython.fm.

00:01:18 We've started streaming most of our episodes live on YouTube.

00:01:22 Subscribe to our YouTube channel over at talkpython.fm/youtube to get notified about upcoming shows and be part of that episode.

00:01:30 This episode is sponsored by BaseDash.

00:01:33 BaseDash uses AI to build a dashboard for your database.

00:01:37 Get a custom admin view in your Postgres, Microsoft SQL Server, MySQL, MariaDB, or Redshift database.

00:01:45 Get started for free at talkpython.fm/BaseDash.

00:01:49 And it's brought to you by Sentry.

00:01:51 Don't let those errors go unnoticed.

00:01:53 Use Sentry.

00:01:54 Get started at talkpython.fm/sentry.

00:01:57 Hello, everyone.

00:01:58 Charlie, Will, Eric, Sebastian, Gina, and Samuel.

00:02:02 What a big group of people we have here today.

00:02:04 An awesome, awesome group.

00:02:05 Thanks for being here, everyone.

00:02:06 It's going to be super fun to have you on the show.

00:02:09 You know, I know there's so many people out there that are dreaming of an open source project

00:02:14 or even working on open source and contributing to it, but it's something they squeeze in the last hour of their day.

00:02:21 And at some point, all of you have made this amazing transition to where there's enough support, there's enough interest in what you all built that becomes your full-time thing, right?

00:02:32 Which is, I know for many out there, living the dream.

00:02:34 So you all are living the dream.

00:02:36 I'm hopefully you feel that way.

00:02:39 But it's going to be really great to kind of just explore your projects, how do you make that transition, and, you know, what you're up to.

00:02:45 So we have Samuel Colvin on from Pydantic, and he has the tightest schedule.

00:02:52 He's squeezing us in on a far-flung trip, a work trip.

00:02:56 So let's go to you first, Samuel.

00:02:58 Just, you know, tell people a bit about who you are and what your project is to get started.

00:03:03 Yeah, I'm Samuel.

00:03:03 I maintain Pydantic, which is a data validation library for Python that uses PyTynx.

00:03:08 So those weird things you've seen after colon and Python that mostly do nothing unless you run mypy or Pyright.

00:03:15 Pydantic basically enforces them.

00:03:17 Almost exactly a year ago, I was sort of working on Pydantic full-time back then, but really spending my own money to do so.

00:03:24 And a big American VC got in touch.

00:03:26 And fast forward, I raised some money and started a company at the beginning of this year.

00:03:31 I hired now 10 people.

00:03:34 And I'm actually, as you mentioned, I'm in Istanbul at the moment with the whole team.

00:03:37 It turns out if you have a team with Americans, Iranians, and Russians, that Istanbul is one of the few places that you can actually meet efficiently.

00:03:44 So, yeah, we're having a really fun week in Istanbul, mostly working together, and then going after dinner, which is where we are at the moment.

00:03:50 I hope that's a good summary.

00:03:52 Absolutely.

00:03:53 And what a cool experience that you get to hang out with all these people talking about your project in Istanbul.

00:03:59 I just had, by the way, I just had...

00:04:01 I mean, just think that the other thing I would add is that one of the best bits of it has been being able to hire friends of mine from open source, people who had, I think, all but two of the people here have contributed to Pydantic before we started the company, which is how I hired the first, I think, six people.

00:04:17 And then a few more.

00:04:23 being able to pay the property.

00:04:25 Yeah, awesome.

00:04:26 I see a lot of people shaking their head out there as well.

00:04:29 Just coincidentally, I recently had Sydney Runkle on Who Works With You, and she's such an inspiration.

00:04:35 That show is not out yet, but has already been done yet through the weird time shifting of podcasting.

00:04:41 So it'll be out before this, but it's not out yet.

00:04:43 So anyway, very, very cool team you got there.

00:04:46 I guess we'll go around the order of the video.

00:04:49 Pretty bunch pictures here.

00:04:51 So Charlie, you're up next.

00:04:53 Quick, quick bit about you.

00:04:55 Hey, so I'm Charlie.

00:04:56 I am the author of Ruff, which is a Python linter code formatter and code transformation tool written in Rust.

00:05:04 I started working on Ruff about a year ago, maybe like October last year.

00:05:09 Similar time frame to Samuel, yeah.

00:05:11 Yeah, and I worked on it full time for a while, similar to Samuel, although probably not for quite as long.

00:05:17 I was working on it full time without any funding.

00:05:19 And then similarly, I started a company around Ruff and really around the vision of trying to build high performance Python tools.

00:05:27 So take some of the things that make Ruff nice to use and popular and well-liked and try to apply those principles to other parts of the Python tool chain.

00:05:36 Yeah, we're a team of six and we're fully remote.

00:05:40 So no two of us live in the same place.

00:05:43 I guess a couple of us live in the same country, but most of us live in different countries.

00:05:48 And we span basically U.S. central time to, I don't know, we have one person in India and one person in Minneapolis.

00:05:57 And that kind of stretches like the full time zones of the team.

00:06:00 That's a good stretch.

00:06:01 That's a good stretch there.

00:06:02 Well, absolutely.

00:06:03 Congratulations on Ruff.

00:06:04 It is really, really taken off.

00:06:06 And I know the guy right below you and this squares, Sebastian, I saw him saying nice things about it with FastAPI and so on.

00:06:15 Yeah, yeah, I know.

00:06:16 Thanks a lot.

00:06:17 It's just funny because I think I was saying before I started recording, I think when I came on Talk Python last time, I think that might have been my first time ever on a podcast.

00:06:25 And it was to talk about Ruff.

00:06:26 And so I was like, oh, wow, people care about what I'm doing.

00:06:28 That's super cool.

00:06:30 And Pydantic and FastAPI were some of the earliest adopters that people had heard of.

00:06:36 So they were like very early on in the life cycle and helped a lot with, you know, getting people to see Ruff and sort of care about Ruff and know that smart people are using it.

00:06:47 That's awesome.

00:06:47 Well, when you visit Talk Python or the course's website or others, it's all Ruff-ified.

00:06:54 I don't know what the adjective of Ruff is, but it's been Ruff.

00:06:58 It's whatever you want to say.

00:06:59 It's amazing.

00:07:00 It's been Ruff-ed up and it works great.

00:07:02 It's really amazing.

00:07:03 That makes the code sound really bad.

00:07:05 But yeah.

00:07:06 True.

00:07:06 Yeah.

00:07:07 That's maybe not the best.

00:07:08 It's like saying it's sick.

00:07:09 Like, oh, that was a sick trick they did.

00:07:10 It means good.

00:07:11 Yeah, that code is rough.

00:07:12 Yeah, that code is rough, man.

00:07:13 All right.

00:07:14 Will, is your code rough?

00:07:15 Who are you?

00:07:16 It's got some rough edges, certainly.

00:07:18 Welcome.

00:07:19 Yeah.

00:07:19 I'm Will.

00:07:20 I'm probably best known for a library called Rich.

00:07:23 And Rich is a library for writing formatted content in Terminal.

00:07:27 You can write tables and progress bars and syntax highlighted code, all sorts of things.

00:07:32 And then that became quite popular in the Python world.

00:07:36 I think there was a need for it.

00:07:37 And two years ago, I founded Textualize, which is a company which builds on Rich to produce a library called Textual, which allows you to build user interfaces inside Terminal.

00:07:49 And these are kind of more like web interfaces and less like Cursus applications.

00:07:54 Yeah, I was just thinking almost like Flexbox.

00:07:56 You can dock stuff to the side and that's part of a UI.

00:07:59 But it's pretty amazing what you've built.

00:08:01 I think it's pushed the Terminal far beyond what many people thought the Terminal should be doing.

00:08:06 It's been very cool.

00:08:06 It's been a process of discovery.

00:08:08 It's kind of strange.

00:08:09 You've got technology that's been around for decades and are still discovering things they can do, which people haven't tried before.

00:08:17 So, yeah, it's been a lot of fun.

00:08:19 And it's been great to work with a small team of developers.

00:08:22 We've got a small core here in Edinburgh, Scotland, and we've got one developer in Portugal.

00:08:26 So, yeah, it's been great.

00:08:28 And I love the reception and I love what people are building with it.

00:08:32 Yeah.

00:08:32 It's so many people are interested in using Rich.

00:08:36 And there's a ton of plugins, right?

00:08:38 There's like Rich Click and there's pytest Rich and all these things like, well, whatever we're doing, it should also have what you've built, you know?

00:08:45 Yeah.

00:08:45 I love to see that.

00:08:46 I love to see the ecosystem building.

00:08:48 Our adjective is richified, which is not as good as possible.

00:08:51 Richified.

00:08:51 Okay.

00:08:51 Yeah.

00:08:52 Yo, that's rich.

00:08:53 My code is rich.

00:08:54 Okay.

00:08:55 Richified.

00:08:55 Got it.

00:08:56 I love it.

00:08:57 We all have adjectives that we've got to put on things.

00:08:59 Yeah.

00:09:00 I'm a big fan of you and your team's work, by the way.

00:09:03 I mean, I'm sure you hear it all the time that you build awesome stuff.

00:09:06 Cheers.

00:09:06 I appreciate it.

00:09:07 Yeah, indeed.

00:09:07 We all are.

00:09:08 Eric, welcome.

00:09:09 You and I are coming in somewhat local here out of Portland, not Istanbul.

00:09:14 I'm actually out in Bend at the moment.

00:09:15 So yeah.

00:09:16 I absolutely love Bend.

00:09:17 Lots of mountains and whatnot.

00:09:19 But yeah, so my background in Eric Holscher, folks probably know me from kind of the Read the Docs ecosystem.

00:09:23 I feel like I've been doing this for a while compared to everyone else here.

00:09:27 The project actually started in 2010, which is kind of amazing.

00:09:30 And then we actually started the company around it in 2014.

00:09:34 So coming up next year, that'll be 10 years.

00:09:36 And so, yeah, and we're all bootstrapped.

00:09:38 So we haven't done any venture capital.

00:09:40 It's all been kind of just built up the open source and then kind of turned it into a company on top of that.

00:09:45 We kind of have a business model of doing paid for private hosting, you know, companies as well as advertising on open source.

00:09:51 And we spun out a kind of a separate business called Ethical Ads that we built kind of to basically make, you know, better advertising on the internet, not doing any of the creepy tracking stuff.

00:10:00 Read the Docs is so critical to the open source space, not just Python, but especially Python.

00:10:05 Yeah.

00:10:06 Yeah.

00:10:06 Yeah.

00:10:06 I mean, so awesome work on that.

00:10:08 And then just, you know, good job on the ad stuff as well.

00:10:11 It's the tendency of the whole ad space is to be super creepy.

00:10:15 And just like, how much can we resell and how much can we buy to mix in to like create these shadow profiles?

00:10:21 And it's not a good social trend.

00:10:23 It's not good for people.

00:10:24 And it's not really necessary, right?

00:10:26 Like if I want to, you know, I've sponsored ads on Read the Docs or had run ads on Read the Docs before.

00:10:31 And we had a Flask course.

00:10:32 And let's just, you know, run that ad on Flask instead of like, let's see if we can track somebody through Instagram over to Facebook.

00:10:40 Who knew, right?

00:10:41 Yeah, exactly.

00:10:42 We call it, yeah, newspaper advertising.

00:10:43 And it's sort of been really cool with the advances of ML.

00:10:46 Like the content targeting has gotten pretty good, right?

00:10:48 So it's definitely a lot easier technically these days to kind of do that content matching.

00:10:53 But yeah, I think in terms of the kind of open source, maybe the way that I'm a little different than other folks here is we're actually running something more akin to a service.

00:10:59 So Read the Docs, all the code is open source, but a lot of the usage is open source projects using our hosted service.

00:11:04 We do obviously ship a lot of code.

00:11:06 Probably our Sphinx theme is probably the most kind of well-known actual software that people are running.

00:11:11 A little bit similar to the folks here, the kind of sidebar on the left.

00:11:14 And yeah, so I think that's kind of the background is, yeah, we have a little bit of everything.

00:11:18 But yeah, it's a little more akin to something like a SaaS app, I would say.

00:11:21 But the code is all open source.

00:11:22 We do get a contribution in that way as well.

00:11:24 Yeah, awesome.

00:11:25 And, you know, it sounds a little similar to what Textualize is working towards as well, hosting.

00:11:30 I mean, it's more hosting people's apps than hosting people's docs, but not terribly different.

00:11:35 Paying for services is a classic open source monetization strategy, right?

00:11:38 Like you have some way to kind of build the monetization on top.

00:11:41 Yeah, it's like what you build is great, but it's kind of hard for me to run.

00:11:44 Could you just do that?

00:11:44 Like, yeah, sure, we can do that.

00:11:46 Sebastian, always good to see you.

00:11:47 Welcome back.

00:11:48 Thank you very much for having me.

00:11:50 Hello, everyone.

00:11:50 I'm Sebastian Ramirez or Tiangelo.

00:11:53 I created this little tool for building web APIs that is called FastAPI.

00:11:58 And it has been growing quite a bit.

00:12:00 People have liked it, fortunately.

00:12:02 And like, yeah, that's it.

00:12:04 I'm probably the only one that hasn't built a company here, I guess.

00:12:08 Okay, baby.

00:12:11 Okay.

00:12:11 There are two of us.

00:12:13 Nice.

00:12:14 I want to hear that.

00:12:15 Okay, so this year I have been able to work full-time on open source because Sequoia Capital, the VC firm, started this open source fellowship.

00:12:22 And I am the first fellow, so I am kind of the test trial of the program.

00:12:27 So I get, you know, just to work full-time on open source.

00:12:30 And that's how I've been able to just, yeah, release that stuff in FastAPI and the ecosystem, like the other libraries.

00:12:36 FastAPI, SQL model, type, and a couple of other things.

00:12:39 But yeah, that's pretty much it.

00:12:41 Yeah, awesome.

00:12:42 Well, FastAPI is definitely the poster child for modern Python on the web.

00:12:48 You know, and Samuel's work, obviously, is central to that as well, right, with Pydantic being such a core element there.

00:12:55 So very awesome.

00:12:56 Yeah, and like, I mean, FastAPI is built on top of like great open source tools and their needs.

00:13:01 So Pydantic does all the data validation, serialization, documentation.

00:13:04 And on the other side, Starlette does all the web parts.

00:13:08 Yeah, it's like, and like, you know, like it's a very close, how do you call it?

00:13:12 Like a close friendship between all the projects.

00:13:15 Pydantic, Starlet, Ubicorn, FastAPI.

00:13:17 Like, you know, like we actually know each, by this point, we actually know each other in person.

00:13:22 Like the current maintainer of Starlette and Ubicorn works for the Pydantic company.

00:13:27 And he's like the top FastAPI expert right now.

00:13:31 But, you know, like it's very nice because helps the dynamism of like the speed of building stuff.

00:13:39 It's great.

00:13:39 Yeah, I imagine a lot of people don't realize the interconnections between these different projects that are at play here.

00:13:46 Yeah, it's definitely super fun.

00:13:48 Absolutely.

00:13:48 And then it's worth saying we in Pydantic use FastAPI as well as contributing to the libraries that build it.

00:13:53 We also use FastAPI for the services that we're building.

00:13:56 So we're like consumers both directly and indirectly of the things that we maintain in open source.

00:14:00 Awesome.

00:14:01 Chat point off and splash is awesome.

00:14:03 It's turtles all the way down, basically.

00:14:04 Exactly.

00:14:06 This portion of Talk Python To Me is brought to you by BaseDash.

00:14:09 BaseDash is the custom admin panel for your database that you don't have to build.

00:14:15 We've all dealt with endless ad hoc requests for data access.

00:14:19 Your support team wants user records, your non-technical co-founder needs to see charts,

00:14:24 or your engineering team needs an easy way to share your SQL queries.

00:14:28 These all sound like relatively simple tasks, but between building an internal tool,

00:14:33 setting up an analytics product, and then switching back and forth between that and your SQL client,

00:14:38 you've lost so much time.

00:14:40 BaseDash gives you that time back.

00:14:42 With BaseDash, you can instantly generate a visual UI for your database.

00:14:47 All you have to do is connect your data source.

00:14:50 It uses AI under the hood to generate the perfect admin panel for your data.

00:14:54 Voila!

00:14:55 Now anyone in your company has access to the data they need.

00:14:59 They're rolling out a ton of new features like the ability to create charts

00:15:03 using only natural language.

00:15:04 You're going to get hours back in your day, and I promise you won't want to build an internal tool ever again.

00:15:11 Check them out by visiting talkpython.fm/BaseDash.

00:15:15 That's talkpython.fm/BaseDash.

00:15:18 The link is in your podcast player show notes.

00:15:21 BaseDash is free for small teams, so give it a try.

00:15:24 You've got nothing to lose.

00:15:25 Thank you to BaseDash for supporting the podcast.

00:15:29 Gina, also awesome to have you back.

00:15:31 Welcome in.

00:15:32 Very happy to be back.

00:15:34 That's really, really great to be here now, I think, for the second time.

00:15:36 And the third if we call Python Bytes.

00:15:39 So, yeah, my name is Gina Heuske, and I'm probably, yeah, I don't know if I'm that well-known throughout the Python community,

00:15:46 but I'm quite well-known in the 3D printing community for having created Octoprint,

00:15:50 which is the snappy web interface for U3D printer, and the server part of that is all written in Python.

00:15:56 And I started a project back in 2012 when I got my first 3D printer as your regular pet project on the side after hours vacation, blah, blah, blah.

00:16:05 In 2014, I got hired by a 3D printing company to work on it full-time, and in 2016, that company ran out of money,

00:16:13 and I suddenly found myself with a full-fledged, full-grown open-source project

00:16:17 and no funding whatsoever.

00:16:20 So I tried this whole crowdfunding stuff with Patreon, and that is pretty much how I've been working ever since.

00:16:26 So I'm self-employed under German law.

00:16:30 I'm a freelancer.

00:16:31 And, yeah, all my income comes from people who just sent me money for working on Octoprint.

00:16:38 Did you say since 2016?

00:16:39 Since 2016, yeah.

00:16:41 Wow, okay, cool.

00:16:42 So full-time since 2014, and self-employed and crowdfunded since 2016.

00:16:47 So it's been a while.

00:16:49 That's awesome.

00:16:49 I also went full-time on all my stuff here in 2016, although it's technically not open-source.

00:16:55 It talks a whole lot about open-source stuff.

00:16:57 So awesome.

00:16:58 It's been a while.

00:16:59 Congratulations.

00:16:59 Thank you.

00:17:00 I'm still surprised it works, to be honest.

00:17:02 I'm waiting every day that it stops working.

00:17:04 And, yeah, actually, this year it came a bit close, and then I put out a blog post basically along the lines of,

00:17:10 you know, the income is going this, but the usage numbers are going that,

00:17:13 so something is amiss here and we need to talk.

00:17:16 And then the community rallied and stuff fixed itself again.

00:17:20 So that is pretty amazing.

00:17:21 That's really awesome.

00:17:22 Congratulations.

00:17:22 It's easy for people to just go, oh, it's free, and there's some people supporting it,

00:17:26 and just kind of assume that things are taken care of.

00:17:30 But, yeah, really good.

00:17:31 Really good.

00:17:32 Yeah, you have a ton of supporters on GitHub sponsors as well, right?

00:17:37 Actually, I've diversified over the years.

00:17:38 In the beginning, it was only Patreon and PayPal, and then I started adding new payment platforms and options

00:17:44 because people prefer to be able to use the stuff that they know, and some people don't like Patreon,

00:17:49 some people don't like and don't know GitHub sponsors and stuff, and so you just give them the options to choose

00:17:54 whatever they feel comfortable with, and this increases the likelihood that they actually will go through

00:17:59 with throwing something in your head, so to speak.

00:18:01 At least that's my feeling.

00:18:03 I don't know.

00:18:03 I think that GitHub sponsors has been really positive for open source.

00:18:07 I think it's made it pretty easy to just check a box.

00:18:10 They already have your credit card, potentially, and you just want to give a little support

00:18:13 instead of a one-time PayPal donation here that you forget about after once and all that.

00:18:19 Before we move on here, there's a funny comment, nice comment out.

00:18:22 Kanishk says, this group, look at all of you.

00:18:26 You guys are the Avengers of Python open source, right, which is kind of like the superheroes.

00:18:30 I love it.

00:18:31 It's somewhat actually true, it seems.

00:18:33 Okay.

00:18:34 So the next thing I want to ask is a little bit of an origin story.

00:18:37 Just what projects did you try and they didn't really get traction, and then how do you think that your project got traction here?

00:18:44 And I know, Samuel, you might vanish any minute, so you're next.

00:18:47 You're up first on this one.

00:18:48 That's a really interesting.

00:18:49 I've built a number of things in open source.

00:18:51 I started something last week.

00:18:53 I open source on Friday that has got more stars over the last three days or, I guess, week now.

00:18:59 as the first project I started, ARQ'd, has over, I think, coming up on six years.

00:19:04 So, I mean, that's front end, and front end gets a lot more traction than like queuing an RPC does.

00:19:11 But, yeah, I don't know how, obviously there were some things I played with back then

00:19:16 that never took off.

00:19:16 But, yeah, it was this, like, I think having the right time, right place for Titans.

00:19:20 They'd obviously been around in Titans for a long time, but back in 2017 when I started Pydantic,

00:19:24 their usage was growing really fast.

00:19:26 And I think there were lots of people like me who found it kind of frustrating

00:19:29 that they were there and didn't do anything.

00:19:30 So, yeah, I think being the right time, right place was super valuable for me.

00:19:34 And, obviously, like, great projects like FastAPI, adopting Pydantic, has made a big difference.

00:19:40 But I don't know.

00:19:41 What's weird, if you look at the download chart, it's like there was a protection point

00:19:44 at the beginning of 2021.

00:19:46 So then we had, like, 5 million downloads a month.

00:19:49 And since then, there's been kind of almost exactly linear growth to now 125 million downloads a month.

00:19:55 So something weird happened in 2021, not after the project started, I don't know.

00:19:59 But, yeah, I think it was right place, right time.

00:20:01 And that frustration was the starting point.

00:20:04 On that note, I'm going to have to rush guys a bit.

00:20:06 It's great to see everyone.

00:20:07 And I'm sure I'll meet you all in a conference soon.

00:20:09 Bye-bye.

00:20:10 Thanks for dropping in.

00:20:10 Good to see you.

00:20:11 Bye-bye.

00:20:11 All right.

00:20:12 Charlie, keep going around the circle here just so I don't...

00:20:15 Yeah, you know, it's interesting because I, like, this is...

00:20:19 Ruff is really my first time being a maintainer, like, publishing open...

00:20:25 Like, I've been a consumer of open source, right, for my whole career, but I was never really, I guess,

00:20:31 a creator or a publisher or a maintainer of open source.

00:20:33 You know, around the time that I started working on Ruff, I was working on, like, a couple different projects.

00:20:39 And they all...

00:20:39 I was kind of trying to figure out what I wanted to do next.

00:20:41 I'd left my job recently.

00:20:42 And Ruff was kind of motivated by a lot of the experiences I had at my job,

00:20:46 where I was, like, maintaining a large Python code base.

00:20:48 Did you leave your job with the intent of going to work on Ruff?

00:20:51 Or were you just like, I'm going to leave, and then I'm going to figure something out.

00:20:54 And you're kind of like, well, what is the process there?

00:20:57 I left my job with the intent of starting a company, but I did not think it would be Ruff.

00:21:01 And Ruff was, like, this distracting side project that I was working on while I was, like...

00:21:06 I was working with a friend, and we were, like, trying to figure out, like,

00:21:09 the Venn diagram of interests, of, like, what should we...

00:21:12 What are we willing to work on full-time together?

00:21:14 What makes sense, given, like, our interests?

00:21:16 And then, you know, in all my free time, I was like, I just want to work on developer tools.

00:21:20 And, like, I worked on...

00:21:21 I built Ruff, or I started building Ruff.

00:21:24 I worked on, like...

00:21:25 Yeah, I worked on a lot of different...

00:21:26 Not a lot, but, like, I did...

00:21:28 We were working on a couple of different projects.

00:21:29 I did, like, a sort of CICD thing where you, like, write Docker files and, like, CI files in TypeScript,

00:21:36 and they, like, transpile down.

00:21:37 And I was like, oh, I think that has a lot of cool ideas.

00:21:40 I worked on, like...

00:21:41 It was pretty early in a lot of the LLM stuff.

00:21:44 I worked on, like, a code-based-wide refactoring tool where you, like, give it examples of, like, before and after,

00:21:50 and then it tries to find examples.

00:21:51 It was, like, a co-pilot for your entire code base.

00:21:53 Kind of...

00:21:53 It didn't work that well, like, at scale, but it was, like, a cool idea.

00:21:56 So I was, like, working on the stuff that was all open source.

00:21:58 Maybe it could have been a timing thing.

00:22:00 Like, maybe today that would be all the business.

00:22:03 Yeah, I mean, it's also, like, an...

00:22:05 Yeah, it's also an effort thing, I guess.

00:22:07 Like, I put a lot more into Ruff.

00:22:09 And it was interesting because I kept viewing Ruff as, like...

00:22:12 You know, it was probably open source at that point, but I don't think I had launched, like, launched it.

00:22:16 And I kept viewing it as, like...

00:22:18 Like I said, like, a little bit of a distraction.

00:22:19 And my friend was, like...

00:22:21 You know, I think you should really, like, push to, like, release this because, like, if you think it's, like, interesting,

00:22:26 then, like, other people will probably think it's interesting.

00:22:28 And he was the person that really, like, motivated me to actually, like, see it through

00:22:32 to doing the release.

00:22:33 And then I did the release and, like, a lot of people were actually interested in it.

00:22:37 So that kind of gave me, like, the energy to, like, really start working on it full-time

00:22:41 and just kind of see where it went.

00:22:43 And it was really, like, projects like Pynantic and, like, Sebastian started, like, commenting on issues and stuff.

00:22:48 And I was like, wow, like, real serious projects are looking at this, like, crazy tool.

00:22:52 And let me just see.

00:22:54 I'm just going to do whatever it takes to make it, like, a feasible choice

00:22:56 and just started, like, cranking through, like, all the issues and all the things that we were missing.

00:23:00 It escalated pretty quickly, I think.

00:23:03 Did it surprise you?

00:23:04 Oh, yes.

00:23:04 Yes.

00:23:05 Absolutely.

00:23:06 I was convinced that I had faced, like, this problem around tooling as, like, our code base got large in my last company

00:23:13 and that there was an opportunity to, like, build, like, better, more performant tooling.

00:23:17 I genuinely wasn't sure, like, how widely that message would resonate with people.

00:23:21 And so, I don't know, it's like a little bit of luck, right?

00:23:24 Like, sometimes you work on great projects and then, like, they go nowhere

00:23:27 and, like, just no one happens to see it.

00:23:29 And then sometimes you work on a good thing and, like, it does go somewhere.

00:23:32 And so, there are certain things that are within your control, certain things that aren't.

00:23:35 I feel like I did a good job of, like, communicating the project and, like, why it was interesting and why it was exciting.

00:23:40 But I also feel like I got a little bit lucky that it just, like, gravitated towards the right people

00:23:44 and got attention in the right ways.

00:23:46 Sure.

00:23:46 Also, maybe that Black had existed, which is a little ironic because Black kind of solves a real similar problem.

00:23:52 But, like, people were, okay, we embrace the idea of the thing that Ruff does really well.

00:23:57 You know, you just convince them to use Ruff in that sense.

00:23:59 Yeah.

00:24:00 I mean, we have a little bit, I mean, it gets back to this.

00:24:02 Like, we have a little bit of, like, a second mover advantage, right?

00:24:06 Yes, exactly.

00:24:07 There's a lot of existing tools that people use already and, like, a lot of those practices,

00:24:11 like, the idea of using a format or the idea of running code mods, like, the idea of using a linter

00:24:16 and, like, the knowledge of, like, what kinds of rules are valuable and, like, what kinds of analysis we can do.

00:24:21 Like, all this stuff existed.

00:24:23 And that was part of the story, really, was I was, like, these tools are great

00:24:27 and I get a lot of value out of them, but I want them to be, like, easier and faster.

00:24:31 And so, yeah, there's definitely a strong timing thing.

00:24:34 I think, like, I think Rust, too, this is maybe, like, a little bit more specific to what we're doing.

00:24:38 But, like, you know, I think, like, the intersection between Python and Rust has,

00:24:42 or the, I guess, the interoperability between them and sort of the ecosystem around it has just grown a lot.

00:24:48 I mean, still, I would say, like, pretty early, but it's, like, matured and grown a lot over the past few years.

00:24:53 And so even just the fact that, like, at my last company, we started to introduce Rust

00:24:57 and we started to, like, move some of our core systems into Rust and expose them over PyO3.

00:25:02 Like, the fact that that existed and the fact that I was, like, exposed to that,

00:25:05 like, that's all just, like, pure chance.

00:25:07 Otherwise, I never would have thought to do this.

00:25:09 Very cool. Well, congrats.

00:25:10 Well-deserved.

00:25:11 We're all doing the, all using Ruff, as we said, is excellent.

00:25:15 Will, Rich is awesome.

00:25:16 How, why do you think it took off?

00:25:18 Did you try stuff before?

00:25:19 What's the story?

00:25:20 I tried a lot of stuff before, before GitHub.

00:25:23 You know, coding has always been my hobby.

00:25:25 You know, I'd do it for work and I'd come home and work on a hobby project.

00:25:29 And it just seemed natural to want to share it.

00:25:31 Pre-GitHub, I would just put stuff on my blog and get some feedback from it there.

00:25:35 I quite enjoyed that.

00:25:37 And yeah, I have a number of open source projects.

00:25:39 Pre-Rich had a BB code parsing library.

00:25:42 I had a chess library.

00:25:44 I had a web toolkit.

00:25:46 So yeah, when Rich came along, it was another hobby project, something to keep me entertained.

00:25:51 Why is this terminal so boring?

00:25:53 Come on, see what we can do about that.

00:25:54 You know, I'd always use the terminal and I'd always struggled when you've got a page of white text

00:25:58 on black background and you're trying to pick out an IP address from somewhere.

00:26:03 And, you know, I'd always wished, oh, I wish it would just format it and colorize it for me.

00:26:08 I know this is possible, but it doesn't happen.

00:26:10 So then, yeah, I just, I started it and it came together quite well.

00:26:14 When I released it, it was like, boom, the stars just started accumulating.

00:26:19 Got lots of feedback.

00:26:20 It was very exciting.

00:26:21 And I kept building on it.

00:26:23 It was kind of like issue-driven development.

00:26:26 So people would just ask for something.

00:26:27 Oh, that's a good idea.

00:26:28 And go ahead and implement it.

00:26:31 And it grew from there and it became really large.

00:26:34 I did actually, prior to Rich, I had a library called PyFileSystem.

00:26:38 And this is kind of like a wrapper to file systems.

00:26:41 So you can have the same interface for your FTP server as a hard drive for a zip file, S3 bucket.

00:26:47 And that got some use in the community.

00:26:50 It wasn't enormous.

00:26:51 But that taught me a lot about building open source, you know, managing feedback issues, et cetera.

00:26:58 So that was a great experience when I started working on Rich.

00:27:02 And I was very surprised, actually, how successful it became.

00:27:05 I remember the first time I realized that this was bigger than just a hobby project

00:27:10 is when someone told me off for violating Semver, I released a clear, a clear breaking change

00:27:16 because I thought, nobody's using that yet.

00:27:18 But they were.

00:27:19 So the next day I got told off quite appropriately.

00:27:23 And then I thought, okay, I'll have to take this more seriously.

00:27:25 If people are using this in their day job, they can't just have someone who's just like throwing new bits of code

00:27:32 and changing functionality.

00:27:33 They had to treat it like it was an actual my day job.

00:27:37 Yeah, well, everyone on the call here probably has a little bit of nervousness about like,

00:27:42 if I break this, there are a lot of people that depend on this thing.

00:27:46 And it's so different.

00:27:47 It just changes so much.

00:27:48 When you were talking about the issue-driven development thing too, I just remember that phase of Ruff

00:27:54 where it was like, anyone who cared all about the project, all I wanted to do was make them happy.

00:27:59 And I was like, oh, wow, that seems like a cool idea.

00:28:02 Let's definitely do it.

00:28:03 And I was just like, it was the point in time where I could fix the bug,

00:28:07 cut a release the same day, and then their thing is fixed.

00:28:10 And then it's like, okay, great.

00:28:11 Now we have a relationship.

00:28:12 Thanks for using my thing.

00:28:14 I just think like, but that's changed so much.

00:28:17 Right?

00:28:18 Because then I went through the same experiences of like, I ship a release with a breaking change

00:28:22 that I didn't really document.

00:28:23 A lot of people get upset.

00:28:24 And then you realize, okay, I actually have some more responsibility now.

00:28:28 Yeah, these days, it's more like trying to find the balance between saying no to stuff

00:28:33 that you then have to end up maintaining and not like disappointing people too much

00:28:38 because you say no or things like that.

00:28:40 And then trying to keep this whole interaction with people nice, even though you don't want to do stuff

00:28:47 that they want you to do because you know it's better for the project.

00:28:53 This portion of Talk Python To Me is brought to you by Sentry.

00:28:56 You know Sentry for the air monitoring service, the one that we use right here at Talk Python.

00:29:00 But this time, I want to tell you about a new and free workshop.

00:29:04 Heaming the Kraken, managing a Python monorepo with Sentry.

00:29:08 Join Salma Alam Nayour, senior developer advocate at Sentry, and David Winterbottom,

00:29:14 head of engineering at Kraken Technologies, for an inside look into how he and his team develop,

00:29:20 deploy and maintain a rapidly evolving Python monorepo with over 4 million lines of code

00:29:26 that powers the Kraken utility platform.

00:29:28 In this workshop, David will share how his department of 500 developers,

00:29:32 who deploy around 200 times a day, use Sentry to reduce noise, prioritize issues,

00:29:38 and maintain code quality without relying on a dedicated Q&A team.

00:29:42 You'll learn how to find and fix root causes of crashes, ways to prioritize the most urgent crashes and errors,

00:29:49 and tips to streamline your workflow.

00:29:50 Join them for free on Tuesday, February 27th, 2024, at 2 a.m. Pacific time.

00:29:56 Just visit talkpython.fm/sentry-monorepo.

00:30:01 That link is in your podcast player show notes.

00:30:03 2 a.m. might be a little early here in the U.S., but go ahead and sign up anyway

00:30:07 if you're a U.S. listener, because I'm sure they'll email you about a follow-up recording as well.

00:30:12 Thank you to Sentry for supporting this episode.

00:30:18 PRs are like cake or puppies.

00:30:20 If it's a simple bug fix, that's like cake.

00:30:22 You'd like, thank you.

00:30:23 I enjoyed that cake.

00:30:25 Then move on.

00:30:26 But some PRs are like a puppy.

00:30:27 It's like terrific.

00:30:29 You like puppies, but you've got to feed them and clean up after them.

00:30:32 Why am I standing in the rain with this puppy on like a Friday night?

00:30:35 How do I get here?

00:30:36 Collecting the book is poop.

00:30:38 Yes, exactly.

00:30:39 Sometimes you say thank you, but I just can't, I just can't look after another puppy right now.

00:30:43 That's a difficult thing to come to terms when the project gets a bit more mature.

00:30:46 Because previously, you're accepting all the puppies, but then you have to start saying no,

00:30:50 no to puppies.

00:30:51 And Rich definitely got there because it accumulated.

00:30:54 Do you hate puppies?

00:30:55 Come on, that's a pretty hard stance.

00:30:56 I'm kind of a cat person, to be honest with you.

00:30:59 But yeah, I mean, you have to say no.

00:31:01 Unacceptable.

00:31:02 Eventually, yeah.

00:31:03 I think this is where plugins always kind of like take the center stage, right?

00:31:07 You're like, just, oh, that sounds like a great idea for you to maintain

00:31:10 external to my library.

00:31:11 That was exactly my approach to the whole situation.

00:31:14 Yep.

00:31:14 Here's a plugin API.

00:31:16 Have fun.

00:31:16 But also the probability of some little change breaking someone's code and like being considered

00:31:23 a breaking change grows as the project grows in usage.

00:31:27 And like, you know, like at some point it's like almost any change will end up

00:31:32 breaking someone in very unexpected ways because they are doing something really,

00:31:36 really weird.

00:31:37 But you know, like someone is doing it.

00:31:39 So like it becomes more and more difficult to know like, is this a breaking change

00:31:44 or not?

00:31:45 Like no one should be using this variable here or this parameter, but like,

00:31:49 you know, there's someone out there doing that.

00:31:51 So I feel defining what is actually a breaking change and what is, what is this trick

00:31:56 somewhere gets more difficult as things grow.

00:32:00 Yeah, I don't know.

00:32:01 One of the things I like that the Django project did was kind of basically

00:32:04 only things that are documented are supported.

00:32:06 Basically, that was kind of the line they drew and I thought that was a pretty good,

00:32:09 pretty good way to draw it.

00:32:10 But yeah, you're always, you know, that never actually works.

00:32:12 That doesn't make people happy.

00:32:13 It just gives you plausible deniability.

00:32:15 Don't yell at me.

00:32:17 It's not my fault.

00:32:18 I think adding a formal like versioning policy is one of the best things that we did

00:32:23 because for a long time rough was just we only used patch releases.

00:32:26 So we got to like zero, zero, like 285 or something.

00:32:30 And we had basically no guarantees about what would or wouldn't change like across releases.

00:32:35 And as the project got more and more popular, like that started to cause more and more problems.

00:32:40 And so Zany, someone on our team, like when they joined, one of the first few things

00:32:43 they did was like create an actual formal versioning policy and we added like

00:32:47 preview behavior.

00:32:48 So like you can opt similar to what block has kind of opt in to like breaking

00:32:52 or more experimental changes.

00:32:54 and so now we have like clear expectations around what it means to like bump a minor release,

00:32:58 et cetera, et cetera.

00:32:58 And like that has made our lives a lot easier, like actually having clear expectations

00:33:03 around that that are communicated and respected.

00:33:05 But it's the kind of thing that you just don't think about at all until at least I didn't.

00:33:08 Until I checked on figure.

00:33:10 Yeah.

00:33:11 Some people's code runs things like FastAPI or Octoprint or whatever.

00:33:16 Your stuff rewrites people's code.

00:33:20 Yeah, but at least it doesn't run at runtime.

00:33:22 I don't know.

00:33:22 I actually think it's easier.

00:33:23 Yeah.

00:33:25 Indeed.

00:33:26 All right.

00:33:26 I find you talk about the plugins thing because like I've actually very intentionally

00:33:30 taken the opposite approach, which is we have like almost no public API because like the only

00:33:35 public API is the CLI and like we don't expose our API in any other way.

00:33:39 And that's because like we know we're going to change like everything internally,

00:33:43 like pretty dramatically.

00:33:44 And so we wanted to have like full control over that without having to worry

00:33:47 about breaking people's stuff yet.

00:33:48 But it's like it's starting to become more of a problem because more and more people

00:33:51 want to use it as a library in like different ways.

00:33:53 But it's sort of a counterintuitive way to like make our lives easier as maintainers

00:33:58 was like not expose any public API apart from the CLI.

00:34:01 Yeah, very interesting.

00:34:02 That's a funny, funny sort of anecdote.

00:34:05 I'm rewriting a lot of the documentation for SQL model because I want to have examples.

00:34:10 Right now I have examples that are compatible with Python 3.7 and above,

00:34:14 but actually 3.6 and above.

00:34:15 But I want to have also the syntax for 3.9 and 3.10.

00:34:19 3.10, you can have like the unions using the vertical bar and these things.

00:34:23 And I want to have examples for each one of those.

00:34:25 So the approach I did was to write a script that will automatically update each one of the files

00:34:30 by calling rough as a soup process.

00:34:32 So that's the API.

00:34:33 And then like, you know, like I mean, the process is like doing all that stuff.

00:34:37 But like, yeah, it's like another fanboy of trying to use it as an API before it's available.

00:34:45 Yeah, with lack of an API, right?

00:34:47 An API will be created.

00:34:48 Exactly.

00:34:49 I've heard this before as like Hiram's law, which is like with a sufficiently

00:34:53 large number of users, like any implementation detail become someone will eventually rely

00:34:58 on an implementation detail.

00:35:00 Like any arbitrary implementation to someone is probably relying on that behavior,

00:35:03 which is basically the behavior of the program is the API.

00:35:05 And unfortunately, they'll find the underscore functions.

00:35:08 You've tried to dissuade them from using and all the things, you know, Eric,

00:35:12 what's the origin story for Read the Docs and what did you try and how do you think

00:35:17 it caught on?

00:35:17 Yeah, so I mean, this was kind of way back in the day, but yeah, I kind of got started

00:35:21 writing Django plugins, you know, apropos to the conversation.

00:35:25 You know, I was working at the Lawrence Journal world where Django came from

00:35:30 and it was kind of early in my career and I was just kind of getting excited

00:35:32 about open source and blogging and just basically built a few of these kind of testing related

00:35:37 open source projects and then that was kind of where I got started with open source

00:35:40 and then basically it was the classic scratch-on-itch thing, right?

00:35:44 Like it's like I have a bunch of open source projects I want to write documentation.

00:35:47 How do I solve that problem?

00:35:49 And back in the day that was a much harder problem to solve, right?

00:35:52 It was basically just like build a zip file and upload it to packages.python.org

00:35:56 if folks remember that one or was it packages or whatever the docs, there was a docs hosting

00:36:02 on PyPI basically.

00:36:03 And yeah, basically just wanted to kind of build a better version of that

00:36:06 that in the integrated with GitHub.

00:36:07 I feel like web hooks were like the cool new thing back in 2010.

00:36:11 And so that was really kind of the insight, right?

00:36:14 It's like let's build this kind of like CICD workflow on top of web hooks

00:36:18 and actually did build kind of a version of that the previous year around kind of like

00:36:22 code quality stuff.

00:36:23 So it actually ran kind of like a linter and built a website on commit and had a similar

00:36:27 kind of workflow, right?

00:36:29 Where it like gave you a grade and did all this kind of stuff, which is like 2009.

00:36:33 And yeah, that didn't really catch on at all.

00:36:35 But then I think Read the Docs just we built it and then I was using it for my own projects

00:36:39 and I actually had the need to kind of maintain it and keep it updated.

00:36:42 And then I think people just kind of grew naturally, you know, gave some conference talks,

00:36:46 that kind of stuff.

00:36:46 But I think it just solved a problem that people had and that's always going

00:36:49 to be the best way to grow a thing.

00:36:52 Yeah, absolutely.

00:36:53 Awesome.

00:36:54 What's Read the Docs written in?

00:36:55 Is it Django?

00:36:56 Yeah, it's all Django and Python.

00:36:57 Funny coincidence.

00:36:59 I went to college in Lawrence at the University of Kansas.

00:37:02 Oh, nice.

00:37:03 I was right there, right at the heart of Django, but I moved off to grad school

00:37:08 like a couple years before all that happened.

00:37:10 So I missed, missed the excitement.

00:37:13 I grew up in Virginia and everyone was like, you're going to Kansas?

00:37:15 You graduated school?

00:37:16 Like, how are you going there?

00:37:18 Like, what?

00:37:19 Everybody thought it was the weirdest decision, but yeah, like I really do think,

00:37:22 you know, ending up in that Python and Django ecosystem has been pretty transformative

00:37:25 to my life.

00:37:26 So, you know, worked out.

00:37:27 Lawrence is a pretty cool little town, actually, of all the places.

00:37:30 Yeah.

00:37:30 Sebastian, how did you come about this crazy idea to put types into our web apps?

00:37:36 You know, Python, that's dynamic.

00:37:38 It doesn't have types.

00:37:38 What are you doing?

00:37:39 Yeah, I don't know.

00:37:40 It's so crazy.

00:37:41 It's so fun to see it said Michael Larson in the chat, like, they maintain

00:37:45 our URL E3 and the Python security developer in Resilience just, like, chatting along with us.

00:37:52 Like, he probably has had to deal with so much stuff as us.

00:37:56 Yeah, I'm sure.

00:37:57 So, like, some of the first things that I did in open source were actually

00:38:01 Docker images for deploying Flask because I was working with Flask and deploying Flask

00:38:07 was difficult and I needed to be able to combine Nginx with UWSGI and, like,

00:38:12 a bunch of things and, like, they all had their own custom configuration files

00:38:16 and it was, you know, like, so difficult.

00:38:17 I didn't like doing that and then I just had to study how to do that stuff

00:38:22 and then after going through all that I wanted to save everyone else's time

00:38:26 doing that.

00:38:27 So, we're like, well, let's just put a Docker image with this and a lot of documentation

00:38:31 of how this Docker image works and how you can use it with some sensible defaults.

00:38:35 So, you know, it was just like a weird contraption that was it but it actually grew

00:38:40 and, like, got, like, a few stars, like, a bunch of stars.

00:38:43 For me, it was a lot, you know, like, 100 stars.

00:38:45 Oh, my gosh, I have an open source developer.

00:38:47 And then, like, at some point it had, like, a thousand stars or something like that.

00:38:51 I was so happy about that.

00:38:52 And at some point it was kind of the de facto standard for doing Flask, Docker,

00:38:57 Flask-indocker.

00:38:58 that was the first thing that I did.

00:38:59 I ended up with FastAPI.

00:39:01 I was avoiding building FastAPI for a long while and I was trying all the other frameworks

00:39:06 and all the other tools.

00:39:07 I was convinced that there was something that would do the things that I wanted.

00:39:11 I just had to find it.

00:39:12 And as I was trying different frameworks, also in different languages, I was extending

00:39:17 the list of things that I wanted to have and also the list of things that I wanted

00:39:21 not to have.

00:39:22 For example, I didn't want to...

00:39:23 That takes you farther and farther away from any framework so you're out.

00:39:27 having one that would tickle the boxes.

00:39:28 So it was like, ah.

00:39:29 But then I realized I really like this thing of having types because you get out

00:39:34 of completion and inline errors and this is so cool.

00:39:37 It's so cool to be able to have this.

00:39:38 I want to have this in Python and then Python added type annotations and it was like,

00:39:42 this is great.

00:39:43 How do I use them?

00:39:44 There's no way to use them with the current frameworks.

00:39:46 So at some point I actually found the right framework.

00:39:50 It was called API Star by the same author of Django REST framework.

00:39:53 It was just missing some authentication stuff.

00:39:55 I said like, okay, I'm going to contribute to the other stuff.

00:39:58 When I was about to jump into the code, he said, I have to deprecate this.

00:40:02 I will go focus full on Starlet.

00:40:04 And then he went to build Starlet.

00:40:06 This is Tom Christie, which is super prolific and an amazing open source person

00:40:10 in general.

00:40:11 And then at that point is when I said like, ah, just have to try it.

00:40:15 Let's just do it.

00:40:16 So I'm just going to try to build something that will be kind of a spiritual successor

00:40:20 to API Star built on top of Starlet.

00:40:23 So I was, you know, like I was actually narrating all the learnings from Flask,

00:40:27 Django, Django REST framework and all the ecosystem and just like bringing

00:40:31 all those ideas together.

00:40:32 At least that was my intention.

00:40:33 And then I wanted to have a bit of better type annotations.

00:40:36 So I saw that Pydantic was using standard type annotation.

00:40:39 So people wouldn't have to learn this like, you know, from FastAPI for special string

00:40:44 or something like that.

00:40:45 Just instead of that, just use pure string.

00:40:46 So I wanted to have something based on standards like OpenAPI, JSON schema

00:40:51 and all that stuff and based on standard Python and to have like the simplest syntax possible

00:40:56 and to, you know, like give the best developer experience possible while,

00:41:00 you know, like not adding like any additional steps for developers to build something

00:41:05 that by default will have all the best practices built in.

00:41:08 That was the intention.

00:41:09 And I was just like trying to solve it for the things that I was working on.

00:41:12 I was supposed to be doing AI and machine learning and stuff, but like I had to stop

00:41:17 for a bit to solve APIs.

00:41:18 I got stuck in APIs.

00:41:20 That's how I ended up with FastAPI.

00:41:22 Oh, I think you made a pretty decent choice.

00:41:24 It seems like FastAPI is doing all right.

00:41:26 Yeah.

00:41:27 Yeah, I just saw you.

00:41:28 It's much better than what I ever had expected.

00:41:31 Yeah, I know.

00:41:31 Congratulations.

00:41:32 Well, it's also deserved, but I also just saw an X, I don't know, a post on X Twitter,

00:41:38 whatever you, however you, addressed these things, where you said you showed a graph

00:41:43 where the number of GitHub stars for FastAPI just passed Flask.

00:41:48 And, you know, I have a lot of respect for Flask and the Palette team and David Lord

00:41:52 and all those folks, but, you know, awesome, awesome that your stuff has taken off so much.

00:41:56 That's really cool.

00:41:57 It's super cool.

00:41:57 It's amazing.

00:41:58 And, you know, like Flask was one of the big inspirations for FastAPI, and I've been able

00:42:02 to be at this point.

00:42:04 It's crazy.

00:42:05 Like, yeah, I still can't get over it.

00:42:07 Yeah, super cool.

00:42:08 super cool to be able to build all this and to keep building more stuff.

00:42:11 So, yeah, super nice.

00:42:13 one final comment before we move on to Octoprint.

00:42:16 But, one of the things I kind of see you doing in the world is you're like

00:42:21 the combiner.

00:42:22 You're like, oh, we've got this cool stuff with Pydantic and Starlet, and how can we combine it

00:42:27 in this way to make this, you know, and Swagger.

00:42:29 And, like, similarly with SQL model, you're like, well, Pydantic is cool,

00:42:32 but SQLAlchemy is kind of cool, but it could be more or better, you know,

00:42:36 like, it could be better, right?

00:42:37 So, anyway, good job.

00:42:38 Yeah, and also, like, Typer, that is the library for building command line applications.

00:42:42 It just click with the type annotations, the same ideas from Pydantic, and now with,

00:42:46 you know, like, integrated building support for reach.

00:42:48 So, like, also, picking Will's work, trying just to put a bunch of things together.

00:42:54 I'm just, you know, like, I'm just making cocktails everywhere.

00:42:57 Yes, exactly.

00:42:58 It's more than that, but there is a lot of value in combining things in a smart way

00:43:02 and accessible way.

00:43:03 Yeah, awesome.

00:43:04 All right, Gina, you told us a little bit about the origin story, but like,

00:43:08 what did you try before?

00:43:08 And then I have a follow-up question that I think is unique to your project.

00:43:12 I wouldn't necessarily say that I tried anything before because the whole thing

00:43:16 was completely unintentional.

00:43:18 I basically bought myself a 3D printer in late 2012.

00:43:21 I wanted to be able to put it in my spare bathroom and monitor it from afar

00:43:25 because back then this thing was tying up my PC.

00:43:28 You had to constantly keep it connected so it could operate and that for hours

00:43:32 and hours and it made noises and it produced fumes and I just wanted it out of my office

00:43:37 and to be able to play games on my PC again instead of having it basically communicate

00:43:43 constantly with a 3D printer.

00:43:44 And so I bought myself a Raspberry Pi and I was looking online for something

00:43:48 to be able to just put on this Pi and attach to the printer and throw a Wi-Fi dongle in

00:43:52 because back then the Pi didn't have Wi-Fi built in and throw that in the spare bathroom

00:43:56 but there wasn't anything.

00:43:57 So over the course of my Christmas break in 2012 I sat down and changed that

00:44:02 and this is basically the origin story of Octoprint.

00:44:05 I just wanted to scratch my own itch.

00:44:07 I wanted to put my printer in my spare bathroom.

00:44:09 This is all.

00:44:10 And apparently a lot of people had the same problem because I just you know

00:44:14 like how we like to do these things.

00:44:16 We build something that we think might be interesting.

00:44:19 We throw it up on GitHub and go just like here go nuts enjoy have fun with that

00:44:23 and I suddenly started getting emails from all around the world like hey

00:44:27 I have this in this printer can you also make it work with that and so this escalated

00:44:31 and I went like oh someone is using it of course I'm going to add this support

00:44:36 and of course I'm going to add this feature and it just grew and grew and grew

00:44:40 and grew and apparently I just hit a nerve so this was utterly unplanned

00:44:44 this was never my intention at all and I just wanted to solve my own problem

00:44:49 and have continued to solve my own problems and the problems of other people

00:44:53 ever since.

00:44:54 Before Octoprint I actually was also quite active in a little project called DocuViki

00:44:58 where I was developing some plugins for that and I even did open source before I knew

00:45:04 what open source was with some PHP scripts when I was 18 or so that I threw up

00:45:09 on my website but yeah Octoprint was like it took over my life it just was an accident

00:45:15 a happy little accident maybe.

00:45:17 How did you decide okay this is a job for me rather than just a thing you worked on?

00:45:23 The thing is by mid-2030 2013 I went to 80% on my regular day job I used to be a

00:45:30 software architect slash consultant with big corporation Java World all the enterprise stuff

00:45:35 and to be able to dedicate one day per week fully to Octoprint plus of course

00:45:40 the weekends and the after hours and the vacations and all of that and that still

00:45:44 didn't suffice anymore by 2014 and I noticed that it was impacting my health

00:45:49 it was impacting my relationships and that was actually quite perfect timing

00:45:54 really when this company that hired me initially approached me and said hey do you want

00:45:59 to maybe fly out to us and we'll chat and if you like all of that what we have to propose

00:46:03 then we can just do that and this is how it then continued to go from 2014

00:46:08 until 2016 and yeah it was never my intention to become self-employed I'm a quite

00:46:14 risk-averse person actually so when this point came where I was like okay either

00:46:19 I find a way to keep funding this or I have to really drop it because it was

00:46:24 way too big by then to be kept as a pet project without being utterly utterly unhealthy

00:46:29 yeah I decided to jump into the cold water and have been trying to keep up

00:46:33 at the surface ever since basically so yeah all of that really completely

00:46:38 unplanned cool what an adventure indeed yeah and the good thing is even if people don't

00:46:43 understand what open source is or what code is I always have quite a topic

00:46:46 at parties so that is fun because yeah like people give you money for something

00:46:51 they can get for free what exactly yeah if you're not familiar with open source

00:46:56 then it definitely is a weird it was tricky to find a text consultant who understands

00:47:00 the concept so yeah I can imagine that's interesting I'm sure all right I was very

00:47:06 recently I was like what do you do what is your day oh I'm a software developer

00:47:10 so you work for a company not really what is it that you build well I build

00:47:15 a platform that is free for others to use and who's paying you a company

00:47:20 that pays money to companies to build companies so you're building a company

00:47:23 no it's actually you know like it was a long conversation they got bored

00:47:27 and later this doesn't make any sense yeah I've just taken to say I'm a software

00:47:32 developer and I work with 3D printers and then people usually stop asking questions

00:47:37 because 3D printers are this mysterious thing that no one understands anyhow

00:47:40 usually at least and then yeah unless they say oh 3D printers and then I say

00:47:45 yeah do you know 3D printers and they go yeah yeah I have one and then I can say

00:47:49 oh do you know Octoprint yes oh yeah I made that and then oh yeah it's tricky to explain

00:47:53 to people I'm sometimes not even sure my parents understand what I do so

00:47:57 I'm sure that my parents don't understand what I do that's okay I'm sure

00:48:03 they're still proud of you anyway it's fine yeah my definitely are proud of you

00:48:06 I would like to just maybe getting a little short on time you're coming up

00:48:09 to the end of our Avengers meeting let's close it out with this go around

00:48:13 one more time let y'all or maybe just as a group kind of chime in on this

00:48:17 speaking to the people out there listening who want to start an open source project

00:48:20 or want to contribute to open source or somehow kind of get involved in similar ways

00:48:24 what would you do different if you started now many of you have been working

00:48:28 on this for a long time you've had a lot of experience like if somebody said

00:48:31 well the world is somehow the memory has been erased from the fact that rough

00:48:37 or rich or octafrid or whatever existed to start over what would you do different

00:48:42 or the same I would use FastAPI yay good use of a time machine there everybody

00:48:48 I've had multiple conversations over the years where people are like why don't

00:48:51 you use this library I'm like oh it didn't exist exactly yeah this is the

00:48:55 problem exactly when you actually have a plug-in system then swapping out

00:48:59 stuff like that can become very tricky absolutely when I get asked what to work

00:49:04 on what to study what to focus how to get into open source or like almost any

00:49:09 of those questions I always say that the main advice I give is just to focus

00:49:13 on a problem that is important to you more than you know like innovation

00:49:18 market disruption or war whatever just like focus on a problem that is actually

00:49:22 important to you hopefully that is important to others as well and if it's not

00:49:26 a problem that affects you directly hopefully it affects someone that is

00:49:29 very close to you so you can get like a very tight feedback loop of what

00:49:33 you are building and then try to solve it and then use that as the guide

00:49:37 of what to do what to learn what to focus on what to do in many cases it's just

00:49:42 learning a framework that is already there you know like why would I go and build

00:49:46 a system to control 3D printers instead of just like learning how to use

00:49:50 auto print in many cases solving the problem is just like using the tool

00:49:54 that is already there but then in some cases you end up figuring out that there's

00:49:58 no tool and you just have to build it there's actually no lint there and formatter

00:50:03 that can be super fast so you can run it every time you just hit save so then

00:50:07 you just have to build it in Rust and create rough or like you know like

00:50:10 there's always like this thing that you are trying to solve that is just

00:50:15 not solved there yet and that is what gives you the best value and the best

00:50:19 outcome in many cases it can be just like you know contributing to another

00:50:23 open source project or building something new but the thing is like for me

00:50:28 it's just like focusing on a problem that is important that is what has worked

00:50:33 for me at least good advice I would add to that that you really shouldn't

00:50:36 try to you need to be really passionate about the thing as well right it

00:50:40 needs to be something that is really something you're into something that

00:50:43 will that you will want to spend a lot of time on that is actually not your

00:50:48 working hours and such because otherwise the whole jog until this becomes

00:50:53 anything viable anything big enough to support you in any kind of way even

00:50:57 if it's just being able to drink a coffee per week or something that will

00:51:02 be a quiet long slog and a lot of work and a lot of blood and sweat and tears

00:51:07 and so you really need to be into this so that you want to do that if you

00:51:11 are just in that for the end goal of I don't know becoming rich through open

00:51:15 source which by the way will probably not work only will I go rich then this

00:51:21 will not work out you need to focus on the path to the goal a lot of people

00:51:26 try to reach for the end goal before they are willing to walk the path I

00:51:32 happen to be in the GitHub star program and I've had a lot of people ask

00:51:37 me how do you become a GitHub star and that is the wrong question to ask

00:51:41 how do you become an open source maintainer of a popular project you just

00:51:46 have to do whatever you are interested in you have to do work and you have

00:51:51 to be passionate about your work and then maybe if you hit the right nerve

00:51:54 then that will happen and maybe it won't I think it's very interesting that

00:51:58 none of us had a career path to where we are now we didn't set out to be

00:52:04 where we are now it just feels like we followed our intuition and it worked

00:52:09 out which means it's very difficult when someone asks me how do you become

00:52:12 an open source developer how do you start a company I'm not quite sure I can

00:52:16 tell you my path to there but it's very hard for me to articulate to someone

00:52:20 else how to get there I think there's a lot of luck involved as well right

00:52:24 it's like you have to do all this stuff and roll this dice if it gets a six

00:52:27 you can be successful there's an element of luck but it's kind of luck you

00:52:31 make for yourself and it might take you to somewhere else or it might not

00:52:36 but as long as you're passionate about it and you enjoy it then great things

00:52:39 will happen I think also Will and Charlie you both took some specific time

00:52:43 on your own money to really level up what you're working on which is pretty

00:52:48 brave not a lot of people would say I'm just going to spend my savings to

00:52:53 work on this project and see if I can make it go so you've earned some of

00:52:56 that through taking that chance and putting that time and effort I think

00:52:59 for me that didn't last long because I'm after 15 months I was living on

00:53:02 GitHub sponsorship VCs came along and then there was cash everything changed

00:53:07 and you had to learn a whole new set of skills I'm sure I do feel lucky that

00:53:15 like I said this is my first time being a maintainer and it was very clear

00:53:18 to me quickly that for Ruff to have the pace of development and the scope

00:53:23 that it had to be a full time thing and that was pretty obvious to me quickly

00:53:27 and I have a lot of respect for people who have been maintainers for longer

00:53:31 periods of time and in a way where it's not their full time job or they have

00:53:35 to do it on the side I have been in that position but it's already clear

00:53:39 to me that that takes a lot of dedication and commitment so I feel very lucky

00:53:44 that I get to work on open source full time I know it's not all entirely

00:53:47 luck right like you increase your luck surface area and opportunities come

00:53:51 your way but I do think it's a fortunate position that these kinds of opportunities

00:53:56 do exist because maintaining popular stuff is a lot there are privileges

00:54:00 that come with it 100% but it's a lot of work and a lot of stress and a lot

00:54:06 of responsibility and you don't necessarily have to start your own right

00:54:09 away I didn't have gray hair before this you don't have to start your own

00:54:12 either you could contribute to a really popular one and get into the scene

00:54:16 and you know like Eric that sounds a little bit like your story like you

00:54:18 were in the Django scene and then spun off from that what you are doing right

00:54:22 yeah definitely and you know part of an open source community and definitely

00:54:26 going to PyCon and just being surrounded by those people because that was

00:54:29 always the it's very lonely work just to have an inbox of github issues and

00:54:34 no inbox thank you you know and like going to conferences and that kind of

00:54:38 stuff was really where you feel the appreciation and you really kind of actually

00:54:42 feel the value that you're providing as well as just the stress of the things

00:54:47 you're breaking so absolutely the conferences are great to really feel the

00:54:53 appreciation rather than just the request they'll say thank you and then

00:54:57 they'll give you a bug report but at least the thank you I'm talking to you

00:55:02 there is this can I just show you this an interesting observation for me

00:55:08 a year ago I didn't know anyone in Python open source at all I was a user

00:55:15 of Python in my day job every day but I was not interacting with Python in a

00:55:19 year now like Sebastian we've interacted a bunch there's a lot of people

00:55:23 that I've come to know and think of as friends so I think especially if you're

00:55:28 interested in getting involved and putting in work I really don't think there

00:55:31 are significant barriers and you get out of it what you put in so I think

00:55:37 I've been very impressed with just how welcoming and friendly the community

00:55:39 has been especially other maintainers yeah absolutely talk to a lot of people

00:55:43 who show up at PyCon and they're like I was really nervous to come here or I feel

00:55:46 like it didn't fit in and they're you know just had such a great experience

00:55:50 and I said well did you feel like that was my first PyCon this year I'd never

00:55:54 been to a fight on conference and so I was like we did up at such an amazing

00:55:57 party that's true that was interesting all right guys well I think we are

00:56:06 pretty much out of time anyone want to have some final thoughts for listeners

00:56:10 before we wrap it up go and build some cool stuff who's brave enough how

00:56:15 can maintain it today I think give cake not puppies let's leave it with that

00:56:18 huh all right give cake not puppies and be really careful before you start a

00:56:22 popular source project it might take over your life if you want this great

00:56:27 but if not then yeah careful what you wish for you might get it exactly Gina

00:56:31 Sebastian Eric Will Charlie thank you all for being on the show this has

00:56:36 been a a ton of fun thank you very much for having us a pleasure and honor

00:56:39 to be with these amazing people thank you for the invitation I agree honestly

00:56:43 I had a blast just hearing everyone's stories because I hadn't heard any

00:56:46 of this before so thanks thanks to everyone else and thanks Michael yeah

00:56:49 you bet bye bye bye bye bye this has been another episode of talk python

00:56:53 to me thank you to our sponsors be sure to check out what they're offering

00:56:57 it really helps support the show this episode is sponsored by base dash base

00:57:03 dash uses AI to build a dashboard for your database get a custom admin view

00:57:08 in your postgres Microsoft SQL server my SQL Maria DB or Redshift database

00:57:14 get started for free at talkpython.fm/base dash take some stress out of

00:57:20 your life get notified immediately about errors and performance issues in your

00:57:24 web or mobile applications with Sentry just visit talkpython.fm/sentry

00:57:30 and get started for free and be sure to use the promo code talkpython all one

00:57:34 word want to level up your python we have one of the largest catalogs of python

00:57:39 video courses over at talkpython our content ranges from true beginners to deeply

00:57:44 advanced topics like memory and async and best of all there's not a subscription

00:57:48 in sight check it out for yourself at training.talkpython.fm be sure to subscribe to

00:57:53 the show open your favorite podcast app and search for python we should be right

00:57:57 at the top you can also find the iTunes feed at /itunes the Google play

00:58:02 feed at /play and the direct RSS feed at /rss on talkpython.fm

00:58:07 we're live streaming most of our recordings these days if you want to be part of the show and have your comments featured on the air

00:58:13 be sure to subscribe to our YouTube channel at talkpython.fm/youtube

00:58:18 this is your host Michael Kennedy thanks so much for listening I really appreciate it now get out there and write some Python

00:58:24 code Music Music Music Music Music Music

