00:00:00 This episode is a special crossover from my Python Bytes podcast that I co-host with Brian

00:00:04 Aukin.

00:00:04 It's got a different vibe than the interview shows here and short topics coming in fast

00:00:10 and quick.

00:00:11 If you haven't listened before, I think you're going to enjoy it.

00:00:13 So here are a bunch of excellent Python tips and tools to close out the year.

00:00:18 See you all in the first week of January.

00:00:21 And while I'm talking directly to you, thank you very, very much for taking the time to

00:00:26 listen to my shows and support all of my projects.

00:00:28 Cheers.

00:00:30 This is Talk Python To Me, sort of.

00:00:32 Episode 443, recorded December 19th, 2023.

00:00:37 Welcome to Talk Python To Me, a weekly podcast on Python.

00:00:54 This is your host, Michael Kennedy.

00:00:56 Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython,

00:01:01 both on fosstodon.org.

00:01:03 Keep up with the show and listen to over seven years of past episodes at talkpython.fm.

00:01:09 We've started streaming most of our episodes live on YouTube.

00:01:12 Subscribe to our YouTube channel over at talkpython.fm/youtube to get notified about upcoming

00:01:18 shows and be part of that episode.

00:01:20 This episode is sponsored by Posit Connect from the makers of Shiny.

00:01:24 Publish, share, and deploy all of your data projects that you're creating using Python.

00:01:29 Streamlit, Dash, Shiny, Bokeh, FastAPI, Flask, Quattro, Reports, Dashboards, and APIs.

00:01:35 Posit Connect supports all of them.

00:01:38 Try Posit Connect for free by going to talkpython.fm/posit.

00:01:42 P-O-S-I-T.

00:01:43 And it's also brought to you by us over at Talk Python Training.

00:01:48 Did you know that we have over 250 hours of Python courses?

00:01:52 Yeah, that's right.

00:01:54 Check them out at talkpython.fm/courses.

00:01:57 Hello, and welcome to Python Bytes, where we deliver Python news and headlines directly

00:02:01 to your earbuds.

00:02:02 This is episode 365.

00:02:05 Wow.

00:02:06 Recorded.

00:02:07 It's like we've been doing it for a year.

00:02:08 Yeah.

00:02:09 Recorded December 19th, 2023.

00:02:13 Yeah.

00:02:14 And I'm Brian Okken.

00:02:15 Hey, I'm Michael Kennedy.

00:02:16 And yeah, if we did it, if somebody listened to one a day from now on, they would be behind

00:02:23 because we'll be way ahead of 365 by the time they finish.

00:02:27 But yeah.

00:02:27 Still be awesome.

00:02:30 Well, want to kick us off with something cool?

00:02:34 Oh, before we kick it off.

00:02:35 Yeah, go ahead.

00:02:36 Let's say that this episode is sponsored by us.

00:02:39 So please support us and other people.

00:02:42 I'm going to talk about that a little bit later at the end of the show.

00:02:45 But also check out all the courses at Talk Python Training.

00:02:50 Check out the Complete pytest course.

00:02:52 You can be a Patreon supporter.

00:02:54 And also, if you want to connect with us, one of the best ways to do it is through on

00:02:58 Mastodon.

00:02:59 And we're all on Fosstodon, or at least Michael and I are.

00:03:03 At M.

00:03:04 Kennedy, at Brian Okken, and at Python Bytes.

00:03:07 Indeed.

00:03:08 Hey, do I feel like I'm really fast, Brian?

00:03:12 Like Neo in the Matrix?

00:03:13 Mind-bendingly fast?

00:03:15 Let's go with yes.

00:03:17 Okay.

00:03:18 I appreciate that.

00:03:19 Because I just got fiber, gigabit fiber installed 30 minutes ago.

00:03:24 I was hoping it wouldn't destroy the show, but it almost didn't make it, but it made it.

00:03:28 Ooh, nice.

00:03:29 So hopefully that doesn't curse it, that something doesn't go wrong and it will crash.

00:03:32 But 950 megabit down, which is fine, but 950 megabit up is glorious.

00:03:37 We should speed up the playback speed when we release the MP3 so it sounds really fast.

00:03:43 No, we're talking really fast because it's really uploading.

00:03:45 Yeah.

00:03:45 No, let's talk about Hatch, because Hatch is awesome.

00:03:49 OFEC is the maintainer-creator of Hatch, and boy, oh boy, has he gone big on his latest release,

00:03:56 1.8.0.

00:03:57 So Hatch is like Flit, is like PDM, is like pip, ENV, and many of these other poetry, others.

00:04:05 If I'm leaving your version of this out, I apologize.

00:04:08 But with version 1.8, this has gone in a bit of a different direction.

00:04:15 You know, I had OFEC on the Python packaging panel.

00:04:19 I think Steve Dower was there.

00:04:20 Some other folks were there.

00:04:22 Really interesting that there's this tension between should there be an app that manages

00:04:28 Python environments with Python, or should there be a thing that manages the Python itself,

00:04:34 right?

00:04:35 Kind of like PyEMV, for example, right?

00:04:38 So Hatch has gone in that direction of now Hatch manages Python, not just Python projects.

00:04:45 And there's this thing to solve this problem in the form of PyApp.

00:04:50 So PyApp is even maybe more awesome.

00:04:53 PyApp is a runtime installer for Python projects written in Rust, and they can be, you ready

00:05:00 for this?

00:05:00 I'm so, so excited.

00:05:02 Your Python app can be distributed as a standalone executable, a .exe or .app for users.

00:05:09 What do you think, Brian?

00:05:10 I'm very interested in finding out more.

00:05:12 Now, this whole post is a little bit wordy.

00:05:15 So let me jump into the omnivore version of it over here, which has a huge icon.

00:05:20 So Ofex says, look, one of the things that's been a perpetual problem for Hatch and all the

00:05:25 others I named is that Python itself is a dependency.

00:05:27 So in order to use Hatch or any of these other tools or any apps, you have to say, well, go

00:05:32 get Python and then get back to me and we'll start talking, right?

00:05:35 So he came up with this thing called PyApp that will create installers for the different

00:05:40 platforms.

00:05:40 Claims it's trivial.

00:05:41 It's probably never trivial, but possible.

00:05:44 Possible would be awesome even.

00:05:46 And so starting with this releases, not only are the binaries available for every platform,

00:05:52 but there are installers as in like install wizards on Windows and a DMG type thing, I'm

00:05:59 guessing, or a PKG on macOS.

00:06:01 But so the installer for the macOS is signed using the certificate from the same account used

00:06:06 to sign the official distributions of Python.

00:06:08 So you won't get any security warnings or blocking.

00:06:10 Thank you, Ederbin, for helping out with that.

00:06:13 And Hatch itself with any good system is self-updating.

00:06:16 So you can Hatch self-update.

00:06:18 What else I want to point out?

00:06:19 There's also a new Python, like Hatch space Python command group that will allow you to

00:06:24 manage things.

00:06:25 So you can show what you have installed.

00:06:27 You can install different versions of Python, CPython and PyPy for those.

00:06:32 Works with virtual environments.

00:06:34 It has built in rough and Ruff format integrations.

00:06:38 Traditionally, it's been somewhat slow to like activate and set up a virtual environment

00:06:45 that's already previously been installed because it'll refresh and recheck that all of the

00:06:50 dependencies are there and everything.

00:06:52 So now it does a hash of those.

00:06:54 And so only if the dependency statement doesn't match the hash, right?

00:06:59 Basically, so it'll pre-compute all that stuff.

00:07:00 So now it should be basically instant.

00:07:03 So also some minor breaking changes around build defaults and the new app build targets,

00:07:09 what I've been raving about.

00:07:10 So OFAC, you killed it.

00:07:12 Can't believe it.

00:07:12 It's awesome.

00:07:13 Awesome.

00:07:13 So Hatch has hashes?

00:07:16 If you hash a hatch with hashling and, you know, like there's some kind of tongue twister

00:07:24 in there we could do.

00:07:24 I'm not doing it though.

00:07:25 Got to be.

00:07:27 I'm excited about this.

00:07:28 It's very cool.

00:07:29 I definitely want to play with it.

00:07:31 Yeah.

00:07:31 Yes, indeed.

00:07:32 This portion of Talk Python To Me is brought to you by Posit, the makers of Shiny, formerly

00:07:37 RStudio and especially Shiny for Python.

00:07:40 Let me ask you a question.

00:07:42 Are you building awesome things?

00:07:44 Of course you are.

00:07:45 You're a developer or a data scientist.

00:07:47 That's what we do.

00:07:47 And you should check out Posit Connect.

00:07:50 Posit Connect is a way for you to publish, share and deploy all the data products that you're

00:07:55 building using Python.

00:07:56 People ask me the same question all the time.

00:08:00 Michael, I have some cool data science project or notebook that I built.

00:08:03 How do I share it with my users, stakeholders, teammates?

00:08:06 Do I need to learn FastAPI or Flask or maybe Vue or React.js?

00:08:11 Hold on now.

00:08:12 Those are cool technologies and I'm sure you'd benefit from them, but maybe stay focused on

00:08:16 the data project.

00:08:17 Let Posit Connect handle that side of things.

00:08:19 With Posit Connect, you can rapidly and securely deploy the things you build in Python.

00:08:25 Streamlit, Dash, Shiny, Bokeh, FastAPI, Flask, Quattro, Reports, Dashboards, and APIs.

00:08:31 Posit Connect supports all of them.

00:08:33 And Posit Connect comes with all the bells and whistles to satisfy IT and other enterprise

00:08:38 requirements.

00:08:39 Make deployment the easiest step in your workflow with Posit Connect.

00:08:43 For a limited time, you can try Posit Connect for free for three months by going to talkpython.fm

00:08:48 slash posit.

00:08:50 That's talkpython.fm/P-O-S-I-T.

00:08:53 The link is in your podcast player show notes.

00:08:55 Thank you to the team at Posit for supporting Talk Python.

00:09:00 I'm not sure how long this has been out, but Hinnick has been promoting a new project that

00:09:08 he's got called Services or SVCS, which is short for Services and pronounced services.

00:09:15 And it is a, I think it could be used for more than web stuff.

00:09:19 But the intent, I think, was for removing some labor plate code from hooking up dependencies

00:09:27 and different, like your database and your cache and all sorts of stuff to an application.

00:09:34 Typically a web application, but I think it could really be anything.

00:09:38 But it's a flexible service locator.

00:09:41 And one of the reasons why I haven't covered it yet on Python Bytes, I don't think I have,

00:09:47 is because I didn't quite understand what it was doing.

00:09:51 And it took me a while to get my head around it.

00:09:53 Why does this exist?

00:09:53 But it's pretty cool.

00:09:56 And Hinnick apparently realizes that it is a bit difficult to get your head around what this

00:10:01 is doing.

00:10:02 So he just recently released a video describing this project.

00:10:08 So really great video describing services, what you can do with it, and also how to pronounce

00:10:16 his name.

00:10:17 He doesn't pronounce his last name, though.

00:10:19 Apparently that's left for maybe episode two.

00:10:22 But Shalavak, I guess.

00:10:25 Anyway, it's pretty cool.

00:10:28 Actually, I'm pretty excited about it after watching it.

00:10:31 Watching the video.

00:10:33 I thought maybe it wouldn't be for me.

00:10:35 But especially for keeping services contained or the setting up services, looking them up

00:10:42 within different parts of your application, and then getting them all cleaned up correctly

00:10:48 at the end.

00:10:48 That's kind of what it does, plus a whole bunch of other stuff.

00:10:51 And one of the neat things is throughout all of this documentation, the documentation is

00:10:55 amazing.

00:10:56 Throughout all of this documentation, he has examples in AIo HTTP, FastAPI, Flask, Pyramid,

00:11:04 and Starlet.

00:11:04 Nice.

00:11:05 And the video is talking about Flask, but it's cool that he just already hit all the bases.

00:11:11 Like, how do I do this in Starlet?

00:11:13 Well, it's just a little different.

00:11:15 Most of them, mostly they're similar, but little different ways to use it throughout the different

00:11:21 applications.

00:11:22 So it's pretty cool.

00:11:23 He also mentions in the video that he took a really long time really talking about the terminology

00:11:30 and the glossary of the documentation.

00:11:33 And actually, I really appreciate this of somebody saying, okay, this is generally what I think

00:11:39 of as what the meanings for all of these words are.

00:11:43 And a lot of these words are overused in the English language to begin with, and even in talking

00:11:50 about programming, web programming.

00:11:51 But things like, what is a service?

00:11:53 What is a resource?

00:11:54 What is a dependency?

00:11:55 Service layer.

00:11:57 He goes through a whole bunch of different terms, what it means to him and probably to everybody

00:12:02 else, but if you're unfamiliar with him.

00:12:04 And even a decent discussion of dependency injection.

00:12:07 So one of the things he talks about is that this is not really a dependency injection thing.

00:12:13 It's inversion of control, but it's a little different than service.

00:12:17 Service locators are a little different than dependency injection.

00:12:20 And I kind of appreciate that discussion.

00:12:23 It's pretty cool.

00:12:23 So anyway, kudos to Hinnick for doing this and for helping us pronounce his name.

00:12:29 Yeah, this looks cool.

00:12:31 I definitely want to check this out.

00:12:32 It's news to me, so I will be checking it out.

00:12:34 Cool.

00:12:35 Mm-hmm.

00:12:35 We have new leaders, Brian.

00:12:39 We do.

00:12:40 Yes.

00:12:40 For the Python world, we have new leaders.

00:12:42 And specifically, the steering council election results are in for next year.

00:12:48 Okay.

00:12:48 So for the 2024 term, we have Pablo Galindo Salgado.

00:12:53 We've got Gregory Smith, Emily Morehouse, Barry Warsaw, and Thomas Waters.

00:12:57 So very cool to see them all leading the way.

00:13:02 There's a lot of familiar faces there.

00:13:04 So that's pretty cool.

00:13:05 I don't expect a whole lot of different from the year before, but here's the results.

00:13:10 You can actually see in PEP 8105, you see everybody who was potentially a candidate, how many votes

00:13:19 they got by people who are disenfranchised.

00:13:21 I don't know what that means.

00:13:22 Or the franchised voters, the one who are enfranchised, how many votes that they got.

00:13:28 And you can put that all together.

00:13:29 So this begs the question, like, well, how do you get on this list?

00:13:33 You get on this list by being nominated by a core developer.

00:13:37 So everyone on the list was nominated by a core developer.

00:13:39 If you are a core developer, you can nominate yourself.

00:13:44 So that could be the person you see here, because everyone I see, I think, is a core developer.

00:13:49 Okay.

00:13:49 But anyway, the results, the results are in, and we have those five folks.

00:13:54 Welcome and congrats.

00:13:55 Awesome.

00:13:55 Nice.

00:13:56 That's a good set of names, too.

00:13:58 Yeah.

00:13:58 So.

00:13:59 Yeah.

00:13:59 All right.

00:14:00 Indeed.

00:14:01 Well, there probably is some protocol around the election results, right?

00:14:07 No, you could model it with classes, or you could functionally model it, like, in an immutable

00:14:12 way, but I don't know about a protocol.

00:14:14 Okay.

00:14:14 We're just great at transitions on this podcast.

00:14:19 The next I want to talk about Python protocols.

00:14:22 So there's an article from Carlos Vecina, I think, called Python protocols, defining a protocol

00:14:31 and when to use it.

00:14:32 And actually, this is something that I have, I've been meaning to play with for actually

00:14:37 some years, and I haven't really done much with it yet.

00:14:40 So I really appreciate this article.

00:14:41 He's talking about protocols are a feature of Python that were added in Python 3.8.

00:14:48 So really anything maintainable right now, you can use protocols.

00:14:54 And you kind of, mentally, I think of them kind of like class inheritance or mix-ins or abstract

00:15:03 base classes.

00:15:04 And that's one of the things he talks about in this article is they are in that same similar

00:15:10 space, but you use them a little different.

00:15:13 And you might use them together with other forms too, like with mix-ins and abstract base

00:15:18 classes.

00:15:19 So the article just goes through on how to define a protocol.

00:15:23 And really, and he's also discussed also a decent tutorial on abstract base classes and mix-ins

00:15:29 as well, which is nice to kind of describe them all together.

00:15:32 But the protocol thing is just sort of, let me see if I can find an example.

00:15:37 So you inherit, you have a class that's inherited from protocol and you give it, you kind of give

00:15:44 it function definitions, but don't fill in the body.

00:15:47 So that's kind of what a protocol is.

00:15:49 And then other classes that use the protocol derive from that protocol.

00:15:56 From like in his example, there's a class called explainable, something that has an explained

00:16:02 function.

00:16:02 And so you would derive from explainable and then your new class would be a instance of

00:16:11 a protocol.

00:16:11 But all it really says is that you can, other places that use it for types and stuff can

00:16:16 declare that they need a protocol passed in or a explainable class.

00:16:21 And then you can use anything that derives from that.

00:16:23 So pretty cool.

00:16:24 Yeah, Brian, let me jump in and just say one extra point here.

00:16:28 Like what's awesome about this stuff is we've had duck typing like this.

00:16:33 There's an assess fairness function that it has to call explain on the object passed in.

00:16:38 And duck typing said, well, if it takes that, if you can pass it in there and it will run

00:16:42 when you call explain on it, it must fit.

00:16:44 Right.

00:16:44 But the typing tools don't check.

00:16:46 So like PyCharm, for example, would just go, well, it's a whatever.

00:16:49 So good luck with that.

00:16:50 But once you do this protocol stuff, if you say the function takes an explainable and you

00:16:55 have explainable as a protocol, you can pass stuff in and it doesn't even have to derive

00:17:00 from or be related to that protocol in a base class.

00:17:03 Like anything that is passed in there, the type system will look at it and verify it hasn't

00:17:08 explained, even if it's in a third party package and you don't control it.

00:17:11 So it's like a way to project typing structure onto a dynamic thing that is not necessarily

00:17:16 your code.

00:17:17 It's wild.

00:17:17 Oh, cool.

00:17:18 I kind of had that a little bit wrong then.

00:17:20 Awesome.

00:17:21 You can drive from it.

00:17:22 It gives you more information potentially, but.

00:17:24 It doesn't have to be.

00:17:25 You don't even have to, which that's the totally wild aspect.

00:17:28 That's what I think is really different for this.

00:17:30 Okay.

00:17:30 Yeah.

00:17:31 Oh, awesome.

00:17:32 That's pretty cool.

00:17:33 No.

00:17:33 Yeah.

00:17:34 So clearly I haven't thoroughly read this article, but I do want to get into really getting my

00:17:40 head around abstract based classes, mix ins and protocols and stuff.

00:17:43 And partly.

00:17:44 I wouldn't say that though, because like your experiences in C++, mine also is in C++ and C

00:17:49 sharp and all of those languages have these interface ideas, but there's, they're, they're put

00:17:53 into the type system through inheritance.

00:17:55 And so you can inherit from it and it does what you expect.

00:17:57 And it seems the right thing, but what's weird is you don't even have to.

00:18:00 That's what's weird about it.

00:18:01 Okay.

00:18:02 Cool.

00:18:02 Oh, awesome.

00:18:03 Ah, now I definitely want to play with it more.

00:18:05 yeah.

00:18:06 Cause I've kind of missed that aspect of C++ in Python.

00:18:09 Yeah.

00:18:10 so nice.

00:18:11 Anyway, also, I'm assuming it's a AI generated image, but really cool image at the top of the

00:18:18 article.

00:18:19 It's good.

00:18:19 I don't, I'm not sure what my opinion is about it.

00:18:21 I'll ask ChatGPT, how I feel about it.

00:18:23 It's hard to describe how I feel.

00:18:25 So I'll, you know, yeah, I'm actually sort of, I don't know, this is a tangent, but I've

00:18:31 switched to, was, was playing with like Bing is my primary search engine at work.

00:18:37 I just, I don't know that a new computer, it just was there and I'm just going with it for

00:18:41 a while, but everything I search is like, it gives me an AI generated answer first.

00:18:45 And I'm like, I don't, I don't know if I like that very much.

00:18:49 Yeah, I know.

00:18:50 I know.

00:18:50 Anyway, well, that's, that's it for our main stuff.

00:18:53 Do you have any extras?

00:18:55 I could have almost made it an extra, extra, extra this time.

00:18:58 So yeah, sure.

00:18:58 I do.

00:18:58 First of all, I've been wanting to say this several times and I'm usually like looking at

00:19:03 my screen and see what I want to share and stuff.

00:19:05 And I didn't have this anywhere.

00:19:06 So I just pulled up Mastodon to remind me there are tons of people interacting with us

00:19:11 over on Mastodon.

00:19:12 And I've had some great conversations and I want to, I'm sure you do too, Brian, want to

00:19:16 follow people back, but there's, there's kind of a, at least for, I'll say these are Michael's

00:19:21 Mastodon's conventions.

00:19:23 you, you could take them for what you want.

00:19:25 I just made them up, but this is how I think about it.

00:19:27 So people will follow me and I'm like, huh, did that person follow me?

00:19:30 Cause they listened to the show and listened to Brian say, you should come join us and have

00:19:33 a conversation.

00:19:33 Hey, I'd like to follow that person.

00:19:35 But a lot of times they have no picture, no description, no web pages, no posts.

00:19:39 You're like, yeah, maybe not next, you know?

00:19:42 And so I'm just going to say, if you have a picture and a description, a description seems

00:19:47 somewhat relevant.

00:19:47 I will certainly follow you back.

00:19:49 If you have posts, that's plus one.

00:19:51 If you have a verified webpage, which is easy, another plus one.

00:19:54 And a lot of people have private accounts who follow me.

00:19:57 I'm like, why are you in social media?

00:19:59 If you want a private account?

00:20:00 I don't understand what this is because your profile is public.

00:20:03 Just your posts are private, but the platform has a way to have private posts.

00:20:07 I don't understand.

00:20:08 So anyway, probably not going to get a lot of engagement.

00:20:11 If you have a private account, just post private messages for things you don't want to see.

00:20:15 So, and while I'm on the topic of Mastodon, I had a really nice and productive conversation

00:20:20 with the PSF around my mask rant on PyCon.

00:20:23 So that was nice over there.

00:20:25 Some people weren't nice as they sent me, like not necessarily nice responses, but the PSF

00:20:29 did.

00:20:29 And that was cool.

00:20:30 That's nice.

00:20:30 Yeah.

00:20:31 All right.

00:20:31 Next one.

00:20:32 Oh, wait.

00:20:33 Before you move on, I just want to add my two cents on the picture.

00:20:38 I also prefer to be able to see who it is, but also primarily if the picture is something

00:20:44 that they're using on other stuff.

00:20:45 So like if a lot of people have a, their profile picture on their, like the profile picture on

00:20:50 their blog and on their, and in their primarily a GitHub user and, and they have the

00:20:56 same profile there, even if it's like a stylized something, but if it's the, if it's distinctive

00:21:02 and the same everywhere, like glyph, for instance, has a, has a different thing for them.

00:21:07 I I'm okay with that, but most people I think go with their picture.

00:21:11 I think it's the right answer.

00:21:12 But yeah, when I say picture, I don't mean necessarily it has to be your picture.

00:21:16 Just the fact that it's not the default icon.

00:21:18 You've taken enough effort to put in something, even if it's just a picture of a triangle, I don't

00:21:23 care.

00:21:23 You know?

00:21:24 Yeah.

00:21:25 All right.

00:21:26 Paul is asking in the audience, what is your secret?

00:21:29 Okay, well, we'll do this.

00:21:33 we, earlier on, we were talking about how Michael's got a faster internet now, so we

00:21:39 should make it really fast speed.

00:21:41 and then somebody commented, wagrants, wagrants, commented, I played it at one and a half

00:21:47 times speed.

00:21:47 Then I got up to a live event.

00:21:50 and all of a sudden Brian should sounded like he got drunk in one second.

00:21:55 and so I said, Brian's secret is out.

00:21:59 So nice.

00:21:59 I'll just have another drink of my, Irish coffee.

00:22:03 It's coffee.

00:22:03 Trust me.

00:22:04 All right.

00:22:06 more extras.

00:22:08 So, Dropbox spooks users with turning on new AI features that can almost automatically

00:22:15 send your private documents to open AI.

00:22:18 Now you have to interact with part of the site for it to happen, but it doesn't say, Hey,

00:22:22 necessarily, cause you does, you touch this.

00:22:24 We're now sending your social security number away.

00:22:27 but anyway, that's kind of unnerving.

00:22:31 Yeah.

00:22:31 Yeah.

00:22:32 So you can check that out on defaulted to on if you're not subject to the GDPR, but defaulted

00:22:38 to off if you are.

00:22:40 So, you know, plus one for GDPR there, I suppose.

00:22:43 So mine was turned on.

00:22:44 Okay.

00:22:44 So you have to go check to make sure that they're not sharing all of your.

00:22:47 Yes, exactly.

00:22:49 And it's on by default for you, Brian.

00:22:50 So you might want to check the whole conversation.

00:22:54 It's on ours.

00:22:55 The, the comment section of our second is like the top notch place for comments, I

00:23:00 think.

00:23:00 So really good.

00:23:01 Okay.

00:23:02 Yeah.

00:23:03 There's, it talks about how to go find it.

00:23:04 So anyway, this like maybe think, you know what?

00:23:06 I should really be a little more.

00:23:07 I have, I have like three terabytes of data and Dropbox.

00:23:10 So I'm like, maybe I should be a little more specific and intentional about where I put

00:23:14 my stuff.

00:23:14 So I went on this, this ran on Mastodon, by the way, a bunch of people sent me all sorts

00:23:17 of options of like, okay, if not Dropbox, then what?

00:23:20 And I decided whatever I'm doing is probably good to have it end to end encrypted.

00:23:25 Cause then I don't care what they try to do with it.

00:23:27 Right.

00:23:27 Cause they can't decrypt it.

00:23:29 Yeah.

00:23:29 That, that solves a whole lot of problems.

00:23:31 You care about the security, but it doesn't matter as much as if you're just exposing files

00:23:36 or leaking stuff or whatever.

00:23:38 Right.

00:23:38 So I decided to go, I already have a paid Proton account.

00:23:43 So all my private stuff, all my private documents, like my scans of things I want to save that might

00:23:48 be sensitive.

00:23:48 They're going to Proton drive.

00:23:50 I have 500 gigs and it's already paid for and encrypted.

00:23:54 There's async thing you can install.

00:23:56 That's pretty excellent.

00:23:57 I looked around and some people suggested next cloud, which is really interesting.

00:24:02 It's maybe more than I want.

00:24:03 It's almost like a document calendar, everything self-hosted.

00:24:07 Maybe do that next.

00:24:08 Yeah.

00:24:09 Own cloud got like super owned just last week.

00:24:13 And there's a similar self-hosted thing, which makes me a little nervous to self-host stuff.

00:24:16 I know there are people who host it for you, but it's not next cloud.

00:24:19 It's a little bit indirect.

00:24:21 So maybe violin.

00:24:22 I don't know if you've heard of this, but they have encrypted cloud storage and the end again,

00:24:29 pretty nice.

00:24:30 I think this is British.

00:24:32 I don't remember exactly.

00:24:33 UG.

00:24:34 Not sure.

00:24:35 But somewhere in Europe, this company, it looks pretty good.

00:24:39 I have not tried it, but in encrypted.

00:24:42 There's IceDrive, the next generation cloud storage.

00:24:44 Also, I think this might be the British one.

00:24:46 Yeah, this is in Wales.

00:24:47 I mean, British, I mean, UK.

00:24:49 Sorry, folks.

00:24:49 So that's pretty interesting.

00:24:51 And I think I'm going to go with sync.com.

00:24:55 Super simple.

00:24:56 All they do is sync and then encrypted for six terabytes.

00:25:00 It's like 140 bucks a year or something like that, which is a lot versus 240 for less than

00:25:05 that in Dropbox.

00:25:05 Anyway, if people are in this zone of like, I'm looking for all this stuff.

00:25:09 Oh my gosh.

00:25:10 Like, what am I going to do?

00:25:11 Regardless of whether you care about the Dropbox fiasco.

00:25:14 Here's a bunch of options people can pick.

00:25:16 There was one comment in this whole discussion that was pretty interesting.

00:25:19 I think it was in the Ars Technica thing.

00:25:23 And it said, look, if you give your data unencrypted to somebody, another company, even if you trust them, you don't really necessarily control that anymore,

00:25:30 especially if they decide to pass it along.

00:25:32 So somebody pointed out Cryptometer.

00:25:35 Have you heard of this, Brian?

00:25:36 No.

00:25:37 Cryptometer is cool.

00:25:38 I have used something like it, but it's older and no longer supported, which makes me sad.

00:25:42 So what you do is you run this app.

00:25:45 It does like super strong encryption.

00:25:47 You control the key, right?

00:25:48 It's just like a thing you make up and don't give away.

00:25:50 And then it will create a drive, a mountable drive on your Mac or on Windows,

00:25:56 like a D drive or E drive or whatever.

00:25:58 And that thing is encrypted.

00:25:59 So when you mount it with this software, it looks like a drive.

00:26:02 But then when you unmount it, it becomes just an encrypted pile of files.

00:26:05 So you put that in Dropbox, you put that in sync or whatever.

00:26:09 And then no matter what happens, they just get an encrypted blob of stuff.

00:26:12 So things I super care about.

00:26:14 I have encrypted in something, either Cryptometer or something like it, on top of all the safety around the cloud drive and trust and whatever you might have there.

00:26:22 Like worst case scenario, they get a huge, hard, hard to decrypt a blob of stuff that they don't know the value of.

00:26:28 And I don't know if it has Linux.

00:26:29 Someone's asking, does it have Linux?

00:26:30 I think it might.

00:26:33 Let's see.

00:26:34 Mac.

00:26:35 Let's see if I go to download what it says.

00:26:37 Yeah.

00:26:38 Worth knowing for people.

00:26:39 Downloads.

00:26:40 Use your DMG.

00:26:41 Yeah.

00:26:42 Windows, Mac, Linux, Android, and iOS even.

00:26:45 Yeah.

00:26:46 So that's that.

00:26:47 I think that it's a loss.

00:26:49 I mean, cool.

00:26:50 But Cryptomator would have been great as a rotten tomato sort of thing to rate different cryptocurrencies.

00:26:57 I know.

00:26:58 It's the word is taken.

00:27:01 I'm pretty sure this has been around before crypto became a thing.

00:27:05 Like, I'm not sure how old this is, but yeah, there's 17 pages of releases on GitHub from 2017.

00:27:12 So yeah, they were ahead of their time in that.

00:27:14 But yeah, this is super cool, Brian.

00:27:16 Like you can just say, I don't really care that much about the security where these files go.

00:27:20 You're not getting them.

00:27:21 Interesting.

00:27:22 So I suggest a sweet combination of these things.

00:27:25 I'm going through like a super digital decluttering as part of this, and it's glorious.

00:27:30 I'm having like a tech love affair with Notion.

00:27:33 It's so good.

00:27:33 But yeah, anyway, I'll leave it there.

00:27:37 Maybe I'll come back and tell you more about this.

00:27:39 Last thing for me, I'm doing the keynote at PyCon Philippines 2024 in February.

00:27:46 How awesome is that?

00:27:47 Slightly jealous, man.

00:27:49 Somewhere I scroll down and over.

00:27:51 Woo.

00:27:52 Yeah.

00:27:53 Cool.

00:27:53 Three of us, and I get to be one of them.

00:27:55 So that'll be awesome.

00:27:55 Thank you for inviting me.

00:27:57 And if you're going to be there, I will see you there.

00:27:58 Nice.

00:27:59 Yeah, in February.

00:28:00 Cool.

00:28:00 Oops.

00:28:01 Over to you for your extras.

00:28:03 Well, I just deleted one.

00:28:05 So sorry about that.

00:28:06 But shift command T.

00:28:09 Oh, shift commit.

00:28:12 Whatever.

00:28:12 I'll just tell you guys about it.

00:28:14 So this is the kind of time of year that some people like to donate some money to different people.

00:28:22 different groups.

00:28:23 I had the link up for the Python Software Foundation.

00:28:27 So Python Software Foundation is not hard to find.

00:28:31 So I would encourage people to consider giving some money to the PSF.

00:28:36 So Django Software Foundation is doing a drive.

00:28:39 So giving some money.

00:28:41 If you use Django, of course.

00:28:42 If you enjoy Python Bytes, of course, you can check out Patreon.

00:28:46 At Patreon, we do accept money for Python Bytes to help keep the show going.

00:28:53 This is great.

00:28:54 Also, I wanted to highlight as well just the idea that to just go on GitHub.

00:29:01 So the different things you use on GitHub.

00:29:03 Like adders, for instance, you can go down and you can sponsor this project.

00:29:08 You can throw some money that way.

00:29:10 pytest has a sponsor link.

00:29:14 Palettes and Flask has a way to sponsor either all of Palettes or particular projects within the Palettes program.

00:29:22 And really, a lot of projects that you use every day have a sponsor of this project on GitHub.

00:29:30 So I think it'd be great, too, for people.

00:29:32 If you have extra and you want to help out, I think it's a good idea.

00:29:35 Sometimes I help out different projects.

00:29:38 And I kind of shift it up every year in local things.

00:29:41 And I think the things that I use.

00:29:44 And somebody asked me once recently about some projects don't really need the money.

00:29:50 And I guess, for instance, I really love having people support Python Bytes through Patreon.

00:29:56 It's fun to have our community help support us.

00:30:00 If you, in particular, don't donate, we're not going to disappear.

00:30:04 Michael and I are going to keep doing it anyway.

00:30:06 It is totally up to you.

00:30:07 And definitely don't do it if it's a hardship.

00:30:09 But I think it's a fun thing to do this time of year is to spread the love around.

00:30:14 That's all I wanted to say.

00:30:15 Indeed, I second that as well.

00:30:19 That's kind of serious, though.

00:30:21 Do you have something funny for us?

00:30:23 Let's lighten it up.

00:30:24 No, this is not funny.

00:30:25 It's too close to home.

00:30:27 You told me how you feel about this.

00:30:28 So here's the joke.

00:30:29 Here's the joke.

00:30:30 So there's two red buttons.

00:30:31 Think Ren and Stimpy or something like that.

00:30:33 And a huge, scary red button.

00:30:35 You can press either of them.

00:30:36 One of them says, pay $12.

00:30:38 The other one says, admit to yourself, your dream is dead.

00:30:42 And at the bottom, there's somebody sweating trying to decide which button to press.

00:30:46 And it's the domain renewal.

00:30:49 Oh, yeah.

00:30:49 Totally.

00:30:49 Totally.

00:30:50 This is way too close to home for me because I just transferred 25 domains from all the different

00:30:58 places into hovers I talked about like a while ago.

00:31:00 And I talked about all the name servers and all that.

00:31:04 And there was a few where I'm like, God, is the dream dead or do I just move this?

00:31:07 So how many are you using still out of those?

00:31:11 Well, lots of them are to like protect people from doing crappy stuff.

00:31:15 For example, I've talked by thon.com.

00:31:17 I don't technically use it.

00:31:19 It redirects to talk by thon.fm.

00:31:21 But if I don't have it, someone will get it.

00:31:24 And then all sorts of badness.

00:31:25 Like there's a bunch of these guards.

00:31:27 I would say half of them fall into that realm.

00:31:28 Okay.

00:31:29 And then maybe another third I'm directly using.

00:31:31 And then there's the whatever the balance, the one sixth that's left is the dream could

00:31:35 be dead.

00:31:36 But or it could be not there yet.

00:31:38 Not realized yet.

00:31:38 We'll see.

00:31:39 I had about eight that I was not really using last year.

00:31:44 And I admitted that about half of those are not going to go anywhere and let them expire.

00:31:51 Although I mean, the domain companies don't make it easy.

00:31:54 You're like, okay, I'm just going to let it expire.

00:31:57 But you get like emails.

00:31:58 No, it's going to go.

00:32:00 Oh, it's gone.

00:32:01 But we're going to save it for you for a couple more months.

00:32:04 And you get a whole bunch of guilt emails.

00:32:06 But yeah.

00:32:07 Anyway.

00:32:08 Yeah.

00:32:08 Yeah, exactly.

00:32:09 I have one real quick sad story to round this out, Brian.

00:32:12 A friend of mine and I decided we're going to write some iPhone apps right when the iPhone

00:32:16 came out, like 2007 or whatever it was.

00:32:19 And he had the clever idea of like, let's go.

00:32:21 Let's get a domain.

00:32:21 I would probably do it together.

00:32:22 I don't know.

00:32:23 Got the domain.

00:32:24 iPhone dot L Y.

00:32:26 I fun.

00:32:26 Lee.

00:32:26 And we worked on stuff for like a year because we didn't know we're going to build.

00:32:30 We'll just like come up with this.

00:32:31 We'll put stuff there.

00:32:32 Never really came up with stuff.

00:32:34 It looked like there was nothing on the horizon.

00:32:35 We're like, you know, after three years, the L Y is like the FM.

00:32:37 I was like kind of expensive.

00:32:39 Like, ah, just let it go.

00:32:40 A week later, somebody says, Hey, I'll give you $5,000 for that domain.

00:32:43 So I shoot my friend like, Hey, don't let it expire yet.

00:32:45 Let's do this instead.

00:32:46 He's like, it expired last week.

00:32:48 Like, no.

00:32:48 Oh no.

00:32:49 Oh well.

00:32:51 So it goes.

00:32:52 So that somebody could have paid you $5,000, but they instead got it for like 20 or got it.

00:32:57 Yeah.

00:32:57 For like 20 bucks or something.

00:33:00 I'm sorry to laugh at your pain.

00:33:02 No, it's okay.

00:33:03 I mean, like I'm telling you, this is not a joke.

00:33:05 Admit to yourself, your dream is dead or pay $12 for the rest of your life every year.

00:33:09 That's where you are.

00:33:11 No, it's good.

00:33:13 It's a good joke and people can hopefully laugh at it.

00:33:16 Yeah.

00:33:16 Everybody.

00:33:17 Most people that listen to this podcast probably are feeling this.

00:33:20 Yeah.

00:33:22 All right.

00:33:22 All right.

00:33:22 Well, I'm feeling good about our year's worth of show every day.

00:33:26 Yeah.

00:33:26 365.

00:33:27 Pretty cool.

00:33:28 Yeah.

00:33:29 All right.

00:33:29 Talk to you later.

00:33:30 Yeah.

00:33:30 See you.

00:33:31 Thanks everyone.

00:33:32 This has been another episode of Talk Python To Me.

00:33:36 Thank you to our sponsors.

00:33:38 Be sure to check out what they're offering.

00:33:39 It really helps support the show.

00:33:41 This episode is sponsored by Posit Connect from the makers of Shiny.

00:33:45 Publish, share, and deploy all of your data projects that you're creating using Python.

00:33:49 Streamlit, Dash, Shiny, Bokeh, FastAPI, Flask, Quattro, Reports, Dashboards, and APIs.

00:33:57 Posit Connect supports all of them.

00:33:58 Try Posit Connect for free by going to talkpython.fm/posit, P-O-S-I-T.

00:34:04 Want to level up your Python?

00:34:05 We have one of the largest catalogs of Python video courses over at Talk Python.

00:34:09 Our content ranges from true beginners to deeply advanced topics like memory and async.

00:34:15 And best of all, there's not a subscription in sight.

00:34:17 Check it out for yourself at training.talkpython.fm.

00:34:20 Be sure to subscribe to the show, open your favorite podcast app, and search for Python.

00:34:25 We should be right at the top.

00:34:26 You can also find the iTunes feed at /itunes, the Google Play feed at /play,

00:34:31 and the direct RSS feed at /rss on talkpython.fm.

00:34:36 We're live streaming most of our recordings these days.

00:34:39 If you want to be part of the show and have your comments featured on the air,

00:34:42 be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

00:34:46 This is your host, Michael Kennedy.

00:34:49 Thanks so much for listening.

00:34:50 I really appreciate it.

00:34:51 Now get out there and write some Python code.

00:34:53 Now get out there and write some Python code.

00:34:53 I'll see you next time.

00:34:53 Bye.

00:34:54 Bye.

00:34:54 Bye.

00:34:54 Bye.

00:34:54 Bye.

00:34:54 Bye.

00:34:54 We'll see you next time.

