WEBVTT

00:00:00.001 --> 00:00:05.440
Python is a technology and community built upon the goodwill and volunteer time of thousands of

00:00:05.440 --> 00:00:10.880
contributors, from the core devs inside CPython to the authors of hundreds of thousands of external

00:00:10.880 --> 00:00:16.640
packages over on PyPI. Until recently, the only full-time folks have been at the PSF doing very

00:00:16.640 --> 00:00:21.920
important work, but that work has been largely outside of CPython the technology itself.

00:00:21.920 --> 00:00:28.960
In July 2021, the PSF created the Python Developer in Residence position. The first

00:00:28.960 --> 00:00:33.600
person in that role is Lucas Lange, and he's here to tell you how it's going and how it'll benefit

00:00:33.600 --> 00:00:40.800
Python at large. This is Talk Python To Me, episode 331, recorded August 25th, 2021.

00:00:40.800 --> 00:00:58.800
Welcome to Talk Python To Me, a weekly podcast on Python. This is your host, Michael Kennedy.

00:00:58.800 --> 00:01:03.440
Follow me on Twitter where I'm @mkennedy and keep up with the show and listen to past episodes

00:01:03.440 --> 00:01:10.080
at talkpython.fm and follow the show on Twitter via at Talk Python. We've started streaming most of our

00:01:10.080 --> 00:01:15.920
episodes live on YouTube. Subscribe to our YouTube channel over at talkpython.fm/youtube to get

00:01:15.920 --> 00:01:22.000
notified about upcoming shows and be part of that episode. This episode is brought to you by us over

00:01:22.000 --> 00:01:27.920
at Talk Python training and the transcripts are brought to you by Assembly AI. Lucas, welcome back

00:01:27.920 --> 00:01:29.280
to Talk Python To Me.

00:01:29.280 --> 00:01:33.440
Lucas Lange: Very happy to be here. It's the first time you can see me as well, I guess. So it's kind of

00:01:33.920 --> 00:01:36.560
kind of a new thing for me. So first times, first times.

00:01:36.560 --> 00:01:39.680
Lucas Lange: You've been on the show three times before.

00:01:39.680 --> 00:01:39.840
Lucas Lange: Yep.

00:01:39.840 --> 00:01:44.720
Lucas Lange: You talked about, let's see, the very first one was gradual typing of production

00:01:44.720 --> 00:01:51.520
applications. And that was applying type hints and mypy over on Instagram, which was fantastic work. And

00:01:51.520 --> 00:01:55.520
Lucas Lange: I loved what you're doing there. Then we talked about the Python language summit. You

00:01:55.520 --> 00:02:02.400
Lucas Lange: gave us a wrap up on that or a rundown on that for 2018 and then diving into CPython 3.8 and

00:02:02.400 --> 00:02:06.160
Lucas Lange: beyond. So here we are again. Thanks for being back.

00:02:06.160 --> 00:02:11.200
Lucas Lange: Yeah. Happy to be here. Like 3.8 is now already an old release, right? It's already in

00:02:11.200 --> 00:02:16.080
security only fixes mode. So it was new at the time. Lucas Lange: Yeah. I think when we were talking about

00:02:16.080 --> 00:02:19.360
it, it's like, what are the new exciting features? I guess, you know, while we're on that topic,

00:02:19.360 --> 00:02:23.600
Lucas Lange: just real quickly is, you know, what are the new features that you're excited about now,

00:02:23.600 --> 00:02:29.120
Lucas Lange: either 3.9, 3.10 or 3.11? Like what's out now, what's just about out and what's coming

00:02:29.120 --> 00:02:29.520
Lucas Lange: soon?

00:02:29.520 --> 00:02:34.720
Lucas Lange: There's quite many. The one that I'm kind of living with the most right now is actually

00:02:34.720 --> 00:02:40.640
Lucas Lange: kind of just better error messages. So this is kind of like a trend that is still kind of

00:02:40.640 --> 00:02:45.920
Lucas Lange: happening, right? So there's further changes for 3.11 later, which is already like the main

00:02:45.920 --> 00:02:50.160
Lucas Lange: branch right now of development, right? So 3.10 is already in release candidate mode. So

00:02:50.160 --> 00:02:54.320
Lucas Lange: like we're going to get the second release candidate pretty soon. And then,

00:02:54.320 --> 00:02:58.000
Lucas Lange: you know, the final release. So all new features now go to 3.11 already,

00:02:58.000 --> 00:03:02.160
Lucas Lange: but the better error messages like really kind of, they're kind of this icing on the cake that

00:03:02.160 --> 00:03:08.000
Lucas Lange: make stuff much nicer for you. There's a bunch of typing changes that I was really looking

00:03:08.000 --> 00:03:14.480
Lucas Lange: forward to like back in PEP 484 times, like when we first added string and well annotations

00:03:14.480 --> 00:03:23.040
Lucas Lange: to Python. I always kind of wanted them to feel more native inside your code. And now with Python 3.10,

00:03:23.040 --> 00:03:30.640
Lucas Lange: you can use, I guess it's PEP 604, like union types, you know, like that kind of are not so

00:03:30.640 --> 00:03:37.920
Lucas Lange: verbose. They use the pipe operator instead of spelling out, you know, capital case union of

00:03:37.920 --> 00:03:43.280
Lucas Lange: whatever, which is kind of more compact and also more readable through this, right? Because

00:03:43.280 --> 00:03:49.600
Lucas Lange: now types that aren't super trivial don't look as scary anymore, right? Because like you kind of

00:03:49.600 --> 00:03:55.840
Lucas Lange: don't have to have the square brackets so much and whatnot. Yeah. Yeah. For people who haven't explored this deeply, there

00:03:55.840 --> 00:04:04.000
Lucas Lange: previously was basically a parallel, a mirrored hierarchy of types that weren't actually the types, but they

00:04:04.000 --> 00:04:11.440
Lucas Lange: describe the types. So from typing import capital L list, that would say you're returning a lowercase L list as your type.

00:04:11.440 --> 00:04:19.440
Lucas Lange: And then it got even more interesting when you have like optional, right? I have an optional user that's returned from this query. Now you can just do things like

00:04:19.440 --> 00:04:24.800
Lucas Lange: user pipe none and things like that. Yeah, absolutely. So this was fun, but also like what

00:04:24.800 --> 00:04:32.000
Lucas Lange: they really kind of like to use is that like the lowercase types just feel more natural, right? So, you know, kind of just putting

00:04:32.000 --> 00:04:44.160
Lucas Lange: dicts and lists and whatever, like just straight out of built ins and just applying generics to them just kind of looks right. Like feels right. So yeah, it always felt weird. Like why do I have to do an import just to talk about this thing I'm already using, right?

00:04:44.160 --> 00:04:49.040
Lucas Lange: Yeah. Because like, if you actually look at how the feature was enabled to

00:04:49.280 --> 00:04:54.640
Lucas Lange: allow lowercase list of string and whatnot, like this is now part of the interpreter. This was a

00:04:54.640 --> 00:05:01.920
Lucas Lange: kind of changed like deeply in the C code of the interpreter back in 2014 when we first released

00:05:01.920 --> 00:05:09.200
Lucas Lange: PEP 484. The value of typing wasn't really so clear cut yet. It was a new idea. We wanted to have this out.

00:05:09.200 --> 00:05:16.640
Lucas Lange: And we wanted to have people actually tested and say, you know, and is this something that Python could actually see value in?

00:05:16.640 --> 00:05:24.720
Lucas Lange: So it was a little too early to make, you know, drastic changes to the interpreter just because it would be handy to have for typing.

00:05:24.720 --> 00:05:36.000
Lucas Lange: Like it's kind of, you know, icky in the sense that between here and there, we clearly have this transition period where typing just becomes more natural to use.

00:05:36.000 --> 00:05:46.080
Lucas Lange: And you know, more ergonomic and obviously the tooling like mypy matures, but it's what you have to do if you're dealing with a language that is 30 years old. Right?

00:05:46.080 --> 00:05:52.560
Lucas Lange: So we didn't have this clean room experience because the language was already successful. It was already out there.

00:05:52.560 --> 00:06:04.160
Lucas Lange: So yeah, like a bunch of new languages now have this comfort, like have this luxury of just being able to just, you know, can look at an empty page and just design from scratch. Like we had to evolve what we had.

00:06:04.160 --> 00:06:06.160
Lucas Lange: Yeah, yeah, for sure. I mean, Python is 30 years old, right?

00:06:06.160 --> 00:06:16.000
Lucas Lange: But you know, language that gives me sort of that comes to mind when you say that is Swift. Right? Swift took a bunch of these ideas like you have to explicitly.

00:06:16.000 --> 00:06:22.480
Lucas Lange: Say here's a nullable reference type and whatnot, but like all of that stuff was done looking back at Python,

00:06:22.480 --> 00:06:28.480
Lucas Lange: at C# at C++ and all these languages that, you know, and then like sort of put together the pieces. Right?

00:06:28.480 --> 00:06:34.480
Lucas Lange: Yeah, absolutely. Like Swift in particular, I kind of like, you know, kind of it fits my brain.

00:06:34.480 --> 00:06:36.480
Lucas Lange: I talk with Corey Benfield every now and again about it.

00:06:36.480 --> 00:06:38.480
Lucas Lange: Like he's now working on it actually at Apple.

00:06:38.480 --> 00:06:45.920
Lucas Lange: So yeah, I do feel it's, it's a good evolution of Objective-C since, you know, kind of it's where it all

00:06:45.920 --> 00:06:47.440
Lucas Lange: Yeah, you know, started from.

00:06:47.440 --> 00:06:50.320
Lucas Lange: It's definitely an improvement. I don't want to go too far down the rat hole,

00:06:50.320 --> 00:06:55.120
Lucas Lange: But I do wish it had something like a better standard library like Python has. I feel

00:06:55.120 --> 00:06:58.240
Lucas Lange: Like the language is good. But then when I want to do stuff, I'm like, oh, it's,

00:06:58.240 --> 00:07:03.200
Lucas Lange: There's so much missing from like the foundation of it in terms of the functionality.

00:07:03.200 --> 00:07:07.680
Lucas Lange: Anyway, long story short, because it still depends on the whole Objective-C sort of like

00:07:07.680 --> 00:07:10.000
Lucas Lange: really funky class library stuff.

00:07:10.000 --> 00:07:10.400
Lucas Lange: Oh yeah.

00:07:10.400 --> 00:07:11.760
Lucas Lange: Yeah. I'm sure I'll get mail about that.

00:07:11.760 --> 00:07:18.080
Lucas Lange: All right. So sorry, I super derailed you. What else is exciting that's coming in the near term?

00:07:18.080 --> 00:07:22.560
Lucas Lange: Of course, like the biggest kind of feature that was most controversial,

00:07:22.560 --> 00:07:27.840
Lucas Lange: probably is the match statement, right? So pattern matching in Python, it is a huge feature.

00:07:27.840 --> 00:07:32.960
Lucas Lange: It kind of changes how, you know, some of the code that you're dealing with looks.

00:07:32.960 --> 00:07:39.360
Lucas Lange: And also it kind of introduces for the first time this concept of context specific

00:07:39.360 --> 00:07:45.600
Lucas Lange: keywords, right? Like that's something that maybe not so many what's new in Python 3.10 posts

00:07:45.600 --> 00:07:51.600
Lucas Lange: It's kind of touched on, but just notice that you can still use match and case as regular

00:07:51.600 --> 00:07:56.080
Lucas Lange: variable names. You can still name your functions that you can still use this as argument

00:07:56.080 --> 00:08:01.600
Lucas Lange: names and whatnot and whatnot. But when the Python grammar discovers when the parser sees

00:08:01.600 --> 00:08:07.120
Lucas Lange: that, oh, this is in a place where it fits a construct that looks like a match statement,

00:08:07.120 --> 00:08:11.680
Lucas Lange: it'll deal with that and it'll parse that successfully. That is what we could do,

00:08:12.240 --> 00:08:19.120
Lucas Lange: having this new peg parser that it started in Python 3.9 like it was released then already,

00:08:19.120 --> 00:08:23.760
Lucas Lange: but without any new features, right? Like now in Python 3.10, we're getting the match

00:08:23.760 --> 00:08:29.920
Lucas Lange: statement. I'm still kind of, you know, to be honest with you, before this area where I can

00:08:29.920 --> 00:08:34.800
Lucas Lange: tell you that I have a lot of experience writing match statements, it's like super useful for me

00:08:34.800 --> 00:08:39.920
Lucas Lange: and whatnot. Like I've written a few of them where it actually made sense and made the code.

00:08:39.920 --> 00:08:44.800
Lucas Lange: Well, I couldn't really say shorter because usually it actually doesn't, but much

00:08:44.800 --> 00:08:50.000
Lucas Lange: more readable because it's kind of flatter. It's easier to parse. Like visually, I mean by a

00:08:50.000 --> 00:08:56.480
Lucas Lange: person. But it's not something that I really use daily. So like whenever somebody is really

00:08:56.480 --> 00:09:00.720
Lucas Lange: worried about like, hey, like what is Python becoming? It's such a complex feature.

00:09:00.720 --> 00:09:04.720
Lucas Lange: Like, you know, what about the kids? Think of the children. Like I always tell them like, hey,

00:09:04.720 --> 00:09:10.240
Lucas Lange: like how many descriptors did you implement in your last week or month or year?

00:09:10.240 --> 00:09:10.880
Lucas Lange: Like probably none.

00:09:10.880 --> 00:09:12.640
Lucas Lange: True. And how many meta classes?

00:09:12.640 --> 00:09:13.440
Lucas Lange: Exactly.

00:09:13.440 --> 00:09:16.240
Lucas Lange: So like how many meta classes have you worked with? That's a good point.

00:09:16.240 --> 00:09:20.800
Lucas Lange: It's almost like another feature like this, where sometimes it will make perfect sense,

00:09:20.800 --> 00:09:27.040
Lucas Lange: but most often, just like with assignment expressions, like most often you won't see them. You

00:09:27.040 --> 00:09:28.160
Lucas Lange: You won't be using those.

00:09:28.160 --> 00:09:28.880
Lucas Lange: Yeah.

00:09:28.880 --> 00:09:35.760
Lucas Lange: Okay. Well, fantastic. You know, you're talking about the foundational stuff like the peg parser,

00:09:35.760 --> 00:09:41.040
Lucas Lange: right? That's not a feature that a bunch of people are saying, you know, I can't wait for a

00:09:41.040 --> 00:09:46.720
Lucas Lange: better parser, right? But it's one of these enabling things. And I feel like this whole role that

00:09:46.720 --> 00:09:54.720
Lucas Lange: you're in is sort of in that same idea, right? The same vein that that it might not be super

00:09:54.720 --> 00:10:00.880
Lucas Lange: public or generate a bunch of new features, but it might be making things a lot smoother for

00:10:00.880 --> 00:10:04.880
Lucas Lange: everyone who wants to come along and do those things. What do you think?

00:10:04.880 --> 00:10:11.200
Lucas Lange: The way I look at it is that there's a lot of us on the core team and even more people

00:10:11.200 --> 00:10:16.320
Lucas Lange: around the core team who are kind of, well, we call them drive by contributors, right?

00:10:16.320 --> 00:10:16.320
Lucas Lange: Yeah.

00:10:16.320 --> 00:10:20.080
Lucas Lange: Like, you know, they would find an issue, just produce a bunch of pull requests and

00:10:20.080 --> 00:10:24.960
Lucas Lange: maybe then kind of disappear. Or maybe they're around, but like not producing more for us.

00:10:24.960 --> 00:10:29.760
Lucas Lange: And we are obviously very happy with any contribution. And the sad reality is that like,

00:10:29.760 --> 00:10:33.680
Lucas Lange: we have more of those than we can realistically review.

00:10:33.680 --> 00:10:33.920
Lucas Lange: Yeah.

00:10:33.920 --> 00:10:39.440
Lucas Lange: So the problem isn't even that, you know, you need more people to actually be able to,

00:10:39.440 --> 00:10:45.600
Lucas Lange: actually produce value. We need people to evaluate the value that we're already getting

00:10:45.600 --> 00:10:50.640
Lucas Lange: from the community and from each other to be able to, you know, actually merge them into

00:10:50.640 --> 00:10:56.720
Lucas Lange: mainline and to see how the language evolves. Obviously every year, you know, this changes

00:10:56.720 --> 00:11:01.040
Lucas Lange: over the years how Python is developed. Like we're going to have a bunch of people who are

00:11:01.040 --> 00:11:06.000
Lucas Lange: super invested and they're going to be spending crazy amounts of time, including on weekends and

00:11:06.000 --> 00:11:10.560
Lucas Lange: whatnot, like to work on Python, even for free. I know I did that for like, you know,

00:11:10.560 --> 00:11:15.360
Lucas Lange: a decade. So those contributions are super valued, but usually those really,

00:11:15.360 --> 00:11:20.160
Lucas Lange: those people change, right? Like, you know, you cannot really do this in a consistent

00:11:20.160 --> 00:11:26.000
Lucas Lange: manner day in day out for a long period of time. You know, your life situation changes,

00:11:26.000 --> 00:11:31.360
Lucas Lange: you know, your job changes or whatnot. And you know, like you stop contributing. And what happens

00:11:31.360 --> 00:11:38.080
Lucas Lange: to Python then? Well, we lose some value. Currently we have over 1400 open pull requests,

00:11:38.080 --> 00:11:42.640
Lucas Lange: and I've been on a mission to kind of bring that number down. Currently, as I'm looking

00:11:42.640 --> 00:11:43.920
Lucas Lange: at it, it's 1421.

00:11:43.920 --> 00:11:48.160
Lucas Lange: I was looking at this morning here, I put it up on the screen for people watching live and

00:11:48.160 --> 00:11:55.520
Lucas Lange: wow, wow, wow. That is a lot of information coming in and not just the sheer number of open

00:11:55.520 --> 00:12:00.560
Lucas Lange: ones. But the thing that struck me is I'm reading down 26 minutes ago, an hour ago, two hours

00:12:00.560 --> 00:12:06.240
Lucas Lange: ago, three hours ago, three hours ago, four hours ago, five hours. Like that's hard to keep up no

00:12:06.240 --> 00:12:07.120
Lucas Lange: matter what, right?

00:12:07.120 --> 00:12:12.160
Lucas Lange: Yeah. Some of those are already reviewed, like the faster implementation of Gzip decompress that you

00:12:12.160 --> 00:12:16.240
Lucas Lange: have like somewhere in the screen, like a little lower than the first one.

00:12:16.240 --> 00:12:19.680
Lucas Lange: Yes, like this on lowest one at the moment.

00:12:19.680 --> 00:12:24.480
Lucas Lange: So, so the thing is like there's so many of those that, you know, kind of somebody

00:12:24.480 --> 00:12:29.760
Lucas Lange: actually has to come in and you know, day in day out, like butts in seats, just review the

00:12:29.760 --> 00:12:34.720
Lucas Lange: value that people are already providing for you. Like this particular change actually extracted

00:12:34.720 --> 00:12:41.280
Lucas Lange: from an older rejected change, like is actually providing clear value, right? Like now we're

00:12:41.280 --> 00:12:46.800
Lucas Lange: going to have Gzip compress and decompress be faster, right? But it is actually not change that is

00:12:46.800 --> 00:12:51.200
Lucas Lange: obvious, right? Like you have eight files that are changed. You really need to see that,

00:12:51.200 --> 00:12:55.680
Lucas Lange: Oh, there's a lot of code that changed. Some of it actually wasn't, it was just moved so that we

00:12:55.680 --> 00:13:02.400
Lucas Lange: could reuse it better. Some of it actually has subtle changes. So this isn't something that many

00:13:02.400 --> 00:13:07.680
Lucas Lange: volunteers will be willing to do on their free time because it's mostly kind of, well, it's work.

00:13:07.680 --> 00:13:08.720
Lucas Lange: It really is work.

00:13:08.720 --> 00:13:13.680
Lucas Lange: It's the janitorial typo. Just keep it clean. Keep it going. Yeah.

00:13:13.680 --> 00:13:14.400
Lucas Lange: Exactly.

00:13:14.400 --> 00:13:15.520
Lucas Lange: Yeah, exactly.

00:13:15.520 --> 00:13:20.720
Lucas Lange: So let's go ahead and actually introduce this main topic here, the big announcement for you.

00:13:20.720 --> 00:13:25.360
Lucas Lange: On your blog here you have, I am the new CPython developer in residence. Congratulations.

00:13:25.360 --> 00:13:31.920
Lucas Lange: Ah, thank you. I'm still very excited about this. Like back when we only had volunteers doing this and maybe,

00:13:31.920 --> 00:13:40.960
Lucas Lange: while Guido being, you know, kind of tolerated as the BDFL at Dropbox, because obviously he was being paid to actually move my

00:13:40.960 --> 00:13:46.160
Lucas Lange: PyPy forward. Right? That was his team. But obviously he did a lot for Python as well. And that was

00:13:46.160 --> 00:13:52.160
Lucas Lange: Kind of understood by Dropbox that it's fine. And many of us were in the same situation. Like I was

00:13:52.160 --> 00:13:58.160
Lucas Lange: tolerated as a CPython core developer at Facebook and some others were at their own respective

00:13:58.160 --> 00:14:03.360
Lucas Lange: companies. So I was super frustrated by this because, you know, there's tremendous

00:14:03.360 --> 00:14:08.800
Lucas Lange: value that we're giving to the entire community, including multi-billion dollar corporations.

00:14:08.800 --> 00:14:09.360
Lucas Lange: Yes.

00:14:09.360 --> 00:14:13.360
Lucas Lange: And we only thought like, hey, like the expectations are high and we want to provide

00:14:13.360 --> 00:14:18.880
Lucas Lange: the best tooling that we can for the industry. But it is kind of a hard sell,

00:14:18.880 --> 00:14:23.840
Lucas Lange: you know, when your kid wants to go out and you're like, oh no, I'm fixing this bug. But at

00:14:23.840 --> 00:14:28.000
Lucas Lange: the same time you're doing this for free. So you're thinking, you know, like, where did I go wrong

00:14:28.000 --> 00:14:31.520
Lucas Lange: in life? Like, you know, my values are somewhere, not where they're supposed to be.

00:14:31.520 --> 00:14:36.720
Lucas Lange: So Red Hat actually hired Victor Stinner like full time to work on Python, but it was still

00:14:36.720 --> 00:14:41.520
Lucas Lange: Red Hat. He's still an employee of a company that is for profit. So now,

00:14:41.520 --> 00:14:43.520
Lucas Lange: Yeah.

00:14:43.520 --> 00:14:47.600
Lucas Lange: the CPython developer in residence is different, right? It is sponsored by a PSF sponsor.

00:14:47.600 --> 00:14:53.280
Lucas Lange: In this particular case by Google, like Google as a company reached out to the PSF

00:14:53.280 --> 00:14:58.400
Lucas Lange: specifically to sponsor stuff like this. And that is amazing. I am very happy that they did,

00:14:58.400 --> 00:15:02.960
Lucas Lange: because you really believe that this is something that might, you know, kind of alter how

00:15:02.960 --> 00:15:07.600
Lucas Lange: we think about maintenance of community driven projects like Python.

00:15:07.600 --> 00:15:11.200
Lucas Lange: Yeah. And thank you to Google for doing this. It's so easy for them to say,

00:15:11.200 --> 00:15:14.800
Lucas Lange: Well, maybe we could just hire some core developers and they could work on

00:15:14.800 --> 00:15:19.760
Lucas Lange: speeding up the Google Cloud stuff for Python and we'll let them also contribute back.

00:15:19.760 --> 00:15:24.160
Lucas Lange: Right. That would be the sort of natural historical way of doing something like that.

00:15:24.160 --> 00:15:24.640
Lucas Lange: Yes.

00:15:24.640 --> 00:15:32.080
Lucas Lange: But here it's like, no, let's actually directly sort of effectively hire a person,

00:15:32.080 --> 00:15:37.440
Lucas Lange: but put them in an independent role that just makes Python better. And that's interesting,

00:15:37.440 --> 00:15:37.680
Lucas Lange: Right?

00:15:37.680 --> 00:15:40.880
Lucas Lange: Yeah. Like amazing thing about this is that, you know, while

00:15:40.880 --> 00:15:44.960
Lucas Lange: I do hope that some of the work that I already did was useful for Google as well,

00:15:44.960 --> 00:15:50.480
Lucas Lange: like there is no job description written by them and there are no like tasks that they're

00:15:50.480 --> 00:15:51.440
Lucas Lange: directly giving me.

00:15:51.440 --> 00:15:54.000
Lucas Lange: Right? Like it's really independent in this sense.

00:15:54.000 --> 00:15:57.760
Lucas Lange: And this is what makes it super healthy and like, you know, kind of, I think,

00:15:57.760 --> 00:16:03.280
Lucas Lange: well, sustainable for the future that it is actually me being able to talk to the

00:16:03.280 --> 00:16:07.360
Lucas Lange: steering council, which I do regularly and to the PSF about like,

00:16:07.360 --> 00:16:11.840
Lucas Lange: Hey, what do we actually need? And we don't have to take into consideration,

00:16:11.840 --> 00:16:14.960
Lucas Lange: you know, kind of direct value for our sponsors.

00:16:14.960 --> 00:16:20.160
Lucas Lange: Like we are providing indirect value, like, but you know, we don't have a roadmap where

00:16:20.160 --> 00:16:24.080
Lucas Lange: there are certain milestones that we need to reach like it's not like that. So I'm

00:16:24.080 --> 00:16:29.040
Lucas Lange: very happy about this difference because we did have sponsors before that did have

00:16:29.040 --> 00:16:32.880
Lucas Lange: either projects that they really wanted to move forward.

00:16:32.880 --> 00:16:36.880
Lucas Lange: Right? You know, and we still have those like, so for example, packaging and whatnot,

00:16:36.880 --> 00:16:41.520
Lucas Lange: or events that happen. Right? So Facebook sponsored, you know, core development

00:16:41.520 --> 00:16:46.320
Lucas Lange: spins, sprints. So we had those at the campus two years in a row and then Microsoft

00:16:46.320 --> 00:16:52.320
Lucas Lange: took over and we had Bloomberg and then we had COVID, you know, so like those things do happen

00:16:52.320 --> 00:16:58.320
Lucas Lange: and I'm very happy for those. But this is a kind of a game changer. Like we have not done

00:16:58.320 --> 00:17:02.960
Lucas Lange: this way of sponsoring a project before where we're actually thinking about the software

00:17:02.960 --> 00:17:09.040
Lucas Lange: word in Python software foundation where we directly sponsor work on the code on the source

00:17:09.040 --> 00:17:14.880
Lucas Lange: code. Yeah. The PSF has what seven, eight, nine full-time employees, but you are the first

00:17:14.880 --> 00:17:20.480
Lucas Lange: employee who is in a sort of software developer role. I think the closest we had before

00:17:20.480 --> 00:17:24.800
Lucas Lange: was a project management role for the new pip. Is that right?

00:17:24.800 --> 00:17:29.120
Lucas Lange: Yeah. So like we, we have that, like there's also E who works on our infrastructure,

00:17:29.120 --> 00:17:32.240
Lucas Lange: right? So what is also important for Python and this is the

00:17:32.240 --> 00:17:39.280
Lucas Lange: dealt with by the PSF is to keep the website running and to keep my PI running, right?

00:17:39.280 --> 00:17:44.000
Lucas Lange: Yeah. And so on. So obviously all of this requires constant supervision.

00:17:44.000 --> 00:17:48.480
Lucas Lange: And it's also something that you can spend your life like working full-time on. And this

00:17:48.480 --> 00:17:54.800
Lucas Lange: is what E is doing. However, that wasn't contributing to CPython as a repository directly.

00:17:54.800 --> 00:17:56.080
Lucas Lange: And this is the entire change.

00:17:56.080 --> 00:18:01.440
Lucas Lange: Yeah, that's fantastic. Quick shout out to just the two other visionary sponsors. We've got Bloomberg

00:18:01.520 --> 00:18:06.320
Lucas Lange: and Microsoft through Azure. So I think that's awesome. I think this whole visionary

00:18:06.320 --> 00:18:08.560
Lucas Lange: sponsor, Google was the first one in that category, right?

00:18:08.560 --> 00:18:13.840
Lucas Lange: Yes. That is a change in how the PSF was looking at sponsorship before. Like,

00:18:13.840 --> 00:18:18.480
Lucas Lange: I'm very happy to see that like this entire developer in residence position

00:18:18.480 --> 00:18:23.440
Lucas Lange: was something that I was pretty stressed by when I first got to know that,

00:18:23.440 --> 00:18:28.320
Lucas Lange: Oh, this is actually going to be happening because I do believe that my particular

00:18:28.320 --> 00:18:34.400
Lucas Lange: performance kind of will make or break future ideas on whether this should be extended to

00:18:34.400 --> 00:18:40.400
Lucas Lange: more people, right? Or just closed down altogether. So it's not only providing,

00:18:40.400 --> 00:18:46.480
Lucas Lange: value to the project. It's literally providing kind of proof that this development model works.

00:18:46.480 --> 00:18:52.640
Lucas Lange: So yeah, there's certain responsibility around it. I think I already caught a rhythm that I can

00:18:52.640 --> 00:18:58.000
Lucas Lange: sustain and I think, you know, kind of splits my own coding with actually

00:18:58.000 --> 00:19:02.800
Lucas Lange: reviewing and accepting other contributions, which are the bulk of what I'm doing. Because

00:19:02.800 --> 00:19:08.240
Lucas Lange: like, you know, otherwise, if I just focused on coding all week, I might maybe if I'm lucky and

00:19:08.240 --> 00:19:14.080
Lucas Lange: other people review my work, make maybe five, maybe six changes to see Python. Like we're doing

00:19:14.080 --> 00:19:19.840
Lucas Lange: careful reviews because like even simple changes might have actual far reaching consequences. But when I'm

00:19:19.840 --> 00:19:25.200
Lucas Lange: reviewing other changes, we sometimes have like 50 or over 50 changes that I can actually

00:19:25.200 --> 00:19:30.000
Lucas Lange: merge into mainline. So I'm very happy about that. You know, like that that is obviously

00:19:30.000 --> 00:19:32.400
Lucas Lange: a much better deal for everybody.

00:19:32.400 --> 00:19:37.680
Lucas Lange: Yeah, it's one of these enabling roles, not just sort of heads down coding roles, which I think

00:19:37.680 --> 00:19:39.120
Lucas Lange: is the important thing.

00:19:39.120 --> 00:19:39.520
Lucas Lange: Absolutely.

00:19:39.520 --> 00:19:41.520
Lucas Lange: Yeah. Paul Everett out there in the live stream says,

00:19:41.520 --> 00:19:45.120
Lucas Lange: you mentioned the stress from the responsibility. Agreed. It takes some bravery to do it.

00:19:45.120 --> 00:19:46.240
Lucas Lucas Lucas Lucas: Oh, thank you.

00:19:46.240 --> 00:19:51.600
Lucas Lange: At the same time, I was literally giving talks before about, you know, yeah, we should

00:19:51.600 --> 00:19:56.880
Lucas Lange: do this. So, you know, like I kind of put myself out there even before this, this was a

00:19:56.880 --> 00:20:01.520
Lucas Lange: position. So at least applying because like, obviously it wasn't at all obvious to anybody

00:20:01.520 --> 00:20:07.120
Lucas Lange: like who is going to be chosen for this. I have this applying was, was sort of in the cards.

00:20:07.120 --> 00:20:09.280
Lucas Lange: Like I had to man up and do it, you know?

00:20:09.280 --> 00:20:13.920
Lucas Lange: Yeah, that's cool. Let's sort of explore a bit your background. Like,

00:20:13.920 --> 00:20:17.920
Lucas Lange: It's not just that you are a user of Python. I don't know, even a really good Python

00:20:17.920 --> 00:20:23.200
Lucas Lange: developer themselves might not be a good fit for this role because it really is like

00:20:23.200 --> 00:20:27.760
Lucas Lange: closely working with people contributing to the code base and the core developers and all

00:20:27.760 --> 00:20:32.960
Lucas Lange: that. So, you know, maybe give people a sense of some of the things that you did previously to

00:20:32.960 --> 00:20:38.800
Lucas Lange: to this in the cPython space. Like for example, you create a black. I think maybe people have heard of black.

00:20:38.800 --> 00:20:44.800
Lucas Lange: Yeah. If anything, this, this was actually probably on something that made it harder for me to get this position.

00:20:44.800 --> 00:20:48.000
Lucas Lange: Because obviously everybody is scared. Like, hey, are you going to reformat all of this

00:20:48.000 --> 00:20:48.960
Lucas Lange: library now? Like, you know.

00:20:48.960 --> 00:20:52.720
Lucas Lange: Oh, you're bringing the black guy. He's going to totally format it different.

00:20:52.720 --> 00:20:54.240
Lucas Lange: yeah.

00:20:54.240 --> 00:20:55.680
Lucas Lange: The biggest PR ever.

00:20:55.680 --> 00:21:02.560
Lucas Lange: No, like, so joking aside, like I'm not new in the project. And that was obviously important. It's kind of hard for me to

00:21:02.560 --> 00:21:06.960
Lucas Lange: you know, kind of now enumerate the reasons why I was chosen. Like, you know, kind of,

00:21:06.960 --> 00:21:12.800
Lucas Lange: I can only tell you what I told the PSF when I applied, because that was actually like the

00:21:12.800 --> 00:21:17.440
Lucas Lange: only time in my life where I actually had to write like a proper cover letter and actually

00:21:17.440 --> 00:21:22.560
Lucas Lange: kind of, you know, do some soul searching and say like, hey, am I actually a good fit for this?

00:21:22.560 --> 00:21:24.400
Lucas Lange: And you know, I think that's my mission statement.

00:21:24.400 --> 00:21:30.480
Lucas Lange: Exactly. Like, yeah, pretty much. So, you know, I've been around for a while. I've done some changes,

00:21:30.480 --> 00:21:34.800
Lucas Lange: big and small. There's a bunch of peps with my name on them. So I guess, you know, kind of,

00:21:34.800 --> 00:21:42.160
Lucas Lange: it's not just, you know, tiny typo fixes and introducing new bugs. It's also introducing peps.

00:21:42.160 --> 00:21:45.360
Lucas Lange: Some of them might be more clear cut wins than others.

00:21:45.360 --> 00:21:49.360
Lucas Lange: Yeah, you appear in a lot of the peps. You were the release manager as well, right?

00:21:49.360 --> 00:21:56.480
Lucas Lange: Yes, I still am for 3.9. 3.9 is now currently already pretty late in the game in the sense that we will be

00:21:56.480 --> 00:22:02.640
Lucas Lange: releasing Python 3.9. 7 just next Monday. So probably not when, you know,

00:22:02.640 --> 00:22:07.040
Lucas Lange: the listeners of the podcast are going to, well, like they're probably going to see this

00:22:07.040 --> 00:22:11.040
Lucas Lange: already released, but that for now, like for the ones like watching the live stream.

00:22:11.040 --> 00:22:15.840
Lucas Lange: Yeah. Next Monday is when we're going to release 3.9. 7. So that's already the seventh

00:22:16.400 --> 00:22:21.120
Lucas Lange: bug fix release of Python 3.9. There's going to be a bunch of more of those,

00:22:21.120 --> 00:22:27.280
Lucas Lange: and then it's going to graduate or retire into the mode where only security fixes

00:22:27.280 --> 00:22:34.000
Lucas Lange: are considered for inclusion. This is where Python 3.8 is already. I've been managing the releases of that.

00:22:34.000 --> 00:22:34.560
Lucas Lange: How long do you

00:22:34.560 --> 00:22:40.880
Lucas Lange: remain the release manager until 3.9 is retired or does it get handed off at some point?

00:22:40.880 --> 00:22:42.080
Lucas Lange: No, no, no. So like for,

00:22:42.080 --> 00:22:48.400
Lucas Lange: You become a release manager for the entirety of a life cycle of two releases,

00:22:48.400 --> 00:22:55.200
Lucas Lange: right? This was true for a long time. Like I didn't dig up like, you know, kind of prehistory,

00:22:55.200 --> 00:23:01.360
Lucas Lange: but since like the Python 3 releases, I looked at, like that was the case. Python 2.7,

00:23:01.360 --> 00:23:06.800
Lucas Lange: I think was, you know, Benjamin and 2.6. I'm not sure that it was him. Like it was probably

00:23:06.800 --> 00:23:13.840
Lucas Lange: Barry Warsaw. But the thing is like 2.7 was, you know, the longest release managing job ever.

00:23:13.840 --> 00:23:18.160
Lucas Lange: So, you know, kind of you could just burn yourself out on that one release. So that's fine.

00:23:18.160 --> 00:23:25.280
Lucas Lange: For us currently, we're managing two releases. Like, so how long is that? Well, with the development of

00:23:25.280 --> 00:23:32.320
Lucas Lange: Given Python version where 3.11 is already being developed right now, it takes around a year and a half

00:23:32.320 --> 00:23:51.920
Lucas Lange: for it to actually, you know, get out there as the final release. We do have a cadence where we release new versions every year. But that's only because once one release becomes beta, we can already switch the branches. And now new features go to a yet new version. So currently, it's a little weird.

00:23:51.920 --> 00:23:56.240
Lucas Lange: I think that happened on your watch, right? That happened on your watch. Wasn't it 18 months before?

00:23:56.240 --> 00:24:21.840
Lucas Lange: Yes. So 18 months of a cadence was never really a hard calendar event. Like it was more like, you know, a guideline where like, yeah, we're going for 18 months. Sometimes it was 19, sometimes it was 20. But it was problematic for many reasons. So yes, like one of the peps that I authored was a PEP saying, hey, we should change the cadence of development to make it on annual release cadence, which helps with downstream

00:24:21.840 --> 00:24:41.160
Lucas Lange: distributors like Linux distributions. And for many other reasons, like, you know, for us, like that's in the pep. But yeah, like to just close on your original question, like, it takes around eight years from starting the job to like actually saying, oh, now I'm a retired release manager. So it's a long term contribution.

00:24:41.160 --> 00:24:42.160
Lucas Lange: That's a big commitment, isn't it?

00:24:42.160 --> 00:24:51.760
Lucas Lange: Yeah, wow, that's amazing. Well, thank you for that. That's, that's wild. So when you touched on this a little bit, but on your original blog post,

00:24:51.760 --> 00:25:12.760
Lucas Lange: announcing it, which I'll link to in the show notes, of course, you talked about what can one person do is the developer in residence. And you called out a bunch of specific things here about how you can basically be a multiplier effect for people who want to contribute, who are not core developers, you want to maybe like sort of give us the rundown on those things?

00:25:12.760 --> 00:25:42.740
Lucas Lange: Sure. So like, the blog post, I'm still happy with it, because like, it kind of shows that it wasn't just winging it, like I actually thought it through, but like, you know, kind of it lists a bunch of things that are ideas, and then you actually start doing the job and some things become clear, right? So like, all of the things I wrote are true. But what I for example, didn't quite like word out in the blog post that I realized is important is that very many changes that I touch, are kind of 90% there, you know, where I cannot just merge with the

00:25:42.740 --> 00:26:03.740
Lucas Lange: them as is, but really what I need changing is the doc string is just bad, or the comment is misleading, or whatever. So like, you know, a bunch of simple things that, you know, kind of, it feels just wrong to just review the change and say, hey, like, I request you do this small knit, you know, because I cannot merge it as is.

00:26:03.740 --> 00:26:07.740
Lucas Lange: Yeah, you got to do the line break, because this code is 99.

00:26:07.740 --> 00:26:11.740
Lucas Lange: Yeah, and 90 characters long, like you could just break that line and then commit it, right?

00:26:11.740 --> 00:26:36.740
Lucas Lange: Yeah, so this is what I do, actually, very often right now, I just kind of take the change locally, you know, run the tests that, you know, kind of are important for this particular case, I do the change that I would ask for just myself, you know, like without actually looping in the original author, most people actually leave that tick on their GitHub pull requests, making my job easier, like, so like, yeah, thanks for that. And then, you know, kind of, yeah, maybe they forgot.

00:26:36.740 --> 00:26:40.740
Lucas Lange: I just did a PR last night, and I allow maintainer to edit the PR. Yes.

00:26:40.740 --> 00:27:09.740
Lucas Lange: Yes, this is something I'm using very often right now. Like, because like, if you forgot to, for example, put a news entry for this, and you've never done this before, like, yes, there's a bot for this that Mariada wrote. So like, you know, you just need to go and read how to do this, and you will be able to do this from now on. But you know, when will you do that? Maybe tomorrow, maybe in a week, maybe you're just gonna leave this pull request, you know, to go stale. So instead, I just go and do this for you.

00:27:09.740 --> 00:27:33.740
Lucas Lange: This kind of level of multiplication really, I think is kind of, you know, closing the gap, like because very many changes, and sometimes it's just sad to look at, you know, like you have a change from 2017 that is clearly great, you know, like, clearly valuable. And then there was some knit that, you know, prevented it from being merged. And now it's 2021. And it no longer merges, because there's conflicts with other unrelated things.

00:27:33.740 --> 00:27:37.740
Lucas Lange: It's so out of date. It's no longer just a knit. It's now like a big now.

00:27:37.740 --> 00:28:01.740
Lucas Lange: Now it's hard to merge. And obviously, not just that, maybe that original person who created the change and worked hard on it now is discouraged or moved on to other projects. Because you know, like it wasn't merged for four years. So this is what we want to change, right? We want to make the, not just the first time contributor, but like any contributor, well, life or experience, like much better. Like at least providing feedback. Like,

00:28:01.740 --> 00:28:30.740
Lucas Lange: Like not all feedback will be positive. Like, this is already a mature project. And sometimes very good and easy ideas actually aren't if you look close enough, you know, like, this is the frustrating part where even kind of clear cut advantages might be disadvantages for a different group of users, right? Or on a different platform that you're not a user of, but you know, we have to actually look at the big picture. But at least you're going to know from somebody like me that, hey, like,

00:28:30.740 --> 00:28:35.740
Lucas Lange: This is good, but we cannot take it because of X, Y, Z.

00:28:35.740 --> 00:28:58.740
Lucas Lange: You know, it's super frustrating or disappointing to put work into doing a PR, submitting the PR, and then it's not that it was rejected. It gets no response. And that's, I think, really frustrating. Like I spent a whole day because I was thinking this would make this thing. I almost works for me, make it perfect for me. And here's the thing. And the answer could be no, it's not the right direction, but no answer at all is just like, ah, I'm not sure I want to do this.

00:28:58.740 --> 00:28:59.740
Lucas Lange: You know?

00:28:59.740 --> 00:29:00.740
Lucas Lange: Yeah.

00:29:00.740 --> 00:29:10.740
Lucas Lange: Related to that sort of, Rodrigo out in the live stream has a pretty good question. I think let me throw that out to you. And you know, what are some of the advice to potential future drive by contributors? How could they make your life easier?

00:29:10.740 --> 00:29:26.740
Lucas Lange: Well, like in the future, we'll move to GitHub issues. So a bunch of this will become easier for the contributors themselves. But currently that we still have bugs, Python.org. There is a required step, pretty much for the

00:29:26.740 --> 00:29:54.740
Lucas Lange: required step pretty much for anything that isn't a trivial typo, which is you need to have a bugs, Python.org account where we know that you signed the CLA. Right? So the contributor license agreement saying I release my, you know, code under Apache, for example. Right? So that we can actually use it and merge it and it's fine. So this is something that, you know, kind of is the important original step. And once you're already on bugs, Python.org. And your change is not trivial.

00:29:54.740 --> 00:30:22.740
Lucas Lange: Please click that, you know, open new issue button and write what you're doing and why. Maybe it's already there. Maybe you already know that you're fixing a particular thing that was already reported by somebody else. But if not, like spend this five to 10 minutes describing what is happening and why you want the change applied. Very many changes simply do the thing that they want to do. Many of them don't even write in the pull request name, like what they're doing. It's simply the original GitHub update file.

00:30:22.740 --> 00:30:40.740
Lucas Lange: Which really, you know, is a puzzle now for anybody else because we don't really know why this thing was touched in the first place. So essentially just describe like where you're coming from. Like what is this change doing? Like that is already, that's already great. That already kind of gives context to us.

00:30:40.740 --> 00:30:58.740
Lucas Lange: Would you suggest that people create an issue and get a little bit of buy in from you all before actually doing the change and the PR? Like, would it make sense to say I'm considering this? I'm happy to do a PR. Here's the plan. Would you accept this if I did it?

00:30:58.740 --> 00:31:11.740
Lucas Lange: Depends, right? Lucas Lange: Okay. Because like that is the worst centrist, bleak answer that anybody can give. Depends, right? When you're doing bug fixes, you should just go ahead and, you know, do your best and make the bug fix.

00:31:11.740 --> 00:31:13.740
Lucas Lange: Yeah. Here's the failing test. Here's the fix. Yeah.

00:31:13.740 --> 00:31:17.740
Lucas Lange: Yeah. But if you are saying, hey, this library should have this new function that I am using in my own project. So I just want to put it in a safe functools or whatever. So before actually going ahead and creating that pull request, like it's probably

00:31:17.740 --> 00:31:38.740
Lucas Lange: might sense to discuss it with us because a growing standard library, well, isn't so clear cut a value as you think, right? Because it's a maintenance burden.

00:31:38.740 --> 00:31:39.740
Lucas Lange: Yeah, absolutely.

00:31:39.740 --> 00:32:08.740
Lucas Lange: And more importantly, you know, now it has to consider all the usage groups that the original author might not care about, but we have to, we necessarily have to. So yeah, for features, definitely file an issue, you know, describe your problem. You might actually, if that makes it easier for everybody to discuss, just submit a pull request saying, hey, this is the feature if you want to talk about it. So we actually talk about something concrete instead of an idea. But if you, for example, say that, hey, we need to rewrite multiprocessing.

00:32:08.740 --> 00:32:15.740
Lucas Lange: So it does this other thing instead of creating a multi file gigantic pull request, like let's discuss first.

00:32:15.740 --> 00:32:37.740
Lucas Lange: Talk Python To Me is partially supported by our training courses. At Talk Python, we run a bunch of web apps and web APIs. These power the training courses as well as the mobile apps on iOS and Android. If I had to build these from scratch again today, there's no doubt which framework I would use. It's FastAPI. To me, FastAPI is the embodiment of modern Python and modern API.

00:32:37.740 --> 00:32:44.740
Lucas Lange: You have beautiful usage of type annotations. You have model binding and validation with Pydantic and you have first class async and await support. If you're building or rebuilding a web app, you owe it to yourself to check out our course modern API's with FastAPI over at Talk Python Training. It'll take you from curious to production with FastAPI. To learn more and get started today, just

00:32:44.740 --> 00:32:51.740
Lucas Lange: Just visit talkpython.fm/ FastAPI or email us at sales at talk Python dot FM.

00:32:51.740 --> 00:32:51.740
Lucas Lange: Another question out there I think is good from Paul is your PR review velocity. Do you expect it to go up as

00:32:51.740 --> 00:33:01.740
Lucas Lange: As you get better and maybe automate or go down as you hit the heart of

00:33:01.740 --> 00:33:01.740
Lucas Lange: Hard to say.

00:33:01.740 --> 00:33:03.740
Lucas Lange: It's like clearing out your inbox a little bit, right? Like some of them are using

00:33:03.740 --> 00:33:05.740
Lucas Lange: Yeah, I think it's a little bit.

00:33:05.740 --> 00:33:07.740
Lucas Lange: Yeah, I think it's a little bit.

00:33:07.740 --> 00:33:09.740
Lucas Lange: Yeah, I think it's a little bit.

00:33:09.740 --> 00:33:23.740
Lucas Lange: Like, oh, that's a whole day. Oh, no.

00:33:23.740 --> 00:33:28.740
Lucas Lange: Essentially, it is not very easy to kind of, you know, foresee what's going to happen a given

00:33:28.740 --> 00:33:34.740
Lucas Lange: week. But one thing for now has been constant. Like, you know, I need to get the number

00:33:34.740 --> 00:33:38.740
Lucas Lange: of pull requests down like below the number that we have right now because like there's

00:33:38.740 --> 00:33:44.740
Lucas Lange: there's going to be some that are on page like 35 of the, you know, open pull requests page.

00:33:44.740 --> 00:33:48.740
Lucas Lange: So I will probably never get to them otherwise. So I need to bring the number down.

00:33:48.740 --> 00:33:54.740
Lucas Lange: And so far, just by myself, I was unable to do it. Like just I cannot do it. Like I had one week

00:33:54.740 --> 00:34:02.740
Lucas Lange: where I really said like, hey, just, you know, 40 hour work week be down. Like I need to see if I can

00:34:02.740 --> 00:34:09.740
Lucas Lange: really bring this number down, you know, and I almost merged 100, you know, so that was not

00:34:09.740 --> 00:34:16.740
Lucas Lange: something I can do every week. And I still didn't meet the, you know, the goal because I did leave

00:34:16.740 --> 00:34:22.740
Lucas Lange: the account below 1400 when I went to sleep and I, you know, woke up the next day and it was already

00:34:22.740 --> 00:34:23.740
Lucas Lange: over, you know?

00:34:23.740 --> 00:34:26.740
Lucas Lange: Yeah, we saw the rate of incoming ones. That's a lot.

00:34:26.740 --> 00:34:31.740
Lucas Lange: Yes. So I'm doing around 50 ish a week right now. And you know, kind of it sounds super high, but

00:34:31.740 --> 00:34:38.740
Lucas Lange: you know, some of them are backboards to branches that we maintain. I list those because some of

00:34:38.740 --> 00:34:42.740
Lucas Lange: those backboards aren't trivial, right? Like they will conflict because, you know, the files changed in

00:34:42.740 --> 00:34:49.740
Lucas Lange: between or they require some push, you know, from a person because the bot didn't do what it's supposed to do. So, you know,

00:34:49.740 --> 00:34:54.740
Lucas Lange: it's also work. But 50 isn't really, you know, kind of me kind of flexing. I can do so many

00:34:54.740 --> 00:34:59.740
Lucas Lange: changes. It's really the rate of change that you can see. So there are enough new changes,

00:34:59.740 --> 00:35:07.740
Lucas Lange: right? That I guess I can always forever just stay on page one and just deal with those. But that would

00:35:07.740 --> 00:35:12.740
Lucas Lange: feel unfair, right? You know, that, you know, kind of that is some reversal of priorities

00:35:12.740 --> 00:35:14.740
Lucas Lange: where the last that comes in.

00:35:14.740 --> 00:35:17.740
Lucas Lange: Yeah. You almost need to go to the last page and work your way forward.

00:35:17.740 --> 00:35:23.740
Lucas Lange: Exactly. So, so sometimes I would look at the older ones, you know, basically just asking a interesting

00:35:23.740 --> 00:35:30.740
Lucas Lange: query to the search, you know, pull request search on GitHub and see what's there for, for example,

00:35:30.740 --> 00:35:52.740
Lucas Lange: this file or, you know, what's already approved and that I can, you know, kind of maybe push over the line and so on. So there's going to be some balance there. I don't expect to go any faster than I currently am because I can't really automate much there. Like there might be some instances where if we analyze the pull requests better, we find that, oh, there's an entire genre of pull requests.

00:35:52.740 --> 00:36:22.720
Lucas Lange: We can just bulk close, but I can't really, you know, okay, now I like put this on the report. Like it's like, oh, I closed 1500 pull requests. I'm so great. Now, like the ones that I put on the weekly report are all that I like with my own eyes look at and review. So I don't see how automation can really help me, you know, do that faster. Like we need to be careful, right? Like it's still a language used, you know, for some important stuff. And, you know, in

00:36:22.720 --> 00:36:52.700
Lucas Lange: Yeah, it's still a language used in our industry and beyond. So, you know, kind of a higher rate of change sounds nice, but it also, you know, is risky, right? If you don't do it responsibly. So I think that the 50 ish number that I'm currently at, like, is enough that I don't feel like, you know, I could be doing more. It's around what I can reasonably with a clear mind, like review day in, day out. And I still have some time to actually code, which is also fun because now you're contributing something of your own. But yeah,

00:36:52.700 --> 00:36:57.700
Lucas Lange: Like I don't think I can get to 100 every week, like regardless of the automation I can come up with.

00:36:57.700 --> 00:36:58.700
Lucas Lange: Yeah. And maybe they get harder.

00:36:58.700 --> 00:36:59.700
Lucas Lange: Oh yeah, they might.

00:36:59.700 --> 00:37:08.700
Lucas Lange: Because you could go, all right, this one, I can quickly close this. I can quickly close this. But as you sort of cycle, iterate over that list, like you get stuck more with the hard ones.

00:37:08.700 --> 00:37:09.700
Lucas Lange: Yeah, absolutely.

00:37:09.700 --> 00:37:22.680
Lucas Lange: Yeah. So you mentioned the weekly report, you're doing a weekly report that's just out in public. So for example, I'll link in the show notes to your weekly report for July 26 to August 1st. Was this like your second or third week?

00:37:22.680 --> 00:37:23.680
Lucas Lange: Something like that?

00:37:23.680 --> 00:37:24.680
Lucas Lange: Yeah.

00:37:24.680 --> 00:37:27.680
Lucas Lange: So if people want to keep up with what you're doing, it's right out there, isn't it?

00:37:27.680 --> 00:37:41.680
Lucas Lange: It would be out there anyway, right? Because like, even if you don't look at the reports that I'm writing, like you can still go to my profile on GitHub and just see like what the stream says there. And if it doesn't say anything, like, you know, that's kind of worrying. It's like, hey, is this guy even working? What is he doing?

00:37:41.680 --> 00:37:45.680
Lucas Lange: Check your Instagram, see if you're on the beach, just hanging out.

00:37:45.680 --> 00:37:52.660
Lucas Lange: Exactly. And I was actually last, just last week. Yes. So the weekly reports are kind of, you know, thought of by the way.

00:37:52.660 --> 00:38:22.640
Lucas Lange: I mean, personally, since like the PSF wants me to blog about what I'm doing, but not at this cadence. Right. But I personally just want to kind of tell you what I'm working on. Because ultimately what I'm doing is work on an open source project for the community. Like Lily hired by the Python social foundation. So there is no agenda that is personal, like, you know, to me or driven by some corporation. Like I'm literally maintaining this for you. So like, why not just let you in?

00:38:22.640 --> 00:38:42.640
Lucas Lange: On what I've spent my time on most of those I expect are going to be pretty boring after a while. Because like a big part of it, like at the bottom is always just a list of PR so we can actually click through and see like, Oh, what did, what did I do there? But you know, I always try to like keep it interesting by, you know, kind of finding some highlights that, you know, I found particularly interesting a given week.

00:38:42.640 --> 00:38:54.300
Lucas Lange: Yeah, I think this is really valuable. I don't help people a lot to sort of see what the role is doing. So originally this role was based on Django's fellowship program, right?

00:38:54.300 --> 00:38:54.820
Lucas Lange: Oh, yes.

00:38:54.820 --> 00:39:10.640
Lucas Lange: Yeah, that's really cool. So you're able to, Django had this idea of bringing on people to help deal with the lower, not lower level, the more maintenance oriented stuff, right? Like exactly what we've been talking about. And I know one of the things you talked about somewhere in one of your articles. I can't remember which.

00:39:10.640 --> 00:39:28.300
Lucas Lange: Was basically, you're very excited about this role, but you're also a little nervous because you want to make sure that you're the first one doing it and you want to make sure that it is going strong for the next year and the year after and whoever comes along you want. This is a good thing. You want to keep going. Right. So that's a little bit.

00:39:28.300 --> 00:39:29.300
Lucas Lange: Oh, yeah.

00:39:29.300 --> 00:39:30.300
Lucas Lange: You're kind of breaking the ground there, right?

00:39:30.300 --> 00:39:40.300
Lucas Lange: Yes. So this is important for many reasons, obviously. Right. Because like, you know, we can go ahead and talk about like how this can transform Python if there's enough people doing this full time and whatnot.

00:39:40.300 --> 00:39:41.140
Lucas Lange: Yeah.

00:39:41.140 --> 00:40:09.960
Lucas Lange: And this is all true. But you know, there are also kind of more like down to earth reasons why I would like more people to be able to experience work as I am right now, because it's just a wonderful way to work. And not only am I working on something that was my hobby for like a decade now. So I can just day in day out, just kind of, you know, I feel like I'm just kind of just doing the hobby right now. So it's amazing. But also, and this is something that, you know, like kudos to

00:40:09.960 --> 00:40:10.800
Lucas Lange: Google, like the sponsorship level for this is Bay Area level of salary for a software developer. So like, it doesn't really matter that I'm here in Poland, you know, kind of where very many companies would apply some location specific salaries to a position. And now like this is Lily kind of the like, well, like I don't want to say premium grade, but like industry strong salary here.

00:40:10.800 --> 00:40:17.300
Like the sponsorship level for this is Bay Area level of salary for a software developer.

00:40:17.300 --> 00:40:23.140
So like, it doesn't really matter that I'm here in Poland, you know, kind of where very

00:40:23.140 --> 00:40:28.520
many companies would apply some location specific salaries to a position.

00:40:28.520 --> 00:40:33.200
And no, like this is really kind of the like, well, like I don't want to say premium grade,

00:40:33.200 --> 00:40:36.660
but like industry strong salary here.

00:40:36.660 --> 00:40:40.700
It's not like you had to go and say, I'm really going to take a hit, but I really

00:40:40.700 --> 00:40:41.360
want to do this.

00:40:41.360 --> 00:40:42.440
So let's just do it.

00:40:42.440 --> 00:40:42.580
Right.

00:40:42.580 --> 00:40:43.560
So it's a proper job.

00:40:43.560 --> 00:40:43.940
Not at all.

00:40:43.940 --> 00:40:44.880
Not at all.

00:40:44.880 --> 00:40:50.020
Which is exactly why I think, you know, it's both important to the project, but also important

00:40:50.020 --> 00:40:52.680
to all those people who are already contributing.

00:40:52.680 --> 00:40:54.360
They're already providing value.

00:40:54.360 --> 00:41:01.820
And now if they got paid, like, you know, actual industry strong rates for their work, like

00:41:01.820 --> 00:41:07.400
this has the overall kind of opportunity, or this has this enough value that it can change

00:41:07.400 --> 00:41:08.720
a person's life, right?

00:41:08.720 --> 00:41:14.020
Like some of our contributors are not in the US or in countries that are like, you know,

00:41:14.020 --> 00:41:17.880
I don't know, Eastern Europe or East Asia or wherever else.

00:41:17.880 --> 00:41:22.180
And there, like this kind of amount of money, like might actually make or break, you know,

00:41:22.180 --> 00:41:25.180
kind of somebody's, well, entire livelihood.

00:41:25.420 --> 00:41:27.880
So it's amazing that this opportunity exists.

00:41:27.880 --> 00:41:32.620
At the same time, like for now, like, you know, let's not get ahead of ourselves.

00:41:32.620 --> 00:41:37.140
Like this is a contract for one person for 12 months, right?

00:41:37.140 --> 00:41:38.760
It might not get renewed.

00:41:38.760 --> 00:41:41.960
Like we might not get a sponsorship for next year.

00:41:42.140 --> 00:41:48.980
So the PSF might actually have to be on the lookout for more sponsors later, or maybe for a new

00:41:48.980 --> 00:41:54.380
developer, if they just don't feel like, you know, kind of the current one is doing the job

00:41:54.380 --> 00:41:55.140
like well enough.

00:41:55.140 --> 00:41:57.960
So like, you know, all those things might still be in motion.

00:41:57.960 --> 00:42:01.900
So I myself don't really kind of, you know, already put this in the bank.

00:42:01.900 --> 00:42:05.100
They're like, Hey, like I'll be doing this now for like, however long.

00:42:05.300 --> 00:42:11.080
Like now I'm really spending this first year of really producing like the most I can,

00:42:11.080 --> 00:42:12.440
a reason we can't, right?

00:42:12.440 --> 00:42:18.880
Because it might just be a 12 month gig that I will be having like fond memories of, you know,

00:42:18.880 --> 00:42:22.220
in a decade, or maybe it's a start of something much bigger.

00:42:22.220 --> 00:42:24.880
So why not take the chance and just, you know, try your best?

00:42:24.880 --> 00:42:25.680
Yeah, absolutely.

00:42:25.680 --> 00:42:30.080
So let's dream just a little bit and then maybe I'll put a call out to it.

00:42:30.080 --> 00:42:31.200
Would it make sense?

00:42:31.200 --> 00:42:35.100
Would you want, could you do more with like a team of people if there were

00:42:35.100 --> 00:42:36.740
five developers in residence?

00:42:36.740 --> 00:42:42.720
So would the PR look like 20 open ones, the oldest one a month open, things like that?

00:42:42.720 --> 00:42:43.840
Like, would that be good?

00:42:43.840 --> 00:42:44.740
Would you want to see that?

00:42:44.740 --> 00:42:51.420
Having five people available for work like this would entirely change how I'm approaching

00:42:51.420 --> 00:42:57.380
this because currently, like, I don't really have a much in terms of coordination with others,

00:42:57.380 --> 00:42:57.700
right?

00:42:57.700 --> 00:43:02.020
Like I just look at whatever current work is happening and try to help out there.

00:43:02.020 --> 00:43:05.800
But if you had five people, you could actually hit this problem head on.

00:43:05.800 --> 00:43:08.500
Like, you know, we have 1400 open pull requests.

00:43:08.500 --> 00:43:14.200
Like, it's not a question now, like, if we get them down to zero, but like, but when, right?

00:43:14.200 --> 00:43:18.060
Now we actually can plan to do this, you know, like methodically.

00:43:18.540 --> 00:43:23.220
And a lot of bigger style things that we always wanted to have in Python, we could now just

00:43:23.220 --> 00:43:24.620
plan to implement ourselves.

00:43:24.620 --> 00:43:30.460
Now, if I'm just the only person doing this, it feels irresponsible to just, you know, hide

00:43:30.460 --> 00:43:34.640
somewhere, you know, in a basement in Poland and start churning out my favorite feature,

00:43:34.640 --> 00:43:35.100
right?

00:43:35.100 --> 00:43:36.580
Like, that's not what this world is about.

00:43:36.940 --> 00:43:41.260
But if you have five people, you can reasonably expect that some of them might actually work

00:43:41.260 --> 00:43:46.420
full time providing new features or finishing unfinished ones, which there are plenty of

00:43:46.420 --> 00:43:49.800
for inclusion in a future version of Python.

00:43:49.800 --> 00:43:54.140
It could be somebody says, I'm the one who just goes to all the bug PRs and just checks

00:43:54.140 --> 00:43:54.480
those.

00:43:54.480 --> 00:43:58.920
And there could be somebody working on performance and like, you could specialize and things like

00:43:58.920 --> 00:43:59.280
that even.

00:43:59.280 --> 00:44:03.260
Oh, you specialize, but I really kind of think that if all of them are developers in

00:44:03.260 --> 00:44:08.020
residence, it would be great if they like kind of had like this on-call rotation for doing

00:44:08.020 --> 00:44:09.440
things as I'm doing now.

00:44:09.440 --> 00:44:13.000
So just responding to the external community, right?

00:44:13.000 --> 00:44:17.380
Because like the important thing that I wrote in the original post and I still believe in is,

00:44:17.380 --> 00:44:21.880
you know, like the drive-by contributor experience is extremely important, right?

00:44:21.880 --> 00:44:26.920
So like we would always have to have somebody doing this, but at the same time, nobody really

00:44:26.920 --> 00:44:27.980
wants to do only that.

00:44:27.980 --> 00:44:32.080
Like everybody has to provide, well, wants to provide value of their own so that they

00:44:32.080 --> 00:44:34.540
can, you know, touch it and say like, ah, I did this.

00:44:34.540 --> 00:44:34.980
This is good.

00:44:34.980 --> 00:44:35.220
Yeah.

00:44:35.220 --> 00:44:41.120
So yeah, I already have a bit of this, you know, like not as clear cut, not sponsored by

00:44:41.120 --> 00:44:48.620
the PSF directly, but Pablo, the release manager of Python 3.10 and 3.11 is both sponsored by

00:44:48.620 --> 00:44:52.080
Bloomberg to work halftime on Python performance.

00:44:52.080 --> 00:44:57.100
And also by him doing the release managing job for Python 3.10 and 3.11.

00:44:57.360 --> 00:45:02.220
He coordinates with me very often right now, especially that now we are in the release

00:45:02.220 --> 00:45:05.040
candidate stage of Python 3.10.0.

00:45:05.040 --> 00:45:07.820
And the greatest thing about this is that he's in London, right?

00:45:07.820 --> 00:45:13.640
So yeah, maybe, maybe far if I were to walk to him, but in terms of time zones, that's amazing.

00:45:13.640 --> 00:45:15.180
Like he's just one hour away.

00:45:15.180 --> 00:45:19.240
So, you know, we mostly have very synchronized work days.

00:45:19.340 --> 00:45:22.100
So I would talk to him like essentially every day.

00:45:22.100 --> 00:45:27.940
And that is also something that I missed doing remote work before, because, you know, kind

00:45:27.940 --> 00:45:32.480
of if you are working for a company that is in the Bay Area and you're the only one in your

00:45:32.480 --> 00:45:34.940
time zone, it kind of gets lonely, you know?

00:45:34.940 --> 00:45:41.180
Having more people around that now I have like Pablo, I have Victor, other, Sergey, Storchaka.

00:45:41.480 --> 00:45:44.500
And most of our communication is async, right?

00:45:44.500 --> 00:45:47.500
So it's not like everybody's talking when I'm not around.

00:45:47.500 --> 00:45:51.060
Like everything is happening on the mailing list anyway.

00:45:51.060 --> 00:45:59.040
So it feels like I'm much more integrated into the team compared to my previous stints at,

00:45:59.040 --> 00:46:00.420
you know, doing remote work.

00:46:00.420 --> 00:46:01.640
So I enjoy this a lot.

00:46:01.920 --> 00:46:03.580
So it sounds like it would make a big effect.

00:46:03.580 --> 00:46:04.800
That's fantastic.

00:46:04.800 --> 00:46:09.260
We look at that list of the sponsors, the visionary sponsors, and there's three companies doing

00:46:09.260 --> 00:46:09.960
really good stuff.

00:46:09.960 --> 00:46:13.940
But you gave a implicit sort of call out to this.

00:46:13.940 --> 00:46:15.020
And I've said it plenty of times.

00:46:15.020 --> 00:46:20.900
There are many companies out there who their entire core of their business is built upon Python

00:46:20.900 --> 00:46:22.840
and they make billions of dollars.

00:46:22.840 --> 00:46:28.740
Shouldn't they consider contributing something to build that foundation a little bit stronger,

00:46:28.740 --> 00:46:29.200
right?

00:46:29.200 --> 00:46:31.080
Like maybe make Python a little faster.

00:46:31.080 --> 00:46:34.420
Their developers go a little, you know, more efficient or whatever.

00:46:34.420 --> 00:46:34.860
Yes.

00:46:34.860 --> 00:46:39.160
So like the good thing about this is that, you know, we always can use more money.

00:46:39.160 --> 00:46:40.780
So obviously we need more sponsors.

00:46:40.780 --> 00:46:43.020
Many of the companies are trying.

00:46:43.020 --> 00:46:49.760
Simply the thing that they need is, you know, some sort of like plan or well, not like a legal

00:46:49.760 --> 00:46:54.660
contract, but at least some sort of understanding what the money is going to go for.

00:46:54.660 --> 00:46:55.640
What do they get out of it, right?

00:46:55.640 --> 00:46:58.860
Because in their balance sheets, they have expenses.

00:46:59.860 --> 00:47:01.400
And they have revenue.

00:47:01.400 --> 00:47:03.320
They don't usually have charity.

00:47:03.320 --> 00:47:04.380
Right.

00:47:04.380 --> 00:47:07.400
It's tricky for them to make it fit.

00:47:07.400 --> 00:47:11.560
I think it's kind of, you know, now with the developer in residence position, this kind of

00:47:11.560 --> 00:47:16.120
changes the game because you're no longer just sponsoring the Python social foundation and kind

00:47:16.120 --> 00:47:20.120
of, you know, yeah, you might have expectations, but maybe that will go for PyCon.

00:47:20.120 --> 00:47:24.860
Maybe they'll go for sponsoring of events or minority groups or whatever else.

00:47:24.860 --> 00:47:31.060
Like if your company really is interested in providing, you know, like support to the core

00:47:31.060 --> 00:47:32.960
development, like now you can.

00:47:32.960 --> 00:47:36.420
And I think like, well, hopefully like that is my hope.

00:47:36.420 --> 00:47:39.120
Like we're going to see more sponsors of that kind of.

00:47:39.120 --> 00:47:39.840
Yeah, absolutely.

00:47:39.840 --> 00:47:44.760
People who are actually interested can go to Python.org slash sponsor slash application.

00:47:45.040 --> 00:47:48.020
And it shows you what the tiers are, what they cost, what you get.

00:47:48.020 --> 00:47:52.920
You get a lot of inside access and a lot of visibility into Python at the visionary level

00:47:52.920 --> 00:47:54.180
that otherwise you wouldn't get.

00:47:54.180 --> 00:47:56.280
So there's, there's something to be said for that.

00:47:56.280 --> 00:47:57.640
People should check that out, right?

00:47:57.640 --> 00:47:59.580
You got to meet with the PSF board.

00:47:59.580 --> 00:48:00.980
A lot of cool stuff there.

00:48:00.980 --> 00:48:03.180
Workshops, job fairs.

00:48:03.300 --> 00:48:07.600
I think there's a lot of things on here that could go down as this is a legit value.

00:48:07.600 --> 00:48:12.200
Get a meet with the Python steering council, the sprint recognition and so on.

00:48:12.200 --> 00:48:14.660
So I just want to encourage companies out there.

00:48:14.660 --> 00:48:16.160
Like we don't need tons of them.

00:48:16.160 --> 00:48:18.340
If we had four others, right?

00:48:18.340 --> 00:48:20.060
You said that would make a huge difference, right?

00:48:20.060 --> 00:48:20.560
Absolutely.

00:48:20.560 --> 00:48:23.040
And also kind of like, let's be clear, right?

00:48:23.040 --> 00:48:28.560
Like, you know, kind of if a sponsor of a developer in the residence job, right?

00:48:28.560 --> 00:48:32.580
I came in with like a laundry list of like, this is the things that I want you to do.

00:48:32.660 --> 00:48:37.840
Like we'd probably have to kind of, you know, come to an understanding that this is not what

00:48:37.840 --> 00:48:38.420
this is about.

00:48:38.420 --> 00:48:45.960
But if people who happen to be employees of a company come in with changes that make sense

00:48:45.960 --> 00:48:51.720
and actually provide value for us, and now we have people to do full-time code review

00:48:51.720 --> 00:48:56.600
and inclusion of those changes, it's more likely that things that you care about are going to

00:48:56.600 --> 00:48:57.420
be included, right?

00:48:57.420 --> 00:49:01.700
So you can be ethical and impartial to, you know, kind of, well,

00:49:02.020 --> 00:49:07.540
sources of, you know, money flowing into your account, like, and also provide value to the

00:49:07.540 --> 00:49:07.840
sponsor.

00:49:07.840 --> 00:49:09.260
It's not a zero-sum game.

00:49:09.260 --> 00:49:13.860
Like, you know, let that be clear and explicitly said, because I feel like this is also important

00:49:13.860 --> 00:49:20.040
to know that if, for example, there is a company that really, really focuses on an operating system,

00:49:20.040 --> 00:49:24.360
like, I don't know, maybe they're running everything on Windows or macOS, right?

00:49:24.420 --> 00:49:29.640
Like, you know, and now they're like, hey, like, we really need somebody to make AsyncIO work

00:49:29.640 --> 00:49:35.240
better on Windows, or we need to fix this fork problem on macOS once and for all or whatnot.

00:49:35.240 --> 00:49:40.100
Like, you know, if they provide, you know, some changes and now there's people to do the review,

00:49:40.100 --> 00:49:43.880
more likely than not, we're going to have better support for Windows and macOS.

00:49:43.880 --> 00:49:45.220
Like, you know, everybody wins.

00:49:45.220 --> 00:49:46.140
Yeah, absolutely.

00:49:46.140 --> 00:49:51.260
Another benefit I'll throw out there, just thinking about this, is a lot of companies

00:49:51.260 --> 00:49:55.180
have, like, continuing education programs and credits.

00:49:55.180 --> 00:49:57.020
Like, hey, you have a bachelor's degree.

00:49:57.020 --> 00:49:58.180
Do you want a master's degree?

00:49:58.180 --> 00:50:02.020
If you're willing to go to school outside of work, we'll provide that for you.

00:50:02.020 --> 00:50:05.640
And the reason is, now you have people who work for you that have master's degrees and

00:50:05.640 --> 00:50:06.980
not bachelor degrees, right?

00:50:07.060 --> 00:50:13.240
So this could be a similar thing, like, hey, we want to provide a position for people to come

00:50:13.240 --> 00:50:18.600
work as the DIR or part of the DIR, and then maybe they come back and work for us afterwards.

00:50:18.600 --> 00:50:23.140
But they would be so much more knowledgeable about Python, having spent a year in this role.

00:50:23.140 --> 00:50:24.900
There's a lot of benefits like this.

00:50:24.900 --> 00:50:28.780
You know, you won't believe this, but like, obviously, the project is a million lines of

00:50:28.780 --> 00:50:29.300
code, right?

00:50:29.300 --> 00:50:31.920
Like, half of it is in C, half of it is in Python.

00:50:31.920 --> 00:50:36.020
So I don't know about most of it, right?

00:50:36.080 --> 00:50:42.600
Like, I've seen much of it, but like, I probably don't have expertise in most of it, but nobody

00:50:42.600 --> 00:50:44.260
cares when they submit pull requests.

00:50:44.260 --> 00:50:45.380
So then I look at them.

00:50:45.380 --> 00:50:51.180
So for many of them, it's my first actual stint at, you know, like touching a part of Python

00:50:51.180 --> 00:50:54.800
that I might know as a user, you know, from the outside, right?

00:50:54.800 --> 00:50:55.680
Yes.

00:50:55.680 --> 00:51:00.840
But then looking at like, how does Dunder main actually work in Python?

00:51:00.840 --> 00:51:05.320
It's this special module that, you know, like your execution starts with, like, how does

00:51:05.320 --> 00:51:06.020
this actually work?

00:51:06.020 --> 00:51:10.520
So you go and see, and you actually kind of dig and you understand like, ah, okay, like,

00:51:10.520 --> 00:51:15.220
I understand this because you have to take into account, you know, starting your Python

00:51:15.220 --> 00:51:19.660
interpreter, like, you know, with, I don't know, code from the standard input, or maybe

00:51:19.660 --> 00:51:23.860
somebody is starting a ripple, or maybe you're from a file, or maybe it's a zip file or whatever.

00:51:23.960 --> 00:51:27.920
So now I know more than I just knew like two weeks back about Dunder main.

00:51:27.920 --> 00:51:29.620
So very true.

00:51:29.620 --> 00:51:33.880
Like, you know, you bring somebody in who is motivated and maybe knows a bit about, you

00:51:33.880 --> 00:51:36.640
know, what CPython already is built on.

00:51:36.640 --> 00:51:41.460
But necessarily, you're going to get experience in parts that you would otherwise not touch,

00:51:41.460 --> 00:51:42.040
right?

00:51:42.040 --> 00:51:46.540
Because now you're reviewing the bulk of pull requests that are coming in, not the ones that

00:51:46.540 --> 00:51:47.440
you would write yourself.

00:51:47.440 --> 00:51:47.760
Yep.

00:51:47.860 --> 00:51:48.220
Absolutely.

00:51:48.220 --> 00:51:52.380
I remember one listener sent me a message and said, I was really surprised to hear you

00:51:52.380 --> 00:51:56.580
say there was like, this whole section of the standard library you didn't know about.

00:51:56.580 --> 00:51:59.760
That describes a lot of, there's a lot of stuff out there, right?

00:51:59.760 --> 00:52:01.000
You might just barely touch it.

00:52:01.000 --> 00:52:02.260
You might have no use for it.

00:52:02.260 --> 00:52:02.880
There's a lot.

00:52:02.880 --> 00:52:05.420
You would, this would force you to just give that depth.

00:52:05.420 --> 00:52:05.960
It's big.

00:52:05.960 --> 00:52:06.580
It's big.

00:52:06.580 --> 00:52:07.100
Absolutely.

00:52:07.780 --> 00:52:12.760
So Rodrigo asked previously about what drive-by contributors can do to help you.

00:52:12.760 --> 00:52:17.740
What can, you know, this is speaking to a smaller audience, of course, but still I think it's

00:52:17.740 --> 00:52:18.240
relevant.

00:52:18.240 --> 00:52:23.940
What can the core developers and the steering council and the people on the inside do to

00:52:23.940 --> 00:52:25.600
help you be more successful and efficient?

00:52:25.600 --> 00:52:26.780
Most of them know me.

00:52:26.780 --> 00:52:32.540
So the most important thing for them, and I really mean it, is like, just tell me what I

00:52:32.540 --> 00:52:33.660
should be rather doing.

00:52:33.660 --> 00:52:37.520
If you feel like there's something else I should be touching on, or if I did something

00:52:37.520 --> 00:52:41.260
that you don't like for any reason, just write me, just tell me, right?

00:52:41.260 --> 00:52:43.620
Like, because like, it's different from the external contributors.

00:52:43.620 --> 00:52:49.540
Most of the core devs I know one way or another, so we can be direct with one another.

00:52:49.540 --> 00:52:56.040
And I think like the make or break of this position is for me to provide value for both groups.

00:52:56.040 --> 00:53:02.020
So if there's anything that a particular person needs or wants, or even feels like, Hey, you

00:53:02.020 --> 00:53:05.460
know, you're focusing too much on this thing or, Oh, have you looked at this?

00:53:05.460 --> 00:53:08.360
Like, this is not something you've touched yet, but this is extremely important.

00:53:08.360 --> 00:53:09.480
Just let me know.

00:53:09.480 --> 00:53:11.420
So communication is key for us right now.

00:53:11.420 --> 00:53:19.000
And another thing that I kind of still don't quite know how to tackle is that I don't feel

00:53:19.000 --> 00:53:23.120
comfortable just now, like assigning a bunch of things to volunteers.

00:53:23.120 --> 00:53:23.920
You know what I mean?

00:53:24.160 --> 00:53:29.480
It's like now there is a bunch of pull requests where they're fixing something that actually

00:53:29.480 --> 00:53:32.760
broke because of a change that some core developer did five years back.

00:53:32.760 --> 00:53:39.420
So of course they have the best context on this change, but I feel kind of icky just, you know,

00:53:39.420 --> 00:53:45.340
going and doing this 10 times a day, you know, because it really feels like now you're being

00:53:45.340 --> 00:53:48.400
this manager of Python telling people, Hey, go fix your shit.

00:53:48.500 --> 00:53:50.020
Like, no, that is not what I mean.

00:53:50.020 --> 00:53:52.920
It's like, as I said, the project is huge.

00:53:52.920 --> 00:53:59.520
And, you know, very often it is really a bunch of people, like a low number of people who have

00:53:59.520 --> 00:54:02.480
the best context on given part of Python.

00:54:02.480 --> 00:54:08.420
So yeah, like if I do this too much again, like, you know, tell me if I'm not doing this

00:54:08.420 --> 00:54:13.480
and instead of going ahead and doing changes, you know, that you don't like in your particular

00:54:13.480 --> 00:54:18.320
favorite piece of Python also let me know, like, this is still something I'm pretty new

00:54:18.320 --> 00:54:18.500
at.

00:54:18.500 --> 00:54:23.180
Like, I'm just going to like issue my second invoice like next week.

00:54:23.180 --> 00:54:26.540
I'm pretty excited about that, but you know, like it's still a new thing for me.

00:54:26.540 --> 00:54:29.420
So I guess, you know, for the core devs.

00:54:29.420 --> 00:54:29.760
Yeah.

00:54:29.760 --> 00:54:35.960
Let's talk like whenever something is clearly well, improvable, if that's a word, like let

00:54:35.960 --> 00:54:36.240
me know.

00:54:36.240 --> 00:54:37.300
Yeah, absolutely.

00:54:37.920 --> 00:54:42.920
How much input into this role did the steering council have and how much did Guido have?

00:54:42.920 --> 00:54:45.640
Or was this a PSF plus Google sort of thing?

00:54:45.640 --> 00:54:48.940
So I actually spoke with nobody from Google.

00:54:48.940 --> 00:54:55.000
So directly, I don't know the people behind this position, like on their side.

00:54:55.000 --> 00:54:58.880
I know a bunch of core devs who happen to work at Google and they're very supportive of the

00:54:58.880 --> 00:54:59.220
position.

00:54:59.220 --> 00:55:00.880
So that's the extent of it.

00:55:00.880 --> 00:55:03.480
The steering council meets with me every second week.

00:55:03.700 --> 00:55:08.140
So it's mostly kind of me talking, hey, this is what I spend my time on.

00:55:08.140 --> 00:55:11.940
You know, they ask me like, how can we improve your output or whatever?

00:55:11.940 --> 00:55:17.360
Like, you know, or just they will, would just tell me about things that, you know, they find

00:55:17.360 --> 00:55:22.100
interesting or important that I might look at, but it doesn't feel like they're really kind

00:55:22.100 --> 00:55:24.720
of going and telling me what I should be doing.

00:55:24.720 --> 00:55:25.780
Like, you know, point blank.

00:55:25.780 --> 00:55:30.020
They're just having like suggestions on and how this role should be moving.

00:55:30.020 --> 00:55:35.340
So this is kind of, this is a short, well, 20, 30 minute meeting every two weeks.

00:55:35.340 --> 00:55:36.400
So kind of high level.

00:55:36.400 --> 00:55:41.320
I do have one just like it with Eva from the PSF and E.

00:55:41.320 --> 00:55:47.000
So it's really, you know, kind of the Python server foundation internally also needs to communicate

00:55:47.000 --> 00:55:52.160
because they have all the keys to say, being able to restart a bot, right?

00:55:52.160 --> 00:55:57.880
Or, you know, kind of make changes on a given server or maybe change some workflow on GitHub

00:55:57.880 --> 00:56:00.460
that affects everybody and so on and so on.

00:56:00.460 --> 00:56:05.160
So we just also meet every second week to make sure everybody's on the same page.

00:56:05.160 --> 00:56:07.420
And also there's some very low level stuff.

00:56:07.420 --> 00:56:11.100
Like for example, figuring out like, hey, what calendar am I working on?

00:56:11.300 --> 00:56:14.700
Like is Labor Day a day off for me?

00:56:14.700 --> 00:56:20.360
Or is some other holiday that is here in Poland, but not in the US a day off for me?

00:56:20.360 --> 00:56:22.980
Or don't I get any day off at all?

00:56:22.980 --> 00:56:24.300
And I work on Christmas Day.

00:56:24.300 --> 00:56:24.740
I don't know.

00:56:24.740 --> 00:56:30.100
So all of those, all of those things, you know, have to be actually discussed with the PSF directly.

00:56:30.100 --> 00:56:30.820
Yeah.

00:56:30.820 --> 00:56:34.120
And Kordevs, like, you know, kind of, we do talk a lot.

00:56:34.120 --> 00:56:38.400
And Guido in particular was very supportive of me starting this role.

00:56:38.400 --> 00:56:43.060
So I'm very grateful for this because it's kind of like, you know, kind of just getting,

00:56:43.060 --> 00:56:48.300
getting a little bit of, you know, like an email, just a bunch of sentences, just actually kind

00:56:48.300 --> 00:56:50.820
of saying like, hey, I believe this is a great decision.

00:56:50.820 --> 00:56:51.540
You're going to do great.

00:56:51.540 --> 00:56:52.520
Like, okay.

00:56:52.520 --> 00:56:53.260
I don't know.

00:56:53.260 --> 00:56:56.400
Like, I still feel like I'm a beginner in a lot of this.

00:56:56.400 --> 00:56:59.420
It's really reassuring and kind of lifts your spirit.

00:56:59.420 --> 00:57:05.740
So, so yeah, like, I guess we are in constant contact using super old ways like email and

00:57:05.740 --> 00:57:07.200
discourse to an extent.

00:57:07.200 --> 00:57:08.760
And now like VCs.

00:57:08.760 --> 00:57:13.220
So yeah, like we're doing Google meets and Zooms with others.

00:57:13.220 --> 00:57:17.360
They actually have too many, well, communication methods right now.

00:57:17.360 --> 00:57:21.840
So like me talking with Kordevs, I'm on IRC right now so that others can actually reach

00:57:21.840 --> 00:57:22.340
me as well.

00:57:22.340 --> 00:57:25.080
Others would talk to me through WhatsApp and whatnot.

00:57:25.080 --> 00:57:30.920
Like I have like 10 chat, like message apps right now open just to be able to talk to

00:57:30.920 --> 00:57:32.260
everybody I need to talk to.

00:57:32.260 --> 00:57:35.380
So that needs fixing, but I don't know who is supposed to do that.

00:57:35.380 --> 00:57:36.180
Yeah, I don't either.

00:57:36.180 --> 00:57:40.740
It's a growing problem, not a shrinking one, but it sounds like you're doing a good job.

00:57:40.740 --> 00:57:45.220
Even Rodrigo out there in the live stream says, listen to this hypes me up to go and contribute

00:57:45.220 --> 00:57:45.640
to Python.

00:57:45.640 --> 00:57:51.860
So hopefully that sentiment is multiplied across all the people who are contributing work that,

00:57:51.860 --> 00:57:54.600
you know, it'll, it'll get more attention sooner.

00:57:54.600 --> 00:57:55.460
So well done.

00:57:55.460 --> 00:57:56.040
Absolutely.

00:57:56.040 --> 00:57:57.120
I'm happy to hear that.

00:57:57.120 --> 00:57:57.840
Yeah, absolutely.

00:57:57.840 --> 00:57:58.320
All right.

00:57:58.320 --> 00:58:01.100
Well, we're about out of time to talk about the new role.

00:58:01.100 --> 00:58:05.100
So let me ask you the two final questions, which I've asked you before, but it's been a

00:58:05.100 --> 00:58:06.020
while since you were on the show.

00:58:06.020 --> 00:58:07.260
So time for an update.

00:58:07.260 --> 00:58:12.520
If you're going to do some Python, you know, you always run across different external packages,

00:58:12.520 --> 00:58:13.900
things on PyPI and whatnot.

00:58:13.900 --> 00:58:16.560
Have you found one that you're just like, wow, this thing is amazing.

00:58:16.560 --> 00:58:19.440
We should talk about it, get more awareness of it.

00:58:19.440 --> 00:58:23.080
It's already growing, so I'm not going to tell anything that is like now like extremely,

00:58:23.080 --> 00:58:27.400
you know, novel, but I'm extremely digging rich, right?

00:58:27.400 --> 00:58:33.380
Like the kind of text formatting, like library for CLIs, like anything that we write, like

00:58:33.380 --> 00:58:37.780
would use their progress bars and, you know, a bunch of other stuff that that's there for

00:58:37.780 --> 00:58:39.040
column formatting and whatnot.

00:58:39.040 --> 00:58:44.020
Like I find it very approachable and the results are like, yeah, this is a console.

00:58:44.020 --> 00:58:44.960
This is a text console.

00:58:44.960 --> 00:58:46.620
Just to be clear, right?

00:58:46.620 --> 00:58:48.080
Like it just looks fantastic.

00:58:48.080 --> 00:58:50.220
And the code for it is very nice.

00:58:50.220 --> 00:58:52.200
Like it's, it's a very declarative.

00:58:52.200 --> 00:58:54.300
So Rich, I like a lot.

00:58:54.300 --> 00:59:00.800
And Will, the author of it is now working on a text UI library that is much more Pythonic

00:59:00.800 --> 00:59:06.440
than the previous propositions that we had to say, like, you know, a curses or you were with.

00:59:06.440 --> 00:59:08.560
So yeah, like I'm hyped for that as well.

00:59:08.560 --> 00:59:08.960
It's called textual.

00:59:08.960 --> 00:59:09.980
Yeah.

00:59:09.980 --> 00:59:11.140
Textual looks really interesting.

00:59:11.340 --> 00:59:11.980
Yeah, exactly.

00:59:11.980 --> 00:59:17.300
So those would be my easy propositions for the day in terms of third party packages.

00:59:17.300 --> 00:59:17.700
Cool.

00:59:17.700 --> 00:59:21.280
The one that I actually thought of Rich earlier, when you talked about the better error messages,

00:59:21.280 --> 00:59:26.800
there's a cool article called FastAPI and Rich Tracebacks in development that talks about

00:59:26.800 --> 00:59:29.380
how to take Rich and then plug it in.

00:59:29.380 --> 00:59:35.340
So whenever there's a stack trace, you get like super colorized error messages and all sorts

00:59:35.340 --> 00:59:36.040
of cool stuff.

00:59:36.040 --> 00:59:38.140
And yeah, pretty neat.

00:59:38.140 --> 00:59:39.120
Pretty neat.

00:59:39.220 --> 00:59:43.880
This changes a lot, actually, because, you know, I find that, for example, between using

00:59:43.880 --> 00:59:44.880
GCC, right?

00:59:44.880 --> 00:59:51.800
The C compiler and using Clang, like just the fact that it colors my, you know, errors, like,

00:59:51.800 --> 00:59:53.320
you know, tiny thing.

00:59:53.320 --> 00:59:58.460
But it makes Clang just feel nicer to me because it just values my time.

00:59:58.460 --> 01:00:03.220
It just makes me, makes it easier for me to read the relevant parts of the message.

01:00:03.360 --> 01:00:07.740
So this sort of thing, like might just feel like, ah, you know, this is not really that

01:00:07.740 --> 01:00:08.800
important in my app.

01:00:08.800 --> 01:00:13.480
But like, it might save you a lot of time later on when you're like actually debugging stack

01:00:13.480 --> 01:00:15.960
traces that you're looking at like at 2am or whatnot.

01:00:15.960 --> 01:00:21.180
So I think this is extremely important, like not just because it's aesthetically pleasing,

01:00:21.180 --> 01:00:24.820
which is important in itself, but also functionally, right?

01:00:24.820 --> 01:00:27.680
Like, you know, this is the reason we are using syntax highlighting, right?

01:00:27.680 --> 01:00:32.600
Because it actually lets you see more information at the same time, right?

01:00:32.600 --> 01:00:38.220
So absolutely, like Rich provides this in a very smart way, like to your application.

01:00:38.220 --> 01:00:43.700
So not just your Python stack traces, but whatever you're displaying, like might be like this.

01:00:43.700 --> 01:00:46.340
It will automatically format numbers.

01:00:46.340 --> 01:00:51.600
It will automatically highlight, you know, dates and files and file paths and whatnot and whatnot.

01:00:51.600 --> 01:00:53.760
So tremendous value added.

01:00:53.760 --> 01:00:53.980
Yep.

01:00:53.980 --> 01:00:55.260
Tables, all kinds of cool stuff.

01:00:55.260 --> 01:00:57.700
Yeah, it's definitely getting a lot of love out there.

01:00:57.700 --> 01:01:02.460
And then if you're going to write some Python code, what editor are you porting these days?

01:01:02.460 --> 01:01:08.540
I am deeply invested in VS Code right now because it is in a very, very peculiar position where

01:01:08.540 --> 01:01:13.320
it's actually very good for CPython development, like core development, because it's both a good

01:01:13.320 --> 01:01:17.820
C editor with, you know, support for just jumping through definitions and whatnot.

01:01:17.820 --> 01:01:21.220
And also like has a great Python plugin, right?

01:01:21.220 --> 01:01:22.480
Like, you know, PyLens, right?

01:01:22.480 --> 01:01:26.960
So it's both a type checker and, you know, this language server that does a lot of help,

01:01:26.960 --> 01:01:28.120
like for you specifically.

01:01:28.120 --> 01:01:33.500
So it's just a good package all around, like to just do a CPython core development.

01:01:33.500 --> 01:01:35.320
Is it my perfect editor?

01:01:35.320 --> 01:01:41.420
Well, almost like if the Vim plugin for it was official, officially maintained and a little

01:01:41.420 --> 01:01:44.060
more sturdy, like I would be the happiest person there.

01:01:44.300 --> 01:01:48.080
But well, clearly this is super low key feature.

01:01:48.080 --> 01:01:50.420
Like it's not a very popular thing.

01:01:50.420 --> 01:01:54.920
Must not be because otherwise, you know, like looking at what Microsoft is now doing with

01:01:54.920 --> 01:01:59.340
GitHub and whatnot, like that would have been implemented if more people asked for it.

01:01:59.340 --> 01:02:01.980
So I might be of a dying breed of Vim users.

01:02:01.980 --> 01:02:02.560
I don't know.

01:02:02.560 --> 01:02:07.780
Still, like gets the job done, like for with the current Vim plugin and system, like, you

01:02:07.780 --> 01:02:09.460
know, with the window splits and whatnot.

01:02:10.020 --> 01:02:11.000
I'm very happy with it.

01:02:11.000 --> 01:02:16.160
And now seeing that my development environment can actually be run in a browser, like what

01:02:16.160 --> 01:02:17.280
else could you ask for?

01:02:17.280 --> 01:02:18.960
It's pretty amazing.

01:02:18.960 --> 01:02:19.720
Yeah, exactly.

01:02:19.720 --> 01:02:24.880
You're doing your podcast live stream recording from a browser and you're editing in a browser.

01:02:24.880 --> 01:02:27.360
All right, Lucas.

01:02:27.360 --> 01:02:29.080
Well, it's been great to have you here.

01:02:29.080 --> 01:02:30.480
Final call to action.

01:02:30.480 --> 01:02:32.880
You know, people want to learn more about the DIR.

01:02:32.880 --> 01:02:37.600
Maybe want to help you out or consider sponsoring this in the future or more people.

01:02:37.600 --> 01:02:38.460
What do you say?

01:02:38.620 --> 01:02:44.540
First of all, if you are a Python user, like you are very, very welcome to bring issues

01:02:44.540 --> 01:02:45.620
to us when they happen.

01:02:45.620 --> 01:02:45.920
Right.

01:02:45.920 --> 01:02:52.600
So whether this is on bugs, Python, the dorg, obviously a very good place so that your report

01:02:52.600 --> 01:02:57.540
will historically, you know, maintain there and we can have a discussion that is open and

01:02:57.540 --> 01:02:59.360
actually work towards a solution.

01:02:59.360 --> 01:03:01.300
But also in informal ways.

01:03:01.300 --> 01:03:07.340
You know, if you reach to us via RSC or ask stuff on the mailing list or discourse, like

01:03:07.340 --> 01:03:09.140
we're very happy to hear your feedback.

01:03:09.140 --> 01:03:12.180
So you don't have to write code like on day one.

01:03:12.180 --> 01:03:12.680
Don't worry.

01:03:12.680 --> 01:03:15.520
You might never write code for us to fix your problems.

01:03:15.520 --> 01:03:16.480
Just report them.

01:03:16.480 --> 01:03:17.020
It's great.

01:03:17.020 --> 01:03:22.020
If you have stuff that works very well for you, you might also spend a minute, you know,

01:03:22.020 --> 01:03:26.740
telling us because this is something that nobody gets enough, you know, in this industry.

01:03:26.740 --> 01:03:31.320
We only get bug reports, you know, and yeah, like if you do want to contribute, there's

01:03:31.320 --> 01:03:32.360
many ways to do this.

01:03:32.360 --> 01:03:34.620
If you want to code, absolutely.

01:03:34.620 --> 01:03:41.000
Just don't think it's super, super trivial to get large changes into a 30 year old programming

01:03:41.000 --> 01:03:41.480
language.

01:03:41.480 --> 01:03:43.740
I could make an entire talk just about that.

01:03:43.740 --> 01:03:44.080
Right.

01:03:44.080 --> 01:03:49.960
Every little change has huge implications for some small percentage of people, but there's

01:03:49.960 --> 01:03:50.360
millions.

01:03:50.360 --> 01:03:51.180
And so that's a lot.

01:03:51.420 --> 01:03:52.940
Sometimes very surprising ones.

01:03:52.940 --> 01:03:53.320
Yes.

01:03:53.320 --> 01:03:54.280
But yes, absolutely.

01:03:54.280 --> 01:03:57.980
We need more people doing the work and there's plenty of it.

01:03:57.980 --> 01:04:01.000
So you might still have tremendous impact for the world.

01:04:01.000 --> 01:04:03.360
You know, maybe your code is going to run on Mars.

01:04:03.360 --> 01:04:04.400
You don't, you never know.

01:04:04.400 --> 01:04:04.680
Yeah.

01:04:04.680 --> 01:04:09.940
Even if you're just reviewing PRs and making the little tiny fixes or stuff like that, that

01:04:09.940 --> 01:04:10.940
could be a big contribution.

01:04:10.940 --> 01:04:11.300
Totally.

01:04:11.300 --> 01:04:14.580
And finally, for the current sponsors, thank you.

01:04:14.580 --> 01:04:16.540
You make this possible.

01:04:16.540 --> 01:04:18.520
So like, really, thank you.

01:04:18.520 --> 01:04:24.840
And for people and companies considering sponsorship for next year, if there's anything that you're

01:04:24.840 --> 01:04:28.380
not seeing that you would like to see that would convince you that it's worth it.

01:04:28.380 --> 01:04:33.980
Also let the PSF know, like we might adjust what we're doing so that you're more comfortable

01:04:33.980 --> 01:04:39.740
with sponsoring because really like, you know, this is a very unique programming language

01:04:39.740 --> 01:04:43.200
in the sense that it is community driven and community owned.

01:04:43.200 --> 01:04:45.000
So yeah, please talk to us.

01:04:45.000 --> 01:04:45.300
Yeah.

01:04:45.300 --> 01:04:45.780
Awesome.

01:04:46.000 --> 01:04:47.480
Well, thanks so much for being here.

01:04:47.480 --> 01:04:48.580
Catch you next time.

01:04:48.580 --> 01:04:49.020
Thank you.

01:04:49.020 --> 01:04:49.480
Bye-bye.

01:05:15.460 --> 01:05:19.040
Bye-bye.

01:05:19.040 --> 01:05:22.620
Bye-bye.

01:05:22.620 --> 01:05:24.620
Bye-bye.

01:05:24.620 --> 01:05:27.220
Check it out for yourself at training.talkpython.fm.

01:05:27.220 --> 01:05:31.940
Be sure to subscribe to the show, open your favorite podcast app, and search for Python.

01:05:31.940 --> 01:05:33.220
We should be right at the top.

01:05:33.220 --> 01:05:38.380
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

01:05:38.380 --> 01:05:42.560
and the direct RSS feed at /rss on talkpython.fm.

01:05:42.560 --> 01:05:46.000
We're live streaming most of our recordings these days.

01:05:46.000 --> 01:05:49.400
If you want to be part of the show and have your comments featured on the air,

01:05:49.400 --> 01:05:53.780
be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

01:05:54.240 --> 01:05:55.680
This is your host, Michael Kennedy.

01:05:55.680 --> 01:05:56.960
Thanks so much for listening.

01:05:56.960 --> 01:05:58.140
I really appreciate it.

01:05:58.140 --> 01:06:00.040
Now get out there and write some Python code.

