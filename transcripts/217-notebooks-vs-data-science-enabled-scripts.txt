00:00:00 On this episode, I meet up with Rong Lu and Catherine Kampf from Microsoft while I was at Build this year.

00:00:04 We cover a bunch of topics around data science and talk about two opposing styles of data science development and related tooling,

00:00:11 using notebooks in Jupyter or Python code files and editors like Visual Studio Code and PyCharm.

00:00:17 The conversation was a lot of fun and I'm looking forward to sharing it with you.

00:00:20 This is Talk Python To Me, episode 217, recorded May 8th, 2019.

00:00:25 Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:00:44 This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy.

00:00:48 Keep up with the show and listen to past episodes at talkpython.fm and follow the show on Twitter via at Talk Python.

00:00:55 This episode is sponsored by Linode and Backlog.

00:00:58 Please check out what they're offering during their segments. It really helps support the show.

00:01:01 Rong, Catherine, welcome to Talk Python.

00:01:04 Yeah, thank you. Thanks so much for having us.

00:01:06 Yeah, it's great to be here with you and literally here with you at Microsoft Build at the conference doing some live recording.

00:01:14 So, quite cool. How's the conference going?

00:01:17 It's been great. I'm a little sad because it's so sunny out, but the stuff inside is great too.

00:01:21 Yeah, really exciting news happening here and you see a lot of people getting excited.

00:01:26 Yeah, is this an event that you've been planning for for a long time?

00:01:30 Yeah, every year.

00:01:31 We have the back-to-back PyCon to build.

00:01:34 It's been a lot of conferencing, a lot of fun announcements, a lot to keep up with, but also met a lot of great people.

00:01:39 You were also at PyCon, right?

00:01:41 Yes.

00:01:41 Yeah, that's pretty awesome. What did you think of PyCon?

00:01:43 It's great. It was my first PyCon.

00:01:45 So, pretty cool out there and then see the community and meet people.

00:01:49 So, it was my first sort of community-run conference.

00:01:53 I've only been to Microsoft ones in the past, so it was very cool to see that and have more interaction with Python users and Notebooks users.

00:02:01 Yeah, that's cool. I think both the conferences are pretty special and really nice and I enjoy going to both of them, but they're really different.

00:02:07 Yeah, definitely.

00:02:09 For people who haven't gone to Microsoft Build, the experience walking around here is like all this cool stuff and there's like robotics and other kinds of neat things going on, but it's mostly put on by the different Microsoft teams, right?

00:02:22 Like there's a section of like the Visual Studio for Mac people and you can go talk to the people that work on it and that's great.

00:02:28 And you go to PyCon and it just doesn't have like that centralized structure, right?

00:02:33 It's just like a thousand flowers blooming and just, you know, whatever's happening is happening out there.

00:02:38 So, it's a little more chaotic, but, you know, a little more independent as well.

00:02:42 I don't know. I think they're both fun and they're both a cool experience.

00:02:45 There's some nice surprises as well at PyCon.

00:02:48 Like as I walk through the booth area, like at Build, you kind of expected all these Microsoft Teams there, but at PyCon, you see different companies showing up there because they use Python for development.

00:03:01 Yeah.

00:03:01 And like really unexpected companies there, but it's fun.

00:03:06 It's interesting.

00:03:06 Yeah, it's super interesting.

00:03:07 Very different.

00:03:08 Yeah, you know, one of the parts I really like is the first two and a half days, like the opening night and then the first two days are the Expo Hall days.

00:03:18 You know, we've got a booth.

00:03:19 You all had a booth.

00:03:20 Were you at the booth?

00:03:21 Yeah, I was.

00:03:22 Many hours at the booth.

00:03:23 Yes.

00:03:23 The booth is a blessing and a curse.

00:03:25 I was at a booth as well.

00:03:27 I have been for the last couple of years and it's great.

00:03:30 You meet so many people, but also like you don't get to experience as much of the rest of the stuff going on.

00:03:34 But then the next day they take that down.

00:03:37 It's the poster section and then the job fair.

00:03:39 Right.

00:03:39 And the job fair, I think it's pretty revealing because you can walk along and see like all these companies are hiring Python developers, data scientists, web developers, whatever.

00:03:48 And it's super clear and obvious kind of like what they're up to.

00:03:51 So you can kind of really put your finger on the pulse of the community by just walking through the job fair.

00:03:57 Yeah, it was super crowded.

00:03:58 Yeah.

00:03:59 So the community is super engaging and super fun.

00:04:04 Yeah.

00:04:04 Yeah, absolutely.

00:04:05 I think that's for sure.

00:04:06 Both of these events were super cool.

00:04:08 And I was glad we were all at them.

00:04:10 That's great.

00:04:11 So let's start with your story.

00:04:12 And I guess, Ron, we'll start with you.

00:04:14 How did you get into programming in Python?

00:04:16 Actually, about 10 years ago when I was in college, I actually majored in data mining.

00:04:21 And then back then I learned C.

00:04:24 Okay.

00:04:24 But after I graduated, I joined Microsoft.

00:04:26 I mostly worked on C# related developer tools and then moved to C++.

00:04:31 And just recently, I just moved from C++ team into the Python team.

00:04:36 It's like, oh, these people are talking about Python.

00:04:38 I got to see what's going on there.

00:04:41 And then, of course, my own knowledge from 10 years ago about data mining no longer applies.

00:04:47 Like so many new things happening in the AI, data science world.

00:04:50 And this is super exciting.

00:04:52 Sure.

00:04:53 And that's why I got into the Python team.

00:04:55 It was like, hey, maybe I can use some of my own knowledge here.

00:04:58 But a lot of learning for me, actually, given how things have moved.

00:05:02 Yeah, I'm sure.

00:05:03 I mean, it's changing so fast.

00:05:05 What was your impression of coming into Python from like these more statically typed compiled type languages and all that?

00:05:13 Definitely feel like the level of experience required to get started is very different coming from a C++ world.

00:05:21 And how I see like all these users we have and even younger kids, they start to learn about programming.

00:05:29 Python is the first language they learn and up to like people are just using Python for various different projects for real life.

00:05:37 And that's super cool.

00:05:38 And that's a lot of applications in real life that could change people in their daily life using the power Python.

00:05:45 Like earrings, predicting different things.

00:05:51 Yeah.

00:05:51 Did the white space drive you crazy at first?

00:05:53 A little.

00:05:54 And now?

00:05:55 Now, getting better.

00:05:57 Good.

00:05:58 Good.

00:05:59 But yeah.

00:06:00 Cool.

00:06:00 Catherine, how about you?

00:06:01 I kind of had a similar experience.

00:06:02 I started programming, just randomly took a course in my high school and then ended up majoring in computer science.

00:06:08 And that was all in C++.

00:06:10 And I remember one of my years I ended up in an AI course.

00:06:14 And the course was mainly around Python.

00:06:16 And I remember I like hated Python at first.

00:06:18 I was like, this feels too easy.

00:06:20 What's going on here?

00:06:21 Someone's tricking me.

00:06:22 I don't know what's going on.

00:06:24 This is no.

00:06:25 I want my C++.

00:06:27 And then over the course of the semester, I just fell in love with Python.

00:06:30 And then when I started at Microsoft, I was exposed more to the big data landscape.

00:06:34 So using things like PySpark and getting exposure to notebooks there.

00:06:37 And then, yeah, I've just, Python has very much grown on me.

00:06:40 My friends from school always laugh because they're like, remember when you hated it and now you're on the Python team?

00:06:45 Life takes weird turns.

00:06:47 Yeah.

00:06:47 Yeah.

00:06:48 Yeah.

00:06:48 For sure.

00:06:48 It's like, no, I want to use a real language.

00:06:50 Right.

00:06:50 Compiling and linking and headers.

00:06:53 Come on.

00:06:54 Space doesn't matter.

00:06:54 So my cool.

00:06:55 That's right.

00:06:56 I'll write it all in one line.

00:06:57 Yeah.

00:06:59 That's pretty cool.

00:06:59 I love it.

00:07:00 So, Ron, you both work at Microsoft, but you don't work on the same projects or the same team, right?

00:07:07 We are on the same team.

00:07:07 Same team.

00:07:08 Different projects.

00:07:09 Different projects.

00:07:09 Okay.

00:07:09 So, Ron, let's start with you.

00:07:11 What do you do day to day?

00:07:12 Yeah.

00:07:12 So, I am a program manager on the Python team at Microsoft.

00:07:15 Primarily, I'm focusing on building developer experience around data science and machine learning inside Visual Studio Code.

00:07:23 Visual Studio Code is our lightweight cross-platform editor.

00:07:28 And it's been pretty good for Python general development already.

00:07:31 But now we're adding a lot of new things around how to make it easier for people who do data exploration, analysis, and machine learning.

00:07:40 How do we bring all those power of Jupyte Notebooks into an editor so you can use it for everything you do?

00:07:49 So, there are people who prefer an editor versus notebooks.

00:07:52 That has been an ongoing debate in the community.

00:07:55 And that's definitely there are personal preference.

00:07:59 But we also see a place where VS Code can be the place where you take your notebook file after you're done with your experimentation and you're ready to turn your code into a production code.

00:08:11 And this is where you can kind of bridge the two worlds together.

00:08:15 And VS Code can play a role in that.

00:08:18 So, that's the new area that we're investing in.

00:08:20 That's what I've been working on since I joined this team.

00:08:23 I think it's cool that you're working on that because I feel like there's a bit of a divide.

00:08:26 Not in a negative way, but there's certainly people that will open up a notebook in Jupyter, JupyterLab, something like that, to do exploratory data.

00:08:34 And there's people who write production code that's structured with tests and coverage and all of that stuff.

00:08:41 And going between those, I don't know what people do today, but it feels like, well, you take the notebook and you just copy bits over.

00:08:47 So, we're trying to hopefully minimize the manual copy and paste between the two.

00:08:56 So, when you have a notebook ready to turn into production, we can help you import a notebook into Python code, in VS Code directly, so you don't have to do all the work yourself.

00:09:05 And then, once you're in VS Code, of course, you get all the editing features that you expect.

00:09:09 There's IntelliSense refactoring, debugging, everything in there, so you can live in a developer tool to finish your developer work.

00:09:17 Yeah, that sounds awesome.

00:09:18 And Catherine, how about you?

00:09:19 You're on the other side of the design.

00:09:21 Yeah.

00:09:21 We fight.

00:09:22 We fight.

00:09:22 She is on the notebook side.

00:09:26 Every day, 8 a.m., wrong, and I face off to see who's going to win that day.

00:09:30 So, I'm a program manager on the Azure Notebooks team, and Azure Notebooks is basically an Azure-hosted, free, no-setup-required Jupyter Notebooks environment.

00:09:39 So, in my day-to-day, I spend a lot of time talking to customers, learning about their experience, whether it be in an editor, like VS Code, or in notebooks, and learning, you know, how we can make that better, and what our next generation of Azure Notebooks should look like to enable every set of scenarios, from educators to enterprise data scientists, and learning about any features or things that they need to be happy on Azure Notebooks.

00:10:03 Yeah, awesome.

00:10:04 That sounds like a really fun project.

00:10:06 It's a blast.

00:10:06 Yeah, I love it.

00:10:07 Yeah, cool.

00:10:08 So, I want to talk a little bit about just kind of notebooks in general and find out where you think they're really useful or, you know, what's sort of coming next in it.

00:10:17 And I just want to give a quick shout-out to an article on The Atlantic, I think, which I've talked about a few times, but it's called The Scientific Paper is Obsolete, and Here's What's Next.

00:10:27 And it's got, like, a lot of a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper.

00:10:46 And I think that's a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper.

00:10:53 And I think that's a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper.

00:11:06 And I think that's a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper.

00:11:13 I think that's a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper.

00:11:20 And I think that's a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper, and it's got a lot of people in the paper.

00:11:32 So there's scenarios like that, all the way to, you know, we have a security team at Microsoft who's building their anomaly detector and threat detection, threat hunting, all within notebooks.

00:11:43 So I think it's just super cool to be a part of and see the vast array of use cases for notebooks.

00:11:49 Yeah, it sounds like maybe it's not even really shaken out, right?

00:11:52 Yeah, exactly.

00:11:53 We kind of know what the use case for code looks like, right?

00:11:55 Like regular executable files, you know, websites and whatnot.

00:12:00 But I feel like with notebooks, there's just all these different attempts to make use of them.

00:12:05 Right.

00:12:06 You know, could you treat them as like units that can be combined as like a function or something, or like are they a paper that's better?

00:12:12 Yeah.

00:12:13 Yeah.

00:12:13 Which is right.

00:12:13 Yeah, it's cool to see.

00:12:14 I mean, we get within our community, it's easy to see the applications and data science, but then it's always great to hear outside perspectives, people coming from different languages or different areas of technology and everything,

00:12:25 and thinking about how they can use this as a platform for experimentation or sharing work and collaborating.

00:12:31 So it's very, very inspiring.

00:12:33 Yeah, yeah.

00:12:34 That's pretty awesome.

00:12:34 Yeah.

00:12:35 Wrong?

00:12:35 Absolutely.

00:12:35 I think the interactivity is what Jupyter is most powerful at.

00:12:41 Like the fact that we can turn a static report or paper into something that everybody can go and execute.

00:12:48 That's super cool.

00:12:50 Not only we have seen a lot of people using notebooks for teaching, because that's like where organized documentation plus real code.

00:12:58 Yeah.

00:12:59 It's super easy for a teaching setting.

00:13:01 And also we use that like internally as well as we report numbers and build dashboards.

00:13:07 What if everything is interactive and other people can go and pivot the data independently without having to go into like a pile of code.

00:13:16 So that's really, really, really powerful.

00:13:19 And that's why it's so popular in the data science community.

00:13:22 Absolutely.

00:13:23 A great thing to have.

00:13:25 And I think that adoption is going to just keep going, given how easy it is to get started.

00:13:30 And I think one of the things you mentioned earlier, just reproducibility.

00:13:33 I think that's one of the things notebooks simultaneously does really well and also poorly in terms of like environment sharing.

00:13:41 And that's something we've been thinking a lot about just in our platform.

00:13:43 You know, if I'm sharing a notebook with wrong, how can I make sure that dependencies get so complex?

00:13:48 How can I make sure that everything wrong has everything she will need to run this notebook?

00:13:53 And even with data sets, you know, if you share a report that connected to a database that was once storing, you know, this data from May 2016.

00:14:02 And now it's June 2019.

00:14:03 You know, how do you handle those cases?

00:14:05 Right.

00:14:05 And the report says, you know, such and such and like mark down below, like in a cell below it.

00:14:10 But it's like the data is not the same anymore.

00:14:12 Right.

00:14:12 Right.

00:14:12 That's actually, that's an interesting idea.

00:14:14 Right.

00:14:15 The life cycle of it.

00:14:16 Right.

00:14:16 Yeah.

00:14:16 I think that's one thing that Azure notebooks could potentially help because the fact that it runs in the cloud and then we could potentially have pre-config the environment.

00:14:25 So you can make sure your notebooks will always produce the same results.

00:14:29 Yeah.

00:14:30 So right now you can use like environment setup scripts and import your requirements.txt or environment config.

00:14:35 But in the future, we definitely want to make that as seamless as possible.

00:14:38 So I can just share whether it be an Azure notebooks project or a GitHub repository with you that has my requirements.

00:14:43 So it'll just be in a container and everything's good to go.

00:14:46 That's pretty cool.

00:14:46 I mean, even with the requirements, the .txt file, right?

00:14:50 It might say we need these things to run this notebook, but they might not be pinned.

00:14:54 Right.

00:14:54 Right.

00:14:54 And so like you run it again a year later, one of those things has become incompatible with like the code that was written or something like that.

00:15:01 Right.

00:15:02 It's a challenge.

00:15:03 And as a data scientist, you probably don't think about like, oh, I better like pin the versions of my dependencies.

00:15:08 You're like, oh, look, it's a graph.

00:15:09 It's working.

00:15:10 Yes.

00:15:10 Don't change it.

00:15:12 Don't touch it.

00:15:12 That's my version.

00:15:14 But of course, later on, if the package has newer versions, then you have to upgrade your notebook to make sure it still runs and stuff like that.

00:15:21 It is kind of a pain to manage.

00:15:23 It's pretty tricky.

00:15:25 So I want to dig in more to Azure Notebooks, but like let's, you said there's like this battle you all do at age.

00:15:30 So I think it's Ron's turn to like say a little bit about like, if not notebooks, if it's going to be more like code editor style of work, but still in the data exploratory way, you talked about this other thing that you're doing.

00:15:45 What's that look like?

00:15:45 Yeah, essentially to summarize what we have done is we brought the power of Jupyter Notebooks into VS Code.

00:15:52 So imagine, so today in Jupyter Notebooks, you can run a piece of code and get your results right away, whether it's a data frame or it's a plot or just text, markdown.

00:16:04 And imagine you can do all that inside VS Code.

00:16:06 In a slightly different view, but you get the same results.

00:16:10 Is it actually the same format, the IPYNB file?

00:16:14 Or is it something different?

00:16:16 So actually, so at the moment, the scenario we support is you work with Python scripts.

00:16:21 So once you have your Jupyter Notebooks ready, you're ready to import, we grab all the code in there and put everything into a Python file.

00:16:28 So you're literally working with a Python file.

00:16:31 Right, just a .py file.

00:16:32 We have converted it into PY.

00:16:35 Yes.

00:16:35 So the idea is, hey, this is really an editing centric experience.

00:16:40 And the fact that you can visualize all those things like plots and data frames and all that, that's like an add-on bonus.

00:16:46 But you are really working with...

00:16:48 Yeah, and do you have like a demarcator for the different cells?

00:16:51 Yes.

00:16:51 Like a double hash or something?

00:16:53 Right.

00:16:53 It's single hash.

00:16:55 Single hash, okay.

00:16:55 No hash percent percent is the magic command.

00:16:58 Okay.

00:16:59 Not command, comment style, special comment you can put in Python file.

00:17:03 And then we can recognize, oh, this is a cell.

00:17:05 And then we do magic things.

00:17:07 Okay.

00:17:08 So we'll visualize, like, kind of visually we'll highlight those cells in the code editor.

00:17:13 So you kind of get a feel of, like, Jupyter notebooks.

00:17:16 But then you can also run single cell using shift enter.

00:17:20 Like, that's the key that people use, shift enter.

00:17:24 Yeah, you can do the same in VS Code.

00:17:26 Okay.

00:17:26 And you get the same results.

00:17:28 We show all the results in a separate window in VS Code that's separate from your code.

00:17:34 That's just how the design.

00:17:36 We decided to go with that design.

00:17:38 But there's no reason we can't show results in line because we have got some requests around that.

00:17:44 Right, right.

00:17:45 So we're trying to bring the two together.

00:17:47 I think there are very different users who want different things depending on their background.

00:17:54 People coming from Jupyter notebooks are more familiar with inline results.

00:17:59 But those who come from software engineering background that I used to work with editors and cofiles,

00:18:05 they're more like, oh, I just wanted something on the side.

00:18:08 So I can see all the history, like all the results.

00:18:11 I can always go back.

00:18:13 So nothing is getting replaced in line.

00:18:15 But they want more of an editor experience.

00:18:17 Right.

00:18:18 That's more of an editor experience.

00:18:19 So I think that we just provide different options for people who come from different backgrounds.

00:18:24 So you can pick if you want a notebook, if you want a notebook style in VS Code, you can do all that.

00:18:29 This portion of Talk Python To Me is brought to you by Linode.

00:18:34 Are you looking for hosting that's fast, simple, and incredibly affordable?

00:18:37 Well, look past that bookstore and check out Linode at talkpython.fm/Linode.

00:18:43 That's L-I-N-O-D-E.

00:18:44 Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:18:49 They have 10 data centers across the globe.

00:18:51 So no matter where you are or where your users are, there's a data center for you.

00:18:55 Whether you want to run a Python web app, host a private Git server, or just a file server,

00:18:59 you'll get native SSDs on all the machines, a newly upgraded 200 gigabit network, 24-7 friendly support,

00:19:07 even on holidays, and a seven-day money-back guarantee.

00:19:09 Need a little help with your infrastructure?

00:19:11 They even offer professional services to help you with architecture, migrations, and more.

00:19:16 Do you want a dedicated server for free for the next four months?

00:19:19 Just visit talkpython.fm/Linode.

00:19:22 Well, you'll have to help me out with this one because I haven't done a lot of teamwork on notebooks,

00:19:28 but I hear that merging notebooks can be challenging, especially if someone's rerun a cell and it has a new output.

00:19:36 Oh, yeah.

00:19:37 Right.

00:19:37 Because it's called an API and it's like caught in the weather, but they ran it and the weather's now different.

00:19:43 Yeah.

00:19:43 And so it's like a merge conflict and stuff like that.

00:19:46 This is a problem?

00:19:47 This is a problem, yeah.

00:19:48 The way notebooks are stored in IPYMB is just kind of a JSON file.

00:19:53 So it stores, you know, the output and specific metadata about your file as well.

00:19:58 So you can go and change one line and you'll suddenly, you know, try to merge it and you'll see eight lines or like 80 lines and everything's moved around.

00:20:06 So this is, yeah, one of our big focus in the near future for Azure notebooks is

00:20:10 how do you make sure that source control is as easy as possible for notebooks?

00:20:14 And, you know, we were just talking to a user last week who was like, we tried to use GitHub with notebooks, but then it got too complex.

00:20:20 So we all just had, you know, they were a team of four.

00:20:22 They all created their individual notebooks.

00:20:24 And then in the end, one person was tasked with copying the bits and pieces that were good.

00:20:27 It's your job to make the final notebook.

00:20:29 Yeah, you know, they got the short of the stick.

00:20:31 Yeah.

00:20:32 Uh-huh.

00:20:32 So, you know, we were talking to a bunch of users, as I said, like that to understand not just having GitHub integrated right here,

00:20:40 because that doesn't solve the issue with the formatting of notebooks and that still doesn't make it perfect.

00:20:44 But making sure that we have a complete, super easy end-end experience for that problem in the notebooks world.

00:20:50 It sounds tricky.

00:20:51 And it sounds like the code thing that you guys are doing maybe sidesteps that.

00:20:55 Right.

00:20:55 Yeah.

00:20:56 We tried to solve that by avoiding using notebook files.

00:21:00 That's why we convert everything into a PIE file.

00:21:03 Now you can use source control and everything around it.

00:21:06 It's just plain code.

00:21:07 Right, and the output goes somewhere else.

00:21:08 Yes.

00:21:09 And it's not part of the diff or whatever.

00:21:11 Right, right.

00:21:12 But you can actually export the results as a notebook file if you want to go back.

00:21:17 Like if you want to share the results with someone, send someone a notebook file.

00:21:21 So we joke that wrong and I fight, but we work really closely together because so many scenarios are,

00:21:27 I explore in notebooks.

00:21:28 Now I want to build a .py file and VS Code.

00:21:31 And maybe I make some changes that I actually want to now share that as an updated notebook.

00:21:35 We work very hardly to make that end-to-end complete scenario that's super easy.

00:21:40 Yeah, that's cool.

00:21:41 I guess while we're on the subject, maybe we could talk about like collaboration.

00:21:45 If I'm working on an Azure notebook, I go over there.

00:21:48 Can I share that kind of Google Docs style?

00:21:51 With collaboration?

00:21:52 Not yet.

00:21:53 We're thinking about how we could maybe leverage something like VS Code Live Share,

00:21:56 where you could do live sharing with individual people and watch them edit all within the same document.

00:22:01 But this is something that has come up in a few notebooks products before and then sometimes been rolled back

00:22:07 because it's not super easy with the formatting.

00:22:10 But yeah, so right now in Azure Notebooks, you can share a notebook publicly and you can clone it.

00:22:15 And we can collaborate that way, but not yet with the live co-editing.

00:22:18 Yeah, cool.

00:22:19 That's something you can do in VS Code with the Visual Studio Live Share feature.

00:22:22 Yeah, maybe people don't know about that.

00:22:24 I did talk to Dan Taylor in the previous episode, but maybe people didn't hear so.

00:22:28 Live Share enables real-time co-editing and co-debugging across different machines or across different OS.

00:22:35 So the idea is any number, I guess up to 30 at the moment, any number of developers can collaborate real-time.

00:22:45 And it's not just screen sharing.

00:22:47 It's real session share, being shared.

00:22:49 So anyone can make changes to the same code base and everybody else can see it and you can run the code and debug and everyone else can see that too.

00:22:58 So essentially you can encourage a lot of scenarios around like pill programming or just remote troubleshooting.

00:23:07 And we also see like that being used in classroom settings too.

00:23:10 Like a teacher is hosting a session with 30 students looking at the same thing.

00:23:16 And that's pretty interesting.

00:23:17 That actually generated a lot of interesting scenarios.

00:23:20 Yeah, I bet it did like office hours, but I'll help you by just being on your system basically, right?

00:23:26 Yeah, absolutely.

00:23:27 So we actually extended that functionality beyond the basic support.

00:23:32 So now we have added the Jupyter support on top of Live Share as well.

00:23:36 So now you can imagine you're working on your notebook, you want some help and somebody else can connect to your session, you can run a cell.

00:23:45 And both of your machines are going to see the plots, the data frames and everything the same on the screen.

00:23:51 So that's pretty cool.

00:23:52 Yeah, that seems super cool.

00:23:53 Like one of the problems, of course, especially I think in data science would be the actual data, right?

00:23:59 Like if you have a gigabyte of data and then you're talking to that from your notebook or from these like notebook-like PyFiles, it's one thing to say, well, yeah, you can just grab the notebook or grab the Python file out of GitHub.

00:24:11 But then there's a gig of data, you got to get to them somehow, right?

00:24:15 So being able to like connect in and just sort of run in place would be cool.

00:24:19 Yeah, actually, everything happens on the host machine.

00:24:21 Meaning if the guest machine doesn't have the same setup, same environment setup, that's okay because nothing is required on the guest machine.

00:24:31 You literally just need VS Code installed.

00:24:34 And then all the like building and IntelliSense debugging and all the packages, environment settings, everything is streamed from the host machine.

00:24:43 So you can literally see everything exactly the same.

00:24:45 Yeah, that's really nice.

00:24:46 You know, I have some friends who did a lot of paired programming.

00:24:49 It was always, well, let's set up a virtual machine and like do a shared remote desktop so we can both type or other like weird things.

00:24:55 Yeah, it's a lot of work to get us set up.

00:24:58 I'm really excited about this.

00:24:59 This is cool.

00:25:00 And how about on Azure Notebooks?

00:25:01 Can you like, if I have a gig of data, can I like upload that in there?

00:25:05 Like what's the story with the data backing them?

00:25:07 Yeah, so you can either store things locally in Azure Notebooks within your project.

00:25:12 And so if you cloned it, you'd clone that data with and none of that's going to your local machine.

00:25:16 So you don't have to worry about those things.

00:25:18 It's all Azure hosted.

00:25:19 It happens really quickly.

00:25:19 The cloud is fast.

00:25:21 So yeah, you can also, you know, connect to an Azure Blob store.

00:25:25 So for instance, in the demo Ron and I are doing today, we put a bunch of pet images that we're classifying in a Blob store and we pull them down in Azure Notebooks and then send it out and test it on our web service from there.

00:25:36 Yeah, that's cool.

00:25:37 I guess that would be the most cloud natural cloud native sort of solution is we'll put it in like cloud storage and then talk to it or read it or write it.

00:25:44 Right, right.

00:25:44 Yeah, okay.

00:25:45 Yeah, that's pretty awesome.

00:25:46 So I know that Visual Studio Code is free, right?

00:25:50 Free open source and so on.

00:25:51 Yes, everything we do here.

00:25:53 The Python extension and Jupyter support is part of the Python extension, which is also all free at open source.

00:25:59 So I don't need to install anything else.

00:26:01 It's just like when the Python extension updates itself, then magically.

00:26:05 It's all in there.

00:26:06 It's in there.

00:26:06 Okay, super cool.

00:26:07 What about Notebooks?

00:26:08 Notebooks is free.

00:26:09 Okay.

00:26:10 You can, you know, we let you run for free on our hosted compute.

00:26:14 You can connect to an Azure VM if you want a more beefy machine, GPUs, etc.

00:26:20 You can connect to an Azure VM, in which case those would be paid.

00:26:23 Right, so I would pay for like a fancy VM that has GPUs and then I would talk to it?

00:26:27 Yes, exactly.

00:26:28 How does that work, right?

00:26:29 Like instead of, I wouldn't just go to my VM I set up and just like pip install Jupyter and do stuff there, right?

00:26:36 Like it sounds like it would be different.

00:26:37 Yeah, so we actually use something called a data science virtual machine in Azure.

00:26:41 And with that, Jupyter's already installed there.

00:26:44 So from Azure Notebooks, you just, we have an easy compute picker that'll automatically populate with the list of your data science virtual machines that you have access to.

00:26:52 You just click on it, hit run, and everything just works.

00:26:55 And you're running your notebook on that VM.

00:26:57 Yeah, that's cool.

00:26:58 Are there like scientists and companies and stuff using that a lot to do cool stuff?

00:27:02 Yeah.

00:27:02 We have a bunch of companies as well as education, research.

00:27:06 We see a lot of researchers using it, especially because for the free classroom settings, people use that a lot.

00:27:12 Yeah, that seems pretty cool.

00:27:14 One of the things I saw on the Azure Notebooks that I thought was kind of cool is a lot of different languages supported.

00:27:20 Yes.

00:27:21 Yeah, so what languages are, can I run there?

00:27:23 I mean, there's Python, obviously.

00:27:24 So Python 2 and 3, and then Fsharp and R.

00:27:28 Okay.

00:27:29 So Fsharp is kind of surprising, right?

00:27:30 Fsharp is like a functional .NET programming language, which I haven't really done very much with.

00:27:36 But what I didn't see there was Csharp.

00:27:38 And I figured if you're going to have Fsharp, maybe you would also just throw in Csharp for the fun of it.

00:27:42 Like, that's kind of interesting.

00:27:43 Why not?

00:27:43 It's something we're thinking about.

00:27:45 We haven't, you know, we see so much of our usage is Python.

00:27:48 So from that, we really focus on making that our optimal experience.

00:27:52 And that's where most of our energy goes.

00:27:53 But we definitely do hear requests every now and again for Csharp.

00:27:58 And it's one of those, similar to what I was talking about earlier, where you see so much Python usage with notebooks, but there's so many other scenarios.

00:28:04 And Csharp is a perfect example.

00:28:06 You know, how can you experiment with Csharp on notebooks?

00:28:08 So something we love to do, just haven't done yet.

00:28:11 Yeah, yeah, sure.

00:28:12 No, I mean, I think definitely focusing on Python and Python 3, that's like the sweet spot, right?

00:28:17 Of course.

00:28:17 But just, yeah, the Fsharp being there kind of stood out to me.

00:28:21 So if I'm building these notebooks or even with VS Code, like, what are some of the other things in Azure that people are using and connecting to?

00:28:30 Like, I know there's a bunch of other data science, machine learning stuff going on there.

00:28:33 Oh, yeah.

00:28:34 What are some of the cool scenarios?

00:28:35 So the very basic thing we can start with is definitely just beefy machines, right?

00:28:40 Yeah.

00:28:40 Give me some GPUs.

00:28:42 Right, GPUs, faster machines.

00:28:43 And then, so on top of that, Azure provides what we call data science VMs.

00:28:49 These are, think of those as VMs pre-installed with, like, data packages pre-installed.

00:28:54 So when you go there, everything is already there.

00:28:56 Like, Jupyter Notebooks is installed.

00:28:57 All those packages are already there.

00:29:00 So you can definitely connect to that.

00:29:01 We have Windows.

00:29:02 We have Linux.

00:29:03 Different OSs, depending on what you want.

00:29:05 So that's kind of the fairly common use case of Azure resources.

00:29:09 Of course, you can use storage if you want to store data there.

00:29:12 So you can do all that already.

00:29:15 On top of that, Azure also provides a service that's machine learning specific called Azure Machine Learning Service.

00:29:22 It is a comprehensive set of services that covers the entire workflow in machine learning.

00:29:28 So starting with data.

00:29:29 So Azure Machine Learning Service can help you manage data.

00:29:33 Like, we provide what we call a data store, which is part of the service.

00:29:37 So you don't have to manage your storage separately.

00:29:40 Machine Learning Service knows where to find your data for training, for example.

00:29:44 I see.

00:29:44 It's probably, you don't have to, like, use the blob storage API.

00:29:47 Yeah, and then you figure out how to connect to that thing, right?

00:29:50 Yeah, exactly.

00:29:50 So Azure Machine Learning Service is part of the whole world.

00:29:52 The machine learning service manages the whole world for you.

00:29:55 And then moving on, of course, for training, you need more compute.

00:29:58 Like VMs we talked about.

00:30:00 So Azure Machine Learning Service can help you manage compute as well at scale.

00:30:04 So you can say, I want 50 machines, up to 50 machines, but scale them back down if I'm not using them.

00:30:12 Which is the best part because I'm terrible at controlling my costs.

00:30:15 Right.

00:30:15 Scale down to zero.

00:30:16 Yeah, scale down to zero.

00:30:18 But you can scale up to as many as you want pretty fast.

00:30:22 Yeah, that's cool.

00:30:22 And that's good that if you forget.

00:30:23 Right.

00:30:24 Yeah.

00:30:24 Which I always do.

00:30:26 Yeah, you won't spend all your money.

00:30:27 Right, right.

00:30:28 Especially when they're like, you know, you have like a 16-node GPU cluster.

00:30:32 Right.

00:30:32 Keep them running for days.

00:30:34 That'll be...

00:30:35 Yeah, it's a big bill.

00:30:36 Yeah.

00:30:36 So it also helps you manage your training jobs.

00:30:39 So you have different training runs and you have different results you want to keep around.

00:30:45 So Azure Machine Learning Service can help you manage all that.

00:30:48 So for example, you have one experiment that has like 100 repeated runs.

00:30:52 Each run has different results.

00:30:54 And at the end of a run, you generate a different model file.

00:30:57 So that's all being stored as part of a service.

00:31:00 So you can always go back, look at a model and go back and say, oh, this is the run I did that got to this model.

00:31:07 So you can always trace back.

00:31:09 So that's all managed.

00:31:11 And then of course, once you have the model at the end of training, you can download it to local and do whatever you want with it.

00:31:17 Right.

00:31:17 But also you could have the Machine Learning Service manage it for you.

00:31:21 Imagine if you have multiple models and you have multiple versions that becomes a nightmare to manage.

00:31:27 So you can have Machine Learning Service to manage all that in a central location.

00:31:32 Not only that, but also once you have that registered with the service, it's super simple to turn the model into a runnable service.

00:31:39 Like literally, we can do that in five minutes.

00:31:41 That's cool.

00:31:42 Turn that into a service that's running in a single container that Azure can spin up for you fairly quickly.

00:31:48 Really, five minutes, everything's done.

00:31:50 Then you can start using this model already.

00:31:52 So you talked about this pet image.

00:31:54 Yes.

00:31:54 So what are you trying to find from these pet images?

00:31:58 Yeah.

00:31:58 So the end result is basically you can send our web service an image of a pet, cat or dog, not like an obscure pet.

00:32:05 Not a lizard.

00:32:05 Yeah.

00:32:06 And our model will send back probabilities of different breeds.

00:32:11 So if you send a golden retriever, I had my roommate wanted to test it with her golden retriever from home.

00:32:16 So send that.

00:32:16 And it got 99.7% confident that it was a golden retriever.

00:32:20 That's awesome.

00:32:21 Yeah.

00:32:21 So you could do that like with this thing she's talking about, right?

00:32:24 Yeah.

00:32:24 You turn it up and you say turn it into a service.

00:32:26 Yeah.

00:32:26 And then it's like a HTTP post an image to it or something.

00:32:29 And then it says, here's a JSON result.

00:32:31 Yeah.

00:32:32 Exactly.

00:32:32 So we're going to talk about all that in our build talk.

00:32:35 Yes.

00:32:36 Oh, yeah.

00:32:36 Which is now available online at the time of this podcast.

00:32:39 Yeah.

00:32:41 We can put a link to it in the show notes actually thanks to the power of time travel and recording

00:32:46 and all that.

00:32:47 This portion of Talk Python To Me is sponsored by Backlog from NewLab.

00:32:52 Developers know the importance of organization and efficiency when it comes to collaborating on a team.

00:32:57 And Backlog is the perfect collaborative task management software for your team.

00:33:02 With Backlog, you can create tasks, track bugs, make changes, give feedback, and have team conversations right next to your code.

00:33:08 You track progress with features like Gantt and Burndown charts.

00:33:11 You document your processes right alongside your wikis.

00:33:15 You can integrate with the tools you use every day like Slack, Jira, and Google Sheets.

00:33:18 You can automatically register issues from email or web form submissions.

00:33:22 Take your work on the go using their top rated mobile apps available on Android and iOS.

00:33:27 Try Backlog for your team for free for 30 days using our special URL at talkpython.fm/backlog.

00:33:33 That's talkpython.fm/backlog.

00:33:38 You know, one thing that I saw when I was going through your website that I thought was super cool was this LIGO project.

00:33:45 So, you know, Python has been at the center of a bunch of super cool science stuff, right?

00:33:51 Like, Kyle Cranmer and his team did a bunch of stuff with Python around the Higgs boson discovery.

00:33:57 There was Dr. Katie Bowen and the black hole picture.

00:34:02 And then the LIGO experiment, which is detecting, like, you know, I still just don't have my mind around, like, general relativity.

00:34:09 But, like, the space-time, you know, with, like, the curvature of gravity and all that.

00:34:14 And so, the idea is if, like, there's enough of a disturbance in it, it should have a wave, right?

00:34:21 And, you know, Einstein predicted that.

00:34:23 But just recently, the LIGO project detected black holes colliding and actually captured that.

00:34:30 And, you know, that was Azure Notebooks, apparently.

00:34:33 Yeah, they do use Azure Notebooks.

00:34:35 I'm not sure if it was used for the specific black hole collision.

00:34:38 Yeah, yeah, yeah.

00:34:39 They do use it, yeah.

00:34:40 I think it's just so cool that Python and Notebooks, in particular, seem to be showing up around all this, like, super cool science.

00:34:48 I guess, let me ask both of you, you know, when you talk to people who are coming into the Python world and into the notebook type of space, what are they coming from?

00:34:58 Is that, like, MATLAB or other tools?

00:35:00 You know, like, where are they coming from?

00:35:01 I see a lot of users coming from R and RStudio.

00:35:05 That's kind of the world.

00:35:07 But they see, like, some of they still, I've seen users who use a mix of those two languages.

00:35:12 They still feel like R has done something really well and they already have things set up there.

00:35:17 But they also see, like, all these Python packages that make things easy.

00:35:21 So they wanted to use that as well.

00:35:23 So I definitely see a lot of that.

00:35:25 Yeah, I think what's cool about Python is you do kind of land on it from a lot of different paths.

00:35:30 So I had a user I was talking to last week who was saying, you know, I feel like they're business analysts and they've been using Excel for so many years.

00:35:37 And they were like, I feel like Python has become the next thing once you've learned Excel.

00:35:41 And now, you know, you want to do more advanced things or go from Excel into Python.

00:35:44 But then you'll talk, I was talking to a researcher a couple of weeks ago who also teaches a course.

00:35:48 And he was saying their course was in MATLAB two years ago.

00:35:52 Then they moved to R for a year.

00:35:54 And now they're standardizing across their department on Python.

00:35:58 Because it is so, they're like, people would start in MATLAB.

00:36:01 Then they need R for a different course.

00:36:03 And it was just too much.

00:36:04 But they felt like Python would cover all their courses, use cases and make their students happy.

00:36:09 Yeah, that's pretty interesting.

00:36:10 I'm sure they have a little bit of whiplash going on.

00:36:12 Yeah, I know.

00:36:13 But Python's interesting because it's not just useful for this like focused data analysis.

00:36:19 Right.

00:36:20 Like if I go and learn MATLAB and I say I'm getting a degree in math or biology or whatever,

00:36:26 and then I leave and I'm not still doing research in biology, my MATLAB skills are probably not helpful.

00:36:32 For the most part, right?

00:36:34 It's not like, well, I'm going to go and like get recruited to work as a MATLAB person.

00:36:38 Maybe, but not nearly to the extent that Python skills will like open up the door to parallel careers.

00:36:45 And so I think whenever I think of students or academic programs, I think, you know,

00:36:49 it's really good that they're doing something like Python, even if it weren't Python,

00:36:53 something that is like a general skill independent of like the research or the PhD or whatever, right?

00:36:59 And I know they've standardized like high school, the AP curriculum in the US has standardized on Python

00:37:05 for being the introductory language, which I thought was really cool because when I took it, it was Java.

00:37:09 And I kind of never used Java.

00:37:11 Right.

00:37:12 Yeah.

00:37:13 Yeah.

00:37:13 Python is definitely what used in so many different areas.

00:37:17 Like for one, being able to build web apps, that's huge.

00:37:20 And in the data science area and beyond those two, we also see a lot of just general purpose scripting using Python.

00:37:28 Yeah.

00:37:28 And on top of whatever else they're using, right?

00:37:31 Yeah.

00:37:32 Yeah.

00:37:32 And the IoT stuff as well, right?

00:37:34 Like it's, you got CircuitPython and MicroPython.

00:37:36 Oh, yeah.

00:37:36 That's super cool.

00:37:37 So I think that's pretty cool.

00:37:38 Now, one thing I did want to ask you about, because I think this is super positive, but I don't really know why it's so different in data science.

00:37:46 I feel like in data science, the core projects, NumPy, Jupyter, and whatnot, are well-funded, at least compared to, say, Flask for web development or, you know, SQLAlchemy.

00:37:58 Like you go and you look at NumPy, and it's got like, I don't remember exactly, like Sloan Foundation funding and DARPA funding maybe.

00:38:07 But there's like these large groups funding these data science projects.

00:38:10 Why do you think data science, open source, gets so much support like this, whereas a lot of the rest of Python kind of doesn't?

00:38:18 I mean, it's not like Instagram isn't worth, you know, billions of dollars and based on Python as well.

00:38:23 Or, you know, there's a hundred examples like that.

00:38:25 Do you have thought?

00:38:26 Since I'm relatively new to the area, to the space, I'm not super familiar with those particular projects and how they got funded.

00:38:34 But I feel like, just make a feel, like the popularity in the space, like interest in the space, just AI and data science in general got a lot of attention, for sure, from all sorts of people.

00:38:47 And it's not just like, hey, we build this for fun, right?

00:38:52 But also, we want to take AI, we want to build that into our businesses.

00:38:56 And that's something serious, that it better make good predictions, right?

00:38:59 If this is going to impact my business or people's real life, like making predictions for patients and that serious stuff.

00:39:08 So we need to get it right.

00:39:09 It better work great.

00:39:10 All those packages we rely on, right?

00:39:12 They're fundamental to the prediction and data analysis.

00:39:16 And that might be why it's easier to get attention and funded because the value to the business, like we see in real life.

00:39:24 I have a guess for myself as well, but I want to hear your thoughts.

00:39:27 Yeah.

00:39:27 I was thinking something similar just in terms of the enterprise use cases.

00:39:32 And of course, there's all the power of buzzword and data science.

00:39:36 Is it based on AI?

00:39:37 We're going to pay for that.

00:39:38 Yeah, I love that.

00:39:38 Yes.

00:39:39 AI infuse everything.

00:39:41 So I think that likely definitely helps.

00:39:43 And then like you were referencing a few of those projects where, you know, science and research, which might be more ingrained in grant worlds versus something like Instagram.

00:39:52 Exactly.

00:39:53 Like there's already like a grant infrastructure, right?

00:39:56 Right.

00:39:56 Like it's super normal to go, I'm going to apply for a $3 million grant for this project.

00:40:02 Right.

00:40:02 Right.

00:40:02 And it's, I guess, because it lives in that world so much, maybe that's a little bit why.

00:40:06 Yeah.

00:40:07 I don't know.

00:40:07 It's interesting.

00:40:08 Yeah.

00:40:08 The other reason I was thinking is the data scientists usually report to like executives.

00:40:14 That helps too.

00:40:15 Leverage those one-on-ones.

00:40:18 Yeah.

00:40:19 Exactly.

00:40:19 You know, yeah, we need a little bit of support here.

00:40:22 Yeah.

00:40:23 So let's see.

00:40:24 I got a few other things I want to ask you about before we run out of time here.

00:40:28 So, you know, not too long ago, GitHub was acquired by Microsoft.

00:40:31 Like what changes have you seen internally or like in the Azure data science side of things as a result?

00:40:38 Actually, long before the acquisition, Microsoft internal teams have already started to adopt Git for source control, like in our internal teams.

00:40:49 That has happened even before this.

00:40:51 So I would say after the acquisition, there's definitely more use of Git, GitHub.

00:40:57 And also we see more integrations that we are building with GitHub being a front door to developers.

00:41:04 And so more integration into like Visual Studio Code, better experience there.

00:41:09 And we also build new features on GitHub as a result of GitHub being part of Microsoft.

00:41:15 Yeah, that's cool.

00:41:16 And you guys did do the virtual file system stuff contribution back to GitHub so that you could actually put Windows in there.

00:41:22 Because apparently it was broken.

00:41:24 Catherine, how about you?

00:41:25 Yeah, it's been super exciting.

00:41:27 I mean, like Ron was saying, I mean, Git is so ubiquitous that we were using it a lot beforehand.

00:41:32 But now the acquisition has just opened the door to so many opportunities in terms of product integrations.

00:41:39 And it kind of has reshifted a lot of our thinking across our different products, particularly in developer division where Ron and I work.

00:41:45 What should we build into our product first?

00:41:47 What would be a good integration where we could leverage GitHub for this?

00:41:51 It's opened up a bunch of new scenarios and hopefully customers will continue to see the value from it.

00:41:56 Yeah, that's cool.

00:41:56 Everybody at Microsoft uses Git now.

00:41:58 Yeah.

00:41:59 Even as PMs, we write documentation.

00:42:02 And then we're checking there, have to use Git.

00:42:06 Microsoft Docs are all on Git now, which is fun.

00:42:09 Yeah, all our documentations run on Git.

00:42:11 So that's one single system that we use.

00:42:13 Yeah, that's super cool.

00:42:14 So with Azure Notebooks, what's the version control story?

00:42:18 I know what it is for the Python.

00:42:20 PY files.

00:42:21 Just check them into GitHub or wherever.

00:42:23 Yeah, so for Azure Notebooks right now, you can launch a terminal within Azure Notebooks that'll connect you to the container you're running your project in.

00:42:33 And then from there, you can use the Git command line as you're used to.

00:42:36 And we also have two views in Azure Notebooks.

00:42:39 There's the vanilla classic Jupyter UI.

00:42:41 And then you can also use the JupyterLab UI and install any Git extensions you want to in either of those ecosystems.

00:42:48 That's cool.

00:42:48 Yeah, I hadn't really thought about that.

00:42:49 I guess it is baked into JupyterLab probably, right?

00:42:52 Yeah.

00:42:52 Yeah.

00:42:53 Cool.

00:42:53 So one thing that I did think was pretty neat is on the Azure Notebook page, you have a bunch of featured projects that are kind of cool.

00:42:59 So maybe I could talk a little bit about something.

00:43:02 So there's one that talks about getting started with Azure machine learning.

00:43:06 That's pretty cool.

00:43:06 But then the second one was the Python Data Science Handbook by Jake Vanderplass.

00:43:11 Yes.

00:43:11 That's cool.

00:43:12 Yeah.

00:43:12 Maybe you want to talk about those a little bit?

00:43:13 Like just how people can find them as well?

00:43:15 Yeah.

00:43:16 We feature a few projects that are six or so that we kind of rotate in or out depending on new releases or anything like that.

00:43:23 Jake's book is usually always there because people love that.

00:43:26 And we love it.

00:43:27 It's kind of our, it's such a big book of notebooks.

00:43:30 Yeah.

00:43:30 Listeners aren't familiar with it.

00:43:32 It's like a whole O'Reilly book written all in Jupyter Notebook.

00:43:35 So it's a massive GitHub repository.

00:43:37 So we'll use it for like stress testing our systems and stuff because it's so big.

00:43:41 It's kind of become our de facto standard.

00:43:43 But we also have things like I think University of Cambridge Introduction to Python course is featured there, which is super cool.

00:43:49 And it's really great for all of our education scenarios that use Azure notebooks to see that.

00:43:54 And then it also feeds a lot of online course inspiration as well.

00:43:58 So we'll see a lot of people coming from different EDU, Coursera courses.

00:44:01 So we try to feature that content as well.

00:44:03 That's cool.

00:44:04 You see people creating like online courses and books and stuff like that.

00:44:07 Yeah.

00:44:08 And something like any cloud hosted notebooks makes such a great case for online courses.

00:44:13 So you don't have to spend 10 minutes telling people how to install things.

00:44:17 And then you're not there in person to help them with any installation.

00:44:20 So being able to use something like Azure notebooks where everything's just ready and you can clone this repo and you're good to go.

00:44:26 It's definitely has been super helpful.

00:44:28 Yeah, that's cool.

00:44:29 Definitely when I've done training and stuff, it's like a lot of it is let's make sure everyone can run Python.

00:44:34 Like just type Python 3 dash capital V.

00:44:37 Tell me what you get.

00:44:39 Are you okay?

00:44:40 Is it a number?

00:44:41 Is it 3, 4?

00:44:44 That's a very important first step.

00:44:46 Right.

00:44:47 Yeah.

00:44:47 Yeah.

00:44:48 Yeah.

00:44:48 So we try to limit the time spent there and maximize time spent on code.

00:44:51 Yeah.

00:44:52 That's cool.

00:44:52 Yeah.

00:44:53 Did you hear about the announcement of Python shipping with the next version of Windows?

00:44:57 The next major release in Windows?

00:44:59 This was Steve Dower talked about this at PyCon.

00:45:03 And basically, you know, Steve got Python 3.7 in the Windows store.

00:45:08 Yes.

00:45:09 And that was cool.

00:45:09 So if you need to go install it, that would set it up.

00:45:11 Yeah.

00:45:12 So apparently now Python is going to come as a little shim in Windows.

00:45:16 So if you type Python.

00:45:17 Right.

00:45:18 Yeah.

00:45:18 It'll pop up that store thing and say click here to install it and then type it again.

00:45:22 Yes.

00:45:22 I know Steve worked on that hard.

00:45:24 Finally made it happen.

00:45:26 Yeah.

00:45:26 That's awesome.

00:45:27 I really think that's going to be a huge, huge deal.

00:45:29 I mean.

00:45:30 Yeah.

00:45:30 So many people get lost in that first initial hurdle.

00:45:33 So hopefully it'll help.

00:45:34 Yeah.

00:45:35 I mean, it still doesn't solve all the, you know, pip install this.

00:45:37 Right.

00:45:38 First step.

00:45:40 Yeah.

00:45:40 We're getting closer.

00:45:41 It's at least there's one less bit of friction there.

00:45:44 Yeah.

00:45:44 Definitely.

00:45:44 Yeah.

00:45:45 Yeah.

00:45:45 So let's see.

00:45:46 I guess, you know, maybe you could each chime in about what was your favorite thing that

00:45:50 you saw or coolest thing here at the conference?

00:45:53 I'm super excited about the new terminal that ships in Windows.

00:45:57 Yeah.

00:45:57 That sounds pretty cool.

00:45:58 Yeah.

00:45:58 I haven't used it myself, but it looks pretty cool.

00:46:01 And then I already heard of like comments about, hey, I want to switch to Windows now for development

00:46:09 because now I can do everything on one machine.

00:46:12 Like it's pretty cool.

00:46:14 I'm looking forward to start using it.

00:46:15 Yeah.

00:46:16 That thing has not changed in a really long time.

00:46:18 Yeah.

00:46:19 I know.

00:46:19 And I'm glad they focused on that.

00:46:21 Yeah.

00:46:21 Because command line is the center of developer workflow.

00:46:25 And we definitely think that's important too.

00:46:29 Yeah.

00:46:30 I feel that's actually an interesting point.

00:46:31 I wonder how much of like people sort of doing a lot of open source other like Microsoft

00:46:37 outreach to other platforms outside of Windows, bringing people that kind of live in that space,

00:46:42 which is often more command line terminal driven back end, like sort of going like,

00:46:47 all right, why is it such a bad experience here on Windows?

00:46:49 Yeah.

00:46:49 On the command prompt and like sort of get, I wonder like there's probably some cycle there.

00:46:53 Oh yeah, absolutely.

00:46:54 They have definitely went through like multiple iterations.

00:46:58 Yeah.

00:46:59 But because it used to work very differently than the other platforms.

00:47:02 Yeah.

00:47:03 But now it is important that we get that right and make that better.

00:47:06 So make Windows a great development environment again.

00:47:10 Very cool.

00:47:10 Yeah.

00:47:11 That's a good one.

00:47:11 How about you?

00:47:11 Yeah.

00:47:12 So I thought the terminal and the WSL, Windows subsystem for Linux announcements were all really

00:47:17 great.

00:47:17 I also really like, we talked a bit about Azure machine learning and originally that had their

00:47:23 own APIs, which they'll still maintain, but they're also introducing compatibility with MLflow,

00:47:28 which is a Databricks project from the Spark community around managing ML life cycles.

00:47:34 And I thought that was another cool combination where we're enabling the open source community

00:47:39 on Azure platforms.

00:47:40 So I was excited about that as well.

00:47:42 All right.

00:47:42 Big things that are like work with that API.

00:47:44 Yeah.

00:47:45 Yeah.

00:47:45 So you can use the MLflow APIs and it'll work perfectly with your Azure machine learning workspace

00:47:50 and track the model life cycle.

00:47:52 Very nice.

00:47:52 Yeah.

00:47:53 That's really, really cool.

00:47:54 All right.

00:47:55 Well, one more question and then I'll ask you the two sort of closing questions, of course.

00:48:00 So the final question is, I feel like over the last five, six years, Python has been super, super

00:48:07 popular.

00:48:07 Have you seen the Stack Overflow article?

00:48:10 Yeah.

00:48:10 The incredible growth of Python?

00:48:12 Yeah.

00:48:12 Yeah.

00:48:12 It's in one of our slide deck versions.

00:48:15 So there it has this huge, huge growth and it's really positive.

00:48:19 It's so fun to be part of that community.

00:48:21 Oh, yeah.

00:48:21 Absolutely.

00:48:22 Super exciting.

00:48:23 It's super cool.

00:48:23 I feel like a lot of those, the new folks to that graph, they're not everyone, but a lot

00:48:30 of them are coming from the data science side of things.

00:48:33 What do you think about this?

00:48:34 Yeah, absolutely.

00:48:34 I've seen an article actually on Stack Overflow last year, analyzing why Python is growing

00:48:41 so fast.

00:48:42 I think one of the conclusions that author made was because of AI and machine learning becoming

00:48:48 more and more popular in just like any businesses.

00:48:52 Because it used to be a very tech-driven thing that's only high-tech companies are doing that.

00:48:57 But now we want to infuse AI everywhere in all different businesses.

00:49:00 And then we see that start to come up.

00:49:04 A lot of developers want to do something with AI.

00:49:07 And then Python being a natural choice for doing that job.

00:49:11 That's why we've seen a lot of Python growth coming definitely from that space.

00:49:16 And actually, one of the data points he pointed to was the fact how fast Pandas as a data package

00:49:24 has grown in the past few years.

00:49:26 as one indication that how much data science work, the workload has been growing in the

00:49:31 Python world.

00:49:32 So it's super exciting.

00:49:33 So like Python is now the number four on the most popular language list.

00:49:38 Went from like, was it six or seven last year?

00:49:42 Yeah, it's definitely growing.

00:49:43 And now it's number four.

00:49:45 Yeah, we're definitely kind of working on the most very hot area where there's Python and

00:49:52 AI and the intersection in between.

00:49:54 Oh yeah, you put those two together.

00:49:55 Thanks for keeping us employed.

00:49:56 Yes.

00:49:57 But yeah, I was like wrong with saying, I also think it's cool because I think you can see

00:50:02 the power of Python really quickly in a data science scenario, especially with the community

00:50:07 around it and all of the different packages you can use.

00:50:10 I think that really shines in data science and ML cases.

00:50:13 I mean, even just with like visualization libraries, there's so many and there's so many that do

00:50:17 such like cool, powerful things that I feel like when people are first getting exposed to

00:50:22 Python through data science, it really shines and shows the power of it.

00:50:26 Yeah, it's true because you can really quickly generate a graph or a model or something like

00:50:31 that.

00:50:31 Yeah, like a 3D plot.

00:50:32 It's awesome.

00:50:33 Yeah.

00:50:34 As opposed to like, let's build a little game, right?

00:50:36 Like it still takes a while to build tic-tac-toe.

00:50:38 Right, right, right.

00:50:39 And then it just looks like a terminal thing.

00:50:41 You're like, well, it's not so impressive.

00:50:42 Exactly, yeah.

00:50:43 Yeah, that's a pretty good point.

00:50:44 All right, cool.

00:50:45 Well, it's been a super interesting compare and contrast, the .py versus the Notebooks way

00:50:52 of working.

00:50:53 But thanks for both of you for sharing the stories.

00:50:55 Let me ask you a quick question before we get out of here.

00:50:57 Although I'm especially wrong, I'm sure I'm going to be able to guess your answer here.

00:51:01 So are you going to write some Python code?

00:51:05 What editor do you use?

00:51:06 We just do the code.

00:51:07 You guess right.

00:51:08 Right on.

00:51:10 I said, if I'm writing some Python code, usually Notebooks, but I used to be a Vimmer,

00:51:15 and now I use a Vim extension for VS Code when I'm in an editor environment.

00:51:20 That's cool.

00:51:21 You kind of brought them together.

00:51:22 Yeah, I brought them together.

00:51:23 It's just been great.

00:51:24 Yeah, it's nice.

00:51:25 I need my key mapping.

00:51:27 Yeah, it's all in there.

00:51:28 So when I can get that with the power of VS Code, I'm happy.

00:51:32 Then you're happy.

00:51:33 Awesome.

00:51:33 And then, you know, there's so many packages out there that people might know about.

00:51:38 So have you come across one that's like, oh, wow, this is really cool.

00:51:42 People should check it out.

00:51:43 Notable PyPI package?

00:51:45 I haven't like deeply doing this myself, but I looked at like Plotly, which does 3D plots.

00:51:52 It's one of the first things I tried when I first joined the team.

00:51:56 And we actually can render that inside VS Code too.

00:51:59 And you can interact with that plot.

00:52:00 And I thought that was super cool.

00:52:02 Oh, yeah.

00:52:02 That's pretty cool.

00:52:03 Yeah.

00:52:03 Plotly is great for graphics.

00:52:05 Yeah, I'm a sucker for a good visualization library too.

00:52:09 So yeah, I like Boca.

00:52:11 I like Plotly.

00:52:13 Yeah, I think those are probably my favorites.

00:52:15 I'm trying to think if there's any.

00:52:16 Yeah, those are really cool.

00:52:17 I'll throw one out that's notebook related that's not graphical is Paper Mill.

00:52:22 Have you tried Paper Mill?

00:52:23 Oh, yeah.

00:52:23 Yes, Paper Mill is very cool.

00:52:24 Yeah, kind of turn your notebook into almost like a function you can call or something like that.

00:52:29 Yeah.

00:52:29 It's pretty wild.

00:52:30 All right.

00:52:30 Well, thank you both for being on the show.

00:52:32 It's been a lot of fun to talk about it.

00:52:34 I'm happy to see the work you all are doing in VS Code around sort of editorifying notebooks.

00:52:40 And also, yeah, good work on the cloud stuff.

00:52:42 Yeah.

00:52:42 Thank you.

00:52:43 Awesome.

00:52:43 Super fun.

00:52:44 Thanks for having us.

00:52:45 Yeah.

00:52:45 Yeah.

00:52:45 Thanks for being here.

00:52:46 Bye.

00:52:46 This has been another episode of Talk Python To Me.

00:52:49 Our guests on this episode have been Rong Lu and Catherine Kampf.

00:52:53 And it's been brought to you by Linode and Backlog.

00:52:56 Linode is your go-to hosting for whatever you're building with Python.

00:53:00 Get four months free at talkpython.fm/Linode.

00:53:03 That's L-I-N-O-D-E.

00:53:05 With Backlog, you can create tasks, track bugs, make changes, give feedback, and have team conversations

00:53:12 right next to your code.

00:53:13 Try Backlog for your team for free for 30 days using the special URL talkpython.fm/backlog.

00:53:20 Want to level up your Python?

00:53:23 If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

00:53:28 Or if you're looking for something more advanced, check out our new async course that digs into

00:53:33 all the different types of async programming you can do in Python.

00:53:36 And of course, if you're interested in more than one of these, be sure to check out our

00:53:40 Everything Bundle.

00:53:40 It's like a subscription that never expires.

00:53:42 Be sure to subscribe to the show.

00:53:44 Open your favorite podcatcher and search for Python.

00:53:47 We should be right at the top.

00:53:48 You can also find the iTunes feed at /itunes, the Google Play feed at /play,

00:53:53 and the direct RSS feed at /rss on talkpython.fm.

00:53:57 This is your host, Michael Kennedy.

00:53:59 Thanks so much for listening.

00:54:01 I really appreciate it.

00:54:02 Now get out there and write some Python code.

00:54:04 I really appreciate it.

00:54:24 Thank you.

