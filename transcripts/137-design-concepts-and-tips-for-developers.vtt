WEBVTT

00:00:00.001 --> 00:00:02.660
Design has become a critical element in software.

00:00:02.660 --> 00:00:09.720
Back in the 90s, it was fine to produce and sell battleship gray apps that worked but did not do much to delight.

00:00:09.720 --> 00:00:16.640
Today, design is table stakes, and knowing how to design applications yourself or work with designers is a key skill.

00:00:16.640 --> 00:00:22.240
This episode, you'll meet James Stone, who straddles that gap between developers and designers. He's both.

00:00:22.240 --> 00:00:26.860
He has a bunch of tips for improving your design skills as well as working with designers.

00:00:27.140 --> 00:00:32.540
This is Talk Python To Me, episode 137, recorded October 30th, 2017.

00:00:32.540 --> 00:00:52.860
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:00:52.860 --> 00:00:57.000
This is your host, Michael Kennedy. Follow me on Twitter, where I'm @mkennedy.

00:00:57.000 --> 00:01:03.420
Keep up with the show and listen to past episodes at talkpython.fm, and follow the show on Twitter via at Talk Python.

00:01:03.420 --> 00:01:06.880
Talk Python To Me is partially supported by our training courses.

00:01:06.880 --> 00:01:11.660
Do you want to learn Python but you can't bear to subscribe to yet another service?

00:01:11.660 --> 00:01:14.940
At Talk Python Training, we hate subscriptions too.

00:01:14.940 --> 00:01:20.500
That's why our course bundle gives you full access to the entire library of courses for one fair price.

00:01:20.960 --> 00:01:21.620
That's right.

00:01:21.620 --> 00:01:27.560
With the course bundle, you save 70% off the full price of our courses, and you own them all forever.

00:01:27.560 --> 00:01:33.680
That includes courses published at the time of the purchase, as well as courses released within about a year of the bundle.

00:01:33.680 --> 00:01:39.160
So stop subscribing and start learning at talkpython.fm/everything.

00:01:40.200 --> 00:01:40.860
Hey, James.

00:01:40.860 --> 00:01:42.460
Welcome to Talk Python.

00:01:42.460 --> 00:01:43.300
Hey, Michael.

00:01:43.300 --> 00:01:43.940
Thanks for having me.

00:01:43.940 --> 00:01:45.060
Yeah, it's great to have you here.

00:01:45.060 --> 00:01:50.000
I'm super excited to talk about design, web design, and general application design.

00:01:50.000 --> 00:01:54.760
Because this is originally something I found super challenging and daunting for me.

00:01:54.760 --> 00:02:00.400
And then once I really learned it properly, I felt like, wow, I have this whole wide world that's been unlocked.

00:02:00.400 --> 00:02:05.760
And now I have this power that a lot of people are afraid of, which I think makes it even better, the stuff you can do.

00:02:05.760 --> 00:02:09.500
So hopefully we can share that with everyone and a lot of your tips from your experience.

00:02:09.500 --> 00:02:09.900
Nice.

00:02:09.900 --> 00:02:10.440
Yeah, absolutely.

00:02:10.440 --> 00:02:14.160
So before we get into those topics, though, let's start with your story.

00:02:14.160 --> 00:02:15.320
How did you get into programming in Python?

00:02:15.320 --> 00:02:16.400
I have a funny story.

00:02:16.400 --> 00:02:19.320
I'll talk about really quickly how I learned to program.

00:02:19.320 --> 00:02:23.780
I'm the product of a clinical microbiologist and an RV salesman.

00:02:24.000 --> 00:02:29.240
And my mom, the scientist, was taking me to laboratories, had me looking through microscopes.

00:02:29.240 --> 00:02:35.140
And she bought me an Atari 600XL back in the 80s and taught me to program in BASIC.

00:02:35.140 --> 00:02:37.340
And I have no idea why she did this.

00:02:37.340 --> 00:02:39.960
And she never programmed again ever since then.

00:02:39.960 --> 00:02:43.020
But it kind of turned into a career.

00:02:43.020 --> 00:02:46.960
And so I always had a fascination with programming and computers.

00:02:46.960 --> 00:02:48.440
It was kind of a hobby.

00:02:48.760 --> 00:02:56.580
I got into hacking computers, got kind of kicked out of high school, or you might say like in air quotes, like asked nicely to leave.

00:02:56.580 --> 00:02:59.940
They said, you know, you just can't stay here kind of thing.

00:02:59.940 --> 00:03:00.760
Yeah.

00:03:00.760 --> 00:03:01.380
Well, OK.

00:03:01.380 --> 00:03:02.720
What was the reason for that?

00:03:02.720 --> 00:03:04.400
It was maybe an ends to a means.

00:03:04.400 --> 00:03:06.260
But I lived on a small island in Washington.

00:03:06.260 --> 00:03:08.760
And this is at the beginning of the Internet.

00:03:09.000 --> 00:03:14.260
So it was long distance to Seattle to connect to bulletin boards, which is what I was doing when I was younger.

00:03:14.260 --> 00:03:17.060
So there was a library system there.

00:03:17.060 --> 00:03:18.520
So I started hacking their system.

00:03:18.520 --> 00:03:26.340
I figured out a way to kind of break out into Telnet and start accessing interesting shell servers over in Seattle, kind of circumventing the long distance thing.

00:03:26.640 --> 00:03:36.720
I basically kept doing the same thing in high school and had kind of a knack for finding maybe exploits or ways to kind of break software, use it in ways it's not supposed to.

00:03:36.720 --> 00:03:41.840
I think at the end, they had me on my own computer that was disconnected from the network.

00:03:41.840 --> 00:03:46.160
So I kind of roll this cart into the library with my programming books.

00:03:46.160 --> 00:03:49.100
And I would be like programming out in the middle of the library, if you can imagine.

00:03:49.440 --> 00:03:52.880
And then, of course, we got caught again, my friends and I.

00:03:52.880 --> 00:03:54.600
And so they're like, this is enough.

00:03:54.600 --> 00:03:55.520
You're out of here.

00:03:55.520 --> 00:03:58.960
And so I went to college through a thing called Running Start Program.

00:03:58.960 --> 00:04:00.840
That's really interesting.

00:04:00.840 --> 00:04:11.980
You know, I feel like a lot of times structured education misses opportunities to take people that are super creative and find like, you know, these rules, they don't actually have to exist, like whatever.

00:04:11.980 --> 00:04:17.420
And like turn that into they probably could have like redirected your energy into something like super powerful.

00:04:17.700 --> 00:04:20.320
But instead, they just said, we're going to unplug you.

00:04:20.320 --> 00:04:20.860
Yeah.

00:04:20.860 --> 00:04:21.680
Yeah.

00:04:21.680 --> 00:04:29.980
I think I'm kind of a product of of that system, not really having a good a good avenue for those interests or pursuits.

00:04:29.980 --> 00:04:31.600
So they were scared.

00:04:31.600 --> 00:04:32.420
Yeah, sure.

00:04:32.420 --> 00:04:32.760
Of course.

00:04:32.760 --> 00:04:33.620
And it was all bizarre.

00:04:33.620 --> 00:04:35.540
Nobody knew really what to do with the Internet anyway.

00:04:35.540 --> 00:04:45.360
And that idea of like the way you got on the Internet was to find like something you tried to access over one of these dial up things that then failed and dropped you to a talent shell.

00:04:45.360 --> 00:04:48.980
That's I haven't heard that from any other people, but I've experienced this as well.

00:04:48.980 --> 00:04:49.600
It's interesting.

00:04:49.600 --> 00:04:50.480
Awesome.

00:04:50.480 --> 00:04:50.800
Okay.

00:04:50.800 --> 00:04:52.360
So that was high school.

00:04:52.360 --> 00:04:54.700
And you were going to start there in programming.

00:04:54.700 --> 00:04:54.940
Yeah.

00:04:54.940 --> 00:04:56.100
So I had kind of a start in programming.

00:04:56.100 --> 00:04:58.540
And, you know, in high school, they had like a Pascal class.

00:04:58.540 --> 00:04:59.760
I was super fired up about that.

00:04:59.760 --> 00:05:01.560
I was doing some C and some things.

00:05:01.560 --> 00:05:04.820
But but I wouldn't call myself like a professional programmer.

00:05:05.320 --> 00:05:06.860
I certainly had a lot of interest.

00:05:06.860 --> 00:05:15.280
And what happened is a friend of mine helped me get a job in the 1990s at a startup where I learned to kind of become like a professional programmer on the job.

00:05:15.280 --> 00:05:21.020
And so basically they threw at me the Java 1.2 or Java 2 Bible, which was pretty thick in those days.

00:05:21.020 --> 00:05:22.400
And they said, get to it.

00:05:22.980 --> 00:05:27.620
And I think it was a few weeks later, I was writing production code and in charge of data classes.

00:05:27.620 --> 00:05:31.920
So I started mostly doing back end programming and Java back in the 90s.

00:05:31.920 --> 00:05:32.140
Yeah.

00:05:32.140 --> 00:05:32.420
Nice.

00:05:32.420 --> 00:05:33.540
And that was the heyday of Java.

00:05:33.540 --> 00:05:36.600
Sun was super big, powerful corporation.

00:05:36.600 --> 00:05:38.180
Java was a big revolution.

00:05:38.180 --> 00:05:38.820
Right.

00:05:38.820 --> 00:05:41.540
It was like so much better than C at the time, for example.

00:05:41.540 --> 00:05:42.320
Things like this.

00:05:42.320 --> 00:05:42.500
Yeah.

00:05:42.500 --> 00:05:43.000
Yeah.

00:05:43.000 --> 00:05:44.040
So much more portable.

00:05:44.040 --> 00:05:46.220
Byte code was going to be the future of everything.

00:05:46.220 --> 00:05:48.700
You just wrote it once and it ran everywhere.

00:05:48.700 --> 00:05:49.240
It was amazing.

00:05:49.240 --> 00:05:49.640
Yeah.

00:05:49.640 --> 00:05:52.320
It's so funny to think back about those those days.

00:05:52.320 --> 00:05:53.600
You know, fast forward.

00:05:53.600 --> 00:05:55.780
I've always been involved with programming computers.

00:05:55.780 --> 00:05:59.300
I went back to school because, you know, I kind of dropped out of college.

00:05:59.300 --> 00:06:00.880
Eventually went back to college.

00:06:00.880 --> 00:06:07.660
I actually studied art and then found a way to kind of combine computer science and art after kind of having a short career.

00:06:08.320 --> 00:06:10.140
As a professional programmer.

00:06:10.140 --> 00:06:19.000
And so now coming from it from a little bit different angle, the lead into Python is always been interested in Python.

00:06:19.000 --> 00:06:27.440
And recently my wife started doing astrophysics work and she did a master's and now she's working on astronomy, PhD.

00:06:27.440 --> 00:06:34.520
And so she taught herself to code in Python, you know, for scientific purposes in about a month with some books.

00:06:34.520 --> 00:06:38.300
And so it's very interesting for me because she never did really any programming at all.

00:06:38.300 --> 00:06:44.880
And so now I guess maybe because I have some affinity towards Python, I try to focus my projects into that.

00:06:44.880 --> 00:06:48.380
So when I have to do an API or something, Flask is my tool at hand.

00:06:48.380 --> 00:06:53.740
When I have to crunch some numbers or things, I find myself reaching for Python in those times.

00:06:53.740 --> 00:06:55.020
That's a really interesting story.

00:06:55.020 --> 00:06:56.920
Python has taken over astrophysics.

00:06:56.920 --> 00:06:57.880
I think so.

00:06:57.880 --> 00:07:00.340
I mean, I'm not that far in it.

00:07:00.480 --> 00:07:05.180
But from my observation, it's either that or the old school people.

00:07:05.180 --> 00:07:06.680
They're like, no, it's Fortran.

00:07:06.680 --> 00:07:07.600
Pretty hardcore.

00:07:07.600 --> 00:07:07.920
Yeah.

00:07:07.920 --> 00:07:08.940
That's right.

00:07:08.940 --> 00:07:14.480
That's definitely a giant chasm between those two languages in terms of time and space.

00:07:15.040 --> 00:07:25.140
But yeah, like a lot of the APIs for controlling a lot of the major new telescopes that are going up are done in, you know, basically the APIs for them are Python.

00:07:25.140 --> 00:07:31.020
And a lot of the machine learning stuff to discover a lot of the stuff in the visual stuff is Python.

00:07:31.020 --> 00:07:34.500
So yeah, it's really interesting to see that she taught herself that to get going there.

00:07:34.620 --> 00:07:34.840
Cool.

00:07:34.840 --> 00:07:39.760
That gives us a lot of what you've been, you know, what got you to where you are today.

00:07:39.760 --> 00:07:41.080
But now what do you do day to day?

00:07:41.080 --> 00:07:44.100
What I do day to day now, I've got a little bit of a split life.

00:07:44.100 --> 00:07:48.980
But for most of what I do, I work as an independent design systems engineering consultant.

00:07:48.980 --> 00:07:57.600
And so some of the things I'm working on there, I write daily emails to kind of a secret list that I have, record videos and tutorials.

00:07:57.600 --> 00:08:00.740
Sometimes I'm researching new tools and processes.

00:08:00.740 --> 00:08:03.140
Sometimes I'm giving talks and webinars.

00:08:03.620 --> 00:08:07.420
And so some of those, again, might be to this kind of secret inner circle list.

00:08:07.420 --> 00:08:11.080
I just gave a talk recently here in Turku, where I'm at in Finland.

00:08:11.080 --> 00:08:15.620
And I work a lot with design and development teams.

00:08:15.620 --> 00:08:22.900
And often it might even just be one designer or two designers in development teams, helping them to work on their web projects.

00:08:22.900 --> 00:08:28.200
On the other side of what I do, I teach an assistant teaching professor at Penn State.

00:08:28.200 --> 00:08:32.900
And I teach an online course, which I'll put in quotes, but creative code is what we focus on.

00:08:32.960 --> 00:08:40.800
And it's teaching artists and designers how to program in processing, which is a simplified API for Java.

00:08:40.800 --> 00:08:41.620
Okay, cool.

00:08:41.620 --> 00:08:46.860
So the creative code part is basically simplified coding for creative types.

00:08:47.060 --> 00:08:47.900
Yes.

00:08:47.900 --> 00:08:52.580
So if you've ever programmed in Java, you might have had to deal with its very heavy API.

00:08:52.580 --> 00:08:55.680
And so you end up with all this boilerplate to do very simple things.

00:08:55.680 --> 00:09:04.280
Not simple things, but do like, you know, 3D OpenGL animation and having things render quickly, like a kind of a game style buffer.

00:09:04.280 --> 00:09:05.940
And so processing does this all for free.

00:09:05.980 --> 00:09:09.340
And you just use very simple calls like rect or ellipse.

00:09:09.340 --> 00:09:12.480
And then you can do those in two dimensions or three dimensions very easily.

00:09:12.480 --> 00:09:13.040
That's really cool.

00:09:13.700 --> 00:09:22.560
So the first thing that I want to talk to you about as our proper topic is this concept that I opened with, which is web design as a superpower.

00:09:22.560 --> 00:09:36.460
Because I really honestly don't know what the breakdown of my audience is and how many folks out there say, yeah, I feel like totally comfortable as designing the stuff that I work on or even interacting with designers on the stuff that I work on.

00:09:36.460 --> 00:09:36.600
Right.

00:09:36.620 --> 00:09:41.440
Maybe people are infrastructure folks and like design is basically colored terminal.

00:09:41.440 --> 00:09:42.780
Maybe they work on web apps.

00:09:42.780 --> 00:09:44.500
Maybe they work on other kinds of apps.

00:09:44.500 --> 00:09:51.300
But I feel like there's a lot of stuff in design that feels really scary and daunting.

00:09:51.300 --> 00:09:52.860
People feel like, oh, I'm not an artist.

00:09:52.860 --> 00:09:56.520
You kind of came from the programming side and then you studied art and then you came back.

00:09:56.520 --> 00:10:00.100
Maybe talk to us about that journey a little bit and where it got you to.

00:10:00.100 --> 00:10:01.500
Yeah, it's very interesting.

00:10:01.840 --> 00:10:15.100
And I can understand that apprehension a little bit from if you're an engineer and you've never done really any art or you've maybe you feel you're creative in certain ways, but maybe design and art or maybe not your forte or you've never had experience.

00:10:15.100 --> 00:10:18.180
It can certainly be daunting because there's a whole nother language.

00:10:18.180 --> 00:10:26.320
And sometimes the way people are realizing things, it seems difficult to kind of get your head around what that is.

00:10:26.620 --> 00:10:41.700
But I'm a firm believer that creativity is something that everyone has and also that art and design and I think even music is something that can be taught or you might have perhaps an aptitude for it.

00:10:41.700 --> 00:10:49.100
But I don't think that in general people are kind of like born an artistic design genius and that's it.

00:10:49.100 --> 00:10:57.140
Like they may have an aptitude where people have given the right kind of tools and resources to that person as they're developing.

00:10:57.140 --> 00:11:05.520
But I've seen all sorts of people, especially when I work at Penn State, I actually teach a lot of computer scientists, right, and software engineers.

00:11:05.520 --> 00:11:08.300
They take my course because they want to do something created.

00:11:08.300 --> 00:11:09.460
They want to do something visual.

00:11:09.460 --> 00:11:14.060
And so that might be a little bit of a struggle coming in, but it's something that can be taught.

00:11:14.060 --> 00:11:15.200
It's something that can be learned.

00:11:15.600 --> 00:11:19.420
It's something that's accessible, just like you've learned to program, right?

00:11:19.420 --> 00:11:22.280
You kind of have these little pieces that build upon each other.

00:11:22.280 --> 00:11:23.640
It's the same thing in design.

00:11:23.640 --> 00:11:27.940
And I think it's just a little bit different, perhaps, in the approach.

00:11:27.940 --> 00:11:32.420
It's more of a bottom-up approach than the top-down that we're maybe perhaps used to.

00:11:32.420 --> 00:11:37.860
But don't let design scare you if you have some interest or interest in art.

00:11:37.860 --> 00:11:38.900
I totally agree with that.

00:11:38.900 --> 00:11:40.900
And like, how do you think people should get started?

00:11:40.900 --> 00:11:45.540
Short of, like, I'm going to just go back to school and do graphic design, too.

00:11:45.540 --> 00:11:53.960
How is somebody who maybe, like, works on the web but doesn't really do the UI stuff other than just, like, get it in place and pass it off, right?

00:11:53.960 --> 00:11:58.000
What are a couple of steps people can take to really, like, get better at that?

00:11:58.000 --> 00:12:01.920
Yeah, to get better at design, I think, you know, it's a couple things.

00:12:02.680 --> 00:12:10.160
One is if you start to recognize the patterns of design, like, if you've worked with a designer and they say, hey, this is not quite right.

00:12:10.160 --> 00:12:10.900
It should be this.

00:12:10.900 --> 00:12:12.920
Maybe asking the question, why?

00:12:12.920 --> 00:12:14.240
Like, why is that not right?

00:12:14.240 --> 00:12:20.300
And so there's just, like, how we have variables and functions and all these types of...

00:12:20.300 --> 00:12:21.780
Why can't I put it all in one function?

00:12:21.780 --> 00:12:23.160
It's only 3,000 lines.

00:12:23.160 --> 00:12:23.720
Exactly.

00:12:24.080 --> 00:12:26.940
And so in design, there's, like, these principles of alignment.

00:12:26.940 --> 00:12:30.400
So often designed elements will be aligned with each other.

00:12:30.400 --> 00:12:33.500
So, you know, the baseline of the font will often line up.

00:12:33.500 --> 00:12:35.980
So you don't want them off by a pixel or 10 pixels.

00:12:35.980 --> 00:12:38.280
And so you see this alignment principle, right?

00:12:38.280 --> 00:12:40.520
And there's, you know, balance and contrast.

00:12:40.520 --> 00:12:42.100
And there's a lot of other principles.

00:12:42.100 --> 00:12:50.200
And so you could pick one of these or you could pick up a book that talks a little about it and just try and recognize what those are as you're working.

00:12:50.200 --> 00:12:55.760
And then what I do, and I think maybe this is because I have a lot of experience with code.

00:12:55.760 --> 00:13:00.560
Often I think about visual ideas in terms of code, especially when it relates to the web.

00:13:00.560 --> 00:13:06.700
So I jump very quickly from a sketch, for example, to, like, just building it out in code.

00:13:06.700 --> 00:13:10.560
Like, sometimes I skip that whole using a visual design application.

00:13:10.560 --> 00:13:11.080
Right.

00:13:11.080 --> 00:13:11.420
Okay.

00:13:11.420 --> 00:13:11.700
Yeah.

00:13:11.700 --> 00:13:15.660
So you do your initial work with pen and paper or with a stylus type thing?

00:13:15.660 --> 00:13:16.040
Yeah.

00:13:16.040 --> 00:13:20.220
So in the past, it's been pen and paper with, like, Sharpies and, like, Copic markers.

00:13:20.220 --> 00:13:24.660
And lately, it's been on, like, an iPad Pro.

00:13:24.660 --> 00:13:26.020
And part of that's for me.

00:13:26.020 --> 00:13:27.420
I recently moved abroad.

00:13:27.420 --> 00:13:30.480
And so it's very heavy to carry a lot of paper and those types of supplies.

00:13:30.480 --> 00:13:34.580
I did bring my Copic pens and a Sharpie, which I don't think they actually have in Europe.

00:13:34.580 --> 00:13:37.060
They have another type of pen that they use that I have to find.

00:13:37.060 --> 00:13:39.900
But, yeah, it's just whatever I have available.

00:13:40.060 --> 00:13:42.340
But the iPad Pro is quite good for sketching, I think.

00:13:42.340 --> 00:13:43.160
Yeah, that's cool.

00:13:43.160 --> 00:13:47.920
I have an iPad Pro with an Apple Pencil, like the 12 point whatever inch one.

00:13:47.920 --> 00:13:59.040
And I actually, part of this getting better design experience I went through was I got some drawing apps and I decided I'm going to force myself how to learn to draw on this thing.

00:13:59.100 --> 00:14:02.220
Even though drawing was something I thought I was very bad at.

00:14:02.220 --> 00:14:05.000
And, you know, with a lot of practice, you can do it.

00:14:05.000 --> 00:14:05.960
It's a pretty nice experience.

00:14:05.960 --> 00:14:06.400
Yeah.

00:14:06.400 --> 00:14:07.540
No, I totally agree.

00:14:07.540 --> 00:14:10.980
And I think the experience in the iPad Pro is quite good with that.

00:14:10.980 --> 00:14:11.840
The Apple Pencil.

00:14:11.840 --> 00:14:16.220
I actually studied for a time traditional animation and illustration.

00:14:16.220 --> 00:14:23.980
So I have a lot of experience with this like kind of like hardcore Florentine style, drafting the human figure, working very quickly.

00:14:23.980 --> 00:14:28.260
And, you know, I would say maybe I drew good at the community college.

00:14:28.260 --> 00:14:34.300
But when I got into this, you know, when I tried to get into this ranked program at San Jose State, those guys are hardcore.

00:14:34.300 --> 00:14:37.960
Like I remember that they said, this guy draws like Michelangelo.

00:14:37.960 --> 00:14:40.940
And so I think if you're thinking, oh, I can never be an artist.

00:14:40.940 --> 00:14:43.540
Like I was drawing and I thought I was quite good.

00:14:43.540 --> 00:14:45.920
And then here I'm like next to Michelangelo.

00:14:45.920 --> 00:14:49.000
So there's always going to be someone better, right?

00:14:49.000 --> 00:14:51.720
Well, it also depends on what you're trying to get out of it, right?

00:14:51.780 --> 00:15:00.040
Like, are you trying to improve what you're doing versus are you trying to do animation, like you say, basically fully become like a digital artist?

00:15:00.040 --> 00:15:06.660
So you also had a resource you wanted to reference about this sort of design as a superpower concept.

00:15:06.660 --> 00:15:06.980
Yeah.

00:15:06.980 --> 00:15:09.760
So I haven't taken any of her classes, but I have spoken with her.

00:15:09.760 --> 00:15:11.240
But her name is Laura Elizabeth.

00:15:11.240 --> 00:15:14.480
And she's got a website, lauraelizabeth.co.

00:15:15.020 --> 00:15:20.180
And she's got some really fantastic articles focused towards developers.

00:15:20.180 --> 00:15:28.880
And especially maybe if you've had some exposure to frameworks or you've done a little bit of web design, maybe not full on UI design, but maybe more on the back end.

00:15:28.880 --> 00:15:37.080
And you're, say, building out some smaller projects, personal projects, and you want them to look a little bit more designed, like more so than just say out of the box bootstrap.

00:15:37.420 --> 00:15:43.220
She's got some really great resources you can look at where she talks about, like, color choices, right?

00:15:43.220 --> 00:15:46.020
Like, alignment, kind of basic principles of design.

00:15:46.020 --> 00:15:49.020
But she explains them in a very developer-friendly format.

00:15:49.020 --> 00:15:49.480
Oh, yeah.

00:15:49.480 --> 00:15:50.440
That sounds really cool.

00:15:50.440 --> 00:15:52.480
I'll definitely link to Laura's stuff.

00:15:52.480 --> 00:15:56.480
Let's go ahead and actually talk about front-end frameworks first.

00:15:56.480 --> 00:16:04.400
Because I feel like if you sat somebody down with, like, just open up a new file, you say, okay, first thing you type is, you know, angle bracket HTML.

00:16:04.400 --> 00:16:06.220
You also get a CSS file.

00:16:06.220 --> 00:16:07.460
Design that.

00:16:07.460 --> 00:16:08.480
Like, build something beautiful.

00:16:08.480 --> 00:16:11.200
That's really super daunting for a lot of folks.

00:16:11.200 --> 00:16:18.280
But I feel like in the last five years or so, the front-end frameworks have really democratized design.

00:16:18.280 --> 00:16:25.420
Not in the super high-level sense, but, like, I can start from, like, 70% good with these front-end frameworks.

00:16:25.420 --> 00:16:29.560
So maybe tell us about front-end frameworks and some of the ones that are great.

00:16:29.560 --> 00:16:29.880
Yeah.

00:16:29.880 --> 00:16:35.580
So my exposure with front-end frameworks happened kind of, like, in the early days of responsive.

00:16:35.580 --> 00:16:42.360
And so this is kind of Zurb Foundation version to kind of bootstrap to simple stacking and responsive.

00:16:42.360 --> 00:16:47.500
But, I mean, what they've done for the web is, I think, nothing short of amazing.

00:16:47.500 --> 00:16:56.200
Because if you find pretty much any website that was built before these existed, because I think they've raised the bar in design for the stuff that's hand-coded.

00:16:56.200 --> 00:17:02.920
It's like you look at websites, you're like, wow, this is, like, from the 1990s or from, like, the early 2000s.

00:17:02.920 --> 00:17:04.460
There's, like, these two big gaps.

00:17:04.460 --> 00:17:05.700
You can, like, really spot it.

00:17:05.700 --> 00:17:08.220
The site has a Y2K problem, but it's not broken.

00:17:08.220 --> 00:17:10.900
It just looks like it.

00:17:10.900 --> 00:17:11.140
Exactly.

00:17:11.140 --> 00:17:15.920
I think, one, they take these design kind of patterns.

00:17:15.920 --> 00:17:22.340
They take these design trends and they package them all up into an easier-to-use UI toolkit.

00:17:22.340 --> 00:17:25.960
Like, you can just, instead of having to figure out how to create a button every time.

00:17:26.260 --> 00:17:42.680
Because if you actually, if you go, like you're saying, right, and you're, like, HTML and just start writing in some standard elements, it actually still looks a lot like 1995 or, like, the early Netscape or Mosaic if you don't actually spend the time to style it.

00:17:42.680 --> 00:17:50.000
And what the frameworks do is they kind of provide you a lot of how to get that reset in a much more modern way automatically.

00:17:50.460 --> 00:17:53.740
And then what I think they're also good for is a learning tool.

00:17:53.740 --> 00:17:59.700
So CSS, I think, is not that complex as a language.

00:17:59.700 --> 00:18:05.100
But there's a lot of complexity in, like, how you might use it to create visual effects.

00:18:05.100 --> 00:18:12.780
And especially when a lot of the things that we've been doing in the past, even the past few years, are kind of hacks, like float-based grids.

00:18:12.780 --> 00:18:16.000
And so there's a lot of kind of weird stuff that's not obvious.

00:18:16.300 --> 00:18:20.200
And so it helps you to learn those patterns and how people are creating things.

00:18:20.200 --> 00:18:25.900
Because you can just view the source and use the inspector and learn how the components are being built.

00:18:25.900 --> 00:18:27.560
I think you're totally right on with that.

00:18:27.560 --> 00:18:33.820
And there's also some of the underlying things that you get that are just non-obvious.

00:18:33.820 --> 00:18:41.860
What you were touching on before about, you know, the subtle color changes, the topography, the line spacing, the reset CSS.

00:18:42.220 --> 00:18:45.520
So Firefox doesn't look different than Safari or, you know, whatever, right?

00:18:45.520 --> 00:18:50.460
There's just so many subtle little things that you can kind of just take for granted rather than have to figure out how to do.

00:18:50.460 --> 00:18:55.420
And then it's down to using the widgets that what people probably mostly think of when they think of these frameworks.

00:18:55.420 --> 00:19:02.240
I think that's what a lot of people are thinking, like these accordions and tabs and this kind of interactive, more sliders and that kind of stuff.

00:19:02.240 --> 00:19:03.880
And that's certainly part of it.

00:19:04.220 --> 00:19:06.540
But yeah, a lot of it can just be CSS only.

00:19:06.540 --> 00:19:17.220
So until you get into some sort of interaction, which on the web is requiring, like when you click on something, you get some sort of reaction that's beyond the default of a button, which is a lot of things, obviously.

00:19:17.220 --> 00:19:19.400
But everything else is CSS only.

00:19:19.400 --> 00:19:23.160
And so that's really the JavaScript is just handling that interaction.

00:19:23.160 --> 00:19:24.800
There's a couple of really popular ones.

00:19:24.800 --> 00:19:25.700
There's Bootstrap.

00:19:25.700 --> 00:19:27.120
There's UIKit.

00:19:27.120 --> 00:19:28.460
There's Zurb Foundation.

00:19:28.460 --> 00:19:31.200
And you're actually pretty involved with Zurb, right?

00:19:31.200 --> 00:19:33.420
Yeah, I'm pretty involved with the Zurb Foundation.

00:19:33.420 --> 00:19:35.460
The secret, don't tell them.

00:19:35.460 --> 00:19:37.800
I actually got started on Bootstrap back in the day.

00:19:37.800 --> 00:19:44.940
But sometimes people start on Bootstrap and they switch over, but they have a little bit different focus in their philosophy.

00:19:44.940 --> 00:19:48.180
And I think they're better suited to certain projects.

00:19:48.180 --> 00:19:48.460
Sure.

00:19:48.460 --> 00:19:49.620
My site's based on Bootstrap.

00:19:49.620 --> 00:19:50.900
I've done a lot of Bootstrap.

00:19:50.900 --> 00:19:55.680
Primarily, I've chosen Bootstrap because, well, one, it was pretty early.

00:19:55.680 --> 00:19:57.800
And the other, there's a lot of themes for it.

00:19:57.800 --> 00:20:00.720
So I go grab stuff for it.

00:20:00.820 --> 00:20:07.360
But I'd love to hear your thoughts on, like, the pros and cons of each or, like, even just why Zurb is awesome over Bootstrap.

00:20:07.360 --> 00:20:08.060
Things like that.

00:20:08.060 --> 00:20:13.180
Because this is, a lot of times you have to choose that right at the beginning before you've even done a lot with it, right?

00:20:13.180 --> 00:20:15.020
And then you're kind of like, well, I'm not redesigning it now.

00:20:15.020 --> 00:20:15.500
It's done.

00:20:15.500 --> 00:20:16.740
Sure.

00:20:16.960 --> 00:20:22.200
I would say the reasons that you talked about are actually some of the great reasons to use Bootstrap.

00:20:22.200 --> 00:20:28.360
Bootstrap is one of the, probably the most popular framework by a much large, like a very large margin.

00:20:28.360 --> 00:20:30.340
And it's very developer friendly.

00:20:30.640 --> 00:20:33.840
The reason is, is it looks really designed outside of the box.

00:20:33.840 --> 00:20:38.260
And also, like you said, there's these themes that you can just plug in.

00:20:38.380 --> 00:20:45.040
So if you want a little bit different visual style, you can either get a free theme or purchase a theme, bolt that on, and there you go.

00:20:45.040 --> 00:20:46.600
It looks a certain kind of way.

00:20:47.440 --> 00:21:03.040
So it's very good if you're creating, like, I think an MVP, if you're creating kind of like your version 1.0, you don't have designers on board, or maybe you have designers on board, but you don't have the time to focus on, like, that much visual branding in the app.

00:21:03.040 --> 00:21:06.200
It's more about functionality, and it has to look okay enough.

00:21:06.200 --> 00:21:08.200
Or personal projects, right?

00:21:08.200 --> 00:21:09.200
Or you do hackathons.

00:21:09.200 --> 00:21:13.780
Like, this is the perfect type of thing, because you can just use Bootstrap and build upon it.

00:21:13.780 --> 00:21:26.140
And then I think, you know, you can make some pretty moderate changes and restyle it, but the themes are really kind of probably the more powerful way that you can get closer to the visual style that you're looking for.

00:21:26.140 --> 00:21:26.880
Yeah, I totally agree.

00:21:26.880 --> 00:21:28.080
But how about Zurb?

00:21:28.080 --> 00:21:29.180
What's awesome about Zurb?

00:21:29.180 --> 00:21:33.540
If you liked how that sounded, Zurb Foundation might not be the right fit for you.

00:21:33.540 --> 00:21:34.580
I got into it.

00:21:34.580 --> 00:21:38.220
There's, I think, really two reasons people use Zurb Foundation.

00:21:39.020 --> 00:21:40.420
One of them can just be an aesthetic.

00:21:40.420 --> 00:21:47.180
Like, some people like this very minimal aesthetic of, like, the Zurb Foundation, unstyled kind of look.

00:21:47.180 --> 00:21:49.740
And there's certainly some people that are doing that.

00:21:49.740 --> 00:21:55.120
But the most important thing, and what it was actually designed for, is for strong visual brands.

00:21:55.120 --> 00:21:59.300
And so it's actually not intended to be used that way out of the box.

00:21:59.300 --> 00:22:07.900
In fact, if you're using it that way, this is probably what Zurb would call, like, a layout or a wireframe that's done in code.

00:22:08.120 --> 00:22:12.140
And so what's intended is you use the framework kind of like a wireframe.

00:22:12.140 --> 00:22:15.920
And it's actually, you have to create a whole set of design on top of it.

00:22:15.920 --> 00:22:18.520
So it doesn't have, like, these subtle shadows and gradients.

00:22:18.520 --> 00:22:23.060
It's expected that you're going to add all of that afterwards based on a professional design.

00:22:23.060 --> 00:22:26.060
So you take, like, a mock and translate it to this framework.

00:22:26.060 --> 00:22:30.880
Right. So it provides the foundational building blocks and the typography and all those things I was talking about.

00:22:30.880 --> 00:22:35.420
But instead of going, and it's basically done, you say Engelbrack button.

00:22:35.420 --> 00:22:42.180
Maybe is it more of a framework for designers to go continue to build with than it is for developers to drop in and, like, keep doing their web stuff?

00:22:42.340 --> 00:22:48.180
Yes. I think it's much more a framework for designers because, like, the emphasis is on design.

00:22:48.360 --> 00:22:59.380
So if you're coming from, like, say, your app or your marketing site and you have fully realized, radically different than bootstrap visuals, right, for all the pages.

00:22:59.380 --> 00:23:01.540
And this is, like, how you're starting your process.

00:23:01.540 --> 00:23:03.460
And then you're trying to convert that.

00:23:03.460 --> 00:23:10.040
So foundation is going to be a better framework for you, whether you're a designer or a developer working on a team like that.

00:23:10.260 --> 00:23:14.380
Okay, cool. And are there some themes out there that you can go, Graham, that people built, like, landing pages?

00:23:14.380 --> 00:23:16.800
Or is you really, you're starting from the framework?

00:23:16.800 --> 00:23:22.400
You know, like, I know there's been some discussion on themes for foundation and, like, don't quote me.

00:23:22.400 --> 00:23:31.460
But I think there are some themes, but I've never used them because my experience has been building out these websites that have, like, a strong visual brand to it.

00:23:31.460 --> 00:23:36.540
This portion of Talk by Thunder Me is brought to you by Linode.

00:23:36.540 --> 00:23:40.560
Are you looking for bulletproof hosting that's fast, simple, and incredibly affordable?

00:23:40.560 --> 00:23:46.720
Look past that bookstore and check out Linode at talkpython.fm/Linode, L-I-N-O-D-E.

00:23:46.720 --> 00:23:51.040
Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:23:51.040 --> 00:23:55.980
They have 10 data centers across the globe, so no matter where you are, there's a data center near you.

00:23:55.980 --> 00:24:00.060
Whether you want to run your Python web app, host a private Git server, or a file server,

00:24:00.060 --> 00:24:09.340
you'll get native SSDs on all machines, a newly upgraded 200 gigabit network, and 24-7 friendly support, even on holidays, and a seven-day money-back guarantee.

00:24:09.340 --> 00:24:12.800
Want a dedicated server for free for the next four months?

00:24:12.800 --> 00:24:17.140
Use the coupon code Python17 at talkpython.fm/Linode.

00:24:17.820 --> 00:24:22.260
So maybe tell us some real-world examples that you've worked on with Zerb.

00:24:22.260 --> 00:24:28.380
Yeah, so I've done some work for agencies, subcontracting, so I can't really talk about the particulars of that.

00:24:28.380 --> 00:24:35.580
But one of the websites that I work with, and I think it's got a pretty strong visual brand as well, it's called Snowflake Stories, LLC.

00:24:36.540 --> 00:24:41.480
And it's a very interesting kind of solopreneur, self-funded startup.

00:24:41.480 --> 00:24:48.540
And what they do is they create children's stories that are completely customizable, where there's a cast of characters that resemble your family.

00:24:48.540 --> 00:24:59.100
And so we created this character builder that's kind of based loosely on the we, you know, the, I can't remember what it's called, the we, me, you know, we have the character we kind of customize.

00:24:59.600 --> 00:25:01.980
And so this is something that we created there.

00:25:01.980 --> 00:25:08.260
And what's nice is it's also mobile responsive, and we're using Angular and this kind of thing kind of in the background.

00:25:08.260 --> 00:25:11.560
But the styling of it is very visually distinctive.

00:25:11.560 --> 00:25:15.840
So I think that in this case, Server Foundation was a really good fit for it.

00:25:15.840 --> 00:25:18.340
And it's also an interesting project.

00:25:18.340 --> 00:25:28.740
And I think this is one of the benefits of working with Foundation, too, because I did a lot of what you might call like UX design, kind of solving the experience and what that was like.

00:25:28.900 --> 00:25:35.100
And then later on, we actually brought in a visual designer, a UI designer, Marcus Handa.

00:25:35.100 --> 00:25:43.440
And he, we came together, and then we actually won an award called the Ippy Award for one of the best publisher websites for that year.

00:25:43.440 --> 00:25:45.740
So I think it's International Publisher of the Year.

00:25:45.740 --> 00:25:48.320
Yeah, that's a really nice idea as well.

00:25:48.320 --> 00:25:52.240
Like have a book with your child as the character.

00:25:52.240 --> 00:25:54.140
And my daughter would go crazy for that.

00:25:54.140 --> 00:25:54.540
That's cool.

00:25:54.540 --> 00:25:56.180
The site looks nice.

00:25:56.180 --> 00:25:57.240
I'll link to it in the show notes.

00:25:58.200 --> 00:26:03.560
So maybe that's a good place to segue over to talk about interactions a little bit.

00:26:03.560 --> 00:26:08.980
In this case, there was a person who owned the company, created the books, and had the idea.

00:26:08.980 --> 00:26:10.500
And then they wanted to work with you.

00:26:10.500 --> 00:26:15.880
I suspect they were probably not a developer or they would have like put something slightly less nice together or whatever.

00:26:15.880 --> 00:26:20.280
But maybe let's focus it on like how developers should interact with designers.

00:26:20.580 --> 00:26:24.200
So I suppose sometimes people see this as like a frustrating thing.

00:26:24.200 --> 00:26:27.140
Like, you know, I built the site and it totally worked.

00:26:27.140 --> 00:26:31.580
But the designer said it's off by three pixels and it was the wrong color.

00:26:31.580 --> 00:26:37.520
And, you know, like what can people do to maybe make these like really great interactions and where people are supporting each other?

00:26:37.520 --> 00:26:39.020
Yeah, it's a great question.

00:26:39.420 --> 00:26:46.840
And I worked on a team recently where I came back to them and I told them actually that they had 147 or something like this wrong colors.

00:26:47.160 --> 00:26:50.840
And then I went through and fixed them and got it down to about seven or eight.

00:26:50.840 --> 00:26:51.360
So, yeah.

00:26:51.360 --> 00:26:52.720
And I can relate to that, too.

00:26:52.720 --> 00:27:04.960
I think I'm in a unique position maybe to talk a little bit about this because what I've been doing over the past few years is working with designers and dev teams and kind of a little bit being the go between and helping them to translate these ideas and communicate.

00:27:05.760 --> 00:27:16.180
But I think the biggest thing is to realize that as engineers, we have a really different agenda and a different focus than probably the designers.

00:27:16.180 --> 00:27:29.260
And so one is to kind of understand better what the designers are going for and maybe understanding a little bit what they mean when they say things like they have empathy for the user or what good user experiences.

00:27:29.780 --> 00:27:41.640
I think these are actually great things to tie into, but maybe the loss in translation, because I know that a lot of engineers, including myself, really care about the performance of the website.

00:27:41.640 --> 00:27:43.620
And I'm very focused on the front end.

00:27:43.620 --> 00:27:45.800
So I really want that front end to really pop.

00:27:45.800 --> 00:27:50.840
I want it to be fast, you know, not too many connections, like, you know, really smooth, really quick.

00:27:50.840 --> 00:27:53.280
And so we're actually kind of working towards the same thing.

00:27:53.280 --> 00:27:55.680
Like, so I want the user experience to be good as well.

00:27:55.680 --> 00:27:58.960
But sometimes it can get lost in translation, right?

00:27:58.960 --> 00:28:05.820
And so I think where that goes astray is, you know, you mentioned the wrong color are off by three pixels.

00:28:05.820 --> 00:28:21.760
But I think what I've seen that can kind of be a bigger problem is when there's a little bit of a detail in the design where you really need to kind of let the design team know early on or the stakeholder in the project that it's going to be expensive, right?

00:28:21.920 --> 00:28:24.740
Sometimes there's a little flourish, right?

00:28:24.740 --> 00:28:31.800
And that flourish is going to be like 10 times, you know, 10 times the time of some other task that you've got on this task list.

00:28:31.940 --> 00:28:34.760
And so I've actually been working with some designers lately.

00:28:34.760 --> 00:28:37.360
And when that's brought up, they're like, no, no, cut that.

00:28:37.360 --> 00:28:38.040
It's not important.

00:28:38.040 --> 00:28:45.060
So getting to, like, what's important, because sometimes I think what happens is that designers feel like they have to fight for their ideas.

00:28:45.060 --> 00:28:50.320
And so they have all these sketches and ideations, and then they're showing all these different versions, right?

00:28:50.320 --> 00:28:57.940
And so when you're finally interacting with them, you might be at this final version that they've had to fight tooth and nail, right?

00:28:57.940 --> 00:29:00.720
For they really want that flourish or whatever.

00:29:00.920 --> 00:29:09.600
And so they're kind of fighting for it, but not necessarily because they're fighting you, but just they've had to put a lot of energy into getting the design pushed forward.

00:29:09.600 --> 00:29:22.460
So I think if you can get involved in the design process earlier on and bring these things up, like if there's some, I'll put in air quotes, like crazy thing that you're, like, freaking out, like, how am I going to even do this in our system?

00:29:22.460 --> 00:29:24.620
Or is it going to be cross-browser?

00:29:24.620 --> 00:29:25.280
Yeah.

00:29:25.280 --> 00:29:27.980
They know it's HTML, right?

00:29:27.980 --> 00:29:28.960
They know it's HTML.

00:29:28.960 --> 00:29:29.880
It's not print.

00:29:29.880 --> 00:29:30.360
Come on.

00:29:30.360 --> 00:29:33.420
I want it always to be exactly the size.

00:29:33.420 --> 00:29:35.080
It's not 8.5x11.

00:29:35.080 --> 00:29:35.600
Come on.

00:29:35.600 --> 00:29:36.360
Yeah, exactly.

00:29:36.360 --> 00:29:37.500
Something like this, yeah.

00:29:37.500 --> 00:29:38.120
Yeah, exactly.

00:29:38.120 --> 00:29:43.720
And so, and I think when you gain more experience with it, with this translation, you can kind of spot things right off.

00:29:43.720 --> 00:29:52.540
And so I know for myself, like, I know if I'm working with Photoshop-based work, I can tell them already, like, look, the fonts are going to be the wrong weight, right?

00:29:52.540 --> 00:29:55.880
So it's not going to look as bold or as light as you think it's going to.

00:29:56.380 --> 00:30:01.400
I think sketch-based digital assets are working a little bit better, but there's still some translation there.

00:30:01.400 --> 00:30:04.600
So you can kind of start to have that conversation earlier.

00:30:04.600 --> 00:30:05.360
And I think it's good.

00:30:05.360 --> 00:30:17.040
It doesn't mean, like, you're going to hang out while they're sketching all the time, but just maybe to inject the engineering thought process a little earlier on so that it doesn't ruin your day, like, you know, a week or two weeks from then.

00:30:17.040 --> 00:30:29.500
Yeah, it seems to me like the design team probably spends a lot of time in boardroom meetings where there's the CEO or the major stakeholders who have, like, super lofty ideals about what they want built.

00:30:29.500 --> 00:30:31.460
And then they ask the designers to build it.

00:30:31.460 --> 00:30:37.760
And then the builders, the designers eventually get down to the developers and say, developers, this is what we've chosen, you know?

00:30:38.440 --> 00:30:44.400
Maybe, one, having some sympathy for the pressure that is on the other side of that story for the designers, right?

00:30:44.560 --> 00:30:54.900
And then you maybe try to, from a design perspective, try to get at least one representative for the dev team into those meetings so they're more involved in earlier.

00:30:54.900 --> 00:30:55.940
Yeah, I think so.

00:30:55.940 --> 00:31:06.820
And I think it can really help, especially if you're kind of in an environment where you're really siloed off, where, you know, designers are over there, we're over here, and we see them in the hallways, but we're not interacting as much.

00:31:06.820 --> 00:31:10.100
Or, you know, some places have places where it's much closer, right?

00:31:10.100 --> 00:31:11.200
Maybe you're sitting next to each other.

00:31:11.360 --> 00:31:15.880
But I think what can really help is, like you're saying, have someone who can kind of span the gap.

00:31:15.880 --> 00:31:17.660
And it could come from either a team, right?

00:31:17.660 --> 00:31:20.800
It could be a designer, maybe who's doing some code or has some aptitude.

00:31:20.800 --> 00:31:32.100
But getting someone who can kind of understand the visual nature of the front-end code and kind of take that on so that most teams that I've worked with have very specialized roles.

00:31:32.100 --> 00:31:34.820
And I wouldn't say the bulk of the team is doing front-end work.

00:31:34.820 --> 00:31:41.340
It's usually one person or, you know, you have maybe in a very large organization, a team of people doing this type of work.

00:31:41.340 --> 00:31:46.160
Or in some cases, for myself as a consultant, there's often been a gap.

00:31:46.160 --> 00:31:48.900
And so that's where I've kind of injected myself in the process.

00:31:48.900 --> 00:31:53.240
Because they have the designer, they've got the back-end team, and they don't know how to...

00:31:53.240 --> 00:31:54.560
They bring you in to be the bridge.

00:31:54.560 --> 00:31:55.220
Pretty much.

00:31:55.220 --> 00:31:59.060
And so I think that's something that can be really quite useful.

00:31:59.060 --> 00:32:01.920
And just to get involved more in the process earlier on.

00:32:01.920 --> 00:32:02.900
From both sides, too.

00:32:02.900 --> 00:32:03.500
Designers.

00:32:03.500 --> 00:32:05.740
Designers, you know, should get involved.

00:32:05.740 --> 00:32:11.780
Not telling you the nitty-gritty of what you're doing, but like at least letting you know what's coming down the pipe or this is what we're thinking.

00:32:11.780 --> 00:32:13.660
What do you guys think?

00:32:13.660 --> 00:32:15.200
It's going to take forever.

00:32:15.200 --> 00:32:15.980
Is it feasible?

00:32:15.980 --> 00:32:16.500
Right.

00:32:16.900 --> 00:32:18.080
How much do you want this?

00:32:18.080 --> 00:32:20.800
Are you willing to wait a month longer to have this?

00:32:20.800 --> 00:32:26.240
So you were touching on a couple things there that I think are interesting.

00:32:26.240 --> 00:32:31.760
And one is this workflow with the design team and the dev team.

00:32:32.380 --> 00:32:43.060
The projects where it's worked a lot better for me, as being a team member on the dev side mostly, has been where the designers and the developers work more closely together.

00:32:43.060 --> 00:32:51.540
Maybe they share a GitHub repo and the design sometimes at least is done in the CSS and in the app.

00:32:51.540 --> 00:32:59.760
And like where it's worked less well is where I've worked with people largely from a print background where they're like, oh, we're not going to touch the HTML CSS.

00:32:59.760 --> 00:33:00.500
We don't do that.

00:33:00.640 --> 00:33:04.040
What we'll do is we'll just give you this picture and you can just make this picture.

00:33:04.040 --> 00:33:06.600
And I found that to be a lot less helpful.

00:33:06.600 --> 00:33:08.840
I'm like, well, I can have a picture of it.

00:33:08.840 --> 00:33:11.240
What I need is to actually make the HTML look like the picture.

00:33:11.240 --> 00:33:13.040
That's where it's super, super hard, right?

00:33:13.040 --> 00:33:15.080
Because that's where the rubber meets the road.

00:33:15.080 --> 00:33:17.500
And so it's one thing to draw a picture and say, I want this.

00:33:17.500 --> 00:33:20.080
It's another to like say, here's how you get there.

00:33:20.080 --> 00:33:22.000
What do you think about that?

00:33:22.000 --> 00:33:23.000
I mean, there's this tension, right?

00:33:23.000 --> 00:33:26.380
Not every designer is a web developer, for example, but what do you think?

00:33:26.380 --> 00:33:30.460
Yeah, I think it's maybe in a lot of cases unfair to just tell.

00:33:30.460 --> 00:33:34.120
Well, designers, look, we need you to code or we need the code.

00:33:35.120 --> 00:33:37.660
However, you know, there's some more modern thoughts, right?

00:33:37.660 --> 00:33:42.020
And this might not be news to some designers or people in some circles, but there's some

00:33:42.020 --> 00:33:44.040
more modern ways of working on the web.

00:33:44.040 --> 00:33:45.900
One of them is this tool called Sketch.

00:33:45.900 --> 00:33:51.100
And it's not because it's an amazing drawing tool, although some people think that, but it's

00:33:51.100 --> 00:33:54.420
because it renders very close to what the browser is going to render.

00:33:54.420 --> 00:33:59.600
And if you are a designer and you understand how the web is built and you understand how the grid

00:33:59.600 --> 00:34:03.940
system is going to be displaced and you understand maybe a little bit about the box model, then you can

00:34:03.940 --> 00:34:07.200
create these beautiful designs that are very easy to hand off.

00:34:07.500 --> 00:34:10.040
And there's tools for that as well, right?

00:34:10.040 --> 00:34:11.860
There's a tool called Zeppelin IO.

00:34:11.860 --> 00:34:16.740
There's another one that I like lately called Simply, which is spelled in a very silly way.

00:34:16.740 --> 00:34:18.440
And I can't remember, so I won't quote it.

00:34:18.440 --> 00:34:19.740
Maybe that'll be in the show notes.

00:34:19.740 --> 00:34:24.300
And there's another one called Avocode, like avocado, but with code in it.

00:34:24.540 --> 00:34:29.000
And what these are, I like to call them automatic redlining tools.

00:34:29.000 --> 00:34:31.800
And so what you can do is you can load up that sketch file.

00:34:31.800 --> 00:34:35.780
The designer can do it, share it with the team, and you can just click on things and it gives you

00:34:35.780 --> 00:34:36.800
measurements between stuff.

00:34:36.800 --> 00:34:41.360
So for me, when I'm building stuff on the front end and I'm building out the CSS, like I need to

00:34:41.360 --> 00:34:42.080
click on an object.

00:34:42.080 --> 00:34:45.040
I need to know how far it is between the edges of the button.

00:34:45.040 --> 00:34:47.160
How far is it between the other objects?

00:34:47.160 --> 00:34:50.180
So I can add padding, spacing, and all this kind of stuff.

00:34:50.180 --> 00:34:51.560
I need to know the exact colors.

00:34:51.880 --> 00:34:55.180
And so they allow you to lock down the colors and name them.

00:34:55.180 --> 00:35:01.340
And so hopefully you're not naming them like purple haze or some crazy name, but it allows

00:35:01.340 --> 00:35:05.560
you actually as a designer to be a little bit more programmatic and think in systems, which

00:35:05.560 --> 00:35:12.580
I think most engineers actually appreciate if you're given a set of colors as variables that

00:35:12.580 --> 00:35:14.420
imply the use or explain the use.

00:35:14.420 --> 00:35:17.000
So this can be injected much earlier on.

00:35:17.000 --> 00:35:21.720
You can use a tool like this for measurements, makes the front end code easier for whoever

00:35:21.720 --> 00:35:23.440
ends up doing that.

00:35:23.440 --> 00:35:26.380
Maybe it's a designer, but maybe it's someone on the dev team.

00:35:26.380 --> 00:35:28.100
It just depends on who does it.

00:35:28.100 --> 00:35:28.380
Yeah.

00:35:28.380 --> 00:35:32.740
I really like the idea, especially of working within the constraints of like the CSS box

00:35:32.740 --> 00:35:37.420
model and stuff in the grid system, because I feel like that's where it gets really hard.

00:35:37.420 --> 00:35:40.380
It's like, I want it to go like this, but then you move it, it goes like this.

00:35:40.380 --> 00:35:43.540
You're like, but that's so hard in HTML, right?

00:35:43.540 --> 00:35:49.820
So you're kind of like, you're working with the same clay, not steel versus mud or whatever.

00:35:49.820 --> 00:35:50.700
And it's getting better.

00:35:50.700 --> 00:35:55.400
I think with flex box and CSS grid in terms of grid systems, some of this is getting a

00:35:55.400 --> 00:36:00.080
little bit better and less, less hacked, but some things that I've done, you don't see that

00:36:00.080 --> 00:36:02.200
many tables as front pages anymore.

00:36:02.200 --> 00:36:04.420
Yeah.

00:36:04.540 --> 00:36:07.000
I'm building all my websites, all the tables.

00:36:07.000 --> 00:36:09.440
They're all like, like this cut up Photoshop from the nineties.

00:36:09.440 --> 00:36:09.700
Yeah.

00:36:09.700 --> 00:36:10.920
Or two thousands.

00:36:10.920 --> 00:36:15.100
This portion of talk Python to me was brought to you by GoCD.

00:36:15.100 --> 00:36:21.140
GoCD is an on-premise open source, continuous delivery tool to help you get better visibility

00:36:21.140 --> 00:36:23.840
into and control of your team's deployments.

00:36:24.000 --> 00:36:29.040
With GoCD's comprehensive pipeline modeling, you can model complex workflows for multiple

00:36:29.040 --> 00:36:30.400
teams with ease.

00:36:30.400 --> 00:36:36.000
And GoCD's value stream map lets you track changes from commit to deploy at a glance.

00:36:36.000 --> 00:36:40.140
Say goodbye to deployment panic and hello to consistent, predictable deliveries.

00:36:40.140 --> 00:36:44.520
We all know that continuous integration is super important to the code quality of your applications.

00:36:44.520 --> 00:36:48.140
Choose the open source local CI server, GoCD.

00:36:48.660 --> 00:36:52.060
Learn more at talkpython.fm/gocd.

00:36:52.060 --> 00:36:54.880
That's talkpython.fm/gocd.

00:36:54.880 --> 00:37:00.780
I think when you're coming at this, right, like you have to think about like what's going

00:37:00.780 --> 00:37:01.780
to be the most fluid process.

00:37:01.780 --> 00:37:04.020
Like how can you help the people on the other side?

00:37:04.020 --> 00:37:07.280
Like if you're a designer and you care about the design, like you want to hand this off

00:37:07.280 --> 00:37:10.780
in a way that's going to kind of carry over the design intent.

00:37:10.780 --> 00:37:16.100
Clearly, like we both, you were joking, like I gave you the image, like just build it.

00:37:16.100 --> 00:37:16.960
Like it's so hard.

00:37:17.160 --> 00:37:22.120
And what I see a lot of from designers, hopefully there's no designers listening in, but they

00:37:22.120 --> 00:37:26.860
send me these beautifully rendered high fidelity mocks, which look just like the regular website.

00:37:26.860 --> 00:37:28.280
And maybe they're even in sketch.

00:37:28.280 --> 00:37:29.140
So I'm like, awesome.

00:37:29.140 --> 00:37:33.980
I can use one of these tools and build it out even faster rather than having to, you know,

00:37:33.980 --> 00:37:38.240
try and estimate measurements or get it close by eyeballing or taking measurements myself.

00:37:38.240 --> 00:37:43.400
Then they didn't do anything for the mobile or tablet or maybe even tablet.

00:37:43.400 --> 00:37:47.800
But it's like, so I'm placed in the position and I obviously had some design background and

00:37:47.800 --> 00:37:51.920
maybe this happened to you where it's like you have to invent the whole mobile experience.

00:37:51.920 --> 00:37:56.420
And if they don't have a lot of experience of like responsive and how things are going to

00:37:56.420 --> 00:38:02.220
displace or stack on mobile or the box model, then it might be kind of a disaster.

00:38:02.360 --> 00:38:06.340
You might have to rethink patterns on mobile and it might be quite difficult.

00:38:06.340 --> 00:38:10.620
And so, and I don't know why, but they just like skip that whole part.

00:38:10.620 --> 00:38:13.260
Like it's like, it's kind of like the modern day version.

00:38:13.260 --> 00:38:16.240
I think of just handing off the image is like, oh, the mobile.

00:38:16.240 --> 00:38:16.480
Yeah.

00:38:16.480 --> 00:38:18.500
You just like put a hamburger menu on that.

00:38:18.640 --> 00:38:18.920
Exactly.

00:38:18.920 --> 00:38:20.560
Using the foundation, right?

00:38:20.560 --> 00:38:21.160
So you'll be fine.

00:38:21.160 --> 00:38:21.640
Exactly.

00:38:21.640 --> 00:38:21.960
Yeah.

00:38:21.960 --> 00:38:22.840
We're using foundation.

00:38:22.840 --> 00:38:24.100
It's responsive.

00:38:24.100 --> 00:38:25.080
It says responsive.

00:38:25.080 --> 00:38:26.780
It says responsive right there in the design.

00:38:26.780 --> 00:38:27.500
Yeah.

00:38:27.500 --> 00:38:30.320
I've had people say, you know, this website is not responsive.

00:38:30.320 --> 00:38:31.340
I thought you were using bootstrap.

00:38:31.340 --> 00:38:37.160
It's like, you know, you have to employ the features of the thing that add the responsiveness

00:38:37.160 --> 00:38:37.540
to it.

00:38:37.540 --> 00:38:37.660
Right.

00:38:37.660 --> 00:38:38.900
It's not just pixie dust.

00:38:38.900 --> 00:38:39.760
You sprinkle on it.

00:38:39.760 --> 00:38:40.040
Right.

00:38:40.240 --> 00:38:40.560
Yeah.

00:38:40.560 --> 00:38:45.120
And there's some patterns that are, they're challenging too, like mega menus and that kind

00:38:45.120 --> 00:38:45.500
of thing.

00:38:45.500 --> 00:38:47.300
Like how does that work on mobile?

00:38:47.300 --> 00:38:49.080
Like that, it depends, right?

00:38:49.080 --> 00:38:51.980
Depends on what kind of crazy menu you've thought up in the first place.

00:38:51.980 --> 00:38:52.500
Yeah.

00:38:52.500 --> 00:38:53.420
Yeah, for sure.

00:38:53.420 --> 00:38:55.320
Smaller minimalist.

00:38:55.320 --> 00:38:56.200
That's what I say.

00:38:56.200 --> 00:39:00.880
One thing that you brought up is like having like named colors and things like that.

00:39:00.880 --> 00:39:06.760
Like, do you recommend that the dev team use something like SAS or less or one of these

00:39:06.760 --> 00:39:09.300
sort of more programmatic CSS super languages?

00:39:09.480 --> 00:39:10.420
I don't know what you really call them.

00:39:10.420 --> 00:39:11.300
I'm making that up.

00:39:11.300 --> 00:39:11.480
Yeah.

00:39:11.480 --> 00:39:15.460
I think it's a really good move, especially I think in two instances.

00:39:15.460 --> 00:39:20.280
One is where you're in a team environment where multiple people will be working with the

00:39:20.280 --> 00:39:22.200
CSS and making modifications to it.

00:39:22.200 --> 00:39:26.760
And the other reason why is when the project gets large for maintainability.

00:39:26.760 --> 00:39:29.400
I think SAS does a couple of things.

00:39:29.400 --> 00:39:30.800
So it is programmatic.

00:39:30.800 --> 00:39:33.680
Sorry, before we get too far, maybe not everyone knows less than SAS.

00:39:33.680 --> 00:39:35.140
You want to just define that real quick for them?

00:39:35.140 --> 00:39:35.840
Yeah, sure.

00:39:36.060 --> 00:39:41.380
So if you don't know less than SAS or, you know, there's post CSS as well, but they're

00:39:41.380 --> 00:39:42.760
CSS preprocessors.

00:39:42.760 --> 00:39:49.060
And so what allows you to do is use things like variables, functions also allows you to

00:39:49.060 --> 00:39:54.860
create mix ins, which are also kind of like functions that return CSS code, code in quotes.

00:39:54.860 --> 00:39:58.760
They also allow you to split up your code across multiple files.

00:39:58.760 --> 00:40:02.020
And so you can create something that's much more programmatic.

00:40:02.020 --> 00:40:05.400
But I think the most important thing isn't that it's programmatic.

00:40:05.400 --> 00:40:09.500
I mean, sure, you could start generating like tint lists and this kind of stuff with colors.

00:40:09.500 --> 00:40:14.080
But I think what's more interesting about it is the organizational aspect of it.

00:40:14.080 --> 00:40:18.540
I don't know about you, but I've worked on projects where you come on and you go, okay,

00:40:18.540 --> 00:40:22.080
and maybe it's multiple CSS files, but it's usually like one CSS file.

00:40:22.080 --> 00:40:23.680
And you open this up and you're like, what?

00:40:23.680 --> 00:40:29.140
You're like, it's like maybe being created by five people that like things are named like

00:40:29.140 --> 00:40:32.020
something, something like number two dash three.

00:40:32.020 --> 00:40:34.960
And you're like, and you're going through this trying to make sense of it.

00:40:34.960 --> 00:40:35.580
And it's difficult.

00:40:35.580 --> 00:40:38.840
Like we have a 5,000 line CSS file and one of them.

00:40:38.840 --> 00:40:39.820
And why?

00:40:39.820 --> 00:40:40.840
Yeah, exactly.

00:40:40.840 --> 00:40:42.400
Like, why is this okay?

00:40:42.700 --> 00:40:44.460
Yeah, so I think that's a disaster.

00:40:44.460 --> 00:40:45.960
Because like, how are you going to maintain that?

00:40:45.960 --> 00:40:51.440
Like, that's like opening up a single 5,000 line Python program.

00:40:51.440 --> 00:40:52.980
That's not any sort of order.

00:40:52.980 --> 00:40:54.780
Like, what are you going to do with that?

00:40:54.780 --> 00:40:58.340
Well, yeah, you know what I think is even worse, although I totally agree with the analogy,

00:40:58.340 --> 00:41:04.860
is a lot of times that file was started as like a zero byte CSS file was added to and added

00:41:04.860 --> 00:41:10.580
to as the site or the app has gone through many prototypes and many phases and features were

00:41:10.580 --> 00:41:14.020
added and then like canceled, but they're just they're all still in the CSS.

00:41:14.020 --> 00:41:16.960
It's like the tree rings of growth of the app.

00:41:16.960 --> 00:41:22.160
And you don't want to take it out because you're like, well, what if what if that one part that

00:41:22.160 --> 00:41:25.480
is like in this obscure page was depending on that thing?

00:41:25.480 --> 00:41:30.900
It's just really hard to know that you can like clean up this dead CSS code equivalent.

00:41:30.900 --> 00:41:34.420
Yeah, they do have a good tool for that now called un-CSS.

00:41:34.420 --> 00:41:40.480
It's the equivalent of if you've ever had your room be a disaster, which I know growing up

00:41:40.480 --> 00:41:41.460
mine was a disaster.

00:41:41.460 --> 00:41:44.660
My parents were always yelling at me, clean your room.

00:41:44.660 --> 00:41:49.540
And then if you took everything in the room and like shoved it in the closet, I think it's

00:41:49.540 --> 00:41:50.200
equivalent of that.

00:41:50.200 --> 00:41:55.080
But it basically looks at your website and what CSS selectors are being used and it basically

00:41:55.080 --> 00:41:55.980
dumps the rest.

00:41:55.980 --> 00:41:57.500
But it's still just a mess.

00:41:57.500 --> 00:41:59.320
It's just it's still on the file.

00:41:59.320 --> 00:42:00.920
It just doesn't render out to the website.

00:42:00.920 --> 00:42:02.160
So it's a good solution.

00:42:02.160 --> 00:42:03.220
But that's cool.

00:42:03.220 --> 00:42:09.860
How does it work with potentially like dynamic stuff like Chameleon or Jinja 2 templates?

00:42:10.140 --> 00:42:14.380
How does it work with like, say something behind a login versus public?

00:42:14.380 --> 00:42:15.700
You know what I mean?

00:42:15.700 --> 00:42:18.980
You're like, oh, there's that admin page thing.

00:42:18.980 --> 00:42:21.100
Maybe is it like, does it address any of that stuff?

00:42:21.300 --> 00:42:24.340
There are ways to configure it to address these types of things.

00:42:24.340 --> 00:42:28.620
But just like as you're sweeping things into the closet, like for me, I don't think it's

00:42:28.620 --> 00:42:29.920
a very elegant solution.

00:42:29.920 --> 00:42:30.880
Right.

00:42:31.020 --> 00:42:35.400
And so then you're like, okay, like, how can I program this stuff to sweep more stuff

00:42:35.400 --> 00:42:38.540
into like the new things that are coming into the room or something?

00:42:38.540 --> 00:42:42.680
I think this is where the organization helps because you can kind of keep things pared

00:42:42.680 --> 00:42:43.040
down.

00:42:43.040 --> 00:42:47.720
And I found when you keep things organized, just like in your room, if you had a clean room

00:42:47.720 --> 00:42:50.840
is like perhaps you get older and you're more clean or organized.

00:42:51.080 --> 00:42:53.200
You can find things very quickly, right?

00:42:53.200 --> 00:42:54.780
Like you're like, where is this thing?

00:42:54.780 --> 00:42:59.980
And so when you go and inspect it in Chrome, because you have a map, it'll tell you it's

00:42:59.980 --> 00:43:01.360
in this file on this line.

00:43:01.360 --> 00:43:02.380
It's like very obvious.

00:43:02.380 --> 00:43:07.140
And not only that, but if you name these files correctly and create a good sense of structure,

00:43:07.140 --> 00:43:11.480
then they're already named with the views or the names of the components or this type

00:43:11.480 --> 00:43:11.720
of thing.

00:43:11.780 --> 00:43:15.080
So it should be like super obvious, like what's going on.

00:43:15.080 --> 00:43:15.580
Yeah, that's cool.

00:43:15.580 --> 00:43:21.880
A lot of times I'll try to have like a navigation CSS file, maybe like a store CSS, a homepage

00:43:21.880 --> 00:43:25.740
because homepage, like the landing page always seems to have like a bunch of insane styles

00:43:25.740 --> 00:43:28.820
that don't appear elsewhere on the site.

00:43:28.820 --> 00:43:31.760
So yeah, I definitely think organization is important.

00:43:31.760 --> 00:43:33.500
Organization I think is important.

00:43:33.500 --> 00:43:38.600
And then the programmatic nature of it, what it does is it allows you to maintain design

00:43:38.600 --> 00:43:39.200
consistency.

00:43:39.200 --> 00:43:44.920
And so as you might move towards a larger app or towards something where the visual design

00:43:44.920 --> 00:43:46.660
is more important, it's like really key.

00:43:46.660 --> 00:43:51.380
Like if you're using, like I'm working on a project right now where one of the brand colors

00:43:51.380 --> 00:43:51.880
is red.

00:43:51.880 --> 00:43:53.660
So it's, you know, red in the logo.

00:43:53.660 --> 00:43:59.100
And so we use this branded red everywhere, but it's maybe not obvious to you if you don't

00:43:59.100 --> 00:44:01.060
have a design background that you're using the wrong red.

00:44:01.060 --> 00:44:05.700
And so this is, like I said, I went through like hundreds and hundreds of variations of those

00:44:05.700 --> 00:44:07.120
reds to kind of clean it up.

00:44:07.120 --> 00:44:11.840
And, you know, you find this like pound, like foo, you know, F zero zero, this kind

00:44:11.840 --> 00:44:12.640
of red.

00:44:12.640 --> 00:44:14.020
And it's like, that's not the right red.

00:44:14.020 --> 00:44:18.780
And so the other thing that's really nice with SAS or less, but I think a lot of people

00:44:18.780 --> 00:44:22.980
don't realize is you can create code linters to kind of prevent this type of behavior, this

00:44:22.980 --> 00:44:23.900
accumulation of things.

00:44:23.900 --> 00:44:29.140
So you can kind of create good practices and instill them in a coding conventions document,

00:44:29.140 --> 00:44:33.000
but also have them enforced or at least warned when they're running the preprocessor.

00:44:33.000 --> 00:44:33.480
Oh, wow.

00:44:33.480 --> 00:44:36.220
You could even like bring that into like a continuous integration workflow.

00:44:36.220 --> 00:44:36.560
Yeah.

00:44:36.560 --> 00:44:40.720
And you could either warn people or kick them out so that it won't render the CSS.

00:44:40.720 --> 00:44:41.820
Actually fail the build.

00:44:41.820 --> 00:44:45.240
That's crazy to fail the build because the CSS is like using the wrong color.

00:44:45.240 --> 00:44:46.020
I think that's awesome.

00:44:46.020 --> 00:44:48.080
Didn't know that was an option till just now.

00:44:48.080 --> 00:44:49.840
Sure.

00:44:49.960 --> 00:44:54.080
So maybe that's a good place to like touch on a few final things around methodologies.

00:44:54.080 --> 00:44:58.120
Like one of the things you've talked about is designers, developers working together using

00:44:58.120 --> 00:45:02.440
outdated methodologies that make it harder for them to do work together.

00:45:02.440 --> 00:45:04.100
They have to do a lot of rework.

00:45:04.100 --> 00:45:06.380
Want to give us some thoughts on that?

00:45:06.380 --> 00:45:08.560
I've been doing stuff on the web for quite some time.

00:45:08.560 --> 00:45:13.300
And I think like the old school way is, like you said, like the designers like huddle and

00:45:13.300 --> 00:45:15.500
come up with some crazy design and kick it over the fence.

00:45:15.700 --> 00:45:17.900
And then you're like, I know I've been panicked.

00:45:17.900 --> 00:45:20.500
I remember I used to work at Pulse magazine.

00:45:20.500 --> 00:45:24.440
It was a magazine put out by Tower Records, if you can remember back then when they were

00:45:24.440 --> 00:45:24.960
still around.

00:45:24.960 --> 00:45:27.340
Like music when it came on a physical thing, you carried it around?

00:45:27.340 --> 00:45:27.680
Yeah.

00:45:27.680 --> 00:45:29.840
It was like all like on CDs and this kind of thing.

00:45:29.840 --> 00:45:34.780
And so I worked at a music magazine and I remember that creative director came up with

00:45:34.780 --> 00:45:35.420
this design.

00:45:35.420 --> 00:45:37.520
And this is back in the days of tables.

00:45:37.520 --> 00:45:42.240
And he had this like thing that would overhang, like a flourish that would overhang the rest of

00:45:42.240 --> 00:45:43.860
everything else underneath it.

00:45:43.860 --> 00:45:46.920
And I said, this is going to be so difficult to make.

00:45:46.920 --> 00:45:48.960
And I like kept, you know, like this whole kind of argument.

00:45:48.960 --> 00:45:51.320
And he didn't buy it at the time.

00:45:51.320 --> 00:45:55.520
But this is like the thing, like kicking it over the fence and like developers, you're going

00:45:55.520 --> 00:45:58.500
to have to struggle and make it work or else, right?

00:45:58.500 --> 00:45:59.880
Or this kind of argument that goes on.

00:45:59.880 --> 00:46:02.140
So if you've been in that position, it kind of sucks.

00:46:02.140 --> 00:46:06.360
But there's newer ways of working, I think, than just like kicking it over the fence and

00:46:06.360 --> 00:46:10.020
the developers just trying to build it by some sort of weird ways.

00:46:10.260 --> 00:46:14.360
And part of that is one, there's this idea of design systems.

00:46:14.360 --> 00:46:16.580
And this is kind of like a big area.

00:46:16.580 --> 00:46:22.140
But there's kind of two parts of a design system that I think could be really useful for anyone

00:46:22.140 --> 00:46:26.880
who's approaching a large project, a redesign, some sort of like major changes.

00:46:26.880 --> 00:46:31.680
So like not, not like you're building the app day to day, but like you're going, like maybe

00:46:31.680 --> 00:46:33.140
you hire an agency or something like that.

00:46:33.140 --> 00:46:34.660
And it's like a radical redesign.

00:46:34.660 --> 00:46:39.760
And so those two things that I think you can really gain, which could become a great part

00:46:39.760 --> 00:46:43.760
of a design system is creating front end code in isolation.

00:46:43.760 --> 00:46:47.240
So you talked about building it kind of integrated into the backend.

00:46:47.240 --> 00:46:50.480
And so making sure you can kind of make tweaks on the color and all that stuff.

00:46:50.480 --> 00:46:51.500
And then you can see it live.

00:46:51.760 --> 00:46:56.140
I'm actually advocating a little bit the opposite, but only in the case of redesign,

00:46:56.140 --> 00:47:00.720
but to create the layouts and the patterns in a simplified form.

00:47:00.720 --> 00:47:04.280
So you can kind of share with the other developers what they look like and they can see it.

00:47:04.280 --> 00:47:09.140
Are you suggesting they create that in HTML and CSS or that they create that as like a Photoshop

00:47:09.140 --> 00:47:10.560
type of graphic?

00:47:10.560 --> 00:47:11.900
Put a little structure on that.

00:47:11.900 --> 00:47:12.740
I'll be quite specific.

00:47:12.740 --> 00:47:16.100
I wouldn't advocate just using like static HTML and CSS.

00:47:16.600 --> 00:47:21.600
And so what I would say I am an advocate of is if you're going to build front end code

00:47:21.600 --> 00:47:26.320
starting from a framework, if you haven't already, because why reinvent the wheel?

00:47:26.320 --> 00:47:27.860
Why do all that cross browser testing?

00:47:27.860 --> 00:47:32.300
Like grab bootstrap, grab foundation if it's more appropriate and use that.

00:47:32.300 --> 00:47:36.180
And then with these projects, especially with Zurb Foundation, there's all this front end

00:47:36.180 --> 00:47:37.500
tooling that comes with it.

00:47:37.500 --> 00:47:42.300
And so Zurb Foundation comes with this really interesting thing called the Zurb template.

00:47:42.500 --> 00:47:47.680
And what it is, is it's a bunch of tooling that Zurb used to use internally that they

00:47:47.680 --> 00:47:49.060
open sourced as an agency.

00:47:49.060 --> 00:47:53.660
Now, what they do is very interesting because they build different websites for different

00:47:53.660 --> 00:47:54.660
people, right?

00:47:54.660 --> 00:47:58.800
So last time I heard, they produce something like 100 per year, which is kind of crazy.

00:47:58.800 --> 00:48:03.440
I think that's like one every three days, like a new website coming out.

00:48:03.440 --> 00:48:07.520
And one of the things that they do is they produce front end code for these clients.

00:48:07.520 --> 00:48:10.720
They don't just produce like you're saying that the here's the image, build it.

00:48:10.920 --> 00:48:12.600
And so it's very interesting.

00:48:12.600 --> 00:48:16.120
So this is what they do as an agency and they're working across a lot of different industries

00:48:16.120 --> 00:48:19.720
with a lot of variation in the visual design, the visual branding.

00:48:19.720 --> 00:48:24.000
And so they've actually created their own internal toolkit to help them with that problem.

00:48:24.000 --> 00:48:25.360
And so that's what this is.

00:48:25.360 --> 00:48:30.940
And it's basically a static site generator similar to Assemble with some helpers that are

00:48:30.940 --> 00:48:33.900
specific for front end prototyping that make the process really quick.

00:48:33.900 --> 00:48:37.240
So like when you need to repeat things, like you have a bunch of images and you're like,

00:48:37.240 --> 00:48:38.260
I need 25 images.

00:48:38.260 --> 00:48:42.500
You just repeat it 25 so you don't have the pattern repeated a bunch of times in the HTML.

00:48:42.500 --> 00:48:47.100
It has partials, which are great because if you're building it with the intention of handing

00:48:47.100 --> 00:48:53.200
it off to a team, for example, like a Django team or whatever, you can understand like what

00:48:53.200 --> 00:48:55.300
kind of partials are they going to use on the back end?

00:48:55.300 --> 00:48:57.020
You can build it in the same way, the front end code.

00:48:57.020 --> 00:48:59.640
So it'll resemble that when you're looking at it.

00:48:59.820 --> 00:49:06.020
And then it also has this tooling for the SAS build, which has auto prefixer and it could

00:49:06.020 --> 00:49:10.100
have on CSS and other things, but you can build things really quick, live reload them in the

00:49:10.100 --> 00:49:11.400
browser and it's super fast.

00:49:11.400 --> 00:49:13.960
And so this is how I build front end code.

00:49:13.960 --> 00:49:18.420
But the other part of it, it's also got a thing called style Sherpa, which will help you to

00:49:18.420 --> 00:49:22.920
build a living style guide, which is basically this set of documentation.

00:49:22.920 --> 00:49:27.200
So if you've used bootstrap, if you're not familiar, go check out the bootstrap website,

00:49:27.200 --> 00:49:28.780
their documentation is fantastic.

00:49:28.780 --> 00:49:31.980
Check out Zurb Foundation, look at their documents there.

00:49:31.980 --> 00:49:33.160
Like, how do you use it?

00:49:33.160 --> 00:49:34.840
This is what style Sherpa does.

00:49:34.840 --> 00:49:40.980
You just put basically a code snippet in a specialized markdown format with code fences and you call it

00:49:40.980 --> 00:49:44.160
HTML example, instead of using, you know, just HTML.

00:49:44.160 --> 00:49:49.880
And what it does is it walks, it'll go and render out the live code in the browser and then have like a

00:49:49.880 --> 00:49:52.360
copy and pasteable version right below it.

00:49:52.360 --> 00:49:56.560
And so you get the same kind of automatically built style guide that you would get from

00:49:56.560 --> 00:50:00.180
Zurb Foundation pared down a little bit, but specific to your project.

00:50:00.180 --> 00:50:07.640
I think this is a great set of really concrete things that developers and any designers who

00:50:07.640 --> 00:50:11.480
happen to might be listening to this episode as well can take and use.

00:50:11.480 --> 00:50:17.080
So it feels like we've come a long way in the last 10 years, starting with these sort of front

00:50:17.080 --> 00:50:22.300
end frameworks, but also in the development world, we kind of moved, I'd say around the,

00:50:22.300 --> 00:50:27.240
year 2000 and all this agile stuff that was going on and whatnot then.

00:50:27.240 --> 00:50:30.900
And that maybe brought some other challenges with it, but it was quite a big shift.

00:50:30.900 --> 00:50:35.660
And it feels like the design world is also finding really new, interesting ways to work together with

00:50:35.660 --> 00:50:36.220
the developers.

00:50:36.220 --> 00:50:37.160
Yeah, absolutely.

00:50:37.160 --> 00:50:37.660
Yeah.

00:50:37.660 --> 00:50:38.060
Awesome.

00:50:39.060 --> 00:50:39.340
All right.

00:50:39.340 --> 00:50:43.200
Well, I guess we'll, we'll get a little on time, so we should probably leave it there

00:50:43.200 --> 00:50:46.560
for the design stuff, but let's go to the two questions.

00:50:46.560 --> 00:50:52.100
So if you're going to write some code, either Python or maybe HTML, what editor do you open

00:50:52.100 --> 00:50:52.260
up?

00:50:52.440 --> 00:50:54.960
I always open up sublime text three.

00:50:54.960 --> 00:50:57.820
I'm a huge sublime text fan boy.

00:50:57.820 --> 00:51:01.240
I've been using it since version two, which I guess doesn't sound that long ago, but they

00:51:01.240 --> 00:51:03.820
have a very long version cycle.

00:51:03.820 --> 00:51:04.920
But yeah.

00:51:05.040 --> 00:51:05.600
Yeah.

00:51:05.600 --> 00:51:09.820
And I used to work with them and some other editors and I just something about it.

00:51:09.820 --> 00:51:13.680
It just like, I feel like, like I don't even have to think like I could just work really

00:51:13.680 --> 00:51:14.040
quickly.

00:51:14.040 --> 00:51:17.580
As far as notable packages or libraries, what do you think?

00:51:17.580 --> 00:51:21.540
I would say the number one package that I use and it's super old school.

00:51:21.540 --> 00:51:25.800
It used to be called Zen coding, but now it's called Emmet, which I don't know that's a great

00:51:25.800 --> 00:51:28.060
name, but basically it does two things.

00:51:28.060 --> 00:51:34.280
One, what you do is you can type in a shorthand syntax, which is going to be very similar to,

00:51:34.280 --> 00:51:36.740
for example, like Ruby slim or Hamill, right?

00:51:36.740 --> 00:51:41.600
Where you have a CSS selector and you're just kind of combining them together like a UL, right?

00:51:41.600 --> 00:51:44.580
And then you've got the LI and then you can multiply.

00:51:44.580 --> 00:51:46.980
And so you can build these structures really quickly in HTML.

00:51:46.980 --> 00:51:49.800
Let me give a concrete example where people are listening if they haven't seen this,

00:51:49.800 --> 00:51:50.480
because it's really awesome.

00:51:50.480 --> 00:51:56.700
So imagine you want to create like a unordered list of 10 items and you're in a static editor.

00:51:56.700 --> 00:52:03.360
You could type left bracket, left angle bracket, UL close, left angle bracket, LI close.

00:52:03.360 --> 00:52:06.020
And hopefully your editor at least closing those tags for you.

00:52:06.020 --> 00:52:07.320
And then you could copy and paste it.

00:52:07.320 --> 00:52:12.200
Or you could just say UL angle bracket, LI star 10 tab.

00:52:12.200 --> 00:52:12.940
And it goes boom.

00:52:12.940 --> 00:52:14.460
And it just expands them all out, right?

00:52:14.460 --> 00:52:14.920
Exactly.

00:52:14.920 --> 00:52:18.700
And it's like, I think the first time when you do something that's complex and you see the

00:52:18.700 --> 00:52:21.800
speed of it, you're like, wow, this is like magic.

00:52:21.800 --> 00:52:27.520
And I think the thing that it also prevents is like messing up on not closing the tags or

00:52:27.520 --> 00:52:30.420
using the wrong closing tag or these little mistakes.

00:52:30.420 --> 00:52:34.700
And I think when you're using these frameworks, you start to have pretty large structures like

00:52:34.700 --> 00:52:38.640
this, especially like the unordered list with all the line items and all this kind of stuff.

00:52:38.640 --> 00:52:44.520
And so it makes those structures really easy to build quickly and then also error free usually.

00:52:44.520 --> 00:52:44.820
Right.

00:52:44.820 --> 00:52:47.880
Like grid rows, for example, or something like that.

00:52:47.880 --> 00:52:49.500
And you can mix in CSS.

00:52:49.500 --> 00:52:56.980
So you could say like if you wanted the unordered list to be products and the items to be product

00:52:56.980 --> 00:53:05.200
as CSS classes, you could say like UL dot products greater than LI dot product star 10 and tap.

00:53:05.200 --> 00:53:07.460
And it would put all those classes on the elements as well, right?

00:53:07.460 --> 00:53:13.160
One thing maybe I'm not sure if it's because I do design or because I do code, but I really

00:53:13.160 --> 00:53:17.100
like there's a lorem tag you can throw in there too, and it just fills it with lorem text.

00:53:17.100 --> 00:53:20.760
But it's even better than that because it's programmatic because you can say like lorem

00:53:20.760 --> 00:53:21.100
10.

00:53:21.100 --> 00:53:26.400
It gives you 10 words of lorem, but you can say like lorem one, but you know how you're saying

00:53:26.400 --> 00:53:29.840
you can use the asterix to multiply out.

00:53:29.840 --> 00:53:35.860
So what you can do, it'll actually give you different lorem text for each of those items.

00:53:35.860 --> 00:53:37.880
So if you're building a menu, it's fantastic.

00:53:37.880 --> 00:53:38.660
That's awesome.

00:53:38.660 --> 00:53:43.120
That's like the lorem, some sort of meaningless text to just fill in stuff that,

00:53:43.120 --> 00:53:46.380
those stakeholders don't look at it and go, whoa, but it's not supposed to stay there.

00:53:46.380 --> 00:53:48.360
It doesn't mean it's not what it's going to be there.

00:53:48.360 --> 00:53:49.080
This is just filler.

00:53:49.080 --> 00:53:50.740
So like lorem Ipsum is that thing.

00:53:50.740 --> 00:53:55.700
Do you know about hipster, hipster, hipster, hipster, hipster, hipster, no, no.

00:53:55.700 --> 00:53:56.260
What is that?

00:53:56.260 --> 00:53:58.380
It's hip sum.co.

00:53:58.380 --> 00:54:01.520
It's the same thing as lorem Ipsum, but it's hipster speak.

00:54:01.520 --> 00:54:02.400
That sounds fantastic.

00:54:02.400 --> 00:54:04.260
It's fantastic, man.

00:54:04.260 --> 00:54:05.120
It's, it's beautiful.

00:54:05.120 --> 00:54:10.000
And maybe I'll read you a little, like if I could just pull it up here, let's just do it.

00:54:10.440 --> 00:54:16.880
It says shabby, chic, aesthetic, subway tile, pabst, a fagetto, dream catcher, narwhal.

00:54:16.880 --> 00:54:18.480
It just goes on and on.

00:54:18.480 --> 00:54:18.880
It's beautiful.

00:54:18.880 --> 00:54:21.440
I've been starting to move towards the hipster Ipsum lately.

00:54:21.440 --> 00:54:22.600
Nice.

00:54:22.600 --> 00:54:26.560
Maybe we should fork Emmett and integrate the hipster Ipsum in there.

00:54:26.560 --> 00:54:28.560
We definitely, definitely should.

00:54:28.560 --> 00:54:29.700
All right.

00:54:29.700 --> 00:54:32.820
Well, I definitely recommend that as a editor plugin as well.

00:54:32.820 --> 00:54:33.220
That's cool.

00:54:33.220 --> 00:54:36.880
So final call to action before we call it an episode.

00:54:36.880 --> 00:54:37.480
Yeah, cool.

00:54:37.480 --> 00:54:41.200
So if you've been listening and you're interested in what I've been talking about,

00:54:41.200 --> 00:54:46.180
this kind of intersection between design and engineering, the best thing I have for you

00:54:46.180 --> 00:54:48.740
is I've got a list, but it's kind of a secret list.

00:54:48.740 --> 00:54:50.980
You won't find it advertised on my website.

00:54:50.980 --> 00:54:58.660
But what I do have is I have a free email course where what I do, like these two big wins I talked

00:54:58.660 --> 00:55:00.120
about using the front end code.

00:55:00.220 --> 00:55:04.800
And so if that sounded compelling to you or created the coded style guide, you can learn

00:55:04.800 --> 00:55:08.360
how to do that at design systems crash course.com.

00:55:08.360 --> 00:55:13.500
But more importantly, after you're done with the course, you'll get on this kind of internal

00:55:13.500 --> 00:55:15.620
insider circle list that I've got.

00:55:15.620 --> 00:55:20.440
And I send emails out daily and I talk about this stuff all the time, like how to use front

00:55:20.440 --> 00:55:24.740
and gold and like how to build code, how to work with SAS, like how to make sure colors

00:55:24.740 --> 00:55:25.440
are consistent.

00:55:25.440 --> 00:55:30.320
And so if you've got the kind of like design twinkle in your eye or in the back of your

00:55:30.320 --> 00:55:34.440
head, like it might be something you might want to check out design systems crash course.com.

00:55:34.440 --> 00:55:39.280
But I also have something else because I know this is a Python show and I wouldn't want to

00:55:39.280 --> 00:55:40.620
leave empty handed.

00:55:40.620 --> 00:55:45.580
I did a lot of searching on Zerb Foundation and Python and I thought, wow, this sucks.

00:55:45.580 --> 00:55:50.600
There's a lot of confusion and people trying to integrate frameworks and not knowing what to

00:55:50.600 --> 00:55:50.860
do.

00:55:50.860 --> 00:55:52.680
And there's some packages that have gone stale.

00:55:52.680 --> 00:55:56.720
So I'm putting together a resource for using frameworks with Python.

00:55:56.720 --> 00:56:01.540
And so I'm going to talk about the major ones, Bootstrap, Zerb Foundation, and UIKit.

00:56:01.540 --> 00:56:04.820
And so if you're interested in any of those three and you haven't been using them in your

00:56:04.820 --> 00:56:09.080
current projects, I'm going to put together a resource there for you so you can get started

00:56:09.080 --> 00:56:09.820
with it very quickly.

00:56:09.820 --> 00:56:10.280
All right.

00:56:10.280 --> 00:56:10.480
Yeah.

00:56:10.480 --> 00:56:13.500
I'll link to both of those in the show notes so people can check them out.

00:56:13.500 --> 00:56:17.800
James, it's been great to have you on the show and really enjoyed this design focused

00:56:17.800 --> 00:56:18.340
conversation.

00:56:18.340 --> 00:56:18.640
Yeah.

00:56:18.640 --> 00:56:18.980
Thank you.

00:56:18.980 --> 00:56:19.940
Thanks for having me.

00:56:19.940 --> 00:56:20.220
You bet.

00:56:20.420 --> 00:56:20.720
See you later.

00:56:20.720 --> 00:56:24.520
This has been another episode of Talk Python To Me.

00:56:24.520 --> 00:56:27.140
Today's guest has been James Stone.

00:56:27.140 --> 00:56:30.240
And this episode is brought to you by Linode and GoCD.

00:56:30.240 --> 00:56:35.260
Linode is bulletproof hosting for whatever you're building with Python.

00:56:35.260 --> 00:56:39.620
Get your four months free at talkpython.fm/Linode.

00:56:39.620 --> 00:56:42.140
Just use the code Python17.

00:56:42.140 --> 00:56:47.020
GoCD is the on-premise, open-source, continuous delivery server.

00:56:47.020 --> 00:56:49.160
Want to improve your deployment workflow?

00:56:49.320 --> 00:56:51.140
Keep your code and builds in-house?

00:56:51.140 --> 00:56:57.540
Check out GoCD at talkpython.fm/gocd and take control over your process.

00:56:58.040 --> 00:56:59.860
Are you or a colleague trying to learn Python?

00:56:59.860 --> 00:57:04.700
Have you tried books and videos that just left you bored by covering topics point by point?

00:57:04.700 --> 00:57:13.300
Well, check out my online course, Python Jumpstart by building 10 apps at talkpython.fm/course to experience a more engaging way to learn Python.

00:57:13.760 --> 00:57:20.640
And if you're looking for something a little more advanced, try my write Python code course at talkpython.fm/pythonic.

00:57:21.640 --> 00:57:23.360
Be sure to subscribe to the show.

00:57:23.360 --> 00:57:25.560
Open your favorite podcatcher and search for Python.

00:57:25.560 --> 00:57:26.800
We should be right at the top.

00:57:26.800 --> 00:57:36.100
You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

00:57:36.460 --> 00:57:38.000
This is your host, Michael Kennedy.

00:57:38.000 --> 00:57:39.340
Thanks so much for listening.

00:57:39.340 --> 00:57:40.420
I really appreciate it.

00:57:40.420 --> 00:57:42.360
Now, get out there and write some Python code.

00:57:42.360 --> 00:57:42.380
Thank you.

00:57:42.380 --> 00:57:42.840
Thank you.

00:57:42.840 --> 00:58:03.120
Thank you.

