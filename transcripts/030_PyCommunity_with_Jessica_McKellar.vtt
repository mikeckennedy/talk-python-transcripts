WEBVTT

00:00:00.001 --> 00:00:02.620
What does it mean to be a leader in the Python community?

00:00:02.620 --> 00:00:05.720
Does it mean you contribute to open source projects?

00:00:05.720 --> 00:00:07.020
You speak at conferences?

00:00:07.020 --> 00:00:09.840
You start the largest user group?

00:00:09.840 --> 00:00:10.860
You write a book?

00:00:10.860 --> 00:00:12.860
You be a core contributor to the language?

00:00:12.860 --> 00:00:14.600
The answer is yes.

00:00:14.600 --> 00:00:17.460
And that's why Jessica McKellar won the Frank Wilson Award

00:00:17.460 --> 00:00:19.400
for contributions to the Python community.

00:00:19.400 --> 00:00:22.940
She is the guest on this episode of Talk Python To Me.

00:00:22.940 --> 00:00:27.240
It's number 30, recorded Thursday, September 24th, 2015.

00:00:27.240 --> 00:00:56.340
Welcome to Talk Python To Me, a weekly podcast on Python,

00:00:56.340 --> 00:00:59.400
the language, the libraries, the ecosystem, and the personalities.

00:00:59.400 --> 00:01:01.500
This is your host, Michael Kennedy.

00:01:01.500 --> 00:01:03.500
Follow me on Twitter, where I'm @mkennedy.

00:01:03.500 --> 00:01:07.380
Keep up with the show and listen to past episodes at talkpython.fm

00:01:07.380 --> 00:01:09.920
and follow the show on Twitter via at Talk Python.

00:01:09.920 --> 00:01:13.580
This episode is brought to you by Hired and OptBeat.

00:01:13.580 --> 00:01:15.600
Thank them for supporting the show on Twitter,

00:01:15.600 --> 00:01:18.620
where they're at hired underscore HQ and at OptBeat.

00:01:18.620 --> 00:01:20.340
Hey, everyone.

00:01:20.340 --> 00:01:23.280
I don't have any news this week, so let's get right to the show.

00:01:23.280 --> 00:01:24.900
Let me introduce Jessica.

00:01:25.440 --> 00:01:28.260
Jessica McKellar is a startup founder, software engineer,

00:01:28.260 --> 00:01:31.380
and open source developer living in San Francisco, California.

00:01:31.380 --> 00:01:35.000
She works at Dropbox and enjoys the internet, networking,

00:01:35.000 --> 00:01:38.120
low-level systems engineering, relational databases,

00:01:38.120 --> 00:01:39.960
tinkering on electronics projects,

00:01:39.960 --> 00:01:43.880
and contributing to and helping others contribute to open source software.

00:01:43.880 --> 00:01:46.940
Her motto is, be the change you want to see in the world.

00:01:46.940 --> 00:01:50.380
And she has been a director for the Python Software Foundation.

00:01:50.380 --> 00:01:52.320
Jessica, welcome to the show.

00:01:53.080 --> 00:01:53.860
Thank you for having me.

00:01:53.860 --> 00:01:56.820
Yeah, I'm really excited to have you on the show.

00:01:56.820 --> 00:02:00.500
You've been a long-time sort of Python hero to me.

00:02:00.500 --> 00:02:05.640
I've seen some of your talks that you've done at conferences and keynotes,

00:02:05.640 --> 00:02:07.360
and they were really inspiring.

00:02:07.360 --> 00:02:08.640
So I'm excited to talk to you.

00:02:08.640 --> 00:02:09.120
I really appreciate that.

00:02:09.120 --> 00:02:09.940
You're welcome.

00:02:09.940 --> 00:02:11.440
I'm excited to talk to you about this.

00:02:11.440 --> 00:02:12.000
Thank you.

00:02:12.480 --> 00:02:18.360
So before we get into all the awesome stuff you're doing at the outer edge of the Python world,

00:02:18.360 --> 00:02:23.980
let's maybe take a step back and you could tell me a little bit about how you got into programming

00:02:23.980 --> 00:02:25.060
and how you got into Python.

00:02:25.060 --> 00:02:26.040
What's your story?

00:02:26.040 --> 00:02:27.240
Yeah, absolutely.

00:02:27.240 --> 00:02:31.840
So I was not one of those people who was programming since birth.

00:02:32.000 --> 00:02:37.300
I was a big science nerd in high school, and I actually declared chemistry as my first major.

00:02:37.300 --> 00:02:39.600
And I actually have a chemistry degree.

00:02:39.600 --> 00:02:40.740
That's my first bachelor's degree.

00:02:40.740 --> 00:02:42.440
But I had a bunch of friends.

00:02:42.440 --> 00:02:49.420
I went to MIT, and I had a bunch of friends who were pursuing computer science degrees while I was busy pursuing my chemistry degree.

00:02:50.380 --> 00:02:55.900
And, you know, I would sort of look at them out of the corner of my eye, and I would look at what they were learning.

00:02:55.900 --> 00:03:00.040
And it seemed like this, they were really learning this toolkit.

00:03:00.040 --> 00:03:05.560
Like they were learning a toolkit full of tools for solving many different types of problems in the world.

00:03:05.560 --> 00:03:11.780
And that seemed very attractive to me, and also, frankly, very different from what I was getting with my chemistry degree.

00:03:11.780 --> 00:03:17.540
And I wanted to try out what learning that toolkit felt like.

00:03:17.540 --> 00:03:19.740
And I ended up taking some computer science classes.

00:03:19.920 --> 00:03:25.700
I was pretty immediately hooked and ended up getting a computer science degree and then also a CS master's.

00:03:25.700 --> 00:03:26.260
That's cool.

00:03:26.260 --> 00:03:28.780
What was your first programming class language?

00:03:28.780 --> 00:03:29.940
Well, yeah.

00:03:29.940 --> 00:03:38.160
So I was at MIT right when they were in the middle of this big transition from Scheme, which is a dialect of Lisp, to Python.

00:03:38.160 --> 00:03:41.420
So my first couple of classes were in Scheme.

00:03:41.420 --> 00:03:45.880
And then sort of the back half, many of them were in Python.

00:03:45.880 --> 00:03:47.560
Oh, that's nice.

00:03:47.640 --> 00:03:51.300
So my first computer science class was also in Scheme.

00:03:51.300 --> 00:03:52.900
And I do wish it was in Python.

00:03:54.900 --> 00:03:58.080
You know, no disrespect at all, but Python is just so much better, in my opinion.

00:03:58.080 --> 00:04:00.860
I mean, Scheme is a very interesting learning language.

00:04:01.280 --> 00:04:13.060
But I think that, so there was a very conservative, so the reason why there were, well, one of the reasons for this transition was, like, some pretty serious declining enrollment numbers in the computer science program.

00:04:13.140 --> 00:04:20.140
So it was part of this big revamp to make the program accessible, A, to, like, a diverse set of backgrounds.

00:04:20.140 --> 00:04:31.640
You know, I think that there had been a sense previously that you really sort of needed to have already been programming, you know, in high school for you to really seriously consider doing it at university.

00:04:32.000 --> 00:04:39.180
And they wanted to open up the door towards a more diverse set of backgrounds and to make it also a more interdisciplinary curriculum.

00:04:39.180 --> 00:04:45.940
And I think enrollment has been, you know, sort of skyrocketing since that change, which is exciting for me.

00:04:46.420 --> 00:04:47.060
That's really great.

00:04:47.060 --> 00:04:55.800
I don't know why, but it's definitely, I definitely get the sense that Python is more welcoming to people from different backgrounds.

00:04:55.800 --> 00:04:57.960
And it just seems to bring greater diversity.

00:04:57.960 --> 00:04:59.060
I do conference speaking.

00:04:59.060 --> 00:05:02.900
I do training in a variety of languages.

00:05:02.900 --> 00:05:09.000
And when I do Python, it feels like the people in the audience are much more representative of the general population.

00:05:09.000 --> 00:05:10.920
I don't know why.

00:05:10.920 --> 00:05:12.160
Maybe you have better insight than I do.

00:05:12.160 --> 00:05:14.720
But it's a good thing for whatever reason that's true, you know?

00:05:15.340 --> 00:05:26.360
Yeah, so certainly, A, the Python community has made very concerted efforts internationally to be a very welcoming community, in particular to first-time programmers.

00:05:26.360 --> 00:05:35.440
And then also, I mean, the language, sort of this batteries-included philosophy means that if you're just learning how to program and maybe you're not sure if this is for you,

00:05:35.440 --> 00:05:42.800
I mean, you know, the fact that after just a couple of hours of learning the language basics and then a couple of lines of code,

00:05:42.800 --> 00:05:47.300
you can do something that is actually pretty exciting, it really hooks people.

00:05:47.300 --> 00:05:48.940
Yeah, I think you're right.

00:05:48.940 --> 00:05:53.300
I mean, programming is so fun and so interesting.

00:05:53.300 --> 00:05:55.780
But when you're new, it's not fun and interesting.

00:05:55.780 --> 00:06:00.580
There's all these little terrible details like, how do I declare a variable?

00:06:00.580 --> 00:06:02.940
And why does a semicolon go there?

00:06:03.620 --> 00:06:07.560
And why do I need to know how to declare a class to declare a function just to, like, print?

00:06:07.560 --> 00:06:15.480
You know, there's, like, all these stuff you've got to make, sort of, make your way through believing on the other side and there will be something interesting and cool you can do.

00:06:15.480 --> 00:06:17.220
But it takes a long time with a lot of languages.

00:06:17.220 --> 00:06:20.960
And like you said, like, Python, you get to that gratification a lot quicker.

00:06:20.960 --> 00:06:21.740
Yeah.

00:06:22.260 --> 00:06:25.980
So what was it like doing computer science at MIT?

00:06:25.980 --> 00:06:29.760
I mean, that's one of those schools that's definitely up there on a pedestal.

00:06:29.760 --> 00:06:31.640
And I bet it's a pretty interesting environment.

00:06:31.640 --> 00:06:32.740
Can you tell me what that was like?

00:06:32.740 --> 00:06:33.680
Yeah.

00:06:33.680 --> 00:06:46.100
Well, the pedestalization is funny because, honestly, the school is very similar to lots of other, you know, STEM-focused universities, you know, in the country and around the world.

00:06:46.260 --> 00:06:48.720
And the thing that you really benefit from at MIT is the network.

00:06:48.720 --> 00:06:51.520
But, yeah, you know, I received a nice, rigorous computer science education.

00:06:51.520 --> 00:06:52.840
I learned a lot.

00:06:52.840 --> 00:06:59.220
One of my fondest memories, although maybe it wasn't fond at the time.

00:06:59.220 --> 00:07:08.020
So I had this, like, fairly compressed computer science education there because I spent the first two years getting a chemistry degree and then the last two years getting a CS degree.

00:07:08.680 --> 00:07:16.540
And so I ended up sort of like the time from first computer science class to taking grad classes was rather condensed.

00:07:16.540 --> 00:07:23.880
And I have this really distinct and fond memory of taking, there's this sort of famous operating systems class, 6828.

00:07:23.880 --> 00:07:29.280
And, like, that was the class where I really learned how to be a systematic debugger.

00:07:29.900 --> 00:07:35.280
Because, I mean, when you're building an operating system from scratch, and this wasn't in Python, but, you know, debugging is universal.

00:07:35.280 --> 00:07:36.640
It's all programming languages.

00:07:36.640 --> 00:07:47.580
But when you can't trust, like, your page table implementation, you can't, like, trust anything about your kernel, you really learn how to be systematic about these things.

00:07:47.580 --> 00:07:49.460
And I look back on that very fondly.

00:07:49.460 --> 00:07:50.840
It's, like, sort of very rigorous.

00:07:50.840 --> 00:07:53.660
It was very hard for me at the time, but I learned a ton from it.

00:07:54.140 --> 00:08:00.620
I can imagine that, you know, if you mess up the memory implementation or something, like, that's pretty critical.

00:08:00.620 --> 00:08:03.520
It's not just, like, you're off a little bit, right?

00:08:03.520 --> 00:08:04.540
Something goes really wrong.

00:08:04.540 --> 00:08:06.500
So, yeah, that's really, I'm sure that was interesting.

00:08:06.500 --> 00:08:07.100
Was that in C?

00:08:07.100 --> 00:08:08.960
Yeah, and a lot of assembly.

00:08:08.960 --> 00:08:10.760
Yeah, I'm sure it was fun.

00:08:10.760 --> 00:08:20.400
Like you said, I'm sure the most important part is just being around a bunch of smart people, super excited about programming, just kind of immersing yourself in that world.

00:08:20.400 --> 00:08:21.560
Yeah, totally.

00:08:22.020 --> 00:08:31.360
The reason I reached out recently to you is you got a big honor in the Python community, and you won this thing called the Frank Wilson Award.

00:08:31.360 --> 00:08:31.840
Yeah.

00:08:31.840 --> 00:08:33.740
Yeah, congratulations on that.

00:08:33.740 --> 00:08:34.060
Oh, thank you.

00:08:34.060 --> 00:08:35.040
You want to talk about that a bit?

00:08:35.040 --> 00:08:36.920
Maybe tell us all what it is first.

00:08:36.920 --> 00:08:37.720
Sure.

00:08:37.720 --> 00:08:43.760
It's mostly a recognition of a sort of sustained involvement and investment in the community in particular.

00:08:43.760 --> 00:08:47.700
And that is pretty much my cup of tea here.

00:08:47.700 --> 00:08:50.100
So I do, you know, I have contributed to the language.

00:08:50.100 --> 00:08:54.660
I'm a maintainer for various open source Python libraries.

00:08:54.660 --> 00:08:58.080
But a lot of what I'm invested in is the community side.

00:08:58.080 --> 00:09:07.760
I guess some of the things that I've done over the years have included being an organizer for the Boston Python user group, which became the largest user group in the world.

00:09:07.760 --> 00:09:08.780
How big is that?

00:09:08.780 --> 00:09:10.660
Several thousand people.

00:09:11.280 --> 00:09:12.400
That's pretty awesome.

00:09:12.400 --> 00:09:14.440
You can't have everybody attend, right?

00:09:14.440 --> 00:09:16.100
No, you can't.

00:09:16.100 --> 00:09:19.840
But it's this really wonderful both sort of online and offline community.

00:09:19.840 --> 00:09:23.060
And there are a bunch of people who deserve a ton of credit for this.

00:09:23.060 --> 00:09:24.560
It's certainly not a one-person effort.

00:09:25.020 --> 00:09:38.300
A big part of the growth was around us making a very concerted investment in attracting and retaining sort of diverse backgrounds in the community in Boston.

00:09:38.300 --> 00:09:40.760
So Boston, it's a college town.

00:09:40.760 --> 00:09:41.760
You have a ton of students.

00:09:41.760 --> 00:09:48.440
There are a bunch of fields adjacent to just sort of pure software engineering that are very well represented.

00:09:48.940 --> 00:09:51.140
It's a big biotech community.

00:09:51.140 --> 00:09:54.560
The sciences are very well represented there.

00:09:54.560 --> 00:09:56.980
Yeah, you've got all that high-tech stuff.

00:09:56.980 --> 00:09:57.940
What is that?

00:09:57.940 --> 00:10:01.660
Route 128 or something sort of on the ring out there.

00:10:01.660 --> 00:10:04.000
There's a lot of really cool companies.

00:10:04.000 --> 00:10:05.000
Yes.

00:10:05.000 --> 00:10:10.500
So you have this opportunity to have a bunch of sort of really interdisciplinary, wonderful interdisciplinary discussions,

00:10:10.500 --> 00:10:16.500
and then also to be very concerted about attracting diversity amongst other demographics.

00:10:16.700 --> 00:10:21.460
So we had a very concerted push where it was getting more women into the community, for example, to get more students into the community.

00:10:21.460 --> 00:10:23.260
And that was a big part of our growth.

00:10:23.260 --> 00:10:32.640
And that model, sort of the model that we built out was starting with sort of an introductory series of programming workshops

00:10:32.640 --> 00:10:44.700
and building that into a pipeline of sort of project nights where you come and you can get mentorship on whatever projects you're working on to intermediate Python workshops.

00:10:44.700 --> 00:10:50.660
And then sort of being well-situated at that point to be just a general, fluent member of the community.

00:10:50.660 --> 00:10:57.480
And so this sort of pipeline model has been emulated in a bunch of other cities and has proven pretty successful.

00:10:58.320 --> 00:10:58.640
Sure.

00:10:58.640 --> 00:11:02.900
I currently am not in Portland, Oregon, but I live in Portland, Oregon.

00:11:02.900 --> 00:11:07.180
The Python user group there seems to be modeled very much like that.

00:11:07.180 --> 00:11:08.760
They've got like a peer mentoring night.

00:11:08.760 --> 00:11:11.560
And then once a month they've got like, you know, more formal speaking.

00:11:11.560 --> 00:11:13.960
And then they've got a lot of different levels.

00:11:13.960 --> 00:11:17.360
And I think that that's really pretty key to making it successful, like you say.

00:11:17.360 --> 00:11:18.140
Yeah.

00:11:18.180 --> 00:11:20.800
I've actually been to the Portland user group on a couple of occasions.

00:11:20.800 --> 00:11:21.680
Oh, nice.

00:11:21.680 --> 00:11:22.200
Yeah.

00:11:22.200 --> 00:11:22.620
Yeah.

00:11:22.620 --> 00:11:22.780
Yeah.

00:11:22.780 --> 00:11:23.160
Very cool.

00:11:23.160 --> 00:11:37.320
You know, it seems to me like if you're just a student or somebody, if you were to go to, I don't know, user group with some famous speaker talking about the nuanced bits of some advanced piece of the language or some library or technology, right?

00:11:37.320 --> 00:11:39.300
That's sort of inaccessible to you.

00:11:39.300 --> 00:11:44.780
But I think having this pipeline that slowly brings people more in is probably good.

00:11:44.780 --> 00:11:45.880
Yeah.

00:11:45.880 --> 00:11:48.080
And you want the super advanced stuff too, right?

00:11:48.080 --> 00:11:54.100
I definitely want to be, you know, have an opportunity to talk with experts on advanced topics.

00:11:54.100 --> 00:12:01.140
But having, you know, sort of having the beginner, the intermediate, and the advanced topics covering your attendee base is definitely important.

00:12:01.140 --> 00:12:01.640
Yeah.

00:12:01.660 --> 00:12:02.280
That's super cool.

00:12:02.280 --> 00:12:02.540
Okay.

00:12:02.540 --> 00:12:07.740
So Python user group in Boston, we're going to name some other things.

00:12:07.740 --> 00:12:09.660
I derailed you.

00:12:09.660 --> 00:12:10.580
I know you have a bunch more.

00:12:10.580 --> 00:12:12.040
I spent a lot of time speaking.

00:12:12.040 --> 00:12:12.440
I'm sorry.

00:12:12.440 --> 00:12:30.540
I mean, I was a director for the Python Software Foundation for a couple of years, a co-chair for the Outreach and Education Committee, which is sort of specifically dedicated to bringing Python into schools and learning communities and attracting diverse audiences.

00:12:31.040 --> 00:12:33.180
So what level were you focused at?

00:12:33.180 --> 00:12:34.400
Was that university?

00:12:34.400 --> 00:12:35.280
Was that high school?

00:12:35.280 --> 00:12:36.600
In general?

00:12:36.600 --> 00:12:37.920
It's really everything.

00:12:37.920 --> 00:12:46.100
And actually, a lot of it is sort of learning opportunities and learning communities outside of the formal education system.

00:12:46.100 --> 00:12:59.640
So supporting a lot of these, you know, workshops for sort of a diversity-focused workshops or perhaps like an after-school program for kids where they might not otherwise have a formal opportunity to learn how to program.

00:12:59.640 --> 00:13:00.600
It was really the full spectrum.

00:13:00.920 --> 00:13:01.120
Okay.

00:13:01.120 --> 00:13:01.940
Yeah, that's cool.

00:13:01.940 --> 00:13:05.200
A lot of international investments, which is really cool.

00:13:05.200 --> 00:13:11.860
So we've definitely given grants to people on probably every continent except Antarctica.

00:13:11.860 --> 00:13:14.080
Yeah, which is very cool.

00:13:14.080 --> 00:13:15.680
Yeah, there's not a lot.

00:13:15.680 --> 00:13:18.260
There's probably only scientists on Antarctica, aren't there?

00:13:18.260 --> 00:13:18.920
We'll get them, though.

00:13:18.920 --> 00:13:19.520
We'll get them.

00:13:19.520 --> 00:13:23.880
They probably brought Python with them, actually, keeping it warm and somewhat.

00:13:24.620 --> 00:13:33.580
One of the things that I really liked that you did was a talk, I think it was in New Zealand at KiwiPyCon.

00:13:33.580 --> 00:13:34.120
Is that right?

00:13:34.120 --> 00:13:35.880
I did give one of those, yeah.

00:13:35.880 --> 00:13:36.480
Yeah, yeah.

00:13:36.480 --> 00:13:40.880
And you said you titled it something like Choose Your Own Python Adventure.

00:13:40.880 --> 00:13:42.140
Do you remember that talk?

00:13:42.140 --> 00:13:42.920
I do.

00:13:42.920 --> 00:13:43.280
Yeah.

00:13:43.780 --> 00:13:45.240
Yeah, that was really, really good.

00:13:45.240 --> 00:13:47.020
And let me see if I can summarize it.

00:13:47.020 --> 00:13:48.000
We could talk about it a little bit.

00:13:48.000 --> 00:13:56.980
So, you know, you kind of said, like, look, we want development and programming in Python to be wonderful and delightful.

00:13:56.980 --> 00:14:03.540
And there's a lot of positive stuff happening, like you talked about, the adoption growth and things like that.

00:14:03.540 --> 00:14:06.220
But you wanted to make sure that it keeps growing.

00:14:06.220 --> 00:14:11.720
And there was maybe some challenges that you said, look, we need to address these things.

00:14:12.140 --> 00:14:19.940
The number one issue that you brought up, which I thought was pretty interesting and resonated with sort of my experience as well, was Python on Windows.

00:14:19.940 --> 00:14:21.040
Yeah.

00:14:21.040 --> 00:14:24.320
So what's the problem with Python on Windows, even though it is getting better?

00:14:24.320 --> 00:14:26.540
It is definitely getting better.

00:14:26.540 --> 00:14:27.900
And the talk was a couple of years ago.

00:14:27.900 --> 00:14:31.500
And there have been some, you know, there's been a lot of investment since then.

00:14:31.500 --> 00:14:42.480
But this stems from, I think, an issue that is common in many communities and, you know, also, like, many startups.

00:14:42.480 --> 00:14:50.800
Like, there are many contexts in which this is true, which is just that the developers are using a different environment than the preponderance of the users.

00:14:51.020 --> 00:14:55.420
So the vast majority of people who are programming in Python are programming on Windows.

00:14:55.420 --> 00:15:01.900
And very few of the people contributing to, like, the CPython code base use Windows.

00:15:01.900 --> 00:15:10.680
And that creates a disconnect around, you know, you need to be, you need to have a good understanding of what the experience is.

00:15:10.680 --> 00:15:16.400
In particular, sort of the early experience, the onboarding experience, the installation experience for the vast majority of your users.

00:15:16.400 --> 00:15:21.360
And, like, take that empathy back and invest it in the language.

00:15:21.360 --> 00:15:24.700
And so a lot of it stems from that.

00:15:24.700 --> 00:15:30.340
Just not having a lot of people regularly experiencing what it's like to be a beginner in the language on Windows.

00:15:31.840 --> 00:15:39.520
And so I think the key challenge is, A, like, attracting folks who do have that background and welcoming them into the development community.

00:15:39.520 --> 00:15:47.640
And then also just being more conscientious about and proactive about addressing that very large segment of our user base.

00:15:47.640 --> 00:15:52.520
And some of this is, so I come from sort of startup land.

00:15:52.520 --> 00:15:54.360
I've been through a series of startups and acquisitions.

00:15:54.360 --> 00:16:04.160
And I tend to think about everything in life, including the Python community, in terms of, like, a pretty standard, like, user retention funnel analysis.

00:16:04.160 --> 00:16:18.460
And if you think about it, it's like, okay, Python wants to be a language that hopefully, like, many, many people are still using for a diverse set of, you know, in many diverse areas for many years to come.

00:16:18.660 --> 00:16:24.300
And to do that, we need to be getting new developers and retaining them.

00:16:24.300 --> 00:16:30.100
And it's sort of like, at your big top of the funnel is all of these new users, most of which are on Windows.

00:16:30.100 --> 00:16:35.540
And then, you know, you get those folks to use the language, maybe in a basic way, maybe in school.

00:16:35.540 --> 00:16:38.220
You want to retain them through them using it professionally.

00:16:38.220 --> 00:16:43.740
And then you want to convert some of those folks, hopefully, into becoming active contributors back to the language and community.

00:16:43.740 --> 00:16:57.620
And the thing that we can, it's easy to, it's easy to focus on things that impact a smaller set of the funnel, if you're not really conscientious of what the broader funnel looks like.

00:16:57.620 --> 00:17:02.920
Because, like, there's a disproportionate impact for focusing on the top of the funnel, the widest part of the funnel.

00:17:02.920 --> 00:17:13.100
So, like, investments that you make that make the first five minutes of using Python better are going to have an impact on, like, hundreds of thousands of people.

00:17:13.100 --> 00:17:26.620
And then fixing, like, a particular bug that affects, like, some specific bug and some specific library potentially is still very important, but may impact a smaller number of people.

00:17:26.740 --> 00:17:34.480
Which is not to say that we shouldn't do both, but we should be conscientious as a community about ensuring that we're investing enough in the top of the funnel.

00:17:34.480 --> 00:17:42.860
Yeah, it's really interesting to view the ecosystem and lifecycle of a language through growth hacking terms.

00:17:42.860 --> 00:17:43.600
But that's really cool.

00:17:43.600 --> 00:17:44.740
Yeah.

00:17:44.740 --> 00:17:46.040
But it makes perfect sense.

00:17:46.040 --> 00:17:46.120
I can't help it.

00:17:46.120 --> 00:17:46.880
No, of course.

00:17:46.880 --> 00:17:48.160
And it makes perfect sense.

00:17:48.160 --> 00:17:49.540
You're right.

00:17:49.540 --> 00:17:50.260
There is a disconnect.

00:17:50.260 --> 00:17:55.800
I mean, if you take the time and you make, let's just focus on Windows, but it could be basically getting started anywhere.

00:17:55.800 --> 00:18:04.740
If you make getting started with Python on Windows better, you're not going to go to the conference necessarily and go, oh, that's the guy that made that better.

00:18:04.740 --> 00:18:07.080
Because everybody there, like, doesn't hit that problem.

00:18:07.080 --> 00:18:08.040
They're way past it.

00:18:08.040 --> 00:18:08.680
Right?

00:18:08.680 --> 00:18:14.420
But if you make, you know, coroutines just slightly more efficient, they might cheer when they see you or something, you know?

00:18:14.420 --> 00:18:20.120
But like you said, the people that are coming in, they feel that pain.

00:18:20.120 --> 00:18:28.300
And I've done a lot of training where, you know, there's 30 Dell and HP laptop screens or, you know, backs facing me.

00:18:28.300 --> 00:18:34.020
And there's a lot of, well, it says Python is not found when I type Python.

00:18:34.020 --> 00:18:38.520
It's like, okay, well, did you restart the command line, the command prompt after you installed it?

00:18:38.520 --> 00:18:40.600
There's just all that friction, right?

00:18:41.120 --> 00:18:41.340
Yeah.

00:18:42.100 --> 00:18:44.360
And to be clear, I'm definitely not knocking.

00:18:44.360 --> 00:18:46.280
Folks should do what they're passionate about.

00:18:46.280 --> 00:18:52.700
And if the thing that people are passionate about is, in fact, like optimizing how coroutines work, that's fantastic.

00:18:52.700 --> 00:18:54.980
It is sort of collectively as a community.

00:18:55.260 --> 00:19:05.540
We should value and we should incentivize and recognize the efforts that do impact this big part of the funnel that has historically been underserved.

00:19:05.540 --> 00:19:06.640
Yeah.

00:19:06.640 --> 00:19:08.840
So, you know, I just, I totally agree.

00:19:08.840 --> 00:19:13.960
And I guess I should recommend that people watch that video of yours, even though it is a few years ago.

00:19:13.960 --> 00:19:21.880
I'll put it in the show notes because I think it is, like you said, it's a place to have where there's sort of low-hanging fruit that can have really big impact on people.

00:19:23.100 --> 00:19:30.680
So, what do you think about things like IDEs and stuff like that that maybe do a little more hand-holding for getting people started?

00:19:30.680 --> 00:19:43.900
This episode is brought to you by Hired.

00:19:43.900 --> 00:19:50.360
Hired is a two-sided, curated marketplace that connects the world's knowledge workers to the best opportunities.

00:19:50.920 --> 00:19:59.520
Each offer you receive has salary and equity presented right up front and you can view the offers to accept or reject them before you even talk to the company.

00:19:59.520 --> 00:20:05.880
Typically, candidates receive five or more offers in just the first week and there are no obligations, ever.

00:20:05.880 --> 00:20:07.980
Sounds pretty awesome, doesn't it?

00:20:07.980 --> 00:20:10.020
Well, did I mention there's a signing bonus?

00:20:10.020 --> 00:20:14.140
Everyone who accepts a job from Hired gets a $2,000 signing bonus.

00:20:14.620 --> 00:20:18.460
And as Talk Python listeners, it gets way sweeter.

00:20:18.460 --> 00:20:26.020
Use the link Hired.com slash Talk Python To Me and Hired will double the signing bonus to $4,000.

00:20:26.020 --> 00:20:27.760
Opportunities knocking.

00:20:27.760 --> 00:20:31.360
Visit Hired.com slash Talk Python To Me and answer the call.

00:20:41.360 --> 00:20:47.500
I mean, in general, I think that that's great for people where it works and for environments where it works.

00:20:47.500 --> 00:20:49.400
And it's certainly very common in schools.

00:20:49.400 --> 00:20:51.120
I have a...

00:20:51.120 --> 00:20:58.120
I don't actually know if this is a majority opinion or a minority opinion, but I have a strong opinion on this, which is that I think that...

00:20:59.740 --> 00:21:02.020
So in general, with Python, it's like there's one...

00:21:02.020 --> 00:21:04.340
Explicitness is better than implicitness.

00:21:04.340 --> 00:21:08.640
And there's hopefully one obvious and good and correct way to do things.

00:21:08.640 --> 00:21:14.780
One of the places where we don't sort of adhere to that philosophy is in how we recommend that people get started.

00:21:15.280 --> 00:21:30.700
And I actually think that there's an opportunity for us to be more opinionated with new learners about how to set up their environment in a way that will sort of maximize their chance of being successful new learners of the language.

00:21:31.340 --> 00:21:32.420
Like, if you currently...

00:21:32.420 --> 00:21:41.240
Like, if you go to Python.org right now and you, like, try to follow the instructions for how to get your development environment set up, it's like there are many forking recommendations.

00:21:41.240 --> 00:21:44.260
And we try to be this sort of neutral place.

00:21:44.260 --> 00:21:51.260
And I understand why there's a temptation to present yourself as, like, neutral and providing all the options.

00:21:51.400 --> 00:21:56.020
But the problem is that a new learner doesn't know enough to know what the...

00:21:56.020 --> 00:21:58.140
Like, to determine what the right answer is.

00:21:58.140 --> 00:22:02.100
And so, like, being opinionated about potentially an IDE...

00:22:02.100 --> 00:22:03.280
I mean, maybe the answer is an IDE.

00:22:03.280 --> 00:22:04.140
Maybe it's not.

00:22:04.140 --> 00:22:09.360
And just, like, a super vanilla, like, sort of terminal-based education is okay.

00:22:09.360 --> 00:22:14.940
But I think we should be considering having a more opinionated stance on what development environment we recommend for new learners.

00:22:14.940 --> 00:22:17.140
Yeah, I think that makes a lot of sense.

00:22:17.140 --> 00:22:25.960
I mean, you don't want to alienate some significant portion of the population saying, use EMAX, don't use EMAX, use PyCharm, don't use PyCharm, whatever, right?

00:22:25.960 --> 00:22:33.260
But when you're new, recommendations, if you say, well, here's four good choices, and then, like you say, it's just...

00:22:33.260 --> 00:22:33.720
It's tough.

00:22:33.720 --> 00:22:38.720
So, do this, get started, then make your choices down the road or something.

00:22:38.720 --> 00:22:42.340
Yeah, I'm not really sure what the choice is or the right choice is either, but...

00:22:42.340 --> 00:22:43.780
But I think it's a conversation worth having.

00:22:43.780 --> 00:22:45.660
Yeah, I definitely think it's a conversation worth having.

00:22:46.500 --> 00:22:51.280
So, one of the things you did, as you said, for a while, you were the PSF director.

00:22:51.280 --> 00:22:54.580
So, what does the director do, and what's that like?

00:22:54.580 --> 00:22:56.980
I bet that's a crazy role to have.

00:22:56.980 --> 00:23:01.660
And so, and just to clarify, there are several directors that work together, sort of as a committee.

00:23:01.660 --> 00:23:05.260
And so, this is the...

00:23:05.260 --> 00:23:08.200
So, the Python Software Foundation is a 501c3 nonprofit.

00:23:08.680 --> 00:23:11.180
And it's sort of the stewarding arm for the community.

00:23:11.180 --> 00:23:16.960
And it also, as this nonprofit, has the ability to collect and disperse funds towards investments in the community.

00:23:17.700 --> 00:23:25.220
So, a big part of what we do is to sort of get funding and then reinvest it in the community in a smart way.

00:23:25.220 --> 00:23:27.600
We also do things like underwrite PyCon.

00:23:28.520 --> 00:23:30.580
So, those are the two big things that we do.

00:23:30.580 --> 00:23:35.800
And there's also sort of an aspect with this investment of...

00:23:35.800 --> 00:23:37.160
And so, like, what are you investing in?

00:23:37.160 --> 00:23:41.580
You want to invest in accelerating development of the language.

00:23:41.920 --> 00:23:47.200
Invest in development of the popular libraries and maybe new libraries.

00:23:47.200 --> 00:23:48.020
New initiatives.

00:23:48.020 --> 00:23:52.520
Not new anymore, but, you know, back in the day, we gave a big grant to PyPy, for example.

00:23:52.520 --> 00:24:00.560
So, you know, potentially new initiatives that would accelerate the language or broaden the set of domains in which Python is an excellent language to use.

00:24:00.560 --> 00:24:08.420
And then also investing in, like, local community initiatives, which includes everything from local workshops to regional Python conferences.

00:24:08.420 --> 00:24:09.680
Okay.

00:24:09.680 --> 00:24:10.760
Yeah, that's really cool.

00:24:10.960 --> 00:24:13.940
Does trying to promote Python 3 fall under that banner?

00:24:13.940 --> 00:24:15.660
Yes.

00:24:15.660 --> 00:24:16.640
Yes, I would say yes.

00:24:16.640 --> 00:24:17.620
We tend to...

00:24:17.620 --> 00:24:24.620
I mean, so, just to be clear, the PSF doesn't try to dictate sort of details of the language.

00:24:24.620 --> 00:24:35.820
But definitely, Python 3 is important, A, because it's the future of Python, and B, because it's important that as a community, we communicate a clear direction externally.

00:24:35.820 --> 00:24:40.940
Like, it can be very confusing, again, potentially to new learners and maybe companies that are thinking about,

00:24:40.940 --> 00:24:43.240
what languages they want to use for a new software stack.

00:24:43.240 --> 00:24:48.780
Like, they want to be confident that the Python community knows what it's doing and has a clear sort of future direction.

00:24:48.940 --> 00:24:54.360
So, to the extent that that is a part of sort of the outward communication mission of the PSF, yeah, that's definitely important to us.

00:24:54.620 --> 00:24:56.620
And we also, like, we have funded...

00:24:56.620 --> 00:25:01.200
We've given away grants to port, like, major libraries to Python 3 and things like that.

00:25:01.200 --> 00:25:01.960
Right, sure.

00:25:01.960 --> 00:25:13.740
I had Chris McDonough on the show, and he's talked about, you know, you guys, I don't know if you were involved directly, but, you know, PSF sort of nudged him to get Pyramid to run on Python 3, where he was...

00:25:13.740 --> 00:25:14.140
Yeah, totally.

00:25:14.140 --> 00:25:15.040
You know, not exactly.

00:25:15.040 --> 00:25:17.680
Rushing in to get it done, because he was actually working.

00:25:17.680 --> 00:25:19.780
Things like that.

00:25:19.780 --> 00:25:23.660
Right now, professionally, you're working at Dropbox, right?

00:25:23.660 --> 00:25:24.840
Out in San Francisco?

00:25:24.840 --> 00:25:25.920
Mm-hmm.

00:25:26.000 --> 00:25:27.960
That must be a pretty awesome place to be.

00:25:27.960 --> 00:25:29.240
Yeah, it's been a lot of fun.

00:25:29.240 --> 00:25:40.020
So, as I said earlier, or as I alluded to earlier, I come from sort of a series of startups and acquisitions, and the latest startup and acquisition have landed me at Dropbox.

00:25:40.020 --> 00:25:48.780
And I had been in Boston for 10 years coming out of university, and sort of the inexorable pull of Silicon Valley finally got a hold of us.

00:25:48.780 --> 00:25:50.180
We all moved out west.

00:25:50.180 --> 00:25:52.640
And, yeah, so I'm a director of engineering at Dropbox.

00:25:52.640 --> 00:25:59.640
I run the engineering group that is responsible for all of the sort of platform software.

00:25:59.640 --> 00:26:03.480
So, this includes the desktop clients, our mobile apps, and web as a platform.

00:26:03.480 --> 00:26:06.160
Incidentally, Guido is a part of this group.

00:26:06.160 --> 00:26:07.420
Yeah, that's awesome.

00:26:07.420 --> 00:26:09.320
So, what's it like to work with him?

00:26:09.320 --> 00:26:10.880
Yeah, I mean, he's...

00:26:10.880 --> 00:26:12.140
Well, if you've ever...

00:26:12.140 --> 00:26:18.080
For anybody who lurks on the Python dev mailing lists, it's about like that, but at work.

00:26:18.460 --> 00:26:23.460
But, you know, Guido has, you know, he has such expertise with...

00:26:23.460 --> 00:26:26.420
Like, when you think about, like, what developing a language...

00:26:26.420 --> 00:26:38.720
Like, what skills developing a language entails, those are skills that are incredibly useful when architecting complex systems, like thinking about abstractions that need to be very long-lived, perhaps with API design, for example.

00:26:39.220 --> 00:26:41.540
So, you know, he's a very...

00:26:41.540 --> 00:26:45.340
He brings a lot of excellent expertise to the table at Dropbox.

00:26:45.340 --> 00:26:45.520
I'm sure.

00:26:45.520 --> 00:26:46.820
We also tend to get...

00:26:46.820 --> 00:26:51.300
We get into an occasional Python-related flame war, but that's par for the course.

00:26:51.300 --> 00:26:52.480
Yeah, I'm sure.

00:26:52.480 --> 00:26:57.280
Yeah, I mean, one of the really valuable skills that I can think of is, like, simplicity.

00:26:57.280 --> 00:26:58.500
Yeah.

00:26:58.500 --> 00:27:02.620
People see something that is simple, and they think, well, that must have been easy to build, because it's simple.

00:27:02.620 --> 00:27:03.700
Right.

00:27:03.700 --> 00:27:06.140
You know, that's hard with languages.

00:27:06.140 --> 00:27:07.880
That's hard with complex software.

00:27:07.880 --> 00:27:12.920
But it seems like he's at least nailed it for Python, the language.

00:27:12.920 --> 00:27:14.780
I haven't seen the Dropbox codes.

00:27:14.780 --> 00:27:17.460
I can't say for sure, but I bet that skill transfers over.

00:27:17.460 --> 00:27:19.220
Yeah, definitely.

00:27:19.680 --> 00:27:21.880
Well, and, you know, so the Dropbox desktop client is written in Python.

00:27:21.880 --> 00:27:30.500
It's one of, if not the largest, you know, pieces of desktop client software that is out in the world.

00:27:30.500 --> 00:27:31.920
You know, Dropbox has 400 million users.

00:27:31.920 --> 00:27:39.240
There aren't that many pieces of desktop software that aren't sort of bundled with an operating system distribution that have that level of user base.

00:27:39.240 --> 00:27:40.540
So that's all in Python.

00:27:40.540 --> 00:27:43.540
It's not in Python 3, although we periodically...

00:27:43.540 --> 00:27:49.540
You know, it's a very large historical code base, but we do periodically revisit, if we're going to...

00:27:49.540 --> 00:27:51.340
Make the jump to Python 3.

00:27:51.340 --> 00:27:52.800
That's super interesting.

00:27:52.800 --> 00:27:55.280
I did know that, and I thought it was great.

00:27:55.280 --> 00:27:56.640
So I'm glad you brought it up.

00:27:56.640 --> 00:28:04.420
Can you talk a little bit about, like, just, you know, the internals, the libraries you're using, how you build it, how you distribute it?

00:28:04.420 --> 00:28:07.080
Like, what's the story with that?

00:28:07.080 --> 00:28:09.960
I don't actually think that I'm allowed to.

00:28:09.960 --> 00:28:11.460
Sorry.

00:28:11.460 --> 00:28:11.540
Okay.

00:28:11.540 --> 00:28:14.040
I don't want you to do anything you can't do.

00:28:14.120 --> 00:28:21.740
But, you know, a lot of people build, you know, little utility scripts, or there's a ton of web applications and data science apps.

00:28:21.740 --> 00:28:28.360
But the sort of, here's the thing with the UI that I can ship in Python is really interesting.

00:28:28.920 --> 00:28:29.280
Yeah.

00:28:29.280 --> 00:28:30.760
Well, Python has taken us a long way.

00:28:30.760 --> 00:28:32.840
I mean, Dropbox has been around since 2007.

00:28:32.840 --> 00:28:41.500
And, you know, Python gives you this cross-platform desktop client software that you can develop against pretty rapidly.

00:28:41.500 --> 00:28:47.040
You know, we've certainly benefited, I think, quite a bit from making this early language choice.

00:28:47.040 --> 00:28:48.360
I mean, there are pros and cons.

00:28:48.360 --> 00:28:51.960
Like, there are definitely alternative models for desktop client development, but it's definitely served us pretty well.

00:28:52.480 --> 00:28:52.700
Yeah.

00:28:52.700 --> 00:28:55.320
It seems like it has served you guys really well.

00:28:55.320 --> 00:29:03.980
And when I think of companies that are, like, making major use of Python, well, Dropbox, maybe along with Google and a few others, is right there at the top.

00:29:03.980 --> 00:29:08.440
Can you give us kind of a sense of, like, all the things you're doing with Python there?

00:29:08.440 --> 00:29:10.040
Or you and other people, obviously.

00:29:10.040 --> 00:29:17.300
In addition to our desktop client being written in Python, the majority of our server-side code is in Python as well.

00:29:17.300 --> 00:29:19.200
So we pretty much use it for everything.

00:29:19.200 --> 00:29:20.460
There's a little bit of Go.

00:29:20.640 --> 00:29:25.240
I mean, our mobile apps are written in the languages you would expect, but Python is definitely the majority language.

00:29:25.240 --> 00:29:30.620
So do you want to talk a little bit about some of the open source projects you work on?

00:29:30.620 --> 00:29:33.300
I saw your core contributor to Twisted, for example.

00:29:33.300 --> 00:29:34.980
Yeah.

00:29:34.980 --> 00:29:45.120
So, and I have to admit that sort of there's an ebb and flow to how much of my time is spent on sort of the community and the people parts versus the technical parts.

00:29:45.520 --> 00:29:51.060
Yeah, so I, the first open source project that I ever contributed to was Twisted.

00:29:51.060 --> 00:29:55.940
It came out of an internship that I was doing at VMware.

00:29:55.940 --> 00:29:57.900
I was using Twisted.

00:29:57.900 --> 00:30:02.120
So Twisted is an, I mean, maybe everybody knows it, but Twisted is an asynchronous networking library written in Python.

00:30:02.160 --> 00:30:07.980
And I was using some of the primitives and some of the documentation was a little unclear to me.

00:30:08.420 --> 00:30:15.300
And I thought, oh, hey, this would be a great opportunity to, like, try my hand at making my first ever open source contribution.

00:30:15.800 --> 00:30:19.360
So I created a little tiny diff for, like, a little bit of a documentation change.

00:30:19.360 --> 00:30:27.920
And, like, very nervously, I, like, quadruple checked all of the instructions, like, contribution instructions.

00:30:27.920 --> 00:30:33.720
And then, like, you know, opened up a ticket and, like, quadruple checked all of the ticket fields.

00:30:33.720 --> 00:30:37.420
And then, like, sort of sweat a little bit with my hand hovering over the submit button.

00:30:37.420 --> 00:30:38.840
Like, finally press submit.

00:30:38.840 --> 00:30:40.220
And, of course, everyone was super nice.

00:30:40.500 --> 00:30:46.440
So Glyph, who was the creator of Twisted, who incidentally, this is what San Francisco is like, incidentally, he lives in my apartment complex now.

00:30:46.440 --> 00:30:47.120
Oh, wow.

00:30:47.120 --> 00:30:48.260
What a small world, huh?

00:30:48.260 --> 00:30:48.600
Right.

00:30:48.600 --> 00:30:56.620
So Glyph, who's the creator of Twisted, and a bunch of other folks were super friendly, very willing to handhold me through the process.

00:30:56.620 --> 00:31:02.060
You know, I ended up making some more small documentation contributions.

00:31:02.060 --> 00:31:04.760
Like, ended up sort of getting pretty involved in the community.

00:31:04.760 --> 00:31:07.140
Ended up becoming a core committer.

00:31:07.140 --> 00:31:09.800
I ended up writing a book about it with O'Reilly.

00:31:09.800 --> 00:31:16.940
So that first little, like, nervous documentation contribution ended up being a very important...

00:31:16.940 --> 00:31:24.160
A, it was very important for me because that was such a positive first experience with contributing to an open source project.

00:31:24.160 --> 00:31:27.600
Like, I want everyone to have that positive first experience.

00:31:27.600 --> 00:31:28.580
It was very important for me.

00:31:28.580 --> 00:31:33.300
And hopefully, also, it's been a good investment for Twisted, given that I've managed to stick around.

00:31:33.300 --> 00:31:36.000
So that's one of them.

00:31:36.000 --> 00:31:38.280
And then OpenHatch is...

00:31:38.280 --> 00:31:44.820
Well, it's both a website and a nonprofit dedicated to lowering the barriers to entry for open source contribution.

00:31:44.820 --> 00:31:47.560
And I've been fairly involved with them as well.

00:31:47.560 --> 00:31:51.340
And then I just, like, miscellaneous patches here and there to various other projects.

00:31:51.340 --> 00:31:51.620
Yeah.

00:31:51.620 --> 00:31:52.280
Core Python.

00:31:52.280 --> 00:31:53.200
Yeah, that's really cool.

00:31:53.200 --> 00:31:55.940
I think that's one of the nice things about the Python community.

00:31:56.020 --> 00:31:58.320
They seem pretty welcoming to new folks.

00:31:58.320 --> 00:32:04.660
Whereas, you know, if that was like a C++ project, they might have, I don't know, not been as welcoming, right?

00:32:04.660 --> 00:32:07.020
It could have been, oh, you did this wrong or whatever.

00:32:07.960 --> 00:32:18.940
Well, I hope that all language communities and all sort of libraries are recognizing how important it is to provide a good initial experience for potential contributors.

00:32:18.940 --> 00:32:20.520
Because it's so important for you.

00:32:20.520 --> 00:32:30.440
Like, if you want your language or your library to continue to evolve and be popular, like, you need to be ingesting new contributors who can pick up some of the development.

00:32:31.440 --> 00:32:33.100
So hopefully people are learning that.

00:32:33.100 --> 00:32:34.400
That's for sure.

00:32:34.400 --> 00:32:42.340
And I think things like Git and GitHub and Bitbucket are really sort of opening the door to make this feel, you know, less threatening as well, right?

00:32:42.340 --> 00:32:49.280
You're not cruising around SourceForge trying to use some old clunky tool to get a check-in to go in or something.

00:32:49.280 --> 00:32:50.460
Yeah, definitely.

00:32:50.460 --> 00:32:53.140
Do you have a favorite open source project?

00:32:53.140 --> 00:32:55.220
Whether you contribute to it or not.

00:32:55.220 --> 00:32:58.380
Geez.

00:32:58.760 --> 00:33:01.780
Or how about one, you know, one or two of your favorites?

00:33:01.780 --> 00:33:05.100
You don't necessarily have to exclude, be exclusive.

00:33:05.100 --> 00:33:09.580
I mean, that's, I feel like I can answer this question on a number of different levels.

00:33:09.580 --> 00:33:15.060
So I have used Django at this point through several startups.

00:33:15.060 --> 00:33:21.640
And I think that Django was a very important thing to have flourished in the Python community.

00:33:21.640 --> 00:33:32.880
Like for, you know, it really was a big part of opening up Python being a serious language for many types of website developments.

00:33:32.880 --> 00:33:36.520
So A, on a personal level, having used it quite a bit.

00:33:36.520 --> 00:33:40.520
And then B, because I think it's had like a very material positive impact on the community.

00:33:40.520 --> 00:33:42.760
That's probably a choice.

00:33:42.760 --> 00:33:47.100
Yeah, I would say Django definitely has had a really big impact.

00:33:47.180 --> 00:33:48.220
So that's a good one.

00:33:48.220 --> 00:33:49.180
Yeah.

00:33:49.180 --> 00:33:51.640
You know, Python itself.

00:33:51.640 --> 00:33:53.840
But that's kind of assumed, right?

00:33:53.840 --> 00:33:54.800
Sure.

00:33:54.800 --> 00:33:55.320
Yeah, yeah.

00:33:55.320 --> 00:34:11.620
And having contributed to CPython, my challenge for us would be that I think we haven't quite cracked the nut on getting really good, sustained new developers to core Python.

00:34:11.620 --> 00:34:15.480
And that's a thing that we should, that's nothing we do need to crack.

00:34:15.480 --> 00:34:16.340
Yeah, absolutely.

00:34:16.340 --> 00:34:21.320
And Guido actually made a, you know, that a key part of his keynote at PyCon, right?

00:34:21.320 --> 00:34:22.120
Yeah.

00:34:22.120 --> 00:34:22.760
Yeah.

00:34:22.760 --> 00:34:24.880
So it's tough, though.

00:34:24.880 --> 00:34:28.660
You know, it's a very different world than Python.

00:34:28.660 --> 00:34:31.280
And people are drawn to Python, the language.

00:34:31.280 --> 00:34:38.500
And then you go look at CPython, and it's, to some degree, a totally different type of programming and skill set and so on.

00:34:38.900 --> 00:34:39.340
Yeah.

00:34:39.340 --> 00:34:41.280
One, it's a very mature project.

00:34:41.280 --> 00:34:44.640
Just in terms of it's been around for a while.

00:34:44.640 --> 00:34:48.360
It, you know, it's, it is the language.

00:34:48.360 --> 00:34:54.200
So sort of the commitment to quality needs to be very high.

00:34:54.200 --> 00:35:00.840
Like, we can't sort of regress, regress functionality for the hundreds of thousands of people who develop against it.

00:35:00.840 --> 00:35:05.920
And then, you know, millions of people who end up sort of using the end software that's developed.

00:35:05.920 --> 00:35:07.640
So it's like, it's very mature.

00:35:07.640 --> 00:35:09.600
There's like a fair amount of process.

00:35:09.600 --> 00:35:11.420
And that's all important and necessary.

00:35:11.420 --> 00:35:16.420
But figuring out how to balance that, again, making it an accessible environment for new contributors.

00:35:16.940 --> 00:35:17.340
Yeah, sure.

00:35:17.340 --> 00:35:21.820
I mean, if you're writing software used by that many people, you've got to deal with every edge case.

00:35:21.820 --> 00:35:23.060
Be just super careful.

00:35:23.060 --> 00:35:26.820
And then on top of that, it's C, which means it's a little harder to do.

00:35:26.820 --> 00:35:42.300
This episode is brought to you by OpBeat.

00:35:42.300 --> 00:35:45.660
OpBeat is application monitoring for developers.

00:35:45.660 --> 00:35:50.420
It's performance monitoring, error logging, release tracking, and workflow in one simple product.

00:35:50.420 --> 00:35:56.700
OpBeat is integrated with your code base and makes monitoring and debugging of your production apps faster.

00:35:56.700 --> 00:35:57.880
And your code better.

00:35:57.880 --> 00:36:01.400
OpBeat is free for an unlimited number of users.

00:36:01.400 --> 00:36:04.340
And until recently, it's only been available for Django developers.

00:36:04.340 --> 00:36:07.420
But I'm happy to tell you they are launching Flask support.

00:36:07.420 --> 00:36:13.320
Visit opbeat.com slash Flask to be amongst the first to join the Flask private beta.

00:36:23.460 --> 00:36:32.180
I think it's important that people that work in Python kind of at least have a conceptual understanding of what's happening down in the CPython layer.

00:36:32.180 --> 00:36:37.180
There's a guy named Philip Guau who did a really cool thing.

00:36:37.180 --> 00:36:43.800
He took his graduate class that studied the CPython code base and then took that and put it on YouTube.

00:36:44.920 --> 00:36:50.620
So there's this thing called, he called it the CPython 10-hour code walk or something like that.

00:36:50.620 --> 00:36:53.020
And then I had him on show 22 to talk more about it.

00:36:53.020 --> 00:36:57.320
So I totally recommend people check that out if they want to know more about CPython.

00:36:57.320 --> 00:36:58.720
Yeah, totally.

00:36:58.720 --> 00:37:00.940
And I also, this is such a who's you.

00:37:01.660 --> 00:37:02.700
So I know Philip.

00:37:02.700 --> 00:37:06.080
We were actually, well, I actually know him through a couple of channels.

00:37:06.080 --> 00:37:10.000
But then we were at this, how would you describe it?

00:37:10.000 --> 00:37:15.080
So there's a community that used to be called Hacker School that is now called Recurse Center.

00:37:15.080 --> 00:37:19.460
Which is, it's sort of like an artist in residence program for programmers.

00:37:19.460 --> 00:37:26.980
It's sort of, it's a fairly unstructured environment where you go and you sort of invest in your programming skills for several months.

00:37:27.780 --> 00:37:33.100
And I have sort of been a visiting speaker at that program, as has Philip.

00:37:33.100 --> 00:37:36.640
So, and we've actually crossed paths physically there as well as on the internet.

00:37:36.640 --> 00:37:38.920
So small world as per usual.

00:37:38.920 --> 00:37:40.200
It definitely is.

00:37:40.200 --> 00:37:42.720
Where was, if that was a thing in person, where was that?

00:37:42.720 --> 00:37:46.140
Oh, so Hacker School and now Recurse Center is in New York.

00:37:46.140 --> 00:37:50.860
So, you know, I brought up your video, the Choose Your Own Python Adventure.

00:37:50.860 --> 00:37:56.900
Are there other videos that are out on YouTube or other places we can find that people should check out if they're interested in more?

00:37:57.060 --> 00:37:58.260
Like, of me?

00:37:58.260 --> 00:38:02.520
Yeah, I mean, of like talks that you've given that you think, hey, people should check this out.

00:38:02.520 --> 00:38:03.800
Or I guess other ones as well.

00:38:03.800 --> 00:38:09.460
I mean, so many of the talks that I've given at various Python conferences are online.

00:38:09.460 --> 00:38:11.680
And you can find them on PyVideo.

00:38:11.680 --> 00:38:22.440
But maybe one of the most gratifying things for me is, so for a couple of years at PyCon US, I did an intro to Python tutorial.

00:38:22.840 --> 00:38:27.800
So, you know, it's a three-hour tutorial for absolute beginners as soon as no prior programming experience.

00:38:27.800 --> 00:38:35.480
Like, we do, we walk everyone through everything, like, from the installation and environment setup on through the first couple of hours in the language.

00:38:36.040 --> 00:38:45.360
And that's, I've read something like 200,000 people have watched those videos, which is, like, that's a lot of people.

00:38:45.360 --> 00:38:56.880
Like, that's incredibly gratifying to me that there are that many people who were, like, wanted to learn Python and then took the time to have that first experience watching, you know, like, sort of watching that PyCon tutorial.

00:38:57.440 --> 00:38:59.120
So that's the one that I maybe was proud of.

00:38:59.120 --> 00:39:00.260
Okay, that's really cool.

00:39:00.260 --> 00:39:06.900
I mean, just the thought that you've, you know, influenced that many people down that path has got to be gratifying.

00:39:06.900 --> 00:39:08.180
Yeah.

00:39:08.180 --> 00:39:13.220
And I, you know, I really, like, the beginners are where my heart is.

00:39:13.480 --> 00:39:22.560
And I think some of that comes from being, I mean, comparatively, sort of, comparatively, quote, unquote, late to learning how to program.

00:39:22.560 --> 00:39:24.340
So not starting until university.

00:39:24.340 --> 00:39:34.620
And then being, you know, honestly, being surrounded at school by people who had been doing it for a lot longer and really sort of feeling like I was catching up for a long time.

00:39:34.700 --> 00:39:48.700
I think that built up a lot of empathy that has stayed with me through the years around, like, what it's like to be a new programmer, what it's like when everything maybe feels foreign and you maybe are surrounded by people who it feels like have been doing this for longer than you.

00:39:48.700 --> 00:39:51.820
And it's really wanting to provide an excellent experience for those people.

00:39:51.820 --> 00:39:53.280
That's really interesting.

00:39:53.280 --> 00:39:55.080
I hadn't really thought of it that way before.

00:39:55.080 --> 00:39:58.720
But I didn't get into programming until, like, a ways into college.

00:39:58.720 --> 00:40:04.380
And, you know, super deep into it until kind of my senior year almost in college.

00:40:04.540 --> 00:40:11.380
And I think it does help you teach people who are new because the sort of pain of learning is fresh.

00:40:11.380 --> 00:40:14.660
Like, if you learn it when you're 10 years old, it's like learning language.

00:40:14.660 --> 00:40:16.180
Like, I don't remember how I learned English.

00:40:16.180 --> 00:40:17.200
I just know English.

00:40:17.200 --> 00:40:17.860
Right?

00:40:17.860 --> 00:40:20.700
So I feel totally unqualified to teach English.

00:40:20.700 --> 00:40:25.200
But I do remember learning programming and all the mistakes I made and so on.

00:40:25.200 --> 00:40:27.100
So that's quite an insight.

00:40:27.100 --> 00:40:30.340
What else would you like to talk about while you're on the show?

00:40:30.340 --> 00:40:33.240
I think there's maybe a call to action here.

00:40:33.240 --> 00:40:33.920
Yeah, absolutely.

00:40:34.380 --> 00:40:34.860
Listeners.

00:40:34.860 --> 00:40:39.120
Well, and I'm not sure, you know, they're probably listeners from many, many backgrounds.

00:40:39.120 --> 00:40:44.980
But I would encourage everyone to think about sort of what they get out of Python, the language and community.

00:40:44.980 --> 00:40:52.480
And to consider, if you're not already, giving back in at least one way, either technically or in a more community-oriented way.

00:40:52.900 --> 00:41:05.320
And if that is, like, taking the plunge and making your first open source contribution, if that's volunteering with your user group at an upcoming workshop, you know, whatever it might look like.

00:41:05.420 --> 00:41:14.860
I would definitely, you know, one of the important things about Python is that it is almost entirely community-driven.

00:41:15.300 --> 00:41:21.840
There is not a giant company or consortium behind the language and community.

00:41:22.640 --> 00:41:27.440
Most of the conferences are volunteer-driven.

00:41:27.440 --> 00:41:34.580
And so it really is, like, sort of the success of the community and requires us all working together to drive the language and community forward.

00:41:34.580 --> 00:41:45.040
So I'd encourage everyone sort of to take that opportunity seriously and, you know, pick at least one thing that you'd want to get, that you'd want to contribute by the end of the year and go ahead and do it.

00:41:45.440 --> 00:41:46.800
Yeah, that's a great call to action.

00:41:46.800 --> 00:41:48.420
And I definitely second that.

00:41:48.420 --> 00:41:51.380
I'll throw a few more ideas out there in that vein.

00:41:51.380 --> 00:41:54.200
Hour of Code is coming up in December.

00:41:54.200 --> 00:41:56.660
You know, volunteer at your local school.

00:41:56.660 --> 00:41:58.420
It's surprisingly easy.

00:41:58.420 --> 00:42:02.540
There's actually a lot of Python sort of online Hour of Code-focused things.

00:42:02.540 --> 00:42:10.440
So, you know, you could maybe help push a kid in a direction that they start down the programming path where they might not have otherwise.

00:42:10.440 --> 00:42:14.860
Last year, I volunteered at my daughter's elementary school.

00:42:14.860 --> 00:42:18.120
And we did programming for first, second, third, fourth, and fifth grade.

00:42:18.120 --> 00:42:20.080
We did a whole bunch of little classes throughout the week.

00:42:20.080 --> 00:42:26.880
And then three or four months later, I saw a kid who was in third grade walking to school with a JavaScript book.

00:42:26.880 --> 00:42:28.940
And I talked to his dad.

00:42:28.940 --> 00:42:31.340
And he said, yeah, that's because he did that Hour of Code thing with you.

00:42:31.340 --> 00:42:32.100
How awesome is that?

00:42:32.100 --> 00:42:32.720
Oh, that's awesome.

00:42:32.720 --> 00:42:33.120
Right?

00:42:33.120 --> 00:42:36.220
So, I mean, that's, like, a few hours once a year you can do that.

00:42:36.220 --> 00:42:44.600
And if you learn something, you're exploring some new library and you're having a hard time finding documentation or it didn't seem clear, record a video and put it on YouTube.

00:42:44.600 --> 00:42:45.040
Right?

00:42:45.040 --> 00:42:48.340
Of what you figured out and just, like, to teach somebody how to get started.

00:42:48.340 --> 00:42:48.600
Right?

00:42:48.600 --> 00:42:49.880
A lot of ways to get back.

00:42:49.880 --> 00:42:52.520
Jessica, let me ask you a few questions.

00:42:52.520 --> 00:42:54.960
Put you slightly on the spot before I let you go.

00:42:54.960 --> 00:42:55.060
Sure.

00:42:55.060 --> 00:42:55.740
Yeah.

00:42:55.740 --> 00:43:00.700
A question I always ask my guests at the end of the show is, what's your favorite editor?

00:43:00.700 --> 00:43:02.760
If you're going to write some Python code, what do you open up?

00:43:02.760 --> 00:43:03.360
Sure.

00:43:03.360 --> 00:43:05.420
I mean, I'm an Emacs user through and through.

00:43:05.420 --> 00:43:06.020
Yeah?

00:43:06.020 --> 00:43:08.300
Learned it at MIT and that was that?

00:43:09.080 --> 00:43:09.400
Yep.

00:43:09.400 --> 00:43:09.980
Pretty much.

00:43:09.980 --> 00:43:13.440
Hey, you can, look, you can run a web browser inside of Emacs.

00:43:13.440 --> 00:43:14.540
Why would you not want to do that?

00:43:14.540 --> 00:43:15.400
Of course.

00:43:15.400 --> 00:43:17.820
That's awesome.

00:43:17.820 --> 00:43:24.680
And then, you know, there's so many awesome packages out on PyPI that people can just go and grab, you know.

00:43:24.680 --> 00:43:30.160
What are some of the ones that you think people maybe don't know about that you'd like to highlight or talk about?

00:43:30.160 --> 00:43:34.200
Gosh, I think my answers to this are probably, unfortunately, quite niche.

00:43:34.200 --> 00:43:40.720
There are lots of, there are libraries that facilitate, how do I even describe this?

00:43:40.720 --> 00:43:45.380
I do, I participate in a lot of capture the flag events.

00:43:45.380 --> 00:43:52.780
And so there are a lot of like Python bindings for various types of like program introspection that you would do.

00:43:53.340 --> 00:44:00.780
Like if you want to disassemble something and then like trace flows to the program, there are like there are Python libraries that facilitate that.

00:44:00.780 --> 00:44:04.400
So like where, or to automate some of those processes.

00:44:04.400 --> 00:44:12.520
So where you might use like IDA pro or whatever to be disassembling and analyzing a binary for a capture the flag event.

00:44:12.520 --> 00:44:14.420
Like you can actually do a lot of this stuff in Python.

00:44:14.420 --> 00:44:18.120
But that's like a super niche answer that is maybe not what you were going for.

00:44:18.520 --> 00:44:19.580
No, that's good though.

00:44:19.580 --> 00:44:22.720
I mean, everybody has their own specialty and it's cool.

00:44:22.720 --> 00:44:27.740
It's like, otherwise we'd hear NumPy, we'd hear requests, we'd hear SQLAlchemy.

00:44:27.740 --> 00:44:28.520
Yeah, right.

00:44:28.520 --> 00:44:30.940
I mean, so that's exactly what I was looking for really.

00:44:30.940 --> 00:44:38.020
Although the other thing I would say is that it's very, very cool that there are such strong,

00:44:38.020 --> 00:44:42.020
there are such strong communities around certain various disciplines.

00:44:42.700 --> 00:44:44.380
And that's very exciting for me.

00:44:44.380 --> 00:44:50.540
So it's like astronomers have all kinds of like super sophisticated astronomy focused packages on PyPI.

00:44:50.540 --> 00:44:58.460
Like basically all of the science disciplines for like finance, there are a bunch of like very sophisticated Python packages.

00:44:58.460 --> 00:45:04.860
And it's like the fact that we've gotten to that level of specialization and like the ability to support these domains in this very sophisticated way.

00:45:04.860 --> 00:45:06.280
I think that is very cool.

00:45:06.280 --> 00:45:06.660
That is.

00:45:06.660 --> 00:45:07.140
Yeah, right.

00:45:07.140 --> 00:45:09.740
That's an absolutely huge win for the Python community.

00:45:09.740 --> 00:45:15.960
And I think it's just accelerating the diversity of people coming from these different disciplines.

00:45:15.960 --> 00:45:16.780
Yeah, that's great.

00:45:16.780 --> 00:45:18.580
Final call to action.

00:45:18.580 --> 00:45:22.780
People get out there, contribute, donate your time, give a little back.

00:45:22.780 --> 00:45:24.640
Jessica, thanks for being on the show.

00:45:24.640 --> 00:45:26.360
Thank you so much for having me.

00:45:26.360 --> 00:45:27.000
Yeah, you bet.

00:45:27.000 --> 00:45:27.560
Talk to you later.

00:45:27.560 --> 00:45:31.640
This has been another episode of Talk Python To Me.

00:45:31.640 --> 00:45:33.520
Today's guest was Jessica McKellar.

00:45:33.520 --> 00:45:36.120
And this episode has been sponsored by Hired and Optbeat.

00:45:36.120 --> 00:45:38.020
Thank you guys for supporting the show.

00:45:38.900 --> 00:45:40.960
Hired wants to help you find your next big thing.

00:45:40.960 --> 00:45:49.700
Visit Hired.com slash Talk Python To Me to get five or more offers with salary and equity presented right up front and a special listener signing bonus of $4,000.

00:45:49.700 --> 00:45:54.300
Optbeat is mission control for your Python web applications.

00:45:54.300 --> 00:45:59.380
Keep an eye on errors, performance, profiling, and more for your Django and Flask web apps.

00:46:00.020 --> 00:46:05.980
You can find the links from today's show at talkpython.fm/episodes slash show slash 30.

00:46:05.980 --> 00:46:08.460
Be sure to subscribe to the show.

00:46:08.460 --> 00:46:10.540
Open your favorite podcatcher and search for Python.

00:46:10.540 --> 00:46:11.720
We should be right at the top.

00:46:11.720 --> 00:46:15.520
You can also find the iTunes and direct RSS feeds in the footer of the website.

00:46:15.520 --> 00:46:20.900
Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

00:46:21.600 --> 00:46:24.680
You can hear his entire song on talkpython.fm.

00:46:24.680 --> 00:46:27.360
This is your host, Michael Kennedy.

00:46:27.360 --> 00:46:28.620
Thanks for listening, everyone.

00:46:28.620 --> 00:46:30.620
Smix, take us out of here.

00:46:30.620 --> 00:46:32.540
Staying with my voice.

00:46:32.540 --> 00:46:34.340
There's no norm that I can fill within.

00:46:34.340 --> 00:46:35.520
Haven't been sleeping.

00:46:35.520 --> 00:46:37.160
I've been using lots of rest.

00:46:37.160 --> 00:46:40.000
I'll pass the mic back to who rocked it best.

00:46:40.000 --> 00:46:51.440
I'll pass the mic back to who rocked it best.

00:46:51.440 --> 00:46:51.940
you

00:46:51.940 --> 00:46:53.940
.

