WEBVTT

00:00:00.001 --> 00:00:04.500
The past few years have seen an explosion of IoT devices. Many of these are for the so-called

00:00:04.500 --> 00:00:09.580
smart home. Their true potential lies in the ability to coordinate and automate them as a

00:00:09.580 --> 00:00:15.880
group. How can your garage, Wi-Fi, Chromecast, and window shades work together automatically?

00:00:15.880 --> 00:00:20.080
Chances are these are all from different manufacturers with different protocols and

00:00:20.080 --> 00:00:25.320
apps. That's why you need something like Home Assistant. This Python-based app brings over

00:00:25.320 --> 00:00:32.480
740 devices together and allows you to observe, control, and automate them as a whole. This week,

00:00:32.480 --> 00:00:38.980
you'll meet Paulus Shouston, who created Home Assistant. This is Talk by Thinomy, episode 122,

00:00:38.980 --> 00:00:41.960
recorded July 25th, 2017.

00:00:50.640 --> 00:01:12.000
Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries, the

00:01:12.000 --> 00:01:16.620
ecosystem, and the personalities. This is your host, Michael Kennedy. Follow me on Twitter,

00:01:16.620 --> 00:01:21.520
where I'm @mkennedy. Keep up with the show and listen to past episodes at talkpython.fm,

00:01:21.520 --> 00:01:27.760
and follow the show on Twitter via at Talk Python. This episode is brought to you by Rollbar and us

00:01:27.760 --> 00:01:31.920
at Talk Python Training. Be sure to check out what we're offering during our segments. It really helps

00:01:31.920 --> 00:01:36.980
support the show. Hey, everyone. Before we get to the interview with Paulus, let me just share a quick

00:01:36.980 --> 00:01:43.860
news item with you. So last week, I was interviewed on one of the other major Python podcasts, Podcast

00:01:43.860 --> 00:01:51.480
Init, and the topic was the migration to MongoDB. So I met with Tobias Macy, and we had an hour-long

00:01:51.480 --> 00:01:58.560
conversation about why and how and so on. I migrated all the podcasts and training sites and things like

00:01:58.560 --> 00:02:05.140
that from SQLAlchemy and a relational database over to MongoDB. What went well, what didn't, lessons I

00:02:05.140 --> 00:02:10.100
learned, things like that. If this is interesting to you, just check it out at podcastinit.com, or if you

00:02:10.100 --> 00:02:15.800
subscribe to the podcast, you can find it there. Now, let's talk with Paulus about home automation.

00:02:15.800 --> 00:02:17.920
Paulus, welcome to Talk Python.

00:02:17.920 --> 00:02:19.300
Yeah, welcome. Hey.

00:02:19.300 --> 00:02:24.540
Hey, great to meet you and talk with you. I'm really excited about this project that you've created.

00:02:24.540 --> 00:02:32.160
One of the biggest, booming, growing, exciting areas is not really smartphones and devices anymore. It's

00:02:32.160 --> 00:02:38.820
internet of things and smart homes and little things that used to just be dumb widgets that we can now

00:02:38.820 --> 00:02:43.340
bring together. And really, what you built is not about the widgets, but about the bringing together,

00:02:43.340 --> 00:02:43.560
right?

00:02:43.560 --> 00:02:50.120
Yes. Yeah. The main goal of Home Assistant is to, you know, we have like, well, we call it the three

00:02:50.120 --> 00:02:56.820
pillars. We have observe, control, and automate. And the observe part is first bringing together,

00:02:56.940 --> 00:03:02.800
just knowing what's going on in the house. Control is being able to control the devices that are in

00:03:02.800 --> 00:03:08.260
your house. And then automate is based on observations, issue control commands.

00:03:08.260 --> 00:03:12.000
Yeah, that's awesome. And I'm so looking forward to chatting about it. But before we get into all

00:03:12.000 --> 00:03:15.060
the details there, tell us about your story. How do you get into programming in Python?

00:03:15.060 --> 00:03:20.680
During college, I studied, I initially studied computer science, but I actually dropped out.

00:03:21.280 --> 00:03:27.440
I was more interested in data. And so I started doing a business intelligence major. And there,

00:03:27.440 --> 00:03:32.700
I mean, you're always doing stuff with data. And I was always like using, like you're doing small

00:03:32.700 --> 00:03:37.260
projects in college all the time. And that's where I kind of like Python started to like sneak in.

00:03:37.260 --> 00:03:42.200
In the beginning, just based on what I know, how I used to learn programming, there's still a lot of PHP,

00:03:42.200 --> 00:03:49.760
but I slowly switched over to Python. And actually, when I was doing my master thesis is where I

00:03:49.760 --> 00:03:54.000
started doing a lot more Python. And that's also when home assistance started.

00:03:54.000 --> 00:03:56.600
That's cool. What was your thesis on?

00:03:56.600 --> 00:04:01.540
My thesis was on Medicaid fraud detection for the federal government here in the United States.

00:04:01.540 --> 00:04:06.340
Wow, that's really cool. That's I think there's really an untapped area in all of this

00:04:06.340 --> 00:04:12.080
medical information. It's pretty locked up, but it's starting to open up for machine learning and

00:04:12.080 --> 00:04:12.660
things like that.

00:04:12.660 --> 00:04:17.440
Yeah, I think there will be a huge potential just like even anonymized data can give us so much insight in

00:04:17.440 --> 00:04:19.640
all these things that are going on.

00:04:19.640 --> 00:04:24.420
Yeah, it's going to be cool as we get enough of this data out to actually do analysis.

00:04:24.420 --> 00:04:31.640
Okay, fraud is also good. Make sure that people who paid for the care or are paying for the care get it.

00:04:31.640 --> 00:04:32.180
That's great.

00:04:32.180 --> 00:04:37.380
Just for having this obviously unrelated to the topic of the podcast, but the fraud was actually

00:04:37.380 --> 00:04:41.320
not the people paying for the insurance. It were the doctors and the hospitals.

00:04:41.720 --> 00:04:43.540
Wow, that's kind of creepy.

00:04:43.540 --> 00:04:48.320
Medicaid is a free insurance. So those people actually didn't care how much got billed for

00:04:48.320 --> 00:04:49.260
them a lot of times.

00:04:49.260 --> 00:04:54.280
Right. They maybe didn't even know. Okay, I can see that. That's that's a little more disturbing. But yeah,

00:04:54.280 --> 00:04:58.740
good that someone's on keeping them on us. That's cool. So what do you do day to day these days?

00:04:58.740 --> 00:05:05.520
I'm a senior software engineer for Appfolio, which is a software as a service company. We provide a product

00:05:05.520 --> 00:05:11.220
for property managers to run their business in the cloud and a product for lawyers to run practice

00:05:11.220 --> 00:05:14.680
management in the cloud. And I work on the lawyer side of things. It's called my case.

00:05:14.680 --> 00:05:19.860
Okay, that's really cool. I feel like there's an untapped market. Well, not entirely untapped because

00:05:19.860 --> 00:05:25.380
you guys are doing it. But there's a big market for these super niche tool sets for just you pick

00:05:25.380 --> 00:05:31.080
your vertical and there's there's probably a not great solution for most most people, right?

00:05:31.080 --> 00:05:37.200
Yeah, definitely. And I think every so many verticals are still in like, you know,

00:05:37.200 --> 00:05:42.260
doing things with pen and paper or Excel spreadsheets for everything and being as a software as a service

00:05:42.260 --> 00:05:46.980
being able to build like an integrated solution that you know integrates everything from like,

00:05:46.980 --> 00:05:52.780
intake of clients to like billing clients to keeping track of your work sharing things with

00:05:52.780 --> 00:05:54.800
clients. There's a big opportunity.

00:05:54.800 --> 00:05:59.640
Yeah, that sounds really cool. We could definitely talk more about that. But let's let's talk about home

00:05:59.640 --> 00:06:05.080
automation. So you've been working on home assistant for about four years. And before we get into home

00:06:05.080 --> 00:06:10.700
assistant, I'd kind of like to get your your vision of the perfect home automation because you've written

00:06:10.700 --> 00:06:15.980
kind of a blog post manifesto type thing of like, here's where we should aim for this. What's your

00:06:15.980 --> 00:06:16.220
vision?

00:06:16.220 --> 00:06:21.960
Yeah, so my my vision for home automation is that a lot of people that kind of like, it's kind of like

00:06:21.960 --> 00:06:28.080
the early adopter phase where we're in right now where all these devices are entering the houses and

00:06:28.080 --> 00:06:33.520
people are realizing that with their smartphone, they can control their lights, they can control like

00:06:33.520 --> 00:06:41.240
the thermostat. But they tend to forget that it's usually not faster to, you know, actually use your

00:06:41.240 --> 00:06:45.940
smartphone like they tend to, you know, put in all these smart lights and all of a sudden your switches

00:06:45.940 --> 00:06:52.380
don't work anymore because your smart lights always need energy to be communicating with the network and to be part of the end of things.

00:06:52.380 --> 00:06:59.760
And so all of a sudden people like end up not having any light switches, which means that all of a sudden when they enter a room,

00:06:59.760 --> 00:07:02.880
they have to get their phone out of their phone, make sure it's connected to the network.

00:07:02.880 --> 00:07:10.940
And actually, they actually are instead of improving their life, they are decreasing their life experience kind of.

00:07:10.940 --> 00:07:17.580
Yeah, I totally think you're right with that. I mean, these things need to be kind of seamless like they are but better.

00:07:17.580 --> 00:07:24.000
They need to get better, not not just different, which makes it really it's a big, a big challenge, but a big opportunity.

00:07:24.000 --> 00:07:33.020
You know, like a quick, quick story. I was out biking the other day and I got this smart bike lock, this super tough smart bike lock, Bluetooth, you can control it, do all sorts of stuff.

00:07:33.020 --> 00:07:42.540
It works kind of okay. But you unlock it with your phone. And the phone wouldn't connect to it. And it was locked up. I'm like, what do I do? There's no key.

00:07:43.260 --> 00:07:55.000
I might be just stuck here. Because that stupid Bluetooth won't pair. What am I going to do? And this is like, this is the problem, right? Like, it's fine until it doesn't work sometimes, right?

00:07:55.000 --> 00:08:08.900
Yeah. And I think that's also another important part of like, you know, your Internet of Things devices is when you want to like, when your phone doesn't work, or you can't connect to it, you should still be able to like, be able to use your device.

00:08:08.900 --> 00:08:16.960
So in case of your lock, that's a very bad, like, you know, experience where like, oh, the Bluetooth doesn't work. Well, you're screwed.

00:08:16.960 --> 00:08:22.380
Yeah, yeah. There is a little panel, but it wasn't working as well. So like, it was, it was bad.

00:08:22.620 --> 00:08:33.600
Yeah. For example, the Philips light bulbs, when you turn them off with the electricity, like just the electricity off, and then you turn them back on, they will reset and turn on and like a white light you would expect from a normal light bulb.

00:08:33.600 --> 00:08:41.220
And so that's a nice experience. And even if you have a light switch, you can at least turn your light switch off and on to get the light to turn on.

00:08:41.220 --> 00:08:47.240
Right. So the failure mode is kind of like the dumb home, or whatever, the dumb device, in a sense.

00:08:47.240 --> 00:08:47.800
Yeah, exactly.

00:08:47.800 --> 00:08:51.960
Yeah, and these are the lights that you can dim, you can like change the color.

00:08:52.140 --> 00:08:55.580
And so they just go back to full power light, or something like this, huh?

00:08:55.580 --> 00:08:56.600
Okay, that makes sense.

00:08:56.600 --> 00:08:56.840
Yeah.

00:08:56.840 --> 00:09:11.260
Other parts of the home automation part is that like, a lot of people will build automations that are optimized for their own life, like as a one person in the household, but most of the times you're not one person in the household.

00:09:11.260 --> 00:09:18.160
So it's very annoying if an automation triggers, and it's not like somebody is like annoyed by it.

00:09:18.160 --> 00:09:29.680
So for example, if you're, you know, if you have this automation to turn off the lights or dim the lights when you are going to watch a TV series, if somebody is like reading a book on the side, then their light is gone.

00:09:29.720 --> 00:09:30.160
That's right.

00:09:30.160 --> 00:09:32.280
And so it's very difficult.

00:09:32.280 --> 00:09:36.940
You want to write automations that have like very, very high success rate.

00:09:37.040 --> 00:09:47.220
And the problem to writing automations with a very high success rate is that you either need to have a very scheduled life, you know, you need to be constantly like every day has to be almost be the same.

00:09:47.220 --> 00:09:49.600
And like have patterns for everything.

00:09:49.600 --> 00:09:52.780
But I mean, for a lot of us, that's just not the case.

00:09:52.780 --> 00:10:03.200
So we need to make like small automations that improve our life, but do not like work against you in the case of like you're going off the pattern.

00:10:03.200 --> 00:10:04.060
Yeah, exactly.

00:10:04.060 --> 00:10:08.840
Like, for example, you come home and normally you unlock the door with your phone, but your phone is dead.

00:10:08.840 --> 00:10:09.580
Now what?

00:10:09.580 --> 00:10:10.320
Yeah, exactly.

00:10:10.880 --> 00:10:20.360
So one of the automations I have, which has been very stable, is that like when we open the door, my phone is connected to the Wi-Fi.

00:10:20.360 --> 00:10:24.220
So home assistant knows I'm home and it will turn on the light, but only when the sun is down.

00:10:24.220 --> 00:10:29.540
And so the worst case is that the light is not being turned on for me and I have to hit the switch.

00:10:29.540 --> 00:10:29.920
Right.

00:10:29.920 --> 00:10:32.960
So the failure case is like what you had before.

00:10:32.960 --> 00:10:33.760
Yeah, exactly.

00:10:33.760 --> 00:10:34.260
Okay.

00:10:34.260 --> 00:10:35.400
Yeah, that's really cool.

00:10:35.720 --> 00:10:40.900
So another thing that you said in your vision was the perfect app is no app.

00:10:40.900 --> 00:10:42.080
What do you mean by that?

00:10:42.080 --> 00:10:46.460
It's kind of what I was talking before about like how the switch is faster than like opening your phone.

00:10:46.460 --> 00:10:56.560
And for most of these applications that you're having in your house, it is just as convenient or sometimes even more convenient to just go to the device and control it.

00:10:56.560 --> 00:11:02.920
The only thing that actually is coming up now that's going to be faster and more convenient is the voice assistants.

00:11:02.920 --> 00:11:12.120
So there's like the Google Home, the Amazon Ego, because those devices, even if your hands are dirty, for example, you're cooking or something, you can still control it.

00:11:12.120 --> 00:11:13.200
And it's very convenient.

00:11:13.200 --> 00:11:28.480
Yeah, I think this is that example really highlights some of the huge possibility and benefits, but also some of the challenges, maybe even apprehension for some people that we have this possibility of having this thing listening all the time.

00:11:28.480 --> 00:11:32.700
You can just speak to it like on Star Trek, like computer, dim the lights, please.

00:11:32.700 --> 00:11:33.540
It's amazing, right?

00:11:33.540 --> 00:11:34.440
It's just so incredible.

00:11:34.440 --> 00:11:41.600
But, you know, a lot of people are concerned about having a thing that is like constantly listening to them in their house all the time.

00:11:41.600 --> 00:11:41.860
Right.

00:11:41.860 --> 00:11:43.980
Yeah, no, that's definitely a valid concern.

00:11:43.980 --> 00:11:50.160
So there's actually been a couple of startups that are focusing on local speech to text.

00:11:50.160 --> 00:11:52.420
So they are doing local listening.

00:11:52.420 --> 00:12:01.280
And one that's recently come up and we've integrated and they actually contributed an integration to Home Assistant to integrate a system that looks very promising.

00:12:01.280 --> 00:12:03.260
It's called Snips, Snips.ai.

00:12:03.880 --> 00:12:12.000
They are a French startup and they're going to be their system is fully they're working on making it fully open source and it's already free to use on a Raspberry Pi.

00:12:12.000 --> 00:12:20.040
But the idea is that they pretty much build like an Amazon Ego with like the way you configure it with like these are the sentences that I want to support.

00:12:20.040 --> 00:12:24.540
But then they will run it completely locally on your device.

00:12:24.920 --> 00:12:26.460
So there's no cloud connection.

00:12:26.460 --> 00:12:28.900
And it also means that it's way faster.

00:12:28.900 --> 00:12:32.780
Yeah, that's one of the drawbacks of a lot of these cloud things.

00:12:32.780 --> 00:12:34.880
I mean, it's ridiculous.

00:12:34.880 --> 00:12:38.300
Like I can ask my phone like, hey, Siri, what time is it?

00:12:38.300 --> 00:12:43.240
And it will wait like five or 10 seconds and go, it's 2.30.

00:12:43.240 --> 00:12:46.480
Why did it take you 10 seconds to know that it's 2.30?

00:12:46.480 --> 00:12:49.320
Like this is not a huge challenge, man.

00:12:50.360 --> 00:12:55.800
Do you think that's a transient situation that we're in or do you think this is a permanent thing?

00:12:55.800 --> 00:13:00.460
Like is that just because the cloud is where the power is and it's moving to the devices?

00:13:00.460 --> 00:13:09.120
Or is that like places like Google would rather have the data to learn from and to massively scale on rather than make it work at home?

00:13:09.120 --> 00:13:10.980
I think there's multiple things in place.

00:13:10.980 --> 00:13:13.680
One is definitely Google and Apple, et cetera.

00:13:13.680 --> 00:13:19.820
They want to have your voice because they can see if they're training data, right?

00:13:19.900 --> 00:13:22.840
And so the more voices they have, the better they can learn from.

00:13:22.840 --> 00:13:27.580
But I think the biggest difference is actually is the way how these voice assistants work.

00:13:27.580 --> 00:13:41.140
So the Amazon Ego has a very basic approach as in if you want to write a skill, a voice part for Amazon Ego to know to support like add something to my shopping list.

00:13:41.300 --> 00:13:47.260
You have to register with Amazon every single sentence that the user can ever say.

00:13:47.260 --> 00:13:52.820
So you have to say, you know, you can have like slots that will like be filled in with the actual word.

00:13:52.820 --> 00:13:55.040
So you can have add item to my shopping list.

00:13:55.560 --> 00:14:00.360
But then you have to add another sentence, add item to my shopping list instead of the shopping list.

00:14:00.360 --> 00:14:04.140
And so you end up with like thousands of variations of your sentences.

00:14:04.140 --> 00:14:19.620
But the way Amazon Ego, this allows them that once the speech to text has been done, they can very quickly map it to a sentence that you can say because there's only like, you know, 10,000 possibilities of all the different skills that are active on your device.

00:14:19.820 --> 00:14:19.940
Right.

00:14:19.940 --> 00:14:21.700
It's not wide open machine learning.

00:14:21.700 --> 00:14:23.480
What did that person mean?

00:14:23.480 --> 00:14:24.960
Sentiment analysis type of thing.

00:14:24.960 --> 00:14:25.220
Right.

00:14:25.220 --> 00:14:29.160
And so that's where Google is the Google home.

00:14:29.160 --> 00:14:32.600
At least the way I think it works.

00:14:32.600 --> 00:14:41.840
They do more speech to text and then like get the intent of the text, which is a different approach, which is way more difficult to actually push into the devices.

00:14:41.840 --> 00:14:48.100
They're going to try, obviously, like, I mean, not per se Google, but like Apple's talking about like adding an AI chip.

00:14:48.440 --> 00:14:52.000
And, you know, getting all these things to run locally just because of, you know, privacy is important.

00:14:52.000 --> 00:14:52.580
Yeah.

00:14:52.580 --> 00:14:54.060
Like you said, don't discount latency.

00:14:54.060 --> 00:14:58.440
That's super annoying that it takes that long to get simple responses.

00:14:58.440 --> 00:14:59.200
Okay.

00:14:59.200 --> 00:15:00.620
So, yeah, these, I think you're right.

00:15:00.620 --> 00:15:03.160
This is a really great way to interact with.

00:15:03.160 --> 00:15:09.040
If you can interact with your home, there's some challenges like discovery, like what can you say to your home?

00:15:09.040 --> 00:15:10.920
It's sometimes hard to know, right?

00:15:10.920 --> 00:15:11.260
Yeah.

00:15:11.260 --> 00:15:18.280
No, that's, I mean, the problem with a voice assistant is that because we're still in the beginning phase where we actually don't really understand.

00:15:18.280 --> 00:15:18.960
what you're saying.

00:15:18.960 --> 00:15:21.480
We have just hard coded every sentence that we expect.

00:15:21.480 --> 00:15:28.100
So, you know, a lot of people call it artificial intelligence, but it's not really artificial intelligence yet.

00:15:28.320 --> 00:15:34.340
And I think the whole idea of having a normal conversation is not there yet.

00:15:34.340 --> 00:15:40.340
Once we haven't, we can like, kind of like, you know, as if you're talking to a person like, hey, what can you do?

00:15:40.340 --> 00:15:43.500
And like, you know, it's easier to interrupt them, et cetera.

00:15:44.380 --> 00:15:47.300
Then we can probably discover commands easier.

00:15:47.300 --> 00:15:53.320
Right now it's, you know, we'll, Google Home has like an Alexa, both of like newsletters.

00:15:53.320 --> 00:15:55.860
They email you like, did you know you can ask this?

00:15:55.860 --> 00:15:57.180
Kind of things.

00:15:57.180 --> 00:15:58.460
That's how we have to learn.

00:15:59.060 --> 00:15:59.460
Right, right.

00:15:59.460 --> 00:16:03.220
It's just a home, a smart speaker lesson every week.

00:16:03.220 --> 00:16:04.740
Interesting.

00:16:04.740 --> 00:16:05.020
Okay.

00:16:05.020 --> 00:16:07.860
So let's get specific about home assistance.

00:16:07.860 --> 00:16:13.400
So there's a number of, what would you think of this, like as a hub for a smart home?

00:16:13.400 --> 00:16:14.720
Or how would you describe it?

00:16:14.780 --> 00:16:32.240
Yeah, I would say it's a hub because the way I see a hub is that a hub is a device or a piece of software that speaks multiple languages and combines all these devices together and provides the user an interface or ways to control them.

00:16:32.240 --> 00:16:37.600
Yeah, well, you spoke about the challenge of having to open your phone and open an app to do a thing rather than just hit the switch.

00:16:37.600 --> 00:16:40.340
Well, there's an app for your plug.

00:16:40.340 --> 00:16:41.780
There's an app for your lights.

00:16:41.780 --> 00:16:43.460
There's an app for your garage door.

00:16:43.540 --> 00:16:48.720
Like if you have got to like go to the 10 different apps because you want to do a thing, like then it gets super crazy.

00:16:48.720 --> 00:16:54.560
So a home assistant will like speak the language of all these devices and give you one place to go, right?

00:16:54.560 --> 00:16:54.920
Yeah.

00:16:54.920 --> 00:17:01.440
And besides giving the user one place to go, it also means that it is one place for automations to run.

00:17:01.440 --> 00:17:09.320
Because if you have two different vendors, two different products of vendors that don't speak together, that don't work together, they have their own apps, their own clouds,

00:17:09.800 --> 00:17:15.740
then you will not be able to automate them without having like an intermediary that knows about both of them.

00:17:15.740 --> 00:17:16.620
Right, for sure.

00:17:16.620 --> 00:17:23.500
And so the motion sensor in a nest cannot be used to trigger a light being turned on or something like this.

00:17:23.500 --> 00:17:28.100
Well, a home assistant knows about your light, knows about the nest and can combine these things.

00:17:28.160 --> 00:17:28.300
Okay.

00:17:28.300 --> 00:17:32.040
So it basically, it can receive, it does a couple of things.

00:17:32.040 --> 00:17:35.280
It observes and monitors the state of many things.

00:17:35.280 --> 00:17:39.420
And it also receives events or at least state changes, right?

00:17:39.660 --> 00:17:40.100
Yeah.

00:17:40.100 --> 00:17:42.900
So the way it works is that we have a state machine.

00:17:42.900 --> 00:17:51.760
So home assistant, the architecture is that the core of home assistant is a event bus in which events related to your house are being fired.

00:17:51.760 --> 00:17:57.180
And these are, for example, a button is pressed or motion is detected.

00:17:57.180 --> 00:18:08.040
However, actually motion detect is a bad example because we represent that as a binary sensor because we can say motion is being detected.

00:18:08.040 --> 00:18:08.480
Yeah.

00:18:08.480 --> 00:18:14.220
And so the difference about something that happens right now and something that is happening is we want to, we have to capture it differently.

00:18:14.220 --> 00:18:15.480
We cannot just have an event.

00:18:15.480 --> 00:18:25.560
And so on top of the event bus, we have like a state machine and the state machine captures representations of devices in your house or other things.

00:18:25.560 --> 00:18:32.580
So for example, in the state machine, you have a light and the light is the main state is on or off for a light.

00:18:32.580 --> 00:18:35.820
And they have attributes that describe the state.

00:18:35.820 --> 00:18:41.060
So for example, for light, this could be the color, the brightness, maybe the color temperature.

00:18:41.060 --> 00:18:46.380
But for a media player, the state is, for example, passed or playing.

00:18:46.820 --> 00:18:50.960
And the attributes could be what type of media is the TV show?

00:18:50.960 --> 00:18:52.440
Is it a music album?

00:18:52.440 --> 00:18:55.140
If it's a music album, what's the artist?

00:18:55.140 --> 00:18:56.300
What's the song title?

00:18:56.300 --> 00:18:57.280
What's the track number?

00:18:57.280 --> 00:18:57.780
Et cetera.

00:18:57.780 --> 00:18:58.380
Yeah.

00:18:58.540 --> 00:19:04.940
And then whenever we change the state in the state machine, we will fire an event saying, hey, a state changed.

00:19:04.940 --> 00:19:07.300
And so it actually changed from this to this.

00:19:07.300 --> 00:19:21.720
And this allows other automations, for example, that can listen to either events or to state changes through the state changed event to kind of respond to whenever device representation changes in home assistance.

00:19:22.320 --> 00:19:24.320
And we can start like automating things.

00:19:24.320 --> 00:19:24.640
Yeah.

00:19:24.640 --> 00:19:26.800
That sounds really, really, really useful.

00:19:26.800 --> 00:19:30.180
So you start out with observing them and then you layer on state tracking.

00:19:30.180 --> 00:19:35.080
And then at the home assistant level, you fire the event that, hey, the state has changed.

00:19:35.080 --> 00:19:36.320
Anybody care about this thing?

00:19:36.320 --> 00:19:37.400
Maybe they do.

00:19:37.400 --> 00:19:38.180
Maybe they don't.

00:19:38.180 --> 00:19:39.540
Things like that.

00:19:41.000 --> 00:19:44.180
This portion of Talk Python to Me has been brought to you by Rollbar.

00:19:44.180 --> 00:19:47.860
One of the frustrating things about being a developer is dealing with errors.

00:19:47.860 --> 00:19:56.860
Relying on users to report errors, digging through log files, trying to debug issues, or getting millions of alerts just flooding your inbox and ruining your day.

00:19:56.860 --> 00:20:03.600
With Rollbar's full stack error monitoring, you get the context, insight, and control you need to find and fix bugs faster.

00:20:03.600 --> 00:20:07.600
Adding Rollbar to your Python app is as easy as pip install Rollbar.

00:20:07.840 --> 00:20:11.840
You can start tracking production errors and deployments in eight minutes or less.

00:20:11.840 --> 00:20:16.020
Are you considering self-hosting tools for security or compliance reasons?

00:20:16.020 --> 00:20:19.600
Then you should really check out Rollbar's compliant SaaS option.

00:20:19.600 --> 00:20:28.960
Get advanced security features and meet compliance without the hassle of self-hosting, including HIPAA, ISO 27001, Privacy Shield, and more.

00:20:28.960 --> 00:20:30.340
They'd love to give you a demo.

00:20:30.340 --> 00:20:32.040
Give Rollbar a try today.

00:20:32.040 --> 00:20:35.740
Go to talkpython.fm/Rollbar and check them out.

00:20:36.600 --> 00:20:40.120
So let's talk a little bit about how you built it, what technology is behind it.

00:20:40.120 --> 00:20:41.860
It's Python-based, right?

00:20:41.860 --> 00:20:42.240
Yes.

00:20:42.240 --> 00:20:43.280
So it's Python-based.

00:20:43.280 --> 00:20:44.400
It's Python 3.

00:20:44.400 --> 00:20:47.120
It actually started out with Python 2.

00:20:47.120 --> 00:20:51.420
I was still learning Python back then, and I just kept reading up on it.

00:20:51.420 --> 00:20:53.200
And I was like, wait, there's also a Python 3.

00:20:53.200 --> 00:20:57.320
And then I was looking more into it, and I was like, wait, Python 3 is the successor.

00:20:57.320 --> 00:21:00.160
And, you know, everybody is moving to Python 3.

00:21:00.620 --> 00:21:03.860
Even though four years ago, there was a lot more Python 3.

00:21:03.860 --> 00:21:05.740
It was still up for debate at that point, yeah.

00:21:05.740 --> 00:21:06.140
Yeah.

00:21:06.140 --> 00:21:09.620
But, yeah, it's starting to look out like a good choice for you at this point, right?

00:21:09.620 --> 00:21:09.780
Yeah.

00:21:09.780 --> 00:21:14.240
But I was looking at, like, different things, and I was reading about, like, well, there's

00:21:14.240 --> 00:21:18.240
no new features going to be added to Python 2, and Python 3 is being actively developed.

00:21:18.240 --> 00:21:20.200
And I was like, I got to make the switch.

00:21:20.260 --> 00:21:24.240
So I used, like, 2 to 3 tool, and I wrote it to Python 3.

00:21:24.240 --> 00:21:27.220
I didn't really have any users anyway back then.

00:21:27.220 --> 00:21:29.180
So I could do whatever I wanted.

00:21:29.180 --> 00:21:30.480
Yeah, breaking changes were allowed.

00:21:30.480 --> 00:21:31.140
It's fine, right?

00:21:31.140 --> 00:21:31.460
Yeah.

00:21:31.460 --> 00:21:34.800
And initially, it was actually all using threads.

00:21:34.800 --> 00:21:41.180
So I used the thread pool, and we had, like, whenever you would register for listening to an event,

00:21:41.180 --> 00:21:46.360
you would just register a function, and we would just pass that function and the event object to a thread pool.

00:21:46.360 --> 00:21:49.280
It would execute in a thread and be done.

00:21:49.860 --> 00:21:55.300
And this was actually caused sometimes, like, crazy deadlocks because, you know, there would

00:21:55.300 --> 00:21:56.200
not be enough threads.

00:21:56.200 --> 00:22:00.480
Some threads would be waiting for some work to be done, but that work would not be done because

00:22:00.480 --> 00:22:02.380
there were too many threads waiting for work to be done.

00:22:02.380 --> 00:22:04.280
It's a classic example.

00:22:04.280 --> 00:22:05.040
Those are hard.

00:22:05.040 --> 00:22:06.560
Yeah, those problems are hard to solve.

00:22:06.560 --> 00:22:07.020
Yeah.

00:22:07.020 --> 00:22:12.160
You know kind of what the problem is, but, like, tracing down the details can be painful.

00:22:12.160 --> 00:22:12.400
Yeah.

00:22:12.400 --> 00:22:16.440
Well, actually, the solution came by switching to AsyncIO.

00:22:17.400 --> 00:22:24.460
So nowadays, and I think, yeah, last year, we spent, like, over a year converting to AsyncIO.

00:22:24.460 --> 00:22:31.800
So I didn't know any AsyncIO, but there was this engineer from Mozilla, Ben Bangert, who was using AsyncIO at work.

00:22:32.220 --> 00:22:38.800
And he stopped by, and he was using Home Assistant, and he was like, our minimum requirement at that point in time was already Python 3.4.

00:22:38.800 --> 00:22:43.040
And he was like, if you're using Python 3.4, then AsyncIO is available.

00:22:43.040 --> 00:22:46.360
And with AsyncIO, it will be faster.

00:22:46.360 --> 00:22:50.720
There will be – we can avoid deadlocks, and it will be predictable.

00:22:51.000 --> 00:22:55.960
Because of all the logs and the threads, it was actually at a very unpredictable execution order.

00:22:55.960 --> 00:22:56.540
Sure.

00:22:56.540 --> 00:23:02.880
And at this point, it's waiting right at the network level, right when it's talking to the device or waiting for a response or something like this, right?

00:23:02.880 --> 00:23:03.220
Yeah.

00:23:03.220 --> 00:23:04.020
Yeah.

00:23:04.020 --> 00:23:11.560
With AsyncIO, you can just – you know, you pause within the work until you get, like, the next piece of information, and it can immediately execute.

00:23:11.560 --> 00:23:23.180
Yeah, it's really a nice way to add concurrency, the concurrency you were looking for in the Python 3 world or just the Python world, because you kind of don't have to deal with the GIL very much at that point.

00:23:23.180 --> 00:23:24.600
You don't have this thread overhead.

00:23:24.600 --> 00:23:27.160
You don't have the deadlocks that come with it for the most part.

00:23:27.160 --> 00:23:27.780
It's really nice.

00:23:27.780 --> 00:23:40.200
Yeah, I think that once – when AsyncIO was introduced to me, you know, initially when Ben stopped by and he said, you should use AsyncIO, I was like, yeah, okay, great, but I don't know how.

00:23:40.200 --> 00:23:44.680
And so, you know, you either come up with a PR or it's done, right?

00:23:44.680 --> 00:23:45.120
Yeah.

00:23:45.120 --> 00:23:46.900
And he actually delivered.

00:23:46.900 --> 00:23:48.200
He came up with a pull request.

00:23:48.200 --> 00:24:00.540
It was not fully done yet, but it was very exciting because I was actually learning something new in the Python world instead of, like, you know, every time I do a pull request against Home Assistant or code reviewing this, it was always, like, kind of the same kind of technologies.

00:24:00.540 --> 00:24:01.740
And so this was something new.

00:24:01.900 --> 00:24:06.860
And so we jumped on it and we managed to get the core converted to AsyncIO.

00:24:07.240 --> 00:24:17.900
And then over, like, the course of, like, eight months, we've been converting more and more core pieces of Home Assistant to AsyncIO, to which point now we're fully AsyncIO.

00:24:17.900 --> 00:24:19.220
Yeah, that's truly great.

00:24:19.220 --> 00:24:24.700
Did that lower, like, the types of devices that could run on?

00:24:25.100 --> 00:24:32.020
So before maybe it required, like, a PC, now it could run on, like, a small device or smaller devices than before?

00:24:32.020 --> 00:24:35.460
So we always ran well on a Raspberry Pi.

00:24:35.460 --> 00:24:43.260
So even though we had, like, tons of threads that did not, and the Raspberry Pi 3, at least, it was, like, running okay.

00:24:43.840 --> 00:24:48.320
But right now with AsyncIO, we run, like, blazing fast.

00:24:48.320 --> 00:24:56.120
So I think it allows us to even, like, allow for lower power devices to use those for Home Assistant.

00:24:56.120 --> 00:24:58.520
Yeah, I'm sure it really does make that more accessible.

00:24:58.520 --> 00:24:59.020
That's awesome.

00:24:59.020 --> 00:25:06.160
So that's the AsyncIO stuff is obviously, like, how you talk to all the devices instead of threads.

00:25:06.160 --> 00:25:07.980
What web framework are you using?

00:25:07.980 --> 00:25:11.200
Let me just say what we used before, and then I'll, like...

00:25:11.200 --> 00:25:19.440
So initially we started out with something I built myself on top of the standard library HTTP server, which is not a good idea, by the way.

00:25:19.440 --> 00:25:27.540
But for me it was kind of, you know, I never built a web framework, and I was like, we actually only have one route, which is the serving up the single-page application.

00:25:27.540 --> 00:25:37.020
So, you know, I'll just write something quickly myself, and then, of course, we needed more than one route, and then we needed SSL, and it became very messy.

00:25:37.020 --> 00:25:37.760
You're like, oh, what have I done?

00:25:37.760 --> 00:25:38.320
Yeah.

00:25:39.100 --> 00:25:45.760
Well, for a long time, Home Assistant was my place where I was practicing, like, you know, writing sort of new technologies and et cetera.

00:25:45.760 --> 00:25:48.240
And so this was kind of like, yeah, why not?

00:25:48.240 --> 00:25:58.960
But then we actually migrated, or somebody actually submitted a PR to migrate us to WorkZook, which is a whiskey framework.

00:25:58.960 --> 00:26:00.700
Yeah, part of Flask and all that, yeah?

00:26:00.840 --> 00:26:02.080
Yeah, it powers Flask indeed.

00:26:02.080 --> 00:26:03.680
And that was great.

00:26:03.680 --> 00:26:06.100
And so we were using it on top of threads.

00:26:06.100 --> 00:26:10.740
So we used the CherryPie whiskey server to power all of this.

00:26:11.420 --> 00:26:18.860
And then we were migrating to AsyncIO, and so when we migrated to AsyncIO, I was like, well, we need a new web framework.

00:26:18.860 --> 00:26:20.540
Yeah, because none of those do it.

00:26:20.540 --> 00:26:20.740
Yeah.

00:26:20.740 --> 00:26:23.740
No, so whiskey is not AsyncIO compatible.

00:26:23.740 --> 00:26:26.140
The way it's set up is it's all threading.

00:26:26.800 --> 00:26:32.840
And so people have explored seeing if they can make it Async compatible, and that's not possible.

00:26:32.840 --> 00:26:42.400
But then I stumbled upon AOHTP, and it's very difficult not to stumble upon it because they pretty much wrote the request for AsyncIO.

00:26:42.780 --> 00:26:44.460
So you cannot use requests either.

00:26:44.460 --> 00:26:46.360
So you have to use AOHTP.

00:26:46.360 --> 00:26:48.460
But it's a great, great library.

00:26:48.460 --> 00:26:50.260
It's super fast.

00:26:50.260 --> 00:26:52.100
It's actually powered by CITAN under the hood.

00:26:52.100 --> 00:26:54.520
So a lot of them are executed in C.

00:26:54.520 --> 00:26:56.340
And they did a great job.

00:26:56.340 --> 00:27:00.700
They wrote both the client and the server, and they have a framework on top of that.

00:27:00.700 --> 00:27:06.900
And so we were able to port our HTTP stack over to using AOHTP.

00:27:08.060 --> 00:27:13.960
And because we use AsyncIO, it was actually very trivial for us to add WebSocket support, for example.

00:27:13.960 --> 00:27:20.080
WebSocket support is an HTTP standard that starts as a normal request to your HTTP server,

00:27:20.080 --> 00:27:25.920
but gets upgraded to become like a long-living connection that you can send messages back and forth.

00:27:25.920 --> 00:27:26.260
Right.

00:27:26.260 --> 00:27:30.140
Normally, it's message to the web server, response from the web server, done.

00:27:30.140 --> 00:27:30.740
Yeah.

00:27:30.740 --> 00:27:33.540
Yeah, this is very difficult in a threaded environment.

00:27:33.540 --> 00:27:37.420
Because in a threaded environment, if you have like a worker per request,

00:27:37.920 --> 00:27:40.440
then all of a sudden that one worker is going to be occupied forever.

00:27:40.440 --> 00:27:45.340
And with AsyncIO, there's no such thing as the concept of a worker.

00:27:45.340 --> 00:27:49.580
There's just like tasks that have pending work to be done.

00:27:49.580 --> 00:27:51.580
So you can scale up way higher.

00:27:51.580 --> 00:27:52.560
Yeah, absolutely.

00:27:52.560 --> 00:27:59.880
I mean, that's kind of how Node.js got its, how it took off, like that type of programming model.

00:27:59.880 --> 00:28:01.300
It's really cool to see it here in Python.

00:28:01.300 --> 00:28:03.940
Yeah, and it's working very, very well for us.

00:28:04.400 --> 00:28:08.260
I think that like because of AsyncIO and you know that there is no concurrency,

00:28:08.260 --> 00:28:12.280
we actually managed to get rid of a lot of locks in our code.

00:28:12.280 --> 00:28:17.960
And, you know, when you read from a dictionary and then like two commands later you write to a dictionary,

00:28:17.960 --> 00:28:20.880
you know that no one else can mess with it.

00:28:20.880 --> 00:28:28.480
Which is, you know, so also we're having less weird bugs because these things can just no longer happen.

00:28:28.480 --> 00:28:29.640
Fewer Heisen bugs.

00:28:29.640 --> 00:28:35.100
Yeah, so between the awaits, like you have control over it.

00:28:35.100 --> 00:28:35.700
Very cool.

00:28:35.700 --> 00:28:39.860
All right, so that sounds like such a fun project to be working on.

00:28:39.860 --> 00:28:42.120
Are you looking for contributors and stuff like that?

00:28:42.200 --> 00:28:44.460
We have a lot of contributors right now.

00:28:44.460 --> 00:28:46.300
I think we do a release every two weeks.

00:28:46.300 --> 00:28:51.940
And we have between 50 and 60 people contributing code every two weeks.

00:28:51.940 --> 00:28:52.580
Wow.

00:28:52.580 --> 00:28:53.440
That's really awesome.

00:28:53.440 --> 00:28:53.900
Yeah.

00:28:53.900 --> 00:28:57.900
So right now it's just like, you know, keeping up with the pull request is the biggest challenge.

00:28:58.480 --> 00:29:06.080
Well, maybe you could have some contributors who just try to review the pull requests and just try to like mediate the bugs and feedback and things like that.

00:29:06.080 --> 00:29:06.300
Yeah.

00:29:06.300 --> 00:29:11.140
We have a few of those, but they are, you know, when you look at like open source contributors,

00:29:11.140 --> 00:29:21.960
the people that will help and like the code review and these kind of things, they're rare compared to like the people that will just submit a pull request and get their feature in.

00:29:21.960 --> 00:29:22.880
Yeah, of course.

00:29:22.880 --> 00:29:23.260
Of course.

00:29:23.260 --> 00:29:26.200
There's a lot of people who ask me like, hey, I want to get started in open source.

00:29:26.200 --> 00:29:29.520
Like what's a project I could just do something simple in?

00:29:29.520 --> 00:29:33.900
And so things like that, maybe if people are listening, they could come volunteer to review some pull requests or something.

00:29:33.900 --> 00:29:39.940
Well, I mean, I think if you get into open source, like coming in as like doing some code review definitely helps.

00:29:39.940 --> 00:29:46.600
But I think the best first step into open source is usually just making some contributions to the documentation.

00:29:46.600 --> 00:29:54.940
Getting like, because that way you also learn the workflow of a project, seeing like who works there and like even who works on it.

00:29:54.940 --> 00:29:58.480
And like even like if you hang out in the chat, you can like talk to them.

00:29:58.480 --> 00:30:03.760
And once you know the project better, then like start submitting some features, which makes it a lot easier.

00:30:03.760 --> 00:30:13.880
Just because in the end, like it's very difficult to, you know, get a pull request of somebody you've never spoken to who has like clearly put a lot of effort into a feature.

00:30:14.080 --> 00:30:23.060
And then having to tell that person like this feature is, we're not going to merge this because it's not going to work for like these use cases that you did not think of.

00:30:23.660 --> 00:30:29.180
Which if we would have spoken before for just like a minute or two, you know, I could have told you about this.

00:30:29.180 --> 00:30:31.160
Yeah, that's a really interesting point.

00:30:31.160 --> 00:30:41.980
It would be great if the whole GitFlow PR forking story had like a preliminary step before the work was done, before the PR was submitted.

00:30:42.200 --> 00:30:44.280
Like, I'm thinking of this.

00:30:44.280 --> 00:30:46.980
Prove my general idea, huh?

00:30:46.980 --> 00:30:48.280
Well, yes and no.

00:30:48.280 --> 00:30:53.760
Oh, because like sometimes you just, you're also doing it not per se for the project, but just for yourself to learn.

00:30:53.760 --> 00:30:59.480
And then at the end, you're like, oh, maybe, maybe this is valuable for someone else.

00:30:59.480 --> 00:30:59.780
Sure.

00:30:59.780 --> 00:31:08.960
But as a, you know, for me as a maintainer, it's, it's important that like, you know, when I accept a pull request, I also accept responsibility.

00:31:08.960 --> 00:31:09.900
Right?

00:31:09.900 --> 00:31:16.280
Because like when home assistant breaks, they don't come knocking on the door of that one person who submitted a pull request that contained a bug.

00:31:16.480 --> 00:31:20.700
No, they complain like in our chat room and in our forums on Twitter.

00:31:20.700 --> 00:31:23.960
So, and then we have to put out a hot fix.

00:31:23.960 --> 00:31:25.540
Which is, I'm sure, not fun.

00:31:25.540 --> 00:31:26.560
No, it's not.

00:31:26.560 --> 00:31:30.080
It's like, it's always hectic because you're like, okay, there's a lot of people angry.

00:31:30.080 --> 00:31:31.120
Well, we have a fix.

00:31:31.120 --> 00:31:32.440
Okay, good enough.

00:31:32.440 --> 00:31:39.640
And then we have to like have all the tests run and then push it to PyPy, update the forums, update the release notes.

00:31:39.640 --> 00:31:45.020
And it takes more work than, we've automated a lot, but still, it takes a lot of work.

00:31:45.020 --> 00:31:48.760
Yeah, even if maybe like rolling back documentation or something, right?

00:31:48.760 --> 00:31:56.220
Yeah, even reverse, it's like, becomes like a mess because you have like all these like, people that later want to like, revert the revert.

00:31:56.220 --> 00:31:57.620
It's a mess.

00:31:57.620 --> 00:31:58.140
I hear you.

00:31:58.140 --> 00:32:00.740
Okay, so let's talk about some of the devices you support.

00:32:00.740 --> 00:32:02.100
Let's go from the beginning.

00:32:02.100 --> 00:32:07.220
In the beginning, you kind of created this for yourself and you supported the devices you had, right?

00:32:07.220 --> 00:32:08.100
So where did it start?

00:32:08.280 --> 00:32:10.860
So it started with the Philips Hue light bulbs.

00:32:10.860 --> 00:32:15.400
So when they got released in the United States in, I guess, 2013.

00:32:15.400 --> 00:32:24.120
And that's when I, maybe, no, I think somewhere in 2012, end of 2012, they got introduced and I bought them.

00:32:24.120 --> 00:32:26.280
And I've been, since then I was playing with it.

00:32:26.440 --> 00:32:29.940
But I was just writing simple scripts to like turn them on, turn them off.

00:32:29.940 --> 00:32:37.480
Later, and it's slowly, that script, just for turning on and off, later, slowly has grown into Home Assistant.

00:32:38.100 --> 00:32:45.140
Because then I wanted them to turn on when I came home, but then I didn't want them to turn on when I came home and the sun was up.

00:32:45.140 --> 00:32:48.620
And so I have to keep track of more and more pieces of information.

00:32:48.620 --> 00:32:52.280
But yeah, the second thing I integrated was the Chromecast.

00:32:52.280 --> 00:32:58.880
So that's actually one of the best things I could have ever done because the Chromecast is really taken off.

00:32:58.880 --> 00:33:01.640
And it's actually the Google Home.

00:33:01.640 --> 00:33:03.260
It's also a Chromecast audio.

00:33:04.420 --> 00:33:09.420
So when you start Home Assistant, it automatically detects your TV if you have a Chromecast there.

00:33:09.420 --> 00:33:13.320
It will detect your Google Home, any other cast audio devices you have.

00:33:13.320 --> 00:33:20.860
And then when you start playing music on your Google Home, it will actually immediately show like the album art inside Home Assistant.

00:33:20.860 --> 00:33:22.780
You can pause and play it.

00:33:22.780 --> 00:33:26.840
And they have a great protocol where they push every state update to us.

00:33:26.840 --> 00:33:30.500
So the moment something happens on the Chromecast, we know about it in Home Assistant.

00:33:30.500 --> 00:33:30.880
Right.

00:33:30.880 --> 00:33:33.600
So there's not a latency of you pulling the thing or whatever.

00:33:33.600 --> 00:33:34.160
Yeah.

00:33:34.280 --> 00:33:34.540
Okay.

00:33:34.540 --> 00:33:35.440
So that's really cool.

00:33:35.440 --> 00:33:37.020
Those are some of the first two.

00:33:37.020 --> 00:33:39.240
Now you have more than a handful, right?

00:33:39.240 --> 00:33:39.580
Yeah.

00:33:39.580 --> 00:33:44.180
So right now we have over like 740 or something devices.

00:33:44.180 --> 00:33:45.400
And it just keeps growing.

00:33:45.400 --> 00:33:46.540
There's a lot of devices.

00:33:46.540 --> 00:33:49.200
Either very old ones like X10 support.

00:33:49.200 --> 00:33:57.360
But there are also things of like there was a South African contributor who had some South African startup IoT device in his house.

00:33:57.360 --> 00:33:59.020
And he wanted to integrate it.

00:33:59.900 --> 00:34:02.260
And so, you know, he submitted a pull request.

00:34:02.260 --> 00:34:04.860
And these are the kind of cases.

00:34:04.860 --> 00:34:06.340
And this has been like since the beginning.

00:34:06.340 --> 00:34:06.420
And this has been like since the beginning.

00:34:06.420 --> 00:34:10.620
Getting pull requests for devices that I cannot verify.

00:34:10.620 --> 00:34:13.520
It's always kind of like in the beginning I was like super scared.

00:34:13.520 --> 00:34:14.560
It's like, what am I doing?

00:34:14.560 --> 00:34:19.480
Like, how can I release to people code that like I haven't tested?

00:34:19.480 --> 00:34:22.140
Like I have to trust this random person on the internet.

00:34:22.320 --> 00:34:25.000
Not only have you not tested, you might be having to even really run it.

00:34:25.000 --> 00:34:25.380
Yeah.

00:34:25.380 --> 00:34:27.260
I mean, it's crazy, right?

00:34:27.260 --> 00:34:27.500
Yeah.

00:34:27.500 --> 00:34:37.140
Well, the way home assistant works, you know, I can verify in the code the way things get called to make sure that they don't do anything that goes against the design of the system.

00:34:37.540 --> 00:34:40.060
We've actually also put a lot of like warnings in place.

00:34:40.060 --> 00:34:43.940
And if certain fetching of certain things take too long, we'll print a warning.

00:34:44.460 --> 00:34:55.960
But the reasoning why I decided to actually accept these kind of pull requests is that for a lot of people, it's way easier to fix a bug than to add support for something new.

00:34:55.960 --> 00:35:03.340
So this one person might stop by and contribute support for like one version of a router, for example.

00:35:03.340 --> 00:35:09.400
And then, you know, we have support for this one version and someone else stops by and actually sees a bug.

00:35:09.400 --> 00:35:13.220
And that other person is super easy to just come in and fix one bug.

00:35:13.800 --> 00:35:19.900
And then someone else stops by and is like, oh, if you support this version of the router, well, with very little work, we can add this version of the router.

00:35:19.900 --> 00:35:22.320
And then, you know, it starts growing and growing.

00:35:22.320 --> 00:35:29.600
And we've seen this with like various of our supported protocols and devices where it just keeps growing.

00:35:29.600 --> 00:35:39.220
You almost get like many communities inside home assistant of like a few people who are rallying about the Sonos component or the Z-Wave component.

00:35:39.220 --> 00:35:39.660
Right.

00:35:39.660 --> 00:35:47.140
If their main passion is around the thing that they're integrating to home assistant, like they can form little sub communities around it, right?

00:35:47.140 --> 00:35:47.580
Yeah.

00:35:47.580 --> 00:35:47.960
Okay.

00:35:47.960 --> 00:35:48.080
Yeah.

00:35:48.080 --> 00:35:56.280
And I think this is the nice thing about home assistant is that there's a lot of open source software out there that you can't really use at home.

00:35:56.700 --> 00:35:56.940
Right.

00:35:56.940 --> 00:36:02.580
Because like there's some cool things like Kubernetes or like, I don't know, certain like web frameworks.

00:36:02.580 --> 00:36:05.120
But who writes a website for their house?

00:36:05.120 --> 00:36:06.220
Not too many people.

00:36:06.220 --> 00:36:06.500
Right.

00:36:06.500 --> 00:36:11.840
But if you want to at home and you want to play with things, the nice thing with home assistant is that it controls your house.

00:36:11.960 --> 00:36:13.480
So there's immediate results.

00:36:13.480 --> 00:36:17.460
And so there's immediate like, you know, satisfaction of your work.

00:36:17.460 --> 00:36:21.500
This portion of Talk Pythonry is brought to you by us.

00:36:21.500 --> 00:36:27.420
As many of you know, I have a growing set of courses to help you go from Python beginner to novice to Python expert.

00:36:27.420 --> 00:36:29.460
And there are many more courses in the works.

00:36:29.460 --> 00:36:33.700
So please consider Talk Python training for you and your team's training needs.

00:36:33.700 --> 00:36:40.120
If you're just getting started, I've built a course to teach you Python the way professional developers learn by building applications.

00:36:40.820 --> 00:36:45.200
Check out my Python jumpstart by building 10 apps at talkpython.fm/course.

00:36:45.200 --> 00:36:48.340
Are you looking to start adding services to your app?

00:36:48.340 --> 00:36:51.500
Try my brand new consuming HTTP services in Python.

00:36:51.500 --> 00:36:56.940
You'll learn to work with RESTful HTTP services as well as SOAP, JSON, and XML data formats.

00:36:56.940 --> 00:36:58.820
Do you want to launch an online business?

00:36:58.820 --> 00:37:02.980
Well, Matt McKay and I built an entrepreneur's playbook with Python for Entrepreneurs.

00:37:02.980 --> 00:37:08.220
This 16-hour course will teach you everything you need to launch your web-based business with Python.

00:37:08.720 --> 00:37:11.760
And finally, there's a couple of new course announcements coming really soon.

00:37:11.760 --> 00:37:17.220
So if you don't already have an account, be sure to create one at training.talkpython.fm to get notified.

00:37:17.220 --> 00:37:21.000
And for all of you who have bought my courses, thank you so much.

00:37:21.000 --> 00:37:22.960
It really, really helps support the show.

00:37:23.740 --> 00:37:27.040
Yeah, and it's pretty low risk, right?

00:37:27.040 --> 00:37:30.640
Because you can keep it behind your firewall on your router if you want.

00:37:30.640 --> 00:37:33.200
And it's really sort of just for you.

00:37:33.200 --> 00:37:37.740
Unlike a lot of the Internet of Things, they maybe have their own security issues.

00:37:39.300 --> 00:37:44.580
I mean, yeah, there's a lot of Internet of Things companies starting up all the time.

00:37:44.580 --> 00:37:46.500
And they put products out there.

00:37:46.500 --> 00:37:49.740
And they have a limited amount of time, a limited amount of money.

00:37:49.740 --> 00:37:52.520
So they will try to get to market super fast.

00:37:52.520 --> 00:37:54.960
And security is sometimes like an afterthought.

00:37:54.960 --> 00:37:58.820
Or after a couple of years, the company goes bankrupt.

00:37:58.820 --> 00:38:02.420
And either the cloud shuts down, your device doesn't work anymore.

00:38:02.420 --> 00:38:07.000
Or if the device works locally, it doesn't receive any security updates anymore.

00:38:07.000 --> 00:38:09.480
Right, which is just a ticking time bomb.

00:38:09.480 --> 00:38:10.820
But it's hard to know.

00:38:10.820 --> 00:38:15.300
Like my router at home, it has its little light.

00:38:15.300 --> 00:38:16.960
And it's green usually.

00:38:16.960 --> 00:38:19.300
But if there's an update for it, it'll start blinking yellow.

00:38:19.300 --> 00:38:21.400
Like, oh, maybe I should go look.

00:38:21.400 --> 00:38:25.840
But I don't know that it's not receiving updates if it weren't anymore.

00:38:25.840 --> 00:38:28.300
I just know when there is an update.

00:38:28.300 --> 00:38:30.280
I don't know that it didn't check anymore.

00:38:30.280 --> 00:38:31.060
You know what I mean?

00:38:31.620 --> 00:38:35.460
And so it's really hard to kind of understand that.

00:38:35.460 --> 00:38:40.520
But Home Assistant itself can run internally in your house.

00:38:40.520 --> 00:38:42.300
In one of these Raspberry Pis, if you want, right?

00:38:42.300 --> 00:38:47.320
Are there devices that you can get that's like a Home Assistant device?

00:38:47.320 --> 00:38:50.100
Or do I have to get a Raspberry Pi and set it up?

00:38:50.100 --> 00:38:51.800
Do I have to 3D print a thing?

00:38:51.800 --> 00:38:53.660
Or what's the story about that?

00:38:53.660 --> 00:38:56.620
Right now, we're just an open source project.

00:38:56.620 --> 00:38:59.360
And so we don't have any devices.

00:38:59.860 --> 00:39:02.120
We kind of focus on the Raspberry Pi.

00:39:02.120 --> 00:39:07.300
From the statistics that we get, we see actually 70% of our users on Raspberry Pi.

00:39:07.300 --> 00:39:16.320
But to make it easy, we're trying to slowly get to where we can either have Home Assistant devices or have a better experience.

00:39:16.700 --> 00:39:24.100
So we're working on, we just released today actually, has.io, which is our new operating system for Raspberry Pis.

00:39:24.100 --> 00:39:25.500
Yeah, that's a huge announcement.

00:39:25.500 --> 00:39:27.260
This is like a brand new thing.

00:39:27.260 --> 00:39:28.720
It's not just like, oh, here's some feature.

00:39:28.720 --> 00:39:30.420
There's a whole new operating system for it.

00:39:30.460 --> 00:39:30.960
Yeah, yeah.

00:39:30.960 --> 00:39:34.140
So it's not a 100% operating system.

00:39:34.140 --> 00:39:35.940
Like we built from the ground up.

00:39:35.940 --> 00:39:42.600
We based it on a Raisin OS, which is an open source operating system to run Docker containers on embedded devices.

00:39:43.560 --> 00:39:55.960
And so we use Docker and Raisin OS with SIO to allow a user to flash this to their Raspberry Pi and no longer have to worry about system updates or updating Home Assistant.

00:39:55.960 --> 00:39:58.180
All these kind of things can be done from the user interface.

00:39:58.180 --> 00:39:59.360
Yeah, that's awesome.

00:39:59.360 --> 00:39:59.800
Yeah.

00:39:59.800 --> 00:40:18.980
And so this is going to be our approach to kind of get the next so many users because right now our user base is very much, you know, do it with yourself, people, people that know programming, people that were comfortable enough to get a Raspberry Pi, open a terminal SSH into the Raspberry Pi, these kind of things.

00:40:18.980 --> 00:40:25.940
Previously, like the setup story was SSH in there, create a virtual environment, pip install some requirements.

00:40:25.940 --> 00:40:28.040
Like it was like that level, right?

00:40:28.420 --> 00:40:35.960
And now with this announcement, Haas.io, like it's like a web interface that controls and configures and extends Home Assistant, right?

00:40:35.960 --> 00:40:36.320
Yeah.

00:40:36.320 --> 00:40:46.800
So right now you, once you download Haas.io, you flash it to an SD image and you write, you'll have to edit one text file on the SD image to have it connect to your Wi-Fi if you want.

00:40:46.800 --> 00:40:50.420
But you can, of course, also plug in an Ethernet cable into your Raspberry Pi.

00:40:50.420 --> 00:40:54.780
But the moment you start up your Raspberry Pi, it will download the latest version of Home Assistant.

00:40:54.780 --> 00:40:57.540
It will update the operating system to the latest version.

00:40:57.540 --> 00:40:59.560
And you're good to go.

00:40:59.560 --> 00:41:04.480
Like after 20 minutes, more or less, it will start up Home Assistant.

00:41:04.480 --> 00:41:11.340
Home Assistant will start automatically discovering which devices on your network that it knows how to set up automatically for you.

00:41:11.340 --> 00:41:13.480
And you can start automating things.

00:41:13.480 --> 00:41:15.120
Yeah, that's, that sounds really cool.

00:41:15.120 --> 00:41:18.000
So that's, I'm sure that's going to increase adoption.

00:41:18.000 --> 00:41:22.060
And you had said in the early days you wanted to kind of keep it to this techie crowd.

00:41:22.060 --> 00:41:26.400
And it feels like this is a major step to like make it general consumer type stuff.

00:41:26.560 --> 00:41:27.480
Yeah, it was.

00:41:27.480 --> 00:41:35.080
So we used to like very much keep it focused on just the techie crowd because, you know, when something breaks, they can also contribute back.

00:41:35.500 --> 00:41:37.600
But we were, we've grown so big now.

00:41:37.600 --> 00:41:43.540
We have so much momentum that like, you know, it's a pity if we keep this away from other people as well.

00:41:43.540 --> 00:41:47.640
So we want to have more people like exposed to it and more people using it.

00:41:47.760 --> 00:42:02.860
And I think, you know, if you look at like the amount of integrations, we support so many things that, you know, we want to get more people on board and like even get more integrations and, you know, become like the ultimate home automation hub that you can run locally.

00:42:02.860 --> 00:42:03.940
Yeah, that's awesome.

00:42:03.940 --> 00:42:08.320
You have a lot more integrations than many of the, even the commercial ones, right?

00:42:08.320 --> 00:42:08.700
Yes.

00:42:08.700 --> 00:42:09.420
Yeah.

00:42:09.420 --> 00:42:11.720
But that's actually, it kind of makes sense.

00:42:11.720 --> 00:42:17.180
As in from the commercial ones, they probably have partnerships with those other companies.

00:42:17.180 --> 00:42:22.260
They have, you know, they will test it every time there's one of those companies will update a new product.

00:42:22.260 --> 00:42:25.380
They'll have to make sure it's integrated and those APIs have to stay stable.

00:42:25.380 --> 00:42:30.780
And we have just like an unlimited size army because we're open source.

00:42:30.780 --> 00:42:36.040
And so people will consume any API that's out there and integrate it into a home assistant.

00:42:36.040 --> 00:42:39.800
And people are, you know, it's running in their house and they depend on it.

00:42:39.800 --> 00:42:46.600
And so they see it's breaking or an update coming up, they will submit a patch to home assistant so that we are also, you know, we're always on the latest.

00:42:46.600 --> 00:42:50.220
Always on the latest APIs and always getting better.

00:42:50.220 --> 00:42:50.500
Yeah.

00:42:50.500 --> 00:42:53.480
It's really a testament to the power of open source.

00:42:53.480 --> 00:42:55.440
Like all these people, they have one device.

00:42:55.440 --> 00:42:57.140
They have some technical skills.

00:42:57.140 --> 00:43:00.040
They really want that one device to go in with the rest of their devices.

00:43:00.040 --> 00:43:03.020
And so you can't do that at a commercial one.

00:43:03.020 --> 00:43:04.800
You can just send them like a support request.

00:43:04.800 --> 00:43:07.900
Please support this device sometime soon.

00:43:07.900 --> 00:43:08.220
Yeah.

00:43:08.220 --> 00:43:09.020
I like it to, you know.

00:43:09.020 --> 00:43:09.580
Yeah, exactly.

00:43:09.840 --> 00:43:24.300
And, you know, one other strategy that we've had since the beginning is that we've always made sure that whenever anyone contributed support for a device, that the support itself was actually contained in a standalone Python library that was published to PyPy.

00:43:24.940 --> 00:43:37.940
That way, if you don't want to use home assistant but you still want to use that one device, you could still use that library and even end up maybe making improvements to that library or fixing bugs that we then also can consume inside home assistant.

00:43:37.940 --> 00:43:38.220
Right.

00:43:38.260 --> 00:43:39.340
And that's the way it's still set up now?

00:43:39.340 --> 00:43:40.680
Like all these integrations are separate?

00:43:40.680 --> 00:43:40.940
Yes.

00:43:40.940 --> 00:43:41.480
Every, yeah.

00:43:41.480 --> 00:43:49.940
Because if you look at other home automation, even open source ones, they have all this protocol logic inside their own code base.

00:43:49.940 --> 00:43:52.860
And it's all coupled with their own way how they are doing things.

00:43:52.860 --> 00:43:58.100
And so it makes it difficult to use that code for our project, for example.

00:43:58.100 --> 00:43:58.580
Sure.

00:43:58.960 --> 00:44:05.240
So what's the story of if I want to, suppose I get a device that's not supported, I want to add support through it.

00:44:05.240 --> 00:44:08.640
Take me through the steps of like how do I add a new device to this?

00:44:08.640 --> 00:44:10.400
Well, first you start reading the documentation.

00:44:10.400 --> 00:44:12.560
For home assistant, right?

00:44:12.560 --> 00:44:13.500
For home assistant, yeah.

00:44:13.500 --> 00:44:18.080
No, I think the first step is to see if this device has an API.

00:44:18.080 --> 00:44:18.480
Okay.

00:44:18.480 --> 00:44:27.740
And this might either be a public API or if they have a mobile phone app, some people will use something like Wireshark or something to check out the protocol.

00:44:28.060 --> 00:44:31.840
For most things out there, there will be someone who has already done this.

00:44:31.840 --> 00:44:36.120
You can find like maybe there's a package for Node, maybe there's a package for Python already.

00:44:36.120 --> 00:44:40.560
So actually for most things that you want to integrate, you'll find a library ready to go.

00:44:40.560 --> 00:44:47.500
If you have to write one yourself, you'll have to like use those API dumps or their public API to talk to the device.

00:44:47.500 --> 00:44:53.580
So once you have a library that can talk to the device, it will be very easy to integrate into home assistant.

00:44:54.140 --> 00:44:58.760
So anything that you want to integrate into home assistant is actually based on classes.

00:44:58.760 --> 00:45:01.260
So we have, for example, a switch class.

00:45:01.260 --> 00:45:03.800
And so you would just extend the switch class.

00:45:03.800 --> 00:45:06.920
And then we use the Python properties, class properties.

00:45:07.260 --> 00:45:11.020
So you have a property name where you return the name of your device.

00:45:11.020 --> 00:45:15.520
You have a property is on that will return a Boolean if the switch is on or off.

00:45:15.520 --> 00:45:18.620
And then you have two functions, turn on and turn off.

00:45:18.840 --> 00:45:24.160
And if you implement those to fire the correct commands to your device, they're already in.

00:45:24.160 --> 00:45:24.880
That's it.

00:45:24.880 --> 00:45:25.140
Yeah.

00:45:25.140 --> 00:45:25.780
Yeah.

00:45:25.780 --> 00:45:26.320
That's awesome.

00:45:26.320 --> 00:45:32.800
And all the, to integrate a device, you only have to integrate this class and all the things under the hood,

00:45:32.800 --> 00:45:38.280
how like the state machine has the representation and the event bus, all those things you don't have to worry about.

00:45:38.280 --> 00:45:39.720
Those things are abstracted away.

00:45:39.720 --> 00:45:43.620
They work with your, yeah, they work with your abstract base classes and you don't care.

00:45:43.620 --> 00:45:44.000
Yeah.

00:45:44.000 --> 00:45:44.400
Nice.

00:45:44.400 --> 00:45:49.960
Do you have like multiple inheritance, like something is a switch and it's color adjustable or something like this?

00:45:49.960 --> 00:45:50.280
No.

00:45:50.280 --> 00:45:58.100
So we, the abstract base class of a switch will have, well, color adjustable would mean that like it's actually a light.

00:45:58.520 --> 00:46:05.700
So the switch will have features that are not supported by every device that implements an abstract base class of the switch.

00:46:05.700 --> 00:46:13.980
And so we have this property called supported features, which is using like integer bit flags to say which features are supported or not.

00:46:13.980 --> 00:46:24.020
And that's actually not being used inside home assistant Python, the core, because if you call turn on and you can pass in the color, it's up to the implementation.

00:46:24.020 --> 00:46:25.980
You know, they can just decide not to use the color.

00:46:25.980 --> 00:46:26.500
Right.

00:46:26.560 --> 00:46:30.620
But the front end will, you know, we have a web interface to control everything.

00:46:30.620 --> 00:46:35.680
And the front end, for example, for light that does not support colors will not show a color picker.

00:46:35.680 --> 00:46:35.920
Right.

00:46:35.920 --> 00:46:36.220
Okay.

00:46:36.220 --> 00:46:36.560
Cool.

00:46:36.560 --> 00:46:37.380
Yeah.

00:46:37.380 --> 00:46:38.140
That makes a lot of sense.

00:46:38.140 --> 00:46:39.140
So that sounds pretty easy.

00:46:39.140 --> 00:46:44.340
If you can talk to the API, you can implement a couple of methods on an abstract base class.

00:46:44.340 --> 00:46:46.420
Like it doesn't get a whole lot easier, right?

00:46:46.420 --> 00:46:56.500
I think for like a sensor, if you want to add like a sensor, which is a read only piece of information that you want to pull into home assistant, you can do that in like 20 lines.

00:46:56.500 --> 00:46:56.780
Sure.

00:46:56.780 --> 00:46:57.200
Wow.

00:46:57.200 --> 00:46:58.060
Yeah.

00:46:58.060 --> 00:47:05.720
So that's hopefully that's encouraging people to go and integrate something maybe that isn't in that 740 devices.

00:47:05.720 --> 00:47:06.180
Yeah.

00:47:06.180 --> 00:47:17.120
If people are interested in like adding things to home assistant, I gave a talk at PyCon in Portland last year, 2016, about like, first it describes how home assistant works.

00:47:17.120 --> 00:47:24.960
And then the last 20 minutes is how I'm writing a sensor and a switch from scratch that actually interact with the file system as a demo.

00:47:25.120 --> 00:47:25.360
Okay.

00:47:25.360 --> 00:47:25.800
Yeah.

00:47:25.800 --> 00:47:27.440
So check that out if you want to get started.

00:47:27.440 --> 00:47:28.060
That's really cool.

00:47:28.060 --> 00:47:31.460
So I saw that you have kiosk mode.

00:47:31.460 --> 00:47:32.520
What is that?

00:47:32.520 --> 00:47:33.200
Yeah.

00:47:33.200 --> 00:47:35.820
So actually recently, well, it's not recently.

00:47:35.820 --> 00:47:36.920
It's been for a while now.

00:47:37.000 --> 00:47:42.860
People, because they invest so heavily in home assistant, so they have home assistant like controlling everything in their house.

00:47:43.380 --> 00:47:51.760
And they ended up installing home assistant on tablets and having those tablets being mounted to walls at the entrance of their house or like somewhere else in the house.

00:47:52.560 --> 00:48:01.240
And so people were like, you know, the normal home assistant user interface is not optimized for being on a tablet on a wall, which is where you expect like big buttons.

00:48:01.240 --> 00:48:05.460
We are, our user interface is optimized for mobile phones.

00:48:05.460 --> 00:48:07.760
And so you have, you know, it looks like material design.

00:48:07.760 --> 00:48:14.960
You have like the small toggles that you need like a finger and like you need to be close to like, you know, you need some form of precision.

00:48:15.280 --> 00:48:20.800
And so for the wall mounts, people are like, well, we need a better approach.

00:48:20.800 --> 00:48:23.580
And so we have support for custom panels in home assistant.

00:48:23.580 --> 00:48:34.060
So people were writing pages that would already show like bigger buttons or show like a whole floor plan of the house and show like where in the house, which lights are on and which doors are open.

00:48:34.060 --> 00:48:37.840
But the kiosk mode now will actually take it one step further.

00:48:37.840 --> 00:48:42.600
We'll make sure that the bar on the top is hidden and that the menu is no longer can be opened.

00:48:43.100 --> 00:48:52.680
And that way you really have just like a terminal that like controls parts of your house and people cannot like go to the settings and start changing things.

00:48:52.680 --> 00:48:55.320
Yeah, that sounds really cool, actually.

00:48:55.320 --> 00:48:57.420
So like that's your public one.

00:48:57.420 --> 00:49:00.180
And if you really want to change it, you pull it up on your laptop or something.

00:49:00.180 --> 00:49:00.580
Yeah.

00:49:00.580 --> 00:49:01.420
Yeah.

00:49:01.420 --> 00:49:01.800
Okay.

00:49:01.800 --> 00:49:03.800
Well, that makes a ton of sense.

00:49:03.800 --> 00:49:11.380
So I was thinking of the things that I could automate in my house when I was getting ready to talk to you.

00:49:11.720 --> 00:49:18.300
And to be honest, I don't really have many smart things other than like my phone and my laptop and my kids phones and whatnot.

00:49:18.300 --> 00:49:21.840
We do have on our doors, we have a keypad entry for all the doors.

00:49:21.840 --> 00:49:24.960
So we don't use keys, but they're not they don't have Bluetooth or anything.

00:49:24.960 --> 00:49:26.760
They're just literally like a keypad.

00:49:26.760 --> 00:49:35.240
But one thing that I am getting is I'm getting an electric car and it has one of those 240 volt charging units.

00:49:35.240 --> 00:49:41.380
And that thing has like an app and it has wireless connectivity.

00:49:41.380 --> 00:49:44.080
Like, do you integrate with those types of things?

00:49:44.080 --> 00:49:44.880
Do you know?

00:49:44.880 --> 00:49:47.300
Or is that a PR I should be adding?

00:49:47.920 --> 00:49:49.260
That's probably a PR.

00:49:49.260 --> 00:49:51.500
I mean, we have well, we have support for Volvo.

00:49:51.500 --> 00:49:55.200
So Volvo has like an app for their cars where you can see where the car is.

00:49:55.200 --> 00:49:58.400
And I think you can see the mileage and how much gas you have left.

00:49:58.400 --> 00:50:00.520
And we actually integrate home.

00:50:00.520 --> 00:50:02.020
The home system has support for Volvo.

00:50:02.020 --> 00:50:03.940
So you can like see everything in Volvo.

00:50:04.440 --> 00:50:07.800
So depending on the make and model of your car, there might be already.

00:50:07.800 --> 00:50:08.020
Yeah.

00:50:08.020 --> 00:50:09.160
So I'm thinking of getting a Bolt.

00:50:09.160 --> 00:50:13.300
I mean, I would love to get a Tesla, but you know, I'd also love a Ferrari.

00:50:13.300 --> 00:50:14.240
Like I can wear things.

00:50:14.240 --> 00:50:14.800
No, of course.

00:50:14.800 --> 00:50:17.440
I don't think we have support for a Volt yet.

00:50:17.440 --> 00:50:25.440
But if they have an API that is either accessible or even public accessible, then it should be very straightforward to add support for it.

00:50:25.440 --> 00:50:25.760
Awesome.

00:50:25.760 --> 00:50:28.340
Well, maybe I'll do some kind of PR for you.

00:50:28.340 --> 00:50:30.280
Because, yeah, it's supposed to have like I don't have it yet.

00:50:30.320 --> 00:50:35.420
So I don't know, but it's supposed to like go on the Wi-Fi and talk to your app and like warm it up before you go outside.

00:50:35.420 --> 00:50:36.060
Like things like that.

00:50:36.060 --> 00:50:36.320
Wow.

00:50:36.320 --> 00:50:40.120
Well, I think there's this, you know, there will be also like nice things to do.

00:50:40.120 --> 00:50:43.020
Like, for example, reminders to charge it, for example.

00:50:43.020 --> 00:50:47.240
Like, hey, you were running low when you came home, but you didn't plug it in.

00:50:47.240 --> 00:50:47.900
Yeah.

00:50:47.900 --> 00:50:48.560
Yeah, for sure.

00:50:48.560 --> 00:50:50.840
It's I know it's on the Wi-Fi and it's low.

00:50:50.840 --> 00:50:53.420
So you better go pay it at some attention or something like that.

00:50:53.420 --> 00:50:53.580
Right.

00:50:53.580 --> 00:50:53.860
Yeah.

00:50:53.860 --> 00:50:54.240
Awesome.

00:50:54.240 --> 00:50:54.540
All right.

00:50:54.540 --> 00:50:55.940
Well, that sounds really, really cool.

00:50:55.940 --> 00:50:57.740
So let's talk about just a few other things.

00:50:57.740 --> 00:50:59.540
We're getting short on time here.

00:51:00.300 --> 00:51:04.980
You have just recently started a full on home assistant podcast.

00:51:04.980 --> 00:51:09.300
Why don't you tell people what that is, what it's about, how they can like subscribe to you?

00:51:09.300 --> 00:51:09.600
Yeah.

00:51:09.600 --> 00:51:13.940
So this is three of our community members started this project.

00:51:13.940 --> 00:51:20.100
And they it's all about home assistant and things around home assistant that are happening in the IoT space.

00:51:20.100 --> 00:51:22.500
We are at episode four or five now.

00:51:22.500 --> 00:51:23.900
I think episode four was just launched.

00:51:23.900 --> 00:51:24.520
Yeah, I think so.

00:51:24.520 --> 00:51:24.700
Yeah.

00:51:24.700 --> 00:51:24.740
Yeah.

00:51:24.740 --> 00:51:26.800
And it's all about each episode.

00:51:26.800 --> 00:51:33.160
They try to invite other members of the community that are either doing very cool stuff with home assistant.

00:51:33.380 --> 00:51:42.180
So I think the last episode there was Carlo who has automated his whole house with Alexa and home assistant to control everything.

00:51:42.180 --> 00:51:51.060
Where even like if he lives in Florida, so if he left his door open for too long, text to speech, the house would say to everybody inside, oh, there's a door open.

00:51:51.160 --> 00:51:52.740
So I'm going to turn off the air conditioning now.

00:51:52.740 --> 00:51:53.320
Good luck.

00:51:53.320 --> 00:51:56.640
I was there on episode three.

00:51:56.640 --> 00:52:06.920
And so they keep talking to other members that are like developing the latest, greatest features for home assistant and kind of like thinks how to use it.

00:52:06.920 --> 00:52:09.900
And it's getting quite some popularity.

00:52:09.900 --> 00:52:14.540
I think the first episode had like 2,500 listeners or something.

00:52:14.540 --> 00:52:16.180
That's amazing for the first episode.

00:52:16.180 --> 00:52:16.840
Yeah, that's awesome.

00:52:16.840 --> 00:52:18.280
So it's really great.

00:52:18.280 --> 00:52:22.680
If people are interested, the URL has podcast.io.

00:52:22.980 --> 00:52:26.320
But every episode is also promoted on our blog and Twitter.

00:52:26.320 --> 00:52:26.680
Right.

00:52:26.680 --> 00:52:26.900
Yeah.

00:52:26.900 --> 00:52:27.880
And I subscribe to it.

00:52:27.880 --> 00:52:33.280
I just went to Overcast and I typed home assistant and boom, home assistant podcast came straight up.

00:52:33.280 --> 00:52:35.860
So yeah, that always works as well.

00:52:35.860 --> 00:52:38.280
I'm sure it's on Google Play in addition to that.

00:52:38.280 --> 00:52:38.800
Cool.

00:52:38.800 --> 00:52:39.700
All right.

00:52:39.700 --> 00:52:40.420
So that's really awesome.

00:52:40.420 --> 00:52:41.520
And you guys have t-shirts.

00:52:41.520 --> 00:52:42.180
Is that right?

00:52:42.180 --> 00:52:42.480
Yes.

00:52:42.480 --> 00:52:46.480
If I want to automate my home and then like get people to ask me questions about it.

00:52:46.480 --> 00:52:46.800
Yeah.

00:52:46.800 --> 00:52:52.160
So we've been selling t-shirts since I guess somewhere in the beginning of the year.

00:52:52.580 --> 00:52:55.180
Maybe a bit around the time, I think.

00:52:55.180 --> 00:52:56.200
Yeah.

00:52:56.200 --> 00:53:02.500
And the t-shirts we have right now, 100% of the profits are being donated to the Electronic Frontier Foundation.

00:53:02.500 --> 00:53:07.760
That makes it easier for us to not have any, to do anything with like income and taxes and all that stuff.

00:53:07.760 --> 00:53:12.020
You know, we also support the Electronic Frontier Foundation, which they're doing awesome work.

00:53:12.020 --> 00:53:20.760
Among others, they provide, they started the Let's Encrypt service so that everybody can have an SSL certificate, which a lot of home assistant users are using.

00:53:20.760 --> 00:53:21.120
Yeah.

00:53:21.120 --> 00:53:23.780
With your house.io, that's like a checkbox or something, right?

00:53:23.780 --> 00:53:24.140
Yeah.

00:53:24.140 --> 00:53:24.580
Yeah.

00:53:24.580 --> 00:53:29.540
We make it super easy to get an SSL certificate to secure your connection to your house.

00:53:29.540 --> 00:53:30.120
That's cool.

00:53:30.120 --> 00:53:30.560
Yeah.

00:53:30.560 --> 00:53:30.680
Yeah.

00:53:30.680 --> 00:53:31.300
Very, very cool.

00:53:31.300 --> 00:53:32.960
All right.

00:53:32.960 --> 00:53:35.640
Well, it's super exciting.

00:53:35.800 --> 00:53:40.340
I need a smart thing so I can start playing with home assistant.

00:53:40.340 --> 00:53:42.080
Maybe more than one.

00:53:42.080 --> 00:53:44.820
I would start with just a Chromecast for television.

00:53:44.820 --> 00:53:45.240
Okay.

00:53:45.380 --> 00:53:52.160
Because the nice thing about the Chromecast is that it doesn't have a dedicated app that you need to control.

00:53:52.160 --> 00:53:56.760
The Chromecast is built into the Netflix app, the Spotify app.

00:53:56.760 --> 00:54:01.380
Let's say your browser, you open YouTube and all of a sudden it has a button, play on my TV.

00:54:01.380 --> 00:54:01.700
Yeah.

00:54:01.700 --> 00:54:04.580
In your phone, it will be like, show my screen on the TV.

00:54:04.580 --> 00:54:06.140
Show my photos on the TV.

00:54:06.140 --> 00:54:10.920
It's a very powerful little device.

00:54:10.920 --> 00:54:12.000
And it's like very cheap.

00:54:12.080 --> 00:54:13.280
I think it's like 35 bucks.

00:54:13.280 --> 00:54:13.520
Yeah.

00:54:13.520 --> 00:54:15.040
It's incredibly cheap for what it is.

00:54:15.040 --> 00:54:15.660
Yeah.

00:54:15.660 --> 00:54:16.760
Sounds very cool.

00:54:16.760 --> 00:54:16.940
All right.

00:54:16.940 --> 00:54:19.080
That's a great place for people to get started.

00:54:19.080 --> 00:54:20.220
All right, Paulus.

00:54:20.220 --> 00:54:24.080
Before I let you out here, let me ask you the two questions we always ask at the end of the show.

00:54:24.080 --> 00:54:27.600
One, if you're going to write some Python code, what editor do you open up?

00:54:27.600 --> 00:54:28.640
I use Sublime Text.

00:54:28.640 --> 00:54:29.100
Okay.

00:54:29.100 --> 00:54:29.600
Sublime.

00:54:29.600 --> 00:54:30.700
Definitely a good choice.

00:54:30.700 --> 00:54:32.080
It's very fast.

00:54:32.080 --> 00:54:35.560
And it doesn't do too much, but it does enough.

00:54:35.560 --> 00:54:35.940
Sure.

00:54:35.940 --> 00:54:37.260
Yeah, absolutely.

00:54:37.260 --> 00:54:37.840
That's cool.

00:54:38.360 --> 00:54:43.720
And you've got quite a few lists to pick from, like maybe 741 at least.

00:54:43.720 --> 00:54:46.600
But how about a notable PyPI package?

00:54:46.600 --> 00:54:52.500
Well, actually, I mean, I was thinking about this question before the show started, like what's one that I really like?

00:54:52.500 --> 00:54:56.200
And actually, it's one that's now part of the – I really like AsyncIO.

00:54:56.380 --> 00:55:02.160
And I know it's now part of the standard library, but I think that asynchronous programming sounds so magical.

00:55:02.160 --> 00:55:06.760
But if you actually start looking at the source code, it's super, super straightforward.

00:55:06.760 --> 00:55:09.080
It's just like it has a list of tasks.

00:55:09.080 --> 00:55:09.920
It has every task.

00:55:09.920 --> 00:55:10.780
Do you have something to do?

00:55:10.780 --> 00:55:11.580
Okay, do it.

00:55:11.580 --> 00:55:15.040
And then it just keeps – it's pretty much like a while through.

00:55:15.200 --> 00:55:17.040
And it just keeps going through this list of work.

00:55:17.040 --> 00:55:21.420
And the fact that it gets to the basic – it's so basic from the core.

00:55:21.420 --> 00:55:26.500
And it, like, makes such a powerful paradigm possible is just amazing.

00:55:26.500 --> 00:55:31.500
Yeah, that's a really interesting point about how that simple paradigm really opens things up.

00:55:31.500 --> 00:55:36.560
And, you know, even like you said, simplifies, removes a whole class of bugs for you guys.

00:55:36.560 --> 00:55:37.960
Awesome.

00:55:37.960 --> 00:55:39.540
All right, so final call to action.

00:55:39.540 --> 00:55:41.160
People are interested in this.

00:55:41.160 --> 00:55:42.260
What do they do?

00:55:42.400 --> 00:55:47.200
Get a Raspberry Pi, get a hash.io, and just get up and running.

00:55:47.200 --> 00:55:49.680
And then there's some great documentation.

00:55:49.680 --> 00:55:51.880
We've got some great videos how to get started.

00:55:51.880 --> 00:55:55.860
And if you run into any trouble, make sure to stop by our Discord.

00:55:55.860 --> 00:55:57.800
It's our chat community.

00:55:57.800 --> 00:56:00.260
And it's where a lot of people hang out.

00:56:00.260 --> 00:56:04.120
They're helping out other people to get started and discuss home automation.

00:56:04.120 --> 00:56:04.620
All right.

00:56:04.620 --> 00:56:05.740
Sounds great.

00:56:05.740 --> 00:56:07.640
I'm looking forward to playing around with it.

00:56:07.640 --> 00:56:09.360
Paul, thanks for being on the show.

00:56:09.360 --> 00:56:11.200
It was great to chat with you and share your story.

00:56:11.200 --> 00:56:12.560
Yeah, it was awesome being here.

00:56:12.560 --> 00:56:12.940
Thank you.

00:56:14.660 --> 00:56:17.260
This has been another episode of Talk Python to Me.

00:56:17.260 --> 00:56:20.180
Today's guest was Paulus Shralson.

00:56:20.180 --> 00:56:24.620
And this episode has been brought to you by Rollbar and Talk Python Training.

00:56:24.620 --> 00:56:27.700
Rollbar takes the pain out of errors.

00:56:27.700 --> 00:56:32.780
They give you the context and insight you need to quickly locate and fix errors that might have

00:56:32.780 --> 00:56:35.420
gone unnoticed until your users complain, of course.

00:56:36.060 --> 00:56:41.680
As Talk Python to Me listeners, track a ridiculous number of errors for free at rollbar.com slash

00:56:41.680 --> 00:56:42.560
Talk Python to Me.

00:56:42.560 --> 00:56:45.080
Are you or a colleague trying to learn Python?

00:56:45.080 --> 00:56:49.740
Have you tried books and videos that just left you bored by covering topics point by point?

00:56:49.740 --> 00:56:55.400
Well, check out my online course, Python Jumpstart, by building 10 apps at talkpython.fm slash

00:56:55.400 --> 00:56:58.320
course to experience a more engaging way to learn Python.

00:56:58.840 --> 00:57:03.160
And if you're looking for something a little more advanced, try my Write Pythonic code course

00:57:03.160 --> 00:57:05.700
at talkpython.fm/pythonic.

00:57:05.700 --> 00:57:08.420
Be sure to subscribe to the show.

00:57:08.420 --> 00:57:10.620
Open your favorite podcatcher and search for Python.

00:57:10.620 --> 00:57:11.860
We should be right at the top.

00:57:11.860 --> 00:57:17.660
You can also find the iTunes feed at /itunes, Google Play feed at /play, and

00:57:17.660 --> 00:57:21.180
direct RSS feed at /rss on talkpython.fm.

00:57:21.180 --> 00:57:26.260
Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

00:57:26.260 --> 00:57:30.960
Corey just recently started selling his tracks on iTunes, so I recommend you check it out at

00:57:30.960 --> 00:57:32.960
 talkpython.fm/music.

00:57:32.960 --> 00:57:37.400
You can browse his tracks he has for sale on iTunes and listen to the full-length version

00:57:37.400 --> 00:57:38.300
of the theme song.

00:57:38.300 --> 00:57:40.380
This is your host, Michael Kennedy.

00:57:40.700 --> 00:57:41.680
Thanks so much for listening.

00:57:41.680 --> 00:57:42.860
I really appreciate it.

00:57:42.860 --> 00:57:45.000
Smix, let's get out of here.

00:57:45.000 --> 00:57:45.000
Smix, let's get out of here.

00:57:45.000 --> 00:57:47.000
Stay tuned.

00:57:47.000 --> 00:57:47.000
Stay tuned.

00:57:47.000 --> 00:57:48.000
Bye.

00:57:48.000 --> 00:57:50.000
Bye.

00:57:50.000 --> 00:57:51.000
Bye.

00:57:51.000 --> 00:57:52.000
Bye.

00:57:52.000 --> 00:57:53.000
Bye.

00:57:53.000 --> 00:57:54.000
Bye.

00:57:54.000 --> 00:57:54.940
Rock the best.

00:57:54.940 --> 00:57:56.800
First developers.

00:57:56.800 --> 00:58:03.800
First developers.

00:58:03.800 --> 00:58:07.000
Developers, developers, developers, developers.

00:58:07.000 --> 00:58:07.240
you

00:58:07.240 --> 00:58:07.740
you

00:58:07.740 --> 00:58:37.720
Thank you.

