00:00:00 Often, people complain about the lack of developer skills in Western countries like the United States,

00:00:04 and that problem is amplified when you consider typically underrepresented groups such as women and minorities.

00:00:09 This week, you'll meet Laura Blankenship, who's doing more than her share to widen the appeal of programming to women in general and to Python in particular.

00:00:17 This is episode number 27 of Talk Python To Me, recorded Monday, September 14th, 2015.

00:00:23 Developers, developers, developers, developers.

00:00:27 I'm a developer in many senses of the word, because I make these applications, but I also use these verbs to make this music.

00:00:34 I construct it line by line, just like when I'm coding another software design.

00:00:39 In both cases, it's about design patterns.

00:00:42 Anyone can get the job done. It's the execution that matters.

00:00:45 I have many interests. Sometimes I can flex.

00:00:48 Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:00:56 This is your host, Michael Kennedy. Follow me on Twitter, where I'm @mkennedy.

00:00:59 Keep up with the show and listen to past episodes at talkpython.fm, and follow the show on Twitter via at talkpython.

00:01:06 This episode is brought to you by Hired and Codeship.

00:01:11 Thank them for supporting the show on Twitter via at Hired underscore HQ and at Codeship.

00:01:17 Hello, everyone. Congratulations to Justin Alexander, who won the copy of the book, Full Stack Python's Guide to Deployment last week.

00:01:25 Do you want to be in the running for free stuff?

00:01:27 Just visit talkpython.fm and become a friend of the show like Justin did.

00:01:31 Now, let's get right to the interview.

00:01:33 Let me introduce Laura.

00:01:35 Laura Blankenship is the chair of the computer science department and intern dean of academic affairs at the Baldwin School,

00:01:42 an all-girls K-12 school in Philadelphia, Pennsylvania.

00:01:46 Laura, welcome to the show.

00:01:48 Thank you.

00:01:49 Yeah, I'm really excited to talk about teaching kids and especially girls programming today.

00:01:53 Great. Me too.

00:01:55 Yeah, I bet. That's definitely your passion, isn't it?

00:01:57 Yes.

00:01:59 So we're going to talk about what you're doing at the Baldwin School.

00:02:02 But before we get into specifically your work there, let's just take a step back and start where you started with programming and Python and all that.

00:02:11 Okay. Well, it's a rather long, circuitous path that I took to get here.

00:02:16 I actually don't have a degree in computer science.

00:02:19 It didn't exist at my college when I graduated.

00:02:23 So I did take computer science in seventh grade myself and then again in college, both in basic of all things.

00:02:31 So, yay.

00:02:33 Wow. That's pretty impressive.

00:02:35 Usually it's either Java or C++.

00:02:36 I know.

00:02:37 My first course was in Scheme.

00:02:40 Oh, yeah.

00:02:41 Yeah, I haven't done a lot with Scheme, but I've seen it.

00:02:46 My husband keeps trying to talk me into it, but I haven't gone there yet.

00:02:51 So after college, I graduated with a degree in creative writing, of all things, and went to grad school for that.

00:03:00 And then ended up basically paying for grad school by working either on the technology side in departments or specifically in IT departments.

00:03:12 It pays better than poetry.

00:03:15 So I just figured a lot of stuff out on my own.

00:03:18 I mean, at the time, this was the early 90s.

00:03:21 You know, nobody knew what computers could do or, you know, what they were capable of.

00:03:27 So, and no one knew how they worked.

00:03:29 So I would just take a manual and figure it out.

00:03:31 And, yeah.

00:03:33 So, I mean, most of the people that worked in those departments at the time were still using, like, IBM Selectric typewriters.

00:03:41 So I had a little bit of an advantage over them.

00:03:44 And basically, I then kind of got into mostly web development and design and worked across the street from the Baldwin School at Bryn Mawr College in their IT department developing educational technology tools.

00:03:58 You know, you started before the World Wide Web.

00:04:01 Yeah.

00:04:02 And when people learn through books still, right?

00:04:04 So definitely an interesting time to get into programming.

00:04:08 Yep.

00:04:08 Cool.

00:04:09 So that's how you got into programming.

00:04:10 What about Python?

00:04:11 Like, what got you interested in that?

00:04:13 Well, so in our web development shop, we were mostly PHP, a little bit of JavaScript.

00:04:19 And then when I, and I taught a summer program using mostly PHP and JavaScript and occasionally Flash, ActionScript.

00:04:30 I just pretty much went wherever the students wanted to go.

00:04:32 And then when I came over to Baldwin, I just, the thought of teaching them PHP sort of scared me.

00:04:40 JavaScript, similarly.

00:04:42 So I started looking for a language that would be a little bit easier for high school students, actually at the time, middle school students to tackle.

00:04:51 So I just, Bryn Mawr's computer science department actually used Python and a little bit of Java, but they were shifting at the time to Python.

00:05:01 So I just decided to go through, I went through a couple of Python books and it was easy for me.

00:05:08 So I thought it would be easy for the kids too.

00:05:10 Yeah, that's cool.

00:05:11 And, you know, I think your intuition there is good because that's what the universities are switching to as well, right?

00:05:17 Yeah, pretty much.

00:05:18 Pretty much.

00:05:20 Okay.

00:05:20 So that brings us to the Baldwin School.

00:05:22 And the Baldwin School looks really interesting.

00:05:23 And let me actually read what you guys have for your little Twitter subtitle introduction or whatever that part on Twitter is called.

00:05:31 Right.

00:05:31 It says, Baldwin is an independent school for thinking girls who know the power of their own mind and use them to better the community and the world.

00:05:39 That's a pretty awesome mission statement.

00:05:41 It is pretty awesome.

00:05:42 Yes.

00:05:43 Cool.

00:05:44 So tell us about it.

00:05:46 So we are pre-K through 12 school, all girls, and have been since our founding in 1888.

00:05:55 And, you know, the girls here are pretty amazing and, you know, really do start at a young age wanting to change the world, which is kind of cool that, you know, you'll have a seven-year-old running around thinking that they can do something that will make a big impact.

00:06:14 And, of course, as they get older, they can realize some of those goals and dreams.

00:06:20 And some of them do, you know, many of them do, you know, many of them do a ton of community service.

00:06:28 So I think that's probably the biggest impact that they have is a lot of them work with a variety of organizations to do whatever, you know, those organizations need and often, you know, provide expertise that maybe those organizations don't have.

00:06:44 It's really neat that you're teaching computer science at a deep level to these girls.

00:06:49 I think so much of the idea or the opinion that you express that, hey, I can change the world, regardless if you're a man or a woman, is sort of the surroundings that you're in, right?

00:07:01 Yeah.

00:07:02 You know, the magic of places like Silicon Valley and those kinds of things.

00:07:07 Partly, that's just a mentality, and people are drawn to that mentality.

00:07:11 So you're around all these other people that have this mission to change the world, too.

00:07:15 And, hey, if everyone else is doing it, why can't I do it, right?

00:07:17 Exactly.

00:07:18 Cool.

00:07:19 So that seems to be working really well for you.

00:07:22 Yeah, so far.

00:07:23 I mean, we've only had computer science here for five years, going on six.

00:07:29 This is my sixth year here.

00:07:31 I started the program.

00:07:33 And so, you know, the student that graduated that first year, I used to boast a 100% rate of computer science majors because I had one student who enrolled in a computer science program at Purdue.

00:07:51 So they haven't yet quite made it out of college and into the realm where they can, you know, maybe have a larger impact.

00:07:58 But I think it's, you know, give me another five years or so, and I think you'll start to see some of our students, you know, end up in Silicon Valley or wherever they might end up, you know, making an impact on the technology world.

00:08:13 I went to grad school at Purdue in math.

00:08:16 And so I was probably in the same building, actually.

00:08:17 Probably.

00:08:18 Yeah, good luck to her.

00:08:20 That's awesome.

00:08:20 I think when people hear high school, and it's really important to emphasize this is not like a private college.

00:08:26 This is high school, like you said, and below.

00:08:28 Yeah.

00:08:29 Yeah.

00:08:29 Computer science, you know, a lot of states are struggling to even just allow a single programming course of some sort.

00:08:38 And it's usually some kind of after school curriculum or activity.

00:08:41 Maybe we could talk about the classes that you guys have, because I was really impressed with, like, how much you're offering to your high school girls.

00:08:49 Yeah.

00:08:50 So, interestingly, we start teaching computer science at the pre-K level.

00:08:56 It's very basic, as you might imagine.

00:09:00 My department and I are actually in the â€“ I have four people in my department.

00:09:04 We're in the middle of kind of deciding what our mission statement is.

00:09:08 I think we're all on the same page, but just kind of, you know, coming up with what it is we do based on what we're kind of already doing.

00:09:15 So, in the elementary school and the middle school, we have a program called the Dream Lab, which is a combination of computer science and engineering,

00:09:27 the sort of heavy load of design thinking process in there.

00:09:30 So, they do a little bit of everything.

00:09:32 But we still think of the central thread of that as computer science concepts.

00:09:36 And then once they get to high school, it becomes an elective.

00:09:39 It's required through eighth grade, which is great.

00:09:42 And then it becomes an elective.

00:09:45 And we start with an intro course, a year-long intro course, and that's all in Python.

00:09:50 And it's been a great course.

00:09:53 The students end up doing a lot of different things.

00:09:55 We work with robots, and we do some graphics projects and some game programming and things like that.

00:10:01 That's really cool.

00:10:02 And you do all that work with Python, right?

00:10:04 Yeah, all of it's with Python.

00:10:06 Yeah.

00:10:07 So, maybe we could talk, before we move on, maybe we could talk a little bit about, like, some of the libraries and stuff that you're using.

00:10:14 Like, are you using something like Rosspy for the robots?

00:10:16 Or what kind of stuff are you doing there?

00:10:19 Yeah, that's a good question.

00:10:20 So, I've been using an IDE called Calico for about four or five years.

00:10:25 And it has a lot of those libraries built into it, which is one of the things, as you know, with Python or any language,

00:10:32 anytime you're trying to do, you know, special things like game development or graphics or robots, you need different libraries for that.

00:10:40 And the nice thing about Calico is I don't have to go find them.

00:10:43 They're already there.

00:10:44 So, the robot libraries are built in.

00:10:47 The graphics libraries are built in.

00:10:49 So, it's been, you know, it's an easy-to-use system.

00:10:54 And it was built for education specifically for that very reason.

00:10:58 Cool.

00:10:59 Is it kind of like what the scientific data science folks, say, like Continuum are doing with Anaconda, where it comes pre-built, but this is for education and teaching?

00:11:09 Yeah, exactly.

00:11:10 Okay.

00:11:11 And is it free?

00:11:11 It is completely free.

00:11:13 Free and open source.

00:11:14 Yeah, awesome.

00:11:15 Okay, so you guys use that.

00:11:16 That's cool.

00:11:17 Yeah.

00:11:17 Yeah, so that makes it really easy.

00:11:19 We do experiment with some other IDs later.

00:11:23 We, in CS2, which is the next level where we do focus mostly on object-oriented programming, I've been using PyCharm.

00:11:32 And, you know, that's, again, because it's easy to install libraries via PyCharm.

00:11:39 Right.

00:11:39 It's all about installing things and making that process easy.

00:11:43 I think that's what a lot of teachers in, you know, middle and high school struggle with is I'm lucky in that my IT department isn't locked down at all, but a lot of places it is.

00:11:55 So the idea of installing something that's going to actually write code is a little scary to a lot of IT places.

00:12:02 Yeah, so that's really cool that you're using PyCharm.

00:12:04 You know, I've said that I'm a huge fan of PyCharm on the show before, and I think actually the concept of using an IDE is,

00:12:12 it's very much a sort of dividing concept for the folks in the Python community.

00:12:18 A lot of people are using Vim and Emacs, and they're like, we don't need that heavyweight stuff.

00:12:22 Leave us alone.

00:12:23 And then some people love their IDEs.

00:12:26 I'm more in that group.

00:12:27 You know, it really is nice in that you can just type import.

00:12:32 Like, I could type import requests, and if request isn't there, it's like a hotkey to download and install that.

00:12:37 Yeah, it is very nice.

00:12:39 Yeah, so that's very helpful.

00:12:41 I do teach a little bit of Vim or Emacs or whatever to my students, because I had a student a while back who went and did an internship at a university down the street,

00:12:54 and she was really mad at me for not teaching her terminal and Emacs.

00:12:57 And I was like, do you see how hard it is?

00:12:59 So I do introduce it to them and explain to them that there are a lot of professional programmers that use this instead of an IDE.

00:13:09 But, you know, it's too hard for high school students to wrap their heads around most of the time.

00:13:16 Installing those requirements and all that kind of stuff is just, you know, it's things in the way.

00:13:21 It's not something you want to learn when you're new.

00:13:23 Right.

00:13:24 You just want to learn how to get something on the screen, make a turtle move, make a web page come up,

00:13:29 and you've got to have all these complex sort of sysadmin conversations.

00:13:33 And if you can get that out of the way and push that down the road until you're like ready to have that sort of learning, I think that's way more valuable.

00:13:41 Yeah.

00:13:43 You start with this introduction to computer science, and is that mostly freshmen?

00:13:46 It's a range.

00:13:48 It is mostly freshmen, usually ninth and tenth graders.

00:13:52 And then I always get a couple seniors who need to fill out their, you know, course load.

00:13:57 And it's great because it's one of the few classes we have here that is across all the grade levels.

00:14:03 So they get to know students in the other grade levels, which I really like.

00:14:06 And they often end up working together on projects, too.

00:14:09 Yeah, that's cool.

00:14:11 And you said that with these classes, they're very project-focused.

00:14:15 Do you maybe want to talk about that a little bit?

00:14:17 You know, I probably a lot of us learned computer science in our classes or however we learned them via lecture primarily.

00:14:25 And it was kind of painful.

00:14:27 You know, you would get the lecture.

00:14:28 You'd go do the problem sets, turn them in, and hope for the best.

00:14:32 And you didn't get to do a lot of projects, maybe at the very end or, you know, midterm kind of things.

00:14:38 But you don't really get a lot of practice doing the projects along the way.

00:14:41 You're just doing these exercises.

00:14:43 So I specifically structure my classes so that it's pretty much all projects.

00:14:48 We do little ones and then big ones, and they just kind of build on each other.

00:14:52 So we'll do a few things where I kind of treat it like a science class where I teach a concept like loops, for example.

00:15:00 And then we'll do a little lab with a lot of different ways of experimenting with loops.

00:15:05 And that'll just be the class period, and the lab is done.

00:15:08 So it's like you're in a science lab and you have to have the equipment.

00:15:10 And then they might do, you know, another concept.

00:15:14 So we might do two or three concepts in a row.

00:15:16 And then I'll have them do a project where they're going to have to implement those concepts in some way.

00:15:22 So it might be a graphics project.

00:15:23 It might be a game project.

00:15:26 It might be, you know, working with the robots.

00:15:29 So, like, we have a robot dance project where, you know, if you're going to make a dance step, you're going to do it over and over again.

00:15:35 And it's going to have to be in a loop.

00:15:36 So that's the way I've structured all of my classes.

00:15:40 And it's interesting because sometimes the students get frustrated that I'm not, you know, specifically telling them all this stuff and having them just regurgitate it to me on a test.

00:15:51 You know, they figure out what they need to know as they're working on the projects.

00:15:55 Yeah.

00:15:56 Well, I was on the other side of that when I was in college.

00:16:00 My computer science courses, my first one, all the tests were on paper.

00:16:05 And, you know, this is not a better way to learn, you know, even though it might be easier to, like, fill out some sort of multiple choice or something.

00:16:13 Yeah.

00:16:13 Right.

00:16:14 Yeah.

00:16:14 They'll be thankful in the end.

00:16:16 That's cool.

00:16:16 I have gotten those notes that they're thankful in the end.

00:16:19 So I know it's working.

00:16:22 That's really cool.

00:16:23 Okay.

00:16:23 So in your first one, you probably cover things like loops and declaring variables and input and output and, you know, maybe importing some modules so that you can, you know, do your robots and so on.

00:16:35 And then the second one, you move on to, like, more modeling type stuff, right, with object-oriented programming and that kind of stuff?

00:16:41 Yeah.

00:16:42 So object-oriented programming mostly.

00:16:45 And, of course, they've been using objects the whole time.

00:16:48 And it's always a shock to them when they realize that they've been using objects the whole time.

00:16:52 And then we, of course, learn how to create our own classes in the second course.

00:17:00 And we do â€“ I do a really short project so they can just learn the basics of what a, you know, class structure is and how it works.

00:17:10 And then we do two bigger projects.

00:17:12 I do a data analysis project where they have to gather some data from the Internet in some way, shape, or form and then analyze it and visualize it.

00:17:25 So it's kind of a three-step process.

00:17:28 So just getting stuff off the Internet is a challenge.

00:17:31 And then, of course, pulling it into some sort of form that they can work with, like a CSV file or something, is another challenge.

00:17:39 And then, you know, taking the raw data and turning it into something that we might want to look at is the third challenge.

00:17:47 So that always takes longer than I think it's going to, but I'm always hopeful.

00:17:51 And then we do a simulation together sort of as a class where everybody creates their own objects.

00:18:01 They create their own classes.

00:18:02 We sort of decide what the simulation is going to be.

00:18:06 We did an aquarium one year.

00:18:09 Last year we did the North Pole.

00:18:11 So we had Santa land and we had, you know, reindeer objects and Santa objects and elf objects and candy cane objects.

00:18:19 And, yeah, it was kind of fun.

00:18:21 Yeah, I bet that was a big hit.

00:18:23 It was.

00:18:24 It was.

00:18:24 So everybody has to create their own object and they have different methods and eventually they all interact with each other.

00:18:29 And, you know, it's kind of a fun little project that we have.

00:18:32 And it sort of simulates as best as I can do, you know, what it might be like to work on a team developing a product together.

00:18:41 That's cool.

00:18:42 Do you teach them any, like, source control, like GitHub or anything like this?

00:18:46 No, I don't.

00:18:47 I haven't gone there yet.

00:18:49 It's sort of on my list of things to figure out how to work in.

00:18:52 So, yeah.

00:18:53 Some of them have been to summer camps and whatnot where they've learned that.

00:18:57 It is kind of a hard thing to explain to them.

00:19:00 But, yeah, it's on my list to get to at some point.

00:19:05 Yeah, of course.

00:19:06 Well, there's always the challenge of, like, you want to show them everything.

00:19:08 But if you do that, then they'll learn nothing, right?

00:19:11 Right, right.

00:19:11 They just get overwhelmed and freak out.

00:19:13 Nice.

00:19:15 And so, you know, it's really cool that you start with Python.

00:19:18 And it seems like they get basically two years of Python.

00:19:21 Year and a half-ish.

00:19:24 Year and a half.

00:19:24 Okay, year and a half.

00:19:25 The second one is a semester, right?

00:19:27 Yeah.

00:19:27 Yeah, cool.

00:19:28 So they get a year and a half of Python.

00:19:30 And then they move on to other topics.

00:19:32 And are those still in Python?

00:19:34 Not all of them, right?

00:19:35 Not all of them.

00:19:37 I am teaching this year for the first time a web design and development class, which is kind of funny since that's my background.

00:19:43 It took me five years to get to teach that course.

00:19:46 So it's happening this year, which obviously they could use Python for.

00:19:52 I am going to teach them JavaScript.

00:19:54 But I've already told them that, you know, if they prefer working in Python and want to go in that direction, I'll make sure everything's set up for them so that they can do that.

00:20:04 And I've had some students do some things in Python just for the heck of it, which is always kind of fun.

00:20:13 But yeah, so that's that course.

00:20:17 And then I also have a physical computing course and a mobile computing course, which I don't do Python for either of those.

00:20:26 Those are C-based courses.

00:20:28 Okay.

00:20:29 Yeah.

00:20:30 That's sort of the senior level type things, right?

00:20:32 Exactly.

00:20:32 Yep.

00:20:33 Yep.

00:20:33 They actually have advanced topics in front of them.

00:20:36 So, yeah.

00:20:37 Yeah.

00:20:38 They're ready for compilers, semicolons, and curly braces, I guess.

00:20:40 Exactly.

00:20:41 Exactly.

00:20:42 And pointers.

00:20:43 Maybe that's more the hard part.

00:20:45 Right.

00:20:45 Right.

00:20:46 This episode is brought to you by Hired.

00:20:59 Hired is a two-sided, curated marketplace that connects the world's knowledge workers to the best opportunities.

00:21:06 Each offer you receive has salary and equity presented right up front, and you can view the offers to accept or reject them before you even talk to the company.

00:21:15 Typically, candidates receive five or more offers in just the first week, and there are no obligations.

00:21:20 Ever.

00:21:21 Sounds pretty awesome, doesn't it?

00:21:23 Well, did I mention there's a signing bonus?

00:21:25 Everyone who accepts a job from Hired gets a $2,000 signing bonus.

00:21:29 And as Talk Python listeners, it gets way sweeter.

00:21:34 Use the link Hired.com slash Talk Python To Me, and Hired will double the signing bonus to $4,000.

00:21:41 Opportunity's knocking.

00:21:43 Visit Hired.com slash Talk Python To Me and answer the call.

00:21:56 Okay.

00:21:57 So, in the physical computing one, this is like sort of the Internet of Things.

00:22:01 Is that right?

00:22:02 Yep.

00:22:02 Exactly.

00:22:03 What do you guys do with the girls there?

00:22:05 So, we, it's mostly Arduino based.

00:22:08 So, I have, you know, a collection of Arduinos and accessories.

00:22:14 And we also have a fully stocked, all of our, this just happened over the summer.

00:22:20 My classroom is now fully stocked with anything they might want to build.

00:22:24 I have a laser cutter and a CNC machine and two 3D printers.

00:22:28 So, the idea is that they would, you know, come up with a project that requires some sort of programming.

00:22:35 And then create the thing that the Arduino is going to live in using all that other equipment.

00:22:41 Oh, that is so cool.

00:22:43 Yeah.

00:22:43 Yeah.

00:22:44 It's been pretty fun.

00:22:45 I didn't get to teach it last year because there weren't enough of me to go around.

00:22:50 So, I had to hire somebody else this year.

00:22:53 So, that worked out well.

00:22:55 So, last year, I had one of my favorite projects that didn't quite get completed.

00:23:01 And that's the other thing that happens in the physical computing class especially is that we just sometimes don't finish.

00:23:08 They're too ambitious.

00:23:10 So, one student made, wanted to make a pet rock that took, that had its own Twitter account.

00:23:18 And it would take tweets and then decide what the mood of those tweets were.

00:23:24 And then display on a little LED matrix, you know, a happy face or a frowny face or something like that.

00:23:32 So, that's pretty awesome.

00:23:34 Yeah.

00:23:34 It was pretty awesome.

00:23:35 The hard part about that is working with Twitter.

00:23:38 So, that was a big challenge.

00:23:40 She got the LED matrix to change its face.

00:23:44 And she got, on occasion, the Twitter thing to work, but she couldn't get them to work together.

00:23:49 So, it was a little challenging.

00:23:51 Yeah.

00:23:52 That's a pretty ambitious project.

00:23:53 It was.

00:23:54 Especially if it's done in C.

00:23:55 Yeah.

00:23:57 Exactly.

00:23:58 I think it's really cool that you have these 3D printers and laser cutters and so on to actually make the things.

00:24:06 Because the Internet of Things, so much of it, when people get started, it seems like, okay, well, here you're left with kind of this, like, board with wires coming out of it.

00:24:14 Right.

00:24:15 Right.

00:24:15 And how does that feel like I really built a thing?

00:24:18 That's not a thing.

00:24:19 That's a board with wires coming out of it, right?

00:24:20 Right.

00:24:20 Yeah.

00:24:21 Yeah.

00:24:21 And, yeah, so, my goal is for them to make it look pretty by the end.

00:24:25 Or at least, you know, not like a board with wires coming out of it.

00:24:28 And most of them got there.

00:24:30 They all created, you know, some sort of housing for their project.

00:24:36 Some of them made it out of cardboard.

00:24:38 I didn't have a laser cutter at the time, but I did have a 3D printer.

00:24:41 So, I had a 3D printed, like, music box thing that turned out really well.

00:24:47 Yeah.

00:24:48 So, they do make that part.

00:24:50 It's nice because they can actually, when they get frustrated with the coding, they can say, all right, I'm just going to, you know, start working on the housing.

00:24:58 Because that's, you know, it gives them a little bit of a break.

00:25:01 Yeah.

00:25:01 Let's them focus on different things.

00:25:03 That's really cool.

00:25:03 Yeah.

00:25:03 Yeah.

00:25:04 By the way, I have a movie recommendation if you want to inspire them for 3D printing.

00:25:08 There's a documentary that just came out called Print the Legend, which is actually super dramatic about the history of, like, how MakerBot got formed and the other competitive ones.

00:25:18 So, let's check that out.

00:25:19 If you're the listeners, I think it would be helpful.

00:25:22 Yeah, that's great.

00:25:23 Yeah, surprisingly dramatic.

00:25:25 Okay.

00:25:25 And the other thing that you teach these girls is iPhone and Android development.

00:25:32 Yeah.

00:25:33 Which is, that's the hardest thing for me.

00:25:35 Because, of course, there was no internet when I went to school.

00:25:38 And there was definitely no mobile phones when I went to school.

00:25:41 Sure.

00:25:42 So, yeah, there was, so I'm constantly changing the language for that.

00:25:46 We're mostly, I mean, I personally have an Android, but most of my students mostly have iPhones.

00:25:52 You know, Apple basically owns my student population for whatever reason.

00:25:56 So, I could use, you know, Objective-C, but it just, it's hard.

00:26:04 It's super hard, yeah.

00:26:05 Yeah, and a lot of times I will get students who've only had the intro, and so throwing them into something like that is a challenge.

00:26:12 So, I'm still thinking about what I'm going to, what language I'm going to use or what framework, really, I'm going to use for that.

00:26:20 And I'm looking at possibly using TouchDevelop as, because it's browser-based, it's cross-platform, and that's another challenge I have is, you know, for the students who aren't iPhone people, what if they want to put their, you know, new create game on their phone?

00:26:39 And if you use any of Apple's development things, you're stuck with just the iPhone.

00:26:45 Right, and if you want to say, well, we're going to teach you Apple and then teach you Android, that's all of a sudden, like, way too much material to cover.

00:26:50 Exactly.

00:26:51 Because there's not a whole lot of similarities.

00:26:52 No, right.

00:26:54 I mean, yeah, Java, C, I know, so.

00:26:57 Yeah, I mean, there's other stuff like Xamarin and PhoneGap, and they're all okay, but it would be nice if Python had an answer there.

00:27:05 There's something, like, Kivy for Android, but not really on Apple, like you said, and that's where the majority of the students are, so.

00:27:12 Yeah, yeah, it is a challenge, and it's one of those, the other thing that's a challenge about it is that because, actually, Python and some of the other stuff we work with has kind of instant gratification,

00:27:24 the mobile development doesn't have that instant gratification, and it feels painful to them.

00:27:31 So, they have been good sports about it, but it is, it's not as, yeah, instantly gratifying as animating something in Python, for example.

00:27:40 Yeah, definitely not as developer-friendly.

00:27:41 Yeah.

00:27:42 I guess the counterbalance there to keep them going is they all have phones, and I have, you know, teenage daughters myself, and they love phones, and so, you know, if they could program that thing, that would be perfect for them, right?

00:27:54 Yeah, well, and that's part of why I wanted to look at TouchDevelop is that you can program right on your phone in addition to the browser or any other way that you might program, so that's kind of cool.

00:28:06 One thing I wanted to ask you about as well as sort of a more general question is it seems like you guys are treating computer science, you know, really well, actually, as a core skill that you think at least recommend all the girls have.

00:28:21 Yeah.

00:28:21 Do you think computer science and programming is a core skill?

00:28:24 I mean, you hear a lot of, like, hype in the news, like, everybody should learn to code, sort of like the main way I hear it, but what are your thoughts?

00:28:33 Yeah, so I'm also on the board of the Computer Science Teachers Association, so I definitely think that, you know, computer science should be part of our core curriculum in some way.

00:28:45 It's hard to figure out how to get that into schools.

00:28:50 I mean, schools' budgets are super tight.

00:28:52 You know, there aren't computer science teachers walking around looking for jobs.

00:28:58 It's not like there's a glut of them and that we can just say, oh, there's a whole pool of teachers.

00:29:05 Let's just hire them and have them teach our computer science courses.

00:29:07 They're all going to work at, you know, startups.

00:29:10 That's right.

00:29:11 These guys are tired of making six figures at these exciting places.

00:29:14 They want to come in, you know, whatever.

00:29:16 It has got to be a hard place to hire people.

00:29:19 It is.

00:29:19 It's very much a chicken and egg problem.

00:29:21 It's like if we have the courses, could we fill those courses with teachers?

00:29:27 And, you know, we don't have the courses, so there's not demand created for the teachers.

00:29:34 So it's just like a really complicated problem.

00:29:37 But I think we're getting there in that a lot of states are starting, you know, to make, allow computer science to count as a math or science credit, which is nice.

00:29:49 It's Pennsylvania, where I am, has not done that yet.

00:29:53 And even though I'm in a private school, I'm surrounded by these fantastic public schools.

00:29:59 And so I can guarantee as soon as our state flips to say that computer science is required, we would be right behind them in requiring a computer science course for all of our students.

00:30:10 Or allowing it to count for math or science, whichever way it goes.

00:30:14 Right.

00:30:15 You guys already have the infrastructure there to just say, hey, it's required now, right?

00:30:19 Right.

00:30:19 Because you've been teaching it.

00:30:20 It's not like a school where they have, you know, maybe an HTML class, maybe.

00:30:26 Right.

00:30:26 Or Photoshop or, you know, a robotics elective.

00:30:29 Those are some of the common things they're done.

00:30:32 And it's hard because I think computer science is such a broad field.

00:30:36 If you're in it, you know that.

00:30:38 If you're not in it, you think it's just one thing.

00:30:41 It's just coding.

00:30:42 And maybe even in a specific language as opposed to the, I don't know how many languages there are now.

00:30:47 There are probably several hundred programming languages.

00:30:51 So, you know, most people have no clue that that's the case.

00:30:55 So they, you know, defining what would be that required course, I think, is kind of the hard thing for people who have no idea what computer science is.

00:31:04 Right.

00:31:05 If you could convince them that this is a thing they need, then they'd be like, well, geez, where do we start?

00:31:08 It's so overwhelming, right?

00:31:09 Right.

00:31:10 It is.

00:31:11 Yeah.

00:31:12 Yeah.

00:31:12 And I think, you know, and I do, even though the core of my courses is coding and programming, we take an awful lot of time to also just kind of talk about some of the theory of computer science as much as I think that they can get as 14-year-olds.

00:31:28 You know, we talk about algorithms and we talk about, you know, different kinds of algorithms.

00:31:32 And we spend a lot of time talking about how it touches their lives.

00:31:37 I mean, it's great when you can talk about an algorithm and connect it to Facebook's algorithm for, you know, showing and hiding different parts of your news feed.

00:31:47 And then there's all the fun, you know, hacking that happens that always comes up.

00:31:52 So, you know, it's pretty easy to connect it to the real world and then talk about the things that they've already learned that are somewhat related to what's going on.

00:32:01 You know, if you've done an encryption project, then you sort of know how those hacking things happen.

00:32:08 I think there's some sort of, not barriers, some preconceptions or misconceptions rather that a lot of the population has that if we could break them, this would really change.

00:32:22 Like, for example, computer programming is boring and not creative.

00:32:27 Right.

00:32:27 It's a non-social thing you go do in the basement by the dark because you don't like other people.

00:32:33 I mean, you know, it's completely the opposite of that in today's world, right?

00:32:37 And if everybody saw that and they could, I don't know, you could think, well, maybe should we be doing geometry?

00:32:43 Right, right.

00:32:44 Or should, maybe we should be teaching programming in this slot where geometry about logical thinking through, like, axioms was the goal, right?

00:32:53 It would be so much better, I think, to do some sort of computer thinking there.

00:32:57 This episode is brought to you by Codeship.

00:33:15 Codeship has launched organizations, create teams, set permissions for specific team members, and improve collaboration in your continuous delivery workflow.

00:33:23 Maintain centralized control of your organization's projects and teams with Codeship's new organizations plan.

00:33:29 And as Talk Python listeners, you can save 20% off any premium plan for the next three months.

00:33:34 Just use the code TALKPYTHON, all caps, no spaces.

00:33:38 Check them out at Codeship.com and tell them thanks for supporting the show on Twitter where they're at, Codeship.

00:33:43 I agree.

00:33:50 Yeah.

00:33:50 I mean, it's funny because, you know, I mentioned that my major was creative writing.

00:33:54 And I swear, programming is a much more creative endeavor than writing poetry in a lot of ways.

00:34:01 It sounds weird.

00:34:02 And poetry is very isolating.

00:34:04 You know, you're in a room, you're writing poems, and maybe eventually someone reads them or you read them to someone.

00:34:10 But, you know, when you're making a website, everyone's going to see it.

00:34:16 You know, you put it up on the web and you make it public and you can tweet it and put it on Facebook and everyone can see it.

00:34:22 And that's pretty cool.

00:34:24 Yeah.

00:34:25 It's very, there's very few other places in the world that five people can get together for six months and build something and share it with 100 million people.

00:34:34 Right.

00:34:35 Yeah.

00:34:35 Where else does that happen?

00:34:37 Yeah.

00:34:37 Nowhere.

00:34:38 Nowhere.

00:34:38 So it's really amazing.

00:34:40 So I think what you're doing there with having, you know, that much exposure over time, do you, I should ask you, do you feel like your students are coming out with better conceptions?

00:34:52 I do.

00:34:52 I think that they definitely feel like it's not isolating and it's not lonely and that they're making really creative and interesting things.

00:35:04 Hopefully they're carrying that on to their classmates and beyond.

00:35:09 Certainly I've seen an increase in enrollment.

00:35:11 So that probably tells me that they're telling their friends that it's really cool and fun and not, you know, boring and awful the way that, you know, TV and film tends to make it look.

00:35:23 So, yeah, I think my hope is that when they graduate and go on and not all of them, you know, just like math teachers don't expect all their students to become mathematicians.

00:35:37 I don't expect all my students to necessarily become computer scientists.

00:35:40 But I think having that deeper understanding of technology that goes beyond, you know, being able to post to Facebook is really important because I have yet to find a job or area or field that doesn't benefit from having that deeper understanding of technology, of how things really work under the hood.

00:36:05 You know, I keep getting pulled into things just here locally at school because I'm one of, you know, two people on campus that has that deeper understanding of, you know, how a database works and how it connects to the web and how, you know, that gets pulled in different places.

00:36:21 And I can't think of a single field or job that technology isn't important.

00:36:28 It's how businesses operate, you know.

00:36:30 It absolutely is.

00:36:32 And if, you know, if somebody wants to become a biologist, they're way more likely to be successful if they can do a little programming to automate their data analysis.

00:36:41 Exactly.

00:36:42 Or if they want to become, I don't know, a social scientist, right?

00:36:48 Like a sociologist, psychiatrist, something like, again, the programming.

00:36:52 Yeah, you've got to crunch the data.

00:36:54 Exactly.

00:36:54 And I think CS probably is a core skill, at least as much as geometry and those things are.

00:37:03 Yeah.

00:37:03 Absolutely.

00:37:05 That's my thought.

00:37:06 Me too.

00:37:07 I'm with you.

00:37:08 Let's change the world.

00:37:09 Let's do it.

00:37:10 Let's do it.

00:37:10 So one event that I wanted to ask you about that's about changing the world that is making a small dent is Hour of Code.

00:37:16 Are you guys doing anything with that?

00:37:18 Yeah, we are.

00:37:19 I just bought off of eBay about 400 or 500 punch cards to use as invitations for our Hour of Code.

00:37:30 We have done different things in the past.

00:37:34 We've done an evening event and invited people and we have them kind of learn how to code and we actually have the students do the teaching.

00:37:41 We're going to do it a little bit differently this time.

00:37:44 We're going to have it be a whole day event on a weekend when more people can make it.

00:37:51 It's a terrible time of year to have it because it's December and up here in the north anyway, the weather can interfere with anything you might have planned.

00:38:00 But we're going to run a three-hour workshop.

00:38:03 We have a partnership with Tech Girls, which is a local organization that provides free workshops for middle school girls to learn programming primarily.

00:38:15 So we have taught a few of those ourselves.

00:38:18 We offer our space as a resource for them.

00:38:21 And we're going to partner with them specifically for CS Education Week and have them.

00:38:28 We're running a workshop for their population.

00:38:31 And then we're going to have a showcase afterwards of both the projects that get created in that workshop and the projects that our students have created.

00:38:39 And we're hoping to have a speaker and food and all that good stuff.

00:38:42 That's really awesome.

00:38:44 Are you looking for volunteers?

00:38:45 Probably, yeah.

00:38:48 Yeah, cool.

00:38:49 So if you're in the Boston area, maybe think about throwing your name out there.

00:38:53 You know, I live in Portland, Oregon, even though I'm spending a year in Germany, right?

00:38:58 And so I've been helping out my â€“ I have three daughters.

00:39:01 I've been helping out their school during the Hour of Code.

00:39:03 Oh, cool.

00:39:04 And it was just so successful.

00:39:07 I think the teachers and the principals were just blown away with what the kids could do.

00:39:11 Even first graders were just amazing.

00:39:14 And when you're working at first grade, second grade, third grade, those levels, there's no difference in the way that the girls or the boys perceive it in terms of excitement or energy or whatever.

00:39:26 Like something happens later, but if we can, you know, drive that interest early, then, you know, I think that could make a big difference.

00:39:33 I agree, yeah.

00:39:34 I guess regardless of where you are, you know, think about helping out the Hour of Code.

00:39:37 There's Hour of Code, which is December 8th, around then.

00:39:41 You know, there's so many resources out there that you don't have to put much effort into it, right?

00:39:46 You can go over to the Hour, you know, code.org, find some sort of pre-built, like, you know, teaching thing for the right level and just help kids through it is really all people got to do, right?

00:39:56 Yeah.

00:39:57 I mean, it's just, yeah, running them through it, letting them see what they can do.

00:40:01 And there's, yeah, like you said, there's so many resources online now, which is great.

00:40:05 Yeah.

00:40:05 It's definitely easier than when we were learning back in the day.

00:40:08 Yes.

00:40:09 Yeah.

00:40:09 Yeah.

00:40:10 You don't have to drag the book out.

00:40:11 That's right.

00:40:12 Look stuff up.

00:40:15 Laura, is there anything else you want to cover before we kind of wrap things up?

00:40:19 I don't think so.

00:40:21 This has been great.

00:40:22 I mean, if we can get Python to come up with a mobile computing platform, that'll solve all my problems.

00:40:27 I can just stay in Python forever.

00:40:29 That would be fantastic.

00:40:30 You know, it's not completely insane, right?

00:40:32 We've got things like PyPy, which are JIT compiled Python.

00:40:36 If we could switch the JIT compiler to an ahead-of-time compiler and get it to compile towards the right thing, right?

00:40:43 Maybe we could have us a model what the Xamarin guys are doing with C#, right?

00:40:48 Yeah, exactly.

00:40:49 Which isn't natively allowed on iPhone, but they've found a way to compile it for it.

00:40:52 So we can hope, right?

00:40:53 We can hope.

00:40:54 I don't have time to work on that, but I'm going to put that out there.

00:40:58 Somebody else can do it.

00:40:59 Yeah, so we'll throw the idea out.

00:41:01 How's that?

00:41:01 That sounds good.

00:41:02 Awesome.

00:41:02 So let me ask you two quick questions before you go.

00:41:05 For Python, what's your favorite editor?

00:41:07 I have to say, I kind of like PyCharm.

00:41:12 It's been nice.

00:41:14 Although I tend to work on the web a lot, so I'm using just your basic text editor for that.

00:41:20 Right, some kind of web IDE or a sort of smart text editor, rather.

00:41:25 Exactly.

00:41:25 I like color coding.

00:41:27 It's kind of my favorite thing.

00:41:28 At least in syntax highlighting.

00:41:29 Awesome.

00:41:30 And then are there like PyPI packages that you guys use that are really awesome you want to point out or raise awareness of?

00:41:37 What do you guys do in your classes that's really cool and well-received?

00:41:41 We've used NumPy a little bit or NumPy, depending on how you want to say it.

00:41:46 I like NumPy myself.

00:41:47 It just sounds like it's a soft, fuzzy, like, you know, Barney creature.

00:41:52 Students went a little nuts with the libraries last year, and they're just downloading crazy stuff.

00:41:58 They really were.

00:42:00 They probably downloaded 10 or so random libraries just to try to get stuff off the Internet.

00:42:05 We used, and I can't remember what it was, we used a couple of different Twitter packages that worked pretty well,

00:42:11 which was nice considering our Arduino Twitter packages didn't work.

00:42:16 So Python wins in that regard.

00:42:19 They worked great.

00:42:20 We were able to pull tweets really easily.

00:42:22 I think there's a tweet.

00:42:23 Is it Tweepy?

00:42:24 I think that was the one we ended up using.

00:42:26 Okay, cool.

00:42:26 Yeah, people should check that out if they want to integrate with Twitter.

00:42:29 Yeah, Twitter can be tricky if you don't have, you know, all that OAuth stuff.

00:42:32 It's way more complicated than it sort of seems like it should be at first.

00:42:35 Yeah.

00:42:36 Well, this we got running in like five minutes, so it was pretty easy.

00:42:39 Yeah, that's the way to do it.

00:42:41 Laura, this has been really interesting.

00:42:43 So I think you guys have a great mission, and it seems like you're making great progress.

00:42:47 There's almost no other high school I've seen that has, you know, four years of really interesting, modern-feeling computer science classes.

00:42:55 Well, thank you.

00:42:56 Thanks for putting that out there and leading the way.

00:42:58 Yeah, thanks a lot.

00:43:00 Yeah, thanks for being on the show.

00:43:01 Talk to you later.

00:43:02 All right.

00:43:03 Bye.

00:43:06 This has been another episode of Talk Python To Me.

00:43:09 Today's guest was Laura Blankenship, and this episode has been sponsored by Hired and CodeShip.

00:43:13 Thank you guys for supporting the show.

00:43:16 Hired wants to help you find your next big thing.

00:43:18 Visit Hired.com slash Talk Python To Me to get five or more offers with salary and equity presented right up front and a special listener signing bonus of $4,000.

00:43:27 CodeShip wants you to always keep shipping.

00:43:31 Check them out at CodeShip.com and thank them on Twitter via at CodeShip.

00:43:35 Don't forget the discount code for listeners.

00:43:37 It's easy.

00:43:37 Talk Python.

00:43:38 All caps.

00:43:39 No spaces.

00:43:40 You can find the links from today's show at talkpython.fm/episodes slash show slash 27.

00:43:46 Be sure to subscribe to the show.

00:43:49 Open your favorite podcatcher and search for Python.

00:43:51 We should be right at the top.

00:43:53 You can also find the iTunes and direct RSS feeds in the footer of the website.

00:43:58 Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

00:44:03 You can hear the entire song at talkpython.fm.

00:44:06 This is your host, Michael Kennedy.

00:44:09 Thanks for listening.

00:44:10 Smix, take us out of here.

00:44:25 Developers, Developers, Developers, Developers, Developers, Developers, Developers, Developers,

00:44:33 Bye.

00:44:33 .

