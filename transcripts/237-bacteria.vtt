WEBVTT

00:00:00.001 --> 00:00:03.000
Let's start this episode with a philosophical question.

00:00:03.000 --> 00:00:05.880
Are you human? Are you sure?

00:00:05.880 --> 00:00:08.920
We could begin to answer that question physically.

00:00:08.920 --> 00:00:13.320
Are you made up of cells that would typically be considered as belonging to the human body?

00:00:13.320 --> 00:00:16.280
It turns out the answer is, maybe.

00:00:16.280 --> 00:00:19.080
We have many ecosystems within us.

00:00:19.080 --> 00:00:22.420
Understanding them is essential to our own well-being.

00:00:22.420 --> 00:00:24.860
In this episode, you'll meet Sebastian Proust,

00:00:24.860 --> 00:00:28.560
who is using Python to study the bacteria in our world.

00:00:29.200 --> 00:00:34.200
This is Talk Python to Me, episode 237, recorded September 27th, 2019.

00:00:34.200 --> 00:00:51.180
Welcome to Talk Python to Me, a weekly podcast on Python,

00:00:51.180 --> 00:00:54.140
the language, the libraries, the ecosystem, and the personalities.

00:00:54.140 --> 00:00:56.080
This is your host, Michael Kennedy.

00:00:56.080 --> 00:00:58.220
Follow me on Twitter, where I'm @mkennedy.

00:00:58.400 --> 00:01:01.960
Keep up with the show and listen to past episodes at talkpython.fm,

00:01:01.960 --> 00:01:04.380
and follow the show on Twitter via at Talk Python.

00:01:04.380 --> 00:01:07.700
This episode is brought to you by Linode and Tidelift.

00:01:07.700 --> 00:01:09.980
Please check out what they're offering during their segments.

00:01:09.980 --> 00:01:11.400
It really helps support the show.

00:01:11.400 --> 00:01:16.640
Hey, folks, I want to tell you about a new course that we just launched over at Talk Python Training.

00:01:16.640 --> 00:01:20.760
This course lets you create web apps with pure Python.

00:01:20.760 --> 00:01:25.040
Now, you may be thinking, sure, I can use Flask and create web apps with pure Python now.

00:01:25.400 --> 00:01:29.800
No, I mean on the browser as well as on the back end.

00:01:30.140 --> 00:01:35.420
This course is about the Anvil platform, and the course is called Anvil Web Apps with nothing but Python.

00:01:35.420 --> 00:01:37.800
What's really cool is, yes, you have a back end.

00:01:37.800 --> 00:01:39.580
You can write Python code there, and that's cool.

00:01:39.580 --> 00:01:41.080
They manage the database.

00:01:41.540 --> 00:01:52.860
But also, they've set it up so you can write Python code and use a visual designer with events on the front end to create a single page app or a spa and write it entirely in Python.

00:01:53.100 --> 00:02:00.100
So if all the different technologies involved in building web apps are overwhelming to you, but you still need to build a web app, check out this course.

00:02:00.100 --> 00:02:02.680
It's a five-hour course, and it's even free.

00:02:02.680 --> 00:02:07.960
Just visit talkpython.fm/Anvil dash course, and it'll take you right there.

00:02:07.960 --> 00:02:10.820
Log in, click join this course, and you got it.

00:02:10.820 --> 00:02:12.240
Now let's get to that interview.

00:02:12.240 --> 00:02:14.780
Sebastian, welcome to Talk Python to Me.

00:02:14.780 --> 00:02:15.500
Hi, Michael.

00:02:15.500 --> 00:02:16.240
Thanks for having me.

00:02:16.300 --> 00:02:17.480
It's great to have you here.

00:02:17.480 --> 00:02:17.920
It's an honor.

00:02:17.920 --> 00:02:25.280
We're going to have so much fun talking about some very small things that have maybe a big impact on our world.

00:02:25.280 --> 00:02:26.200
Exactly, yeah.

00:02:26.200 --> 00:02:33.980
So we're going to talk about studying bacteria and communities of bacteria using Python, which is going to be fascinating.

00:02:33.980 --> 00:02:35.880
But before we get to that, let's start with your story.

00:02:35.880 --> 00:02:37.340
How did you get into programming in Python?

00:02:37.340 --> 00:02:40.740
So I actually got into programming about 20-something years ago.

00:02:40.740 --> 00:02:45.100
I was 12, and my favorite game was Quake at the time.

00:02:45.360 --> 00:02:49.900
And apart from the actual game, I also had a disk with all kinds of modifications.

00:02:49.900 --> 00:02:58.600
And on there was the source code for the game logic that you need to make your own modification and the QuakeC compiler.

00:02:58.600 --> 00:03:07.800
Now, the cool thing with QuakeC is that you can actually decompile the code from other modifications to readable code.

00:03:08.240 --> 00:03:16.360
So I was just like decompiling stuff I liked, trying to figure out how it worked, and then trying to basically come up with my own stuff.

00:03:16.360 --> 00:03:27.240
And I never really succeeded into making like the decisive version of Quake, but I did get a pretty good understanding of what's a function, what's a for loop, what's an if statement.

00:03:27.660 --> 00:03:30.240
So I really learned programming through that medium.

00:03:30.240 --> 00:03:34.080
I used to play Quake and Doom, and those were fun games.

00:03:34.080 --> 00:03:35.700
And I remember the mods.

00:03:35.700 --> 00:03:42.860
I think it was not Quake, but Doom, which was by the same software.

00:03:42.860 --> 00:03:44.680
It was the predecessor, right?

00:03:44.680 --> 00:03:44.880
Yeah.

00:03:44.880 --> 00:03:46.220
And you could change things up.

00:03:46.300 --> 00:03:49.780
I remember one we had was a Barney mod.

00:03:49.780 --> 00:03:54.340
Do you know Barney, the weird purple dinosaur?

00:03:54.340 --> 00:03:54.800
Yeah.

00:03:54.800 --> 00:04:02.180
It would replace all the characters with this dinosaur thing and different dinosaurs, and they made weird noises, and it was amazing.

00:04:02.180 --> 00:04:07.920
There was another one where it had these super scary creatures, and a friend of mine was playing it, and it was dark.

00:04:08.080 --> 00:04:10.260
And I spooked him from behind, right?

00:04:10.260 --> 00:04:16.400
As this creature from this mod came out, he got so scared, he ripped the keyboard drawer off of my desk.

00:04:16.400 --> 00:04:18.320
I thought, oh my gosh, I should have.

00:04:18.320 --> 00:04:19.860
It was just totally frightening.

00:04:19.860 --> 00:04:20.820
It was so, so funny.

00:04:20.820 --> 00:04:22.940
I really enjoyed those mods.

00:04:22.940 --> 00:04:23.380
Those are great.

00:04:23.380 --> 00:04:24.860
It's a really cool way to learn programming.

00:04:24.860 --> 00:04:25.320
Yeah.

00:04:25.320 --> 00:04:27.800
I had like a whole bunch of them, and some were like tiny.

00:04:27.800 --> 00:04:30.680
They were just like a secondary fire for one of the guns.

00:04:30.680 --> 00:04:31.740
Yeah.

00:04:31.740 --> 00:04:36.160
I was just looking for a way to combine them, because you could only load one at a time,

00:04:36.200 --> 00:04:38.580
and I wanted to have multiple running at the same time.

00:04:38.580 --> 00:04:45.720
And so after I played around with QuakeC for a while, I did pick up some proper programming languages through high school.

00:04:45.720 --> 00:04:49.080
But then ultimately, I went on and studied biology.

00:04:49.080 --> 00:04:52.420
I always was a bit in doubt whether it was the right choice or not.

00:04:52.420 --> 00:04:56.760
At the end of my biology degree, I noticed that there's something like bioinformatics.

00:04:56.760 --> 00:04:58.140
I was like, oh, that's great.

00:04:58.140 --> 00:05:01.140
It allows me to kind of combine the best of both worlds.

00:05:01.140 --> 00:05:03.500
And I started a PhD in bioinformatics.

00:05:03.820 --> 00:05:11.440
Now, at the time, we were using like a combination of Perl with some Java applets for our web stuff.

00:05:11.440 --> 00:05:13.940
There was also PHP in there.

00:05:13.940 --> 00:05:15.600
So it was kind of like...

00:05:15.600 --> 00:05:16.000
Early days.

00:05:16.000 --> 00:05:16.380
Yeah.

00:05:16.380 --> 00:05:18.800
It was kind of like a whole bunch of things glued together.

00:05:18.800 --> 00:05:28.060
So a couple of years later, when I had the opportunity to start like a new platform, I thought like, okay, I want to stick with like one language for the backend, one for the frontend.

00:05:28.560 --> 00:05:32.360
And that's how I basically discovered Python and Flask.

00:05:32.360 --> 00:05:33.720
Okay.

00:05:33.720 --> 00:05:35.040
And you haven't looked back ever since.

00:05:35.040 --> 00:05:37.960
It's just such a convenient way to develop things.

00:05:37.960 --> 00:05:38.200
Yeah.

00:05:38.200 --> 00:05:50.560
I got to think that the relevance of Python to biology is even more significant now than it was back then with all the data science developments and the other extra packages getting developed and all.

00:05:50.560 --> 00:05:50.900
Sure.

00:05:50.900 --> 00:05:54.700
So in the beginning, bioinformatics was really fueled by Perl.

00:05:54.700 --> 00:06:00.560
And just over the course of a couple of years, this has been completely taken over by Python.

00:06:00.560 --> 00:06:00.920
Yeah.

00:06:00.920 --> 00:06:01.600
I can imagine.

00:06:01.600 --> 00:06:02.780
Is it a lot?

00:06:02.780 --> 00:06:05.100
What kind of data files and stuff are you working with?

00:06:05.100 --> 00:06:14.900
Is it, you know, I imagine like a lot of, you know, genetic sequence character strings or like what kind of stuff are you working with when you're doing bioinformatics?

00:06:15.060 --> 00:06:15.260
Right.

00:06:15.260 --> 00:06:17.520
So this really is dependent on what field you're in.

00:06:17.520 --> 00:06:19.860
In my case, it's mostly sequence information.

00:06:19.860 --> 00:06:24.200
So that can be either raw sequences that come from a machine.

00:06:24.200 --> 00:06:33.380
So those are very, very short reads, about 20 to a couple hundred nucleotides and the quality scores for each of them, like how reliable they have been sequenced.

00:06:33.900 --> 00:06:40.800
Or it can also be like a full genome sequence, which is just a string of several millions of characters.

00:06:40.800 --> 00:06:41.140
Right.

00:06:41.140 --> 00:06:42.600
A lot of ACT and G in there.

00:06:42.600 --> 00:06:45.580
But they're like bioinformatics is a very, very broad field.

00:06:45.580 --> 00:06:49.060
So there are people that are doing completely different things with other types of data.

00:06:49.060 --> 00:06:55.800
If you look at metabolite data, those are like the chemical compounds that appear in a certain sample.

00:06:55.800 --> 00:06:58.700
That's a very different type of data entirely.

00:06:58.700 --> 00:06:58.980
Okay.

00:06:58.980 --> 00:06:59.900
It's super interesting.

00:06:59.900 --> 00:07:02.380
It sounds like a fun place to be working for sure.

00:07:02.380 --> 00:07:03.600
Biology is super cool.

00:07:03.600 --> 00:07:08.740
Now let's talk a little bit just at large about communities of bacteria.

00:07:08.740 --> 00:07:13.900
Because as humans, a lot of people are kind of creeped out by bacteria.

00:07:13.900 --> 00:07:28.260
The thought of like there's something on my finger or worse, if I go to like a school and I touch the handle to the door, you know, what other stuff came off of other people, you know, sniffly kids or whatever.

00:07:28.260 --> 00:07:33.120
Now I have this bacteria on me and probably it's actually viruses you care about, but whatever, right?

00:07:33.300 --> 00:07:34.600
People are freaked out about it.

00:07:34.600 --> 00:07:42.820
But it's a much more common and actually important part of life for all creatures, including humans, right?

00:07:42.820 --> 00:07:47.340
Like there's a really interesting TED talk, which I'll link to from your boss.

00:07:47.900 --> 00:07:52.160
And he starts the TED talk with something like, so you think you're a human, huh?

00:07:52.160 --> 00:07:52.560
Yes.

00:07:52.560 --> 00:08:04.780
So I might have to creep those people that are afraid of bacteria out a little bit more because basically for every cell that makes up your body, there is a bacteria somewhere on or in your body.

00:08:05.040 --> 00:08:16.640
And if you look at your genetic information, the number of genes that you have compared to the total number of genes those bacteria have, that's like almost a hundred fold higher for bacteria.

00:08:16.640 --> 00:08:17.040
Wow.

00:08:17.040 --> 00:08:21.540
So there's a hundred times more genetic information of bacteria on us.

00:08:21.820 --> 00:08:27.320
And we're about 50-50 in, maybe not in mass, but in terms of number of cells.

00:08:27.320 --> 00:08:30.780
Just half bacteria, half human cells.

00:08:30.780 --> 00:08:31.220
Exactly.

00:08:31.220 --> 00:08:32.740
That's going to take a moment to sink in.

00:08:33.620 --> 00:08:46.820
Now, I kind of knew that, but there's another stat that you threw out there that just numbers, I think this is an interesting topic partly because these numbers are so big and the things are so small that it's hard to have a concept around it.

00:08:46.820 --> 00:08:48.940
It's hard to conceptualize it.

00:08:48.940 --> 00:08:56.100
So you said that if you get, say, a gram of soil, that a gram, I mean, that's like tiny, right?

00:08:56.100 --> 00:09:03.120
Like a little sugar cube size bit of soil that has up to a billion bacteria in it.

00:09:03.120 --> 00:09:04.720
Just that little square, right?

00:09:04.720 --> 00:09:05.140
Yes.

00:09:05.140 --> 00:09:09.100
So it's like a very, very minute amount of material.

00:09:09.100 --> 00:09:11.620
And there's like a ton of bacteria in there.

00:09:11.620 --> 00:09:17.260
And if you look at the complexity or the number of different species in that sample, that's stellar.

00:09:17.260 --> 00:09:22.080
Like in that single gram of soil, you could easily have like 10,000 different kinds of bacteria.

00:09:22.080 --> 00:09:24.760
So it's a very, very complex environment.

00:09:24.760 --> 00:09:29.840
And that interacts really with, in case of soil, the roots of plants, right?

00:09:29.840 --> 00:09:35.980
On our body, there are so many different bacteria on our skin, but also on the inside in our gut.

00:09:35.980 --> 00:09:37.860
And they actually affect us.

00:09:37.860 --> 00:09:40.880
And it could be bad, but a lot of times it could be good, right?

00:09:40.880 --> 00:09:44.000
Like the bacteria in your gut has a lot to do with your health.

00:09:44.000 --> 00:09:50.480
You know, you hear about people taking antibiotics and it like killing out some of that stuff in their stomach.

00:09:50.480 --> 00:09:53.720
And they're not as healthy necessarily because of that, right?

00:09:53.720 --> 00:09:55.540
So yeah, it's crazy.

00:09:55.540 --> 00:10:02.600
We actually tend to think of bacteria as something that causes disease, that causes inflammation and infections, right?

00:10:02.600 --> 00:10:05.460
But a lot of bacteria can do exactly the opposite thing.

00:10:05.460 --> 00:10:09.900
A lot of the bacteria that are living kind of like as our symbionts, really,

00:10:10.260 --> 00:10:11.420
they're essential for our health.

00:10:11.420 --> 00:10:14.240
So they can really improve our quality of life.

00:10:14.240 --> 00:10:14.520
Right.

00:10:14.520 --> 00:10:21.580
Maybe they help you with digestion, like certain types of proteins or things can be broken down because they're there, right?

00:10:21.580 --> 00:10:22.820
Yeah, I can imagine so.

00:10:22.820 --> 00:10:25.820
So I'm mostly on like the computational part.

00:10:25.820 --> 00:10:27.560
So I'm not like microbiologist.

00:10:27.560 --> 00:10:30.100
So that's a bit farther off what I'm doing.

00:10:30.100 --> 00:10:30.660
Yeah, yeah, sure.

00:10:30.660 --> 00:10:34.820
But yeah, so there are tons of bacteria that are actually beneficial for us as well.

00:10:34.820 --> 00:10:37.000
So we really need them as much as they need us.

00:10:37.000 --> 00:10:44.960
Yeah, I think at least in the US, there's been a trend against things like antibacterial soap and stuff like that that tries to completely kill off bacteria.

00:10:45.160 --> 00:10:49.840
I think as much as it might creep people out, I think there's a realization that bacteria are important.

00:10:49.840 --> 00:10:52.040
Yeah, I think that's true, right?

00:10:52.040 --> 00:10:54.660
Like if you take antibiotics, you're killing off the bad guys.

00:10:54.660 --> 00:11:00.560
But if it's a broad spectrum of antibiotics, you're also killing some of like the healthy bacteria, the ones that you do need.

00:11:00.920 --> 00:11:04.880
And that actually has a long lasting effect on your microbiomes.

00:11:04.880 --> 00:11:06.480
It takes a while to recover from that.

00:11:06.480 --> 00:11:11.860
So people are really looking into like kind of like better ways to treat these infections.

00:11:11.860 --> 00:11:12.780
Yeah, for sure.

00:11:12.780 --> 00:11:24.220
So we had this quote or this number that there's a billion bacteria in a gram of soil and there's 10,000 different kinds of bacteria.

00:11:24.220 --> 00:11:26.440
So how do you come up with that?

00:11:26.440 --> 00:11:30.480
Do you like train grad students to recognize bacteria and they take notes?

00:11:30.700 --> 00:11:31.660
And they spin around.

00:11:31.660 --> 00:11:33.200
How do you come up with that number?

00:11:33.200 --> 00:11:34.780
It can't be counting it, right?

00:11:34.780 --> 00:11:35.040
Yeah.

00:11:35.040 --> 00:11:40.220
Usually when I tell people, like we look at the amount of bacteria and which bacteria are in like different samples,

00:11:40.220 --> 00:11:44.620
they think of me hunched over a microscope and just counting what I see.

00:11:44.620 --> 00:11:46.520
It doesn't quite work like that.

00:11:46.520 --> 00:11:51.040
So all bacteria in their DNA have like a small part.

00:11:51.040 --> 00:11:57.280
And it's kind of like similar enough that we can pick it up and copy it from all those different species of bacteria.

00:11:57.700 --> 00:12:02.180
But it's different enough that we can actually identify them to some extent.

00:12:02.180 --> 00:12:05.180
So there are like tiny differences in that sequence.

00:12:05.180 --> 00:12:08.560
And that allow us to kind of like see like, okay, this read is different from that.

00:12:08.920 --> 00:12:18.280
So what we do is we basically take the DNA, copy over that one part a bunch of times, and then sequence all the DNA in those copies.

00:12:18.280 --> 00:12:22.960
And it allows us to kind of like look in databases, like which part matches which bacteria.

00:12:23.380 --> 00:12:31.680
And we get more reads from one specific bacteria, then we know, okay, there's probably more of them in the sample than from another one where we see fewer reads.

00:12:31.680 --> 00:12:32.020
Right.

00:12:32.020 --> 00:12:36.020
You just basically count the number of matches of that species' DNA.

00:12:36.020 --> 00:12:41.100
And you say, well, that must be roughly representative of its ratio in the general population.

00:12:41.100 --> 00:12:41.820
Exactly right.

00:12:41.900 --> 00:12:44.000
But this is kind of like a fingerprint, if you want.

00:12:44.000 --> 00:12:54.340
So it tells us that certain bacteria with that sequence is in the sample, but it doesn't tell us all that much about the sequence, about the bacteria that we're looking at.

00:12:54.340 --> 00:13:01.820
There's also like a more modern version, if you want, where we really try to go in and sequence everything, all the genetic information in the sample.

00:13:01.960 --> 00:13:08.980
And that gives us much more detail about what those bacteria can do, because we get the full genome information for at least some of them.

00:13:08.980 --> 00:13:14.680
But for now, our research is mostly based on the fingerprint sequencing.

00:13:14.680 --> 00:13:15.300
Sure.

00:13:15.300 --> 00:13:22.480
So something I've always wondered about, just sequencing DNA in general, is you've got so many cells mixed in there.

00:13:22.480 --> 00:13:25.580
And especially in this case, you've got different species mixed in there.

00:13:25.580 --> 00:13:29.460
Like, how do you know that this part is all one species?

00:13:29.460 --> 00:13:30.900
How do you separate that?

00:13:31.000 --> 00:13:39.140
How does it not just look like a giant scramble of, you know, if everyone in a room took their name and put them into letters and just threw that into a bucket?

00:13:39.140 --> 00:13:43.440
Like, how do you know which goes right back to which, right?

00:13:43.440 --> 00:13:44.640
How does that happen?

00:13:44.640 --> 00:13:51.940
In case for the sequencing, the omplicon sequencing, it's kind of like built in the design that's designed to deal with that kind of information.

00:13:51.940 --> 00:13:56.140
If you really take like everything, then you need to sequence pretty deep.

00:13:56.140 --> 00:14:00.800
There's like some overlapping parts in there, and it allows you to assemble different genomes.

00:14:00.800 --> 00:14:12.800
But there are like other techniques that people use as well, looking at the number of times you see a certain copy, because that means that it needs to be from a bacteria that's equally abundant, give or take.

00:14:12.800 --> 00:14:13.460
Right?

00:14:13.800 --> 00:14:17.580
So that allows people to link certain parts together.

00:14:17.580 --> 00:14:20.940
But that's not something I've actively done myself yet.

00:14:20.940 --> 00:14:21.180
Sure.

00:14:21.180 --> 00:14:25.960
So I might actually be giving wrong information here to be a bit careful.

00:14:25.960 --> 00:14:26.780
Yeah, no worries.

00:14:26.800 --> 00:14:35.400
It just seems super interesting to me that we're able to do that with such certainty and accuracy, given like how messy that it seems, you know?

00:14:35.400 --> 00:14:37.280
So it's, I don't know, there's a lot about science.

00:14:37.280 --> 00:14:37.900
It's pretty amazing.

00:14:37.900 --> 00:14:38.940
Yes, absolutely.

00:14:38.940 --> 00:14:39.580
For sure.

00:14:39.800 --> 00:14:43.560
Let's go with the fingerprint side of things that you've been working on most recently.

00:14:43.560 --> 00:14:49.120
You've got some soil or some other area that you've gotten this bacteria from.

00:14:49.120 --> 00:14:50.340
You've done the sequencing.

00:14:50.340 --> 00:14:52.960
You have these ratios of different fingerprints.

00:14:52.960 --> 00:14:57.660
This is probably where you start using some Python to answer some questions, right?

00:14:57.660 --> 00:14:58.400
Exactly, right.

00:14:58.460 --> 00:15:08.020
So at that point, let's say you have about like a thousand different samples and you get like the relative abundance of 10,000, 20,000 different bacteria across all those samples.

00:15:08.020 --> 00:15:13.040
Then you need to start using Python or some other framework to make sense out of it.

00:15:13.040 --> 00:15:17.860
So normally, you should collect metadata for all your samples.

00:15:17.860 --> 00:15:22.760
So that describes how a sample was collected, right?

00:15:22.760 --> 00:15:33.100
So for soil, you might want to get the parameters of that soil, like the pH, nutrients that are in there, the place where you sample it, how much water is in there, right?

00:15:33.100 --> 00:15:37.480
If it's from a human, you might want to ask them some medical questions.

00:15:37.480 --> 00:15:43.880
You might want to get some information about their age, their body mass index, stuff like that, right?

00:15:43.880 --> 00:15:49.860
And you need to really pull all those things together to get some new insights in biology, microbiology.

00:15:50.460 --> 00:15:53.220
And to do that, Python is a great platform.

00:15:53.220 --> 00:15:53.840
Sure it is.

00:15:53.840 --> 00:15:54.240
That's awesome.

00:15:54.240 --> 00:16:00.580
So are there like packages or libraries specifically built to address those types of questions?

00:16:00.580 --> 00:16:04.200
There are some packages specifically for microbiology.

00:16:04.200 --> 00:16:06.600
I think Chime is one that's called.

00:16:06.600 --> 00:16:13.700
Also, Pandas, NumPy, like your traditional data science packages work really well for these kinds of questions.

00:16:13.700 --> 00:16:23.300
So yeah, if I need to do some very specific analysis, I like to fire up Jupyter notebook and just load everything in a data frame and start working with that.

00:16:23.300 --> 00:16:23.640
Yeah.

00:16:23.640 --> 00:16:24.040
Yeah.

00:16:24.040 --> 00:16:34.640
The problem is that's like your farther you are in your analysis, the more and more in-depth knowledge you need to have about microbiology or the specific environment you're looking at.

00:16:34.640 --> 00:16:45.300
And very often the biologists that have that knowledge, they don't have the computer skills to kind of like make sense of the ginormous matrix of abundances combined with metadata.

00:16:45.960 --> 00:16:53.140
And so what I try to do is actually develop a platform where we can upload those matrices with all the abundances.

00:16:53.140 --> 00:17:01.720
And then there's an interface hooked up to it that allows people without like the bioinformatic skills to just to also make sense from that data.

00:17:01.720 --> 00:17:02.440
How do they do it?

00:17:02.440 --> 00:17:12.220
Is that visually with like graphs and pictures or like heat maps or is that like CSVs and drop down into Excel or what do you end up giving them?

00:17:12.340 --> 00:17:15.800
So it's kind of like a combination of all of those things, right?

00:17:15.800 --> 00:17:21.980
So on the front page, there will be like a search button, very similar to what you will find on Google, right?

00:17:21.980 --> 00:17:27.980
So where you can just type the name of their favorite bacteria and just see how abundant it is across the different samples.

00:17:27.980 --> 00:17:31.720
And you can group samples based on different things in the metadata.

00:17:31.720 --> 00:17:39.780
There are also different tools that allow you to visualize bacteria that are very often found together in samples as a network.

00:17:40.360 --> 00:17:46.320
So that's an interactive people can drag and drop things, color code the nodes or the edges based on the properties that they want.

00:17:46.320 --> 00:17:53.780
And this is all a combination of basically Flask and Python in the backend and then some JavaScript on the front end.

00:17:53.780 --> 00:17:59.820
So it's all like online that they can basically use their browser as an interface to the data.

00:18:01.520 --> 00:18:04.500
This portion of Talk Python To Me is brought to you by Linode.

00:18:04.500 --> 00:18:08.220
Are you looking for hosting that's fast, simple, and incredibly affordable?

00:18:08.220 --> 00:18:13.340
Well, look past that bookstore and check out Linode at talkpython.fm/Linode.

00:18:13.340 --> 00:18:15.260
That's L-I-N-O-D-E.

00:18:15.260 --> 00:18:19.660
Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:18:19.660 --> 00:18:21.860
They have 10 data centers across the globe.

00:18:21.860 --> 00:18:25.700
So no matter where you are or where your users are, there's a data center for you.

00:18:25.700 --> 00:18:40.100
Whether you want to run a Python web app, host a private Git server, or just a file server, you'll get native SSDs on all the machines, a newly upgraded 200 gigabit network, 24-7 friendly support, even on holidays, and a seven-day money-back guarantee.

00:18:40.100 --> 00:18:41.740
Need a little help with your infrastructure?

00:18:41.740 --> 00:18:46.460
They even offer professional services to help you with architecture, migrations, and more.

00:18:46.700 --> 00:18:49.420
Do you want a dedicated server for free for the next four months?

00:18:49.420 --> 00:18:52.480
Just visit talkpython.fm/Linode.

00:18:52.480 --> 00:18:57.100
Is this the thing called MetaConnect that you built?

00:18:57.100 --> 00:18:57.900
Exactly, yes.

00:18:57.900 --> 00:19:04.340
So it's not published yet, so it's not out there for people to look at, but I hope to get that done soon.

00:19:04.340 --> 00:19:04.680
Nice.

00:19:04.680 --> 00:19:08.780
So this is a website that you just described, written in Python and Flask.

00:19:08.780 --> 00:19:13.060
Is it tied to your university work or a company you work with?

00:19:13.320 --> 00:19:16.340
Or is this something that's open source and that's going to be coming out?

00:19:16.340 --> 00:19:17.440
Or what's its status?

00:19:17.440 --> 00:19:25.140
Initially, I created the website as a way to communicate results back to one of the companies for whom I'm analyzing data.

00:19:25.140 --> 00:19:31.760
So I quickly realized, like, okay, I can process all the data, but I'm not an expert in the field that they're active in.

00:19:31.760 --> 00:19:37.540
So I'm going to need some way to get the data to them in a way that's useful for them, right?

00:19:37.660 --> 00:19:44.280
So that's how it started, but we have lots and lots of different projects, also academic ones in the group.

00:19:44.280 --> 00:19:57.720
And one of them is the Flemish gut flora project, where we're trying to get, like, an impression of the bacteria that are resident in the gut of humans, mostly within the Flemish population.

00:19:57.720 --> 00:20:00.220
So Flanders is like the north part of Belgium.

00:20:00.540 --> 00:20:12.200
Yeah. So would you say that that is the most important or the most influential bacterial community that humans interact with or affect humans?

00:20:12.200 --> 00:20:17.180
Like, I mean, there's bacteria in our skin, it's in our hair, all over, and so on.

00:20:17.180 --> 00:20:21.160
But our stomach probably has a bigger effect than others.

00:20:21.160 --> 00:20:23.660
Well, there are quite a lot of bacteria in there, right?

00:20:23.660 --> 00:20:30.820
So if you take a stool sample, there's somewhere between a billion and a trillion bacteria in there, so even more than soil.

00:20:30.820 --> 00:20:37.820
And there are already some associations that we know of of those bacteria with our well-being.

00:20:37.820 --> 00:20:46.680
So a colleague of mine recently published an article where she could demonstrate that there's a link between some of the bacteria in your gut and your mental well-being.

00:20:46.680 --> 00:20:52.400
So we could see that some bacteria are less frequent in people that are actually struggling with mental problems.

00:20:52.400 --> 00:20:55.880
And there are associations with all kinds of diseases.

00:20:55.880 --> 00:20:59.160
Think about, like, irritable bowel syndrome and stuff like that.

00:20:59.160 --> 00:21:04.880
Wow. So this Flemish gut flora project is just collecting all of this data.

00:21:04.880 --> 00:21:11.100
And then do you guys use a similar analysis project and similar tools to study it, or is it different?

00:21:11.100 --> 00:21:17.880
A lot of the methods between studying something like soil samples and human samples are similar, right?

00:21:17.880 --> 00:21:20.940
So basically, you identify what's in there through sequencing.

00:21:20.940 --> 00:21:25.520
And then once you have sequences, the pipelines are very, very similar.

00:21:25.520 --> 00:21:29.980
We use, so there's not really a big difference between the methods that we use.

00:21:29.980 --> 00:21:38.940
Just the microbiology and the conclusions and all that, totally different, possibly, but not the way you get the frequency diagram or whatever it is.

00:21:38.940 --> 00:21:45.440
The biggest differences are in how the things are sampled and how the samples are processed, right?

00:21:45.440 --> 00:21:48.920
So once it's turned into sequences, then it kind of all becomes bytes.

00:21:48.920 --> 00:21:53.320
And then we start using some very similar workflows for different kinds of samples, yeah.

00:21:53.320 --> 00:21:54.900
Yeah. What's that workflow look like?

00:21:54.900 --> 00:21:59.080
It sounds like, you know, if you have 10,000 samples, that's a lot of work.

00:21:59.080 --> 00:22:00.900
It sounds like that needs some kind of automation.

00:22:01.220 --> 00:22:02.580
To some extent, yes, right?

00:22:02.580 --> 00:22:09.540
But of course, the work in the lab that precedes the analysis, that's something that has to happen to some extent manual.

00:22:09.540 --> 00:22:11.060
That's just a lot of hard work, right?

00:22:11.060 --> 00:22:11.860
Exactly, right.

00:22:11.860 --> 00:22:16.260
So there's like a whole logistics part before what I actually do.

00:22:16.260 --> 00:22:18.200
That's just a ton of work.

00:22:18.200 --> 00:22:23.760
And fortunately, we have some very talented lab technicians that take care of this process.

00:22:23.980 --> 00:22:24.540
Yeah, for sure.

00:22:24.540 --> 00:22:35.260
So another thing around this Gut Flora project that you were talking about is you have to do an online questionnaire because it's one thing to just go collect the samples from thousands of people.

00:22:35.980 --> 00:22:44.380
And the people who eat meat more often have this outcome or people who are vegan and don't have any dairy.

00:22:44.380 --> 00:22:45.820
They have that other outcome, right?

00:22:45.820 --> 00:22:50.780
So you actually had to set up a way to collect all that information as well, right?

00:22:50.780 --> 00:22:51.180
Yes.

00:22:51.180 --> 00:22:57.280
So we try to recruit volunteers to participate in this project through different channels.

00:22:57.280 --> 00:23:05.040
And the first thing I need to do is to kind of like fill in like a registration form where they say like, okay, I understand what's going on.

00:23:05.260 --> 00:23:08.220
There's a privacy statement in there.

00:23:08.220 --> 00:23:14.700
Also, they need to give informed consent that they know what they're volunteering to and that they can opt out at any point of the study.

00:23:14.700 --> 00:23:22.280
And then there's an intake questionnaire where people give us some information about their health, their lifestyle, and their diet.

00:23:22.280 --> 00:23:29.180
Now, this is done with commercial software, but it doesn't quite get us all the way there, right?

00:23:29.180 --> 00:23:31.420
So it does about 90% of the things we wanted to do.

00:23:31.500 --> 00:23:35.360
But then there are a few very specific things where we wanted to do something else.

00:23:35.360 --> 00:23:39.720
For instance, we sent sampling kits to all the participants.

00:23:40.360 --> 00:23:45.800
So we want to know that the address that they entered in the questionnaire actually exists.

00:23:45.800 --> 00:23:57.740
So when they're filling in their address, it will quickly use a Python web service that I created to check this against the vPost, so the Belgian post office website, to make sure that that address exists.

00:23:58.000 --> 00:24:02.900
And in case they might have made a typo, we will tell them like, oh, there's something wrong.

00:24:02.900 --> 00:24:04.160
Are you sure this is your address?

00:24:04.160 --> 00:24:06.240
Maybe like there's something off with it.

00:24:06.240 --> 00:24:07.560
Maybe you made a typo somewhere.

00:24:07.560 --> 00:24:08.580
Can you correct it?

00:24:08.580 --> 00:24:15.380
Also, as part of this process, people need to schedule a visit with their general practitioner.

00:24:15.540 --> 00:24:25.840
So to make it very easy for our participants, we made another web service that can kind of suggest the details for a general practitioner based on what they entered.

00:24:25.840 --> 00:24:27.760
So it's a little bit like this type of hat form.

00:24:27.760 --> 00:24:33.420
Once they start typing the last name of their doctor, it will immediately suggest like, okay, is it this doctor that you mean?

00:24:33.420 --> 00:24:34.440
Here's this address.

00:24:34.440 --> 00:24:36.800
And if they click it, it automatically completes the form.

00:24:36.900 --> 00:24:39.060
You know, I wish more sites were like that.

00:24:39.060 --> 00:24:45.880
It would be so nice to be so friendly and say, yeah, you've given us enough.

00:24:45.880 --> 00:24:47.100
Here's just click here.

00:24:47.100 --> 00:24:47.800
We got you.

00:24:47.800 --> 00:24:56.840
It's actually extremely important in this type of research because we're asking these people to basically give up some of their free time to help us out with our research.

00:24:56.840 --> 00:25:01.340
So we really are very grateful that people actually do this.

00:25:01.340 --> 00:25:06.120
Also, they need to take a stool sample, freeze it, and then bring it to like a drop-off point,

00:25:06.200 --> 00:25:07.480
which is usually a local pharmacy.

00:25:07.480 --> 00:25:11.180
But again, that's actually quite a lot of effort that you're asking of someone.

00:25:11.180 --> 00:25:15.920
So at least the parts that we can make easy for participants, we try to make as easy as possible.

00:25:15.920 --> 00:25:16.500
Yes.

00:25:16.500 --> 00:25:17.020
Yeah, yeah.

00:25:17.020 --> 00:25:17.820
This is an easy one.

00:25:17.820 --> 00:25:23.520
But definitely, I mean, there's so many places that could adopt that philosophy and just don't.

00:25:23.520 --> 00:25:33.940
One of the things that's interesting about this that I think is worth pointing out is you said this is a pre-packaged commercial questionnaire site company.

00:25:34.100 --> 00:25:39.080
Yeah, they take care of it, but they let you customize the page by putting in a little bit of JavaScript, right?

00:25:39.080 --> 00:25:46.380
Essentially, when they filled in their address and they click the next button, that's the point where we can fire a little bit of JavaScript.

00:25:46.380 --> 00:25:54.940
So mostly using jQuery to call the web service with the data they entered and then send a response back.

00:25:54.940 --> 00:25:56.980
Yes, this is valid or no, this is not valid.

00:25:56.980 --> 00:26:00.660
And then have the website respond appropriately according on that.

00:26:00.660 --> 00:26:15.500
I think that's a really interesting way to bring in the capabilities that you have using Python and Flask to something that is not really extensible, but it has this little tiny hook where it lets you just do just enough to get into the space.

00:26:16.000 --> 00:26:25.980
And, you know, it lets you not have to say, well, we either can use this the way it is or we can from scratch build our own questionnaire site, but we can just lay on top of it.

00:26:25.980 --> 00:26:27.720
It definitely feels a little bit like cheating, right?

00:26:28.660 --> 00:26:35.880
But yeah, especially because we're working with medical data, it's so important to get everything right in terms of security.

00:26:35.880 --> 00:26:40.480
You have to comply to GDPR and some other like regulations as well.

00:26:40.480 --> 00:26:44.120
So building our own platform would just be like a tremendous amount of work.

00:26:44.120 --> 00:26:48.500
So that's why we opted to go with this commercial platform.

00:26:48.500 --> 00:26:53.020
But indeed, we do need to use some tricks here and there to actually get it to do everything we want it to do.

00:26:53.020 --> 00:26:56.520
It makes sense because your goal is not to build a questionnaire site.

00:26:56.920 --> 00:27:02.640
Your goal is to get samples and information about bacteria colonies, right?

00:27:02.640 --> 00:27:06.680
If you could avoid building that site, like as much as you can, just avoid it, right?

00:27:06.680 --> 00:27:07.660
Absolutely, yes.

00:27:07.660 --> 00:27:16.580
Yeah, but the other one, the first one we talked about, the MetaConnect that the microbiologists can use to study and get the data back in the way they want it.

00:27:16.580 --> 00:27:20.140
That one sounds more core to your goals, right?

00:27:20.140 --> 00:27:23.840
So that one, you said you built that one from scratch with Flask, huh?

00:27:23.840 --> 00:27:26.800
It's actually something that has been going on for some time.

00:27:26.800 --> 00:27:34.800
So previously, it was used to study gene expression in different types of tissues of plants.

00:27:34.800 --> 00:27:42.300
But if you think of gene expression, so that's basically which genes are on or off and how much are they expressed in different tissues.

00:27:42.300 --> 00:27:44.160
It's also an abundance matrix.

00:27:44.520 --> 00:27:50.960
And so I kind of realized fairly early on when I started working on the microbial data that it's very, very similar.

00:27:50.960 --> 00:27:54.260
And a lot of the techniques and tools are the same.

00:27:54.260 --> 00:28:01.020
So I just forked the repository and started like making the necessary changes to actually support microbiome data as well.

00:28:01.020 --> 00:28:01.480
Yeah, sure.

00:28:01.480 --> 00:28:04.360
Get in there, change the title and just go from there.

00:28:04.360 --> 00:28:05.380
Nice.

00:28:05.380 --> 00:28:05.580
Yeah.

00:28:05.580 --> 00:28:06.140
Tell us about it.

00:28:06.140 --> 00:28:09.180
Tell us about some of the technologies that you used and stuff like that.

00:28:09.300 --> 00:28:12.720
Biological data is actually very well suited for relational databases.

00:28:12.720 --> 00:28:18.600
So usually you have like a species or a data set, and then there are sequences related with that.

00:28:18.600 --> 00:28:21.800
And with a sequence, you can have functional information.

00:28:21.800 --> 00:28:25.160
You can group sequences into clusters or gene families.

00:28:25.160 --> 00:28:32.420
So you kind of have this like structure that fits a hierarchical or a relational database very well.

00:28:32.680 --> 00:28:36.400
So there's definitely some MySQL connection there.

00:28:36.400 --> 00:28:38.660
And for that, I'm using all like the Flask packages.

00:28:38.660 --> 00:28:45.160
So just Flask MySQLAlchemy is in there when you're uploading the data through like an admin panel.

00:28:45.160 --> 00:28:47.040
So that's just Flask admin that I used.

00:28:47.040 --> 00:28:49.520
Users don't actually get to see that part.

00:28:49.520 --> 00:28:51.540
So it's a very standard interface.

00:28:51.540 --> 00:28:53.900
So through that interface, you can upload the data.

00:28:53.900 --> 00:28:58.880
So basically as a by-infantition, you processed all the reads that you got,

00:28:58.880 --> 00:29:01.540
and you have your abundance matrix and you upload it.

00:29:01.540 --> 00:29:07.240
So then there are some standard analyses that are just triggered on the server and just ran.

00:29:07.240 --> 00:29:09.920
As soon as you upload the data, it's being...

00:29:09.920 --> 00:29:10.080
Right.

00:29:10.080 --> 00:29:12.300
So some sort of like data ingestion.

00:29:12.300 --> 00:29:12.960
Yeah.

00:29:12.960 --> 00:29:16.240
It loads it up, converts it into the database format, things like that.

00:29:16.240 --> 00:29:16.920
Exactly right.

00:29:16.920 --> 00:29:20.060
And so it also does a couple of analyses immediately as you upload the data.

00:29:20.060 --> 00:29:26.800
And so for that part, I'm just using like Pandas, NumPy, and the scikit-learn to kind of do those kind of stuff.

00:29:26.800 --> 00:29:30.600
So just a whole lot of Flask going on there on the back.

00:29:30.600 --> 00:29:32.140
And it's cool that you're using Flask admin.

00:29:32.140 --> 00:29:34.880
And of course, if people don't have to, they don't see it.

00:29:34.880 --> 00:29:40.080
If it's just the admin see it, it could just, you know, admin panels are always like the worst looking part of the UI.

00:29:40.080 --> 00:29:41.040
Exactly right.

00:29:41.040 --> 00:29:47.100
So the parts that actually users get to see, that's something where I do spend a bit more time on how it actually looks.

00:29:47.100 --> 00:29:47.680
Nice.

00:29:48.320 --> 00:29:51.280
So this thing, the goal is going to be to open source it.

00:29:51.280 --> 00:29:53.420
Do you think that it makes sense?

00:29:53.420 --> 00:30:00.100
I guess probably it doesn't make sense to run it as like a service that people can generally use or does it?

00:30:00.180 --> 00:30:02.020
I'm thinking because of the privacy.

00:30:02.020 --> 00:30:06.120
But maybe if it's for things like plant data and stuff, like the plants don't have a GDPR.

00:30:06.120 --> 00:30:06.820
Yeah, that's true.

00:30:06.820 --> 00:30:11.980
Is it something that can be generally useful as a site or just as a project people could clone for their projects?

00:30:12.100 --> 00:30:14.580
So I kind of see a couple of different use cases for this.

00:30:14.580 --> 00:30:16.440
So one is communication, right?

00:30:16.440 --> 00:30:20.520
Let's say you did an awesome study with some microbiome data that you can make public.

00:30:20.520 --> 00:30:27.840
You could actually set up your own platform, upload all your data in there and use this kind of like a supplementary web page to your publication.

00:30:27.840 --> 00:30:36.660
So it's a great way for communicating things to other people that might not have the bioinformatics expertise to do that kind of analysis themselves.

00:30:37.160 --> 00:30:51.460
I also personally use a lot to just locally run it, upload the data set that I'm analyzing, and I just get like all those tools at the click of a button rather than using different scripts and making all those like one-off scripts to do some kind of analysis.

00:30:51.460 --> 00:30:57.920
It's almost like a GUI on top of the libraries that you guys are using to study the bacteria.

00:30:57.920 --> 00:31:00.400
It really simplifies analyzing the data.

00:31:00.400 --> 00:31:03.580
There are also now some students that are starting to use it in our group.

00:31:03.580 --> 00:31:06.080
So they have their project, they have their samples.

00:31:06.340 --> 00:31:11.220
They went through the learning curve to learn how to process the reads and get that abundance matrix.

00:31:11.220 --> 00:31:13.340
It's mostly done using our scripts.

00:31:13.340 --> 00:31:19.960
So at that point, it's kind of like nice if you can give them something that's nice and easy to finish up the rest of the analysis.

00:31:19.960 --> 00:31:22.920
And so that's also a use case we have.

00:31:22.920 --> 00:31:29.300
Yeah, you talked about having students maybe working on some new projects that are kicking off at the university there.

00:31:29.300 --> 00:31:36.320
For students out there listening, what kind of skills, you know, maybe they studied biology or maybe they just studied data science.

00:31:36.320 --> 00:31:41.500
What kind of skills do you look for for people to work on your projects?

00:31:41.500 --> 00:31:48.680
If it would be to extend something like MetaConnect, it would be nice to have someone that has some coding skills already.

00:31:48.680 --> 00:31:49.220
Right.

00:31:49.280 --> 00:31:55.340
So this semester there will be one student and he'll definitely be working a little bit on the code of MetaConnect.

00:31:55.340 --> 00:31:58.600
So then I'm looking for someone that has some coding skills.

00:31:58.600 --> 00:32:02.300
But also having some understanding of the biology is necessary.

00:32:02.300 --> 00:32:02.800
Right.

00:32:02.800 --> 00:32:06.580
You don't get that far if you don't understand any of the biology at all.

00:32:06.760 --> 00:32:08.020
So it's really like this combination.

00:32:08.020 --> 00:32:17.860
And bioinformatics is such an interesting and broad field that the amount you need of either the informatics or the biology can differ based on different projects.

00:32:17.860 --> 00:32:23.900
So projects that I would supervise, they would generally not include any work in a lab.

00:32:23.900 --> 00:32:30.000
But there are also people who are doing kind of like a combination of some lab work with some bioinformatics.

00:32:30.000 --> 00:32:31.360
That's also perfectly possible.

00:32:31.540 --> 00:32:32.980
Yeah, I'm sure it sounds fun.

00:32:32.980 --> 00:32:39.400
Students are always looking for research projects to be part of so that they can make those connections at universities.

00:32:39.400 --> 00:32:48.540
But it's interesting just to think about biology students trying to get into the software side, kind of like you did with bioinformatics or the reverse, right?

00:32:48.540 --> 00:32:53.900
Software people who are kind of interested in biology and whether they can cross over for that.

00:32:53.900 --> 00:32:56.720
Actually, I know people did it both ways, right?

00:32:56.720 --> 00:33:00.460
So there are plenty of bioinformaticians that have a background in biology.

00:33:00.700 --> 00:33:05.120
And then the first couple of years really struggled with the scripting, picking up those kind of skills.

00:33:05.120 --> 00:33:09.780
I don't know, people that have like a traditional CS degree and that way got into bioinformatics.

00:33:09.780 --> 00:33:11.220
So both are possible.

00:33:11.220 --> 00:33:20.260
Actually, it was a couple of years ago necessary to pick one part or the other because there was no formal master in bioinformatics at the university at the time.

00:33:20.260 --> 00:33:23.460
So now we actually have that kind of course at the university.

00:33:23.460 --> 00:33:31.540
So you can also decide to just do a bioinformatics master and then you kind of have the biology and the computer science in equal amounts.

00:33:31.540 --> 00:33:32.860
Yeah, that's great.

00:33:32.860 --> 00:33:41.700
One of the libraries that you said you're using on the MetaConnect is something called cytoscape.js.

00:33:41.880 --> 00:33:44.120
Well, it's actually a JavaScript library.

00:33:44.120 --> 00:33:49.280
So that's basically a library that allows you to visualize networks in the browser.

00:33:49.280 --> 00:33:51.520
And so I briefly mentioned it before.

00:33:51.520 --> 00:33:54.840
You can represent these communities of bacteria as networks.

00:33:54.840 --> 00:33:58.720
So think of it as a social network of bacteria, right?

00:33:58.720 --> 00:34:04.480
So bacteria that tend to appear across different samples, they're co-abundant.

00:34:04.820 --> 00:34:07.760
And could be that they're somehow related to each other.

00:34:07.760 --> 00:34:12.060
They're either dependent on each other or maybe they're dependent on the same other resource.

00:34:12.060 --> 00:34:15.980
But the thing is you spot them very often in the same samples.

00:34:15.980 --> 00:34:21.120
And so that allows you to kind of like represent the bacteria as nodes and draw an edge between them.

00:34:21.120 --> 00:34:32.360
Allows us to kind of study the communities of bacteria because we do expect that bacteria that are often in the same samples somehow need each other to do what they need.

00:34:34.700 --> 00:34:37.660
This portion of Talk Python to Me is brought to you by Tidelift.

00:34:37.660 --> 00:34:46.960
Tidelift is the first managed open source subscription, giving you commercial support and maintenance for the open source dependencies you use to build your applications.

00:34:46.960 --> 00:34:55.720
And with Tidelift, you not only get more dependable software, but you pay the maintainers of the exact packages you're using, which means your software will keep getting better.

00:34:55.720 --> 00:35:02.940
The Tidelift subscription covers millions of open source projects across Python, JavaScript, Java, PHP, Ruby, .NET, and more.

00:35:02.940 --> 00:35:14.980
And the subscription includes security updates, licensing, verification, and indemnification, maintenance and code improvements, package selection and version guidance, roadmap input, and tooling and cloud integration.

00:35:14.980 --> 00:35:20.240
The bottom line is you get the capabilities you'd expect and require from commercial software.

00:35:20.400 --> 00:35:28.640
But now, for all the key open source software you depend upon, just visit talkpython.fm/Tidelift to get started today.

00:35:30.160 --> 00:35:32.640
And I bring it up because it looks like such a cool library.

00:35:32.640 --> 00:35:35.020
Obviously, it just does graphing type stuff.

00:35:35.020 --> 00:35:39.400
But the variety of the visualizations there are super cool.

00:35:39.400 --> 00:35:46.080
So people who are looking to draw those types of relationships, I think there's a lot of stuff to take here.

00:35:46.620 --> 00:35:54.060
There's even one where it represents like different animals linked together and the vertices are actually pictures of animals and stuff like that.

00:35:54.060 --> 00:35:56.740
So it's a really nice library for that.

00:35:56.740 --> 00:35:57.700
Was it pretty easy to use?

00:35:57.700 --> 00:36:00.860
It's very, very performant in terms of drawing the graphs.

00:36:00.860 --> 00:36:01.180
Yeah.

00:36:01.260 --> 00:36:04.020
But you kind of have to build the interface around it.

00:36:04.020 --> 00:36:08.480
It just draws nodes and edges, gives you some functions to interact with them.

00:36:08.480 --> 00:36:15.000
But if you want to have like an option to change the color of the nodes, those little things you have to add yourself.

00:36:15.000 --> 00:36:21.400
So it's pretty straightforward once you have your data in the right format to visualize it using Cytoscape.js.

00:36:21.400 --> 00:36:29.420
I struggled quite a bit to build the interface and all the buttons that I required for my viewer to get them to link.

00:36:29.420 --> 00:36:30.980
To get it to behave just right.

00:36:31.120 --> 00:36:31.440
Exactly.

00:36:31.440 --> 00:36:32.260
Sure.

00:36:32.260 --> 00:36:35.080
It's one thing to draw and it's another to make it interactive.

00:36:35.080 --> 00:36:36.940
For sure.

00:36:36.940 --> 00:36:48.220
So one of the areas that I thought would be fun to talk about would be the pressures of being in an academic space and what counts as like merit and credit in that world versus industry.

00:36:48.220 --> 00:36:57.480
So it sounds like a lot of the work that you're doing is around academics, but you also have a little bit of industry experience going on at the same time.

00:36:58.260 --> 00:37:03.100
And, you know, with academics, it's all about the academic paper, right?

00:37:03.100 --> 00:37:03.480
Yes.

00:37:03.480 --> 00:37:10.060
Is that a challenge for my goal is to build this cool library in Python to help biologists, but I can't publish that.

00:37:10.060 --> 00:37:12.680
So what am I going to actually do along with that?

00:37:12.680 --> 00:37:14.460
What's the tension like there?

00:37:14.620 --> 00:37:18.040
I am analyzing some data for a company.

00:37:18.040 --> 00:37:21.520
And I think it's a really cool project, but it's their intellectual property.

00:37:21.520 --> 00:37:23.940
So I'm not talking too much about it.

00:37:23.940 --> 00:37:27.100
And so basically the findings there, that's all the company's thing.

00:37:27.100 --> 00:37:30.400
But so software that I'm designing, that's more the academic part.

00:37:30.860 --> 00:37:36.960
It's true that like in academia, basically your work is measured by the number of publications that you have.

00:37:36.960 --> 00:37:39.380
So I need to kind of keep a balance between them, right?

00:37:39.380 --> 00:37:43.280
So I need to make sure that I also get some publications for my resume.

00:37:43.280 --> 00:37:53.940
Do you think that the industry is going to, or academia, I guess, is going to change somewhat to recognize software contributions as part of research more?

00:37:53.940 --> 00:37:57.660
I mean, this is not a problem just focused on biology, right?

00:37:57.660 --> 00:38:03.020
This is a problem in physics and chemistry and mathematics and astronomy, right?

00:38:03.020 --> 00:38:03.740
Whatever, right?

00:38:03.780 --> 00:38:09.240
Anywhere where there's people building these great libraries, that's taking away from their time to do research, maybe.

00:38:09.240 --> 00:38:14.940
If you're really building like a library for other people to use, for sure, that's going to be an issue.

00:38:14.940 --> 00:38:17.380
I've mainly been developing applications.

00:38:17.380 --> 00:38:23.860
And so then the way we did it was we kind of released the application along with data sets.

00:38:23.860 --> 00:38:28.340
And then you can kind of do some research with that data set as well.

00:38:28.340 --> 00:38:32.760
So you kind of have done a combination of novel data sets with novel software.

00:38:33.380 --> 00:38:34.700
And people can start using it.

00:38:34.700 --> 00:38:37.520
And that can also become like a publication on its own.

00:38:37.520 --> 00:38:41.780
However, there it does make it challenging to keep on supporting the software.

00:38:41.780 --> 00:38:44.520
Because once the publication is out, right?

00:38:44.520 --> 00:38:46.780
You got what you need.

00:38:46.780 --> 00:38:50.440
There's no more reason to keep adding features to it or whatever, right?

00:38:50.440 --> 00:38:50.760
Yes.

00:38:50.760 --> 00:38:59.060
So then I need to continue basically building a larger data set in combination with better software to kind of keep it going.

00:38:59.060 --> 00:39:02.840
And so I think during my PhD, one of the projects I was working on,

00:39:02.980 --> 00:39:04.980
really were very successful in doing that.

00:39:04.980 --> 00:39:10.040
It was always a combination of like, here's an online platform with like a cool tool that we developed.

00:39:10.040 --> 00:39:13.760
But also each time, here's like a larger data set, more species.

00:39:14.000 --> 00:39:19.980
It certainly makes sense to build tools and applications to answer your questions, right?

00:39:19.980 --> 00:39:22.860
Because I've worked in research groups before.

00:39:22.860 --> 00:39:27.080
And a lot of the work was, we need to answer this question.

00:39:27.080 --> 00:39:28.580
We need to visualize this thing.

00:39:28.580 --> 00:39:29.940
We need to transform that data.

00:39:29.940 --> 00:39:32.020
And it was just writing software to do that.

00:39:32.340 --> 00:39:36.100
So have you heard about the Journal of Open Source Software, Joss?

00:39:36.100 --> 00:39:36.700
I have.

00:39:36.700 --> 00:39:40.620
I actually think it was through one of your podcasts that I learned about it.

00:39:40.620 --> 00:39:40.740
Yeah.

00:39:40.740 --> 00:39:40.980
Yeah.

00:39:40.980 --> 00:39:41.620
We had it on the show.

00:39:41.620 --> 00:39:44.060
Is that something relevant in your space?

00:39:44.220 --> 00:39:46.260
So far, I don't have any experience with it.

00:39:46.260 --> 00:39:53.700
But I do like the idea of breaking down these like big research projects into smaller components

00:39:53.700 --> 00:39:55.460
that can be reused, right?

00:39:55.460 --> 00:39:57.640
MetaConnect, for instance, is definitely a monolith.

00:39:57.640 --> 00:39:58.020
Yeah.

00:39:58.060 --> 00:40:02.000
It's like a whole package that does so many different things.

00:40:02.000 --> 00:40:07.160
It would be cool if I could basically take some components out of there and maybe get

00:40:07.160 --> 00:40:10.720
like a smaller publication out of it through Joss or some other journal.

00:40:10.720 --> 00:40:15.860
And it's something I've been trying to do recently, but so far, I haven't really been able to test

00:40:15.860 --> 00:40:16.940
it or to put it in practice.

00:40:16.940 --> 00:40:17.220
Yeah.

00:40:17.220 --> 00:40:22.260
I was just thinking, okay, it seems like some of your stuff that you're building, it repackaged

00:40:22.260 --> 00:40:23.900
correctly, it might fit in there, right?

00:40:23.900 --> 00:40:24.180
Yes.

00:40:24.180 --> 00:40:27.900
So for instance, we have a lot of metadata for the Flemish Gut Flora project.

00:40:28.180 --> 00:40:28.320
Right.

00:40:28.320 --> 00:40:33.100
So we have thousands of people and we have all this medical information, this information

00:40:33.100 --> 00:40:34.460
about their diet and their lifestyle.

00:40:34.460 --> 00:40:36.280
And I have a viewer for that.

00:40:36.280 --> 00:40:40.700
Now, that's something you can basically use across different disciplines, right?

00:40:40.700 --> 00:40:45.000
Every study where you have a ton of metadata would benefit from such a viewer.

00:40:45.000 --> 00:40:48.700
That's, for instance, one of the parts that I would like to kind of like separate into its

00:40:48.700 --> 00:40:51.220
own repository that could become its own project.

00:40:51.220 --> 00:40:51.500
Cool.

00:40:51.500 --> 00:40:56.740
Well, maybe I guess school has just started, so it's probably not the easiest time to find

00:40:56.740 --> 00:40:59.760
free time, but maybe next summer or something or over winter break.

00:40:59.760 --> 00:41:00.080
Yeah.

00:41:00.080 --> 00:41:04.000
I'll have a look at it once I have some free time on my hands to work on it.

00:41:04.000 --> 00:41:04.920
Absolutely.

00:41:04.920 --> 00:41:09.280
So where's this research going and what are you building next?

00:41:09.280 --> 00:41:11.500
Like what more analysis do you want to do?

00:41:11.500 --> 00:41:13.280
What more libraries or apps are you building?

00:41:13.280 --> 00:41:16.940
I'm actually quite happy with the microbiome studies.

00:41:16.940 --> 00:41:19.020
It's a very challenging field.

00:41:19.020 --> 00:41:23.480
And a lot of the things that we are doing now are association studies.

00:41:23.480 --> 00:41:28.740
So we look at the population and see like, okay, if you have more of this bacteria, then

00:41:28.740 --> 00:41:32.040
maybe there's a higher chance that you have certain disease.

00:41:32.040 --> 00:41:34.080
But that's just an association, right?

00:41:34.080 --> 00:41:37.280
It doesn't mean that having that bacteria will actually cause a disease.

00:41:37.280 --> 00:41:38.700
Correlation is not causation.

00:41:38.700 --> 00:41:39.680
Correlation or causation.

00:41:39.680 --> 00:41:39.900
Yep.

00:41:39.900 --> 00:41:40.280
Exactly.

00:41:40.280 --> 00:41:40.840
Exactly.

00:41:41.080 --> 00:41:47.280
And so right now we're moving also towards more like longitudinal studies, intervention

00:41:47.280 --> 00:41:51.720
studies to kind of like really establish those causal links.

00:41:51.720 --> 00:41:55.100
So that we can say like, yeah, it's really the bacteria that causes something or no, it's

00:41:55.100 --> 00:42:00.300
actually disease that causes the person to eat something differently or behave differently.

00:42:00.300 --> 00:42:05.140
And that is actually changing the microbes in the gut, for instance.

00:42:05.420 --> 00:42:06.860
Is it a signal or is it a cause?

00:42:06.860 --> 00:42:08.140
So that's now happening.

00:42:08.140 --> 00:42:12.160
And then of course, if you get like time resolved data, that's going to be like a next challenge,

00:42:12.160 --> 00:42:13.760
I think, to integrate in all of this.

00:42:13.760 --> 00:42:18.280
So it sounds like more data might be on hand and you already have a lot of data.

00:42:18.280 --> 00:42:22.040
Where does machine learning factor in your world?

00:42:22.040 --> 00:42:27.580
Have you tried to use like machine learning models to understand this and make these inferences?

00:42:27.580 --> 00:42:32.640
I know machine learning is extremely good at taking a picture and saying, oh, that means

00:42:32.640 --> 00:42:38.300
it's like this, but what about one of these like abundancy grids or something like that?

00:42:38.300 --> 00:42:44.440
One of the things that we noticed or that basically my colleagues noticed a couple of years ago

00:42:44.440 --> 00:42:50.620
is that we can kind of stratify the Flemish population into four different groups based

00:42:50.620 --> 00:42:52.240
on the bacteria that are in the gut.

00:42:52.240 --> 00:42:54.760
What is the distinctions there, the categories?

00:42:54.760 --> 00:42:58.880
Certain people just have like more of one kind of bacteria, right?

00:42:58.880 --> 00:43:01.620
And that seems to be kind of like one group and they're not distinct groups.

00:43:01.760 --> 00:43:03.320
It's more like a spectrum.

00:43:03.320 --> 00:43:07.000
So we noticed there are these four different groups, right?

00:43:07.000 --> 00:43:12.080
So one of the things that would be nice is if basically we could use some machine learning

00:43:12.080 --> 00:43:16.740
to automatically classify new samples into these different enterotypes.

00:43:16.740 --> 00:43:22.580
You could also start thinking of kind of trying to predict something based on the gut microbes.

00:43:22.580 --> 00:43:24.820
But I think that's still some ways off.

00:43:24.820 --> 00:43:28.380
It would be great if you could just look at the sample and say like, okay, this person is at

00:43:28.380 --> 00:43:29.800
risk for a certain disease.

00:43:29.800 --> 00:43:31.720
Maybe that will work.

00:43:31.720 --> 00:43:32.340
Maybe not.

00:43:32.340 --> 00:43:36.640
So that's still very vague right now, whether we'll be able to do that or not.

00:43:36.640 --> 00:43:38.920
But people are probably looking at it.

00:43:38.920 --> 00:43:39.720
Yeah, it sounds exciting.

00:43:39.720 --> 00:43:41.860
It doesn't sound out of reach at all.

00:43:41.860 --> 00:43:44.160
It really depends on like the data that we can generate.

00:43:44.160 --> 00:43:46.580
And yeah, we'll need to explore that.

00:43:46.720 --> 00:43:52.760
I guess it depends on how reliable the science is that says if it's like this, that means

00:43:52.760 --> 00:43:53.760
that, right?

00:43:53.760 --> 00:43:58.120
Because you've got to train the models to say, I don't know, maybe the models could make discoveries

00:43:58.120 --> 00:43:58.980
that people don't see.

00:43:58.980 --> 00:43:59.560
I don't know.

00:43:59.560 --> 00:44:03.040
I haven't done enough machine learning, but there's probably some really interesting things

00:44:03.040 --> 00:44:05.420
you could do with machine learning and that data.

00:44:05.420 --> 00:44:05.960
For sure.

00:44:05.960 --> 00:44:06.260
Yes.

00:44:06.260 --> 00:44:11.560
So, but whether or not we'll be able to make any kind of predictions towards health, that's

00:44:11.560 --> 00:44:12.860
something I'm very careful about.

00:44:12.860 --> 00:44:14.440
Categorization one sounds likely.

00:44:14.440 --> 00:44:18.300
That's something that will probably be possible based on what I've seen so far.

00:44:18.300 --> 00:44:22.860
And as we're generating more and more data, it would be very nice to just do that initial

00:44:22.860 --> 00:44:26.400
classification into the enter type in this automatic way.

00:44:26.400 --> 00:44:26.760
For sure.

00:44:26.760 --> 00:44:31.820
So, well, it sounds like you're making some cool use of Python to study these microbiomes.

00:44:31.820 --> 00:44:37.380
And they're just so fascinating because they're really out of reach for us in any way that

00:44:37.380 --> 00:44:41.160
we can conceive about it other than a very small view with a microscope.

00:44:41.160 --> 00:44:42.060
It's super interesting.

00:44:42.060 --> 00:44:42.700
I think so too.

00:44:42.700 --> 00:44:47.980
Hopefully that inspires the biologists out there to do more Python and things like that.

00:44:47.980 --> 00:44:49.020
Super cool.

00:44:49.020 --> 00:44:51.440
So thanks for sharing that with us.

00:44:51.440 --> 00:44:53.980
I think probably we'll leave it there for that conversation.

00:44:53.980 --> 00:44:57.120
But before you go, I do have the two questions for you.

00:44:57.120 --> 00:45:01.160
So if you're working on this project, you can write some Python code.

00:45:01.160 --> 00:45:02.300
What editor do you use?

00:45:02.300 --> 00:45:06.880
So if I'm working on MetaConnect or any kind of like large project, that would be PyCharm.

00:45:06.880 --> 00:45:11.540
If it's more like a very specific analysis, I'll fire up Jupyter Notebooks.

00:45:11.540 --> 00:45:12.720
Where do you make that tradeoff?

00:45:12.720 --> 00:45:15.740
Where do you say, okay, this is now it's too much for the Jupyter Notebook.

00:45:15.740 --> 00:45:16.920
I'm switching to PyCharm.

00:45:16.920 --> 00:45:19.640
Like when do you transition from one to the other?

00:45:19.640 --> 00:45:23.920
So I have like a couple projects and they really are from the beginning decided to be

00:45:23.920 --> 00:45:25.520
like an application I'm developing.

00:45:25.520 --> 00:45:28.860
And for that, it's automatically something I will do in PyCharm.

00:45:28.860 --> 00:45:33.360
If it's more like processing data, preparing it to do something else with it or something

00:45:33.360 --> 00:45:37.440
I just have to do once, maybe twice, then I'll go for the notebook.

00:45:37.440 --> 00:45:39.720
Also for reporting back something.

00:45:39.720 --> 00:45:41.440
I think the notebooks are really powerful.

00:45:41.440 --> 00:45:45.300
So you can just, you know, generate all the graphs, export it to PDF and say, here's the

00:45:45.300 --> 00:45:46.080
thing that you asked.

00:45:46.080 --> 00:45:47.060
Yeah, that's perfect.

00:45:47.060 --> 00:45:47.900
Super.

00:45:47.900 --> 00:45:52.120
And then notable PyPI package that makes your life better?

00:45:52.360 --> 00:45:57.720
One that I discovered recently that really like saved my day is something called UltraJSON.

00:45:57.720 --> 00:46:00.500
I think it's pip install ujson to get it.

00:46:00.500 --> 00:46:07.420
And it's basically a very performant version of the JSON library in the standard library.

00:46:07.760 --> 00:46:12.680
So I was developing an endpoint that had to like deserialize some JSON objects that were

00:46:12.680 --> 00:46:17.860
stored in the database, combine them and serialize them again to something I could then send to

00:46:17.860 --> 00:46:18.600
a viewer.

00:46:18.600 --> 00:46:23.700
And that's just made everything a couple hundred milliseconds faster, which made the website

00:46:23.700 --> 00:46:25.000
so much more responsive.

00:46:25.000 --> 00:46:26.140
Oh, that's super cool.

00:46:26.140 --> 00:46:26.380
Yeah.

00:46:26.380 --> 00:46:31.220
UltraJSON is a JSON encoder and decoder written in pure Python.

00:46:31.220 --> 00:46:33.760
I'm sorry, pure C with bindings for Python.

00:46:33.880 --> 00:46:34.760
Yeah, that's great.

00:46:34.760 --> 00:46:37.740
So you probably have a lot of data on those endpoints, right?

00:46:37.740 --> 00:46:40.520
Like the 10,000 measurements or whatever.

00:46:40.520 --> 00:46:41.140
Yeah, exactly.

00:46:41.140 --> 00:46:46.520
So if like I need to kind of like deserialize one of those complex objects, do something with

00:46:46.520 --> 00:46:52.440
it, combine it with like another one and serialize it again, very quickly takes seconds, which for

00:46:52.440 --> 00:46:53.800
a web interface is very slow.

00:46:53.800 --> 00:46:59.380
So everything that can just take like a couple hundred milliseconds off that time is really

00:46:59.380 --> 00:46:59.780
great.

00:46:59.780 --> 00:47:02.960
And is it the same API as regular JSON module?

00:47:02.960 --> 00:47:04.180
For the most of it, yeah.

00:47:04.180 --> 00:47:09.560
Pretty much everywhere in my code, I was able to just write import UJSON as JSON and it worked.

00:47:09.560 --> 00:47:10.520
That's sweet.

00:47:10.520 --> 00:47:10.840
All right.

00:47:10.840 --> 00:47:14.600
Well, that's a great suggestion then because it sounds so easy to adopt and will be helpful

00:47:14.600 --> 00:47:15.520
for a lot of folks.

00:47:15.520 --> 00:47:16.020
Cool.

00:47:16.020 --> 00:47:16.780
All right.

00:47:16.780 --> 00:47:18.100
Well, final call to action.

00:47:18.100 --> 00:47:22.500
People are out there interested in biology or biologists are out there interested in Python.

00:47:22.500 --> 00:47:24.220
when they want to get started, what do you say to them?

00:47:24.220 --> 00:47:24.700
Right.

00:47:24.700 --> 00:47:28.000
So definitely try some coding in Python.

00:47:28.000 --> 00:47:33.120
Even if you're mostly into biology, just knowing a little bit of the basics can make your life

00:47:33.120 --> 00:47:33.780
a lot easier.

00:47:33.780 --> 00:47:40.000
Just being able to automate something for a couple times can prove very useful, right?

00:47:40.000 --> 00:47:40.720
Yeah, absolutely.

00:47:40.720 --> 00:47:42.460
You know, escape Excel, right?

00:47:42.460 --> 00:47:43.220
Yes.

00:47:43.220 --> 00:47:43.960
Or MATLAB.

00:47:43.960 --> 00:47:44.480
One of the two.

00:47:44.480 --> 00:47:44.620
Yeah.

00:47:44.620 --> 00:47:46.800
Like we're collecting more and more data.

00:47:46.800 --> 00:47:52.340
So I encounter it so often that people were using Excel and at one point it just hit that

00:47:52.340 --> 00:47:58.920
wall and then, you know, Python, Panda, scikit-learn and help you break through that.

00:47:58.920 --> 00:48:00.420
So have a look at it if you need it.

00:48:00.420 --> 00:48:00.580
Cool.

00:48:00.580 --> 00:48:00.920
All right.

00:48:00.920 --> 00:48:02.280
Well, Sebastian, thanks for being on the show.

00:48:02.280 --> 00:48:03.080
It's great to chat with you.

00:48:03.080 --> 00:48:04.680
Yeah, it's great to chat with you as well, Michael.

00:48:04.680 --> 00:48:05.000
Thanks.

00:48:06.120 --> 00:48:08.800
This has been another episode of Talk Python to Me.

00:48:08.800 --> 00:48:14.260
Our guest in this episode was Sebastian Proust, and it's been brought to you by Linode and Tidelift.

00:48:14.260 --> 00:48:18.280
Linode is your go-to hosting for whatever you're building with Python.

00:48:18.280 --> 00:48:21.820
Get four months free at talkpython.fm/linode.

00:48:21.820 --> 00:48:23.700
That's L-I-N-O-D-E.

00:48:23.700 --> 00:48:28.880
If you run an open source project, Tidelift wants to help you get paid for keeping it going

00:48:28.880 --> 00:48:29.380
strong.

00:48:29.380 --> 00:48:34.980
Just visit talkpython.fm/Tidelift, search for your package, and get started today.

00:48:34.980 --> 00:48:37.200
Want to level up your Python?

00:48:37.200 --> 00:48:42.060
If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

00:48:42.060 --> 00:48:47.140
Or if you're looking for something more advanced, check out our new async course that digs into

00:48:47.140 --> 00:48:50.220
all the different types of async programming you can do in Python.

00:48:50.220 --> 00:48:54.160
And of course, if you're interested in more than one of these, be sure to check out our

00:48:54.160 --> 00:48:54.880
Everything Bundle.

00:48:54.880 --> 00:48:56.760
It's like a subscription that never expires.

00:48:56.760 --> 00:48:58.900
Be sure to subscribe to the show.

00:48:58.900 --> 00:49:01.320
Open your favorite podcatcher and search for Python.

00:49:01.320 --> 00:49:02.540
We should be right at the top.

00:49:02.540 --> 00:49:08.100
You can also find the iTunes feed at /itunes, the Google Play feed at /play, and the

00:49:08.100 --> 00:49:11.540
direct RSS feed at /rss on talkpython.fm.

00:49:11.540 --> 00:49:13.620
This is your host, Michael Kennedy.

00:49:13.620 --> 00:49:15.120
Thanks so much for listening.

00:49:15.120 --> 00:49:16.160
I really appreciate it.

00:49:16.160 --> 00:49:17.920
Now get out there and write some Python code.

00:49:17.920 --> 00:49:38.520
I'll see you next time.

00:49:38.520 --> 00:50:08.500
Thank you.

