WEBVTT

00:00:00.001 --> 00:00:04.200
You know that feeling when one of your developer friends or colleagues tells you about some

00:00:04.200 --> 00:00:08.520
amazing tool, library, or shell environment that you never heard of and that you have

00:00:08.520 --> 00:00:10.420
to run out and just try right away?

00:00:10.420 --> 00:00:14.100
This episode is jam-packed full of those moments.

00:00:14.100 --> 00:00:18.840
We welcome back Jay Miller to discuss tools and tips for developer productivity.

00:00:18.840 --> 00:00:22.740
The title says 10 tips, but we actually veer into many more along the way.

00:00:22.740 --> 00:00:25.960
I think you'll really enjoy this useful and lighthearted episode.

00:00:26.240 --> 00:00:31.920
This is Talk Python to Me, episode 345, recorded November 17th, 2021.

00:00:31.920 --> 00:00:48.240
Welcome to Talk Python to Me, a weekly podcast on Python.

00:00:48.240 --> 00:00:49.980
This is your host, Michael Kennedy.

00:00:49.980 --> 00:00:54.180
Follow me on Twitter where I'm @mkennedy and keep up with the show and listen to past

00:00:54.180 --> 00:00:56.200
episodes at talkpython.fm.

00:00:56.200 --> 00:00:59.180
And follow the show on Twitter via at Talk Python.

00:00:59.180 --> 00:01:02.840
We've started streaming most of our episodes live on YouTube.

00:01:02.840 --> 00:01:08.580
Subscribe to our YouTube channel over at talkpython.fm/youtube to get notified about upcoming

00:01:08.580 --> 00:01:10.420
shows and be part of that episode.

00:01:10.420 --> 00:01:14.520
This episode is brought to you by Coiled and CockroachDB.

00:01:14.520 --> 00:01:16.800
Please check out what they're offering during their segments.

00:01:16.800 --> 00:01:18.240
It really helps support the show.

00:01:18.240 --> 00:01:22.000
Jay, welcome back to Talk Python to Me.

00:01:22.000 --> 00:01:27.020
It is always a pleasure to join the show and hang out.

00:01:27.020 --> 00:01:28.560
Yeah, it's a pleasure to have you here.

00:01:28.560 --> 00:01:33.460
You help out with all sorts of things and it's been great to bounce ideas off of you.

00:01:33.460 --> 00:01:37.820
I've had you on the show a couple of times, literally two times so far, I believe.

00:01:37.820 --> 00:01:41.760
How many more before I get like that golden jacket like they do on SNL?

00:01:42.100 --> 00:01:43.800
You get the golden jacket after 10.

00:01:43.800 --> 00:01:44.600
This is a really...

00:01:44.600 --> 00:01:44.940
After 10?

00:01:44.940 --> 00:01:45.640
Wow.

00:01:45.640 --> 00:01:47.260
It is a commitment to get the jacket.

00:01:47.260 --> 00:01:48.080
Wow.

00:01:48.080 --> 00:01:49.160
Yeah.

00:01:49.160 --> 00:01:52.380
Well, we'll pick up the cadence here and we'll get you the jacket.

00:01:52.380 --> 00:01:54.020
I mean, you're a third of the way there, basically.

00:01:54.020 --> 00:01:54.600
All right.

00:01:54.600 --> 00:01:55.040
All right.

00:01:55.040 --> 00:01:56.300
I got goals now.

00:01:56.300 --> 00:02:01.660
Before I retire from the Python community, I will have my golden jacket from Talk Python.

00:02:01.660 --> 00:02:02.660
That's right.

00:02:02.660 --> 00:02:03.140
Oh, man.

00:02:03.140 --> 00:02:04.820
If you come on 10 times, you are getting a jacket.

00:02:04.820 --> 00:02:06.240
I'll figure out how to get one of those.

00:02:06.240 --> 00:02:07.160
I'll demand one.

00:02:07.160 --> 00:02:08.880
Thank you for being here.

00:02:08.880 --> 00:02:13.400
This episode is going to be something of a reversal, but not 100% reversal.

00:02:13.400 --> 00:02:16.600
I've got all these ideas about developer productivity.

00:02:16.600 --> 00:02:20.040
I've been bouncing around and I want to share them with the audience.

00:02:20.040 --> 00:02:23.640
And so we're going to kind of share those together, right?

00:02:23.640 --> 00:02:25.620
I'll present them because it's my idea.

00:02:25.620 --> 00:02:31.400
I don't want to force that recommendation coming out of anyone else or you in particular.

00:02:31.400 --> 00:02:33.840
So I'll present them and then we'll discuss them, right?

00:02:33.840 --> 00:02:37.120
So you'll be both the guest and the sounding board.

00:02:37.220 --> 00:02:37.700
How's that sound?

00:02:37.700 --> 00:02:40.820
I get to be the Simon Cowell to your performance.

00:02:40.820 --> 00:02:41.620
I love it.

00:02:41.620 --> 00:02:42.760
Yeah, exactly.

00:02:42.760 --> 00:02:47.120
Well, hopefully you're in a good mood because Simon, he can be tough sometimes.

00:02:47.120 --> 00:02:47.780
We'll see.

00:02:47.780 --> 00:02:48.340
We'll see how it goes.

00:02:48.340 --> 00:02:48.920
We'll see how it goes.

00:02:48.920 --> 00:02:49.880
I've seen the talk.

00:02:49.880 --> 00:02:54.660
I think there's a lot of great points in there and some stuff that I immediately was like,

00:02:54.660 --> 00:02:55.860
oh, and then I heard you explain.

00:02:55.860 --> 00:02:57.460
I go, actually, you know, that's not a bad idea.

00:02:57.460 --> 00:02:58.440
Maybe.

00:02:58.440 --> 00:03:02.780
Well, you know, you let me know where you disagree because a lot of these things,

00:03:02.960 --> 00:03:06.980
one thing that works for one person is exactly the wrong thing for others.

00:03:07.120 --> 00:03:11.440
Now, before we jump into it, though, you know, you've been on the show a couple of times.

00:03:11.440 --> 00:03:16.300
The most recent time we were on, we talked about little automation tools, which was super fun.

00:03:16.300 --> 00:03:17.420
We had you.

00:03:17.600 --> 00:03:23.880
We had Rusty, we had Kim Van Wick, and we had Rivers Cuomo, of all people, who did a fantastic job on the show.

00:03:23.880 --> 00:03:25.180
So that was really fun.

00:03:25.180 --> 00:03:29.020
And I feel like that's a really good lead into this conversation here.

00:03:29.020 --> 00:03:32.960
Before we get to it, though, for people who don't know you, it has been a little while.

00:03:32.960 --> 00:03:33.460
When was that?

00:03:33.460 --> 00:03:35.260
That was back in July since you've been on the show.

00:03:35.260 --> 00:03:36.800
Tell people a little bit about yourself.

00:03:36.800 --> 00:03:37.400
Yeah.

00:03:37.400 --> 00:03:38.520
So I'm Jay Miller.

00:03:38.520 --> 00:03:42.960
I'm a developer advocate for a company called Elastic.

00:03:42.960 --> 00:03:44.560
We do Elastic Search.

00:03:45.600 --> 00:03:50.100
I also do podcasting and a lot of productivity automation.

00:03:50.100 --> 00:03:55.780
And you can usually find that stuff over either on Relay.fm, where my podcast lives,

00:03:55.780 --> 00:04:02.700
or on YouTube, where I'm often talking about different productivity tools around the macOS ecosystem

00:04:02.700 --> 00:04:04.700
or the iOS ecosystem, mostly Mac.

00:04:04.700 --> 00:04:13.040
And I guess the biggest difference there is I don't shy away from the programming-friendly stuff.

00:04:13.600 --> 00:04:22.440
I am the more that I can hack in, you know, shell scripting, Python scripts, even Swift from time to time, like, bring it on.

00:04:22.440 --> 00:04:23.700
I am here for it.

00:04:23.700 --> 00:04:28.760
And yeah, so you're not, you're not, you're going to see some software recommendations from me.

00:04:28.760 --> 00:04:35.700
But I often tell people like, let's use what we know, build what we can, and ultimately just make things that work for us.

00:04:35.740 --> 00:04:36.740
And it's kind of me.

00:04:36.740 --> 00:04:38.540
That's kind of what I do in my day-to-day.

00:04:38.540 --> 00:04:38.800
That's awesome.

00:04:38.800 --> 00:04:43.060
If it's got to be solved with if this, then that, then let it be solved that way, right?

00:04:43.060 --> 00:04:43.800
Absolutely.

00:04:43.800 --> 00:04:44.580
Yeah.

00:04:44.580 --> 00:04:47.520
You want to give a quick shout out to your podcast in particular, Conduit?

00:04:47.520 --> 00:04:49.300
That's kind of new, right?

00:04:49.300 --> 00:04:54.040
You also did the productivity podcast before this and then transitioned over here, right?

00:04:54.380 --> 00:04:54.620
Yeah.

00:04:54.620 --> 00:05:06.780
So before I did a show called Productivity and Tech, it was, you know, just a general productivity conversation with people around the tech, I guess, lowercase word, tech ecosystem.

00:05:07.200 --> 00:05:09.400
Just learning how they did things and how they were more productive.

00:05:09.400 --> 00:05:14.420
Somewhere along the lines, I found my co-host for my current show, Kathy Campbell.

00:05:14.420 --> 00:05:24.260
And we do a show on Relay.fm called Conduit, where we talk about productivity, but make it so that it fits no matter what tools you're using.

00:05:24.260 --> 00:05:32.000
We don't, we don't like to, we do like to make up, you know, our own different funny names for things, different techniques and tools and stuff.

00:05:32.000 --> 00:05:49.500
But ultimately the idea is whether you like GTD, whether you like bullet journaling or whether you absolutely have to build to-do lists and Visual Studio code, like whatever you're choosing to do, like hopefully we can provide some guidance on how to do it to the best of your abilities.

00:05:49.500 --> 00:05:50.560
Yeah, that's awesome.

00:05:50.560 --> 00:05:51.980
We all have different tools.

00:05:51.980 --> 00:06:01.300
I remember being in one high-level meeting with some executives and such, and they said, for some reason, my screen was being shared because I was demoing something.

00:06:01.300 --> 00:06:03.280
And I said, Michael, can you just go ahead and take some notes on this?

00:06:03.280 --> 00:06:03.840
I'm like, yeah, sure.

00:06:03.840 --> 00:06:07.720
So I fired up VS Code in Markdown mode and just started taking notes.

00:06:07.720 --> 00:06:10.040
So I go, okay, I see how we're taking notes here.

00:06:10.040 --> 00:06:12.720
This is very, like, I didn't know they expected like one note or something.

00:06:12.720 --> 00:06:15.120
I don't know what they wanted, but yeah, like, no, this is how we do it.

00:06:15.120 --> 00:06:15.820
We're doing this.

00:06:15.820 --> 00:06:16.180
Yeah.

00:06:16.180 --> 00:06:18.160
I mean, you'll often hear me talk.

00:06:18.160 --> 00:06:20.680
I'm a notebook pen and paper person.

00:06:20.680 --> 00:06:28.080
So when it comes to managing projects or tasks, I'm often starting in my notebooks and then I'll move it over to a digital format.

00:06:28.080 --> 00:06:30.540
Like if I need to share it out or something like that.

00:06:30.600 --> 00:06:31.000
Yeah.

00:06:31.000 --> 00:06:31.420
Right on.

00:06:31.420 --> 00:06:35.340
Also from the audience, Jaylee says, please make that golden jacket a thing.

00:06:35.340 --> 00:06:36.520
Goals.

00:06:36.520 --> 00:06:38.140
We got goals.

00:06:38.140 --> 00:06:38.800
I think so.

00:06:38.800 --> 00:06:44.020
It's easy for me to stand behind this because I'm pretty sure we don't have any 10 time repeat guests.

00:06:44.020 --> 00:06:46.720
I've put the bar pretty high, but we'll get there.

00:06:46.720 --> 00:06:47.660
It'll happen.

00:06:47.660 --> 00:06:48.300
It'll be awesome.

00:06:48.580 --> 00:06:54.960
I feel like I'm in the race with people like Rusty Van Wick and Anthony Shaw and maybe Brian.

00:06:54.960 --> 00:06:56.740
I feel like Brian can sneak his way on.

00:06:56.740 --> 00:06:58.240
Brian does sneak in periodically.

00:06:58.240 --> 00:07:03.600
He's an easy one to reach out to and like, hey, we got to cover this topic and I can't find somebody.

00:07:03.600 --> 00:07:04.720
You want to drop in and do it?

00:07:04.720 --> 00:07:05.240
Yeah.

00:07:05.240 --> 00:07:05.860
Awesome.

00:07:06.320 --> 00:07:07.400
So what do you think?

00:07:07.400 --> 00:07:09.100
Should we jump into the tips straight away?

00:07:09.100 --> 00:07:10.020
Let's do it.

00:07:10.020 --> 00:07:10.820
I'm excited to do.

00:07:10.820 --> 00:07:11.620
Awesome.

00:07:11.620 --> 00:07:17.700
Well, I think there's a lot of little things that you pick up when you work in software.

00:07:17.700 --> 00:07:23.660
And I feel like you and I share this belief that software is the superpower to whatever you're actually trying to do.

00:07:23.720 --> 00:07:27.300
You talk so much about, oh, I found this cool tool to automate that.

00:07:27.300 --> 00:07:33.560
You've even created mail through automation and stuff like that.

00:07:33.560 --> 00:07:33.960
It's beautiful.

00:07:33.960 --> 00:07:34.620
Yeah.

00:07:34.620 --> 00:07:40.240
You know, I think the coolest part about tools is that they are that.

00:07:40.240 --> 00:07:40.920
They're tools.

00:07:40.920 --> 00:07:50.380
I love artists that are able to take a tool that wasn't designed for that thing and make something truly beautiful with it.

00:07:50.380 --> 00:08:00.380
Like, I mean, the first time I saw like Bob Ross on like TV, you see some of the brushes that he uses and they're not like these little ones that you used in like your high school arts class.

00:08:00.380 --> 00:08:03.800
They're like shop brushes that you would use, like paint a fence.

00:08:03.800 --> 00:08:08.180
And like somehow he could still make these crazy pictures in like 30 minutes.

00:08:08.180 --> 00:08:09.940
That's where the happy trees come from.

00:08:09.940 --> 00:08:10.620
Exactly.

00:08:10.620 --> 00:08:12.140
Awesome.

00:08:12.140 --> 00:08:15.240
So the things we're going to cover here, they're like that.

00:08:15.240 --> 00:08:22.040
They're a bunch of little things and I specifically chose them because I thought they're incredibly easy to try out.

00:08:22.040 --> 00:08:22.620
Right.

00:08:22.620 --> 00:08:24.460
They're not like, oh, you know what you should do?

00:08:24.460 --> 00:08:28.920
You should move to a no SQL key value store database.

00:08:28.920 --> 00:08:29.540
That would be better.

00:08:29.540 --> 00:08:31.220
You're like, yeah, no, that's like a month.

00:08:31.220 --> 00:08:33.260
And then we have to live with the consequences.

00:08:33.260 --> 00:08:39.560
Like, so everything that we're going to talk about here, I believe is something you could try out really quick and say, yeah, that's cool.

00:08:39.660 --> 00:08:42.300
Actually, no, maybe not.

00:08:42.300 --> 00:08:42.780
Okay.

00:08:42.780 --> 00:08:45.760
And if we got some time, I'm going to throw in some extra ones there.

00:08:45.760 --> 00:08:51.800
I think everything here is free except for like one or two things.

00:08:51.800 --> 00:08:53.240
So like, absolutely.

00:08:53.240 --> 00:08:57.840
Your download manager like might get exhausted, but your bank account won't.

00:08:57.840 --> 00:08:58.440
Exactly.

00:08:58.440 --> 00:08:59.220
Exactly.

00:08:59.400 --> 00:09:12.700
So the first one that I wanted to start out with, and I feel like this is a very bimodal distribution is shells or terminals or command prompts, depending on your origin, where you're coming to think about these things.

00:09:12.820 --> 00:09:20.180
And I say bimodal because I feel like there's one group of developers that lives in the shell even more than me by quite a wide margin.

00:09:20.180 --> 00:09:22.340
They're incredibly talented there.

00:09:22.340 --> 00:09:25.980
And then there's a whole group that are just like, well, whatever is on my system, that's what I'm using.

00:09:25.980 --> 00:09:26.900
What do you think?

00:09:26.900 --> 00:09:29.880
What would your estimation on that population be like?

00:09:30.460 --> 00:09:38.320
It's tough because I think as the community continues to grow, you're going to have more and more people that are not back in my day.

00:09:38.320 --> 00:09:44.980
We we had the green screen with the blinky dot, you know, like I don't think you're going to have as many people that are doing that.

00:09:44.980 --> 00:09:47.220
And I don't think that's necessarily a bad thing.

00:09:47.220 --> 00:09:55.880
I think the first programming thing I learned was like when I was like eight or nine and like my grandfather was using Eclipse.

00:09:56.720 --> 00:10:00.840
And it's like I don't go anywhere near Eclipse now.

00:10:00.840 --> 00:10:03.000
Like that is not that's not me at all.

00:10:03.000 --> 00:10:16.820
But nowadays, like even in my IDE, I find myself often going into Vim to make changes like in my IDE instead of just clicking on the file right there, making the change.

00:10:16.820 --> 00:10:21.340
It's like, oh, I know I can do this faster just from my muscle memory.

00:10:21.340 --> 00:10:28.100
So I think I think having at least some knowledge of, you know, if I need to dig into the shell, I can.

00:10:28.100 --> 00:10:34.520
And I think that was actually, you know, one of the things you talked about here was using different tools to augment the shell.

00:10:35.280 --> 00:10:41.920
I think that even if you're not going to go in there a lot, at least when you have to go in there, make it make it at least enjoyable.

00:10:42.440 --> 00:10:44.700
Yeah, there's a bunch of little tools.

00:10:44.700 --> 00:10:49.100
And there really seems to be a renaissance of the tools around the terminal.

00:10:49.100 --> 00:10:53.580
We've got things like Rich and Textual, allowing people to make really cool apps there.

00:10:53.580 --> 00:10:58.500
We've got OhMyZShell, OhMyPosh, a bunch of things there.

00:10:58.500 --> 00:11:01.600
Some stuff called Big.io.

00:11:01.600 --> 00:11:06.680
I'm not totally sure I want to make a recommendation for it yet, but I'll sort of bring it out there and so on.

00:11:06.680 --> 00:11:21.660
And so, yeah, so my recommendation was if you open up your terminal or command prompt, if you're on Windows and you're still using cmd.exe, if it looks like the way it looked when you got the machine, there's a problem.

00:11:21.660 --> 00:11:22.940
You're doing it wrong.

00:11:22.940 --> 00:11:27.200
If it if it just comes out of the box and it's just cmd.exe, that's what you're using.

00:11:27.200 --> 00:11:33.980
Or if you just open up macOS and it's the white bash, like you're missing out on so much.

00:11:33.980 --> 00:11:38.880
Yeah, Brandon Brainer out there in the audience says, I'm using Fig and it's pretty awesome.

00:11:38.880 --> 00:11:39.940
I just started checking out Fig.

00:11:39.940 --> 00:11:41.040
I'll pull up Fig in a moment.

00:11:41.040 --> 00:11:42.080
We'll talk about that.

00:11:42.080 --> 00:11:50.660
So on one hand, there's a bunch of people who are incredibly talented, but there's also all these things that support being more efficient on the terminal.

00:11:50.660 --> 00:12:03.460
So for example, I'm a big fan of OhMyZShell, OhMyZSH at OhMyZ.sh, which I learned that macOS now switched to ZShell as the default terminal.

00:12:03.460 --> 00:12:04.520
So that's interesting.

00:12:04.520 --> 00:12:09.220
But that means it's even easier to install OhMyZShell because you've already got ZSH or ZShell.

00:12:09.620 --> 00:12:12.460
And there's just so many little nice tricks.

00:12:12.460 --> 00:12:21.840
Like if you go into a directory and that directory happens to be within a Git repo, you get information about your Git repo right there in the prompt.

00:12:21.840 --> 00:12:25.560
It tells you what branch you're on and what repo you're in and all those kinds of things.

00:12:25.560 --> 00:12:29.680
If you can get it to say things about like the Python version that you're on and so on.

00:12:29.680 --> 00:12:31.280
Do you ever use ZShell?

00:12:31.280 --> 00:12:31.800
Yeah.

00:12:31.800 --> 00:12:32.100
What do you use?

00:12:32.100 --> 00:12:33.520
Oh, I use OhMyZShell.

00:12:33.520 --> 00:12:34.360
Absolutely.

00:12:34.360 --> 00:12:44.080
Like it's to me, if I'm not using it, I immediately know because of like, it's like, wait a minute, what's happening here?

00:12:44.080 --> 00:12:47.060
I'm typing stuff and nothing's happening and I don't get it.

00:12:47.060 --> 00:12:48.620
I hit tab and it didn't help.

00:12:48.620 --> 00:12:52.660
Or I hit, I typed a few things to hit back here and it just went back to the previous command.

00:12:52.660 --> 00:12:53.340
This is broken.

00:12:53.340 --> 00:12:59.200
So, so we can't, I can't give you the name on it because I guess we'll try to be a family friendly episode.

00:12:59.200 --> 00:13:09.560
But there's one of the things I like about OhMyZShell is that they have these plugins that do a lot of the configuration for you, which is already a big help.

00:13:09.560 --> 00:13:12.020
Like the fact that I don't complete and all sorts of things.

00:13:12.020 --> 00:13:12.240
Yeah.

00:13:12.240 --> 00:13:13.660
Not even that.

00:13:13.660 --> 00:13:23.960
Just the fact that I don't have to go into like my like ZSHRC and then put a bunch of like path statements and this crazy shell scripting to make things work.

00:13:24.100 --> 00:13:26.940
I can just go to the plugin section and type something in.

00:13:26.940 --> 00:13:32.020
But one of the things that one of my favorite ones, the command for it is WTF.

00:13:32.020 --> 00:13:47.560
So if you know, you know, but the way that it works is if you type in something wrong, like if you mistype it, if you type in the phrase, the magical phrase, it'll go, Oh, I think you meant to type in this.

00:13:47.740 --> 00:13:51.340
And you can just hit Y and then it inputs it in for you.

00:13:51.340 --> 00:13:58.880
So like if you can't remember, what's that one weird command that you have to use if you're using something like said or awk, which I will.

00:13:58.880 --> 00:14:08.460
I have another suggestion if you're using those still like you can be like, Oh, I think you meant awk slash this not awk slash this other thing.

00:14:08.460 --> 00:14:08.740
Yeah.

00:14:08.740 --> 00:14:09.880
Like, yeah, that's what I meant.

00:14:09.880 --> 00:14:10.660
That's awesome.

00:14:11.100 --> 00:14:16.200
There's one also that is the spelling out of the last of those three letters.

00:14:16.200 --> 00:14:17.420
Yeah.

00:14:17.420 --> 00:14:18.180
In there.

00:14:18.180 --> 00:14:27.340
And you type that and it'll say, did you like if you do like a get checkout and it meant get branch or something like that, it'll you can just type that and go, did you mean this?

00:14:27.340 --> 00:14:27.920
You say yes.

00:14:27.920 --> 00:14:28.540
And it'll fix it.

00:14:28.540 --> 00:14:28.720
Yeah.

00:14:28.720 --> 00:14:30.260
It sounds similar as well.

00:14:30.260 --> 00:14:30.720
That's awesome.

00:14:31.020 --> 00:14:31.180
Yeah.

00:14:31.180 --> 00:14:41.140
And things like fast D and ASDF, like ASDF, I'm sure we'll talk about later, but fast D, like the fact that you can do like things like fuzzy searching, you don't have to remember the exact path.

00:14:41.140 --> 00:14:44.160
You just know the name of the directory you want to go into.

00:14:44.160 --> 00:14:48.320
You hit Z space, the name of the directory, hit enter, and then now you're in that directory.

00:14:48.540 --> 00:14:54.460
And if it ever messes up, you just hit tab and then you can manually set it to whatever you want it to be.

00:14:54.460 --> 00:14:56.680
So in the future, it doesn't mess up again.

00:14:56.680 --> 00:15:06.680
To me, it's like you're missing out on a very modern and clean browser experience if you're not kind of unleashing it with some of these extra plugins.

00:15:06.680 --> 00:15:09.180
And Oh, my Z shell is the way to start with those.

00:15:09.680 --> 00:15:15.480
To me, it feels a little bit like I'm programming in Notepad versus I'm programming in PyCharm or VS Code.

00:15:15.480 --> 00:15:18.700
Like, why would you not want all this stuff that can help you with what you're trying to do?

00:15:18.700 --> 00:15:19.600
Okay.

00:15:19.600 --> 00:15:20.520
If you just take the base one.

00:15:20.520 --> 00:15:20.760
All right.

00:15:20.760 --> 00:15:25.660
So now if you're in Mac, I think macOS has the best shell of all the OSs.

00:15:25.660 --> 00:15:26.900
And then you've got Linux.

00:15:26.900 --> 00:15:28.380
There's a lot of good stuff there.

00:15:28.380 --> 00:15:29.300
They're very, very similar.

00:15:29.300 --> 00:15:33.260
But then if you're on Windows, I felt like that's just a different world, right?

00:15:33.260 --> 00:15:39.220
It's just you're not meant to be on the terminal command prompt that much until recently.

00:15:39.440 --> 00:15:45.960
So Microsoft released this thing called the Windows Terminal, which I started using on my Windows machines.

00:15:45.960 --> 00:15:48.140
And I really like the Windows Terminal.

00:15:48.140 --> 00:15:49.700
There's a bunch of good stuff in there.

00:15:49.700 --> 00:15:59.060
And in particular, you can install Oh My Posh on there and get fantastic similar experiences over on Windows Terminal plus Oh My Posh.

00:15:59.060 --> 00:15:59.560
Yeah.

00:15:59.560 --> 00:16:03.580
I haven't gotten to play around with the new Windows Terminal experience.

00:16:03.580 --> 00:16:10.440
But everything that I've seen makes me really impressed with what they've been able to do in the last few years.

00:16:10.600 --> 00:16:11.620
Yeah, totally.

00:16:11.620 --> 00:16:19.680
And you can set up Windows so that if you just say open command prompt, open terminal, the default terminal is the Windows Terminal.

00:16:19.680 --> 00:16:28.200
And then within Windows Terminal, you can set up the new PowerShell, the PowerShell 7 or whatever it is, not the old school PowerShell 3 or command prompt version.

00:16:28.300 --> 00:16:32.820
So it'll also drop in to like the latest version with Oh My Posh set up.

00:16:32.820 --> 00:16:34.900
And then you're in a pretty good place on Windows, actually.

00:16:34.900 --> 00:16:35.500
Yeah.

00:16:35.500 --> 00:16:38.560
And I guess on Mac too, I mean, Terminal is fine.

00:16:38.560 --> 00:16:39.500
Use iTerm.

00:16:39.500 --> 00:16:41.300
Like iTerm 2, it is...

00:16:42.300 --> 00:16:49.300
Unless you're using data of some sort, I would highly suggest iTerm 2 to replace it.

00:16:49.300 --> 00:16:54.280
This portion of Talk Python is brought to you by Coiled.

00:16:54.280 --> 00:17:02.880
You already love using Python to build your data science projects, but training models and working with tons of data on your laptop is limiting to say the least.

00:17:02.880 --> 00:17:08.600
But that does not mean you need to learn new cloud APIs or buy expensive and hard to acquire hardware.

00:17:08.600 --> 00:17:10.580
Just use Coiled.io.

00:17:11.200 --> 00:17:17.380
Coiled supercharges the tools you already use for scale and performance, so you can use Python for your ambitious problems.

00:17:17.380 --> 00:17:21.360
In the words of Eric Ma, principal data scientist at Moderna, quote,

00:17:21.360 --> 00:17:24.380
Quite literally, burst into the cloud from your laptop.

00:17:24.380 --> 00:17:27.580
Everything I've been dreaming of since grad school, unquote.

00:17:27.580 --> 00:17:33.720
With Coiled, you really can burst into the cloud with a few clicks and stay focused on solving the important problems.

00:17:33.720 --> 00:17:37.080
Adding Coiled to your project takes less than one minute.

00:17:37.080 --> 00:17:38.300
So what are you waiting for?

00:17:38.300 --> 00:17:39.320
Get started today.

00:17:39.460 --> 00:17:44.140
Just visit talkpython.fm/Coiled or click the link in your podcast player's show notes.

00:17:45.640 --> 00:17:46.840
A couple other things.

00:17:46.840 --> 00:17:48.080
We're going to spend a lot of time.

00:17:48.080 --> 00:17:50.340
We're going slow, but we'll make it.

00:17:50.340 --> 00:17:50.740
We'll make it.

00:17:50.740 --> 00:17:51.980
We've got a lot of stuff to cover.

00:17:52.820 --> 00:17:57.060
This is the most exciting one for me because it's like, oh, you want recommendations.

00:17:57.060 --> 00:17:58.080
I'm here for it.

00:17:58.080 --> 00:17:58.940
Yeah, absolutely.

00:17:58.940 --> 00:17:59.900
Oh, it's so good.

00:17:59.900 --> 00:18:00.360
Yeah.

00:18:00.360 --> 00:18:02.820
If we spend a lot of time here, I think that's also totally fine.

00:18:02.820 --> 00:18:15.320
So one of the things I much prefer about all my Z shell over, say, bash is I could type git git space and hit the up arrow and it'll only show me stuff that started with git.

00:18:15.420 --> 00:18:18.220
So if I'm like, all right, what were the git commands I recently did?

00:18:18.220 --> 00:18:19.860
I hit up arrow, up arrow, and it'll cycle through them.

00:18:19.860 --> 00:18:21.340
Very common, like SSH.

00:18:21.340 --> 00:18:23.480
I'm like, I need the third server I was recently on.

00:18:23.480 --> 00:18:24.080
I don't want to type it.

00:18:24.080 --> 00:18:26.600
So SSH space, up arrow, up arrow, up arrow, enter, right?

00:18:26.600 --> 00:18:27.740
And that's really good.

00:18:28.260 --> 00:18:35.260
Something I've been using for about a month now that's really neat was recommended to us by somebody listening to Python Bytes.

00:18:35.260 --> 00:18:36.020
We covered it there.

00:18:36.020 --> 00:18:36.920
Was it McFly?

00:18:36.920 --> 00:18:37.960
Are you familiar with McFly?

00:18:37.960 --> 00:18:39.260
I'm not.

00:18:39.260 --> 00:18:46.120
And now I want to know because I have a very specific wish that ohmyzshell would do.

00:18:46.120 --> 00:18:48.480
And if this does it, I will insta-download it.

00:18:48.480 --> 00:18:48.880
Okay.

00:18:48.880 --> 00:18:55.220
First thing that makes this nice is it integrates in a non-conflicting way with ohmyzshell.

00:18:55.300 --> 00:18:58.340
So I have McFly and ohmyzshell working together.

00:18:58.340 --> 00:18:58.860
Okay.

00:18:58.860 --> 00:19:07.240
So McFly, what it does is if you type normally, if you type control R, it'll go to a reverse search on Bash or zshell or whatever, right?

00:19:07.240 --> 00:19:09.100
And that's, I find, to be very useless.

00:19:09.100 --> 00:19:10.360
I've never done that.

00:19:10.360 --> 00:19:10.900
Yeah.

00:19:10.900 --> 00:19:11.900
You know what?

00:19:11.900 --> 00:19:12.540
I'll tell you what I do.

00:19:12.540 --> 00:19:15.200
I'm like, oh, I tried to type something else and I accidentally hit it.

00:19:15.200 --> 00:19:15.700
I'm like, darn it.

00:19:15.700 --> 00:19:16.680
I got to get it out of this thing.

00:19:16.680 --> 00:19:19.760
I know that you can search for stuff historically and it's useful.

00:19:19.760 --> 00:19:24.640
But what I already talked about with the up arrow stuff, that's like the way I go through history.

00:19:25.260 --> 00:19:27.440
And zshell, like, ohmyzshell, really nice.

00:19:27.440 --> 00:19:41.940
But this, imagine if you could just say, actually, what I want you to do is use artificial intelligence, a context, and fuzzy matching to show me a dropdown, Emacs-like experience for my history that I can then run.

00:19:42.100 --> 00:19:52.580
So what you can do is you can type a part of a command and hit control R and this replaces your control R with this, like, full screen select mode that'll show you all the stuff, which is really cool.

00:19:53.780 --> 00:19:55.020
The stuff that matches.

00:19:55.020 --> 00:19:56.700
And it doesn't have to just be the beginning.

00:19:56.700 --> 00:19:59.440
It can match in the middle of strings and commands.

00:19:59.440 --> 00:20:01.500
So you're like, oh, I checked out this branch.

00:20:01.500 --> 00:20:02.640
I don't remember where it was.

00:20:02.640 --> 00:20:08.200
Or you just type part of the word of the branch and hit control R and then boom, there's all the commands you ever issued to that branch, basically.

00:20:08.200 --> 00:20:09.380
Which is fantastic.

00:20:09.380 --> 00:20:10.720
It uses context.

00:20:10.880 --> 00:20:19.800
So if you're in a certain directory or you had just typed one command that's usually followed by another command, it'll give you different ordering on your history, not just the order you typed in.

00:20:19.800 --> 00:20:21.800
But, like, usually go to this directory and type that.

00:20:21.800 --> 00:20:22.680
So you're in this directory.

00:20:22.680 --> 00:20:23.860
You ask for help on it.

00:20:23.860 --> 00:20:25.400
So we're going to suggest that one first.

00:20:25.400 --> 00:20:25.860
Isn't that cool?

00:20:25.860 --> 00:20:31.800
See, that's the exact problem that I had was the directory sensitive, like, context.

00:20:32.100 --> 00:20:40.980
I mean, I guess the big example for me is if I'm building something in, like, Flask, I often use something like Tailwind CSS to do the styling for it.

00:20:40.980 --> 00:20:45.220
And I need to reload Tailwind from time to time to add the changes.

00:20:45.220 --> 00:20:55.020
And, you know, on some project, I might put that CSS file in, like, static CSS Tailwind slash Tailwind CSS or something like that.

00:20:55.020 --> 00:20:58.200
And the other one might be in, like, static Tailwind CSS.

00:20:58.200 --> 00:21:05.760
And the thing I need to remember is when I do NPX Tailwind CSS output, whatever that file name is, I always mess it up.

00:21:05.760 --> 00:21:07.300
And I always put it in the wrong folder.

00:21:07.300 --> 00:21:14.060
So if I knew what folder, like, based on history it was supposed to be in, like, to me, that solves that problem.

00:21:14.060 --> 00:21:14.560
Yeah.

00:21:14.560 --> 00:21:20.780
I don't know how well it'll work there, but that's one of the types of things it takes into account.

00:21:20.780 --> 00:21:24.780
You can also optionally turn on fuzzy matching and some other stuff.

00:21:24.780 --> 00:21:27.160
So, so far, it's been working pretty well.

00:21:27.160 --> 00:21:28.820
I'm pretty, pretty psyched with it.

00:21:28.820 --> 00:21:31.660
So, yeah, this one's fun.

00:21:31.660 --> 00:21:32.900
I would recommend people check it out.

00:21:32.900 --> 00:21:33.900
It's been working well for me.

00:21:33.900 --> 00:21:38.600
I'm going to give this a shot, but I have one that I recently just started using.

00:21:38.600 --> 00:21:43.400
And I think that this is, this might be something that a lot of folks have had issues with.

00:21:43.400 --> 00:21:53.460
Have you ever tried to do, like, a grep for something, and then you find the thing that you're looking for, and then you're like, wait, but now I need to go and replace that thing?

00:21:53.540 --> 00:21:54.540
How do I do that?

00:21:54.540 --> 00:21:54.880
Yeah.

00:21:54.880 --> 00:22:02.900
Like, I found a program called Amber, which has two commands to it, AMBR and AMBS.

00:22:03.540 --> 00:22:09.600
And the way I think I sent you a link in, oh, it's a link in the doc there for you.

00:22:10.600 --> 00:22:19.180
But AMBR is a replace and AMBS is a search and everything else is basically the same.

00:22:19.180 --> 00:22:21.820
And it uses that grep-like feature.

00:22:21.820 --> 00:22:26.080
So you could do AMBR for, sorry, AMBS for search.

00:22:26.220 --> 00:22:32.220
And then type in what you're searching for, what file directory you want to have it search through.

00:22:32.220 --> 00:22:35.420
It'll do some nice, you know, stylized matching.

00:22:35.420 --> 00:22:43.880
And then when you're ready to replace it, just hit up, replace the S with an R, and then add whatever you want to change it to.

00:22:43.880 --> 00:22:45.960
And it'll just go in and make that change.

00:22:46.200 --> 00:22:50.900
So like, if you don't have to remember, like, how does sed work or how does awk work?

00:22:50.900 --> 00:22:51.740
It's like, you know what?

00:22:51.740 --> 00:22:54.820
Just AMBR, I found what I'm looking for.

00:22:54.820 --> 00:22:57.120
Or in AMBS, other way around.

00:22:57.120 --> 00:23:01.460
That's the one thing I will say is I get them confused and mix them up when I'm talking about it.

00:23:01.960 --> 00:23:05.860
But you don't have to remember two different languages.

00:23:05.860 --> 00:23:12.720
You just have to remember, replace one character with another and then add whatever I want to do as my substitute.

00:23:12.720 --> 00:23:14.340
Oh, that's pretty nice.

00:23:14.340 --> 00:23:15.100
Yeah, I haven't heard of this.

00:23:15.100 --> 00:23:15.720
This is great.

00:23:15.720 --> 00:23:21.120
So another one, the one that Brandon talked about that I mentioned was fig.io.

00:23:21.120 --> 00:23:23.640
This one is new and interesting.

00:23:23.640 --> 00:23:30.000
So with tools like PyCharm and VS Code, as you type things, you get autocomplete dropdown.

00:23:30.180 --> 00:23:33.460
What if you could have that as part of all of your shell?

00:23:33.460 --> 00:23:35.520
That's what this fig thing is.

00:23:35.520 --> 00:23:39.520
And it has crazy integration, like all sorts of coloration and stuff.

00:23:39.520 --> 00:23:46.640
And to the point where I have a bunch of custom icons I put for certain folders so I can find them more quickly.

00:23:46.640 --> 00:23:52.560
When it shows the folders, if I type cd space, like GitHub space, like talk and start to type top Python,

00:23:52.560 --> 00:23:55.440
it'll show the top Python icon on the folder.

00:23:55.440 --> 00:23:56.900
It's autocomplete in the terminal.

00:23:56.900 --> 00:23:58.160
Like it's ridiculous.

00:23:58.400 --> 00:24:05.880
See, this is where like I wish that there was like copilot for just working through the shell.

00:24:05.880 --> 00:24:07.620
Like I just start typing something.

00:24:07.620 --> 00:24:09.060
It's, oh, you meant to do this.

00:24:09.060 --> 00:24:10.520
And it's like, yes, exactly.

00:24:10.520 --> 00:24:11.280
And I hit okay.

00:24:11.280 --> 00:24:12.100
And I'm good.

00:24:12.100 --> 00:24:13.700
So I was trying it.

00:24:13.700 --> 00:24:14.640
They updated today.

00:24:14.640 --> 00:24:15.620
It broke some stuff.

00:24:15.620 --> 00:24:16.440
I got frustrated.

00:24:16.440 --> 00:24:17.560
I've only tried it for one day.

00:24:17.560 --> 00:24:18.760
So it's not a real recommendation.

00:24:18.760 --> 00:24:21.020
Brandon seems to like it out in the live stream.

00:24:21.360 --> 00:24:22.560
I thought it was pretty cool.

00:24:22.560 --> 00:24:24.560
But I can't give a full recommendation.

00:24:24.560 --> 00:24:25.980
But I can tell you to check that out.

00:24:25.980 --> 00:24:26.660
All right.

00:24:26.660 --> 00:24:30.420
So that was a bunch of stuff for just the shell.

00:24:30.420 --> 00:24:33.340
But I think this is really one of the things that's super important.

00:24:33.340 --> 00:24:36.360
I'd also like to point out, was it Starship?

00:24:36.360 --> 00:24:37.560
Is that the one?

00:24:37.560 --> 00:24:38.100
Yeah.

00:24:38.100 --> 00:24:43.940
Starship was the reason why I specified use iTerm if you're not using some type of emulator.

00:24:44.080 --> 00:24:45.920
because Starship is actually pretty cool.

00:24:45.920 --> 00:24:46.420
Yeah.

00:24:46.420 --> 00:24:49.480
That's the one Brett Cannon definitely recommends all the time.

00:24:49.480 --> 00:24:52.100
And I definitely admire his recommendations.

00:24:52.100 --> 00:24:54.060
So this is another one.

00:24:54.060 --> 00:24:58.960
If you're not on the Oh My Zoo Shell bandwagon, that sounds like it'd be pretty good.

00:24:58.960 --> 00:25:01.260
This one's more about the prompt and not the whole shell.

00:25:01.260 --> 00:25:04.100
So you can like swap it from place to place, which is also pretty cool.

00:25:04.100 --> 00:25:04.980
All right.

00:25:04.980 --> 00:25:05.780
Ngrok.

00:25:05.780 --> 00:25:07.360
Have you done anything with Ngrok?

00:25:07.360 --> 00:25:08.240
I haven't.

00:25:08.240 --> 00:25:08.460
Please.

00:25:08.460 --> 00:25:12.420
Like I was taking a look at it and I was like, this seems amazing.

00:25:12.700 --> 00:25:15.360
But I also don't know if I have a need for this.

00:25:15.360 --> 00:25:16.780
Ngrok.

00:25:16.780 --> 00:25:17.620
Is it .com?

00:25:17.620 --> 00:25:18.180
Yeah.

00:25:18.180 --> 00:25:18.960
Ngrok.com.

00:25:18.960 --> 00:25:24.880
So there's this, there's like three or four scenarios that are just so painful that this

00:25:24.880 --> 00:25:25.840
hauls so well.

00:25:25.840 --> 00:25:28.420
So Ngrok is a tool that's free, but also has a paid plan.

00:25:28.420 --> 00:25:29.440
It's like a hundred dollars a year.

00:25:29.440 --> 00:25:34.480
They get a hundred of my dollars every year because it's extra useful what you can do with

00:25:34.480 --> 00:25:36.780
the paid plan for me, but maybe it's not for you.

00:25:36.780 --> 00:25:37.560
So you can try it for free.

00:25:37.560 --> 00:25:39.260
So let me give you a scenario.

00:25:39.260 --> 00:25:45.420
I'm working on rewriting the credit card e-commerce system of Talk By Line training.

00:25:45.420 --> 00:25:45.860
Yeah.

00:25:45.860 --> 00:25:46.520
Okay.

00:25:46.520 --> 00:25:51.260
And the way this new site that I'm at a new service I'm going to integrate with tells me

00:25:51.260 --> 00:25:55.240
somebody bought something because you don't want to do all the processing on your server

00:25:55.240 --> 00:25:57.120
because then you have PCI compliance and all that stuff.

00:25:57.120 --> 00:26:01.300
Like they do the processing and they let me know and I take the person to where I tell them

00:26:01.300 --> 00:26:01.900
they need to go.

00:26:01.900 --> 00:26:07.300
The way they let me know is they do a web hook, a call into my server with the results.

00:26:07.300 --> 00:26:11.340
And then I create the access to the course and then redirect.

00:26:11.340 --> 00:26:14.840
And then when they go to that place, they have access to it, for example.

00:26:14.840 --> 00:26:15.100
Right.

00:26:15.100 --> 00:26:20.300
So I've got to debug this and I've got to debug their server calling into my server.

00:26:20.300 --> 00:26:21.820
And you're like, well, how do you do that?

00:26:21.820 --> 00:26:22.120
Right.

00:26:22.540 --> 00:26:27.560
So one terrible way would be to like open up your router and put your computer straight

00:26:27.560 --> 00:26:28.160
on the internet.

00:26:28.160 --> 00:26:33.960
But with Ngrok, you could just say Ngrok, I want to accept HTTP messages to my local machine.

00:26:33.960 --> 00:26:36.020
It opens an SSH tunnel out.

00:26:36.020 --> 00:26:38.260
So I don't have to open any firewalls, any ports.

00:26:38.260 --> 00:26:41.740
It can be as complicated on the way out of town as it wants to be.

00:26:41.740 --> 00:26:48.220
And then it listens on Ngrok.com for an HTTPS URL that then is SSH tunneled back to my local

00:26:48.220 --> 00:26:48.480
server.

00:26:48.480 --> 00:26:54.100
So I put a break point in PyCharm, go to their little app and type in my stuff and say, test

00:26:54.100 --> 00:26:54.680
this purchase.

00:26:54.680 --> 00:26:59.020
And then boom, paused in PyCharm, pausing their server request as I'm going through.

00:26:59.020 --> 00:27:01.260
See, I thought about something like that.

00:27:01.260 --> 00:27:05.980
And as soon as you pulled up the site, an actual use case for me popped up.

00:27:05.980 --> 00:27:10.140
And a good example of this was, you know, doing the developer advocate thing.

00:27:10.220 --> 00:27:14.900
I often have like builds of stuff, servers, you know, Docker composed instances.

00:27:14.900 --> 00:27:17.980
And I keep all of this on like a Mac mini at my house.

00:27:17.980 --> 00:27:23.220
And the one time I actually needed it and it kind of, you know, bit me in the backside was

00:27:23.220 --> 00:27:26.180
I was in LA for KubeCon recently.

00:27:26.180 --> 00:27:29.420
And I was like, oh no, I want to do this demo.

00:27:29.420 --> 00:27:36.340
But all of my database stuff is like on my server at home because, you know, we haven't

00:27:36.340 --> 00:27:37.980
been going anywhere for like a long time.

00:27:38.340 --> 00:27:40.280
So yeah, you forgot what it meant to leave the home.

00:27:40.280 --> 00:27:40.940
Exactly.

00:27:40.940 --> 00:27:46.080
So had I had something like this, I could have just said like, you know, open up access on

00:27:46.080 --> 00:27:51.920
this port and this port only and say like, hey, now I can actually access data on my home

00:27:51.920 --> 00:27:57.800
server and keep all of my configs the same instead of doing what I had to do, which was like redownload

00:27:57.800 --> 00:28:03.420
all the data, open up a cloud instance and then, you know, move everything to the cloud

00:28:03.420 --> 00:28:08.240
and then get a call from our company saying, hey, you, you, your bill went up like several

00:28:08.240 --> 00:28:09.840
hundreds of dollars with the gives.

00:28:09.840 --> 00:28:10.500
And it's like, oh, sorry.

00:28:10.500 --> 00:28:14.680
I was downloading gigabytes and of data and left it on.

00:28:14.680 --> 00:28:14.900
Yeah.

00:28:14.900 --> 00:28:15.140
Yeah.

00:28:15.140 --> 00:28:17.920
On conference wire on conference wifi nonetheless.

00:28:17.920 --> 00:28:18.800
Yeah.

00:28:18.800 --> 00:28:19.340
Yeah.

00:28:19.340 --> 00:28:21.280
So you don't even have to open up ports.

00:28:21.280 --> 00:28:26.720
It just like you run this and then it, it, it SSH tunnels in reverse back.

00:28:26.720 --> 00:28:28.000
Oh, that's really, really awesome.

00:28:28.000 --> 00:28:31.120
So, and you can just leave it running for days if you want.

00:28:31.120 --> 00:28:37.540
Another example is when we were debugging the mobile apps for viewing the courses, we just

00:28:37.540 --> 00:28:39.840
told it the URL was that opened up the phone.

00:28:39.840 --> 00:28:44.680
It didn't matter if we were on LTE or whatever, hit a button and boom, break point again.

00:28:44.680 --> 00:28:49.360
Another one that I think this would be really helpful for is, Hey, I'm in this standup meeting.

00:28:49.360 --> 00:28:53.800
I want to show everybody this new feature we added to the website, but it's only on my local

00:28:53.800 --> 00:28:54.100
version.

00:28:54.100 --> 00:28:56.700
We haven't deployed it, but you don't want to show it over Zoom.

00:28:56.700 --> 00:29:00.900
Cause like the animations look crappy and all that just and grok it, give everybody in

00:29:00.900 --> 00:29:05.000
the meeting a URL and they can interact with it live with all like the JavaScript fanciness,

00:29:05.000 --> 00:29:06.620
but it's running on your server, right?

00:29:06.620 --> 00:29:07.480
It's just the latest one.

00:29:07.480 --> 00:29:07.920
It's beautiful.

00:29:07.920 --> 00:29:12.780
I was, I was thinking about that in terms of like, what's the, what's the overall latency

00:29:12.780 --> 00:29:14.120
of what is happening there?

00:29:14.120 --> 00:29:19.180
Because in my mind, I'm, I'm like this, this is the better way to, to show people things

00:29:19.180 --> 00:29:21.680
is like, you can go to this website and you can play around with this.

00:29:21.680 --> 00:29:25.920
And at the end of the day, like you just close the end grok connection and you know,

00:29:25.920 --> 00:29:26.580
it's all done.

00:29:26.680 --> 00:29:29.200
You don't have to control C and like you're off the network again.

00:29:29.200 --> 00:29:29.600
Yeah.

00:29:29.600 --> 00:29:29.840
Yeah.

00:29:29.840 --> 00:29:32.140
I might have to play with this as soon as we're off this call.

00:29:32.140 --> 00:29:34.560
Cause I have a demo that I have to do soon.

00:29:34.560 --> 00:29:35.540
So yeah.

00:29:35.540 --> 00:29:36.280
It's awesome.

00:29:36.280 --> 00:29:39.420
One of the things you get with the paid plan is you can create a stable URL.

00:29:39.420 --> 00:29:42.720
Whereas if you have a free one, it always resets the URL.

00:29:42.720 --> 00:29:45.040
So you got to like reshare it, which might be fine.

00:29:45.040 --> 00:29:46.320
It might actually be good, but yeah.

00:29:46.320 --> 00:29:47.260
That's good for me.

00:29:47.260 --> 00:29:49.040
I needed to reset on its own.

00:29:49.400 --> 00:29:49.520
Yeah.

00:29:49.520 --> 00:29:54.120
So instead of trying to set up some crazy server setup at home and trying to do like router

00:29:54.120 --> 00:29:59.020
NAT routing, which you probably don't want to even expose your, your server to the, or your

00:29:59.020 --> 00:30:01.500
machine to the internet, just fire up an ingrock session.

00:30:01.500 --> 00:30:02.160
Good to go.

00:30:02.160 --> 00:30:06.000
I really think this is a, I've been using this like all week and it just reminds me how much

00:30:06.000 --> 00:30:06.460
I love it.

00:30:06.460 --> 00:30:07.220
I'm like, yep.

00:30:07.220 --> 00:30:13.220
It's just set the sandbox URL to have my ingrock endpoint instead of the production endpoint.

00:30:13.220 --> 00:30:14.800
And boom, it's good to go.

00:30:14.800 --> 00:30:20.580
You know, one of the things that I was thinking about as a productivity tip is very much for

00:30:20.580 --> 00:30:21.620
the beginners out there.

00:30:21.620 --> 00:30:29.580
Like I have always struggled in the idea of like, Oh, what do I do with all of this server

00:30:29.580 --> 00:30:32.180
admin stuff that I don't want to have to do?

00:30:32.180 --> 00:30:34.680
I remember how intimidating that stuff was.

00:30:34.680 --> 00:30:35.120
Yeah.

00:30:35.120 --> 00:30:40.680
And, and I think that this is, you know, it's, it's kind of a good segue between, you

00:30:40.680 --> 00:30:44.260
know, the next topic that you're going to talk about and this existing one.

00:30:44.260 --> 00:30:50.580
And that's like the idea of like you, it's okay to embrace, you know, not necessarily the

00:30:50.580 --> 00:30:56.760
serverless ecosystem, but like the power, like the past product as a service ecosystem

00:30:56.760 --> 00:31:01.540
to where like, Hey, I just want to build my app and I don't want to be a, you know,

00:31:01.540 --> 00:31:02.300
sysadmin.

00:31:02.300 --> 00:31:03.560
Can I do that?

00:31:03.560 --> 00:31:10.580
And now with stuff like Netlify or sell digital ocean has a thing now, like Heroku, Heroku.

00:31:10.580 --> 00:31:11.200
Yeah.

00:31:11.200 --> 00:31:16.860
Like taking advantage of some of those things or even doing something like in grok that you

00:31:16.860 --> 00:31:19.500
can spin up when you're done with it, tear it down.

00:31:19.620 --> 00:31:24.180
I think that was actually a tip on the last time we were in this call is like, I often

00:31:24.180 --> 00:31:30.660
build admin consoles and flask, do them locally, have them connect to my servers offsite to do

00:31:30.660 --> 00:31:31.720
any database changes.

00:31:31.960 --> 00:31:37.600
And that way I know for a fact, I'm not leaving anything secure open because I'm just doing localhost.

00:31:37.600 --> 00:31:38.880
It's sending the API calls.

00:31:38.980 --> 00:31:44.680
And when I'm done and I close the terminal, it disconnects and there's no more access unless

00:31:44.680 --> 00:31:46.140
someone has my API keys.

00:31:46.140 --> 00:31:47.800
I'm not putting anything up on a server.

00:31:47.800 --> 00:31:51.640
I'm not putting anything up in GitHub and I don't have to maintain it and be worried about

00:31:51.640 --> 00:31:51.760
it.

00:31:51.760 --> 00:31:58.860
I can just go, Oh, Python app.py enter, and then go to localhost 5000, make my changes and

00:31:58.860 --> 00:31:59.840
then close it.

00:31:59.840 --> 00:32:00.440
And then cool.

00:32:00.440 --> 00:32:01.520
Got access.

00:32:01.520 --> 00:32:02.460
Don't got access.

00:32:02.460 --> 00:32:03.180
That easy.

00:32:03.180 --> 00:32:08.660
This portion of Talk Python to Me is brought to you by Cockroach Labs.

00:32:08.660 --> 00:32:10.300
Let me ask you a question.

00:32:10.300 --> 00:32:12.800
What if you could build like big tech?

00:32:12.800 --> 00:32:17.720
Use the same powerful infrastructure that they spent engineering centuries building.

00:32:17.720 --> 00:32:20.700
It's actually possible with CockroachDB.

00:32:20.700 --> 00:32:26.080
The founders has spent the last eight years creating a cloud native distributed SQL database

00:32:26.080 --> 00:32:32.200
that provides the consistency, ultra resilience, data locality, and massive scale for modern

00:32:32.200 --> 00:32:33.200
cloud applications.

00:32:33.200 --> 00:32:37.820
Tech that was only once available to the likes of Google, Facebook, and Netflix.

00:32:37.820 --> 00:32:43.580
The easiest way to kick the tires on CockroachDB and feel the power of a distributed SQL database

00:32:43.580 --> 00:32:49.280
is to sign up for their serverless database over at talkpython.fm/cockroachDB.

00:32:49.280 --> 00:32:53.420
With CockroachDB, you'll get automatic scale without breaking your budget.

00:32:53.420 --> 00:32:58.920
The storage and transactional volumes automatically scale up and down to meet your application's

00:32:58.920 --> 00:32:59.240
demands.

00:32:59.240 --> 00:33:03.280
You get a familiar SQL interface that's compatible with Postgres.

00:33:03.280 --> 00:33:04.560
Zero downtime.

00:33:04.560 --> 00:33:08.740
The ability to make schema changes in production with no interruption.

00:33:08.740 --> 00:33:11.200
And even a generous free tier.

00:33:11.200 --> 00:33:15.140
You get up to five gigabytes without even entering a credit card.

00:33:15.140 --> 00:33:20.540
With their credit cardless free tier and Postgres compatibility, you owe it to yourself to check

00:33:20.540 --> 00:33:21.460
out CockroachDB.

00:33:21.460 --> 00:33:27.460
Just visit talkpython.fm/cockroachDB or click the link in your podcast player's show

00:33:27.460 --> 00:33:28.440
notes to get started.

00:33:28.440 --> 00:33:36.480
Jaylee out there also says, I'm using Ingrock to work with my RPI, or Raspberry Pi.

00:33:36.480 --> 00:33:37.160
Raspberry Pi, yeah.

00:33:37.160 --> 00:33:38.480
Yeah, for home security services.

00:33:38.480 --> 00:33:38.880
Works great.

00:33:38.880 --> 00:33:42.080
Yeah, that's another thing on devices that aren't necessarily listening.

00:33:42.080 --> 00:33:45.780
You can get them to sort of push out and then start listening again on the public internet.

00:33:46.000 --> 00:33:47.240
Yeah, there's a lot of good use of it.

00:33:47.240 --> 00:33:48.500
Told you, it's Ingrock thing.

00:33:48.500 --> 00:33:49.900
It's a thing of beauty.

00:33:49.900 --> 00:33:50.440
All right.

00:33:50.440 --> 00:33:55.120
So another thing that I think, speaking of people who are beginners and struggle, right,

00:33:55.120 --> 00:33:57.500
has to do with security, right?

00:33:57.500 --> 00:34:01.900
You push something out on the internet, you know, who knows what's going to, how quickly

00:34:01.900 --> 00:34:03.020
will it get owned, right?

00:34:03.020 --> 00:34:03.920
It's not going to be good.

00:34:03.920 --> 00:34:10.400
And there's a bunch of recommendations from OWASP that they say, look, these types of things

00:34:10.400 --> 00:34:19.200
we found to be common vulnerabilities that websites have, like injection, cross-site scripting,

00:34:19.200 --> 00:34:25.520
other things like if you don't explicitly disallow it, people can take your site and embed them

00:34:25.520 --> 00:34:28.520
in an iframe and then wrap other stuff around it, right?

00:34:28.660 --> 00:34:33.720
Like go to your login screen, but actually overlay something that captures the keystrokes

00:34:33.720 --> 00:34:34.780
or other weird things, right?

00:34:34.780 --> 00:34:37.220
So how do you keep track of these?

00:34:37.220 --> 00:34:37.920
How do you prevent them?

00:34:37.920 --> 00:34:40.740
So this thing called SecurePy is fantastic.

00:34:41.840 --> 00:34:47.060
And it's got the most amazing PyPI name, just secure, like how they got that name.

00:34:47.060 --> 00:34:47.760
I have no idea.

00:34:47.760 --> 00:34:48.400
That's incredible.

00:34:48.400 --> 00:34:50.060
But it integrates.

00:34:50.060 --> 00:34:53.380
One of the things I like is it just, it's like a couple of lines of code to integrate

00:34:53.380 --> 00:34:55.540
into whatever framework you're using.

00:34:55.540 --> 00:35:02.880
So Quart, Responder, Sanic, Flask, FastAPI, Django, Pyramid, AIO, HTTP, like all of these

00:35:02.880 --> 00:35:03.220
things.

00:35:03.220 --> 00:35:06.540
And it's just a couple of lines of code to get it integrated.

00:35:07.500 --> 00:35:12.640
Usually it's some kind of like middleware type of thing that you wrap it up with.

00:35:12.640 --> 00:35:17.400
And so in order to use it, all you have to do is create one of these secure headers.

00:35:17.400 --> 00:35:23.520
And then you set a couple of values like whether or not you want to allow cross-site scripting

00:35:23.520 --> 00:35:24.180
and things like that.

00:35:24.180 --> 00:35:30.040
And then what it'll do is it'll automatically put all the security controlling headers into

00:35:30.040 --> 00:35:32.040
the response coming out of your website.

00:35:32.040 --> 00:35:35.320
So for example, X content type options, no sniff.

00:35:35.320 --> 00:35:36.440
Did you know any of that?

00:35:36.440 --> 00:35:39.200
Want to protect against that X frame thing or iframe?

00:35:39.200 --> 00:35:41.520
X frame options, same origin.

00:35:41.520 --> 00:35:43.520
So you can do it with no one else.

00:35:43.520 --> 00:35:46.480
Things about the referrers and so on.

00:35:46.480 --> 00:35:49.760
Cross-site origin for JavaScript and whatnot.

00:35:49.760 --> 00:35:53.420
So it's super easy to integrate with what you're doing.

00:35:53.420 --> 00:35:58.540
It also has like a tamper-proof cookie type of option for doing that as well.

00:35:58.540 --> 00:35:59.680
So what do you think of this one?

00:35:59.680 --> 00:36:05.300
So I know when I first saw this, I was like, oh, what is this obfuscation of like what's

00:36:05.300 --> 00:36:06.520
happening behind the scenes?

00:36:06.520 --> 00:36:10.080
And, you know, I literally just talked about this 30 seconds ago.

00:36:10.080 --> 00:36:12.680
Like, oh, you don't want to have to think about that stuff.

00:36:12.680 --> 00:36:15.980
Yeah, I'm going to completely walk that back.

00:36:15.980 --> 00:36:20.840
And like in my own projects like that I'm building, it's like I want to know what's happening.

00:36:21.360 --> 00:36:23.040
I just don't want to have to maintain it.

00:36:23.760 --> 00:36:24.140
Yeah.

00:36:24.140 --> 00:36:25.440
Which is like, yeah.

00:36:25.440 --> 00:36:30.980
And that's kind of where you actually, your response in like showing how this works and

00:36:30.980 --> 00:36:36.540
showing like it's just adding the headers on that it needs makes me feel a lot better because

00:36:36.540 --> 00:36:41.480
I mean, I'm in a DevOps space where we're like, we do a lot of like APM stuff.

00:36:41.480 --> 00:36:46.120
And I just got off a live stream where someone was like, yeah, it just connects to your platform.

00:36:46.120 --> 00:36:51.140
And it's like looking and digging and getting like logging of all of this stuff that like

00:36:51.140 --> 00:36:54.380
is a dependency of the tools that you're using.

00:36:54.380 --> 00:36:57.340
And it's like, oh, that's kind of, I mean, it's cool.

00:36:57.340 --> 00:36:58.880
Should it be doing that?

00:36:58.880 --> 00:36:59.280
I don't know.

00:36:59.340 --> 00:37:03.280
I mean, it's great because I know that I can drill down and see where the problem is.

00:37:03.280 --> 00:37:06.040
But at the same time, like I want to know that it's doing that.

00:37:06.040 --> 00:37:10.540
And that's my concern with tools like this.

00:37:10.540 --> 00:37:19.240
But I will always say leave security to people who know security and don't try to roll your

00:37:19.240 --> 00:37:19.580
own.

00:37:19.580 --> 00:37:22.080
I think Jacob Kaplan Moss said that.

00:37:22.080 --> 00:37:23.880
Yeah, that's good advice.

00:37:23.880 --> 00:37:31.560
One of the things in my dream world imagination or idealification of this thing is if a new

00:37:31.560 --> 00:37:35.700
recommendation comes out, some new header that we should all be adding that we are not paying

00:37:35.700 --> 00:37:40.900
attention to that we should have added, but we didn't for some sort of configuration change

00:37:40.900 --> 00:37:46.460
for security, secure pie could be updated to make those changes and you just pick them up

00:37:46.460 --> 00:37:48.680
and you don't have to know that that was improved.

00:37:48.680 --> 00:37:58.380
So that makes me wonder, do you know if any of these protections come in at like a platform

00:37:58.380 --> 00:37:58.900
level?

00:37:58.900 --> 00:38:03.780
Like if you can, you know, if you're using something like a Netlify, you say, oh, I use Netlify

00:38:03.780 --> 00:38:05.240
functions to load a thing.

00:38:05.240 --> 00:38:11.600
I mean, I wonder if Netlify is doing something on their end to also include some of these.

00:38:11.740 --> 00:38:16.400
And that's, I mean, that's where a lot of my concern comes from is that, you know, if

00:38:16.400 --> 00:38:20.880
down the road I'm doing a thing and then like my provider is also doing a thing, am I going

00:38:20.880 --> 00:38:24.620
to run into some goofy error that I have to troubleshoot?

00:38:24.620 --> 00:38:29.220
I would guess because it's headers, just they would overwrite what your app creates.

00:38:29.220 --> 00:38:29.920
Yeah.

00:38:29.920 --> 00:38:35.700
This is more intended for like Flask or Django or something like that where you're kind of

00:38:35.700 --> 00:38:38.380
the beginning and the end of the security statement.

00:38:38.380 --> 00:38:38.600
Yeah.

00:38:38.600 --> 00:38:40.520
I mean, something like that.

00:38:40.800 --> 00:38:41.160
Absolutely.

00:38:41.160 --> 00:38:47.800
And like I said, I will always leave security to in the hands of people who get paid to

00:38:47.800 --> 00:38:51.620
think about security because I know I should be thinking about it.

00:38:51.620 --> 00:38:57.140
And the most secure thing I can do is say, hey, I need an adult in this situation.

00:38:57.140 --> 00:38:58.320
Please make this right.

00:38:58.320 --> 00:38:59.860
I've thought a lot about this and I haven't.

00:38:59.860 --> 00:39:00.220
Absolutely.

00:39:00.220 --> 00:39:05.840
I also would like to point out that if you're not doing Python and web apps, I mean, first

00:39:05.840 --> 00:39:06.560
of all, what's wrong with you?

00:39:06.560 --> 00:39:06.760
No.

00:39:07.140 --> 00:39:11.640
But seriously, second, there's tools like this for other frameworks for like ASP.NET

00:39:11.640 --> 00:39:13.020
and other ones.

00:39:13.020 --> 00:39:16.360
If you want it, if you seek it out, they have a totally different name.

00:39:16.360 --> 00:39:20.500
Very unlikely to have a cool name like secure, but there's other tools for other frameworks

00:39:20.500 --> 00:39:21.440
and platforms as well.

00:39:21.820 --> 00:39:26.620
You'll have to listen to talk whatever that language is to me, I guess, to hear about

00:39:26.620 --> 00:39:26.760
that.

00:39:26.760 --> 00:39:27.660
Yeah.

00:39:27.660 --> 00:39:27.960
Yeah.

00:39:27.960 --> 00:39:30.460
Talk Cobalt to me about our APIs.

00:39:30.460 --> 00:39:31.340
All right.

00:39:31.340 --> 00:39:33.760
So yeah, to integrate it is like incredibly easy.

00:39:33.760 --> 00:39:34.680
So that's super cool.

00:39:34.680 --> 00:39:35.200
All right.

00:39:35.220 --> 00:39:41.040
So here's a recommendation, which is in some sense in contrast to how much I went on and

00:39:41.040 --> 00:39:43.600
on about how much I love the shell and the terminal.

00:39:43.600 --> 00:39:46.860
And that is don't shy away from UIs for your Git.

00:39:46.860 --> 00:39:48.520
For source control, basically.

00:39:48.520 --> 00:39:53.060
This is the one that I was like, I'm ready to fight on this one.

00:39:53.060 --> 00:39:53.300
All right.

00:39:53.300 --> 00:39:53.880
Let's battle.

00:39:54.340 --> 00:39:55.440
So here's the thing.

00:39:55.440 --> 00:40:02.180
I think there's a lot of value to having nice visualizations of what's happening, right?

00:40:02.180 --> 00:40:07.100
Like, for example, my first thing I pulled up for this was source tree from Atlassian.

00:40:07.100 --> 00:40:12.560
And when you open up a repo, you see the branch history and who has made what changes and where

00:40:12.560 --> 00:40:14.880
the tags are all in like one quick shot.

00:40:14.880 --> 00:40:16.180
And you still have hotkeys.

00:40:16.180 --> 00:40:20.040
Like if you want to just do a pull latest, you shift command L and that's the same as

00:40:20.040 --> 00:40:20.440
Git pull.

00:40:20.440 --> 00:40:22.320
You want to push shift command.

00:40:22.320 --> 00:40:23.980
I don't remember what the push one is.

00:40:24.300 --> 00:40:24.920
P maybe.

00:40:24.920 --> 00:40:30.740
But, you know, there's a couple of hotkeys that are sort of give you a quick access that

00:40:30.740 --> 00:40:31.820
is like being on the terminal.

00:40:31.820 --> 00:40:35.460
But you also have really nice and beautiful things.

00:40:35.460 --> 00:40:38.860
One, for if you're an expert or two, like if you have two branches, you want to merge

00:40:38.860 --> 00:40:42.400
one, you drag one branch on the other and that merges the changes from one to the other.

00:40:42.400 --> 00:40:42.860
Right.

00:40:42.860 --> 00:40:45.140
There's things that help people who are new a lot.

00:40:45.140 --> 00:40:50.600
So I find this doesn't mean you should never do source control in the terminal or with

00:40:50.600 --> 00:40:54.200
Git in the terminal, but that also shouldn't mean you should never use UI tools.

00:40:54.260 --> 00:40:55.620
That's my stance.

00:40:55.620 --> 00:40:56.420
How do you feel about this?

00:40:56.420 --> 00:40:57.000
Okay.

00:40:57.000 --> 00:40:57.360
Same.

00:40:57.360 --> 00:40:58.640
I can tell you feel the same.

00:40:58.640 --> 00:41:02.440
With that phrase, with that phrasing, I'm like, fine.

00:41:02.440 --> 00:41:05.000
But I did.

00:41:05.100 --> 00:41:06.820
I took the first word on this one.

00:41:06.820 --> 00:41:08.800
So go from there.

00:41:08.800 --> 00:41:15.140
So I have many a tweet that has said, I have made said mistake.

00:41:15.140 --> 00:41:17.580
I need to unmistake it.

00:41:17.580 --> 00:41:19.380
And how do I do this?

00:41:19.380 --> 00:41:21.440
And almost like clockwork.

00:41:21.440 --> 00:41:22.540
I do it wrong.

00:41:22.540 --> 00:41:24.600
And I wind up.

00:41:24.600 --> 00:41:25.400
Yeah.

00:41:25.400 --> 00:41:28.000
I just, I wind up deleting things that weren't supposed to be deleted.

00:41:28.000 --> 00:41:31.920
And then I'm banging my head against the wall and then figuring out how do I fix this?

00:41:31.920 --> 00:41:35.740
And the biggest get undo is just delete the whole directory.

00:41:35.740 --> 00:41:37.500
That is, that is actually.

00:41:37.500 --> 00:41:40.460
Check it out again and just hope that you can like kind of get it back.

00:41:40.460 --> 00:41:40.860
Yeah.

00:41:40.860 --> 00:41:43.960
That's, that's exactly my, my solution in most cases.

00:41:44.340 --> 00:41:51.740
and, and again, I also want to say, I am not saying that any type of UI is bad.

00:41:51.740 --> 00:41:57.740
I'm just saying, if you're getting started, learn the basics because you're going to be

00:41:57.740 --> 00:41:58.940
on a server one day.

00:41:58.940 --> 00:42:03.600
You're not going to have access to tower or source tree or something else.

00:42:03.600 --> 00:42:06.800
And you're going to need to know what was that command?

00:42:06.800 --> 00:42:08.760
Like what would get, get Brent?

00:42:08.760 --> 00:42:10.020
What, what is cherry picking?

00:42:10.020 --> 00:42:11.220
Get whatever, whatever.

00:42:11.220 --> 00:42:13.120
And it's like, you're going to need to know it.

00:42:13.440 --> 00:42:18.980
And if you have an over reliance and you don't understand what's happening behind the

00:42:18.980 --> 00:42:21.060
scenes, that's when you're going to be in trouble.

00:42:21.060 --> 00:42:29.480
So for me, it is very much, you can use the UIs, you can use the tools, know what's happening

00:42:29.480 --> 00:42:33.220
behind the scenes and know what they are as well.

00:42:33.220 --> 00:42:35.720
And I love what's this comment.

00:42:35.720 --> 00:42:37.000
Why make things more difficult?

00:42:37.000 --> 00:42:39.220
There's so much to memorize in our languages already.

00:42:39.220 --> 00:42:41.280
Why do we need to memorize the get commands as well?

00:42:41.280 --> 00:42:42.580
That's the thing.

00:42:42.580 --> 00:42:45.360
You don't have to memorize all of the commands.

00:42:45.360 --> 00:42:49.560
You just need to know, get a good understanding of what you do need to know.

00:42:49.560 --> 00:42:54.220
And on top of that, plus we already talked about use things like OhMyZSH where you can just

00:42:54.220 --> 00:42:57.640
tap through it and get a list and you can use man and you can learn about all the different

00:42:57.640 --> 00:42:58.620
commands and what they do.

00:42:58.620 --> 00:43:08.460
But again, if, if you hit delete on the Git or the GitHub, you know, interface, what is that

00:43:08.460 --> 00:43:08.780
doing?

00:43:08.860 --> 00:43:11.540
Is that just deleting your re is that deleting your entire repo?

00:43:11.540 --> 00:43:14.080
Is that deleting the clone that you have locally?

00:43:14.080 --> 00:43:15.300
Like what is happening?

00:43:15.300 --> 00:43:19.820
And what happens when you go to use some other tool and they use the exact same phrasing to

00:43:19.820 --> 00:43:21.120
do something different?

00:43:21.700 --> 00:43:30.200
What happens when you go to a new company and your Git workflow changes and you're like, Oh, well, now we don't do branch stuff.

00:43:30.200 --> 00:43:32.080
We do tagging and things like that.

00:43:32.080 --> 00:43:36.300
I'm not saying that you can't use the UI.

00:43:36.480 --> 00:43:47.100
I'm just saying it's good to kind of understand what the UI is doing so that if you ever need to change it or if you ever need to change what UI you're using, you can do so and do it in confidence.

00:43:47.100 --> 00:43:54.360
And when you're stuck in that one situation that I have personally been in where it's like, crap, I don't have I don't have the button that I press.

00:43:54.360 --> 00:43:55.960
Like, what do I need to do?

00:43:55.960 --> 00:44:00.260
Like you can at least have a better chance at making the right decision.

00:44:00.260 --> 00:44:00.820
Yeah.

00:44:00.820 --> 00:44:01.560
No, that's fair.

00:44:01.880 --> 00:44:05.340
I would say to Robert, I think our jail is Robert.

00:44:05.340 --> 00:44:06.160
Hopefully I got that right.

00:44:06.160 --> 00:44:06.600
Robert.

00:44:06.600 --> 00:44:11.680
There's probably five or six Git commands you need to actually know how to do.

00:44:11.680 --> 00:44:19.320
And then the rest I would go go to the UI because to me, it's like, do I really need to like visualize the branching in some other way?

00:44:19.320 --> 00:44:21.560
No, just open up source tree and look at it.

00:44:21.560 --> 00:44:22.640
That's going to be totally fine.

00:44:22.980 --> 00:44:36.060
But if I need to know how, you know, Git pull, Git commit, Git add, push, Git checkout, like these, these are the various things I need to know, you know, but like a complicated rebase, maybe I'm maybe I'll just go.

00:44:36.060 --> 00:44:40.620
I'm going to find I'm going to find the server or the UI and I'm going to do it.

00:44:40.620 --> 00:44:42.880
We've all done that interactive rebase.

00:44:42.880 --> 00:44:44.540
And we're just like, why am I doing?

00:44:44.540 --> 00:44:48.420
We get like three of them through and we're like, yeah, sure, whatever.

00:44:48.420 --> 00:44:49.860
Just accept the rest of them and go.

00:44:50.280 --> 00:44:53.300
And then you realize that you weren't, you shouldn't have done that.

00:44:53.300 --> 00:44:55.900
I mean, I'm totally there.

00:44:55.900 --> 00:44:58.980
Why am I, why am I in VI?

00:44:58.980 --> 00:45:00.620
Just accept theirs, accept theirs.

00:45:00.620 --> 00:45:08.040
But I think that that's the thing is like, no, I'm not typing Git commit dash M insert my message.

00:45:08.040 --> 00:45:10.200
And then all the files that I want to commit.

00:45:10.200 --> 00:45:16.880
I'm often just doing Git add dot GCam for Git commit add message all.

00:45:16.880 --> 00:45:18.420
And then whatever my message is.

00:45:18.520 --> 00:45:21.620
But at least I understand what those commands are doing.

00:45:21.620 --> 00:45:23.040
So that down the road.

00:45:23.040 --> 00:45:24.700
And to be fair, I do understand it.

00:45:24.700 --> 00:45:24.880
Yeah.

00:45:24.880 --> 00:45:29.840
And to be fair, sometimes the tools like you're also giving access to your repo.

00:45:29.840 --> 00:45:33.820
Like, I mean, it's cool if you're using like GitHub and everything's public.

00:45:33.820 --> 00:45:40.380
But like, you're also adding a layer of opening to another company.

00:45:40.380 --> 00:45:40.860
Yeah.

00:45:40.860 --> 00:45:47.840
And I would be hesitant to say that there's no company out there that's not going to be vulnerable

00:45:47.840 --> 00:45:49.140
to some type of attack.

00:45:49.140 --> 00:45:53.340
And then you got to revoke access to your repos and things like that.

00:45:53.340 --> 00:45:59.380
Because again, in order for these UIs to work, you're giving it a lot of access to what you're

00:45:59.380 --> 00:45:59.620
doing.

00:45:59.620 --> 00:46:04.560
So again, some of them, I think, I think source tree mostly just work.

00:46:04.560 --> 00:46:07.540
Like you can just drag a folder onto it and it'll start to do its thing.

00:46:07.720 --> 00:46:12.480
Whereas there's other ones where you're like, oh, off, you know, all the, oh, I'll sign

00:46:12.480 --> 00:46:14.660
it into GitHub or get lab or something.

00:46:14.660 --> 00:46:15.100
Yeah.

00:46:15.100 --> 00:46:15.680
All right.

00:46:15.680 --> 00:46:18.420
I'm going to, I'm going to let Anthony from the audience have the fun word here.

00:46:18.420 --> 00:46:20.020
Don't roll over source tree.

00:46:20.020 --> 00:46:20.500
Yeah.

00:46:20.500 --> 00:46:21.440
Not at all.

00:46:21.440 --> 00:46:21.920
Not at all.

00:46:21.920 --> 00:46:23.300
Like you use the tools.

00:46:23.300 --> 00:46:24.600
I think tower is great.

00:46:24.600 --> 00:46:26.040
I think the GitHub UI is great.

00:46:26.040 --> 00:46:27.360
I've never actually used source tree.

00:46:27.360 --> 00:46:28.240
I'm sure it's fine.

00:46:28.240 --> 00:46:31.440
I would say source tree is the one that hides the least.

00:46:31.440 --> 00:46:32.400
It's there to help you.

00:46:32.400 --> 00:46:35.840
And there's UI, but like, it's actually pretty complicated in what it does.

00:46:36.060 --> 00:46:37.520
And I don't mean that necessarily in a bad way.

00:46:37.520 --> 00:46:40.960
Like it's, it's not hiding everything behind pseudo actions.

00:46:40.960 --> 00:46:41.460
Yeah.

00:46:41.460 --> 00:46:43.160
And I'll also throw out there.

00:46:43.160 --> 00:46:48.860
I am probably not the best, you know, subject test case for this because most of the project

00:46:48.860 --> 00:46:54.860
that projects that I work on, it's just me or it's me and like one or two other people.

00:46:54.860 --> 00:46:56.920
So it's easy to follow that tree.

00:46:56.920 --> 00:47:01.700
If you've got 50 people working on a thing and you need to be able to trace back and forth

00:47:01.700 --> 00:47:02.260
what's happening.

00:47:02.260 --> 00:47:04.600
I totally get using a tool to help with that.

00:47:04.600 --> 00:47:05.100
Yeah.

00:47:05.340 --> 00:47:12.520
If you find yourself over here in the SKCD world where you start out writing beautiful,

00:47:12.520 --> 00:47:16.900
beautiful code, like created main loop and timing control, enable config parts.

00:47:16.900 --> 00:47:21.300
And at the end, you'd find yourself just eight A's, A-F-D-K-F-S-G.

00:47:21.300 --> 00:47:22.460
My hands are typing worse.

00:47:22.460 --> 00:47:23.040
Hands.

00:47:23.040 --> 00:47:24.040
Yeah.

00:47:24.040 --> 00:47:25.500
You're kind of breaking down there.

00:47:25.500 --> 00:47:26.060
All right.

00:47:26.060 --> 00:47:29.120
So I reset this on active.

00:47:29.120 --> 00:47:32.060
Where did they get access to my get commit messages?

00:47:32.060 --> 00:47:32.740
Exactly.

00:47:32.740 --> 00:47:33.520
How did they do that?

00:47:34.520 --> 00:47:34.920
All right.

00:47:34.920 --> 00:47:38.820
There's also GitHub desktop, which I reckon is kind of neat.

00:47:38.820 --> 00:47:42.700
I would say the other area that I just point out really quick is a lot of the tools we have

00:47:42.700 --> 00:47:44.460
already have built in awesome Git stuff.

00:47:44.460 --> 00:47:46.800
Like PyCharm has fantastic Git integration.

00:47:47.080 --> 00:47:49.420
And so does VS Code with like Git lens and stuff.

00:47:49.420 --> 00:47:52.940
So you might already have a UI for it if you just press the button.

00:47:52.940 --> 00:47:53.440
You know what I mean?

00:47:53.440 --> 00:47:54.000
All right.

00:47:54.000 --> 00:47:59.780
Keeping along with Git, if you've got a Git repo that you've forked, something that's always

00:47:59.780 --> 00:48:05.140
driven me crazy is like, I've got to go and there's a series of events I got to do on the

00:48:05.140 --> 00:48:07.900
terminal, like add a remote origin.

00:48:08.260 --> 00:48:19.120
And then I can earn upstream origin and then I can do some commands to pull the upstream origin and merge it back into my main branch and so on.

00:48:19.120 --> 00:48:22.700
And so GitHub added a button that just says, have you forked this?

00:48:22.700 --> 00:48:23.680
Oh, look, there are changes.

00:48:23.680 --> 00:48:25.300
Press this button to make them the same.

00:48:25.300 --> 00:48:28.320
I love this fetch upstream and fetch and merge.

00:48:28.320 --> 00:48:29.360
This is awesome.

00:48:29.360 --> 00:48:40.560
I really want to give a shout out to like a lot of the features that Git has added recently that like every time I go in there and like I see something, I'm like, oh, this is nice.

00:48:40.560 --> 00:48:42.340
Yeah, GitHub is coming along.

00:48:42.340 --> 00:48:46.220
Yeah, there was concern about what would happen to it and Microsoft bought it.

00:48:46.220 --> 00:48:47.300
I think it's only gotten better.

00:48:47.300 --> 00:48:52.540
Yeah, I think because, you know, I'm such a professional open source contributor.

00:48:52.540 --> 00:49:06.020
There was a misspelling in a read me and I wanted to lift, tilt my glasses up my brim and go, well, actually, you swapped the T and the H and without.

00:49:06.020 --> 00:49:07.180
Yeah.

00:49:07.180 --> 00:49:10.020
And you're like, and by the way, I am a contributor to Django now.

00:49:10.020 --> 00:49:10.600
Exactly.

00:49:10.600 --> 00:49:17.960
And like just the process of doing all of those things can sometimes be more when it's like this is a simple fix.

00:49:18.320 --> 00:49:22.400
And like in your mind, you're like, now I got to go do this thing.

00:49:22.400 --> 00:49:23.780
I need to fork the code base.

00:49:23.780 --> 00:49:24.980
I need to go and do all this stuff.

00:49:24.980 --> 00:49:28.120
And like I literally did everything just in the browser.

00:49:28.120 --> 00:49:31.020
And then it was like, hey, do you want to sync this?

00:49:31.020 --> 00:49:34.840
Or, hey, do you want to create a new, you know, do you want to put this on the branch?

00:49:34.840 --> 00:49:35.900
Do you want to do a new thing?

00:49:35.900 --> 00:49:37.100
How do you want the PR to look?

00:49:37.100 --> 00:49:39.320
Hey, they accepted your PR.

00:49:39.320 --> 00:49:41.220
Do you want to go ahead and delete this?

00:49:41.220 --> 00:49:45.320
And it's like all this maintenance stuff that I am bad at doing.

00:49:45.560 --> 00:49:49.780
I am glad that GitHub will be like, hey, it looks like you merged a PR.

00:49:49.780 --> 00:49:55.840
I mean, to me, Microsoft just clippified GitHub and made it easier for me to do what I do.

00:49:55.840 --> 00:49:57.060
Good afternoon, Jay.

00:49:57.060 --> 00:49:59.700
Are you trying to write a letter or merge a PR?

00:49:59.700 --> 00:50:02.220
It looks like you're trying to rebase.

00:50:02.220 --> 00:50:03.460
Would you like some help with that?

00:50:03.460 --> 00:50:04.400
Exactly.

00:50:04.400 --> 00:50:05.200
Wait a minute.

00:50:05.200 --> 00:50:06.220
First, why are you rebasing?

00:50:06.220 --> 00:50:07.280
All right.

00:50:07.280 --> 00:50:08.660
So I love this.

00:50:08.660 --> 00:50:10.280
This is like a single button click.

00:50:10.280 --> 00:50:11.800
It solves a lot of the problems.

00:50:11.800 --> 00:50:12.900
Really nice.

00:50:12.940 --> 00:50:14.860
Because keeping your forks in sync have been a problem.

00:50:14.860 --> 00:50:19.140
What I would love to do is just say yes and do this every day and don't tell me about it ever again.

00:50:19.140 --> 00:50:20.280
Just make it happen.

00:50:20.280 --> 00:50:21.840
Make it as if they're committing a line.

00:50:21.840 --> 00:50:23.620
It depends on what I'm working on.

00:50:23.620 --> 00:50:25.620
But there's a lot I would be happy to do that on.

00:50:25.620 --> 00:50:26.180
Yeah.

00:50:26.180 --> 00:50:30.160
I think as long as I maybe give me like a deadline.

00:50:30.160 --> 00:50:34.740
Give me like, hey, we're going to auto merge this in after like five days.

00:50:34.740 --> 00:50:38.020
You know, at least that way you can get the messages of like, hey, we broke this thing.

00:50:38.020 --> 00:50:38.660
Don't do it.

00:50:38.660 --> 00:50:39.180
Don't do it.

00:50:39.180 --> 00:50:39.820
Yeah, sure.

00:50:39.820 --> 00:50:43.600
So for me, there's like two reasons I'll fork a repo.

00:50:43.600 --> 00:50:46.680
One is because I really love it and I want to contribute to or explore.

00:50:46.680 --> 00:50:53.080
The other is just I really want a personal copy of this thing that I can control just because I depend on this so much.

00:50:53.080 --> 00:50:54.500
I want a copy of it.

00:50:54.500 --> 00:50:56.800
And for those, just keep it in sync.

00:50:56.800 --> 00:50:58.940
You know, I can always go back to the version before.

00:50:58.940 --> 00:51:04.280
I was wondering, like, how many like were you doing this for like dependency management?

00:51:04.280 --> 00:51:09.240
But I don't know if I I don't know how much I'm doing that.

00:51:09.240 --> 00:51:14.360
I'm not really forking someone else's code and then like bundling it in with my projects.

00:51:14.360 --> 00:51:20.340
But I mean, there I'm never going to say never because that's the one time you need to go and do that.

00:51:20.340 --> 00:51:20.800
Yeah.

00:51:20.800 --> 00:51:21.540
Yeah, for sure.

00:51:21.540 --> 00:51:22.100
All right.

00:51:22.100 --> 00:51:27.340
Well, so glad that we're I mean, we're only partway into like we're on halfway through now.

00:51:27.600 --> 00:51:30.380
And we're just barely into the podcast.

00:51:30.380 --> 00:51:31.000
So it'll be fine.

00:51:31.000 --> 00:51:35.440
Oh, I mean, some of some of these I am just like, I agree next.

00:51:35.440 --> 00:51:37.840
Like, yeah, this one's perfect.

00:51:37.840 --> 00:51:46.400
If you're not using Let's Encrypt and like you're not a company that buys their own certificates and other things like just just use Let's Encrypt.

00:51:46.400 --> 00:51:46.700
Yeah.

00:51:46.700 --> 00:51:49.420
And it is so simple.

00:51:49.420 --> 00:51:52.960
I I would say getting a certificate is kind of a challenge.

00:51:52.960 --> 00:51:58.440
I remember being on the phone with a certificate company and having to verify the identity.

00:51:58.440 --> 00:52:00.620
Where's the office and what do you do there?

00:52:00.620 --> 00:52:02.740
Maybe we'll give you an SSL certificate.

00:52:02.740 --> 00:52:07.140
It might have been one of those enhanced ones or something that didn't really matter, but they thought it would matter.

00:52:07.140 --> 00:52:08.780
And it was just such a hassle.

00:52:08.780 --> 00:52:15.240
And then, oh, my goodness, if you've got to renew that thing and you don't remember the details or the person who originally got it is gone.

00:52:15.240 --> 00:52:17.560
What what a hassle.

00:52:17.560 --> 00:52:17.860
Right.

00:52:17.860 --> 00:52:22.800
And so one of the benefits of Let's Encrypt is not just you get an SSL certificate, TLS certificate.

00:52:22.800 --> 00:52:27.880
You also get them automatically renewed behind the scenes without you doing anything.

00:52:27.880 --> 00:52:28.420
That's beautiful.

00:52:28.560 --> 00:52:32.660
And this is I mean, again, this is a plus one for those platforms as a service.

00:52:32.660 --> 00:52:35.740
I know like Jamstack and all this other stuff.

00:52:35.740 --> 00:52:37.780
People are like, I don't want to have time to deal with that.

00:52:37.780 --> 00:52:43.880
The fact that I can just commit to GitHub or, you know, push my push my repo up to GitHub.

00:52:43.880 --> 00:52:50.240
And then from there, I know my website's done and I don't have to worry about the sort of like certificate renewals and everything else.

00:52:50.400 --> 00:52:57.000
I will always go that route, but I do have servers that I run for like, hey, I want to show you what it looks like to run the server.

00:52:57.000 --> 00:53:01.060
Let's Encrypt is absolutely like the first step in that process.

00:53:01.060 --> 00:53:03.280
Like, OK, let's make sure this is good to go.

00:53:03.280 --> 00:53:07.400
And I always imagine this would be kind of complicated until I actually saw the steps.

00:53:07.400 --> 00:53:19.580
The steps are apt install software properties common apt add apt repository universe apt update and then just apt install certbot Python 3 certbot Nginx.

00:53:20.080 --> 00:53:21.680
And then just run certbot Nginx.

00:53:21.680 --> 00:53:22.580
That's it.

00:53:22.580 --> 00:53:25.120
That's then say yes to the prompts.

00:53:25.120 --> 00:53:25.980
You know what I mean?

00:53:25.980 --> 00:53:26.680
That's it.

00:53:26.680 --> 00:53:27.060
Yeah.

00:53:27.060 --> 00:53:29.440
It's really, really not that intimidating.

00:53:29.440 --> 00:53:31.240
So people should absolutely be using it.

00:53:31.240 --> 00:53:34.920
And the audience, RJL, Robert says, hey, don't forget about FlaskCon in a couple of weeks.

00:53:34.920 --> 00:53:35.740
Michael will be speaking.

00:53:35.740 --> 00:53:36.560
I will indeed.

00:53:36.560 --> 00:53:37.560
That'll be super fun.

00:53:37.560 --> 00:53:39.060
And he agrees with us.

00:53:39.060 --> 00:53:41.420
I'm also speaking at FlaskCon.

00:53:41.420 --> 00:53:42.360
You're speaking at FlaskCon?

00:53:42.360 --> 00:53:43.180
I had no idea.

00:53:43.180 --> 00:53:43.520
Awesome.

00:53:43.520 --> 00:53:44.900
We didn't even get a chance to connect.

00:53:44.900 --> 00:53:45.600
What is your talk on?

00:53:45.600 --> 00:53:55.100
My talk is on utilizing the Google Maps auto complete API to do location based searching with Elasticsearch.

00:53:55.100 --> 00:53:56.000
That's awesome.

00:53:56.000 --> 00:53:59.840
And I'm demoing it in my college board clone.

00:54:00.080 --> 00:54:05.600
So anybody that's, you know, in high school getting ready to go to college and wants to know how much student loan debt you're going to go into.

00:54:05.600 --> 00:54:06.500
Yeah.

00:54:06.500 --> 00:54:07.280
Check out my talk.

00:54:07.280 --> 00:54:08.000
There you go.

00:54:08.000 --> 00:54:08.220
Awesome.

00:54:08.220 --> 00:54:09.480
No, congratulations on being there.

00:54:09.480 --> 00:54:13.000
You could run in Grok and let the audience interact with it.

00:54:13.000 --> 00:54:15.800
That's why I said I was going to test this as soon as we're done here.

00:54:15.800 --> 00:54:17.000
Nice.

00:54:17.000 --> 00:54:17.160
Yeah.

00:54:17.160 --> 00:54:19.780
I'm doing Flask plus HTMX stuff.

00:54:19.780 --> 00:54:20.620
I'm a big fan of that.

00:54:20.620 --> 00:54:21.960
And it's not even on my list of my suggestions.

00:54:22.420 --> 00:54:22.640
All right.

00:54:22.640 --> 00:54:27.320
Here's another one I find really challenging is testing web maps.

00:54:27.320 --> 00:54:31.540
And yes, you should write very focused tests like, oh, here's the e-commerce section.

00:54:31.540 --> 00:54:38.160
And this is what the price is when I set a discount code and I'm not logged in and I tried to purchase it.

00:54:38.160 --> 00:54:46.920
But sometimes you want to know, will the thing just catch on fire and 500 or will it actually work if I put it, if I were to push this to production?

00:54:47.360 --> 00:55:02.220
So this recommendation is that if you have a sitemap and most sites do, one of your tests can be just request all the pages and see if they 500 or 404 or if they return something that looks like a response like 200, 201, 302, something like that.

00:55:02.220 --> 00:55:04.100
I'm trying to remember what it was called.

00:55:04.100 --> 00:55:08.380
I think it was like pytest Request or something like that that does something similar.

00:55:08.380 --> 00:55:11.260
But I love the idea of using sitemaps.

00:55:11.260 --> 00:55:13.980
I'm going to do a shameless plug.

00:55:14.260 --> 00:55:25.120
One of the things that we started doing with our search platform is adding a crawler that you can tell it to just go and, you know, brute force all of the links on your site and make sure they're good.

00:55:25.120 --> 00:55:29.120
But you're going to miss something like you will miss something that way.

00:55:29.120 --> 00:55:31.560
But you can also just add a sitemap.

00:55:31.560 --> 00:55:33.780
So sitemaps are a great tool.

00:55:33.780 --> 00:55:38.520
And it's one of those things that like a lot of like I don't think Flask does it by default.

00:55:38.520 --> 00:55:39.800
Django doesn't do it by default.

00:55:39.800 --> 00:55:46.220
But there's usually a very simple way to add a sitemap to those applications.

00:55:46.220 --> 00:55:52.060
And I think if anything, this is just another reason to implement sitemaps.

00:55:52.060 --> 00:55:55.000
Also, search engines do like sitemaps.

00:55:55.000 --> 00:55:59.620
So if you want to get another bump in the SEO ranking, this is the way to do it.

00:55:59.620 --> 00:56:00.540
Yeah, absolutely.

00:56:00.540 --> 00:56:01.300
Super easy.

00:56:01.300 --> 00:56:04.840
It's not a lot of work for the relative benefit you get.

00:56:04.900 --> 00:56:09.040
John out in the audience says, Ingrok sounds similar to Cloudflare tunnels, which are also free.

00:56:09.040 --> 00:56:09.900
That's awesome.

00:56:09.900 --> 00:56:13.320
I have no idea what Cloudflare tunnels are, but it's a good recommendation.

00:56:13.320 --> 00:56:14.220
People can check that out.

00:56:14.220 --> 00:56:14.880
So thanks, John.

00:56:14.880 --> 00:56:15.720
I'm going to add that to the list.

00:56:15.720 --> 00:56:16.560
Right on.

00:56:16.560 --> 00:56:17.140
All right.

00:56:17.140 --> 00:56:18.880
Here's actually the code I put up there.

00:56:18.880 --> 00:56:25.840
Like it literally is 15 lines of code or something to do the sitemap test, which is pretty straightforward.

00:56:25.840 --> 00:56:29.240
Another one, you're talking about the SEO aspect.

00:56:29.500 --> 00:56:39.800
Google's been paying attention to how fast your site responds and not just what is the server response, but how long does it take to get all the JavaScript and parse it and run it?

00:56:39.800 --> 00:56:45.420
How long does it take to read the HTML and then get the images and resize them and all kinds of stuff?

00:56:45.420 --> 00:56:55.480
So there's a place called PageSpeed Insights by Google, which you can just go put any web page, your root page or some sub page in there.

00:56:55.480 --> 00:57:00.980
And it'll give you not just what they think your speed is, but what their recommendations are.

00:57:00.980 --> 00:57:06.620
Like your image is too large here on wimpy processors like phones.

00:57:06.620 --> 00:57:08.820
It's going to slow down the page load.

00:57:08.820 --> 00:57:10.040
So you should resize.

00:57:10.040 --> 00:57:13.220
Like you're saying 300 in your CSS, but the image is a thousand.

00:57:13.220 --> 00:57:14.060
Just make it 300.

00:57:15.060 --> 00:57:17.160
I'm right in the orange on my site.

00:57:17.160 --> 00:57:19.220
So I got, I got, I'm at the high.

00:57:19.220 --> 00:57:20.680
I'm like right underneath green.

00:57:20.680 --> 00:57:23.160
So I got some changes I can do.

00:57:23.160 --> 00:57:30.460
But I, one of the things that I thought about this and I love the idea and I absolutely agree with it 100%.

00:57:30.460 --> 00:57:33.940
One, if you're doing static, static tends to be faster.

00:57:33.940 --> 00:57:35.580
I'm just going to throw that in there.

00:57:35.580 --> 00:57:37.820
But, cause I love static sites.

00:57:37.820 --> 00:57:40.480
But it's not as easy of a fix as you would think.

00:57:40.480 --> 00:57:43.660
There's still a lot of problems you can have with a static page.

00:57:43.660 --> 00:57:44.420
Yeah.

00:57:44.700 --> 00:57:53.820
And, and actually one of the things that I wanted to add onto that, speaking of like scores and ranking is the idea of accessibility scores and ranking as well.

00:57:53.820 --> 00:57:56.420
We've all, we don't want to be dominoes.

00:57:56.420 --> 00:58:00.560
We don't, we don't want to be the company that gets sued for not having, you know, good accessibility.

00:58:00.560 --> 00:58:04.020
Luckily, I don't think anyone here is, you know, building stuff like that.

00:58:04.080 --> 00:58:05.080
And if you are high, welcome.

00:58:05.080 --> 00:58:06.780
I'd love to chat sometime.

00:58:06.780 --> 00:58:10.960
But I do think that it's important to be good stewards in the community.

00:58:10.960 --> 00:58:14.180
That's, that's something that I think is, is really great.

00:58:14.260 --> 00:58:18.580
And if your site isn't accessible, like you're, you're cutting off a lot of people.

00:58:18.580 --> 00:58:21.940
And, you know, a lot of people are like, well, you know, it's hard to do this.

00:58:21.940 --> 00:58:23.360
And, you know, what, what else can I do?

00:58:23.360 --> 00:58:25.260
There are a lot of great tools out there.

00:58:25.260 --> 00:58:32.240
The one that I'm going to promote is wave, which is the wave web accessibility tool.

00:58:32.240 --> 00:58:34.640
And it gives you a bunch of different things.

00:58:34.640 --> 00:58:41.520
It even does its own evaluation and you can use it to say how accessible is my website?

00:58:41.520 --> 00:58:42.400
Yeah, that's cool.

00:58:42.400 --> 00:58:43.000
Definitely.

00:58:43.000 --> 00:58:44.160
People should check that out.

00:58:44.160 --> 00:58:45.800
This is important.

00:58:45.800 --> 00:58:47.420
I think it might even be legally required.

00:58:47.420 --> 00:58:51.660
And then also page speed is starting to be used for actual ranking as well.

00:58:51.660 --> 00:58:53.440
So we'll should consider that.

00:58:53.440 --> 00:58:54.080
All right.

00:58:54.660 --> 00:58:59.080
Here's an interesting one, which I don't know how you feel about this, but I find if I set

00:58:59.080 --> 00:59:05.180
up a server and the server's job is to run a website or an API and I log into it, there

00:59:05.180 --> 00:59:11.920
is about a half of 1% chance that I want to change details about the service of the system

00:59:11.920 --> 00:59:12.260
Python.

00:59:12.260 --> 00:59:19.260
There's a 99.5% chance that anything I need to change is with packages or details or commands

00:59:19.260 --> 00:59:21.760
involving the service I set up.

00:59:21.760 --> 00:59:23.840
And I found I was always, I would log in there.

00:59:23.900 --> 00:59:25.200
I'm like, okay, well, where's the virtual environment?

00:59:25.200 --> 00:59:26.420
I got to activate this thing.

00:59:26.420 --> 00:59:32.500
And now I can issue the pip install this new thing or, or do some other command that I needed

00:59:32.500 --> 00:59:33.300
to do on the server.

00:59:33.300 --> 00:59:35.860
And then it occurred to me, like, why do I do this every time?

00:59:35.860 --> 00:59:42.560
Why don't I just set my ZS HRC to say the last thing is to source activate the virtual

00:59:42.560 --> 00:59:42.880
environment.

00:59:42.880 --> 00:59:46.760
So now when my servers, when I log in, at least the ones that are web servers, it automatically

00:59:46.760 --> 00:59:49.400
activates the virtual environment that runs the web app.

00:59:49.400 --> 00:59:51.640
So are you familiar with DIRENV?

00:59:51.640 --> 00:59:52.660
D-I-R-E-N-V?

00:59:52.660 --> 00:59:53.420
Yes.

00:59:53.420 --> 00:59:56.980
So to me, my solution here is DIRENV.

00:59:56.980 --> 00:59:58.360
For those that don't know.

00:59:58.360 --> 00:59:58.980
Tell people what this is.

00:59:58.980 --> 00:59:59.140
Yeah.

00:59:59.140 --> 00:59:59.460
Yeah.

00:59:59.580 --> 01:00:07.360
So DIRENV is this way to load an environment in based on the path that you're in.

01:00:07.360 --> 01:00:13.800
And in most cases, this works for just environment variables, which I mean, I love.

01:00:13.800 --> 01:00:16.580
It means I don't have to put stuff in open source.

01:00:16.580 --> 01:00:18.180
I don't have to risk putting a password in there.

01:00:18.240 --> 01:00:22.260
I can just point to an environment variable, load that stuff in, and then know that if

01:00:22.260 --> 01:00:26.840
I'm actually in that folder, then the variables are loaded properly.

01:00:26.840 --> 01:00:27.420
Right.

01:00:27.420 --> 01:00:27.760
Exactly.

01:00:27.760 --> 01:00:32.800
If you're in the folder that contains the somewhere above it contains the virtual environment,

01:00:32.800 --> 01:00:33.480
it's going to use that.

01:00:33.480 --> 01:00:34.260
Exactly.

01:00:34.260 --> 01:00:39.780
And the thing that's really cool about this is there's another tool called ASDF that uses

01:00:39.780 --> 01:00:45.880
something similar to PyEnvironment or PyE and V that you can put into your environment

01:00:45.880 --> 01:00:50.020
variables to say layout Python and the Python version.

01:00:50.020 --> 01:00:56.660
And it creates a virtual environment the same way that when you load into that directory, you're

01:00:56.660 --> 01:01:01.760
loading into a virtual environment that you can control the actual version of Python that

01:01:01.760 --> 01:01:02.360
you want to run.

01:01:02.360 --> 01:01:05.140
And that works for both pip and the Python environment.

01:01:05.520 --> 01:01:12.660
So when it's like calling PyE and V every time you you change directories into a certain

01:01:12.660 --> 01:01:13.920
path.

01:01:13.920 --> 01:01:16.560
And to me, like this is the new way of doing it.

01:01:16.560 --> 01:01:22.320
When Python 310 came out, all I had to do when I wanted to test for 310 was change my

01:01:22.320 --> 01:01:28.600
ENV RC to say layout Python 3.9.1 to 3.10.0.

01:01:28.600 --> 01:01:31.040
And from there, that was it.

01:01:31.040 --> 01:01:34.060
I CD'd out of it, CD'd back in, it created a new environment.

01:01:34.260 --> 01:01:36.560
I reloaded my requirements and I was off to the races.

01:01:36.560 --> 01:01:37.460
That's pretty awesome.

01:01:37.460 --> 01:01:37.780
Yeah.

01:01:37.780 --> 01:01:38.280
Yeah.

01:01:38.280 --> 01:01:38.620
Very cool.

01:01:38.620 --> 01:01:39.080
Yeah.

01:01:39.080 --> 01:01:40.140
I think that's good as well.

01:01:40.140 --> 01:01:45.280
For I would definitely lean heavy on that for the dev side for the servers.

01:01:45.280 --> 01:01:48.060
I'm like, I might not log into the location I want to be in.

01:01:48.060 --> 01:01:51.240
I just, it depends on if I have a bunch of services running there, just one.

01:01:51.240 --> 01:01:53.100
But yeah, those are good recommendations for sure.

01:01:53.100 --> 01:01:56.400
Especially like I said, on the dev side where you're doing lots of different projects.

01:01:56.400 --> 01:01:57.300
All right.

01:01:58.780 --> 01:02:03.000
Last one is dependencies and there's all sorts of dependency stuff going on here.

01:02:03.000 --> 01:02:04.180
So there's levels.

01:02:04.180 --> 01:02:06.220
So you can pip install some package.

01:02:06.220 --> 01:02:08.780
Like I could pip install Pyramid that would install Pyramid.

01:02:08.780 --> 01:02:10.940
It'll get me the latest one.

01:02:10.940 --> 01:02:11.720
Unless I already have it.

01:02:11.720 --> 01:02:12.640
Then it says you already have it.

01:02:12.640 --> 01:02:13.160
So you're good.

01:02:13.160 --> 01:02:14.620
Even if there's a newer version.

01:02:14.620 --> 01:02:15.400
It's cool.

01:02:15.400 --> 01:02:19.240
So you just do --upgrade and you get a new one, right?

01:02:19.240 --> 01:02:22.840
But Pyramid might install Chameleon and my Chameleon might be out of date.

01:02:22.840 --> 01:02:28.480
But this pip install Pyramid --upgrade doesn't upgrade my Chameleon, right?

01:02:28.480 --> 01:02:33.560
It doesn't upgrade the transitive closure of all the dependencies, which is a hassle.

01:02:33.560 --> 01:02:36.800
And then, you know, you got to remember to run these commands.

01:02:36.800 --> 01:02:40.900
What if there's like a security vulnerability that I just got a notification a couple of days

01:02:40.900 --> 01:02:41.120
ago.

01:02:41.120 --> 01:02:44.840
There was some security vulnerability and not something I'm using, but something that I'm

01:02:44.840 --> 01:02:46.540
using is using, right?

01:02:46.540 --> 01:02:47.200
Very indirect.

01:02:47.200 --> 01:02:51.260
So there's all these challenges, I think, around dependencies.

01:02:51.880 --> 01:02:54.220
You talked about GitHub having cool features.

01:02:54.220 --> 01:03:01.600
If you pin a version in your pyproject.toml or your requirements.txt and there's a security

01:03:01.600 --> 01:03:02.560
problem, right?

01:03:02.560 --> 01:03:08.100
If I say I'm using flask 0.1 and there's a security vulnerability that was fixed in flask

01:03:08.100 --> 01:03:12.700
to get up will automatically create a PR for me and say, there's a problem except this PR

01:03:12.700 --> 01:03:13.120
to fix it.

01:03:13.120 --> 01:03:13.580
Right?

01:03:13.580 --> 01:03:14.320
That's pretty cool.

01:03:14.320 --> 01:03:14.560
Right?

01:03:14.560 --> 01:03:20.920
So one of the questions I had with this was, does pip-tools solve this second problem

01:03:20.920 --> 01:03:25.880
of like doing upgrade, but then it only upgrades like the top level and none of the stuff below.

01:03:25.880 --> 01:03:26.720
Yes.

01:03:26.720 --> 01:03:31.800
And that is my current solution is I'm using pip-tools.

01:03:31.800 --> 01:03:35.040
And I think the command is actually pip compile in there.

01:03:35.040 --> 01:03:35.460
I don't remember.

01:03:35.460 --> 01:03:36.940
I've aliased it away.

01:03:36.940 --> 01:03:38.520
So it's like gone from my mind.

01:03:38.520 --> 01:03:40.160
Like I just type pip, pip.

01:03:40.160 --> 01:03:42.860
I think it is pip compile update all or something like that.

01:03:42.860 --> 01:03:46.620
It's pip compile --upgrade.

01:03:46.920 --> 01:03:53.000
I do the same thing except for I never thought to just alias the whole pip compile upgrade

01:03:53.000 --> 01:03:54.300
plus pip sync.

01:03:54.300 --> 01:03:55.320
Like that makes sense.

01:03:55.320 --> 01:03:55.700
Exactly.

01:03:55.700 --> 01:03:56.080
Yeah.

01:03:56.080 --> 01:03:57.280
I've aliased these things away.

01:03:57.280 --> 01:04:02.580
They're all down to like, like pip install -r requirements dash dev .txt is just

01:04:02.580 --> 01:04:03.960
PIR, PIRD.

01:04:03.960 --> 01:04:05.620
If you want to without the dev, he's PIR.

01:04:05.760 --> 01:04:07.160
Like I'm all about the aliases.

01:04:07.160 --> 01:04:10.720
My, my Neo Vim, because I could never remember N V I M.

01:04:10.720 --> 01:04:11.680
I just do V V I.

01:04:11.680 --> 01:04:12.380
Yeah.

01:04:12.380 --> 01:04:12.840
Nice.

01:04:12.840 --> 01:04:13.800
Exactly.

01:04:13.800 --> 01:04:19.580
So, the pip-tools is my current recommendation because what you do is you create a requirements

01:04:19.580 --> 01:04:24.420
dot I N and you put the things you would have pip installed yourself, like pip install flask,

01:04:24.420 --> 01:04:28.580
pip install SQLAlchemy, not their dependencies, just the things you want.

01:04:29.120 --> 01:04:32.780
And then when you run the command that you talked about, it'll create the requirements

01:04:32.780 --> 01:04:39.220
dot txt with the closure of all of the dependencies and actually on dent them showing why they're

01:04:39.220 --> 01:04:39.720
in there.

01:04:39.720 --> 01:04:41.720
Like blast depends on it's dangerous.

01:04:41.720 --> 01:04:44.120
So like it would put that in there and it would be clear.

01:04:44.120 --> 01:04:47.820
This is a dependency of flask and it pins the versions of all of them.

01:04:47.880 --> 01:04:53.180
And then at first say it drops the it's dangerous requirement and you rerun this again, like

01:04:53.180 --> 01:04:56.340
that'll come out of your txt file entirely, which is also nice.

01:04:56.340 --> 01:04:58.340
So there's, I think this is fantastic.

01:04:58.340 --> 01:04:59.960
You, it sounds like you're using it as well.

01:04:59.960 --> 01:05:00.400
Yeah.

01:05:00.400 --> 01:05:06.620
That's, I mean, that's part of my default setup of, of any new project is install, you know,

01:05:06.620 --> 01:05:07.340
pip-tools.

01:05:07.340 --> 01:05:12.420
And then from there build my requirements dot I N and then immediately compile and upgrade.

01:05:12.420 --> 01:05:12.960
Yeah.

01:05:12.960 --> 01:05:13.480
Yeah.

01:05:13.480 --> 01:05:13.960
Awesome.

01:05:13.960 --> 01:05:16.640
Also package managers for the OS, like homebrew.

01:05:16.820 --> 01:05:18.360
I use homebrew on my macOS.

01:05:18.360 --> 01:05:20.380
I know there's other things to use, but that works well.

01:05:20.380 --> 01:05:24.900
Windows has chocolatey, which I think a lot of people on windows are not using a package

01:05:24.900 --> 01:05:25.260
manager.

01:05:25.260 --> 01:05:26.280
And I think chocolatey is awesome.

01:05:26.280 --> 01:05:27.500
You can install Python that way.

01:05:27.500 --> 01:05:31.000
Obviously there's apt and other things on Linux, right?

01:05:31.000 --> 01:05:31.580
Yeah.

01:05:31.580 --> 01:05:33.680
I really like a homebrew.

01:05:33.680 --> 01:05:37.780
I know they were, I think they're now in one there.

01:05:37.780 --> 01:05:38.480
Yeah, they are.

01:05:38.480 --> 01:05:38.860
One ready.

01:05:38.860 --> 01:05:39.180
Okay.

01:05:39.180 --> 01:05:39.380
Good.

01:05:39.380 --> 01:05:43.540
On this computer we're talking on, I got this one in December, 2020.

01:05:43.540 --> 01:05:46.680
It has the Intel homebrew on it, but my new MacBook.

01:05:46.760 --> 01:05:52.180
Pro, I put just the straight up, in the Apple Silicon version on there and it's been

01:05:52.180 --> 01:05:52.980
working fine.

01:05:52.980 --> 01:05:53.780
I haven't had any problems.

01:05:53.780 --> 01:05:54.280
Okay.

01:05:54.280 --> 01:05:54.640
Yeah.

01:05:54.640 --> 01:05:57.220
Homebrew to me, it just makes sense.

01:05:57.220 --> 01:06:00.360
the one thing that I will say is ASDF.

01:06:00.360 --> 01:06:07.740
if you're using that, you're, you don't want to run, you know, Pippin or brew install

01:06:07.740 --> 01:06:12.740
Python because then you have different, they're like your stems and stuff will get all weird.

01:06:12.740 --> 01:06:16.960
so install Python through ASDF.

01:06:16.960 --> 01:06:20.960
If you're using that, but other than that, like, yeah, I think homebrew is, is great.

01:06:21.420 --> 01:06:26.060
and I guess the other bonus to ASDF is you can use that not just for Python, but if

01:06:26.060 --> 01:06:30.980
you're doing like Ruby and you have like RVM or, you know, you need to manage node versions,

01:06:30.980 --> 01:06:34.420
which I hate managing node versions, but you have to do it, I guess.

01:06:34.920 --> 01:06:41.460
that's like, you can do all of those things in that environment control area, you know,

01:06:41.460 --> 01:06:42.340
in VRC.

01:06:42.340 --> 01:06:47.060
and again, with homebrew, it's like, it works, but when it doesn't work, you're just

01:06:47.060 --> 01:06:48.000
like, okay, great.

01:06:48.000 --> 01:06:49.400
Now I need to uninstall this.

01:06:49.400 --> 01:06:51.140
I need to run brew doctor.

01:06:51.140 --> 01:06:53.440
Like, I'm going to format the computer.

01:06:53.440 --> 01:06:55.400
I'm going to, yeah, exactly.

01:06:55.400 --> 01:06:58.280
You just need to just, just reformat your hard drive.

01:06:58.280 --> 01:06:58.860
It's destroyed.

01:06:58.860 --> 01:06:59.460
It's destroyed.

01:06:59.460 --> 01:07:01.320
It won't upgrade Python anymore.

01:07:01.320 --> 01:07:01.760
We're done.

01:07:01.760 --> 01:07:04.860
I've had so many times where just updating Python is like.

01:07:04.860 --> 01:07:07.540
Just giving me time to be like, well, I'm done with this.

01:07:07.540 --> 01:07:08.760
Yeah.

01:07:08.760 --> 01:07:09.320
Yeah.

01:07:09.320 --> 01:07:09.560
All right.

01:07:09.560 --> 01:07:12.180
A couple other things out in the audience.

01:07:12.180 --> 01:07:16.280
Anthony suggests pip depth tree, which will show you kind of that.

01:07:16.280 --> 01:07:19.600
Here's the top level things you installed and what they depend upon, which is great.

01:07:19.600 --> 01:07:20.400
That's really a good one.

01:07:20.400 --> 01:07:23.280
Product fund says pip audit is a cool tool.

01:07:23.280 --> 01:07:28.100
If you want something on security, it's a project by Dustin Ingram, who is associated with

01:07:28.100 --> 01:07:30.480
pypi.org and pypa and stuff, which is awesome.

01:07:30.920 --> 01:07:32.420
One more thing I'll throw out there.

01:07:32.420 --> 01:07:35.900
Pretty new is pip dash or pypi dash changes.

01:07:35.900 --> 01:07:41.040
So this just came out and you type pypi dash changes and you point at the Python, the Python

01:07:41.040 --> 01:07:42.480
executable in a virtual environment.

01:07:42.480 --> 01:07:47.080
And it'll list all the things you've installed, what version they are, how old they were.

01:07:47.080 --> 01:07:48.440
Like, here's a thing I've installed.

01:07:48.440 --> 01:07:49.360
It's 10 years old.

01:07:49.360 --> 01:07:52.460
Maybe I should think of something newer, but also whether or not there's an update.

01:07:52.460 --> 01:07:54.020
So this is a fun one as well.

01:07:54.020 --> 01:07:55.000
That's nice.

01:07:55.000 --> 01:08:00.880
Again, I'm really impressed with a lot of these tools and companies.

01:08:00.880 --> 01:08:06.840
Like, I mean, the fact that Python now has some folks that are dedicated to working on

01:08:06.840 --> 01:08:08.980
these systems and it's what they do.

01:08:08.980 --> 01:08:12.620
I mean, talking about like Lucas and having a developer in residence.

01:08:13.340 --> 01:08:17.740
I think this is the benefit that we see of this is you get these little touches that just

01:08:17.740 --> 01:08:23.860
make each version of Python, not just, you know, more performant, but also nicer to work

01:08:23.860 --> 01:08:25.500
with and nicer to play around with.

01:08:25.500 --> 01:08:25.800
Yeah.

01:08:25.800 --> 01:08:29.800
It gives you joy, not frustration as you work with some of these things for sure.

01:08:29.800 --> 01:08:30.940
All right.

01:08:30.940 --> 01:08:32.160
So those were the 10.

01:08:32.160 --> 01:08:36.940
How about I just throw a real quick thing out there for people as a delightful little

01:08:36.940 --> 01:08:37.520
takeaway.

01:08:37.520 --> 01:08:38.360
Nerd fonts.

01:08:38.360 --> 01:08:39.160
Have you played nerd fonts?

01:08:39.160 --> 01:08:39.940
I haven't.

01:08:39.940 --> 01:08:40.740
What is this?

01:08:40.860 --> 01:08:46.740
So if you want fonts that are good for programming that support font ligatures and for example,

01:08:46.740 --> 01:08:51.620
the Oh My Posh I talked about, they have all sorts of weird like continuation between like

01:08:51.620 --> 01:08:53.860
transitional characters and stuff.

01:08:53.860 --> 01:08:58.820
All those things test against nerd fonts to make sure every nerd font will work well in

01:08:58.820 --> 01:09:00.780
that shell fancy extension.

01:09:00.780 --> 01:09:06.120
So if you go over here to the downloads, you can see there's like a huge scroll bar, but of

01:09:06.120 --> 01:09:11.840
all these different fonts that support font ligatures, nerd fonts, et cetera, et cetera,

01:09:11.840 --> 01:09:12.780
that you get here.

01:09:12.780 --> 01:09:14.720
So, and they all come with a ton of variations.

01:09:14.720 --> 01:09:20.040
So if you want to have a bunch of cool programming fonts, you've got like Neto nerd font looks

01:09:20.040 --> 01:09:20.560
pretty good.

01:09:20.560 --> 01:09:23.640
Pro font nerd font, not a nerd action.

01:09:23.640 --> 01:09:25.660
That is, that is if you support.

01:09:26.660 --> 01:09:29.840
That's if you like ligatures, you can turn them off.

01:09:29.840 --> 01:09:30.780
I mean, you can turn them off, right?

01:09:30.780 --> 01:09:31.800
You can turn them off.

01:09:31.800 --> 01:09:35.380
I was going to say, I don't want to start that, that war of whether or not ligatures or anything.

01:09:35.380 --> 01:09:38.400
I love ligatures, but I don't want to, I don't want to battle that out right now.

01:09:38.400 --> 01:09:43.300
But I went and installed every one of these nerd fonts on my new MacBook.

01:09:43.300 --> 01:09:47.800
It took half an hour longer for that little font book app was like locked up.

01:09:47.800 --> 01:09:53.300
I thought it destroyed my computer, but nope, it just had 2,600 font families to install

01:09:53.300 --> 01:09:53.740
or something.

01:09:53.740 --> 01:09:56.680
I'm glad you don't use Photoshop.

01:09:56.680 --> 01:09:58.600
It probably doesn't like you either.

01:09:58.600 --> 01:09:59.920
Probably not.

01:09:59.920 --> 01:10:01.040
What are all these fonts?

01:10:01.040 --> 01:10:01.940
Exactly.

01:10:01.940 --> 01:10:07.300
No, but if you're looking for good programming fonts, I don't have one over the other to

01:10:07.300 --> 01:10:09.520
recommend, but there are many, many of them here.

01:10:09.520 --> 01:10:10.200
All right.

01:10:10.200 --> 01:10:14.900
And then I see Antonio out there in the audience who is saying, we got to wrap this up with

01:10:14.900 --> 01:10:16.960
a notable PyPI package.

01:10:17.560 --> 01:10:24.400
I mean, I had, I had two that weren't included in the list and that was black and eyesort.

01:10:24.400 --> 01:10:31.700
I'm pretty sure the folks listening know like black is a great formatter for your code.

01:10:31.700 --> 01:10:38.680
If you're like me and pepe is a thing that you want to, you want to understand and believe

01:10:38.680 --> 01:10:42.260
in, but from time to time you're like, but what about this weird scenario?

01:10:42.260 --> 01:10:43.880
I don't think about that anymore.

01:10:43.880 --> 01:10:45.620
I just run black and then I'm done with it.

01:10:46.120 --> 01:10:49.700
You know what I think is the real value that black adds is not necessarily that it does

01:10:49.700 --> 01:10:50.200
the formatting.

01:10:50.200 --> 01:10:54.960
Like I could open a PyCharm, go to the top level of a project, right click and save format

01:10:54.960 --> 01:10:56.160
everything in this directory.

01:10:56.160 --> 01:10:58.100
And it would format it the way I told PyCharm.

01:10:58.100 --> 01:11:00.360
I like it, but it solves the debate.

01:11:00.580 --> 01:11:02.240
It's like, you don't have to debate.

01:11:02.240 --> 01:11:05.480
Is there a space before the comma or after the comma?

01:11:05.480 --> 01:11:08.020
Does it go on one line or does it go on three lines?

01:11:08.020 --> 01:11:09.540
Like black puts it on the lines.

01:11:09.540 --> 01:11:13.320
We've agreed that we're just going to take this and nobody's going to be a hundred percent

01:11:13.320 --> 01:11:15.240
happy, but you're going to be 84% happy.

01:11:15.240 --> 01:11:17.320
And we're just going to stop fighting about the formatting.

01:11:17.780 --> 01:11:23.320
And I sort is the exact same, except for it does this with sorting your imports.

01:11:23.320 --> 01:11:29.260
And I mean, I will say sometimes when I'm writing code, it's messy.

01:11:29.260 --> 01:11:30.160
Thank goodness.

01:11:30.160 --> 01:11:34.560
I have black and I sort to make it not so messy whenever I have to give a talk.

01:11:34.560 --> 01:11:37.240
And then someone goes, is there a repo for this code?

01:11:37.240 --> 01:11:38.880
And I'm like, give me 30 seconds.

01:11:38.880 --> 01:11:39.340
Black.

01:11:39.340 --> 01:11:39.900
I sort.

01:11:40.060 --> 01:11:40.220
Okay.

01:11:40.220 --> 01:11:45.780
Now there is now, now I can, now I'm willing to share this.

01:11:45.780 --> 01:11:46.140
That's right.

01:11:46.140 --> 01:11:47.260
It's not embarrassing anymore.

01:11:47.260 --> 01:11:52.380
Also, John out in the audience says, I was just going to say black and I sort get out of

01:11:52.380 --> 01:11:52.760
my head.

01:11:52.760 --> 01:11:53.160
Jay.

01:11:53.160 --> 01:11:54.220
Oh man.

01:11:54.220 --> 01:12:00.340
Well, other than that, I mean, I, you've talked about rumps so many times.

01:12:00.340 --> 01:12:05.020
I mean, we can, we can, we can play the classics, you know, all the time here.

01:12:05.100 --> 01:12:14.820
I personally, I try to, to not do a lot of installation of stuff, but, if I go to

01:12:14.820 --> 01:12:20.400
some of my projects really quick and just open up, you know, actually, I think I do know one

01:12:20.400 --> 01:12:22.500
and let's see.

01:12:22.500 --> 01:12:24.800
I, I'm trying to remember what it's called.

01:12:24.800 --> 01:12:31.480
yeah, I have an app I built with rumps, Python three and pie to app.

01:12:31.480 --> 01:12:33.580
That's running up in my Mac terminal bar.

01:12:33.580 --> 01:12:38.360
And if I'm really unlucky, it'll get hidden in the notch of my new Mac book.

01:12:38.360 --> 01:12:39.300
Oh no.

01:12:39.300 --> 01:12:41.960
I haven't played with rumps recently.

01:12:41.960 --> 01:12:43.480
I need to do some more with rumps.

01:12:43.480 --> 01:12:44.600
rumps is good.

01:12:44.600 --> 01:12:51.000
Honestly, some of these little dependencies that I add to some of my projects that, I mean,

01:12:51.000 --> 01:12:54.900
I could probably do my own, but also I don't want to like sluggify.

01:12:55.520 --> 01:13:01.660
you know, if you've ever, again, a lot of this is just getting rid of how do I do

01:13:01.660 --> 01:13:01.980
this?

01:13:01.980 --> 01:13:08.960
one of my projects that I just started working on is this idea of we've all done, you

01:13:08.960 --> 01:13:13.360
know, markdown and then you convert it to like a markdown table or, you know, you convert

01:13:13.360 --> 01:13:16.860
it to like HTML and you got to do some stuff with it and then you got to process that HTML.

01:13:17.180 --> 01:13:22.400
But what about doing like markdown to JSON, like where I have a markdown table and I want

01:13:22.400 --> 01:13:25.200
to convert that table into a CSV file or a JSON file.

01:13:25.200 --> 01:13:27.020
So I'm like playing around with this.

01:13:27.020 --> 01:13:32.080
And in my head, I am, I'm like physically pulling my hair out, but I'm also like banging my head

01:13:32.080 --> 01:13:36.900
against the wall going like, Oh, but how do, what's the regular expression for this thing?

01:13:36.900 --> 01:13:40.080
And that's where stuff like validators is absolutely amazing.

01:13:40.080 --> 01:13:41.940
Cause you can just go, is this an email?

01:13:42.060 --> 01:13:43.160
If it is okay, good.

01:13:43.160 --> 01:13:45.900
Run this, you know, is this a properly formed URL?

01:13:45.900 --> 01:13:46.720
It is good.

01:13:46.720 --> 01:13:47.000
Okay.

01:13:47.000 --> 01:13:47.480
Run this.

01:13:47.480 --> 01:13:50.720
Like I don't need to, to rebuild those things.

01:13:50.720 --> 01:13:51.280
Yeah.

01:13:51.280 --> 01:13:51.620
Awesome.

01:13:51.620 --> 01:13:52.120
Yeah.

01:13:52.120 --> 01:13:53.120
A bunch of good recommendations.

01:13:53.120 --> 01:13:54.880
So thanks for being here, Jay.

01:13:54.880 --> 01:13:55.800
This was a lot of fun.

01:13:55.800 --> 01:13:59.540
I, I love just going through a bunch of these little tools because I learned a bunch from

01:13:59.540 --> 01:14:03.300
you and it looks like people, the audience have found a bunch of interesting ones that we

01:14:03.300 --> 01:14:03.960
covered as well.

01:14:03.960 --> 01:14:04.760
I love it.

01:14:04.760 --> 01:14:10.440
I mean, as always, now that I'm a front runner for the golden jacket club of, you know, talk

01:14:10.440 --> 01:14:15.780
Python, I absolutely love coming on and, you know, just now that you got the chat

01:14:15.780 --> 01:14:17.600
here, they're, they're talking about products.

01:14:17.600 --> 01:14:18.280
I'm like, what's that?

01:14:18.280 --> 01:14:19.720
Let me, let me add that to my list.

01:14:19.720 --> 01:14:23.520
And, you know, I get to learn as much as you know, everyone else does.

01:14:23.520 --> 01:14:24.000
Yeah.

01:14:24.000 --> 01:14:24.380
That's awesome.

01:14:24.380 --> 01:14:24.980
Yeah.

01:14:24.980 --> 01:14:27.300
I just want to give a shout out to the YouTube live stream.

01:14:27.300 --> 01:14:31.360
It's been really fun to have so many of you all come and join the streams and give us

01:14:31.360 --> 01:14:32.820
feedback and thoughts during the show.

01:14:32.820 --> 01:14:35.280
I think it lets the audience have a little bit of representation.

01:14:35.280 --> 01:14:37.880
If you want to watch that one, just go to the episode page.

01:14:37.880 --> 01:14:39.280
You can click it right at the top.

01:14:39.280 --> 01:14:39.780
It'll be there.

01:14:40.200 --> 01:14:41.720
Or subscribe to the newsletter.

01:14:41.720 --> 01:14:44.480
there's a link to the YouTube videos.

01:14:44.480 --> 01:14:46.340
Every, every newsletter drop.

01:14:46.340 --> 01:14:47.060
They are in there.

01:14:47.060 --> 01:14:47.460
Absolutely.

01:14:47.460 --> 01:14:48.100
Every time.

01:14:48.100 --> 01:14:48.520
That's awesome.

01:14:48.520 --> 01:14:49.220
All right.

01:14:49.220 --> 01:14:51.400
Robert says, thanks again, J.

01:14:51.400 --> 01:14:51.680
Michael.

01:14:51.680 --> 01:14:52.880
This has been very informative.

01:14:52.880 --> 01:14:54.680
Thank you so much for being here, Robert.

01:14:54.680 --> 01:14:55.220
J.

01:14:55.220 --> 01:14:55.900
Final word.

01:14:55.900 --> 01:14:56.440
Call to action.

01:14:56.440 --> 01:14:57.900
People are psyched about this stuff.

01:14:57.900 --> 01:14:58.560
What will you tell them?

01:14:58.560 --> 01:15:02.060
honestly, just play around with it.

01:15:02.060 --> 01:15:02.700
Have fun.

01:15:02.700 --> 01:15:10.180
be a good steward of the community and absolutely take, take someone that was like me.

01:15:10.180 --> 01:15:11.120
Seven years ago.

01:15:11.120 --> 01:15:15.120
That was like, this Python thing seems hard, but I really like flask.

01:15:15.120 --> 01:15:20.040
So I'm going to keep trying it and just continue to, to pour time and energy into them.

01:15:20.040 --> 01:15:20.560
Trust me.

01:15:20.560 --> 01:15:22.300
It'll, it'll pay off for them in the future.

01:15:22.300 --> 01:15:26.440
And you know, they'll, they'll be sure to thank you with all the drinks that they can.

01:15:26.860 --> 01:15:29.880
And, yeah, if you ever want to get in touch with me, you can do so.

01:15:29.880 --> 01:15:33.100
I'm on Twitter, KJAYMiller on Twitter, LinkedIn.

01:15:33.100 --> 01:15:34.160
That's kind of it.

01:15:34.160 --> 01:15:36.420
yeah, I'll definitely put that in the show notes as well.

01:15:36.420 --> 01:15:37.000
Yeah.

01:15:37.000 --> 01:15:42.800
And, yeah, again, if you're interested in my productivity takes in wild, hilarious

01:15:42.800 --> 01:15:48.180
opinions on things, but you know, you want to get outside of the Python space, check

01:15:48.180 --> 01:15:54.100
out conduit, on relay FM relay.fm slash conduit, where, we put out an episode

01:15:54.100 --> 01:15:59.180
every other week, this next one actually talks about having to do your job when you're

01:15:59.180 --> 01:16:04.440
in physical pain, which is something that, you know, you don't think about until you have

01:16:04.440 --> 01:16:06.440
that migraine for like the third day in a row.

01:16:06.440 --> 01:16:07.900
And you're like, all right, how do I do this?

01:16:07.900 --> 01:16:14.140
My most recent example was when I fell in a river and landed on some mossy rocks and broke

01:16:14.140 --> 01:16:18.560
my finger in three or four places and couldn't, and had a cast that went to the tips of my fingers

01:16:18.560 --> 01:16:20.480
could only work with one hand for two months.

01:16:20.480 --> 01:16:24.000
Let me tell you, you got to find some productivity tips to keep things going.

01:16:24.080 --> 01:16:25.080
Absolutely.

01:16:25.080 --> 01:16:29.000
That was a while, a couple of years ago, but still, yeah, it's, it's all of a sudden

01:16:29.000 --> 01:16:32.620
it usually realized, oh boy, I got to keep going, but this is not so easy.

01:16:32.620 --> 01:16:33.460
Oh man.

01:16:33.460 --> 01:16:34.260
Yeah.

01:16:34.260 --> 01:16:35.960
So, people should check out conduit.

01:16:35.960 --> 01:16:36.480
Yeah.

01:16:36.480 --> 01:16:37.020
Thanks for being here.

01:16:37.020 --> 01:16:37.400
It's been great.

01:16:37.400 --> 01:16:38.160
Absolutely.

01:16:38.160 --> 01:16:38.840
Yep.

01:16:38.840 --> 01:16:39.040
Bye.

01:16:39.040 --> 01:16:42.540
This has been another episode of talk Python to me.

01:16:42.540 --> 01:16:44.340
Thank you to our sponsors.

01:16:44.340 --> 01:16:45.940
Be sure to check out what they're offering.

01:16:45.940 --> 01:16:47.400
It really helps support the show.

01:16:48.400 --> 01:16:52.640
Coiled supercharges the tools you already use for scale and performance.

01:16:52.640 --> 01:16:55.800
So you can use Python for ambitious problems.

01:16:55.800 --> 01:16:58.520
Add coiled to your project in less than one minute.

01:16:58.520 --> 01:17:02.180
Get started today at talkpython.fm/coiled.

01:17:02.180 --> 01:17:07.520
Experience the joy of distributed data in zero downtime with cockroach DB.

01:17:07.800 --> 01:17:13.660
Get started with no credit card and Postgres compatibility at talkpython.fm/cockroach

01:17:13.660 --> 01:17:14.000
DB.

01:17:14.000 --> 01:17:15.960
Want to level up your Python?

01:17:15.960 --> 01:17:20.020
We have one of the largest catalogs of Python video courses over at talk Python.

01:17:20.020 --> 01:17:25.180
Our content ranges from true beginners to deeply advanced topics like memory and async.

01:17:25.180 --> 01:17:27.860
And best of all, there's not a subscription in sight.

01:17:27.860 --> 01:17:30.760
Check it out for yourself at training.talkpython.fm.

01:17:30.760 --> 01:17:35.520
Be sure to subscribe to the show, open your favorite podcast app and search for Python.

01:17:35.520 --> 01:17:36.760
We should be right at the top.

01:17:37.180 --> 01:17:41.920
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

01:17:41.920 --> 01:17:46.120
and the direct RSS feed at /rss on talkpython.fm.

01:17:46.120 --> 01:17:49.540
We're live streaming most of our recordings these days.

01:17:49.540 --> 01:17:52.940
If you want to be part of the show and have your comments featured on the air,

01:17:52.940 --> 01:17:57.320
be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

01:17:57.320 --> 01:17:59.220
This is your host, Michael Kennedy.

01:17:59.220 --> 01:18:00.520
Thanks so much for listening.

01:18:00.520 --> 01:18:01.680
I really appreciate it.

01:18:01.680 --> 01:18:03.580
Now get out there and write some Python code.

01:18:06.560 --> 01:18:24.100
I'll see you next time.

01:18:24.100 --> 01:18:54.080
Thank you.

