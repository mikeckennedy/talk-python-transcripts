00:00:00 Have you ever searched for a Python educational video?

00:00:02 Maybe how to get started with Pyramid or running queries with SQLAlchemy's ORM layer?

00:00:06 There's a good chance you've run across pyvideo.org.

00:00:10 This amazing site catalogs over 5,000 Python videos from most of the recent Python conferences,

00:00:15 among other places.

00:00:17 Browse by speaker, by topic, by event, and much more.

00:00:21 This week, you'll meet Paul Logsdon, who's taken over the leadership of the project when

00:00:25 it was in danger of going dormant.

00:00:27 This is Talk Python to Me, episode 83, recorded October 26, 2016.

00:00:55 I have many interests.

00:00:56 Sometimes you can play some of the things you've done.

00:00:57 Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries, the

00:01:02 ecosystem, and the personalities.

00:01:04 This is your host, Michael Kennedy.

00:01:06 Follow me on Twitter, where I'm @mkennedy.

00:01:08 Keep up with the show and listen to past episodes at talkpython.fm.

00:01:12 And follow the show on Twitter via at Talk Python.

00:01:16 This episode has been sponsored by GoCD and Hired.

00:01:19 Thank them both for supporting the show by checking out what they have to offer during their segments.

00:01:23 Paul, welcome to Talk Python.

00:01:26 Hey, how's it going?

00:01:27 It's going very, very well.

00:01:29 Thanks for being on the show.

00:01:30 I'm super excited to talk about what may be the largest collection of Python videos ever.

00:01:36 And that PyVideo, this is going to be great.

00:01:39 Yeah.

00:01:40 I'm excited.

00:01:41 Yeah, yeah.

00:01:42 Cool.

00:01:43 So before we get to that, though, let's start at the beginning.

00:01:45 What's your story?

00:01:45 How do you get into programming in Python?

00:01:47 Sure, sure.

00:01:48 So I guess it all kind of starts way, way back when, you know, you first, like, get a computer.

00:01:54 You know, your parents are like, oh, we should probably get the kid a computer so they'll be up on, like, the upcoming trends.

00:02:02 Or maybe just the family needs a computer or there's a computer at high school.

00:02:05 And that was what it was for me.

00:02:07 I had a friend at high school that was into software stuff.

00:02:12 And basically I just wanted to spend time with him.

00:02:16 And he started to teach me HTML.

00:02:19 And I ran with that for the rest of high school, building projects for teachers.

00:02:25 Ended up in college, unsatisfied with the real static nature of HTML.

00:02:31 So I started to learn PHP and was just like, oh, this is the best.

00:02:36 I'm going to rule the world with PHP.

00:02:38 You know, that's not that far off.

00:02:40 I mean, Facebook.

00:02:41 Absolutely.

00:02:43 Yeah, you're absolutely right.

00:02:45 It was actually about the same time, too.

00:02:46 Facebook and WordPress.

00:02:47 Zach and Zuckerberg, yeah, we're running off.

00:02:50 Of course, I didn't have those ideas of Facebook.

00:02:53 I was more than just like, yeah, I think there'd be a better grading system that I could build.

00:02:58 Yeah, let me go do that.

00:03:00 Fair grading for everyone.

00:03:02 Fair grading.

00:03:03 And people can access their grades online.

00:03:06 No, that's awesome.

00:03:07 That's awesome.

00:03:07 So did you build that?

00:03:08 Something like this?

00:03:10 No.

00:03:10 I jumped through a few iterations of building my own homepage and building a link holder.

00:03:17 So I used sites that I regularly visited for news or for school or for whatever, and I wanted those links readily available.

00:03:25 And this was before browsers kind of had the notion of bookmarks, or at least I knew how to use bookmarks.

00:03:31 So I was like, all right, we're going to build my own homepage that I know I can open up my browser to, and bam, I'll have my links.

00:03:40 And I gave that to a few friends, and it was great.

00:03:43 And then I had other things to do.

00:03:46 It wasn't my major.

00:03:47 It was just kind of something for fun.

00:03:50 So life went the other way.

00:03:51 Yeah, that's really cool.

00:03:52 Yeah.

00:03:53 Things were different back then.

00:03:54 I mean, we take so much for granted on the web and things, you know, like Google, for example.

00:04:02 The ability to just go and type and search for a thing, that didn't really exist in some of the time frames you're talking about.

00:04:08 But, like, Yahoo was really there to, like, actually manually collect the links and stuff like that, right?

00:04:13 It was a different world.

00:04:14 Yeah.

00:04:15 No, it was, I remember Dogpile and maybe it was AltaVista as, like, search engines.

00:04:21 And really these were, like, you'd ask for something, and it would go off, and you might get back what you're looking for,

00:04:29 or you might get back just an endless array of just garbage pages.

00:04:35 I really like pages that people had left behind must have been months to years ago.

00:04:40 How many GeoCities do you think?

00:04:42 Oh, oh, my goodness.

00:04:44 All GeoCities.

00:04:44 99% were GeoCities.

00:04:47 And a good 30% of them were, like, mine that I, like, tried to create and was just like, no, got to start a new GeoCities or Tripod page.

00:04:55 This isn't working out.

00:04:56 All right.

00:04:57 So how did you go from PHP to Python?

00:04:59 Yeah.

00:05:00 After I, you know, got through college, had PHP fairly well under my belt, I was like, but I really want to know how to create GUI apps.

00:05:09 I want to be able to create something that people can, you know, start up as a regular application like Word.

00:05:16 But I really didn't like the idea of investing myself into a language that boxed me into either GUI or web development.

00:05:25 Because, you know, I already knew PHP for web development.

00:05:28 I wanted something that kind of did both.

00:05:30 And so I knew Python was object-oriented.

00:05:34 And in my newbie mind, I was like, object-oriented?

00:05:37 Well, GUIs are objects.

00:05:39 So, you know, not really understanding at all what an object meant.

00:05:43 I just knew it's like, I don't know.

00:05:44 It's like, yeah, cars are objects.

00:05:47 GUIs are object-oriented.

00:05:48 Object-oriented programming.

00:05:50 That must be what controls Word.

00:05:51 So I jumped into Python.

00:05:53 And it was great.

00:05:56 I think what really attracted me was the tutorials that were available at the time.

00:06:03 I remember going through, like, Google's Python class, which was, like, only, like, eight exercises.

00:06:09 But it allowed you to do really, like, powerful stuff in a very short amount of time.

00:06:14 And it was like, oh, okay.

00:06:16 Now, you know, I'm getting better at this fast.

00:06:19 This is fun.

00:06:20 So I kept on going.

00:06:22 Yeah, yeah.

00:06:23 Excellent.

00:06:23 And, yeah, and you've been doing a lot of Python since, huh?

00:06:26 So what do you do day-to-day?

00:06:27 Yeah, yeah.

00:06:28 What do you do day-to-day?

00:06:29 Like, what's your programming job?

00:06:32 Yeah, so I work at a company called 15.5.

00:06:34 We are, like, a tool for employees and managers to stay in sync.

00:06:40 So, like, you check in weekly on 15.5, answer some questions about, you know, how you're feeling and where you're stuck.

00:06:46 And then that will hopefully allow managers to do a better job of supporting you.

00:06:51 And so I write back.

00:06:52 Yeah, that's one of the challenges that you can have at any time of your work, especially if you're remote.

00:06:58 It's just, like, even, you know, knowing, like, who's not really happy, who's excited, like, that kind of stuff, right?

00:07:04 Yeah, exactly.

00:07:05 Okay.

00:07:06 And ultimately, I'm, yeah, I think you hit it on the head.

00:07:11 I think maybe a little bit more of what drives me for it is sometimes there's just not a place where you feel comfortable to say what you want to say.

00:07:20 And unfortunately, that's the case in too many places in the work environment.

00:07:25 I myself have been in that situation.

00:07:27 And this allows you to kind of be by yourself.

00:07:32 You know how there's a disconnect when you're on the web?

00:07:35 You're not in front of the person you're talking to.

00:07:37 And some people run with that and are called trolls, right?

00:07:41 And they just abuse their ability to be disconnected from the person they're talking to.

00:07:45 But also, that space can give you almost freedom to really think about what you want to say and collectively build what you want to say.

00:07:56 Not collectively, but individually build the collections of things that you want to say and be more truthful to yourself.

00:08:02 And so I think that's another big thing that it provides.

00:08:07 Yeah, I agree.

00:08:08 You know, obviously, in that environment, trolls can be a problem.

00:08:11 But I think much more often, it reduces the barriers and the anxiety and the confrontation avoidance and all that kind of stuff that you would get in the way of just having a straightforward conversation, right?

00:08:21 Right, exactly.

00:08:22 Yeah.

00:08:23 But I also have kind of hesitation on that.

00:08:27 I'm like, well, maybe are we just giving Tylenol to a problem?

00:08:30 Maybe we should be focusing on this issue in a different way.

00:08:33 Should we be allowed?

00:08:35 Should we be putting more education and research into why aren't people feeling uncomfortable to talk to people when they're right in front of them?

00:08:45 You know, why can't we have these more intimate one-on-one conversations in person?

00:08:49 And so I definitely could see it being a Band-Aid rather than a cure.

00:08:53 But maybe, again, I don't have the answer, but maybe by Band-Aiding it for a bit, we can heal enough to figure out the cure.

00:09:04 I'm not quite sure.

00:09:07 Yeah, sure.

00:09:08 I don't know either.

00:09:09 And I'm not sure if the environment that we're creating with all the devices and asynchronous communication are making it worse or better.

00:09:16 I don't know.

00:09:17 But a Band-Aid is better than nothing, I would say for sure.

00:09:20 That's cool.

00:09:21 Yeah.

00:09:22 One of the things that you're really passionate about is education and providing education to everyone, right?

00:09:28 Yeah.

00:09:28 Yeah, absolutely.

00:09:29 So I don't know if you watch the Netflix and you watch the media.

00:09:37 Personally, I don't really watch the news too much, but I watch a fair amount of documentaries, and I talk with friends who are also pretty socially conscious-minded.

00:09:46 I'd like to think they are.

00:09:48 Maybe I'm just in a bubble of people that are not really worried about the real-world things.

00:09:56 But I've had several relationships with teachers, and they're just – so, yeah, there's tons of just junk going on in the world, and I really don't know how to fix.

00:10:07 I don't know how to fix any of it at all.

00:10:08 But I do know what's helped me be a better person, and that's been education.

00:10:15 And I don't really feel prepared to educate in the things that I don't know myself.

00:10:22 So I'd like to be able to educate on how to be like a better social worker or be a better English teacher or, you know, know more about mental health.

00:10:33 I just don't know those things.

00:10:35 I do know how to program.

00:10:37 And also, along with knowing what I can teach to a certain degree, I also feel like just education in general, along with specific skill sets, has made me a better person.

00:10:50 And especially handing off those skill sets has made me a better person.

00:10:54 Being able to communicate to teach someone, it takes a certain amount of skill in teaching, and that's a skill that is really about listening to your fellow human being.

00:11:05 I think being a good teacher is probably more listening and understanding the question that the student has rather than throwing out the information that you have.

00:11:14 Sure.

00:11:15 And when you're teaching anything, understanding where that person is, where their mindset is, where they're trying to go, like that is super important into actually getting what you're trying to teach to say, whether that's trying to teach how to access the database or something else, right?

00:11:30 Exactly.

00:11:30 Exactly.

00:11:30 Yeah.

00:11:31 Yeah.

00:11:31 So, like, knowing, you know, whenever you're solving a problem, like high school chemistry teacher said, whenever you're solving a problem, it's where are you at and where do you want to be?

00:11:40 And then figuring out the in-between.

00:11:41 And so that's the same thing you're doing for a student is you're figuring out where they're at, you know, sort of where they need to be.

00:11:47 Your job is to kind of create that bridge.

00:11:50 You said something like kind of like to the effect of, well, I'm just a developer, but I think developers have a certain superpower in today's society, right?

00:11:59 We're kind of like the magicians.

00:12:01 Sure.

00:12:01 Absolutely.

00:12:02 We don't always know what to do with our magic, but we can, like, wave our hands for a little bit and out pops a thing that can have a huge impact on the world in all sorts of ways, Uber or Pi Video or YouTube or whatever.

00:12:14 Well, you really elevated Pi Video there.

00:12:17 Yeah, among the likes of YouTube and Uber.

00:12:22 If only we had that kind of cash flow, the things we could do.

00:12:25 It was more of a good for the world rather than a financial.

00:12:29 Sure, sure.

00:12:30 Yeah.

00:12:31 But I would love to see that.

00:12:32 I absolutely agree.

00:12:34 So maybe I, a little being a developer, a little too much, but it was more just to say, like, this is the subsection of knowledge that, you know, I know that this is my domain knowledge and this is what I can confidently give out.

00:12:47 And even when I say confidently, it's more just kind of like a little less scaredly than giving other bits of knowledge, right?

00:12:54 Because even developing for I don't know how many years now, I'm still like, did I say that right?

00:13:00 Maybe I did.

00:13:01 Maybe I did.

00:13:01 I don't know.

00:13:02 They'll figure it out.

00:13:03 If I said it wrong, eventually somebody will correct them and really correcting me down the line.

00:13:08 At least I hope.

00:13:09 So not only do developers have like an extreme magician capability, but right now that extreme magician capability, like magicians are in demand.

00:13:21 And so that's the other thing that you can do for somebody and is give them a skill set that will could potentially totally transform their livelihood.

00:13:33 I say this out of my own experience.

00:13:35 I got a degree, but I really didn't have, I didn't have a good job.

00:13:39 I didn't necessarily come from a super well-off family.

00:13:43 And this is not to be like a boo-hoo story.

00:13:45 It's just like being a programmer totally transformed my opportunities in life.

00:13:50 And being able to give that out is, I mean, that's the best thing you could do with this knowledge right now is give this out.

00:13:59 Yeah.

00:13:59 It's super rewarding.

00:14:00 Like I'm thrilled to be able to do this podcast because I hear, you know, weekly from people like how it's made a real difference in their life.

00:14:09 You know, I've got a new job.

00:14:10 I've got a new career.

00:14:11 Thank you so much.

00:14:12 Like, wow.

00:14:13 You know, it's, I'm just sitting here chatting with people and it makes a difference.

00:14:16 I mean, it's, it's amazing to be able to share this kind of knowledge.

00:14:19 It really can make a difference.

00:14:20 Yeah.

00:14:20 That's the thing.

00:14:22 Yeah.

00:14:22 All right.

00:14:23 So let's talk about PyVideo.

00:14:24 Why don't you tell everybody what PyVideo is and sort of give them a background.

00:14:28 I'm sure if you've done a search on Google for some kind of teach me this video Python, you'll find PyVideo.

00:14:35 I did a quick test a minute ago and I pulled up an incognito window and I type P-Y-V into Google.

00:14:43 And it suggested PyVideo as like the second thing.

00:14:45 So it's definitely, yeah, it's definitely out there and well known.

00:14:50 So tell us what it is.

00:14:51 Right.

00:14:52 It's just an index of Python videos.

00:14:54 So maybe I'll take out the just.

00:14:56 It's an index of Python videos.

00:14:58 Its goal is to make finding Python video content easier.

00:15:05 Where quickly you can get to the video that you want.

00:15:08 So if it's all just thrown up on YouTube or if, say, an event where there's Python videos captured doesn't really have a space to live and people don't want to put it on YouTube.

00:15:17 Well, maybe they can send us those videos.

00:15:20 We'll put it on archive.org and then post links to that in Python or PyVideo.

00:15:26 The goal is simply to make finding Python content easier.

00:15:31 It's like a really centralized catalog of Python presentations.

00:15:37 Exactly.

00:15:38 And with lots of ways to explore that data.

00:15:40 Exactly.

00:15:41 Yeah.

00:15:41 So, yeah, maybe.

00:15:42 Yeah.

00:15:43 There's definitely a better way I could have explained that.

00:15:45 So here's what else.

00:15:47 No, no, it's all right.

00:15:48 Yeah.

00:15:48 It's, like I said, an index of a collection of Python videos.

00:15:53 But it's not just the web page that you see.

00:15:56 The bigger project that's going on is the data collection.

00:16:00 We got done with a lot of help from a lot of volunteers at the PyCon sprints, PyCon 2016 sprints.

00:16:06 We got pretty much a fully functional index site built, right?

00:16:12 It's a statically generated website.

00:16:13 Every time somebody pulls new content into the PyVideo repo, it's automatically redeployed with all the latest content.

00:16:24 So it's super easy to manage and just real simple front end to the data.

00:16:28 But the data is the real, the holy grail of this or the real content.

00:16:33 And that data is constantly being built out.

00:16:36 And what is the data?

00:16:37 It's just a bunch of JSON files with JSON blobs that contain, you know, the title, the description that you see, and links to the videos.

00:16:46 And anybody can add to this content.

00:16:49 Anybody can.

00:16:50 It's as simple as creating a PR from you fork the repo.

00:16:53 You create a PR.

00:16:54 And with your event's content.

00:16:57 And so long as you follow the pretty detailed guidelines for how to contribute, you're almost guaranteed to get that pull request in.

00:17:05 Yeah, that's great.

00:17:06 So first of all, how many videos do you have currently indexed?

00:17:10 5,481.

00:17:12 Wow.

00:17:13 That is a serious amount.

00:17:15 Yeah.

00:17:16 Half of them are just me waving and saying, Python, Python, Python.

00:17:19 Yeah, they're all great.

00:17:21 That's almost, a lot of these are conference presentations and stuff.

00:17:26 Maybe an hour, half an hour maybe.

00:17:28 That is a serious bunch of stuff to go learn.

00:17:32 I think one of the really interesting things, one of the good things, a well-done thing of the Python community is about publicizing and sharing all the conferences.

00:17:45 And there seems to be a really solid, concerted effort to record and share what is done.

00:17:52 Like, I was really impressed at PyCon US this year that basically the same day, maybe the next day, the videos from the conference were going up on YouTube.

00:18:03 You can go to youtube.com slash PyCon 2016 and pull those up, right?

00:18:07 But there's many, many events that go on around the whole world, and we can't go to all of them.

00:18:15 Exactly.

00:18:15 Right.

00:18:16 I saw some really great ones from KiwiPyCon.

00:18:20 I'm sure I'm messing up the name a little bit, but the New Zealand one.

00:18:24 There's no way I could go to New Zealand for a Python conference.

00:18:26 Well, maybe someday if I'm lucky, but I can watch it, right?

00:18:30 And I can enjoy it.

00:18:32 And I think that's really great.

00:18:33 And so your project, now that you're maintaining it, I'll call it yours.

00:18:39 I know it didn't start with you.

00:18:41 We'll talk about that, the world.

00:18:43 But this project, let's say, does a real good job of bringing those together.

00:18:46 Because I can't, like, cruise YouTube and go, well, is there a PyCon AU 2016?

00:18:51 Right.

00:18:52 I don't know, maybe.

00:18:52 Right?

00:18:53 So having this all brought together is super valuable.

00:18:56 Yeah, exactly.

00:18:57 And I think you hit on a really great point is that you wanted to see what the rest of the world has to offer.

00:19:05 The rest of, at least New Zealand has to offer for Python videos, Python education.

00:19:11 And you could go do that quickly.

00:19:13 Maybe New Zealand's okay.

00:19:15 But say in other parts of the world, say Africa.

00:19:18 I know my brother is in Cameroon right now.

00:19:21 And if he tries to go to YouTube to search up a video, it's going to take him a long time.

00:19:26 But we're not even talking about downloading the video to watch or buffering the video to watch.

00:19:31 We're talking about just getting to the content that he wants.

00:19:34 It can take quite a long time.

00:19:36 And that's even with, you know, Google aiding his search.

00:19:38 So if he wanted to get to a particular Python video, this site helps him get there faster.

00:19:45 It's less hops to the end goal that he wants to get a real long or a real complete list of what's available.

00:19:52 And that means that people who are searching for educational content can get to what they need faster and don't need to waste time when they could be learning.

00:20:02 Right.

00:20:02 Yeah.

00:20:03 And you, so all the data is stored in a Git repo, right, on GitHub.

00:20:08 Yeah.

00:20:09 And you can just clone that.

00:20:10 And like you said, if you want to contribute to it, you just fork the repo, make some changes.

00:20:15 Basically, you create like a JSON document in the right place, in the right format, you'll pull request, and back it goes.

00:20:22 So one thing I wanted to ask you about is what type of videos are you looking for in PyVideo?

00:20:29 So when I look at PyVideo, I look through it, and I see that there are a bunch of conference presentations, like I kind of hinted at there.

00:20:38 And that's awesome.

00:20:39 They should be there.

00:20:40 But are there possibilities to put other ones?

00:20:42 Like if I did just like a random tutorial and I put it up on YouTube, could I link that in there, or would that be inappropriate?

00:20:47 No, that'd be totally.

00:20:48 Are you looking for just conference presentations?

00:20:50 No, absolutely not.

00:20:51 I mean, as long as it's not like a video on snakes, just the actual Python, I think you're in the right category to create a PR.

00:21:00 I think when it comes to teaching, which is one of the major goals of this project, at least for me, I know other parts of the PyVideo team, they might have different motivations, and I think that's great.

00:21:12 But for me, a lot of it's the education focus and getting the word out there.

00:21:16 Having several different teachers tell you the same thing is quite powerful.

00:21:22 It can shed light on how different people interpret different problems.

00:21:26 And so if you have a tutorial that goes over the exact same thing as another tutorial and it goes over the same thing as a talk that was given at a conference, absolutely it's still welcome.

00:21:37 If it is a tutorial, if you're thinking like, I created this in my basement, does it belong on PyVideo?

00:21:43 Ask yourself, is it about Python?

00:21:46 Is it trying to teach people Python stuff?

00:21:48 Yeah.

00:21:48 Yeah, so people, I think there's probably a room for people out there to add a bunch of stuff.

00:21:55 Like Kevin over at Data School is doing like a Python tutorial a week sort of thing, but none of those are in there, right?

00:22:03 Like it would be cool if he put his in there and I have a number I could put in there.

00:22:07 And, you know, there's a bunch of people out there that I think are not necessarily contributing.

00:22:11 So maybe this could be a little bit of a nudge.

00:22:13 Right, right.

00:22:14 That'd be great if they contributed or they created a PR.

00:22:17 I think all requirements that we have is keep it open, keep it simple, and keep it free.

00:22:22 And that's really our building philosophy.

00:22:24 So not even our, you know, not like a restriction.

00:22:29 Like if it's a complex video, don't withhold it from PyVideo just because our motto is keeping it simple, right?

00:22:35 But as long as it's free, like you can't link to something that's going to happen.

00:22:38 Yeah.

00:22:38 If it's something that is more or less self-contained and it's like a lesson on Python.

00:22:43 Yeah.

00:22:43 Okay.

00:22:44 I think I understand what kind of videos you're looking for.

00:22:46 This portion of Talk Python To Me is brought to you by GoCD from ThoughtWorks.

00:23:05 GoCD is the on-premise, open-source, continuous delivery server.

00:23:10 With GoCD's comprehensive pipeline and model, you can model complex workflows for multiple teams with ease.

00:23:17 And GoCD's value stream map lets you track changes from commit to deployment at a glance.

00:23:23 GoCD's real power is in the visibility it provides over your end-to-end workflow.

00:23:28 You get complete control of and visibility into your deployments across multiple teams.

00:23:33 Say goodbye to release day panic and hello to consistent, predictable deliveries.

00:23:37 Commercial support and enterprise add-ons, including disaster recovery, are available.

00:23:42 To learn more about GoCD, visit talkpython.fm/gocd for a free download.

00:23:48 That's talkpython.fm/gocd.

00:23:51 Check them out.

00:23:52 It helps support the show.

00:23:53 Tell us the story.

00:24:02 This was started, when was it started?

00:24:05 It was started by Will and Sheila, but I don't know when.

00:24:08 Why don't you tell us the history real quick, as much as you know it.

00:24:10 I wish I could tell you in greater detail.

00:24:12 I don't have it off the top of my head, all the bits and pieces.

00:24:15 But I think there was something of a collection of videos prior to Will getting started on it in 2012 or 2011.

00:24:27 And I think he wanted to create a web front for it.

00:24:30 And he had an idea and decided to build it out in Django.

00:24:34 I think Sheila joined him shortly thereafter, helping him build that out and bring in videos.

00:24:41 And they were just going at it, building out this site for, I guess, four years, five years.

00:24:49 By the time they decided they wanted to do other things.

00:24:54 And they did an amazing job.

00:24:55 We had, probably, when we got started, 3,000-some videos, maybe more.

00:25:01 Forgive me if it's more, and I'm incorrectly quoting Will and Sheila.

00:25:05 But they did the bulk of this data collection and categorization.

00:25:11 And when early 2016 rolled around, I think it was January, I woke up one morning and pulled up by video.

00:25:23 I watched by video while I do other things.

00:25:26 And I saw the banner up at the top, and I said, oh, crap.

00:25:29 This is going down.

00:25:30 We need to do something about this.

00:25:33 And I read Will's blog.

00:25:36 I really, I just didn't want to not have this tool there for me to watch videos while I did other things.

00:25:43 Right?

00:25:44 You're taking away part of my entertainment.

00:25:46 This is my routine you're talking about tinkering with.

00:25:49 Yeah, you're getting so much out of it.

00:25:50 You're like, well, I can't let this happen.

00:25:51 Maybe I have to, maybe you have to solve the problem.

00:25:54 Yeah, exactly.

00:25:54 Yeah.

00:25:54 And so I sent out a few emails.

00:25:58 Didn't hear anything back.

00:25:59 I just assumed it was like, all right, yeah, they're probably getting pummeled by other people doing this.

00:26:05 Trying to help them out with this.

00:26:07 So, you know, I won't think into it too much and just let me start building out a small thing just in case that it's not nobody else is doing anything.

00:26:19 And sent a link to Will and Sheila saying, hey, this is what I got so far.

00:26:23 Got some words back from Will and Sheila.

00:26:26 And I forget exactly what the conclusion there was.

00:26:30 But I think it was like, well, we're still working on figuring out, you know, what the long-term solution for this is.

00:26:35 And then came May.

00:26:37 So PyCon 2016.

00:26:39 It was basically we, I think somebody else went up to do a lightning talk.

00:26:43 Yeah, it was definitely, his name's Cameron.

00:26:46 But I'm trying to think of his Twitter handle.

00:26:48 And so he got up and gave a lightning talk about, hey, we need to do something about this.

00:26:56 And I was like, oh, great, awesome.

00:26:58 He's also in the same boat.

00:26:59 And that must mean that somebody, maybe I can help with them.

00:27:03 You know, somebody else has got something going.

00:27:05 And I showed Cameron the site that I had built out, which was a statically generated site.

00:27:10 And basically the website went that way because it was already pretty much built.

00:27:16 The skeleton was.

00:27:18 And all that really needed to be done was styling.

00:27:21 And when I say all that needs to be done, a lot of styling needed to happen.

00:27:26 It looks totally different than what it did when I was building it, thanks to, like, the big team of people that were helping out at the PyCon sprints.

00:27:34 Sounds cool.

00:27:35 Yeah, it looks nice these days.

00:27:36 Yeah.

00:27:36 Oh, my goodness.

00:27:37 I wish I could say that was because of me.

00:27:39 No, this is because of a large team of people.

00:27:42 And not only did we have this web team that was working on, you know, making my site more user-friendly and more viable, more robust and prettier.

00:27:52 But we also had another two sections that were working on, like, archiving the data in a better way and also refiguring out how we're going to hold on to data over the long term.

00:28:04 And I think once Will and Sheila saw that it had a good foothold and a new pathway, they were happy to let it go that way.

00:28:14 I think they wanted, you know, they spent a lot of time.

00:28:17 They spent four years working on this project.

00:28:19 You know, they want to make sure it's in good hands.

00:28:22 And I was flattered to hear that they were okay with it going into our team's hands.

00:28:28 Unfortunately, I didn't pay enough attention on how to contribute and how the flow went before.

00:28:33 So maybe I just don't know.

00:28:34 But it feels like the way you guys have it set up now is it's very open and it's very much a community project, like contributing data all through pull requests.

00:28:44 And there's a bunch of people that work that aren't in the sprints.

00:28:46 And it feels like it's sort of spread out to be maintained by more people.

00:28:51 Is that true?

00:28:51 That's absolutely right.

00:28:52 Yeah.

00:28:53 I'm certainly not the most active maintainer right now.

00:28:58 Like I think maybe in the first couple of weeks after PyCon 2016, I was doing a lot of work.

00:29:06 I definitely don't even think then it was necessarily that I was doing the most work.

00:29:09 It since has become that my job is to help introduce other people into how to help with the project.

00:29:16 And then they tend to jump on and, you know, just blow me out of the water in terms of, you know, making pull requests, making sure things are clean and making sure that the site keeps keeps growing.

00:29:27 Yeah.

00:29:27 So you're kind of like the catalyst or the initial moving force or whatever to get it revived.

00:29:33 I feel almost that that's too much to say.

00:29:35 I am simply I'm a good sign.

00:29:39 Like, you know, when you're driving down a dirt road and then there's, you know, two paths.

00:29:43 I'm a really good sign at the fork in the road saying, all right, well, you just go that way.

00:29:49 And you'll eventually get to three miles down the road that way.

00:29:53 Yeah, exactly.

00:29:54 Yeah.

00:29:54 42 pull requests and three contributors and then we'll be there.

00:29:58 Exactly.

00:29:58 Pretty much.

00:29:59 Nice.

00:30:00 Okay.

00:30:01 So what do you guys need from the community to like take this to the next level or at least keep it thriving?

00:30:05 Great question.

00:30:06 We need more contributions from conference organizers.

00:30:11 So usually who has the money to pay for video cameras to record talks and stuff like that is conferences.

00:30:17 A lot of meetups that are happening around the world don't have AV equipment to capture this stuff.

00:30:25 So even those individuals that do, we're asking them to create these PRs.

00:30:30 That's probably the biggest thing.

00:30:32 So we can go out and scrape, but that's never going to be, it's going to be very hard to get us to the quality that could be achieved by just getting that data directly from a conference organizer.

00:30:45 So when a conference organizer puts on a conference, we're looking for them to serialize that data into a JSON form.

00:30:53 The specs are very, I think, very clear.

00:30:57 But, you know, of course, if you have improvements on that, let me know and we'll make it clearer.

00:31:02 But pretty clear specs on how the JSON blob should look.

00:31:05 And all it is just, you know, post the PR.

00:31:07 If that's difficult to do or, you know, just too time consuming, because I totally understand that I've run a few conferences with a team of people here in New York.

00:31:21 And they are, your time's gone for basically the three months before a conference, right?

00:31:25 So if that's not a possibility, then maybe just a CSV file and send it to us via a GitHub issue, and we can work it from there.

00:31:36 At the very least, try and create YouTube videos that are titled and have descriptions that conform to a certain specification that allow us to scrape the information a little bit easier.

00:31:50 Those are the few areas where conference organizers could really help us out.

00:31:54 If you're not a conference organizer, or you are, or it doesn't matter who you are, but you want to help out, we're always looking for people to help us scrape the web for these videos, whether they're on YouTube or Vimeo, and clean up the data to get it in a ready state to be part of the collection.

00:32:10 Oh, yeah, that sounds great.

00:32:11 So one thought that came to mind, you know, to sort of build on all what you just said was there are many, many, many meetups going on all the time, right?

00:32:21 There's one going on in Portland tomorrow, and I'm hoping I can make it.

00:32:25 There's probably some really cool presentation going on at all these that for every conference, there's 30 meetups, right?

00:32:33 What about some sort of call to action to, if you're going to go to a meetup, and you have solid HD camera and like a lapel mic or something like that, like offer to like do a recording of it.

00:32:44 If the speaker is up for it, and the leader of the meetup is up for it, that seems like that would generate a lot of new content as well.

00:32:52 Absolutely, yeah.

00:32:53 If you, yeah, so I will use your words verbatim.

00:32:56 If you have solid AV equipment, you know, and you have the time, you have the resources to hand back to the community in that way, that's a huge way that you could help out the PyVideo effort, the education effort around Python.

00:33:12 We would greatly appreciate it.

00:33:14 Okay.

00:33:15 Yeah, yeah, that would be awesome, right?

00:33:16 There's got to be a lot of people with like a 4K camera and a tripod and a microphone, right?

00:33:21 Yeah.

00:33:21 That can't be that rare.

00:33:23 All my friends have, yeah, like 4K, you know, MacBook Pros.

00:33:27 No, I don't know.

00:33:29 So you don't necessarily, I don't know if that was a lead into explaining the quality requirements.

00:33:35 There's not really a whole lot of quality requirements when it comes to the videos that can be posted.

00:33:42 So long as you have something that can record in a way that you can watch it and understand clearly what the video is trying to be said or trying to be said in the video, you're set.

00:33:53 That's all you need.

00:33:54 You don't need the fancy dancy-ness or that to record.

00:33:58 Yeah.

00:33:58 Okay.

00:33:59 Is there like, when I'm looking at the site, there's a couple of interesting things about the site.

00:34:04 I want to talk about the technology.

00:34:06 But you can go there and just sort of like when you show up at PyVideo.org, you get just the latest talks.

00:34:11 Right now I see some from PyBrazil.

00:34:14 And you can sort by events.

00:34:16 You can say, I would like to see all the presentations from DjangoCon 2014.

00:34:21 You can also go by Tags and say, like, I want to see all the stuff that has to do with like ARGPARs.

00:34:28 Right.

00:34:28 And there's like two videos on your site about ARGPARs, for example.

00:34:30 Right.

00:34:31 And you can see by speakers.

00:34:32 Is there a way to say, like, show me the really popular or highly rated ones?

00:34:37 No.

00:34:38 Is there like some sort of this is what the community has really liked feeling?

00:34:43 No.

00:34:44 That is in the site?

00:34:45 No, there's not.

00:34:46 And I understand, like, the luster around that idea.

00:34:51 I myself have kind of, like, tinkered with the idea.

00:34:54 But I don't know that that's necessarily needed.

00:34:59 One.

00:35:00 So and our kind of one of our parts of our motto is let's keep it simple.

00:35:04 So if it's not really needed to help people find what they're looking for, we're not going to really include it.

00:35:10 And sure, there might be people that are looking for, like, what's the most popular video.

00:35:15 But I don't I haven't heard a whole lot of requests for that, I guess, is what I'm saying.

00:35:21 Yeah.

00:35:21 And if I flip through if I flip through the tags, I find that, like, for the most part, for the most part, there's not a tremendous number.

00:35:30 Right.

00:35:31 Like for any particular thing.

00:35:32 So if I look at just flipping through on suds, there's one talk.

00:35:36 So it doesn't matter how highly or lowly rated that is.

00:35:39 There's one, you know.

00:35:40 Right.

00:35:41 And, you know, like setup.py, there's three whole talks.

00:35:45 Like you could probably just watch those if you're trying to learn about setup.py.

00:35:48 Right.

00:35:48 There's some like SQLAlchemy has a number of them and things like that.

00:35:53 But the web has like 90, 89.

00:35:55 Okay.

00:35:56 Yeah.

00:35:56 Yeah.

00:35:56 Very interesting.

00:35:57 Yeah.

00:35:57 And also, I didn't want to.

00:36:00 I think I vetoed that idea also because I didn't want to kind of direct people in their search for whatever knowledge that they were searching for.

00:36:10 It was I didn't want to become like a popularity kind of a contest.

00:36:17 Sure.

00:36:17 So that was maybe another motivation.

00:36:19 Yeah.

00:36:20 And I would certainly never want to see like a downvote.

00:36:23 Exactly.

00:36:23 You know, like certainly not a downvote, but maybe an upvote someday.

00:36:27 If there's 100,000 and you're really trying to find of all the thousand things on, you know, the pyramid web framework, maybe someday you guys could revisit that.

00:36:36 But I don't I guess it's not really needed yet.

00:36:38 That's cool.

00:36:39 So if somebody wants to like work on the project, become a core contributor, how do they go about that?

00:36:45 What's your philosophy for making someone a core contributor?

00:36:47 I'm pretty loose, I think, compared to other projects.

00:36:50 I like to plug by video as an easy way to get in your like open source credits or open source experience.

00:36:58 I'm very readily try and merge things in.

00:37:02 If you've if you've got a PR, it's got to meet, you know, the certain minimum requirements.

00:37:06 But other than that, try to merge stuff in ASAP.

00:37:09 One, because, you know, that's content that other people are waiting for.

00:37:13 I know I've sat waiting for like stuff to be updated on Pi Video for conferences that have happened like a month ago or something like that.

00:37:22 And that's not any statement on Will and Sheila.

00:37:24 That was while I was running the site and I just didn't have time to get around.

00:37:28 But the idea, I think, the philosophy for me is this site doesn't have to just be a learning experience for those who view, but a learning experience for those who contribute.

00:37:41 So if you haven't given back to any open source project before, I think this one's a super easy one to get started with.

00:37:49 And I want you to make a stab at it and work you into the fold quicker so that you can gain these skills.

00:37:56 This is an opportunity for people to try out their open source contribution skills.

00:38:03 Yeah.

00:38:04 And it really is pretty easy.

00:38:05 You know, like I said, you put together some data, title, video, tags, things like that.

00:38:11 You work on this JSON document.

00:38:13 You do a pull request.

00:38:14 It's not like you're looking at like a tight loop in the CPython runtime or interpreter and going, you know, I need to understand the performance tradeoffs and implications of writing this slightly differently.

00:38:27 It's not anything like that.

00:38:29 It's like, hey, I'm going to sort of add to the data catalog.

00:38:33 The other half, though, is the website.

00:38:35 And the website is really interesting.

00:38:36 Like you said, it's statically generated.

00:38:39 And one thing I found interesting is I turned on the dev tools while I was cruising around it in the browser.

00:38:44 And after the first request to a page, the site renders like 100% from cache, local cache, which is a pretty cool effect.

00:38:53 Yeah.

00:38:53 So what's behind the site?

00:38:55 How does that work?

00:38:56 GitHub actually does that beautiful work for us.

00:38:59 Again, to keep it simple, the idea is that we run on minimal infrastructure.

00:39:06 So when somebody creates a new PR to the data repo, we'll merge that in.

00:39:11 And then the data repo is updated.

00:39:13 From there, maybe a few PRs will get merged in to the data repo.

00:39:18 And then from there, we will create a new PR in the PyVideo repo, which is the repo that contains all the static site logic.

00:39:27 It's built on Pelican, which is a static site generator built in Python.

00:39:33 And we update simply the SHA of the submodule for the data repo.

00:39:38 So the data repo is a submodule of the PyVideo repo.

00:39:41 And all that's in the PR is just that SHA changing.

00:39:45 We merge that in.

00:39:47 And Travis CI handles the deployment.

00:39:49 Everything is automatic.

00:39:50 Everything is automatic.

00:39:51 You just sit back and wait for three minutes and it's done.

00:39:54 And that was done for a few reasons.

00:39:56 One, it's very easy to maintain.

00:39:59 There's no servers I need to worry about.

00:40:01 There's no keys I need to hand out, anything like that.

00:40:04 It's simply just Travis CI handling everything in the background.

00:40:09 And then it's fast.

00:40:11 That's the other reason.

00:40:12 It's when you're trying to download something from somewhere else on the planet, I don't want you to be slowed down because all of our servers are here in northern Virginia.

00:40:21 GitHub does the job of spreading the site around the world.

00:40:26 And hopefully, I haven't traveled.

00:40:28 I actually will be traveling to India in the later part of December.

00:40:32 And I'll be making sure we're fast down there.

00:40:35 Nice.

00:40:37 Yeah, test it on your phone or something.

00:40:39 Exactly.

00:40:40 Yeah.

00:40:40 That would be cool.

00:40:41 It's super zippy.

00:40:43 It probably does make a few things like, for example, my voting idea.

00:40:48 It's much harder with a purely static site.

00:40:51 It would add more complications, certainly, than it's worth, I would think.

00:40:55 But it's a really impressive way to do it.

00:40:57 Is that GitHub Pages, basically, with a custom domain map to it?

00:41:00 Yes, exactly.

00:41:01 And that's another thing.

00:41:03 Yeah, it would make it more complicated.

00:41:05 And that's another reason we go with or I'm pushing for us to stay with something this simple is eventually people want to move on from our project.

00:41:15 This is actually another point I wanted to make about contributors.

00:41:18 This should not consume anybody's life.

00:41:21 We should be able to give back to the community, but do so with an extra hour that we have a month.

00:41:26 This shouldn't be taking 15 hours of extra time a week.

00:41:30 So keeping it simple and keeping it to a point where people can come in and out easily will hopefully lessen the stress burden that comes along with becoming part of an open source project and ultimately allow it to live on longer.

00:41:45 I think that's a really interesting point.

00:41:47 You know, you could have thought of like, well, we're going to have like the Python's universe of like YouTube with like fancy uploading tools and voting and all the various things.

00:41:57 Right.

00:41:58 And that maybe that thing never gets built or if it gets built, like it consumes too much of your time and you've got to drop it.

00:42:03 I think there's a really cool lesson from saying you've put together something that is good and good enough, but so crazy simple.

00:42:12 Like anybody can review a pull request and hit merge and then wait a few moments.

00:42:17 You know, like the other thing that's cool about that, I think is it's instant.

00:42:23 Well, it's three minutes, but it's a relatively instant, right?

00:42:25 It's not like somebody submits something to you, some data, they email you like a CSV and then you've got to enter it to a backend.

00:42:31 And like eventually you'll get around, like you said, you're waiting for a month to get some of the data in, right?

00:42:37 If people can just enter that as a JSON document and do a pull request, like it's, there's almost no effort on your part other than to like see that it's not bad data to put that in the system.

00:42:47 Exactly.

00:42:47 Exactly.

00:42:48 And that means more time for other open source projects, more time for my family and friends, more time for just enjoying what's on PyVideo, right?

00:42:57 Right.

00:42:58 Well, and more sustainability for PyVideo.

00:43:00 Exactly.

00:43:00 Yeah.

00:43:01 Yeah.

00:43:01 I think, I guess I'm viewing it from like the sustainability is how much life can I live beyond PyVideo?

00:43:09 And, but when I say how much can I really mean like all of the maintainers, how much life can we live beyond PyVideo?

00:43:16 And with PyVideo, the more it is, the more maintainable I think it is.

00:43:21 Yeah, absolutely.

00:43:21 Yeah.

00:43:22 As well as how much, how easy it is to bring someone onto the project.

00:43:26 I think that way, like if somebody steps down, some new person can step in and it's not like, well, there's actually, you know, an interesting problem going on with PyPI right now.

00:43:37 Right, yeah.

00:43:37 And I'm going to do a whole episode on it.

00:43:40 But the old PyPI, the reason that Donald's stuff was basically the only guy maintaining it was it was such a rat's nest to understand.

00:43:49 I think it, like the entire, like what's running PyPI now, not the new PyPI.io version, but the older one, the primary one, was like two files.

00:44:01 And they were like, two Python files are like 20,000 lines long or something insane like this.

00:44:05 Right.

00:44:06 You know, and he's, Donald said people would come and look at it.

00:44:10 They all want to contribute and make PyPI better.

00:44:11 And they would come and look and go, yeah, but no, not actually this.

00:44:14 I'm sorry.

00:44:16 So they rewrote it in Pyramid and Bootstrap and it's on a good, it's on a better path.

00:44:23 Yeah, I'm excited.

00:44:23 But I think that's a lesson for open source, right, is like if it's such a mess to contribute and it's so hard to get started, like people won't do it.

00:44:31 Yeah.

00:44:31 So you have like the anti-PyPI problem here, which is great.

00:44:35 Yeah, I hope it's, well, yeah, we'll leave it there.

00:44:40 I mean, PyPI is solving a different kind of problem, right, but still it's like it's an open source project that's crazy easy to get started in instead of something that's like really, really hard to do your first steps.

00:44:52 Right.

00:44:52 Yeah.

00:44:52 That's the goal.

00:44:53 This portion of Talk Python is brought to you by Hired.

00:45:08 Hired is the platform for top Python developer jobs.

00:45:11 Create your profile and instantly get access to 3,500 companies who will work to compete with you.

00:45:16 Take it from one of Hired's users who recently got a job and said, I had my first offer on Thursday after going live on Monday and I ended up getting eight offers in total.

00:45:24 I've worked with recruiters in the past, but they've always been pretty hit and miss.

00:45:27 I tried LinkedIn, but I found Hired to be the best.

00:45:30 I really like knowing the salary up front.

00:45:32 Privacy was also a huge seller for me.

00:45:35 Sounds awesome, doesn't it?

00:45:36 Well, wait until you hear about the signing bonus.

00:45:38 Everyone who accepts a job from Hired gets $1,000 signing bonus.

00:45:42 And as Talk Python listeners, it gets way sweeter.

00:45:44 Use the link Hired.com slash Talk Python To Me and Hired will double the signing bonus to $2,000.

00:45:50 Opportunity's knocking.

00:45:51 Visit Hired.com slash Talk Python To Me and answer the door.

00:46:02 So you talked a little bit at the beginning about what you're doing with your job, but what other projects are you working on?

00:46:06 What else you got going on?

00:46:07 I got pretty excited about this one.

00:46:10 I wanted to know more about the CPython internals.

00:46:13 And so I set out to create a comparator operator, which would compare two objects, kind of like the greater than or less than symbols.

00:46:22 But I wanted mine to be two carat symbols.

00:46:25 So on my keyboard, shift 6, right?

00:46:28 Shift 6 will give you that little carat.

00:46:30 If you put two of them together, it kind of looks like cat ears.

00:46:33 So I wanted to make a cat comparator that you could override with the dunder cat thing, just like you can do with, you know, the matmul operator, which is the yak symbol.

00:46:42 And I figured it out.

00:46:43 It took me probably a month worth of extra time on the side getting around to it.

00:46:48 And I'm not super proficient at sea, but I got it, and it prints meow, or it can print whatever you want it to print.

00:46:58 So I'm pretty excited about that.

00:47:00 I'm confident now that I can go into something a little bit more adventurous and maybe actually make a PR against the CPython core.

00:47:10 That's a bucket list thing to do is contribute back to the CPython in some way.

00:47:14 Yeah, that's a great bucket list.

00:47:16 Yeah.

00:47:16 Okay, cool.

00:47:17 Thanks for the validation on that.

00:47:19 I was explaining my cat operator to – so I work in a collective workspace, and one of the people in the collective workspace, you know, is this multimillionaire dollar CEO type of guy.

00:47:32 And I was there late Saturday night.

00:47:35 He was there late Saturday night.

00:47:37 It was just the two of us in the office.

00:47:39 I get done with my cat comparator operator.

00:47:41 He gets done with I don't know what.

00:47:43 We're both going down on the elevator.

00:47:46 And, yeah, I'm explaining my cat operator to him.

00:47:49 And he's like, oh, cool, cool, yeah, uh-huh.

00:47:51 And then I'm like, yeah, so what did you do?

00:47:54 And he's like, oh, yeah, I opened up a new hotel.

00:47:56 And I'm like, oh, wow.

00:47:59 So I guess, yeah, we both have accomplishments.

00:48:03 That's fantastic.

00:48:04 Yeah, no kidding.

00:48:07 And then he went home to his wife and said, you know, I met this guy in the elevator, and he's trying to teach computers about cat ears.

00:48:14 I don't really understand.

00:48:15 It's a weird place.

00:48:16 I met this really creepy guy in the elevator talking about cats.

00:48:19 So glad to be home.

00:48:20 No, I think that's great.

00:48:22 You know, in episode 22, I did a whole show with Philip Glau about the CPython internals.

00:48:29 He did a really cool thing, and I don't know if it's on PyVideo.

00:48:31 If it's not, it should be, called the CPython Walk.

00:48:35 And it's 10 sets of one-hour videos of his graduate course studying the CPython internals.

00:48:41 If people want to check that out, that's definitely, if you're looking to dig in, that's really cool.

00:48:47 Yeah.

00:48:47 All right, so I think we're getting close to the end of the show, so let me put the two questions I always ask my guests at the end.

00:48:54 First of all, over 90,000 PyPI packages these days, speaking of PyPI.

00:49:00 And, Shirley, you've come across some cool ones.

00:49:03 Which one would you like to recommend to people that maybe they don't know about?

00:49:07 This was really hard for me because I use so many different ones for different things.

00:49:11 You know, a project is usually not super cool to me just because there's one thing that I use from the open source community,

00:49:20 but because of a bunch of things that I can pull together from the open source community.

00:49:23 So, but I think I'll probably do Unicode or Unidecode, I'm sorry.

00:49:30 It has a special place in my heart because it was the first kind of attempt I made to port it to CPython or a C module in Python.

00:49:39 So I took Unidecode and tried to make just a C version of it to see if it would go any faster.

00:49:44 But it's pretty cool.

00:49:46 It takes Unicode characters and decodes them into, at this point, I'm not really even sure what exact encoding it decodes them into,

00:49:55 but it tries to come up with some ASCII version of it.

00:49:58 So it basically is somewhat offensive in a way.

00:50:02 It tries to take all the languages that are and symbols around the world and compress them down into ASCII text or American.

00:50:10 Yeah, the ASCII text.

00:50:11 Yeah.

00:50:11 It says you shouldn't be whatever native language you are.

00:50:15 Compress it down into America.

00:50:17 And so, yeah, unfortunately, we have to deal with that.

00:50:20 Yeah, but there are systems that only display ASCII.

00:50:23 And so either you get boxes or you get something that actually could be useful.

00:50:29 So it's, while offensive on an answer, it's also, it can be powerful in others, right?

00:50:35 Powerful and somewhat necessary sometimes, yeah.

00:50:37 Yes, exactly.

00:50:38 Cool.

00:50:39 All right.

00:50:39 And so when you write some Python code, what editor do you use?

00:50:42 50-50.

00:50:42 50% of the time, it's in Vim.

00:50:44 50% of the time, it's in PyCharm.

00:50:46 Okay.

00:50:46 A perfect split.

00:50:47 Cool.

00:50:48 All right.

00:50:49 So, Paul, it's been great to talk to you.

00:50:51 You got any final call to actions for people?

00:50:54 What do people need to do to make PyVideo better?

00:50:56 Go out, learn, and share.

00:50:58 That's all.

00:50:59 Awesome.

00:50:59 Okay.

00:51:00 That's a great call to action.

00:51:01 Well, thanks for sharing the story of PyVideo.

00:51:04 And thank you for working on this project.

00:51:06 It's been very helpful to me, and I'm sure it's been helpful to many, many people.

00:51:10 So thanks for that.

00:51:11 Yeah.

00:51:11 Thank you.

00:51:12 Very flattered to be here.

00:51:13 It's great to have you here.

00:51:14 Talk to you later.

00:51:15 This has been another episode of Talk Python to Me.

00:51:19 Today's guest has been Paul Logsdon, and this episode has been sponsored by GoCD and Hired.

00:51:24 Thank you both for supporting the show.

00:51:26 GoCD is the on-premise, open-source, continuous delivery server.

00:51:31 Want to improve your deployment workflow but keep your code and builds in-house?

00:51:36 Check out GoCD at talkpython.fm/gocd and take control over your process.

00:51:42 Hired wants to help you find your next big thing.

00:51:44 Visit hired.com slash talkpython to me to get five or more offers with salary and equity presented

00:51:49 right up front and a special listener signing bonus of $2,000.

00:51:53 Are you or a colleague trying to learn Python?

00:51:56 Have you tried books and videos that just left you bored by covering topics point by point?

00:52:01 Well, check out my online course, Python Jumpstart by building 10 apps at talkpython.fm/course

00:52:07 to experience a more engaging way to learn Python.

00:52:09 And if you're looking for something a little more advanced, try my Write Pythonic Code course at talkpython.fm/pythonic.

00:52:17 You can find the links from this episode at talkpython.fm/episodes slash show slash 83.

00:52:23 Be sure to subscribe to the show.

00:52:25 Open your favorite podcatcher and search for Python.

00:52:27 We should be right at the top.

00:52:29 You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

00:52:38 Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

00:52:43 Corey just recently started selling his tracks on iTunes, so I recommend you check it out at talkpython.fm/music.

00:52:50 You can browse his tracks he has for sale on iTunes and listen to the full-length version of the theme song.

00:52:55 This is your host, Michael Kennedy.

00:52:57 Thanks so much for listening.

00:52:59 I really appreciate it.

00:53:00 Smix, let's get out of here.

00:53:03 Stating with my voice, there's no norm that I can fill it in.

00:53:06 Haven't been sleeping, I've been using lots of rest.

00:53:09 I'll pass the mic back to who rocked it best.

00:53:12 I'll pass the mic back to who rocked it best.

00:53:24 you

