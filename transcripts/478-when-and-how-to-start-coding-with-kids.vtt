WEBVTT

00:00:00.001 --> 00:00:04.360
Do you have kids? Maybe you have nieces or nephews? Or do you work in a school environment?

00:00:04.360 --> 00:00:08.020
Maybe it's just friends who know you're a programmer and ask about how they should go

00:00:08.020 --> 00:00:13.820
about introducing programming concepts to their kids. Anna-Lena Popkes is back on the show to

00:00:13.820 --> 00:00:19.880
share her research on when and how to teach kids programming. We spend the second half of this

00:00:19.880 --> 00:00:25.320
episode talking about concrete apps and toys you might consider for each age group. Plus,

00:00:25.320 --> 00:00:33.480
some of these are fun for adults too. This is Talk Python To Me, episode 478, recorded August 8th,

00:00:33.480 --> 00:00:52.800
2024. Welcome to Talk Python To Me, a weekly podcast on Python. This is your host, Michael Kennedy.

00:00:52.800 --> 00:00:58.060
Follow me on Mastodon where I'm @mkennedy and follow the podcast using @talkpython,

00:00:58.060 --> 00:01:04.120
both accounts over at fosstodon.org. And keep up with the show and listen to over nine years of

00:01:04.120 --> 00:01:09.840
episodes at talkpython.fm. If you want to be part of our live episodes, you can find the live streams

00:01:09.840 --> 00:01:15.660
over on YouTube. Subscribe to our YouTube channel over at talkpython.fm/youtube and get notified

00:01:15.660 --> 00:01:22.000
about upcoming shows. This episode is brought to you by WorkOS. If you're building a B2B SaaS app,

00:01:22.000 --> 00:01:26.620
at some point your customers will start asking for enterprise features like SAML authentication,

00:01:26.620 --> 00:01:32.840
SKIM provisioning, audit logs, and fine-grained authorization. WorkOS helps ship enterprise

00:01:32.840 --> 00:01:37.860
features on day one without slowing down your core product development. Find out more at

00:01:37.860 --> 00:01:45.040
Talk Python.fm slash WorkOS. And it's brought to you by us over at Talk Python Training. Did you know

00:01:45.040 --> 00:01:51.720
that we have over 270 hours of Python courses? Yeah, that's right. Check them out at talkpython.fm

00:01:51.720 --> 00:01:57.380
slash courses. Anna Lena, welcome back to Talk Python. It's awesome to have you here.

00:01:57.380 --> 00:01:58.740
Yeah, thanks for having me again.

00:01:58.740 --> 00:02:04.280
Yeah, it's always fun to have you on. You've got interesting and playful topics. I think the very

00:02:04.280 --> 00:02:08.480
first time that you were on the show, I can't remember how many years ago, but it's been a little

00:02:08.480 --> 00:02:13.960
while, was to talk about learning Python through Harry Potter. Is that right? In the magical universe.

00:02:13.960 --> 00:02:15.840
Yeah, I still love that project a lot.

00:02:15.840 --> 00:02:20.820
Yeah, people can find that on GitHub and they obviously can find that episode on talkpython.fm.

00:02:21.000 --> 00:02:44.460
But we're back for, I would say, another playful episode in a sense, right? Continuing the theme. I'm going to talk about when should you teach kids to program? And maybe even more importantly, what are some age appropriate resources that spans a good chunk of what a kid's life is? You know, like a kid, not a kid at 18. I don't know. But lower than that, a lot of resources.

00:02:44.460 --> 00:02:44.980
Exactly.

00:02:45.180 --> 00:02:52.800
Yeah, so that's going to be a lot of fun. It has been a while since you've been on the show, though. So just a quick introduction about who you are and what you do for everyone listening.

00:02:52.800 --> 00:03:10.720
Yeah, actually, not much has changed since the last episode. I think that was on Python packaging. I'm still a senior machine learning engineer at a German company called InnoVex, where I jump from project to project. I'm currently working at the speech recognition team at Bubble still. Was that last time as well? I'm not sure.

00:03:10.720 --> 00:03:11.480
I think so. I believe so.

00:03:11.520 --> 00:03:29.880
Yes. Yeah, I'm still there in the project. I love it. It's a very interesting topic. And yeah, I love Python. We have talked about different topics over the years. And this time it's on children. And talk I prepared for PyData and the PyCon here in Germany. And it was lots of fun to learn about it.

00:03:29.880 --> 00:03:31.880
Yeah, it looks like you did a lot of research.

00:03:31.880 --> 00:03:32.560
I did.

00:03:32.560 --> 00:03:57.880
To go into this. And I think it's probably worth pointing out that we both are parents. And so we have some interest in this topics, you know, close to home as well. My kids are getting a little bit older for any of this kind of guidance. But still, you know, a lot of things I thought about as they were growing up. And some of these things we're going to talk about, I've actually used, you know, before I saw them on your list as well, which is cool. But yeah, it's a personal topic, I suppose.

00:03:57.880 --> 00:04:12.820
Yeah, absolutely. For me, it's also personal, because I did not have any coding opportunities growing up myself. I really want this to be different for children growing up now and my own kids. That's also a reason why I wanted to do the research. So that would be just different.

00:04:12.880 --> 00:04:32.880
Let me know what you think. I feel like there are social stigmas, like this person should be a coder, and that person shouldn't be a coder, they should go do something else. And that may or may not be around gender, but often it is, unfortunately. But when you're six years old, you don't care. You like games, you want to play a game, you want to explore things are interesting, right?

00:04:32.880 --> 00:04:41.820
So I feel like this kind of stuff also has a big opportunity to short circuit these unnecessary influences, I guess, depending on different cultures.

00:04:41.820 --> 00:04:52.740
And also just having it in your environment, if there's like a person in your family or your friend circle, or even at school, and you have some opportunity to learn about it, it helps a lot.

00:04:52.840 --> 00:05:02.860
For me, it just wasn't a topic ever. And I still remember my parents, when I told them that I was switched to computer science in my graduate degree, they were like, are you sure you want to do that?

00:05:02.860 --> 00:05:16.580
Isn't that like very nerdy, techie stuff? And I'm so happy I did the switch, even though it was quite hard in the beginning, but it's an amazing topic. And there's so much cool stuff to do. It's just not only the nerdy stuff.

00:05:16.580 --> 00:05:22.960
It's always got something new. That's both the benefit and the curse of it. What you've learned is powerful and helpful, but there's more to learn.

00:05:22.960 --> 00:05:27.600
Yeah, always. But that makes like keeps it interesting, right? You never get bored.

00:05:27.600 --> 00:05:29.520
Exactly. Especially when JavaScript.

00:05:29.520 --> 00:05:37.700
Okay, so I feel like as your parents had that thought, you know, probably one thing they may have thought, I know, obviously, I don't know them.

00:05:37.700 --> 00:05:46.320
But a lot of people would think is that's a very antisocial sort of thing, right? Like, oh, you're going into programming, that means you're gonna sit behind a computer screen.

00:05:46.520 --> 00:05:51.020
Completely alone and not talk to people. And I think that's one of the misconceptions of programming.

00:05:51.020 --> 00:06:05.200
Yeah, absolutely. Even now, when I'm working remotely, most of the time, I have so many meetings and collaborations with other developers. And I don't ever feel not part of my team, even if I don't see them, because we interact so much.

00:06:05.580 --> 00:06:10.080
Sometimes they sit on a completely different continent, and it still feels very close.

00:06:10.080 --> 00:06:16.580
And we do love and we don't only pair code, but we like, yeah, you get to know them well.

00:06:16.580 --> 00:06:23.120
And it's lots of fun, interesting people that are not the stereotype of coders at all.

00:06:23.120 --> 00:06:24.040
Yeah, absolutely.

00:06:24.040 --> 00:06:30.360
I bring that up because I think some people listening might be attracted to the show who don't necessarily work as programmers themselves, you know?

00:06:30.420 --> 00:06:33.740
I can very, like, I can recommend it a lot. I think it's a lot of fun.

00:06:33.740 --> 00:06:34.240
Absolutely.

00:06:34.240 --> 00:06:39.780
All right. Well, we talked about some of the reasons that we're interested in this, obviously.

00:06:40.280 --> 00:06:50.000
But why? I mean, as people who like programming, we may want to communicate or share that thing we like with other kids, with our kids and so on.

00:06:50.000 --> 00:06:57.360
But I think programming also can stand in for a lot of more traditional things, such as, like, geometry and so on.

00:06:57.360 --> 00:07:01.360
Yeah, I think what I like most about it is that you can really make things.

00:07:01.360 --> 00:07:04.200
You can see them come alive and it can be a game.

00:07:04.420 --> 00:07:07.080
It can be something more math related.

00:07:07.080 --> 00:07:09.120
It can be music, websites.

00:07:09.120 --> 00:07:15.700
You can just create anything that you're interested in and even have so much fun seeing it come to life.

00:07:15.700 --> 00:07:26.600
So it's not just learning a skill, maybe for a job or your life at home or your hobbies, but it's more of like being able to create anything that you're interested in.

00:07:26.900 --> 00:07:37.240
And then, of course, you have the obvious advantages like the career opportunities and lots of skills that are taught by learning how to code that you do not think about in the beginning, I guess.

00:07:37.240 --> 00:07:38.100
Yeah, absolutely.

00:07:38.100 --> 00:07:46.340
The realism or I've created something I can see, even though it's still digital and virtual and you can't actually touch it usually unless it's like robotic or something.

00:07:46.340 --> 00:07:59.520
But that's so much more realistic and interactive than things like, oh, you're going to learn these axioms and then we're going to teach you how to, you know, prove stuff about angles and triangles with these axioms.

00:07:59.520 --> 00:08:01.080
It's going to teach you logical thinking.

00:08:01.080 --> 00:08:09.740
So, you know, sit down for the year and we're going to talk about small angles, big angles, diagonal, cross connected, all that kind of stuff.

00:08:09.740 --> 00:08:09.920
Right.

00:08:09.920 --> 00:08:13.880
Which is a little bit useful, but being able to work with computers is way more.

00:08:13.880 --> 00:08:19.200
And I think it teaches these problem solving and computational thinking skills at least as well.

00:08:19.200 --> 00:08:19.920
Yeah, absolutely.

00:08:20.340 --> 00:08:32.720
Especially what you said, like problem solving, logical thinking that kids, like not only adults, but kids especially, they understand that you have might have a complex problem you want to solve, but you can break it down into simpler steps.

00:08:32.720 --> 00:08:38.200
Like what an algorithm is actually doing, giving you a step by step path to reaching a goal.

00:08:38.200 --> 00:08:49.620
You can teach that not only by coding, also, of course, by just playing and seeing you want to build this huge Lego piece, but you start building it with little pieces and put it all together.

00:08:50.000 --> 00:08:51.460
And that's also what you have in coding.

00:08:51.460 --> 00:08:52.660
You want to reach a goal.

00:08:52.660 --> 00:08:58.940
You want to program a game or maybe create an animation and you understand how to break it down.

00:08:58.940 --> 00:09:02.340
It helps us or also kids to make more structured decisions.

00:09:02.340 --> 00:09:07.280
I think that's a very valuable skill to learn, not only for coding, but for everyday life, I guess.

00:09:07.280 --> 00:09:08.960
You want to break problems down and solve them.

00:09:08.960 --> 00:09:09.300
It helps.

00:09:09.300 --> 00:09:10.640
That's like adulthood right there.

00:09:10.640 --> 00:09:16.420
What I also find really helpful is one of the skills I looked at specifically is perseverance.

00:09:16.420 --> 00:09:19.460
Also for kids, they get frustrated so easily.

00:09:19.660 --> 00:09:22.060
And give up and say like, this is not working.

00:09:22.060 --> 00:09:22.940
I don't like this.

00:09:22.940 --> 00:09:23.840
Like, I hate this.

00:09:23.840 --> 00:09:25.940
And start throwing their toys around.

00:09:25.940 --> 00:09:27.520
At least we are at this stage.

00:09:27.520 --> 00:09:30.360
Your kids are probably not doing that anymore.

00:09:30.360 --> 00:09:35.280
But yeah, I think with coding, when you encourage them to keep going,

00:09:35.280 --> 00:09:40.340
even or especially when they fail, that they understand that failure isn't something bad,

00:09:40.340 --> 00:09:42.460
but rather it keeps you improving.

00:09:42.460 --> 00:09:49.600
It keeps you going and that you can learn to see challenges or problems at something positive

00:09:49.600 --> 00:09:51.620
and something you can grow with.

00:09:51.620 --> 00:09:56.560
I think that's really, really great about coding because you will have that a lot when you learn

00:09:56.560 --> 00:09:57.080
how to code.

00:09:57.300 --> 00:09:58.940
Yeah, I absolutely agree with you.

00:09:58.940 --> 00:10:02.940
In the problem, this perseverance skill is incredibly important.

00:10:02.940 --> 00:10:03.620
I agree.

00:10:03.620 --> 00:10:06.780
It manifests itself a little bit differently as they get older.

00:10:06.780 --> 00:10:10.740
Instead of going, I dislike this, you know, like these are those toys crap.

00:10:10.740 --> 00:10:12.420
I can't make it do its thing or whatever.

00:10:12.420 --> 00:10:14.700
It's more, I can't do this.

00:10:14.700 --> 00:10:15.860
I'm not good at this.

00:10:15.860 --> 00:10:20.440
And a really important skill, I think, is not, I can't do this.

00:10:20.440 --> 00:10:23.200
Like, I need to work at being good at this.

00:10:23.200 --> 00:10:25.080
And that perseverance that you learn.

00:10:25.080 --> 00:10:29.700
Honestly, I think one of the very most important skills that people can have as a programmer

00:10:29.700 --> 00:10:33.160
or in software development in general is perseverance.

00:10:33.160 --> 00:10:34.420
Like, it doesn't work.

00:10:34.420 --> 00:10:35.200
I read the docs.

00:10:35.200 --> 00:10:36.320
It still doesn't work.

00:10:36.320 --> 00:10:37.620
I read Stack Overflow.

00:10:37.620 --> 00:10:38.540
People were mean.

00:10:38.540 --> 00:10:39.520
Still didn't help me.

00:10:39.520 --> 00:10:42.080
But eventually, I worked my way and now it works.

00:10:42.080 --> 00:10:44.800
And it's such a cool feeling to work through those things.

00:10:44.800 --> 00:10:49.060
But until you learn the perseverance, you just think, well, I wasn't good at math.

00:10:49.060 --> 00:10:50.080
I must not be good at programming.

00:10:50.080 --> 00:10:50.500
I'm out.

00:10:50.500 --> 00:10:50.720
Yeah.

00:10:50.720 --> 00:10:55.980
I think that keeps a lot from a lot of children to learn or to like learning things that are

00:10:55.980 --> 00:10:56.280
hard.

00:10:56.280 --> 00:11:00.980
Lots of kids struggle with math and yes, like STEM classes.

00:11:00.980 --> 00:11:06.340
But I think it's often because they feel like I don't understand this might also not be explained

00:11:06.340 --> 00:11:10.540
in the best way, but they just shut down and say, okay, I'm just not going to try.

00:11:10.540 --> 00:11:16.760
And if you understand and maybe also, I know that there's this huge psychological research

00:11:16.760 --> 00:11:24.180
on growth mindset that you understand that you shouldn't praise just an outcome, but rather

00:11:24.180 --> 00:11:27.320
the effort that kids try to do something.

00:11:27.320 --> 00:11:32.620
They try to improve and put in the work that that's just so much more important than reaching

00:11:32.620 --> 00:11:33.620
the goal in the end.

00:11:33.860 --> 00:11:33.920
Yeah.

00:11:33.920 --> 00:11:34.140
Yeah.

00:11:34.140 --> 00:11:40.580
We can really help our kids to become more robust and more joyful about learning by

00:11:40.580 --> 00:11:44.220
teaching these principles, for example, through learning how to code.

00:11:45.820 --> 00:11:48.900
This portion of Talk By The Namedy is brought to you by WorkOS.

00:11:48.900 --> 00:11:53.320
If you're building a B2B SaaS app, at some point, your customers will start asking for

00:11:53.320 --> 00:11:59.020
enterprise features like SAML authentication, skim provisioning, autologs, and fine-grained

00:11:59.020 --> 00:11:59.600
authorization.

00:11:59.600 --> 00:12:04.900
That's where WorkOS comes in with easy to use APIs that'll help you ship enterprise features

00:12:04.900 --> 00:12:08.720
on day one without slowing down your core product development.

00:12:08.720 --> 00:12:14.120
Today, some of the fastest growing startups in the world are powered by WorkOS, including

00:12:14.120 --> 00:12:17.100
ones you probably know, like Perplexity, Vercel, and Webflow.

00:12:17.100 --> 00:12:23.420
WorkOS also provides a generous free tier of up to 1 million monthly active users for AuthKit,

00:12:23.420 --> 00:12:26.800
making it the perfect authentication layer for growing companies.

00:12:26.800 --> 00:12:32.200
It comes standard with useful features like RBAC, MFA, and bot protection.

00:12:32.200 --> 00:12:37.300
If you're currently looking to build SSO for your first enterprise customer, you should consider

00:12:37.300 --> 00:12:38.220
using WorkOS.

00:12:38.220 --> 00:12:42.380
Integrate in minutes and start shipping enterprise plans today.

00:12:42.380 --> 00:12:45.680
Just visit talkpython.fm/workOS.

00:12:45.680 --> 00:12:47.680
The link is in your podcast player show notes.

00:12:47.680 --> 00:12:49.900
Thank you to WorkOS for supporting the show.

00:12:49.900 --> 00:12:56.100
Now, you did give this as this topic as a talk at PyData.

00:12:56.100 --> 00:12:57.080
Was that PyData Berlin?

00:12:57.080 --> 00:12:57.620
Where was it?

00:12:57.620 --> 00:13:03.260
And I gave it once at PyData London and at PyCon Berlin and at Europy.

00:13:03.260 --> 00:13:03.720
Okay.

00:13:03.720 --> 00:13:04.160
Yeah.

00:13:04.220 --> 00:13:08.540
So the reason I was going to bring that up is you had some really cool pictures.

00:13:08.540 --> 00:13:09.840
Yeah, I know.

00:13:09.840 --> 00:13:15.640
You'd come up with and like a little persistent kid working away there and stuff like that,

00:13:15.640 --> 00:13:15.800
right?

00:13:15.800 --> 00:13:16.720
Oh, I loved them.

00:13:16.720 --> 00:13:17.660
I loved creating them.

00:13:17.660 --> 00:13:20.120
I used Deli 3 to create them.

00:13:20.120 --> 00:13:24.660
And I spent so much time just playing around with a model and providing it prompts to see

00:13:24.660 --> 00:13:26.580
which images I liked best.

00:13:26.880 --> 00:13:30.780
Of course, there were the obvious problems with some of them that the kids had six fingers

00:13:30.780 --> 00:13:31.620
and so on.

00:13:31.620 --> 00:13:35.140
But still, it was amazing to create these images.

00:13:35.140 --> 00:13:37.060
And I loved the Perseverance one.

00:13:37.060 --> 00:13:41.520
And we can link the article to my blog later where you can see the image.

00:13:41.520 --> 00:13:44.300
It's just everyone laughs when they see the picture.

00:13:44.560 --> 00:13:45.420
Yeah, the pictures are great.

00:13:45.420 --> 00:13:46.140
The pictures are great.

00:13:46.140 --> 00:13:46.420
All right.

00:13:46.420 --> 00:13:52.540
Let's talk for a minute about brain development and maybe the different stages that kids go

00:13:52.540 --> 00:13:57.820
through because there's kind of four or five stages, which then you might map over to the

00:13:57.820 --> 00:13:59.840
different types of resources that we're going to talk about.

00:13:59.840 --> 00:14:01.900
Yeah, I think that's a really important topic to consider.

00:14:01.900 --> 00:14:06.300
If you want to understand when your child is able to do certain things, then you need to

00:14:06.300 --> 00:14:11.440
be able to understand how their brain develops because our brain matures over time.

00:14:11.440 --> 00:14:15.320
It's not fully mature at birth, but quite the opposite.

00:14:15.320 --> 00:14:20.820
And some regions of the brain take more time to develop and some like vision and hearing are

00:14:20.820 --> 00:14:22.540
quite well developed already at birth.

00:14:22.540 --> 00:14:29.960
So at certain ages, it does make sense to start coding, for example, from zero to four.

00:14:29.960 --> 00:14:35.880
And there is not much there for them to really have the cognitive abilities to understand

00:14:35.880 --> 00:14:40.280
computational principles or really sit down and concentrate and focus.

00:14:40.440 --> 00:14:46.140
Yeah, for example, at birth, you have quite a lot of neurons already, but just 25% of the

00:14:46.140 --> 00:14:46.960
adult size brain.

00:14:46.960 --> 00:14:49.820
And when you reach the age of four, you already have 80%.

00:14:49.820 --> 00:14:53.180
So it has grown a lot through the first four years.

00:14:53.180 --> 00:14:57.600
And you do have a lot of influence as a parent or caregiver, friend, whatever.

00:14:57.600 --> 00:15:04.160
Mostly the primitive areas of the brain develop first, like hearing, vision, emotional regulation

00:15:04.160 --> 00:15:10.560
starts developing, but really cognitive and executive functions like planning and so on come later.

00:15:10.560 --> 00:15:14.960
So I guess zero to four years would be or birth would be the first stage.

00:15:14.960 --> 00:15:20.720
And then zero to four years where you have lots of things happening and you can influence that

00:15:20.720 --> 00:15:28.220
by positive influences from like responsive caregiving, that you have diverse learning experiences and

00:15:28.220 --> 00:15:33.720
playing with a child. And then at four years, it gets starts getting interesting. And that's also

00:15:33.720 --> 00:15:40.660
where you can start doing things with your kid. Like, do you want to rather talk about the

00:15:40.660 --> 00:15:42.440
development first and then about...

00:15:42.440 --> 00:15:45.200
Maybe we should talk about the resources that go with each stage. What do you think?

00:15:45.200 --> 00:15:45.500
Yeah.

00:15:45.500 --> 00:15:47.280
Yeah, let's do that. So yeah, I do too.

00:15:47.420 --> 00:15:53.120
Since we already reached age four now. Oh yeah, nice. Yeah. So at age four, you can teach basic

00:15:53.120 --> 00:15:58.520
algorithmic thinking. You can ask questions like, what would you do to guide a lost puppy home? Just

00:15:58.520 --> 00:16:05.560
making them start to think about how to break down problems into smaller steps. But also they have

00:16:05.560 --> 00:16:11.600
the motor skills at that age and the perceptual abilities to interact with simple toys that teach

00:16:11.600 --> 00:16:17.080
the basics of coding. And you open the BeeBot, which is a tiny floor robot, or I guess it's not so

00:16:17.080 --> 00:16:23.540
tiny. It's a Bee and it has four directions to go. Front, back, right, left. I think it can remember

00:16:23.540 --> 00:16:31.880
up to 130 commands and you can press go and program the way it's supposed to crawl or walk, however you

00:16:31.880 --> 00:16:32.600
want to phrase it.

00:16:32.600 --> 00:16:37.820
Yeah. So one thing you might do with this thing is... So this is a little robot that has wheels.

00:16:37.820 --> 00:16:42.760
It looks like a Bee. What you do is you push the buttons like forward, forward, right, forward,

00:16:42.760 --> 00:16:46.740
left, forward, forward. And you might put out something on the ground, like a little

00:16:46.740 --> 00:16:53.200
like, can you make your Bee go around this thing and then through this little gate or whatever,

00:16:53.200 --> 00:16:54.900
right? Those kinds of challenges.

00:16:54.900 --> 00:17:00.740
I think even when you purchase them, you can purchase rucks that have certain paths on them

00:17:00.740 --> 00:17:02.200
and so on. I guess it's a very...

00:17:02.200 --> 00:17:02.940
Right.

00:17:02.940 --> 00:17:09.460
You can spend a lot of money on these kinds of toys. But maybe as a side note, if you start looking,

00:17:09.460 --> 00:17:15.520
you will find tons of robots in different price ranges. So I guess we will only mention examples.

00:17:15.520 --> 00:17:20.120
But if you start looking, you will definitely find lots of different options.

00:17:20.120 --> 00:17:25.800
Yeah. Yeah, absolutely. Would you say that this RoboTurtles game falls into the same category?

00:17:25.800 --> 00:17:27.180
Or is that a little bit older?

00:17:27.180 --> 00:17:31.700
Oh, I'm not sure from the top of my head if it's older. What I like about it is that it's a board

00:17:31.700 --> 00:17:36.360
game. So that's... I'm always asked about screen-free offers. So something that you can play

00:17:36.360 --> 00:17:42.220
without sitting in front of the laptop because screen time is just a general huge discussion

00:17:42.220 --> 00:17:44.100
point. I would have to look up.

00:17:44.100 --> 00:17:48.080
So if I... Yeah, looking at the box here, it says ages four and up. So probably.

00:17:48.080 --> 00:17:49.900
Oh, nice. That's really cool. Yeah.

00:17:49.960 --> 00:17:54.700
Yeah. So this one is... I think it's almost exactly the same problem. There's a little bit

00:17:54.700 --> 00:17:59.720
more to it because there's a couple of challenges in the board game. So I think we actually have this

00:17:59.720 --> 00:18:04.800
board game from when my daughter was young. And you have a little turtle, which is a card and a board,

00:18:04.800 --> 00:18:09.420
and you can put stuff on the board like little rocks. It's... It can't go through. Maybe there's

00:18:09.420 --> 00:18:14.220
like an ice wall and it has ability to like melt the ice, but it has to do that before it can move

00:18:14.220 --> 00:18:18.240
forward. You know, so you get a bunch of cards and you put them in a stack and then you like

00:18:18.240 --> 00:18:23.140
play them out to see if your turtle wins the game or something like that. So this is another

00:18:23.140 --> 00:18:26.940
pretty good option at that age, especially if you want something not electronic.

00:18:26.940 --> 00:18:31.660
What I also like about it is that it becomes a family activity that you learn. That's just in

00:18:31.660 --> 00:18:36.680
general, a very good thing if you want to teach your kids how to code, that you make learning a fun

00:18:36.680 --> 00:18:42.380
activity and playing games, being with them, showing interest and yeah, having fun doing it

00:18:42.380 --> 00:18:48.480
like as part of gaming or what you do at home, playing board games. That's just a very easy way

00:18:48.480 --> 00:18:52.860
then to get started and to get them interesting. I should point out like the actual Robot Turtles

00:18:52.860 --> 00:18:59.560
website has a bad SSL certificate right now. So I'm sure you can find it on like Amazon and other places,

00:18:59.560 --> 00:19:05.740
but it's... Yeah, I'm sure. Okay. So what else? Another one you talked about is Cubelets,

00:19:05.740 --> 00:19:09.440
but this field, I guess, might be a little bit older. Cubelets, it's... Well, you can start

00:19:09.440 --> 00:19:14.840
early with them, but you can also use them at a later stage because you can program them using

00:19:14.840 --> 00:19:21.480
visual coding languages or one of them may code, but you can start quite early. These like Cubelets

00:19:21.480 --> 00:19:27.300
are small physical blocks. As you can see there that you just plug together and some of them move,

00:19:27.300 --> 00:19:33.600
some have cameras or sensors, and you can build lots of cool, unique robots with them. And if you start

00:19:33.600 --> 00:19:40.140
looking at demos on YouTube, it's really amazing how cool they can look, the end robot. I think one

00:19:40.140 --> 00:19:46.720
disadvantage of this is that it's quite expensive. So one of these blocks is about 50 euros or maybe

00:19:46.720 --> 00:19:54.160
$45, $50. So if you want to build big robots and have lots of options, then you need to invest quite a

00:19:54.160 --> 00:19:54.700
bit of money.

00:19:54.700 --> 00:19:58.160
Yeah. I like that the website says free shipping on orders over 50. It's like,

00:19:58.160 --> 00:20:01.740
okay, pretty much anything. It sounds like.

00:20:01.740 --> 00:20:07.320
Yeah, I guess. But I still, I still, I love it because it makes you like be creative,

00:20:07.320 --> 00:20:12.520
especially having this aspect that you can program them later on using MakeCode. That's one of the

00:20:12.520 --> 00:20:17.900
visual programming language. I think that's the run for Microsoft. You can keep using them over a long

00:20:17.900 --> 00:20:18.660
period of time.

00:20:18.660 --> 00:20:23.960
Yeah. For maybe a mental model for people who haven't seen these in action, because even look

00:20:23.960 --> 00:20:27.780
in the website, you don't know, like, what do I do with these things again? Why are they here? I feel

00:20:27.780 --> 00:20:32.060
like they should have maybe a little animation or something, but there's these cubes as the name

00:20:32.060 --> 00:20:38.640
would imply, but they're almost like Lego blocks that each block is programmable. And then you combine

00:20:38.640 --> 00:20:40.940
them into a thing that does stuff, right?

00:20:40.940 --> 00:20:42.060
I think you explained it well.

00:20:42.060 --> 00:20:47.160
Yeah. Thanks. So I think that that's pretty interesting, but this is probably in the next stage,

00:20:47.160 --> 00:20:50.620
right? The next stage would be maybe six to nine. What do you think?

00:20:50.620 --> 00:20:55.880
Yeah, exactly. I think the next stage regarding development would be around six to nine. Of course,

00:20:55.880 --> 00:21:01.860
you also always have to mention it's, this is now for normally developing children. It's just an

00:21:01.860 --> 00:21:07.000
average. Every child is different. So if you observe your child, you know, which skills develop at what

00:21:07.000 --> 00:21:12.960
point and what might be easier for them, what is harder. So this is not like hard ranges, but yeah,

00:21:12.960 --> 00:21:19.760
if you start with about six years of age, you can start using visual programming tools because kids

00:21:19.760 --> 00:21:25.380
become more used to using technology. They have a better hand eye coordination. And also one very

00:21:25.380 --> 00:21:31.060
important part of the brain, the prefrontal cortex, it's like the CEO of our brain, has a big growth spurt

00:21:31.060 --> 00:21:37.840
between five and eight. And this improves working memory, planning, attention, and all kinds of mechanisms

00:21:37.840 --> 00:21:43.540
that you need to start really sitting down and code. And you already opened Scratch Junior.

00:21:43.540 --> 00:21:50.960
Yeah. And Scratch Junior is, I think Scratch is quite popular, one of the most popular visual coding

00:21:50.960 --> 00:21:56.060
languages. And Scratch Junior is just a simplified version of it for very young children starting at

00:21:56.060 --> 00:22:06.540
five to seven. So it has no text, but rather actions like movement. And visual programming in general,

00:22:06.540 --> 00:22:12.800
you have puzzle pieces to represent concepts like loops usually, or I don't know, variables,

00:22:12.800 --> 00:22:18.900
logical expressions, and you can plug them together. So you don't have to worry about syntax or using the

00:22:18.900 --> 00:22:24.120
command line. You just create these programs by putting together puzzle pieces. So that's,

00:22:24.120 --> 00:22:29.400
and that happens on a visual interface. So that's what visual programming is about.

00:22:29.400 --> 00:22:36.320
And Scratch Junior is just a very simple version. I think it's just a free app you can play on tablet

00:22:36.320 --> 00:22:40.660
and create little programs where the characters move around and do things.

00:22:40.660 --> 00:22:46.440
Kind of like the bee, but you more look a little closer to real programming, but then you see the output,

00:22:46.440 --> 00:22:46.720
right?

00:22:46.720 --> 00:22:52.960
Yeah. And you start really using, I guess, these plug-in principles that you have the blocks that you put

00:22:52.960 --> 00:22:57.760
together. So when you go on to, for example, Scratch or another of the visual programming languages,

00:22:57.760 --> 00:23:01.620
you're already, you have knowledge about how it works in general, I guess.

00:23:01.620 --> 00:23:06.040
As I look at this website, I was thinking, you know, when I think about coding, I think about

00:23:06.040 --> 00:23:14.260
computers, Mac, Windows, whatever, with apps. But obviously, young kids are way more in tune with

00:23:14.260 --> 00:23:17.740
touch devices like iPads and Android tablets and stuff, right?

00:23:17.740 --> 00:23:23.380
It's amazing how quickly they adapt and learn it. I think it's quite, sometimes I'm blown away by how

00:23:23.380 --> 00:23:28.800
young children can already understand how to swipe and select stuff on a touch screen.

00:23:28.800 --> 00:23:34.620
I think actually it probably lowers the age by quite a bit that kids are able to do this kind of stuff

00:23:34.620 --> 00:23:37.640
because these touch interfaces exist in decent ways.

00:23:37.780 --> 00:23:42.680
Yeah, absolutely. Just learning how to type is actually one of the main reasons why you can

00:23:42.680 --> 00:23:48.920
only start with textual programming later because typing is hard. You need to learn how to do it.

00:23:48.920 --> 00:23:51.940
Just touching and dragging and dropping is much easier.

00:23:51.940 --> 00:23:57.420
When my older kids were very young, we wanted to have them work with things like this and just

00:23:57.420 --> 00:24:01.380
learn how to use computers. And they, this predated the iPhone, like it didn't exist.

00:24:01.380 --> 00:24:07.880
There was no meaningful touch screens that really you would want to use. And so we got like, kind of like you get a

00:24:07.880 --> 00:24:13.620
typing program to learn to touch type. We got a mousing program and there was like a little airplane and they

00:24:13.620 --> 00:24:18.920
had to like chase the airplane around with the mouse to learn how the eye hand coordination of mouse and then like

00:24:18.920 --> 00:24:25.240
screen, right? When you're three or four years old, like that's not natural, right? But touching, they already be all over that.

00:24:25.240 --> 00:24:33.460
I think sometimes it's even too intuitive for them that it starts having like having a very huge influence

00:24:33.460 --> 00:24:36.360
on them way too early, but I guess that's a different discussion.

00:24:36.360 --> 00:24:40.660
Yeah, that's a different problem. That sends you back to a robot turtle board game.

00:24:40.660 --> 00:24:41.900
Yeah, exactly.

00:24:41.900 --> 00:24:48.700
This portion of Talk Python To Me is brought to you by us. I mentioned at the top of the show that we have a

00:24:48.700 --> 00:24:54.820
wide range of courses focusing on core topics such as getting started with Python and advanced ones like

00:24:54.820 --> 00:25:01.280
APIs, async programming, and deep diving into Python's memory management and more. But did you know that

00:25:01.280 --> 00:25:06.440
we have a set of world-class apps that you can use in addition to our web platform for taking our courses?

00:25:06.440 --> 00:25:11.960
If you're using a tablet or even a phone, apps are clearly the best option, but there are other

00:25:11.960 --> 00:25:18.540
reasons to check them out as well at talkpython.fm/apps. Our mobile apps offer offline playback,

00:25:18.540 --> 00:25:24.640
which allows you to download portions or even complete courses. We hear from users who learn on the

00:25:24.640 --> 00:25:29.740
way to work on the subway, where connectivity is tricky, as well as to those who have secure

00:25:29.740 --> 00:25:34.480
environments that don't allow them to connect personal devices or which have limited connectivity.

00:25:34.480 --> 00:25:39.960
And even though I've done a ton of work to make our video delivery excellent, no matter your location

00:25:39.960 --> 00:25:45.820
in the world, there are still places with very slow internet. Downloading a course and then watching

00:25:45.820 --> 00:25:51.860
it without pauses is a really great use case as well. The app is 100% free and it includes eight free

00:25:51.860 --> 00:25:58.060
courses that are a single tap away. So give it a try at talkpython.fm/apps. Now back to the show.

00:25:58.060 --> 00:26:04.820
A little bit later, we could do, once you start doing this, some kind of programming language,

00:26:04.820 --> 00:26:10.800
then that opens up a bunch of resources, right? So obviously Scratch is sort of the way more full

00:26:10.800 --> 00:26:14.080
featured version of Scratch and Junior. That's pretty neat.

00:26:14.080 --> 00:26:19.680
Yeah, I think Scratch is amazing because I think for kids, it's great. I know lots of adults that still

00:26:19.680 --> 00:26:25.260
use it for some projects where you really want to make it come alive because Scratch is focused on

00:26:25.260 --> 00:26:35.440
having really cool, interactive, fun projects. They have sounds, music, you can add graphics, and it just

00:26:35.440 --> 00:26:41.460
offers a lot of functionality to create your project, share them with friends. And there is a ton of

00:26:41.460 --> 00:26:48.040
resources on learning Scratch. And as you can see here, like make music, create a story, create a

00:26:48.040 --> 00:26:53.640
character. I guess your possibilities are endless. Yeah, it looks really, actually, I didn't realize all

00:26:53.640 --> 00:26:58.420
the stuff they got going on here. They have a bunch of tutorials, free coding community. Super cool.

00:26:58.420 --> 00:27:02.380
Then I guess just while we're talking on these visual programming languages, we could talk about

00:27:02.380 --> 00:27:08.400
Blockly, right? Yeah. When I, like I knew Blockly existed, it was also free, like Scratch is also

00:27:08.400 --> 00:27:14.020
free. I guess that's important to mention. And Blockly is actually at the basis of most of the

00:27:14.020 --> 00:27:20.200
other visual languages. For example, it is actually like block-based languages like Scratch and MakeCode

00:27:20.200 --> 00:27:26.780
are based on Blockly. Blockly is developed by Google. And with Blockly, it's, I think it's for a bit older

00:27:26.780 --> 00:27:31.940
kids because it's more low level. If you can say that, it offers you more flexibility.

00:27:31.940 --> 00:27:37.640
You see the code next to the blocks. You see it in an editor, how it actually looks like,

00:27:37.640 --> 00:27:44.180
and you could copy-paste the code into like a normal editor and run it. It's more low level,

00:27:44.180 --> 00:27:50.240
but also somewhat more sophisticated, the editor that you have it more, it looks more like coding

00:27:50.240 --> 00:27:51.960
to me than Scratch.

00:27:51.960 --> 00:27:56.340
Maybe the way to think about it, you see this more low level. I would say each block almost

00:27:56.340 --> 00:28:04.400
corresponds to a single symbol of code, almost, right? Like you have a set variable too, then you

00:28:04.400 --> 00:28:08.420
put another block on, which is the value. And then, you know, you've got your visual editor,

00:28:08.420 --> 00:28:13.500
but then side by side, you have your JavaScript, or I imagine you could probably see Python or other

00:28:13.500 --> 00:28:16.320
languages if you, there's a dropdown for choosing the output language.

00:28:16.320 --> 00:28:19.880
Yeah. You can use JavaScript, Python, PHP, Lua, or Dart.

00:28:20.040 --> 00:28:23.480
Yeah. So that's kind of getting a little farther up there. And maybe we could talk

00:28:23.480 --> 00:28:29.620
a bit about the hardware side, because that's one way that it actually can be something you can touch

00:28:29.620 --> 00:28:31.800
and feel. And as you interact with these ideas, right?

00:28:31.800 --> 00:28:36.840
I know that that's nothing I ever used, but my brother started using it. Like I know that he

00:28:36.840 --> 00:28:42.060
bought a Raspberry Pi. You open now the microbit, which is like a smaller programmable device.

00:28:42.060 --> 00:28:47.860
And the Raspberry Pi would be like full-fledged computer in a tiny device. But yeah, you can

00:28:47.860 --> 00:28:54.720
learn a lot about hardware and also coding by having such devices. And the microbit has displays,

00:28:54.720 --> 00:28:59.220
buttons, sensors, and you can program it using MakeCode, one of the other visual programming

00:28:59.220 --> 00:29:05.180
languages. And I think it's quite cheap compared to other devices. Like a Raspberry Pi is, I think it's

00:29:05.180 --> 00:29:12.180
not expensive for having all these abilities or these capabilities, but the microbit is, I guess,

00:29:12.180 --> 00:29:16.160
more affordable for lots of people. Oh yeah, nice. There you can see how it works.

00:29:16.160 --> 00:29:22.780
And you know what's really interesting is if you go to makecode.microbit.org, even if you don't have

00:29:22.780 --> 00:29:29.920
one of these devices, it comes with a little emulator and then it has a virtual microbit that you can write

00:29:29.920 --> 00:29:36.960
code against. And it gives you an option as well to choose Python or Blockly or some other way of

00:29:36.960 --> 00:29:41.100
working with it, which is pretty cool. Exactly. That's also why it's recommended for children,

00:29:41.100 --> 00:29:46.040
like officially it's recommended for children at the age of eight or older. And Blockly, I think,

00:29:46.040 --> 00:29:52.420
is even recommended for kids starting at 10, whereas Scratch is for even younger children, right? They say

00:29:52.420 --> 00:29:57.580
you can get started at eight. And they say what I think, which is funny, they say it's up to 16,

00:29:57.580 --> 00:30:03.120
which doesn't make sense to me. Why would there be an upper limit? But yeah, anyway, you can still

00:30:03.120 --> 00:30:08.820
use it. You have to do C++ now. Yes, exactly. What is great about visual programming is that you can

00:30:08.820 --> 00:30:14.100
always come back to it. It's not that you progress from these robots to visual programming to textual

00:30:14.100 --> 00:30:20.220
programming, but you can use visual programming for doing, I don't know, digital stories and you can

00:30:20.220 --> 00:30:25.480
still do textual programming at work. It's just having all these options now is really nice. Yeah,

00:30:25.480 --> 00:30:30.720
absolutely. Let's see. We also have Zumi. Zumi is pretty cool. Let's come back to Zumi. I do want

00:30:30.720 --> 00:30:35.500
to talk about something that's like a little bit more real similar to the micro bit first is many of

00:30:35.500 --> 00:30:41.820
the things over at Adafruit. Are you a fan of Adafruit? I don't know Adafruit. Tell me about it. So this is a

00:30:41.820 --> 00:30:49.480
company that creates a whole bunch of small devices like the BBC micro bit that run CircuitPython. There's

00:30:49.480 --> 00:30:55.760
just tons and tons of things you can buy. You can buy little sensors and you can buy little

00:30:55.760 --> 00:31:00.960
displays or whatever it is that you're looking for. And there's just many, many little ways to make

00:31:00.960 --> 00:31:06.560
these projects a little bit more than a micro bit. So for example, you could get one of these ESP32

00:31:06.560 --> 00:31:13.660
devices, but it has like a little tiny display on it that you can output your text to. And it costs

00:31:13.660 --> 00:31:20.780
$19, which is pretty ridiculous. And they often come with tutorials on how to do it. So if you're

00:31:20.780 --> 00:31:24.260
into this kind of stuff, this is like a perfect place to go look.

00:31:24.260 --> 00:31:29.960
Also, there's just so much opportunity to learn, even for like being the parent, I would learn so

00:31:29.960 --> 00:31:36.380
much from doing this. It would be so valuable to me to learn more about the hardware side of things,

00:31:36.380 --> 00:31:41.880
especially because I would never sit down and buy myself a Raspberry Pi. I don't know why,

00:31:41.880 --> 00:31:45.380
but I wouldn't do it. Just don't find the time. But if I can do it...

00:31:45.380 --> 00:31:46.600
You already have a computer and all that.

00:31:46.600 --> 00:31:51.420
Yeah. And if I can do it together with my children, I think that's just amazing. It's really cool.

00:31:51.420 --> 00:31:56.420
This is just a general thing about learning with kids. If you learn together with them,

00:31:56.420 --> 00:32:01.980
they can also be the expert sometimes, which is amazing for kids. If they can explain something

00:32:01.980 --> 00:32:08.660
to you that they understand better, it gives them so much joy and helps them develop this passion and

00:32:08.660 --> 00:32:13.900
love for learning. I think that's a great thing about learning how to code that doesn't matter if

00:32:13.900 --> 00:32:18.700
you are the best coder, but you can just use it as a way to improve yourself.

00:32:18.700 --> 00:32:23.860
Yeah. And once they get that mastery, they're like, oh, now I've gone beyond them. It's probably a

00:32:23.860 --> 00:32:24.440
really good feeling.

00:32:24.440 --> 00:32:31.140
If my kids want to learn how to code early, like much earlier than myself, they will become so much

00:32:31.140 --> 00:32:32.980
better than me so quickly.

00:32:32.980 --> 00:32:37.300
Yeah, for sure. I have one of these little devices here. You put it in your hand. It's

00:32:37.300 --> 00:32:43.220
certainly smaller than the palm of my hand. And this thing manages the DNS and ad blocking on my

00:32:43.220 --> 00:32:49.300
network. It was like 20 bucks or something. Yeah. There's sort of less playful, more interesting.

00:32:49.300 --> 00:32:52.520
Also just, you know, utilitarian things you can do with these little things.

00:32:52.520 --> 00:32:53.120
Yeah, absolutely.

00:32:53.360 --> 00:32:58.420
All right. Back to Zoomy, which is in the same age category, I would say. This is like around 10 years

00:32:58.420 --> 00:32:58.980
or so. Yeah.

00:32:58.980 --> 00:33:00.640
But it's more robot-like, right?

00:33:00.640 --> 00:33:06.860
Yeah, exactly. Like it's a self-driving car kit. Like it's a small car and it has so many

00:33:06.860 --> 00:33:12.900
capabilities. You can program it using Python and Blockly. You can even teach it about driving

00:33:12.900 --> 00:33:18.620
certain ways by providing your own data sets. So there is a lot of machine learning. Even you can

00:33:18.620 --> 00:33:26.640
teach it. It offers so many capabilities or ways to create projects. At my company, we have done quite

00:33:26.640 --> 00:33:31.980
a few workshops with kids with Zoomy and they love doing it. And adults love doing it too.

00:33:31.980 --> 00:33:38.500
Nice. It's like a self-driving car kit. So if you wanted to try to, instead of maybe teaching it,

00:33:38.500 --> 00:33:42.780
you go forward three steps, you turn right, you go forward two steps, you turn left, you teach it.

00:33:42.780 --> 00:33:46.540
If you see a turn left sign, you turn left or something like that, right?

00:33:46.540 --> 00:33:50.080
Exactly. Yeah. It can really understand or analyze its environment.

00:33:50.080 --> 00:33:53.620
Yeah. That's pretty awesome. Okay. And you do events with these?

00:33:53.740 --> 00:33:59.340
Yes. That's also maybe advice for people that want to get started. It's always useful to check

00:33:59.340 --> 00:34:05.300
out local events that happen at companies that are close to where you live or universities. They do

00:34:05.300 --> 00:34:10.660
offer a lot of free, often offer free workshops for kids where you can sign them up to learn about

00:34:10.660 --> 00:34:18.120
robotics or coding. And it's can be like an easy way to get them started if you find it hard to do it

00:34:18.120 --> 00:34:24.780
yourself. Yeah. I think a lot, at least in the U S there's quite a few programs for like summer teen

00:34:24.780 --> 00:34:31.420
programs that do like either 3d printing or, you know, coding with, you know, Lego robots or whatever.

00:34:31.420 --> 00:34:33.800
So there's a lot of summer camps and that type of things.

00:34:33.800 --> 00:34:39.200
Yeah. I guess that's very big in the U S and Germany. I think not so much, maybe it's growing,

00:34:39.320 --> 00:34:46.240
but yeah, you can definitely spend a lot of time doing it. And I know that like we at our company,

00:34:46.240 --> 00:34:53.740
we sometimes offer day workshops where you can just start getting to know about a topic or just play

00:34:53.740 --> 00:34:57.780
around with things, becoming kids interested in the topic in the first place.

00:34:57.980 --> 00:35:02.420
Yeah. That's really neat. Last in the category of hardware here, you already mentioned it though,

00:35:02.420 --> 00:35:07.400
is a Raspberry Pi, which I guess is a little closer to just a real computer, right?

00:35:07.400 --> 00:35:13.540
Yeah. It's a really powerful device. So it's basically a very small and cheap computer that

00:35:13.540 --> 00:35:19.280
runs Linux, but you can use it to learn coding, but you can also build hardware projects with it,

00:35:19.280 --> 00:35:25.240
do home automation, learn about the internet of things, but it's recommended for kids starting at 11

00:35:25.240 --> 00:35:30.320
years. So quite a bit older because you need programming. This maybe also shifts over to the

00:35:30.320 --> 00:35:37.820
next age range, namely when your kids have typing skills and also a more well-developed cognitive

00:35:37.820 --> 00:35:44.700
abilities and the prefrontal cortex, which I talked about the CEO of the brain, the development starts

00:35:44.700 --> 00:35:50.460
to mature and stabilize. So planning, organizing, thinking abstractly, all these skills become more

00:35:50.460 --> 00:35:55.140
fully developed. And you of course need the typing skills to get started with textual coding.

00:35:55.140 --> 00:36:01.880
So at the age nine plus, most of the time you can get started with these things, for example,

00:36:01.880 --> 00:36:08.020
with like programming Raspberry Pi or just more traditional textual programming languages.

00:36:08.020 --> 00:36:13.940
The typing skills is pretty, pretty interesting. I think one that I, you talked about before,

00:36:13.940 --> 00:36:19.800
but I think is also super interesting as a gateway to this. This is the best one that I know. Maybe

00:36:19.800 --> 00:36:22.900
people know of others as well is code combat.

00:36:22.900 --> 00:36:26.360
You did a podcast episode on that years ago, right?

00:36:26.360 --> 00:36:31.200
This is one of the ones, like my daughter and I both subscribed to this for a while when she was

00:36:31.200 --> 00:36:35.540
younger. We'd go through and we did, I don't know, like, can't remember. I think she did 30 or 40

00:36:35.540 --> 00:36:40.040
code challenges through there or something like that, which was pretty awesome. And I also had the

00:36:40.040 --> 00:36:41.920
guys on the show. Yeah. It's been a little while.

00:36:42.040 --> 00:36:46.720
Yeah, it has been, but it's still, I think it's an amazing resource. So you, a code combat is about

00:36:46.720 --> 00:36:52.320
learning how to code through gaming. So you play a game from beginning to end. And while you play the

00:36:52.320 --> 00:36:57.740
game, you learn to code in Python or JavaScript. I think there are several languages, but you really

00:36:57.740 --> 00:37:03.640
do textual programming. And if your kid likes gaming, or this is something that makes it easier for them to

00:37:03.640 --> 00:37:08.240
get started with coding, it's an amazing resource, even though you have to pay for it because you're

00:37:08.240 --> 00:37:13.640
really guided through the course. You can have lessons. You can even have, I think, teacher

00:37:13.640 --> 00:37:17.580
lessons once or twice a week, dependent on your subscription plan.

00:37:17.580 --> 00:37:22.960
Yeah. I think there might be a free tier if you tell it you're a student, but you can only do certain

00:37:22.960 --> 00:37:28.840
challenges. Like for example, see this, there's like a locks here and it says, I think, yeah, I have to

00:37:28.840 --> 00:37:33.140
subscribe to this if I want to do all, if I want to solve all the puzzles, but there's some of them you

00:37:33.140 --> 00:37:37.540
can do for free, I believe. I don't feel like we had to pay at the beginning, but they could have

00:37:37.540 --> 00:37:42.760
changed the model. I also played around with it. At least in the beginning, you can try it out for free.

00:37:42.760 --> 00:37:46.980
What I really like about this, you know, so if you click on, if you go to this, you click on the things,

00:37:46.980 --> 00:37:52.120
it says for this challenge, you're going to learn arguments and syntax. Or if you come over here and you

00:37:52.120 --> 00:37:57.420
click on this one, it'll say you'll learn while loops or whatever, but then it gives you just a nice

00:37:57.420 --> 00:38:03.880
simple challenge. So it, but what's cool, I'll know in order to play that one, I got to, can I play this one?

00:38:03.880 --> 00:38:09.200
Yeah, here you go. So you have this character and what's, oh my gosh, it made that very large.

00:38:09.200 --> 00:38:14.220
What's really cool though, is when you, it gives you a little hint, but the editor, here's what I

00:38:14.220 --> 00:38:19.520
think is special about Code Combat. The editor is auto-complete like you have never seen.

00:38:19.520 --> 00:38:24.340
You know what I mean? So it says, all right, what you need to do is build a fence and you have a hero

00:38:24.340 --> 00:38:31.280
and the hero has the ability to say build at X, Y position, or it could move. And if I just type the

00:38:31.280 --> 00:38:39.020
letter D, it'll auto-complete like hero dot move down. Or if I say hero build X, Y, it automatically

00:38:39.020 --> 00:38:44.940
puts in all the, it's, so if you can type just a couple of characters, it'll keep the syntax, you know,

00:38:44.940 --> 00:38:50.480
like the spacing for indentation and block definitions. And all of that kind of stuff is

00:38:50.480 --> 00:38:56.820
ridiculous for how you don't even have to really have the right syntax. You just have to put a little

00:38:56.820 --> 00:39:02.800
bit of some kind of word in there at all. And it'll, it'll start to write all of it for you, which I

00:39:02.800 --> 00:39:03.840
think that's the magic here.

00:39:03.840 --> 00:39:08.320
It's nice that you have this insider knowledge by having tried it out yourself for quite a while.

00:39:08.320 --> 00:39:13.080
Yeah. It worked way better than other stuff when my daughter was young and I was trying to teach her

00:39:13.080 --> 00:39:19.900
like beyond the visual programming things, but it's, it's so forgiving compared to, well, here's your

00:39:19.900 --> 00:39:24.480
favorite editor and you start typing. Oh, why won't it run? There's three spaces, not four. Oh, I see.

00:39:24.480 --> 00:39:27.120
You know, all that kind of detail you got to normally deal with.

00:39:27.120 --> 00:39:31.140
It can be so frustrating in the beginning. If you need to learn about everything at the same time,

00:39:31.140 --> 00:39:37.220
like syntax, spacing, brackets, it's just a lot to learn in the beginning. If you just want to

00:39:37.220 --> 00:39:39.720
understand the basic concept and like for a start.

00:39:39.720 --> 00:39:43.800
Yeah, absolutely. Another thing you put out there was code club.

00:39:43.800 --> 00:39:50.780
Yeah. That's, I think a really cool resource by the Raspberry Pi foundation. So it's a platform and

00:39:50.780 --> 00:39:58.540
it guides your kids from lesson to lesson. So you start with learning scratch, but then it progresses

00:39:58.540 --> 00:40:05.480
onto Python and yeah, you can start, I think at the age of eight, yeah, you can start at the age of eight,

00:40:05.560 --> 00:40:12.240
which is also the recommended age for scratch. And this is just an example for a full platform that

00:40:12.240 --> 00:40:18.120
you can use to guide yourself or your children through progressing from one thing to the other.

00:40:18.120 --> 00:40:24.920
And I think it's also free. So if you start looking, there are lots of online coding classes that you can

00:40:24.920 --> 00:40:31.960
use that teach you different things and have a whole program and sets of ideas behind how to approach

00:40:31.960 --> 00:40:32.460
different topics.

00:40:32.460 --> 00:40:37.120
Yeah. This looks very fun. And the example, at least they have on the screen is using Blockly, right?

00:40:37.120 --> 00:40:38.460
Or scratch one of them.

00:40:38.460 --> 00:40:44.340
I think it's scratch. Yeah. I think level one is scratch and then level two would be Python and more comes after that.

00:40:44.340 --> 00:40:49.660
Yeah. Oh, that's really cool. Another one in this realm is Hedy. I had not heard of Hedy.

00:40:49.660 --> 00:40:58.160
Yeah. Me neither. Just when I started researching the topic, why I chose it as an example is that I just like the concept of

00:40:58.160 --> 00:41:04.780
gradual programming. So gradual programming means that what I just mentioned, basically, that if you learn language,

00:41:04.780 --> 00:41:11.060
speaking or like a programming language, you have to learn a lot at the same time. It can be overwhelming.

00:41:11.060 --> 00:41:17.360
You have concepts like loops, if else, and syntax like quotation marks, round brackets.

00:41:17.360 --> 00:41:26.640
And in Hedy, it's free, like it's a web-based interface. And concepts are introduced with as little syntax and then refined.

00:41:26.640 --> 00:41:32.900
So in the beginning, you can just type print and the text. And you don't have to worry about quotation marks or brackets.

00:41:33.260 --> 00:41:37.840
It's just introduced at a later stage. So it mimics the way in which we would learn a language.

00:41:37.840 --> 00:41:44.180
And in the end, you like it's based on Python. So you learn a subset of Python, not the entire programming language,

00:41:44.180 --> 00:41:51.000
but it's syntactically valid and you have all the right syntax. But for some kids, it might be easier to get started with

00:41:51.000 --> 00:41:55.820
having not everything like being part of what you have to quote yourself.

00:41:55.820 --> 00:41:58.840
Right. Like learning, oh, whoops, you forgot to close the parentheses.

00:41:58.840 --> 00:42:02.880
So it's not going to run or you forgot to close the quote. So it won't work. Something like that.

00:42:02.880 --> 00:42:03.460
Yeah, exactly.

00:42:03.460 --> 00:42:08.420
Yeah. Kids run into that all the time because they're like, well, I see the words on the screen that I wanted to do,

00:42:08.420 --> 00:42:11.060
but no, no, you got to put it in quotes. And why?

00:42:11.060 --> 00:42:17.140
Oh, and maybe regarding the age, this is recommended for age 10 plus years. So yeah, when you want to get started with

00:42:17.140 --> 00:42:22.680
actual textual programming. So it fits into the third age range that we discussed.

00:42:22.680 --> 00:42:29.280
That's pretty much the last limited age range, I guess you would say before you just go and do regular programming, right?

00:42:29.280 --> 00:42:33.380
Exactly. From there, you can just progress on to more traditional programming languages.

00:42:33.380 --> 00:42:40.680
There are lots of resources like from the Bersbury Pi Foundation. They have Python courses and there are some on Udemy.

00:42:40.680 --> 00:42:44.500
If you start looking, there are tons of resources to get started.

00:42:44.500 --> 00:42:50.980
There are lots of online and on-site classes that teach kids starting at various ages.

00:42:50.980 --> 00:42:57.200
Yeah, I know about a few German offers where you can really find what you're interested in,

00:42:57.200 --> 00:43:03.380
which is really important, like make coding fun and learning fun for kids.

00:43:03.380 --> 00:43:09.720
So find out what they are interested in, what their passion is, and then find something that fits their interest.

00:43:09.720 --> 00:43:15.260
I'm sure there's a ton of stuff on YouTube as well to help people, but at least I'm out of touch.

00:43:15.260 --> 00:43:17.100
I bet there's a lot on TikTok actually.

00:43:17.100 --> 00:43:19.080
Oh yeah, I'm out of touch with that as well.

00:43:19.080 --> 00:43:25.040
Just, you know, you learn one concept every 30 seconds. You just swipe away until you're a programmer.

00:43:25.040 --> 00:43:32.700
I should actually look at that probably when talking about coding with kids. I guess that's something that can play a big part.

00:43:32.820 --> 00:43:39.880
For sure. Instagram reels or whatever. I think that kind of touches on most of the resources that we have out there.

00:43:39.880 --> 00:43:54.040
There's one more I do want to talk about though. And I think this is probably as good around, it's beyond the code combat stage where kids can actually use an editor to create proper valid syntax.

00:43:54.040 --> 00:43:59.040
But it's not much beyond that. And that's Anvil at Anvil.Works. Are you familiar with Anvil?

00:43:59.040 --> 00:43:59.460
No.

00:43:59.460 --> 00:44:17.140
So I've had Meredith create this online on the show. But what's really interesting is it's a way to visually build webpages that are actual real webpages that people can actually, you know, you publish it, your family or your friends could use it.

00:44:17.140 --> 00:44:29.440
So if you wanted to build, you know, something like a Harry Potter type thing and you could have your friends vote on which one, which character is their favorite and why or whatever, you know, like you could build this into a web page and publish it.

00:44:29.440 --> 00:44:37.120
And with so many of these projects, it's like, okay, I built this cool thing. How do I share it? Or how do I make it look like the thing that I use?

00:44:37.120 --> 00:44:46.960
And so you can do this drag and drop, build it out thing. But then you write the front end, the front end interactive code in Python and true Python JavaScript.

00:44:46.960 --> 00:44:54.320
And then it has kind of like a simplified database in the backend. So it was like a little bit of like persistence and storage, but it's, it's really cool.

00:44:54.320 --> 00:45:02.540
After we did code combat with my daughter, we went and we did this and she built a bunch of things that were like really, she really thought were pretty neat.

00:45:02.600 --> 00:45:07.020
She could share with people and have people input little text messages or whatever.

00:45:07.020 --> 00:45:13.800
I love that. Yeah. I would learn again. I know very, I have very little knowledge about web programming.

00:45:13.800 --> 00:45:16.660
This would be a good tool for me to get started as well.

00:45:16.660 --> 00:45:29.100
Yeah. Well, also the problem is even if you're a very good web programmer, it's like, okay, kid, you go from code combat to now you're doing CSS, HTML, database, you know,

00:45:29.100 --> 00:45:34.280
like the explosion of complexity to put, and then you do all that. And then how do you even put it on the web?

00:45:34.280 --> 00:45:42.740
It's just so out of control that step from one to the next. And so if people want to do anything with like web pages and Python, this is a really cool option.

00:45:42.740 --> 00:45:43.760
I think right here.

00:45:43.760 --> 00:45:53.320
Really cool. Yeah. And like speaking from your experience, how did you get your kids excited about coding? Did they just like it or do they hate it?

00:45:53.440 --> 00:46:05.820
My older daughters, they grew up with less technology because they're older. So at first they weren't super into it, but then they got into college and they had to start learning things for their degree.

00:46:05.820 --> 00:46:12.840
And so now one of my daughters is doing a lot with R, which is fine because she's in psychology and that's what all of her colleagues are using.

00:46:12.840 --> 00:46:16.820
Which is fine. It's not ideal, but it's fine.

00:46:16.820 --> 00:46:20.400
It's not ideal. It's fine. No, I'm not that. No, I'm very proud of her.

00:46:20.400 --> 00:46:28.080
I think there's different things that can motivate you. You know, you can just be curious. Like my youngest daughter is like, let's play games. Let's play code combat.

00:46:28.240 --> 00:46:36.340
Then she's like, I want to build something for my friend, you know, and so we did this thing with Anwell and she was very motivated, like seek out the technology and play with it.

00:46:36.340 --> 00:46:47.340
Whereas my older daughters, I think they, they weren't that interested and they had other things to do, but once they got somewhere with a job or with their education where they needed it, then all of a sudden it was more interesting.

00:46:47.520 --> 00:46:49.760
So, you know, it varies by kid, I think.

00:46:49.760 --> 00:47:00.500
Yeah, absolutely. And I guess that's fine as well. Not everyone needs to like coding, but just having the opportunity to learn about it and experience yourself if it's something that you're actually like.

00:47:00.500 --> 00:47:05.400
I was just so blown away when I experienced how fun it is to learn how to code.

00:47:05.400 --> 00:47:15.400
I always thought it was boring and having all these stereotypes in my head because I never actually knew anyone that was coding.

00:47:15.940 --> 00:47:18.960
It's nice that they had the opportunity to learn about it at home.

00:47:18.960 --> 00:47:24.680
Yeah, it absolutely is. So I think we have a little more follow-up here on the TikTok learning style.

00:47:24.680 --> 00:47:30.320
Ty Vass Heather says, you can learn every single short, but you won't remember anything as you flip through them.

00:47:30.320 --> 00:47:32.540
Flip, flip, flip, which is probably true.

00:47:32.540 --> 00:47:37.560
And then also, Krishan asks, you know, do you think Scratch is good to start with for kids?

00:47:37.560 --> 00:47:42.040
Like if you had a kid who was 10, 11, 12, 13, what would you start them with?

00:47:42.040 --> 00:47:45.700
Yeah, I would get started with visual programming. I think it makes it easier.

00:47:45.840 --> 00:47:49.560
I know that for some kids, it can be hard then to progress onto textual programming.

00:47:49.560 --> 00:47:53.960
But I guess this is just a general thing. You need to see what works.

00:47:53.960 --> 00:47:59.640
It's not that you, it might be that you start with one thing and you see, actually, it doesn't work for us.

00:47:59.640 --> 00:48:03.680
And then you have to switch tracks. And that will happen a lot. And that's just fine.

00:48:03.680 --> 00:48:05.680
You need to find your own path through it.

00:48:05.780 --> 00:48:12.340
And don't be afraid to actually make changes if you are not enjoying what your kid is not enjoying their work.

00:48:12.340 --> 00:48:21.720
I think visual programming is a great and fun way to get started with coding concepts and not have it feel like you're actually coding.

00:48:21.900 --> 00:48:26.560
Absolutely. So, Christian's child is 13. I will consider code combat, actually.

00:48:26.560 --> 00:48:32.900
I think, you know, 13, you're well enough to do textual stuff if it's not too much drudgery, right?

00:48:32.900 --> 00:48:35.420
Like matching braces and quotes and all that.

00:48:35.420 --> 00:48:38.880
So maybe if this kind of thing inspires, maybe that as well.

00:48:39.020 --> 00:48:43.900
Yeah, absolutely. I think 13 is great for getting started with textual programming as well.

00:48:43.900 --> 00:48:52.420
And what is so nice about having large language models now is that lots of these offers are being translated to various languages.

00:48:52.420 --> 00:48:58.700
And it is becoming much more easy to get started in your native language, which might not be English.

00:48:58.700 --> 00:49:02.720
And then you do not have to learn a language while you learn how to code.

00:49:02.720 --> 00:49:06.640
Yeah, that's also, I think, a huge advantage of the current time.

00:49:06.860 --> 00:49:12.940
That's something that's always been interesting to me is so many of the programming languages are in English,

00:49:12.940 --> 00:49:17.220
but many of the programmers, their first language is not English.

00:49:17.220 --> 00:49:17.500
Yeah.

00:49:17.500 --> 00:49:20.180
And, you know, maybe like your English is perfect, I'm sure.

00:49:20.180 --> 00:49:22.280
You know, forward, while it's no big deal.

00:49:22.280 --> 00:49:25.840
But when you're 10 years old, here, you need to learn a program.

00:49:25.840 --> 00:49:27.380
Well, by the way, it's in a foreign language.

00:49:27.380 --> 00:49:28.680
That's pretty wild, right?

00:49:28.680 --> 00:49:29.800
That's got to be challenging.

00:49:29.800 --> 00:49:31.940
What was your, like, how do you feel about this?

00:49:31.940 --> 00:49:33.440
I mean, you're more in it than I am.

00:49:33.440 --> 00:49:34.580
Yeah, I would always start.

00:49:34.700 --> 00:49:38.260
Like, if you have the chance, then start in the native language of the child.

00:49:38.260 --> 00:49:42.220
And you will definitely find good ways to get started and good offers.

00:49:42.220 --> 00:49:45.360
For example, Scratch, I think, is available in lots of languages.

00:49:45.360 --> 00:49:47.240
70 languages, actually.

00:49:47.240 --> 00:49:53.680
Choose something that keeps the cognitive effort that you need to get started with simpler.

00:49:53.920 --> 00:49:57.540
Because otherwise, you really have to learn two things at the same time.

00:49:57.540 --> 00:49:59.620
Learning a language and learning all these concepts.

00:49:59.620 --> 00:50:02.220
And it can then be overwhelming.

00:50:02.220 --> 00:50:04.120
It's not something that I had to deal with.

00:50:04.120 --> 00:50:07.300
But looking back, I'm like, wow, I was pretty lucky that I didn't have to

00:50:07.300 --> 00:50:11.420
learn what all the keywords meant in addition to just what I was trying to do.

00:50:11.420 --> 00:50:14.620
That's also actually why I decided to study in English.

00:50:14.620 --> 00:50:18.020
Because I knew all the papers I'm reading are in English.

00:50:18.260 --> 00:50:19.820
All the code I'm writing is in English.

00:50:19.820 --> 00:50:21.700
It doesn't make sense to study it in German.

00:50:21.700 --> 00:50:23.160
It's just weird.

00:50:23.160 --> 00:50:27.540
The internet has done some interesting things to just sort of spread everything around globally.

00:50:27.540 --> 00:50:28.680
So, all right.

00:50:28.680 --> 00:50:30.080
Anna Lena, this has been awesome.

00:50:30.080 --> 00:50:33.900
A bunch of concrete things for people to take and work with their kids.

00:50:33.900 --> 00:50:36.260
Maybe if they're grandparents, their grandchildren,

00:50:36.540 --> 00:50:39.480
or if they're teachers or friends, kids or whatever, right?

00:50:39.480 --> 00:50:40.140
Whatever, yeah.

00:50:40.140 --> 00:50:40.560
Yeah.

00:50:40.560 --> 00:50:43.660
How about some final advice to close out the topic?

00:50:43.660 --> 00:50:44.200
Yeah.

00:50:44.200 --> 00:50:47.100
I think for me, two things are the most important ones.

00:50:47.100 --> 00:50:50.600
Namely, first, don't force your child to learn how to code.

00:50:50.600 --> 00:50:54.240
But see if you can find a way that makes it fun for them.

00:50:54.240 --> 00:51:00.080
I think making or learning that learning is actually a cool thing.

00:51:00.360 --> 00:51:07.880
It's like it offers you or it opens you so many doors in your life that you learn that putting in the effort.

00:51:07.880 --> 00:51:11.440
And even if something is complicated, it's worth it.

00:51:11.440 --> 00:51:16.380
It's just one of the most valuable skills you can provide your child with.

00:51:16.380 --> 00:51:17.400
So, yeah.

00:51:17.400 --> 00:51:20.280
Learning how to learn and how to love learning, I guess.

00:51:20.280 --> 00:51:23.380
And there's lots of ways in which you can do it.

00:51:23.380 --> 00:51:25.100
Choose the right topics.

00:51:25.100 --> 00:51:25.900
Be patient.

00:51:25.900 --> 00:51:28.400
Sit down with your kids and learn together.

00:51:28.980 --> 00:51:35.420
Don't force them to sit down for long times and like rather distribute learning sessions over time.

00:51:35.420 --> 00:51:37.400
Don't be afraid to switch tracks.

00:51:37.400 --> 00:51:42.480
Lots of the things that apply to adults also apply to children regarding learning.

00:51:42.480 --> 00:51:43.160
Very good advice.

00:51:43.160 --> 00:51:48.300
I would just maybe reemphasize that people should reward persistence.

00:51:48.300 --> 00:51:50.540
Reward it very, very highly.

00:51:50.540 --> 00:51:54.600
Like, I can't believe you spent half an hour and you just got, barely got it to print hello.

00:51:54.600 --> 00:51:56.220
But that's actually a massive accomplishment.

00:51:56.480 --> 00:51:59.720
And like, I'm so proud of how hard you focused and worked on it, right?

00:51:59.720 --> 00:52:00.480
That's a big deal.

00:52:00.480 --> 00:52:00.840
Yeah.

00:52:00.840 --> 00:52:04.080
That's like, it makes a huge difference to two kids.

00:52:04.080 --> 00:52:05.120
Probably adults as well.

00:52:05.120 --> 00:52:05.380
Yeah.

00:52:05.380 --> 00:52:05.680
Yeah.

00:52:05.680 --> 00:52:06.320
Everyone.

00:52:06.320 --> 00:52:09.040
But you lay the foundation for learning, right?

00:52:09.040 --> 00:52:10.040
So if you...

00:52:10.040 --> 00:52:10.160
Yeah.

00:52:10.160 --> 00:52:15.240
I mean, that expands on to being good at literature or being good at philosophy or like whatever

00:52:15.240 --> 00:52:16.840
it is that's hard to learn.

00:52:16.840 --> 00:52:19.440
And just believing that you can learn anything.

00:52:19.620 --> 00:52:20.260
Yes, exactly.

00:52:20.260 --> 00:52:22.540
And the other is to try to capture inspiration.

00:52:22.540 --> 00:52:26.820
If they're like really, really excited and they really want to learn a thing at that moment,

00:52:26.820 --> 00:52:28.560
then you could introduce some of these tools.

00:52:28.560 --> 00:52:31.180
But if they're like, I want to go outside and play with my French, you're like, no,

00:52:31.180 --> 00:52:32.180
come in here, we're doing coding.

00:52:32.180 --> 00:52:34.160
Like, maybe that's not the moment, yeah?

00:52:34.160 --> 00:52:34.680
Exactly.

00:52:34.680 --> 00:52:35.140
Yeah.

00:52:35.140 --> 00:52:35.520
All right.

00:52:35.520 --> 00:52:39.240
Thank you for taking the time to put this all together and coming on the show and nice

00:52:39.240 --> 00:52:39.740
to have you back.

00:52:39.740 --> 00:52:40.040
So...

00:52:40.040 --> 00:52:40.360
Thank you.

00:52:40.360 --> 00:52:40.600
Yeah.

00:52:40.600 --> 00:52:41.060
Thanks.

00:52:41.060 --> 00:52:41.480
Bye.

00:52:41.480 --> 00:52:41.840
Bye.

00:52:41.960 --> 00:52:42.960
Bye.

00:52:42.960 --> 00:52:43.960
Bye.

00:52:43.960 --> 00:52:44.960
Bye.

00:52:44.960 --> 00:52:45.960
Bye.

00:52:45.960 --> 00:52:46.960
Bye.

00:52:46.960 --> 00:52:47.960
Bye.

00:52:47.960 --> 00:52:48.960
Bye.

00:52:48.960 --> 00:52:49.960
Bye.

00:52:49.960 --> 00:52:50.960
Bye.

00:52:50.960 --> 00:52:51.960
Bye.

00:52:51.960 --> 00:52:52.960
Bye.

00:52:52.960 --> 00:52:53.960
Bye.

00:52:53.960 --> 00:52:54.960
Bye.

00:52:54.960 --> 00:52:55.960
Bye.

00:52:55.960 --> 00:52:56.960
Bye.

00:52:56.960 --> 00:52:58.960
Bye.

00:52:58.960 --> 00:52:59.960
Bye.

00:52:59.960 --> 00:53:00.960
Bye.

00:53:00.960 --> 00:53:01.960
Bye.

00:53:01.960 --> 00:53:02.960
Bye.

00:53:02.960 --> 00:53:03.960
Bye.

00:53:03.960 --> 00:53:04.960
Bye.

00:53:04.960 --> 00:53:05.960
Bye.

00:53:05.960 --> 00:53:06.960
Bye.

00:53:06.960 --> 00:53:07.960
Bye.

00:53:07.960 --> 00:53:08.960
Bye.

00:53:08.960 --> 00:53:09.960
Bye.

00:53:09.960 --> 00:53:10.960
Bye.

00:53:10.960 --> 00:53:14.020
More at talkpython.fm/workos.

00:53:14.020 --> 00:53:15.680
Want to level up your Python?

00:53:15.680 --> 00:53:19.800
We have one of the largest catalogs of Python video courses over at Talk Python.

00:53:19.800 --> 00:53:24.900
Our content ranges from true beginners to deeply advanced topics like memory and async.

00:53:24.900 --> 00:53:27.560
And best of all, there's not a subscription in sight.

00:53:27.560 --> 00:53:30.480
Check it out for yourself at training.talkpython.fm.

00:53:30.480 --> 00:53:32.580
Be sure to subscribe to the show.

00:53:32.580 --> 00:53:35.360
Open your favorite podcast app and search for Python.

00:53:35.360 --> 00:53:36.680
We should be right at the top.

00:53:37.100 --> 00:53:41.820
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

00:53:41.820 --> 00:53:46.040
and the direct RSS feed at /rss on talkpython.fm.

00:53:46.040 --> 00:53:48.980
We're live streaming most of our recordings these days.

00:53:48.980 --> 00:53:52.400
If you want to be part of the show and have your comments featured on the air,

00:53:52.400 --> 00:53:56.780
be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

00:53:56.780 --> 00:53:58.880
This is your host, Michael Kennedy.

00:53:58.880 --> 00:54:00.180
Thanks so much for listening.

00:54:00.180 --> 00:54:01.340
I really appreciate it.

00:54:01.340 --> 00:54:03.240
Now get out there and write some Python code.

00:54:03.240 --> 00:54:24.400
I'll see you next time.

