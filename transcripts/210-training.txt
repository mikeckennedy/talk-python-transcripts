00:00:00 How do you stay up on your Python skills? Many of us are self-starters and good at learning

00:00:04 on our own or online with video courses like the ones we have over on Talk Python.

00:00:09 But sometimes having everyone on your team go from zero to ready to work on a project

00:00:14 is the best path. And usually that means in-person training. This is something I did

00:00:19 and enjoyed for many years. Our guest on this episode is Reuven Lerner, who does independent

00:00:24 Python training. He's here to tell us how to make the most out of your in-person training

00:00:29 for your team and how you might get started in this side of software development yourself.

00:00:34 This is Talk Python To Me, episode 210, recorded March 19th, 2019.

00:00:39 Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem,

00:00:58 and the personalities. This is your host, Michael Kennedy. Follow me on Twitter where I'm at

00:01:03 mkennedy. Keep up with the show and listen to past episodes at talkpython.fm and follow the

00:01:08 show on Twitter via at Talk Python.

00:01:09 Hey everyone, a quick announcement before we get to the interview. A little while ago, we

00:01:14 released our Android app for Talk Python training where you could take our courses on your device

00:01:19 and take them with you and all that good stuff. But we left out, you know, one of the minor

00:01:23 other platforms like iOS. So we are fixing that. Of course, we just built the Android

00:01:30 first, but now we're ready to release the iOS version as well. So just visit training.talkpython.fm

00:01:36 slash apps. Click on the link for your various app stores and get the right app for your device.

00:01:41 You get some online courses that are free that come bundled with the apps, as well as any that

00:01:47 you've taken from us. Of course, they'll be there for you and they'll be available offline.

00:01:50 All right. Now let's get to that interview. Reuven, welcome to Talk Python.

00:01:54 Thanks. It is so great to be here.

00:01:56 Yeah, it's so great to have you. It's good to catch up with you. It's been a while since we

00:02:00 were back in Cleveland hanging out together. So I'm looking forward to that. And I'm also looking

00:02:04 forward to talking about this whole aspect of training, either in-person training, online

00:02:09 training. We both have a background in this and it's going to be a lot of fun, I think.

00:02:13 I love talking about training because in so many ways, it's so unknown to so many developers.

00:02:17 They know there's this training world out there, but I don't think they're aware of what

00:02:21 goes into it and how big it is.

00:02:22 Yeah. And how do you get into it? How do you get the most out of it? If you're having some

00:02:26 trainer come to your company or what are the trade-offs of different types of training,

00:02:30 all sorts of stuff to explore. Now, before we do though, let's explore a little bit of history

00:02:35 with you. How did you get into programming in Python?

00:02:38 I wear glasses and there was not a very strong prescription, but when I was little,

00:02:42 like I guess about seven or eight, I had double vision and the eye doctor said, well, you should

00:02:47 do these exercises. And I never wanted to do the exercises. Like there were these red and green

00:02:51 dots I had to sort of make converge. So I didn't have double vision. And finally the doctor said,

00:02:55 listen, there's this new thing that just came out recently called an Atari. And he said to my

00:02:59 parents, buy this. He will be excited by it. And that will sort of train his eyes to focus together.

00:03:05 So they got an Atari and one of the cartridges you could get was this basic programming cartridge.

00:03:10 And so we got that. I was like, wow, this is so cool. I can tell the computer what to do.

00:03:15 How interesting. Was it an Atari 2600 or which one was it? Do you remember?

00:03:19 Yeah, it was the 2600. And I think it had a total of like 128 or 150 bytes that you could program in.

00:03:26 And each of the commands was tokenized to take a one byte. Like now I understand sort of what was going

00:03:30 on there. So you would enter, like I remember very, very often sort of running out of space

00:03:35 because I was trying to write too much. And each of the characters I was trying to print

00:03:38 was, of course, taking up one of those precious bytes.

00:03:41 That's a whole nother level. I mean, my laptop has 32 gigs.

00:03:45 It's just, it's incomprehensible. Literally, the mind cannot compare these two things.

00:03:51 My eldest daughter, who's now 18, saw, I have a floppy disk on my desk. I have a few of them.

00:03:57 She said, what is that? I said, so you know, those USB drives that everyone has? She was like,

00:04:01 yeah, I said, this has like 100,000 times less storage. And this is what we would use when I was

00:04:07 your age to move things around. And she just, yeah, she couldn't wrap her mind around that.

00:04:11 Yeah, yeah. I remember you'd have those apps. Gosh, I can't remember in DOS what they were called,

00:04:17 but you would, they would allow you to span disks. Like I have a file that is larger than 1.44 megs.

00:04:23 And so it'll like compress it to disk one, disk two, disk three, straight to the disk. Insert disk three,

00:04:28 insert disk four. Yeah, that was a wild time. Absolutely. Absolutely. Okay. So you started

00:04:32 programming on an Atari 2600. Literally nobody in like 207 or eight shows has ever said they started

00:04:39 programming on an Atari 2600 Commodore, maybe some other old school thing. I didn't even know that

00:04:46 was possible. That's pretty wild. So then a few years later, we got a home computer and this was

00:04:51 probably, this was in 1983, but it was not the home computer that you're probably thinking of.

00:04:56 We had friends who worked for digital, digital electric, digital deck, electric computer. Anyway,

00:05:01 and they hooked up a VT100 terminal with a processor and some RAM and they called it a computer with CPM

00:05:07 running as the operating system. So that was like our home computer. And by the way, my parents were not

00:05:12 computer people at all. Like they were just told by their computer friends, oh, this is a great deal on

00:05:16 a computer. And so I played with that for a bit. Yeah. And also you might not know what I'm going to do.

00:05:21 not have so much, the phone might be unavailable some of the time. Oh my God.

00:05:25 Oh my God.

00:05:26 Whatever. Right.

00:05:26 My parents and I were constantly like, what? You're on the modem again. You're dialing into things.

00:05:30 And I think it was like while I was in high school that we got like a PC with DOS and did we even have

00:05:36 windows that we must have had windows on it at some point. And so it was really like, I was always doing

00:05:41 toy programming, but it was only when I got to college that I really started, like I signed up to be at the

00:05:46 computer science department, but I didn't really understand what programming was and what computer

00:05:50 science was until I got to college. And then like, I mean, I went to MIT and there they brainwashed you into

00:05:55 thinking that Lisp is the, like Lisp is the only language you learn in the computer science department.

00:06:00 If you want to take a C programming course.

00:06:01 It's so amazing. It doesn't have loops. You don't need any of that stuff. You just redo recursion. It's,

00:06:07 it's perfect. And you're going to really get good at typing parentheses.

00:06:10 Yeah. And if you want to take a C course, which I did not, you have to go to the, I think it's the

00:06:15 civil engineering department. They offer it because CS department like wouldn't be caught dead teaching a C

00:06:19 course.

00:06:19 Yeah, of course. You know, my first CS course, I did like a minor and it was in scheme,

00:06:24 which is not that different. And it was a wild time. It's a wild language.

00:06:27 What did you think of that as an introduction to programming?

00:06:29 I thought it was brilliant, amazing, but like I was brainwashed, right? So they told us that this

00:06:33 was the best program. And we, we use scheme, right? So they told us that Lisp was the best language

00:06:37 ever. And I was like, Oh, I guess Lisp is the best language ever. And since then, truth be told,

00:06:42 I've had this comparison of, Oh, I was doing this back in college. I can't believe I've just sort of

00:06:46 rediscovered it now, whether it's in Python or in other languages, like they really sort of

00:06:50 helped us to see what we saw way further than we thought we were seeing. And we were doing things

00:06:55 that were way more advanced than we even thought because it was so simple to do. Yeah. That said,

00:06:59 you get out in the real world and you discover, Oh, not a lot of companies are actually using scheme.

00:07:05 What do you know?

00:07:06 Yeah, that's for sure. Very few.

00:07:09 I remember going, so my first job after college was at HP and I was using some C and C++ and really,

00:07:16 really disliked it. Like I never got the whole pointer thing. And I remember going to my boss and

00:07:20 saying, Hey, do you think we could use maybe like a different language? You know, one that's garbage

00:07:24 collected. And he was like, that is not realistic. No company ever will use a garbage collected language

00:07:32 because you really want to have control and you really want to know what's going on.

00:07:36 those words resonate with me every day as I see like the exponential growth of Python in the enterprise

00:07:42 and the people who are still stuck using C and C++ suffering and me laughing all the way.

00:07:47 Yeah. And there's just so many interesting stories like back in the day with Google video

00:07:51 and YouTube as competing platforms and products and YouTube, of course, being a Python and Google

00:07:58 video being a C, fewer developers on YouTube. And they just blew the Google team away because,

00:08:03 Hey, guess what? When you have to write a lot less and worry about a lot less fewer details,

00:08:07 it doesn't matter if it's, you know, 10% slower, 20% slower, you get way more features done.

00:08:12 Absolutely.

00:08:13 I think actually you speak of garbage collected languages. Like the majority of programming these

00:08:18 days is Java, .NET, Python, and enterprise, right? Like maybe, maybe a little JavaScript.

00:08:23 I actually don't see it nearly as much there. I don't think, but you probably have a fresher

00:08:27 view than I do.

00:08:28 Most of my students are very familiar with, like they studied at some point Java or C#,

00:08:33 say, in whether it's university courses or using it on the job. And so for them, that's very natural.

00:08:38 I do a fair amount of work also with some low level hardware companies. So those people are using

00:08:43 C and C++. They're certainly familiar with the idea of a real language being garbage collected and not

00:08:48 having pointers and stuff like that.

00:08:49 Right, right. Do you see them moving towards Python and some of this IoT stuff and MicroPython and things

00:08:54 like that? Or are they still embedded C?

00:08:56 No, no. Those places are all embedded C. I don't see that changing very fast. I mean,

00:09:01 a lot of them are dealing with like low level hardware stuff. So it has to be sort of predictably

00:09:07 fast and predictable in terms of its memory usage. Maybe. I mean, it'd be great to see at some point,

00:09:11 but it's going to be, it's going to be a while I'm guessing.

00:09:14 Pretty interesting. Okay. So that's how you got into programming. You were telling me you work in HP

00:09:19 and you said, can I please use something other than C? So how did that lead to Python?

00:09:24 Basically, when I was in college, I was introduced to Python. Like basically when I was there, so I was

00:09:30 the editor of the student newspaper and we set up a website for the newspaper. And I should add,

00:09:36 like this is my super big claim to fame. Like it was one of the first 100 websites in the world.

00:09:40 So we sent email to Tim Berners-Lee and said, hey, we've set this website. He said, oh,

00:09:45 that is so cool. I'll put you on the list of the websites out there. Strangely, he's not in that

00:09:50 business anymore. And basically at that time, there was this new thing called CGI, which allowed you to

00:09:56 run external programs from your website. So you didn't just have static pages and they actually

00:10:01 expected people to write these CGI programs and see, but people started to do it because that was

00:10:06 such a pain. People started doing higher level languages. And so people were using Perl, people

00:10:10 were using Python. And so I sort of used both of them for a while. And then I got really heavy into the

00:10:15 Perl world. And so for a while I was using Perl at work. And then when I started my own independent

00:10:20 consulting company in 95, I was still using Perl. And when Perl sort of, for lack of a better term,

00:10:26 like blew itself up as a community. So I moved back to Python and I've been like pleasantly delighted to

00:10:34 see it just sort of exponentially growing over time. Yeah. It's a very exciting place to be right now.

00:10:39 So tell us the story about how Perl blew up. Like I know that it's definitely on the dissenting side

00:10:45 of the curves of popularity and whatnot, but I don't know the details.

00:10:48 So look, what happened was there was this very, very strong competition between Perl and Python back in

00:10:54 the early nineties and even, you know, mid to late nineties where Perl people like me would say, well,

00:11:01 I can write really, really fast, right? Like I can get done when I need to get done. And I can just like

00:11:06 think and boom, it comes out and flies out of my fingers through the keyboard into the computer.

00:11:09 And then it executes really quickly. And the Python people would be like, yeah,

00:11:13 but it's not maintainable. And the Perl people like me would say, huh, that's only if you're not good.

00:11:17 If you're good, you write to be maintainable.

00:11:19 Look, it's not just right only. You can read it sort of.

00:11:22 You can read it after learning curve 20 years. Exactly.

00:11:25 Which strangely doesn't apply to most developers. So that was like hit number one against Perl.

00:11:30 But the real problem was that Larry Wall, who is undoubtedly a really smart guy, he's the inventor of Perl.

00:11:35 He's the BDFL of Perl. And he said, you know what? Perl 5 is good. We want to make an even better Perl 6.

00:11:44 And we're going to then do it, not just like making some incremental improvements.

00:11:49 Like if you thought Python 3 was a breaking change for Python 2, it's like nothing.

00:11:53 They said, we're going to rewrite the language. And basically Perl 6 is a totally different language from Perl 5.

00:11:58 And I'm not exaggerating. This is not a joke. 20 years after announcing it, they came out with the first version of Perl 6.

00:12:05 And, you know, here it's a bit of an exaggeration, you know, and the dozen or so of people who were waiting around for it were delighted.

00:12:11 And the rest of the programming world had moved on.

00:12:14 Yeah, that's crazy.

00:12:14 And so nowadays, whoever's using Perl nowadays is basically doing it as a legacy language.

00:12:19 I'm sure there are people using it and die hard and excited about it.

00:12:22 But you really don't hear about it anymore in those terms.

00:12:25 I hear it mostly in nostalgic terms. Like it was amazing.

00:12:28 I did learn here. I did get started there. That kind of stuff.

00:12:31 That's right. But, you know, there was a period also when I was doing a lot of Ruby and I was sure that Ruby was going to sort of pick up the gauntlet from Perl.

00:12:37 And it did in many ways.

00:12:38 But Ruby sort of has Perl syntactic quirks, sort of for good and for bad.

00:12:43 And the bad part is that it requires you to really understand it and be very, very flexible and understand all these exceptions.

00:12:50 But the other thing with Ruby is you need to, like, eat objects for breakfast and enjoy it.

00:12:55 It's so the learning curve is like, if you're OK, if you really, really know objects well, and if you're OK with inconsistent syntax, then Ruby is fantastic.

00:13:04 But it turns out that most people starting off in programming and even most people just switching languages aren't interested in that high of a learning curve.

00:13:11 And so Python is just like hit the sweet spot of it works well.

00:13:16 You can learn it. You can grow with it.

00:13:17 And I always make the analogy like that learning a programming language is sort of like learning a regular human language.

00:13:22 And the thing that kills people learning a regular human language is all the exceptions, right?

00:13:28 Verbs work like this, except here and here and here.

00:13:30 And nouns work like this, except here and here and here.

00:13:32 And Python, like, the same rules apply everywhere.

00:13:35 And so you don't have to engage that much of your brain power in that stuff.

00:13:40 You can engage it in what you really want to do.

00:13:42 Yeah, it generally works as you would expect it.

00:13:45 Maybe you got to check the docs or, you know, jump to source on the definition of a function and go, yeah, actually, it's doing what I thought it would do.

00:13:51 But it's not too bad.

00:13:52 So, OK, super interesting.

00:13:54 This first 100 sites, this was in Perl, though, right?

00:13:58 Yeah, yeah, yeah.

00:13:58 This was definitely in Perl.

00:14:00 And it was like, I think, you know, 20 lines, 30 lines of code and expanded over time.

00:14:04 And I mean, the newspaper site is still going, but I really, really hope and expect that they're using different software than we wrote back then for everyone's sake.

00:14:11 I would think so.

00:14:12 I would think so.

00:14:13 OK, so this is all interesting.

00:14:15 You had this experience of learning all these cool languages at MIT.

00:14:18 And these days, you're self-employed, doing your own thing, doing mostly Python training, but also writing, writing magazines, writing online courses and in-person courses, things like that.

00:14:31 How do you make that transition?

00:14:33 When I came to Israel in 95, my plan was to be an independent consultant.

00:14:36 And they were very nice at my previous job.

00:14:39 I was working at Time Warner at the time.

00:14:41 And they said, oh, well, we'll be your first client.

00:14:42 So I sort of had this nice base to start my consulting company.

00:14:45 And so I was doing a combination of development and consulting.

00:14:51 And people started to ask me to do some training, like companies where I was helping them with the development.

00:14:55 And I was saying, can you teach our people to do this, too?

00:14:58 And that was my first experience at all doing training.

00:15:01 So it became, I don't know, a quarter or a third of what I was doing.

00:15:04 And then I did a PhD at Northwestern.

00:15:07 And when I came back to Israel and was still working on my dissertation, I was connected with a training company here in Israel.

00:15:12 And I said, OK, great.

00:15:14 So they'll sort of sell me and sell my time.

00:15:16 And I told them, well, I can do.

00:15:18 Right.

00:15:18 They'll actually solve one of the really hard problems, which is marketing, acquisition, the six-month sales cycle, all that kind of stuff.

00:15:26 And you just have to show up and be smart.

00:15:29 And that's kind of easy, right?

00:15:30 Exactly.

00:15:31 Exactly.

00:15:31 And so, I mean, they're sort of the company I was working with was a 900-pound gorilla in the Israeli training market.

00:15:36 And so they came to me and said, oh, really, you're interested in doing training with us?

00:15:40 That's fine.

00:15:41 What do you want to train in?

00:15:42 At the time, I'd done a lot of training in Perlin and Ruby.

00:15:44 So I told them that.

00:15:45 And they said, well, send us your resume.

00:15:47 So I sent it to them.

00:15:48 And they called me back like an hour or two later.

00:15:50 And they said, wait, you know Python also?

00:15:51 Oh, my God.

00:15:52 There's such demand for that.

00:15:53 Yeah.

00:15:54 And so I started doing it still like a quarter of my time, a third of my time.

00:15:58 And then they were filling up half my time.

00:16:00 And then three quarters of my time.

00:16:02 And at a certain point, like when I finished my dissertation, I decided to go back to doing it on my own.

00:16:06 I was already scheduled out two, three, four months in advance solid with training.

00:16:10 I was like, wow.

00:16:11 I love training.

00:16:13 It's super fun.

00:16:14 I get to meet smart people and help them out in their jobs.

00:16:17 And I can fill my time easily far in advance.

00:16:20 I am totally doing this full time.

00:16:22 And so basically, it's been close to 10 years now that I've been more or less a full time Python trainer.

00:16:28 And I am super, super happy.

00:16:30 That's awesome.

00:16:31 Yeah, I think it's such a cool lifestyle.

00:16:33 I mean, you have a lot of flexibility.

00:16:35 Of course, you're gone or occupied some of the time this week or that week.

00:16:39 But you also have other weeks you can just take them off.

00:16:42 Like you don't have to ask permission.

00:16:43 You just don't schedule it.

00:16:45 And you get to spend so much of your time staying on top of technology and learning new things.

00:16:49 Like, hey, I don't know SQLAlchemy, but the client wants me to teach it.

00:16:53 So it's in a month.

00:16:54 I'm going to go learn it and write some materials on it.

00:16:56 And you just keep going through that iteratively until all of a sudden, you know, quite a bit more than you probably expected when you started out, right?

00:17:03 Oh, my God.

00:17:03 Absolutely.

00:17:04 I mean, easily, easily, I don't know, 60% of what I teach is based on questions I get from students in my class where I say, okay, great.

00:17:11 I've got homework now.

00:17:12 I'm going to go back and learn that.

00:17:13 I'll try to come back to you tomorrow the next day and tell you what the answer is.

00:17:16 And so people are sometimes a little skeptical.

00:17:18 They're like, wait, you're not doing day-to-day development anymore.

00:17:20 And yet, how do you know you're up on things?

00:17:23 And my answer is basically, first of all, I have the time to do it and I spend time doing it.

00:17:27 I blog about it and I write about it in my Linux Journal column.

00:17:29 But also, people are constantly pushing me to learn the newest things so that I can provide the best training and so I can answer their questions.

00:17:36 So I think it's great.

00:17:38 I think it's fun.

00:17:39 And I definitely am forced to keep up on things.

00:17:41 This portion of Talk Python To Me is brought to you by Linode.

00:17:46 Are you looking for hosting that's fast, simple, and incredibly affordable?

00:17:50 Well, look past that bookstore and check out Linode at talkpython.fm/Linode.

00:17:55 That's L-I-N-O-D-E.

00:17:57 Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:18:02 They have 10 data centers across the globe.

00:18:04 So no matter where you are or where your users are, there's a data center for you.

00:18:08 Whether you want to run a Python web app, host a private Git server, or just a file server, you'll get native SSDs on all the machines, a newly upgraded 200 gigabit network, 24-7 friendly support, even on holidays, and a seven-day money-back guarantee.

00:18:22 Need a little help with your infrastructure?

00:18:24 They even offer professional services to help you with architecture, migrations, and more.

00:18:28 Do you want a dedicated server for free for the next four months?

00:18:31 Just visit talkpython.fm/Linode.

00:18:34 I think you can do it as well.

00:18:38 I mean, there are certain personalities or types of folks, and it sounds certainly like you're one of them, who are just curious, will just dive in and learn all the details.

00:18:48 And then there's other people who are just, you know, give me some slides, and I'll just put them on the screen and talk about it, and I'll never open up an editor.

00:18:54 And, you know, like, if that's your path, obviously you're going to, like, decay super quickly, right?

00:18:59 But if you're really trying to write the code and do examples and build apps for your students in your classes, and then if they hit you with a question you don't know, and you actually go and learn that and research it, like, how often do people who are doing regular work with a, you know, a screen full of JIRA tickets, deadlines, you know, scrum?

00:19:18 Scrum sprints are ending, and, you know, you don't get the time to dig in and, like, ask the question below the surface.

00:19:26 That helps you really understand it.

00:19:27 Yeah, you know, I never even thought about this, but now that you're saying it, I think that my training has improved, like, gotten deeper and more interesting since I stopped splitting my time between development and training.

00:19:38 And since I was able to concentrate on what are the topics people need to know and what is the best way to explain to them.

00:19:44 And so that really, not having that pressure, not having to deal with sort of real-world development, as it were, has been a real plus.

00:19:51 Also, I can ask people, right?

00:19:53 I always ask my students, so what do you guys do and how does this work?

00:19:56 And that gives me a decent picture of what's going on out there and what challenges people are facing.

00:19:59 I think one of the things that blew me away, and just, you know, I know a lot of folks out there listening probably know, but I did for, like, 10 years.

00:20:05 The story that you're telling, I sort of lived that life as well and traveled around and taught courses.

00:20:10 And every week, almost every week, that you are actually off somewhere, you're in a different company, probably in a different industry with a different team that works somewhat differently.

00:20:20 So, you know, imagine what you learn if you have one job and then you move to another job.

00:20:25 You have now these two experiences, right?

00:20:26 Like, if you do that every week, every other week, let's say, the amount of different experiences and styles and workflows you get exposed to are just crazy.

00:20:35 Absolutely. And I also have a secret weapon, which is that I live in Israel, and Israelis don't hold back with questions and criticism.

00:20:43 So, like, when I'm teaching here, boy, oh boy, people, like, are just pelting me with questions all the time.

00:20:50 And it's a little exhausting, but it's fantastic because it means I'm sort of pushed to really know how to answer questions and understand different corner cases that they've encountered and they really want to know, and they're not going to let up until they get the answer.

00:21:04 Yeah, that's pretty interesting. So, you, like, go into the ringer.

00:21:06 You do battle, but you come out everyone knowing a lot more stuff. That's pretty cool.

00:21:12 What are the big distinctions I felt like? You talked about consulting and you talked about training.

00:21:17 One of the big distinctions that I learned pretty quickly when I got into it was, you know, when you're doing consulting and you're trying to solve a problem, you're like, I don't know how to do this.

00:21:28 So, you research it and you find a way that works. Yeah, good. We're done. This way works. Let's keep going.

00:21:33 Right? Until, unless it's, like, super performance critical. It's like, you know, real-time trading or something.

00:21:38 But, like, in general, like, you get it to work. That thing is done. On to the next.

00:21:42 But when you're doing training, it's not good enough to know this way will work.

00:21:47 You have to know, well, actually, there's three ways. X, Y, and Z. X is better in this situation. Y is better in that situation.

00:21:54 And here's why, other than when I said Z or whatever, doesn't even exist. Right?

00:21:58 So, you need to know not just what are the options, but what are the trade-offs. Like, all this kind of stuff.

00:22:02 And so, it takes kind of a different way of approaching learning, I think.

00:22:06 One of my favorite phrases that I use a lot when I'm teaching is, unfortunately, this works.

00:22:11 And so, I'll show them code. I'll be like, okay, this does the job, but we don't want to do it this way for the following reasons.

00:22:17 That's right. That's right. You need to understand what's happening here.

00:22:20 Yeah, pretty cool.

00:22:22 Let's talk about this from a couple of perspectives.

00:22:24 If I am a company who is, let's just make it a little concrete.

00:22:28 I've hired you, but, you know, more in general.

00:22:30 Like, I've hired someone like you to come teach my team, or I'm a student.

00:22:35 I'm going to be a student, and you're coming to my company, or I'm a team lead, or something like that.

00:22:39 You know, maybe let's just start, like, why should they have training at all?

00:22:42 Like, aren't these grown adults who have been to college, most likely, and they know how to study?

00:22:48 Like, there's Stack Overflow and Google. Let them go.

00:22:51 Oh, my God. So, right. So, I get this a lot, both from individuals and from companies.

00:22:56 And the analogy I use there is Stack Overflow is sort of like a phrasebook when you go to a foreign country.

00:23:03 So, you can go to a foreign country and, like, say, uh-oh, I want to order, like, bread at the bakery.

00:23:08 So, you look up how to do that. And then you have to pay. So, you look up how to do that.

00:23:12 And you can sort of kind of get around, but it's going to be very slow and very limited and very stilted and frustrating when what's in the phrasebook isn't quite what you need.

00:23:21 Yeah. Every time you'll make that mistake, you thought you asked for something and you got something totally different.

00:23:26 Like, oh, my gosh, why are they bringing all this meat? I just wanted some bread.

00:23:31 Exactly. A few weeks after I moved to Israel, I went to the open-air market and I thought I was buying some hangers for my closet at home.

00:23:38 And actually, what I was asking for was a hangman, like an executioner.

00:23:41 And the woman doubled over laughing and we realized what I really meant and went on from there.

00:23:48 But you do that in language, you're not trying to gain fluency in it. You're just going to constantly be at that level of that.

00:23:53 And everyone who uses Stack Overflow knows, oh, I'll just copy and paste what it is.

00:23:57 And when it doesn't work, I'll meddle with it and I'll meddle with it again and again.

00:24:01 And so, that lack of fluency is slowing you down, both sort of conceptually and in actual, like, time terms and what you're doing.

00:24:10 Yeah. And also probably adds a decent amount of technical debt, right?

00:24:13 Like, when the thing breaks on Friday morning, go ask Stack Overflow.

00:24:16 And it's in that area. You're like, what is this work? You're back at Stack Overflow trying to get the fix for the fix, right?

00:24:24 Like, it's a problem.

00:24:25 Precisely.

00:24:26 So, fluency, part of the reason you might look into training.

00:24:29 You also want, like, people to be sort of have the same basic core knowledge.

00:24:33 If you've got a team, and I work with a lot of companies where, like, when they do their onboarding, they have to know Python.

00:24:38 And so, they want everyone to have the same basic knowledge.

00:24:41 And some people have studied on their own. Some people have taken a class in college or something.

00:24:44 But you want everyone, like, you want everyone sort of to know the same stuff.

00:24:48 And so, training is useful for that.

00:24:49 But then there's the third part, which is the knowledge might be out there.

00:24:54 There's Stack Overflow, there are blogs, there are online things.

00:24:56 People won't do it.

00:24:57 So, I've got a client now where they're moving from doing some frontal training to doing what's called blended learning.

00:25:03 Like, so, they'll use my video courses along with me coming in.

00:25:06 And literally every time that I come in to sort of do the follow-up and exercise session, it turns out that most people have not watched any of the videos.

00:25:14 Why?

00:25:15 Because their boss, like, they're not going to be happy.

00:25:18 The bosses are not going to be happy to see people watching videos all day.

00:25:20 They're going to be happy seeing them do work.

00:25:22 So, people are like, okay, I'll wait and wait and wait.

00:25:24 And then they wait until it's too late.

00:25:25 And so, if you wait for people to study things on their own, they're just not going to do it.

00:25:29 Not because they're bad people.

00:25:30 Not because they're stupid people.

00:25:31 But because they don't have time.

00:25:33 Plus, they might find sort of the long way around to do it.

00:25:36 And a good trainer, a good teacher is going to have an efficient way to help you understand that information that you can do even faster than you could on your own.

00:25:44 Yeah, I think that's a really valid point.

00:25:46 And, you know, it seems like, you know, I made the joke about everybody being adults.

00:25:49 And, of course, they generally are.

00:25:51 But there is real value in saying, all right, everybody, you're not in meetings.

00:25:58 You're not doing your email.

00:25:59 We're all going to sit in this room together for four days.

00:26:02 I want to talk about programming.

00:26:03 And when you leave, you will have had some experience on the stuff you're supposed to know.

00:26:07 And just that, like, time boxing, actually, I think it's almost required for a lot of companies because they put so much pressure on their employees to, you know, like, okay, we're doing Scrum.

00:26:20 So, tell me today, this morning, what you did yesterday afternoon.

00:26:24 Right?

00:26:25 And if yesterday afternoon, I was trying to, like, take it a little slow and learn something and understand what I was trying to do.

00:26:31 Like, that's generally not progress in the Scrum world.

00:26:34 Right?

00:26:35 Or, I mean, I'm picking on Scrum.

00:26:36 Like, any of these sort of, like, really closely monitored, very little slack types of work environments.

00:26:42 That's right.

00:26:42 I had a company just, like, two weeks ago call me up and say, hi, we'd like to do some Python training.

00:26:47 I said, that's great.

00:26:48 What are your needs?

00:26:49 And they said, well, we're really very pressed for time at our company here.

00:26:54 So, really, what we want you to do is come in after work hours.

00:26:56 So, people will work, like, nine to five.

00:26:58 And then you'll come in and teach them from, like, five to 8 p.m.

00:27:01 I said, okay, that's just not going to work.

00:27:03 That's not going to work in so many different ways.

00:27:06 Partly because they're just going to be mentally exhausted after the day.

00:27:09 And learning new things is not going to be efficient or possible, let alone the top thing on their agenda.

00:27:14 Yeah.

00:27:14 You know, I've done that as well.

00:27:15 And I've seen it work and I've seen it not work.

00:27:18 Where it did work for me is I went and did a introduction to Python, sort of get going with Python course for stock traders.

00:27:27 Right?

00:27:28 These are, like, quantitative analysis folks.

00:27:30 Maybe they know Excel or they know a little, like, some kind of statistical language or something like that.

00:27:35 But they're not really programmers.

00:27:36 And they all want to move to, like, the data science stack.

00:27:38 And they had the class for an hour and a half after the markets closed at, like, 4.30 or whatever.

00:27:44 So it was, like, you know, 5 to 6.30 or something, which is kind of stressful.

00:27:48 But it wasn't too long.

00:27:50 And, you know, they were willing to pay the extra travel and all that kind of stuff to have me only work with their team for an hour and a half.

00:27:57 But these people apparently could not leave the training floor.

00:28:00 But they needed to learn Python and data science.

00:28:02 So how do you do that?

00:28:04 Right?

00:28:04 I mean, I think for them it worked actually pretty well.

00:28:07 But I've also seen it just not work.

00:28:09 Yeah, I also feel like doing it in those small chunks, you just don't get the sort of – it takes time to sort of ramp up during the day.

00:28:16 And then you get things going.

00:28:17 You get this nice momentum.

00:28:18 And I found when I do that, even, like, a half day, I just don't get enough time to build momentum so people can build on what they've learned.

00:28:25 For sure.

00:28:25 It's definitely suboptimal.

00:28:27 Like, you've got to give people space.

00:28:29 But, you know, I kind of made that comment before about not having enough slack.

00:28:33 I think there's something really valuable to work environments that will allow you to take that hour and actually learn that thing and not just – well, I found it on Stock Overflow.

00:28:42 We drop in the fix and we just keep rolling.

00:28:44 Right?

00:28:45 Because that adds up to badness in the end as you build more and more and more stuff that you don't deeply understand.

00:28:50 So, I don't know.

00:28:51 I mean, I guess that's just maybe a call to all the people out there who are leading teams or companies.

00:28:56 Like, you know, people who are programmers, they just need this time to go a little deeper.

00:29:00 Like, even if you have a PhD in computer science, like, they probably didn't teach you Django or pick some package that is really important that is certainly not taught in college, no matter how much college they have.

00:29:12 That's right.

00:29:12 And, I mean, if you go to a doctor, right, how is it that the doctor is up on things?

00:29:16 Because they have to do continuing education.

00:29:19 They have to keep up on stuff and it's even required for them.

00:29:22 And we hope that our doctors will do that.

00:29:24 Well, we should sort of hope that our software engineers will do that too and keep up on things.

00:29:28 But that means dedicating time to it, not just sort of finding time between other things.

00:29:33 I think also the environments that make that possible, they keep their good people.

00:29:38 The ones that squeeze that, even that little bit of time for learning and growth out of their people's workday, like, they lose their best people who are natural learners and naturally curious and stuff like that.

00:29:51 I mean, it literally costs their business bad in the long term to lose their best developers.

00:29:56 I absolutely agree.

00:29:57 Interesting.

00:29:58 So, I guess the next question I wanted to talk to you about is, so I've decided, you're right, we do need to stick all of our people in a room for four days.

00:30:07 And I'm not saying that facetiously.

00:30:08 I really mean it.

00:30:09 But one of the things that blew me away, I had been on so many sort of business calls trying to arrange a training, figuring out what the right type of training was in my previous life.

00:30:20 And it was, you know, people would come down and say, well, I don't know, there's this other company that's $1,000 cheaper than you guys.

00:30:27 And I know it's $12,000 and they're like 11 or 10.

00:30:30 And the reality is, they're taking 20 people who are, you know, professional developers and paying them a week's worth of work to be in those places.

00:30:41 So, like, the cost really is the time that they're paying their people to learn, not so much what they're paying you.

00:30:47 I mean, obviously that's money, but it's not the biggest part by far.

00:30:51 So, how do you, obviously you want to have the best training, the most effective use of that time of all of your 20 folks or however many there are.

00:30:58 How do you do that?

00:30:59 Look, you first of all want to make sure you know what you want them to learn, right?

00:31:03 You want to set up some sort of learning goals.

00:31:05 And someone who's good at training or a company that's good at training will be able to work with you on that.

00:31:08 They're not just going to say, well, you can choose from course A or course B or course C.

00:31:13 They'll say, oh, well, I see that your people, they already know the following things, so we don't have to really go into that.

00:31:19 Or they really need to know these following other things, so we should really add for that.

00:31:22 So, setting up learning goals is super important.

00:31:24 Telling them they should take it seriously is important.

00:31:26 Like, you want to tell your staff, look, don't just goof off and don't just do work on your computer while you're sitting in the training room.

00:31:32 I mean, I had one company once where they told people, you must close your computers while the training is going on.

00:31:37 That is, I think, bad.

00:31:38 But telling the managers, don't give your people that much work to these people this week.

00:31:43 Yeah, they'll be on their computers, but you want them to be paying attention is good.

00:31:47 And also telling people to participate in the exercises.

00:31:51 My courses are, I usually estimate, like 30% to 40% hands-on exercises.

00:31:55 And basically, there are always some people who it's clear they're not doing them.

00:32:00 They're doing other stuff.

00:32:01 They're like, yeah, yeah, whatever, I'll look at the answer.

00:32:03 But that's not the way it works, right?

00:32:05 Again, to sort of use the analogy of languages, you can't sort of look at the answers in the back to like a quiz in Spanish and say, oh, well, now I know Spanish, right?

00:32:14 You have to actually go through and trip over your tongue and make mistakes and learn, and then you will actually get better at it.

00:32:21 And so doing the exercises, and I always tell people they should do the exercises in pairs, doing pair programming.

00:32:26 And virtually no one actually does it.

00:32:28 But those who do gain so much more out of it.

00:32:31 Yeah, you can definitely tell, like, the folks at the end of the week who are like, these are the people that really benefited from this.

00:32:38 And then there's other people who were present.

00:32:40 Absolutely.

00:32:40 Absolutely.

00:32:41 And so one of my clients actually now has me give a test at the end of the course because they want to push people to really participate and learn and figure out sort of how to test and what to test the whole subject in and of itself.

00:32:53 But I think that has sort of put the fear of God into them that, oh, my God, my manager is going to know that I didn't really do anything this week.

00:33:00 And so they're a little more attentive, just a little more.

00:33:03 But it helps a little.

00:33:04 Yeah, that definitely can help.

00:33:05 Although, you know, it's so hard to give tests that are representative, right?

00:33:09 Like, yeah, I asked you this question and you said quick sort and I wanted bubble sort.

00:33:14 And it doesn't really matter.

00:33:15 If you can sort the thing, you're good, right?

00:33:17 But there's like, it's really hard to write those tests in a way that actually tests skill sets.

00:33:22 But, yeah, it's still worth doing, I guess.

00:33:24 If you're listening and you're a manager, don't make your people take tests at the end of the course.

00:33:28 There are better techniques.

00:33:29 I'm not trying to encourage it.

00:33:30 Yeah, because it's also such a pain for the trainer, let me tell you.

00:33:33 But I can see sort of their worries and why they want to make sure they're spending all this time and money that will actually benefit the company.

00:33:39 For sure.

00:33:39 All right.

00:33:39 So let's stick with this in-person training story for a little bit.

00:33:42 Then we'll get into some of the other options.

00:33:44 So you talked about being booked really far out.

00:33:47 I remember being booked pretty far out when I was doing this kind of stuff as well.

00:33:50 If I'm a team lead or somebody like that and they're like, I want to have some training for my team, how far out should I start to plan ahead on this?

00:33:58 For in-person training.

00:34:00 I mean, online is different than in-person.

00:34:02 It's different than bootcamps or whatever.

00:34:03 As far as possible.

00:34:04 I mean, we're recording this in late March.

00:34:07 And I've left on purpose a few weeks open in 2019.

00:34:11 But most of the rest of this year is already booked.

00:34:14 And I think I've already booked a few things in early 2020, believe it or not.

00:34:18 Big companies love to do things far in advance.

00:34:21 And big companies tend to snag a lot of training.

00:34:23 And so if you're interested in doing it, I've sometimes had companies say, hey, can you come in in two weeks?

00:34:29 And unless someone else is canceled, the answer is almost always no.

00:34:33 So people do cancel.

00:34:34 Right?

00:34:35 It does happen.

00:34:36 But it's relatively rare.

00:34:37 So if you think you're going to need, like I have a bunch of companies where they know they're going to have new people joining every two, three months.

00:34:44 And so they basically say, okay, let's schedule for October.

00:34:47 Because by then we'll have enough people who will be able to fill it up.

00:34:50 And if you can do that, that's even fantastic.

00:34:52 That's great.

00:34:52 Yeah.

00:34:53 Often one of the times I see people getting in-person training is when they're making a transition from one project to another as a team.

00:35:01 Maybe when I was done, now they're going to start a new project and they're going to use different set of packages or different aspects of the language or something.

00:35:08 Maybe it was CLI stuff.

00:35:10 Now they need to learn the web because it's all web services now.

00:35:13 Right?

00:35:14 And so I guess, you know, you've got to sort of think ahead and see where that end is going to happen because you want to have that shift happen as quickly as possible.

00:35:21 This portion of Talk Python To Me is brought to you by Metasnake.

00:35:27 Video courses and books are a great way to learn on your own.

00:35:31 However, many of us work in teams.

00:35:32 Wouldn't it be great to level up your team's Python or data skills in less than a week?

00:35:37 You could all be on the same page and speak a common language.

00:35:40 Metasnake provides intensive, hands-on training to teams in some of the largest corporations throughout the world.

00:35:46 It offers courses in Python fundamentals, intermediate Python, exploratory data analysis, machine learning, and more.

00:35:53 Live, in-person training is a cost-effective way to boost productivity, retention, and innovation.

00:36:00 Metasnake's intensive courses can be tailored to your specific needs and include generous amounts of hands-on labs so you and your team can try out your new skills.

00:36:07 Visit talkpython.fm/team training to get your free consultation for your training needs or just click the link in the show notes.

00:36:17 But these sorts of things, even in a small company, they can usually predict it, let's say, a few months in advance, making that sort of transition, whether it's a language or packages or versions or new people.

00:36:27 And so trying to get ahead of that, I'd rather have someone book time with me, say, three months in advance, and then two months in advance say, you know what, we're not going to need it then, then call me again and say, like, next week we need something, can you do it?

00:36:41 Because that's going to be very hard to do.

00:36:44 Because the answer is going to be no.

00:36:45 The answer is going to be no.

00:36:46 And I feel bad about it.

00:36:47 Like, I feel bad because I enjoy helping people, but, like, my calendar determines where I am each day, and I can't split myself.

00:36:53 Right.

00:36:54 And you definitely can't, not reasonably, cancel on other companies who have already booked that because they have the same pressures and needs and whatnot.

00:37:01 That's right.

00:37:02 All right.

00:37:02 So once a course is booked, what should the students do to get ready for it, to get the most out of it?

00:37:08 And also, what should the team lead do for that as well, for him or her and his or her people?

00:37:14 First of all, they should try to get things installed, right?

00:37:16 Like, so find out from the trainer what they're going to need to install.

00:37:20 That, for me, has always been a bit of an issue.

00:37:21 It sounds easy.

00:37:22 Like, just install Python 3, and I'll show up, and it'll be fine.

00:37:25 But, like, oh, but it says permission denied, and I can't install this.

00:37:29 Oh, and I won't run the unsigned MSI.

00:37:32 What is happening here?

00:37:33 Like, why is this so hard?

00:37:34 How are you developers, and you can't even, like, change your own profile?

00:37:37 Right?

00:37:38 I mean, you're laughing because it's, like, so painful.

00:37:41 Otherwise, you'll cry.

00:37:42 First of all, like, the notion of people not knowing how to change their path environment

00:37:46 variable and, right, being professional developers is shocking to me.

00:37:49 And yet, I encounter it.

00:37:51 Right?

00:37:51 Oh, we're talking.

00:37:52 Oh, my God.

00:37:52 Don't get me started.

00:37:53 But, like, also, I'm a Unix guy.

00:37:56 I use Macs nowadays as my desktop.

00:37:59 So I don't know a lot about Windows.

00:38:01 But I know a lot about installing Python on Windows because I have to deal with so many

00:38:05 of these, as you said, issues of permissions and versions and whatnot on Windows with my

00:38:10 students.

00:38:10 And, like, to such a degree that when I teach my, like, Python for non-programmers class,

00:38:15 I don't even ask them to install things.

00:38:17 I just set up a Jupyter Notebook on a server.

00:38:19 Like, I set up a VM.

00:38:21 And then they don't have to install anything.

00:38:23 And it makes life way, way, way easier because they really don't know what they're doing.

00:38:26 You all just connect to the Jupyter Notebook over their web browsers on a LAN or something

00:38:30 like that?

00:38:31 That's right.

00:38:31 I set up a VM on DigitalOcean for, you know, the four days of the course.

00:38:34 I set up, you know, Jupyter Notebook server.

00:38:37 Blaze through $2 or something?

00:38:38 Exactly.

00:38:40 Exactly.

00:38:40 Like, it costs me almost nothing.

00:38:42 I'm not about to charge the client for it.

00:38:44 And it solves a ton of problems in terms of the installation.

00:38:47 Definitely getting things installed.

00:38:48 And I have, like, a document that describes what I want people to install and how.

00:38:52 And if they encounter problems, they should try this.

00:38:55 And if they get a real problems, then I'll help them out.

00:38:56 But that tends to, you know, solve, say, two-thirds, three-quarters of the problems before we actually

00:39:00 start class.

00:39:01 And there's nothing worse.

00:39:03 That's really interesting.

00:39:04 Have you experienced Windows 10 with the new Python in the Windows Store side of things yet?

00:39:10 I have not.

00:39:11 I've heard of this Windows thing that you mentioned.

00:39:13 Yeah.

00:39:14 So, apparently, it requires no, any form of admin permissions, no skills whatsoever.

00:39:19 You got to go to the Windows 10 Store and say install.

00:39:22 It automatically puts it in your path.

00:39:24 It gives you Python and Python 3 commands on Windows.

00:39:27 Apparently, it's pretty slick.

00:39:29 So, Steve Dower put it together.

00:39:30 That is amazing.

00:39:31 Some of my clients, they probably won't be able to do that just because they have, like,

00:39:34 restrictions on what they can install.

00:39:36 That's another thing, of course, right?

00:39:37 Some of these people, they have computers.

00:39:38 But they're not allowed to actually install things because of the IT department.

00:39:41 So, you know, enter the minus minus user command or option in pip, right?

00:39:46 Yeah.

00:39:46 That sounds really, really good.

00:39:47 I should totally try that.

00:39:48 Yeah.

00:39:49 I think that's actually going to solve a lot of people's problems because the Windows 10

00:39:51 store does run super sandbox.

00:39:54 So, I think it'll have fewer restrictions.

00:39:56 Now, I'm out of the in-person training game.

00:39:57 So, I haven't had to go look the poor people in the face.

00:40:01 I don't know why they won't let you install this, but you're going to have to install this

00:40:06 for us to do this course.

00:40:07 And you spend an hour awkwardly trying to work through that with people.

00:40:11 And, of course, you know, you can't help them because you're not an admin either on their

00:40:14 network.

00:40:15 And they give you this look of, really?

00:40:16 You're serious?

00:40:17 It's so hard to install this programming language that everyone is excited about?

00:40:21 What the hey?

00:40:22 Yeah, but in their environment.

00:40:24 They don't think in those terms.

00:40:25 They're thinking, boy, it was never this hard to install Java.

00:40:28 It was never this hard to install .NET.

00:40:30 So, maybe this Windows 10 store thing will make it that easy.

00:40:33 It would be nice, right?

00:40:34 Amazing.

00:40:34 Yeah.

00:40:34 So, I'd definitely check it out.

00:40:35 It's going to make it easier.

00:40:37 I don't know if it'll fix it, but it'll make it easier.

00:40:38 So, one of the things you said was to install this kind of stuff.

00:40:43 Like, do you send them instructions?

00:40:44 Like, you're going to need to install these seven things.

00:40:46 This one takes forever.

00:40:48 This one is always blocked.

00:40:49 Get on it soon.

00:40:50 Or how do you tell them?

00:40:52 Yeah, yeah.

00:40:52 I mean, I have a document that says you're going to need to install X, Y, and Z.

00:40:54 Here's how to do it on Windows.

00:40:56 Here's how to do it on the Mac.

00:40:57 If you encounter a problem X, try Y.

00:40:59 And if you're really stuck, and especially, like, I have a bunch of clients where they're still using

00:41:04 Python 2.

00:41:05 And installing Python 2 and Jupyter on Windows, that combination trips people up a ton.

00:41:10 And so, I say to them, if you encounter problems that are not listed here, I'll help you the first day.

00:41:15 This is not you.

00:41:16 You know, it's normal.

00:41:17 And I'll help you out because I've dealt with this before.

00:41:19 And then, usually, during, like, the morning break or lunch break, I'll help them out for a few minutes.

00:41:24 Yeah, that's cool.

00:41:25 Do you use things like Anaconda, Anaconda distribution, or anything like that for the folks on Windows to, like, lower the threshold?

00:41:31 Or do you just stick to straight Python?

00:41:33 I stick to straight Python.

00:41:34 And the reason is, I mean, people always, there's always someone in each class who's like, well, I got it to work fine because I used Anaconda.

00:41:40 And I'm like, listen, Anaconda is amazing if you're going to stay using Anaconda and only that.

00:41:45 But my experience is that people who are doing Python development in their work, then they end up with two installations, Anaconda and regular Python.

00:41:52 And then, they're even more confused.

00:41:54 What did I install?

00:41:55 Where did I install it?

00:41:56 How does it work?

00:41:57 So, I prefer to sort of go through that brush and deal with it and, like, solve the problem rather than going around it.

00:42:03 Right.

00:42:03 I've created Anaconda environment, but then I did something with pip that, like, screwed that up.

00:42:08 And then, like, yeah, it gets tricky.

00:42:10 Precisely.

00:42:11 Yeah.

00:42:11 Interesting.

00:42:11 Okay.

00:42:12 So, that's where the students install stuff.

00:42:14 Should they study ahead?

00:42:15 I don't think there's a real need for it.

00:42:16 It can't hurt.

00:42:17 It can't hurt to, like, do an intro Python tutorial or something like that just to get ahead a little bit.

00:42:21 Probably depends on the topic, right?

00:42:23 If it's an advanced Python course, you need to, like, get some better foundation.

00:42:27 Maybe that makes more sense.

00:42:28 Intro Python courses, by definition, we're sort of starting off from zero and we assume people don't know anything.

00:42:33 The advanced courses are always tricky because everyone has a different definition of advanced.

00:42:38 Oh, yeah.

00:42:39 So, I definitely have people take my advanced courses where they're taking it because, well, they took the intro course five years ago.

00:42:45 And, no, they haven't used Python since, but this is the next logical progression.

00:42:48 So, for them, yeah, they should totally, like, get up on things a little more.

00:42:51 But in the advanced course, I find that you always have a few people who have truly advanced questions.

00:42:56 And so, that's a good opportunity to ask them and try to figure them out.

00:42:59 Yeah, for sure.

00:43:00 Okay.

00:43:01 And how about the team lead?

00:43:02 Is there anything they should be doing to help their people?

00:43:04 Maybe identify problems that people are having or the use cases, right?

00:43:07 I always find it interesting to hear what people are using Python for so that I can, if possible, if necessary, sort of adjust things.

00:43:13 So, if they can sort of investigate, if they can bring often, like, if I teach my regular expressions course, I like to have log files from the actual team so that we can parse through those and have fun with those.

00:43:23 So, preparing that kind of thing can be really useful.

00:43:26 Yeah.

00:43:26 Because they often have a better high-level view, right?

00:43:29 Like, maybe you're going to be put onto a project, but you don't have any experience with it until you're done with this course.

00:43:34 So, you don't really know how it's going to be used or really the details.

00:43:36 But maybe the team lead's already gotten in there.

00:43:39 And they understand, like, no, no, we don't care about SQLAlchemy ORM.

00:43:44 We're using core.

00:43:45 Here's why.

00:43:46 Let's just focus on that.

00:43:47 Things like that maybe keep it more relevant.

00:43:49 That's right.

00:43:49 I do find, though, when you would go through those experiences, like, we don't use ORMs because they're evil.

00:43:54 And then if you actually, I mean, that's just an example.

00:43:57 Maybe consider them to actually be evil.

00:43:58 But, you know, we don't use this because.

00:44:01 And that because actually meant the person who made that decision never gave it a shot, never tried it, or that was 10 years ago when they sucked, but now they're great.

00:44:09 Something like that.

00:44:10 And you're like, oh, well, the thing that you asked that took me half an hour, like two minutes, and this thing that you're not going to use, boom, solved.

00:44:17 And you might consider using that, right?

00:44:19 Like, I think there's interesting opportunities to question assumptions and sort of revisit stuff like that as well.

00:44:25 So I don't necessarily want to encourage people to completely just go only do the stuff that we're doing.

00:44:30 I actually started doing Git training because I happened to mention Git when I was doing Python training somewhere.

00:44:36 And people's faces, like, started to get really angry.

00:44:39 And if they had things to throw at me, they would have thrown them at me.

00:44:42 They're like, Git, that thing that makes us lose all of our files, that thing that they're forcing upon us.

00:44:46 And, of course, like a normal person.

00:44:48 It's so horrible.

00:44:49 I want CVS back.

00:44:50 It's like a normal person would have said, oh, these people are really upset.

00:44:55 And I was like, business opportunity.

00:44:58 So I started doing Git courses.

00:44:59 And people were like, and I remember teaching those very people a few months later, Git.

00:45:04 And it was about like halfway through the course where I described them how merges work.

00:45:08 And all of them said, oh, that's what we've been doing wrong.

00:45:12 And suddenly, like, they realized that they had been doing it the hard way.

00:45:17 And, oh, well, maybe if we'd done it the right way, it wouldn't have been so horrible and painful.

00:45:21 Yeah, that's a perfect example.

00:45:23 Yeah, very interesting.

00:45:24 We're actually burning through our time really quick.

00:45:26 This is a problem.

00:45:27 Because we have so much stuff to talk about.

00:45:29 And, you know, that's okay.

00:45:30 So let's switch things around and look at it from the opposite perspective.

00:45:34 So we've been talking about, like, I'm a company, a person, a team lead, whatever.

00:45:38 And I want to have training.

00:45:39 I want to get the most out of it.

00:45:40 So on.

00:45:41 I suspect a lot of folks out there are listening going, you know, the training, when that person

00:45:46 comes in, they talk about all the cool stuff they do.

00:45:48 They're really knowledgeable.

00:45:49 And then they take off to somewhere cool and maybe sunny.

00:45:51 And I go back to my cubicle.

00:45:53 Wouldn't it be better if my job was more like that and less like JIRA tickets in a cubicle?

00:45:59 Nothing wrong with that.

00:46:01 But maybe you're looking for a change.

00:46:02 Like, for folks who are considering getting into training, maybe what's the story there?

00:46:08 Like, how should they go about it?

00:46:10 Is it a good idea still these days?

00:46:12 Things like that.

00:46:12 So I think it's fantastic.

00:46:14 I love my work.

00:46:15 I find it interesting.

00:46:15 I find it sort of inspiring that I can help people.

00:46:18 And so I definitely encourage people to look at it.

00:46:20 But you have to remember, it's a business.

00:46:22 And so you need to do three things.

00:46:24 One is you have to really know, like, the Python stuff if you're doing Python training.

00:46:27 Number two is, like, in the education biz, we talk about pedagogical knowledge.

00:46:32 And pedagogical, I'm sorry, content knowledge and pedagogical content knowledge.

00:46:35 So there's, like, knowing the thing, knowing Python.

00:46:38 And there's the knowing how to teach Python, which is a skill in and of itself.

00:46:42 Every listener probably had university professors who were clearly brilliant and couldn't explain anything they were doing.

00:46:48 They were lacking that pedagogical content knowledge.

00:46:51 And so if you're going to train, you need to think about, how do I explain things?

00:46:55 How do I make this clear?

00:46:56 Either through examples or through demos or through exercises or through analogies or through stories.

00:47:02 I tend to use a ton of stories, both because I think it breaks up the day and because I just like to tell stories.

00:47:07 And because it helps people sort of be primed for the ideas.

00:47:10 But then there's the business side, right?

00:47:12 There's finding clients.

00:47:13 There's booking them.

00:47:14 There's convincing them that you're worth working with.

00:47:16 There's the whole billing thing.

00:47:19 And so I would say a good place to start, to sort of stick your toes in the water, is give talks at conferences and meetups.

00:47:25 See how happy you are doing that.

00:47:27 See how comfortable you are doing that.

00:47:29 And see how people respond.

00:47:30 And if people come up to you and say, oh, my God, this was the best thing ever consistently, then great.

00:47:35 That's a good direction for you.

00:47:36 If they don't, then just improve, right?

00:47:39 Everyone starts off being bad at public speaking and explaining things.

00:47:42 And if I look back to what I tried to teach, like my first year was teaching Python.

00:47:45 Oh, my God, it's so embarrassing.

00:47:46 Like I tried to stuff like a thousand topics into two days.

00:47:50 And if I gave each one more than three sentences, I'd be surprised.

00:47:53 That's not training.

00:47:54 But they invited me back for some reason.

00:47:56 And so I got to improve.

00:47:58 And so over time, you'll find like topics you're good at.

00:48:01 And then you can say, oh, well, maybe I can offer this to people.

00:48:04 You don't have to do it full time.

00:48:05 You can do a little bit here and there.

00:48:06 Yeah, that's really interesting.

00:48:07 And it sounds like, if I'm remembering this correctly, the way you started and also the way I started was started working for another training.

00:48:16 An established existing training company.

00:48:19 So I started working at Developmentor way, way long ago, like 2006 or something like that for quite a while.

00:48:25 And they had the sales team.

00:48:28 They had the logistics.

00:48:29 They even had the courses written.

00:48:30 I had to make it my own.

00:48:31 But, you know, I could just show up and teach that thing.

00:48:34 They say, hey, you've got to be in Roseville, California in two weeks.

00:48:38 And they want to know this.

00:48:39 You know, and it was they handled a whole lot of it.

00:48:42 Right.

00:48:42 Like you as an independent person, you have to deal with accounting, with taxes, with finding clients, with retaining clients, with billing them, with invoices and POs and vendors.

00:48:52 And just, you know, like a whole host of things that people don't have to.

00:48:57 So do you recommend maybe starting out by working with some existing training company?

00:49:01 Or do you think, you know, you just do the dive headfirst in the deep end and, you know, make your way?

00:49:06 You've said all the advantages of working with a training company.

00:49:09 And if you're not interested in dealing with all the business stuff or if you need sort of a shorter timeline, then that's probably the way to go.

00:49:17 Because they will find you stuff pretty quickly.

00:49:19 And doing it on your own is a way longer game to play playing because you've got to put your name out there.

00:49:24 You have to make sure people know who you are.

00:49:25 You have to improve your courses.

00:49:26 You have to like you're dealing with marketing and business development with large companies, even medium, small companies can be hard.

00:49:32 And it's a long, long term thing.

00:49:34 You said you have to get out there.

00:49:36 You have to have a long runway for this to develop.

00:49:39 You've got to start blogging.

00:49:40 You've got to start writing or speaking.

00:49:43 You've got to let that percolate up into the awareness and then the sales cycle, the enterprise side of like a couple months out.

00:49:50 And like it's not something you could just quit your job and then start.

00:49:53 No, no, no, no, not at all.

00:49:54 And so that's why a lot of people start when they're consulting because they can sort of slowly but surely add to the training and remove from the consulting stuff.

00:50:01 And they're still going to be able to, you know, eat and pay the mortgage.

00:50:05 Necessary conditions for continued work.

00:50:09 The disadvantage of working with a training company.

00:50:11 And so like I did it first on my own and then I was with a training company and I went back to do it on my own.

00:50:15 The disadvantage of the training company is basically that they take a huge bite out of whatever you could be earning.

00:50:21 Like 70% or something, right?

00:50:22 Like a really significant.

00:50:24 I taught once in Tel Aviv this like open enrollment course.

00:50:26 And someone came up to me and said, do you know how much we're paying to be here?

00:50:29 I said, no, I don't know.

00:50:31 And he told me, I realized I was getting 10% of the income from the course.

00:50:35 And I marched into the CTO's office and I said, this is ridiculous.

00:50:39 You're paying me only 10%.

00:50:40 And she said, well, you know, we have a very expensive building to run.

00:50:44 And that's when I realized, okay, like that's not my problem.

00:50:48 Yeah.

00:50:48 Yeah.

00:50:49 Yeah.

00:50:49 The minimum amount of revenue we have to have just to keep the lights on and pay the accountants and the secretaries and the rent and all that is, you know, hundreds of thousands of dollars.

00:50:59 You're like, well, you know, if I did this on my own, I don't have that problem.

00:51:02 That's right.

00:51:03 My margins are way better.

00:51:04 However, however, these training companies will typically sign you on to a non-compete.

00:51:09 And those can range in length of time and level of draconianness where basically they'll say you like, because everyone thinks, oh, I'll start teaching for company X and then I'll leave company X and I'll keep all the clients.

00:51:21 And they are not so stupid and they will sign you on a contract.

00:51:24 Yeah.

00:51:24 Which might or might not be enforceable to do.

00:51:26 I've never checked saying that you can't compete with them.

00:51:29 Absolutely.

00:51:29 The places I've seen this as certainly with the clients, like, you know, I've never checked.

00:51:33 You don't go into the client and say, I know you're paying them, but I'll do it for half what you're paying them.

00:51:38 If we do this on the side, like that is a super recipe for some kind of big issue probably involving lawyers.

00:51:44 You don't want to go near.

00:51:45 The other one is around the actual course content, right?

00:51:49 Like if you create course content for them, like that's kind of theirs now a lot of times.

00:51:55 Right.

00:51:55 So is it?

00:51:56 Oh my God.

00:51:57 It can be.

00:51:58 Oh, it definitely can be.

00:51:59 If the training company is paying you to write a course for them that they're going to sell like through you, but also through other trainers.

00:52:05 A lot of times those contracts will have a, and this is our content.

00:52:09 Not like you're barred forever from talking about the web or something, you know, but you've got to restart from scratch, not using that material.

00:52:16 Right.

00:52:16 So you might feel like, oh, I'm going to build up all those libraries and I can leave.

00:52:19 And yeah, there's a lot of danger or precariousness to that plan.

00:52:23 Right.

00:52:24 But I would say a ton of people do it anyway, because you get experience, you get exposure, you get your name out and better to sort of try out your training to do when someone else is dealing with the marketing.

00:52:36 And then after a while, like there are tons of companies as we know using Python nowadays.

00:52:39 So, okay.

00:52:40 So you won't deal with any of the clients you dealt with before, but now that your reputation is good, people will call you and ask you to do it and you can do it freely.

00:52:47 And there's probably some part of the non-compete where if they reach out to you directly, it wasn't the same department.

00:52:54 There's, there's probably ways in which you could actually get back into the same situation, but you know, it's, that's lawyers and, and trouble.

00:53:01 I certainly see the benefit of doing this on independent, but I feel like it's, it's quite tricky.

00:53:06 I kind of want to go back to what you said about getting into it.

00:53:08 I want to second this public speaking side of things.

00:53:12 Like it's pretty clear that most developers are pretty good and certainly have some area where they're really good at, right?

00:53:18 They've been working a long time or whatever, and they could train in that area for sure.

00:53:22 But the ability to stand up in front of 20 people and have a clear, coherent conversation and like lead that group, answer the questions, you know, do all that kind of stuff.

00:53:33 Like that's not natural for a lot of folks.

00:53:35 And so this, this public speaking experiences, meetups are really good.

00:53:40 Conferences are good.

00:53:41 User groups, code camps, all these things are a lot of them.

00:53:46 Basically, if you apply, you can get in there, right?

00:53:48 A lot of the larger multi-track things.

00:53:51 And that's just super experienced, right?

00:53:53 It's super stressful at the beginning.

00:53:54 It takes a long time to get even just an hour presentation.

00:53:57 And you think, well, how am I going to do eight hours a day for four days?

00:54:00 If it took me a month to do an hour, like that's insane.

00:54:02 I'm never going to get this done, but you know, you get faster, you get better.

00:54:05 But I think you really have to go through that sort of growth curve if you don't have public speaking experience somewhere else.

00:54:11 It's sort of like, I often make the analogy to like stand up comedians where they'll try a bunch of jokes and they'll see which ones work and which ones don't.

00:54:18 And so as you teach some, and then they'll sort of like, you know, go through this iterative process.

00:54:23 So as you teach a topic, and if you give the same talk at multiple conferences and meetups, you'll see which of your explanations work and which don't.

00:54:30 And so you're going to end up with some stuff that's really good and that you can call your own as well.

00:54:35 That you're not, it's not derivative material from anyone else.

00:54:38 But you got to go through the process.

00:54:40 Yeah, you do.

00:54:40 You know, and you, it's funny you mentioned the stand up comedians.

00:54:43 Like it sounds like theoretical or maybe they go back afterwards and they think back on how it went.

00:54:48 I lived in New Jersey for a little while where my wife was teaching at Rutgers.

00:54:52 And Chris Rock, the comedian, also lived not far away from there.

00:54:56 And so there's this little tiny comedy club, you know, maybe it holds a hundred people or something.

00:55:01 And he did not one show, but he did a show every night for like a week.

00:55:05 And he would come up and he had a legal pad and he would look at it and he'd study it.

00:55:11 Then he would tell a joke and then he would take notes on it and they would do it again.

00:55:15 And the bargain was, yeah, you can see Chris Rock like almost front row for like 20 bucks or 10 bucks.

00:55:20 The trade-off is he's practicing for his big event in Vegas and he's going to do that live with you.

00:55:25 So it was pretty interesting to see it in action.

00:55:28 That is so fantastic.

00:55:30 Yeah.

00:55:30 If you follow comedians, like they are very serious about their work and figuring out what does and doesn't work.

00:55:36 I actually saw like the online course with Steve Martin about how to do like stand up comedy.

00:55:41 And I found a lot of the things he said really resonated with me.

00:55:44 Yeah, it's super interesting.

00:55:45 I think, you know, one of my friends who did training with me, he was a stand up comedian as well.

00:55:50 And I think, you know, they're not that, I mean, they're obviously different, but they're more similar than people would think who are, you know, not familiar with it all.

00:55:58 My family hates my jokes.

00:55:59 So it's good that I have my students to inflict them on.

00:56:02 That's right.

00:56:02 They're stuck there for four days.

00:56:04 I'm going to admit it.

00:56:05 All right.

00:56:06 We're getting short on time.

00:56:07 So let's talk about a couple of other things that you have going on.

00:56:09 So, you know, you talked about some of the courses that you have.

00:56:11 You have a couple of online courses, a couple of in-person courses.

00:56:14 Maybe just quickly tell people like some of the stuff that you have out there so they have a sense of where you're coming from with this perspective.

00:56:20 Sure.

00:56:20 So like my in-person courses, I've got a bunch of different levels of like Python.

00:56:24 So I've got Python for non-programmers and intro and advanced and intro to data science, machine learning.

00:56:29 And then a few other things I guess mentioned, like a Git course, regular expressions.

00:56:33 Some of those, I'm sort of moving those online more and more just because, as I said, like my time is limited.

00:56:39 I can't reach everyone I want.

00:56:40 And there are individuals who might want it too.

00:56:41 So like I've got my online store and those are sort of traditional online courses where you have the videos.

00:56:47 I've tried to include a ton of exercises because from my perspective, like the practice is where it's at.

00:56:51 And so in my online courses, I'll say, okay, here's your exercise.

00:56:55 Like go do it.

00:56:56 And then the next video, I go through the process of how to solve it.

00:56:59 And so I have another set of online courses, which are very, very different.

00:57:02 Weekly Python exercise, which strangely enough, as you might not be able to guess from the name, it is a weekly Python exercise.

00:57:09 And the idea is basically that every Tuesday you get an exercise in the email and then you have a week to solve it.

00:57:15 And the following Monday, you get the solution.

00:57:16 And there's a forum where people can exchange ideas, suggestions, solutions.

00:57:22 And the idea is, and each version of Weekly Python exercise.

00:57:25 So they're like six different courses, three intro and three advanced.

00:57:28 Each one is 15 weeks long.

00:57:30 And the idea is that you are going to be forced to go through exercises that are close enough to the real world that they'll get you to understand some skills.

00:57:38 But they're different enough that you don't feel the stress of work.

00:57:41 And that it's what I call controlled frustration.

00:57:44 Like you might be frustrated, but it's in like, it's time boxed and it's not connected to your work.

00:57:50 And so that's like the thing that I'm building up mostly and that I'm really excited about because people are always asking me, okay, we finished the course.

00:57:57 Where can we get more practice?

00:57:59 Yeah, that's really cool.

00:57:59 I like that idea.

00:58:00 You know, Will Smith, I think, he actually said this.

00:58:04 I don't know if he actually created this idea.

00:58:07 This was his original idea or he's just repeating it.

00:58:08 But that practice is controlled failure.

00:58:12 Yeah, it sounds like this is that for programming.

00:58:15 Like, yeah, you might not get it right all the time, but it's not so far out of touch that you have no hope or whatever, right?

00:58:22 You'll be brought along.

00:58:23 It's cool.

00:58:23 That's right.

00:58:24 That's right.

00:58:24 Yeah, absolutely.

00:58:25 In addition to that stuff.

00:58:26 So, I mean, I have a newsletter that I send out once a week.

00:58:29 Well, two newsletters.

00:58:30 One for Python programmers, which are called Better Developers, and the other one for trainers called Trainer Weekly.

00:58:36 And basically, with the Python newsletter, I just sort of get lots of ideas from my students for things that they are confused about or they want to know about and things that I want to learn about.

00:58:45 And so I can write that up.

00:58:46 And Trainer Weekly, I'm basically writing about all the things we've discussed here and more, like the business side of training, the logistics of it.

00:58:53 How do you put together a syllabus?

00:58:55 How do you approach clients?

00:58:56 How do you get clients?

00:58:57 Including a whole bunch of my failures, like you mentioned failures just now.

00:58:59 I tried to put together an open enrollment course in Tel Aviv, and it was an abject failure.

00:59:04 So I describe what I did wrong and what I'm going to try to do better next time around.

00:59:08 That's pretty cool.

00:59:08 The training one sounds super interesting to me.

00:59:11 You know, if I was still doing that, I would definitely sign up for that.

00:59:13 That's pretty cool.

00:59:15 You also do a podcast, right?

00:59:17 I have, like, the main podcast I do is called The Freelancer Show, which is for, strangely enough, freelancers and consultants.

00:59:23 And I'm one of the panelists there.

00:59:25 I've been on for like four or five years now, I guess.

00:59:27 And there we talk about everything having to do with freelancing.

00:59:30 Obviously, my perspective is one of training, but we talk about pricing.

00:59:34 We talk about finding clients.

00:59:35 We talk about what to do when things go wrong.

00:59:37 A lot of pricing stuff, but also a lot of marketing.

00:59:40 But also sort of how do people who are freelancers need to understand, yeah, they're good at what they do, say programming.

00:59:45 But when you're freelancing, you have to be good at the business side, too.

00:59:48 And that's where a lot of people are lacking.

00:59:50 Yeah.

00:59:50 Is it almost like a mastermind group?

00:59:52 Sort of.

00:59:53 Sort of.

00:59:53 I mean, usually every week we'll have a topic.

00:59:55 This week we're going to talk about how to raise prices on clients.

00:59:59 And the next week we're going to talk about how can you approach big companies.

01:00:02 And so, yeah, you could argue it's a mastermind.

01:00:04 We have guests probably like once every month or so now who are successful freelancers who come in and share their ideas and topics with us.

01:00:11 Super.

01:00:11 It sounds interesting.

01:00:12 People should check it out.

01:00:14 PyCon.

01:00:15 Last time we talked in person was in Cleveland.

01:00:18 And we're both going to be back there.

01:00:20 We both are going big and having booths and all sorts of fun stuff, right?

01:00:23 I am super, super excited about PyCon.

01:00:26 It was the best when I went there last year and when we met.

01:00:29 So, yeah, so I'm going to have a booth under the weekly Python exercise name.

01:00:32 I'm going to be talking about, like, my courses and my books and online stuff.

01:00:37 I'm also giving a talk about decorators on Friday morning.

01:00:41 So, I will be a bit of a zombie afterwards, but I am so, so, so excited about this.

01:00:47 That's super cool.

01:00:47 I'm super excited as well.

01:00:49 Like, PyCon, it's like my geek holiday.

01:00:52 I get away, hang out with my friends and just fully embrace the whole programming world.

01:00:57 I love it, every bit of it.

01:00:59 So, looking forward to it.

01:01:00 My 16-year-old is learning Python as part of, like, an entrepreneurship and programming thing she's in here in Israel.

01:01:05 And she is devastated.

01:01:07 She can't come to PyCon with me because it interferes with end of high school exams.

01:01:10 Like, we were planning on this and we keep going through the calendar.

01:01:13 So, like, we keep saying, okay, maybe next year.

01:01:16 Because she, even without having been there, is super excited.

01:01:18 So, if she's excited, you out there should be excited.

01:01:20 Yeah, absolutely.

01:01:21 I think it would be a really cool experience as a high schooler just getting into programming.

01:01:25 It took quite a while for me to kind of program alone reading books before I actually got out into the crowd.

01:01:31 So, it was nice.

01:01:32 All right.

01:01:32 Well, PyCon is going to be great fun.

01:01:34 I think you've shared a lot of interesting stuff around training, both for people consuming training or those who want to get into training.

01:01:41 A lot to think about there.

01:01:43 Before I let you go, though, Ruben, two questions for you.

01:01:46 If you're going to write some Python code.

01:01:48 And let me ask this.

01:01:48 I'm going to give you a double first question.

01:01:50 If you're at home working on a project for yourself, what Python editor do you use?

01:01:56 And if you're up in front of a whole bunch of people doing a presentation, a training class, what editor would you use there?

01:02:03 Is that the same?

01:02:03 It's different?

01:02:04 What's the story?

01:02:04 So, I was brainwashed at the age of 18 to believe that Emacs is the only editor out there.

01:02:10 Of course.

01:02:11 It's built on Lisp, right?

01:02:12 So, end of discussion.

01:02:16 I mean, look, when I was at MIT, even the secretaries used Emacs.

01:02:19 So, like...

01:02:20 Wow.

01:02:21 And I think I met my first non-Emacs user after I graduated.

01:02:27 I was like, really?

01:02:28 There's this thing called VI that people can use?

01:02:30 How odd?

01:02:31 And you take yourself seriously.

01:02:32 And now I've learned to, like, muffle my laughter because it's considered impolite.

01:02:36 But I tell my students that they should use PyCharm because, like, the learning curve is, shall we say, slightly lower.

01:02:42 But in front of them, I'll definitely use Emacs.

01:02:44 That said, most of my presentations, like, I barely use slides.

01:02:48 Like, I'll send people the PDFs of the slides.

01:02:49 And almost everything I do is live coding while talking.

01:02:52 And I use Jupyter for that.

01:02:54 And it's not quite Emacs, but it's perfect for presentations.

01:02:57 And I can send people the notebook at the end of the day.

01:03:00 Yeah, it's cool.

01:03:00 And you can have better notes and links and stuff in there.

01:03:03 It's not just, like, a weird comment that, you know, you stick in some part, right?

01:03:07 It's got this flow.

01:03:08 That's cool.

01:03:08 I certainly think those are good ideas.

01:03:10 I was thinking maybe Jupyter might make an appearance in your answer there somehow.

01:03:13 Yeah, since you had the Jupyter notebook set up for the students as well.

01:03:17 Okay, so notable PyPI package.

01:03:19 Maybe not the most popular, but something you heard of.

01:03:21 You're like, oh, you should learn about X.

01:03:23 I wish I had something super clever to say.

01:03:25 And I'm just going to stick with, like, Jupyter and, you know, pandas.

01:03:29 I continue to be impressed by pandas.

01:03:31 Boy, oh, boy.

01:03:33 They just stick a lot of stuff in there.

01:03:34 And, I mean, I only use it in my data science courses.

01:03:38 But people's jaws just drop when they see what they can do with it in so little code.

01:03:43 Yeah, those are both super good.

01:03:44 One that I ran across that you might find interesting is something called Bullet.

01:03:48 Like, the gun type of bullet.

01:03:51 But it's for building command line interfaces that instead of, like, printing out option one, option two, option three, which do you want?

01:03:58 Enter one, two, three.

01:03:58 It's like a combo box with a select drop-down type thing in the CLI.

01:04:03 It even has a scroll bar if they exceed too long.

01:04:06 And it's all, like, terminal-based.

01:04:08 It's beautiful.

01:04:08 Whoa.

01:04:09 Okay.

01:04:09 I got to look that up.

01:04:10 That sounds amazing.

01:04:10 Yeah.

01:04:11 It's pretty simple but also pretty cool.

01:04:14 So, anyway, yeah, a bunch of cool packages.

01:04:16 Jupyter and Pandas are definitely changing the world.

01:04:20 Well, final call to action.

01:04:21 Let's say people are interested in getting into training, getting started with that.

01:04:25 Like, what would you tell those folks?

01:04:27 As I said before, go try to give talks.

01:04:29 Find something that you find really interesting because if you find it interesting, other people will probably find it interesting.

01:04:33 And propose it as a talk.

01:04:35 And that will force you to really understand it because you're going to be explaining to other people.

01:04:38 That will force you to think about how you're going to present it.

01:04:40 And it probably won't go great the first time, but that's to be expected.

01:04:44 And so just sort of try.

01:04:46 If you, like, my trainer weekly newsletter has lots of tips about that.

01:04:51 And if you want, you can also reach out.

01:04:52 I'm happy to talk to people about this.

01:04:53 I love, love, love talking about training with people.

01:04:55 Super.

01:04:56 And if people want to have training at their company, what do you tell them?

01:04:59 I tell them, call me, email me.

01:05:01 Like, you can email me at my email address, my info.

01:05:03 And the list of the courses I offer is on my website.

01:05:06 That's at learner.co.il.

01:05:08 Ironic, the last name I know, but it's L-E-R-N-E-R, not L-E-A-R.

01:05:12 Learner.co.il.

01:05:13 And people can see that there.

01:05:15 Cool.

01:05:15 Yeah, we'll put a link in the show notes.

01:05:17 All right.

01:05:18 Well, Reuben, it's been great to talk to you about this stuff.

01:05:21 And yeah, I didn't even get to ask you about the confessions of a public speaker.

01:05:25 But I think we're out of time.

01:05:28 I'll put a link to this book that has a whole bunch of crazy stories that people who do training

01:05:32 and public speaking have run into.

01:05:34 And maybe next time you're on, we'll talk some about that.

01:05:36 I'd be delighted.

01:05:37 And we can do a PyCon chatting it up and exchanging horror stories with one another.

01:05:41 That sounds like it'll go well over a beer in Cleveland.

01:05:43 I'll see you there.

01:05:44 Excellent.

01:05:45 See you there, Michael.

01:05:46 Yeah.

01:05:46 Talk to you later.

01:05:47 This has been another episode of Talk Python To Me.

01:05:50 Our guest on this episode was Reuben Lerner, and it's been brought to you by Linode and Metasnake.

01:05:56 Linode is your go-to hosting for whatever you're building with Python.

01:06:00 Get four months free at talkpython.fm/linode.

01:06:04 That's L-I-N-O-D-E.

01:06:05 Metasnake is the place to go for your in-person team training needs.

01:06:10 Get a free consultation for your team at talkpython.fm/team training.

01:06:16 Want to level up your Python?

01:06:18 If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

01:06:23 Or if you're looking for something more advanced, check out our new async course that digs into

01:06:28 all the different types of async programming you can do in Python.

01:06:31 And of course, if you're interested in more than one of these, be sure to check out our

01:06:35 Everything Bundle.

01:06:36 It's like a subscription that never expires.

01:06:37 Be sure to subscribe to the show.

01:06:40 Open your favorite podcatcher and search for Python.

01:06:42 We should be right at the top.

01:06:43 You can also find the iTunes feed at /itunes, the Google Play feed at /play,

01:06:48 and the direct RSS feed at /rss on talkpython.fm.

01:06:52 This is your host, Michael Kennedy.

01:06:54 Thanks so much for listening.

01:06:56 I really appreciate it.

01:06:57 Now get out there and write some Python code.

01:07:09 I'll see you next time.

01:07:17 Bye.

01:07:18 Bye.

01:07:19 Bye.

01:07:19 Bye.

