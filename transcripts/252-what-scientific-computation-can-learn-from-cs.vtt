WEBVTT

00:00:00.001 --> 00:00:03.200
Did you come into Python from a computational science side of things?

00:00:03.200 --> 00:00:07.720
Were you just looking for something better than Excel and MATLAB and you got pulled in

00:00:07.720 --> 00:00:09.540
by all that Python has to offer?

00:00:09.540 --> 00:00:10.560
That's great.

00:00:10.560 --> 00:00:16.260
But following that path often means some formal practices from software development weren't

00:00:16.260 --> 00:00:17.020
part of that journey.

00:00:17.020 --> 00:00:21.940
On this episode, you'll meet Martin Haru, who does data science in the context of academic

00:00:21.940 --> 00:00:22.600
research.

00:00:22.600 --> 00:00:27.180
He's here to share his best practices and lessons for data scientists of all sorts.

00:00:27.420 --> 00:00:32.580
This is Talk Python To Me, episode 252, recorded January 30th, 2020.

00:00:32.580 --> 00:00:50.520
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the

00:00:50.520 --> 00:00:51.980
ecosystem, and the personalities.

00:00:51.980 --> 00:00:53.920
This is your host, Michael Kennedy.

00:00:53.920 --> 00:00:56.060
Follow me on Twitter where I'm @mkennedy.

00:00:56.240 --> 00:01:01.160
Keep up with the show and listen to past episodes at talkpython.fm and follow the show on Twitter

00:01:01.160 --> 00:01:02.240
via at Talk Python.

00:01:02.240 --> 00:01:05.920
This episode is sponsored by Clubhouse and Linode.

00:01:05.920 --> 00:01:08.180
Please check out what they're offering during their segments.

00:01:08.180 --> 00:01:09.660
It really helps support the show.

00:01:09.660 --> 00:01:11.960
Hey everyone, a couple of announcements.

00:01:11.960 --> 00:01:16.940
First, I have a very exciting new course that we just launched this week.

00:01:16.940 --> 00:01:21.900
If you've always wanted to solidify your programming foundations and get into Python, but you've

00:01:21.900 --> 00:01:25.900
never had the chance to take a computer science course, I built a course for you.

00:01:25.900 --> 00:01:28.600
It's called Python for the Absolute Beginner.

00:01:28.600 --> 00:01:32.120
It's for absolute beginners because we start from the very beginning.

00:01:32.120 --> 00:01:33.520
How to install Python?

00:01:33.520 --> 00:01:34.500
What is a variable?

00:01:34.500 --> 00:01:35.620
Why do we need loops?

00:01:35.620 --> 00:01:36.280
And so on.

00:01:36.280 --> 00:01:41.380
And then we go on to build some really fun projects that will teach you 80% of the Python

00:01:41.380 --> 00:01:41.760
language.

00:01:42.140 --> 00:01:46.200
Another challenge people run into when learning programming is having something to work on

00:01:46.200 --> 00:01:51.060
that's not too big, not too small, but just right that'll actually teach them what they're

00:01:51.060 --> 00:01:51.340
studying.

00:01:51.340 --> 00:01:56.940
That's why this course is 50% video lecture and 50% hands-on exercises.

00:01:57.140 --> 00:02:03.480
So if this sounds useful to you or to your colleagues, visit talkpython.fm/beginners to find

00:02:03.480 --> 00:02:03.840
out more.

00:02:03.840 --> 00:02:05.440
Another quick announcement.

00:02:05.440 --> 00:02:08.180
Last week, we had a brand new sponsor, Springboard.

00:02:08.180 --> 00:02:12.760
I'm super happy to have them supporting the show, but I did forget to mention something that

00:02:12.760 --> 00:02:14.800
I think will be really useful for a lot of you.

00:02:14.800 --> 00:02:19.320
If you want to take one of their AI or machine learning online career tracks, they're offering

00:02:19.320 --> 00:02:26.820
20 scholarships worth $500 each exclusively to Talk Python listeners using the code Talk Python

00:02:26.820 --> 00:02:28.800
to me, all one word, all caps.

00:02:28.800 --> 00:02:30.700
And it only takes 10 minutes to apply.

00:02:30.700 --> 00:02:32.220
So that's the thing I left out.

00:02:32.220 --> 00:02:36.180
Use that code, get the $500 scholarship, Talk Python To Me, all one word.

00:02:36.180 --> 00:02:40.300
Just visit talkpython.fm/Springboard if you're interested.

00:02:40.300 --> 00:02:42.240
And another announcement.

00:02:42.240 --> 00:02:46.980
Recently, we've had to trim back our RSS feed length.

00:02:46.980 --> 00:02:52.380
It had all 252 episodes in there, all the show notes and everything.

00:02:52.380 --> 00:02:56.600
And as far as I was concerned, we were going to ship those to you all.

00:02:56.600 --> 00:02:57.860
As long as we could.

00:02:57.860 --> 00:03:01.420
I want to make sure that everyone can go back through the entire catalog and get everything

00:03:01.420 --> 00:03:02.080
that they want.

00:03:02.080 --> 00:03:08.420
And yet, because of the size, I think some of the players, especially in the Apple ecosystem,

00:03:08.420 --> 00:03:15.420
started to go crazy and ship old episodes as if they were new and to not show the latest

00:03:15.420 --> 00:03:15.780
ones.

00:03:15.780 --> 00:03:18.380
And all sorts of weird things started happening.

00:03:18.380 --> 00:03:24.240
So in order to fix this, or let's say rather in order to attempt to fix this, and it seems

00:03:24.240 --> 00:03:29.640
to have worked, we've reduced our RSS feed to only show the last half a year of episodes.

00:03:29.640 --> 00:03:32.200
Again, that's not because we don't want you to get the old ones.

00:03:32.200 --> 00:03:35.120
That's because we want you to get at least the new ones.

00:03:35.380 --> 00:03:36.940
So what a pain.

00:03:36.940 --> 00:03:43.040
But I know that some of you are going through the entire catalog and learning as you go,

00:03:43.040 --> 00:03:46.920
trying to go through the entire history of what we've done, which thank you.

00:03:46.920 --> 00:03:47.800
That kind of blows my mind.

00:03:47.800 --> 00:03:48.900
That's an incredible effort.

00:03:49.100 --> 00:03:53.860
So what I've done is I've also made a separate RSS feed that is not part of the subscribe

00:03:53.860 --> 00:03:57.960
at iTunes or subscribe at Google Play feed because that's where the problems were.

00:03:57.960 --> 00:04:02.200
If the entire RSS feed works for your player, you're welcome to have it.

00:04:02.200 --> 00:04:07.920
I put it up at talkpython.fm/episodes /rss underscore full underscore history.

00:04:07.920 --> 00:04:12.320
You can get that in the links for your in this show in the show notes here.

00:04:12.320 --> 00:04:16.860
And you can also get that on the footer of every single page at talkpython.fm.

00:04:16.860 --> 00:04:18.020
So that's the easiest way to get it.

00:04:18.020 --> 00:04:23.380
Just go to the bottom, look for the RSS full history link and put that link directly into

00:04:23.380 --> 00:04:26.500
your podcast player if you want to get the full history.

00:04:26.500 --> 00:04:31.580
If you're happy with the latest half year, just do nothing and make sure you're subscribed

00:04:31.580 --> 00:04:36.640
as you have been and you'll keep getting the new episodes, hopefully without any hiccups

00:04:36.640 --> 00:04:37.060
this time.

00:04:37.060 --> 00:04:39.680
Martin, welcome to Talk Python To Me.

00:04:39.680 --> 00:04:40.200
Hi, Michael.

00:04:40.200 --> 00:04:40.580
How's it going?

00:04:40.580 --> 00:04:41.700
Hey, it's going really well.

00:04:41.700 --> 00:04:42.740
I'm happy to have you on the show.

00:04:42.740 --> 00:04:43.800
Thank you very much for having me.

00:04:43.800 --> 00:04:44.060
Yeah.

00:04:44.200 --> 00:04:49.300
We're going to talk about the science side of Python, which I think is a really interesting

00:04:49.300 --> 00:04:50.820
place to talk.

00:04:50.820 --> 00:04:56.840
You know, if there's that famous, well-known article called entitled The Incredible Growth

00:04:56.840 --> 00:04:59.500
of Python done by the data scientists at Stack Overflow.

00:04:59.880 --> 00:05:05.980
And there's this super sharp inflection point around 2012 where the growth of Python, which

00:05:05.980 --> 00:05:10.520
had been pretty stable, it was like a third, fourth tier rank language.

00:05:10.520 --> 00:05:14.260
And then it just took off at that point and went up and up and up.

00:05:14.520 --> 00:05:20.500
And I think my theory is a lot of people came in from data science, but I think that that

00:05:20.500 --> 00:05:25.440
kind of overshadows that there are just a lot of people that started adopting Python for

00:05:25.440 --> 00:05:30.780
this a little bit beyond Excel or the first, I just need to do a little coding or I just

00:05:30.780 --> 00:05:31.740
need to do a little automation.

00:05:31.740 --> 00:05:35.080
And I think people are just coming into this from so many angles.

00:05:35.080 --> 00:05:37.440
And I think that a large portion of that probably is scientists.

00:05:37.440 --> 00:05:37.900
What do you think?

00:05:37.900 --> 00:05:38.840
I totally agree.

00:05:38.840 --> 00:05:44.700
I mean, that's how I came into getting into Python was a transition from MATLAB, for example,

00:05:44.700 --> 00:05:48.760
as a early first language for anybody who's interested in doing just that little bit of

00:05:48.760 --> 00:05:51.520
automation, that little bit of something to go beyond Excel.

00:05:51.520 --> 00:05:53.020
I think Python's perfect.

00:05:53.020 --> 00:05:57.080
And now with the tooling and, for example, Anaconda, those types of things, it just makes

00:05:57.080 --> 00:05:57.940
it so accessible.

00:05:57.940 --> 00:05:58.740
Yeah, absolutely.

00:05:58.740 --> 00:06:03.500
You know, my theory, the reason it's really popular is you don't have to take on all the

00:06:03.500 --> 00:06:06.440
computer science ideas and concepts all at once.

00:06:06.440 --> 00:06:10.620
You don't have to have a static class and a function with accessibility modifiers and

00:06:10.620 --> 00:06:10.980
all that.

00:06:10.980 --> 00:06:13.460
It's just like, well, just write the three lines you need here.

00:06:13.460 --> 00:06:15.800
And then, oh, if you need this idea of functions, then you can learn them.

00:06:15.800 --> 00:06:17.640
If you need classes, you can learn them and so on.

00:06:17.640 --> 00:06:18.900
It's really, really approachable.

00:06:18.900 --> 00:06:20.240
Yeah, no, I totally agree with that.

00:06:20.240 --> 00:06:20.600
For sure.

00:06:20.600 --> 00:06:25.180
And now, before we get too much into our topic, let's start with your story.

00:06:25.180 --> 00:06:26.340
How'd you get into programming in Python?

00:06:26.340 --> 00:06:30.640
Unlike some of your previous guests, I'm not your traditional path person.

00:06:30.640 --> 00:06:32.360
I'm a physiotherapist by training.

00:06:32.860 --> 00:06:35.280
And then after that, went on to do graduate work.

00:06:35.280 --> 00:06:37.560
And it's after my master's, did a PhD.

00:06:37.560 --> 00:06:42.300
And it's during the PhD that I learned two different languages that are very different

00:06:42.300 --> 00:06:42.800
from each other.

00:06:42.800 --> 00:06:44.560
One of them was LabVIEW programming.

00:06:44.560 --> 00:06:47.900
And that was for my data acquisition and interface for data collection.

00:06:47.900 --> 00:06:49.860
And that's, I guess you can call it coding.

00:06:49.860 --> 00:06:53.540
Is it more of a visual type of day, like ETL type thing?

00:06:53.820 --> 00:06:55.220
Yeah, and you connect your lines.

00:06:55.220 --> 00:06:58.740
And one person, when they saw the back, not the front end, but the back end of my program

00:06:58.740 --> 00:07:01.840
one said, it looks like a bomb diagram, which, you know, it kind of, I guess it does.

00:07:01.840 --> 00:07:03.680
So it's all this spaghetti behind the scenes.

00:07:03.680 --> 00:07:08.560
The logic is there once you understand coding, but it doesn't teach you how to program properly.

00:07:08.560 --> 00:07:13.200
But then at the same time, my supervisor took on the task of teaching me MATLAB, which by

00:07:13.200 --> 00:07:14.880
the end of my PhD, I was quite competent in.

00:07:14.880 --> 00:07:15.720
And it was a great skill.

00:07:15.720 --> 00:07:17.520
Those two together worked quite well.

00:07:18.040 --> 00:07:22.980
And then I progressed, did my postdoc and continued that, a lot of MATLAB.

00:07:22.980 --> 00:07:29.000
And then it was really, I'd heard of Python from a colleague that went to do some post-grad

00:07:29.000 --> 00:07:30.740
work in San Francisco.

00:07:30.740 --> 00:07:34.600
And I met her at a conference and she says, oh, the folks I work with use Python.

00:07:34.600 --> 00:07:41.280
And so me being just curious, I went and looked at it, but that was probably, you know, 2007,

00:07:41.280 --> 00:07:42.680
2008 or something.

00:07:42.680 --> 00:07:48.020
And I kind of read on it, read up, I saw these tutorials on, you know, going to Python.

00:07:48.020 --> 00:07:48.940
from MATLAB.

00:07:48.940 --> 00:07:53.440
But the tooling still wasn't there, the how to install it, how to get the various packages.

00:07:53.440 --> 00:07:57.140
I tried for a couple of weekends and then I just kind of gave up because obviously I was

00:07:57.140 --> 00:07:59.780
proficient at MATLAB and I didn't, I'm not a programmer.

00:07:59.780 --> 00:08:02.360
I just wanted to get my job done, my research done.

00:08:02.360 --> 00:08:02.980
So, right.

00:08:02.980 --> 00:08:08.780
And a lot of the stuff, the data science tools and libraries were just early seeds growing

00:08:08.780 --> 00:08:09.640
at that time, right?

00:08:09.640 --> 00:08:15.280
I think NumPy came out, it was created around that time and probably Matplotlib and Jupyter

00:08:15.280 --> 00:08:16.320
wasn't around yet.

00:08:16.320 --> 00:08:19.080
So there was a lot of support that wasn't there, right?

00:08:19.080 --> 00:08:19.640
Exactly.

00:08:19.640 --> 00:08:23.320
So for somebody who's, you know, in a sense, a non-expert, it was just too daunting.

00:08:23.320 --> 00:08:29.820
And so therefore I went back to MATLAB and then it was just, finally, I'm a Linux person.

00:08:29.820 --> 00:08:34.300
I started that in probably 2010 maybe and I've never looked back.

00:08:34.300 --> 00:08:35.640
I've been using Linux the whole time.

00:08:35.640 --> 00:08:35.960
So I'm quite...

00:08:35.960 --> 00:08:37.380
What distribution are you on these days?

00:08:37.840 --> 00:08:42.920
Linux Mint or Ubuntu kind of depends on pretty much how I'm feeling on the day that I install,

00:08:42.920 --> 00:08:44.480
but it's between those two usually.

00:08:44.480 --> 00:08:45.100
Okay, cool.

00:08:45.100 --> 00:08:46.600
It's just what I've run on my computers.

00:08:46.600 --> 00:08:50.300
I put it on my mom's computer so I can help her out from a distance because it's kind of

00:08:50.300 --> 00:08:50.560
easy.

00:08:50.560 --> 00:08:54.540
You can use older computers and just use it in the lab or for some of the experiments we

00:08:54.540 --> 00:08:54.720
run.

00:08:54.720 --> 00:08:56.480
We just need basic computers.

00:08:56.480 --> 00:08:59.040
So I just thought it was a nice way to reuse some of the equipment.

00:08:59.040 --> 00:09:05.100
And then with this open source kind of mind and that I had, Python started to be a little

00:09:05.100 --> 00:09:09.540
bit more appealing and then I looked a little, again, revisited it, partly because I was looking

00:09:09.540 --> 00:09:14.980
at the courses for software carpentry, which is this thing that teaches scientists that have

00:09:14.980 --> 00:09:20.660
no computer skills, some of the basic skills and usually around either R or Python and you

00:09:20.660 --> 00:09:22.100
get a bit of shell and you get some Git.

00:09:22.100 --> 00:09:25.340
And so that really made me look again into Python.

00:09:25.340 --> 00:09:29.700
And from there, that's all I've been using for the last maybe four or five years now.

00:09:29.700 --> 00:09:30.780
Beautiful.

00:09:30.780 --> 00:09:33.660
Yeah, the software carpentry stuff is pretty interesting.

00:09:33.800 --> 00:09:36.060
I've had the folks behind that on the show before.

00:09:36.060 --> 00:09:37.380
It's not a lot, right?

00:09:37.380 --> 00:09:38.560
It's not a lot to get you started.

00:09:38.560 --> 00:09:42.260
It's a couple of days, a little bit of, it's not even all programming.

00:09:42.260 --> 00:09:45.700
It's here's how to use a shell and here's what source control is and so on.

00:09:45.700 --> 00:09:49.200
But at least it plants the seed like, hey, these are things you should pay attention to.

00:09:49.200 --> 00:09:54.280
Yeah, it's really, here's the landscape of a few things and it's a teaser.

00:09:54.280 --> 00:09:58.900
But if you have some labs or some institutions, it's the culture.

00:09:58.900 --> 00:10:03.500
They use R for example, if they do a lot of genomics, for example, everybody's using R.

00:10:03.500 --> 00:10:07.280
And then it's okay because then you leave the course, the introduction, then everybody around

00:10:07.280 --> 00:10:07.800
you can help.

00:10:07.800 --> 00:10:11.880
But at our institute, I did run some software carpentry course.

00:10:11.880 --> 00:10:16.360
And it's hard, the uptake, because we're so diverse in what we do because there's people

00:10:16.360 --> 00:10:18.500
who do genomics at where I work.

00:10:18.500 --> 00:10:22.260
And then there's other people who do really just kind of epidemiology type things.

00:10:22.260 --> 00:10:25.660
And so the range is so difficult, different that the needs are different.

00:10:25.820 --> 00:10:29.040
So it's a good format, but it doesn't apply for all.

00:10:29.040 --> 00:10:30.940
That's kind of what I found along the way.

00:10:30.940 --> 00:10:31.800
Yeah, for sure.

00:10:31.800 --> 00:10:36.820
It sounds to me like reading some of the stuff you've written and looking through some of

00:10:36.820 --> 00:10:44.700
the stuff you put out there that we've talked to data science folks and even scientific computation

00:10:44.700 --> 00:10:52.900
folks who also have maybe some programmers around them or some kind of software stuff going

00:10:52.900 --> 00:10:55.940
on as well, where most of their work revolves around code.

00:10:56.380 --> 00:11:01.180
But it sounds to me like what you guys are doing, it's a little bit more like you're

00:11:01.180 --> 00:11:02.580
scientists out there on your own.

00:11:02.580 --> 00:11:05.240
And yeah, here's some stuff that you can learn and use.

00:11:05.240 --> 00:11:09.400
But when you get stuck, you know, you're kind of alone on the internet sort of.

00:11:09.400 --> 00:11:10.400
Is that right?

00:11:10.400 --> 00:11:15.700
Pretty much it is that while it'd be nice if we had a big amount of funding to have dedicated

00:11:15.700 --> 00:11:20.160
people to program and to automate some of our things, it's just not the case that the funding

00:11:20.160 --> 00:11:23.420
is not all that great pretty much around the world.

00:11:23.420 --> 00:11:26.600
But so if you're working in one of those places that has that, it's great.

00:11:26.600 --> 00:11:31.200
But most of everybody else, we just have to, you know, figure it out ourselves.

00:11:31.200 --> 00:11:35.560
And that's kind of how I learned is just by either I could continue to do this pointing

00:11:35.560 --> 00:11:40.100
and clicking and realizing the mistakes I was making and not able to reproduce anything and

00:11:40.100 --> 00:11:42.260
those types of things or teaching yourself.

00:11:42.260 --> 00:11:43.460
But that's not easy.

00:11:43.460 --> 00:11:44.780
It's a bit overwhelming, I think.

00:11:44.780 --> 00:11:48.820
Whereas rather than having not enough resources, I think it can be overwhelming because there's

00:11:48.820 --> 00:11:50.500
just so many resources for people.

00:11:50.880 --> 00:11:52.540
And unfortunately, we're strapped for time.

00:11:52.540 --> 00:11:55.600
And so that's a big stress on people at this more senior level.

00:11:55.600 --> 00:11:56.920
They just feel they don't have the time.

00:11:56.920 --> 00:11:59.860
And the students, well, they have a little bit more time.

00:11:59.860 --> 00:12:04.320
But if their supervisors and the people above them aren't necessarily coding, well, then they

00:12:04.320 --> 00:12:07.840
don't feel the need as much to learn it because obviously other people got by without it.

00:12:07.840 --> 00:12:12.760
And so it's to try and for myself, it's definitely, as you have said on your show a few times,

00:12:12.760 --> 00:12:14.080
it's my superpower, really.

00:12:14.280 --> 00:12:17.620
It's things that other people just can't even fathom could be answered.

00:12:17.620 --> 00:12:21.780
I'll just take the data and do a few things in Python and then get them the answer pretty

00:12:21.780 --> 00:12:22.100
quickly.

00:12:22.100 --> 00:12:22.500
Yeah.

00:12:22.500 --> 00:12:25.020
They're like, I don't really even know if we can answer this question.

00:12:25.020 --> 00:12:29.820
You're like, give me pandas and five lines of code and we'll see what we can do with this.

00:12:29.820 --> 00:12:30.120
Right.

00:12:30.120 --> 00:12:30.700
Exactly.

00:12:30.700 --> 00:12:31.260
Yeah.

00:12:31.260 --> 00:12:35.320
And part of it is actually not even just the fact that maybe they don't need to do it

00:12:35.320 --> 00:12:38.180
or learn how to do it, but just know that it's possible.

00:12:38.180 --> 00:12:38.540
Yeah.

00:12:38.740 --> 00:12:44.640
And value that in terms of valuing it, I think that's what's interesting is that regardless

00:12:44.640 --> 00:12:49.020
of what type of science you're doing, in the end, it's all based around computers.

00:12:49.020 --> 00:12:51.300
It almost doesn't matter what field you're in.

00:12:51.300 --> 00:12:53.440
You're going to be most of the time dealing with data.

00:12:53.440 --> 00:12:59.240
And so to be able to do that in a repeatable, efficient manner, as you always say, computers

00:12:59.240 --> 00:13:01.440
are really good at that, the mundane, repetitive tasks.

00:13:01.440 --> 00:13:01.940
Yeah.

00:13:01.940 --> 00:13:03.440
So why not automate it?

00:13:03.440 --> 00:13:04.880
People are noticing.

00:13:05.040 --> 00:13:08.520
And I think there's a push that even from the senior people, even though they might

00:13:08.520 --> 00:13:11.340
not know, I think they see that, okay, that's, this is where it's going.

00:13:11.340 --> 00:13:11.620
Yeah.

00:13:11.620 --> 00:13:15.180
That's a little bit challenging when the incentives don't necessarily line up.

00:13:15.180 --> 00:13:16.360
Right.

00:13:16.360 --> 00:13:19.060
The, the experienced folks, they're busy.

00:13:19.060 --> 00:13:21.540
They've got stuff to publish and research projects.

00:13:21.540 --> 00:13:26.860
They'd like to learn, but at the same time, you know, they've got a job, they've got a family

00:13:26.860 --> 00:13:27.460
or whatever.

00:13:27.460 --> 00:13:27.860
Right.

00:13:27.860 --> 00:13:31.580
They've got classes to teach or people to mentor in their field.

00:13:31.580 --> 00:13:33.160
So that makes it really challenging.

00:13:33.160 --> 00:13:33.960
I think as well.

00:13:34.220 --> 00:13:39.660
Yeah, no, it's, it's, the pressures are very high and this whole publisher perish thing,

00:13:39.660 --> 00:13:42.980
although some people throw it around as a joke, it really is true, unfortunately.

00:13:42.980 --> 00:13:49.200
And it's in that model where, you know, rather than focusing on good science, that's reproducible

00:13:49.200 --> 00:13:51.200
that, you know, that's what you expect.

00:13:51.200 --> 00:13:55.720
When I was a kid growing up, these scientists are just, you know, these amazing people that

00:13:55.720 --> 00:14:00.100
wear white lab coats most of the time you would think, and that are just extremely careful.

00:14:00.820 --> 00:14:05.660
And I think we're just people trying to get by and, you know, the incentives make it that

00:14:05.660 --> 00:14:07.080
we do have to do a lot of work.

00:14:07.080 --> 00:14:09.160
And a lot of times we might cut some corners.

00:14:09.160 --> 00:14:10.400
It's just the way it is.

00:14:10.400 --> 00:14:11.860
We just have to get a lot out there.

00:14:11.860 --> 00:14:16.660
And there's a lot of pressure to do that rather than take a bit of time and either do it carefully

00:14:16.660 --> 00:14:20.280
or learn some new ways to make it last a little bit longer in terms of I can pass on

00:14:20.280 --> 00:14:22.920
my data with the code and somebody else can reuse it.

00:14:22.920 --> 00:14:28.300
Later on, my future self, I can reuse it or convince myself or convince others that, hey,

00:14:28.300 --> 00:14:30.180
this was actually the real answer kind of thing.

00:14:30.180 --> 00:14:30.440
Yeah.

00:14:30.440 --> 00:14:37.320
I'm having a hard time even coming up with an example where you're doing research and there's

00:14:37.320 --> 00:14:39.300
not a lot of data to be processed.

00:14:39.300 --> 00:14:40.240
You know what I mean?

00:14:40.240 --> 00:14:40.640
Yeah.

00:14:40.640 --> 00:14:41.280
Yeah.

00:14:41.280 --> 00:14:43.520
Like, what field is it possible?

00:14:43.520 --> 00:14:44.620
Like, well, we have seven things.

00:14:44.620 --> 00:14:45.880
We're going to study these seven.

00:14:46.000 --> 00:14:50.400
I'll just put them on a line or like almost anywhere that people are doing research now,

00:14:50.400 --> 00:14:55.720
there's so much data available that you can collect in whatever way, whether it be economics,

00:14:55.720 --> 00:15:00.900
you can just go load up all the data about all the economies and all the purchasing and habits

00:15:00.900 --> 00:15:01.340
and whatnot.

00:15:01.340 --> 00:15:08.000
Or, you know, if you're doing neurology, you can, the amount of EEG data or whatever is ridiculous.

00:15:08.000 --> 00:15:08.560
Right.

00:15:08.560 --> 00:15:13.480
So it seems like programming is a really important skill just to almost be functional these days.

00:15:13.480 --> 00:15:14.540
Well, definitely.

00:15:14.760 --> 00:15:19.380
And I think that in this, for myself, it actually started with, first, it was a bit of electronics.

00:15:19.380 --> 00:15:22.360
And I didn't know anything about that, obviously, being a physiotherapist.

00:15:22.360 --> 00:15:23.840
And I ran into trouble.

00:15:23.840 --> 00:15:28.380
And then I almost stalled my PhD for, was it six or eight months just because of a simple

00:15:28.380 --> 00:15:32.060
wire, a couple of wires that needed to be soldered together and connected.

00:15:32.060 --> 00:15:35.560
And nobody where I was from knew anything about that.

00:15:35.560 --> 00:15:37.580
And it took a long time just to find the right person.

00:15:37.580 --> 00:15:42.140
And I was like, never again am I going to have to be not self-sufficient.

00:15:42.140 --> 00:15:43.580
So I taught myself electronics.

00:15:43.580 --> 00:15:47.640
And then I think with programming, it was the same thing is that you can find the right

00:15:47.640 --> 00:15:47.920
people.

00:15:47.920 --> 00:15:50.300
But either it's going to take time and money.

00:15:50.300 --> 00:15:54.340
And it's not always if they're not exactly in your field, they'll do their best.

00:15:54.340 --> 00:15:57.540
And then it's going to be multiple iterations to get to the final what you would like.

00:15:57.540 --> 00:15:59.180
And you don't even understand how it got there.

00:15:59.520 --> 00:16:03.600
So I think this idea of learning just enough to get you by really is quite valuable.

00:16:03.600 --> 00:16:07.800
And as you go, the learning curve, although it's Python and it's obviously easier than other

00:16:07.800 --> 00:16:11.240
languages, if it's not your thing, it's a big learning curve.

00:16:11.240 --> 00:16:14.980
The ideas of programming at the same time, you don't want to just learn programming.

00:16:14.980 --> 00:16:15.740
You want your results.

00:16:15.740 --> 00:16:16.540
That's number one.

00:16:16.940 --> 00:16:18.620
So you're juggling all these things.

00:16:18.620 --> 00:16:21.340
But once you get over that curve, the big learning is done.

00:16:21.340 --> 00:16:23.160
And then it's just adding on for each new project.

00:16:23.160 --> 00:16:24.240
You might learn a new technique.

00:16:24.240 --> 00:16:28.480
You might learn, oh, now I'm going to use databases or now I'm going to learn Git and

00:16:28.480 --> 00:16:31.280
now version control my code and things like that that come along.

00:16:31.400 --> 00:16:35.560
So it's how to do it progressively, not get intimidated and not just say, oh, I'm going

00:16:35.560 --> 00:16:38.840
to go back to my point and click programs because at least I can get the results quickly.

00:16:38.840 --> 00:16:39.440
Exactly.

00:16:39.440 --> 00:16:40.000
Or Excel.

00:16:40.000 --> 00:16:40.760
Yeah.

00:16:40.760 --> 00:16:41.220
Yeah.

00:16:41.220 --> 00:16:41.660
Excel.

00:16:41.660 --> 00:16:45.900
I try not to use that word and it's not my, I have a fear.

00:16:45.900 --> 00:16:47.040
Yeah.

00:16:47.040 --> 00:16:48.240
I have an allergy to be honest.

00:16:48.240 --> 00:16:51.620
I walk by the people who have those screens open and I, oh, I just, yeah.

00:16:51.620 --> 00:16:52.480
Yeah.

00:16:52.480 --> 00:16:54.660
I don't, I personally have this thing about Excel and science.

00:16:54.660 --> 00:16:58.880
It just really, for more than just a simple, you know, keeping a few numbers or doing some,

00:16:58.880 --> 00:17:01.220
you know, basic adding or addition or stuff like that.

00:17:01.220 --> 00:17:01.700
It's fine.

00:17:01.700 --> 00:17:06.840
But it really, I mean, it just doesn't have a place in my opinion nowadays.

00:17:06.840 --> 00:17:08.080
So, yeah.

00:17:08.080 --> 00:17:11.520
Well, I think the problem is like, it's fine for the simple case.

00:17:11.520 --> 00:17:15.600
Like I use Excel for accounting and the stuff that we do.

00:17:15.600 --> 00:17:16.880
And it's, it's great.

00:17:16.880 --> 00:17:17.900
It's got to take a few numbers.

00:17:17.900 --> 00:17:21.420
It's got to add this column and it's got to divide by that and put, you know, 20% over

00:17:21.420 --> 00:17:21.560
there.

00:17:21.560 --> 00:17:22.820
I don't know what, something like that.

00:17:22.820 --> 00:17:22.960
Right.

00:17:22.960 --> 00:17:23.660
That's fine.

00:17:23.660 --> 00:17:29.940
We did a whole episode on Excel with Chris Moffitt, episode 200, escaping Excel hell with

00:17:29.940 --> 00:17:30.880
Python and bandas.

00:17:31.040 --> 00:17:32.600
And that was a lot of fun.

00:17:32.600 --> 00:17:38.920
One of the things that dawned on me that really makes these worksheets in Excel or any, you

00:17:38.920 --> 00:17:39.800
know, could be Google sheets.

00:17:39.800 --> 00:17:41.260
It's really no, no difference.

00:17:41.840 --> 00:17:46.580
That makes it really tricky is it's kind of full of go-tos.

00:17:46.580 --> 00:17:53.140
You know, when you, when you have a formula that's down here in like a 32 and then it says

00:17:53.140 --> 00:17:57.280
add stuff over there and then make this decision and then take that from over here.

00:17:57.280 --> 00:17:58.420
And then there's a formula over there.

00:17:58.420 --> 00:18:03.320
It's like, there's no way to look at it and tell what order that it flows.

00:18:03.320 --> 00:18:03.780
Right.

00:18:03.780 --> 00:18:07.480
It's just go here and go there, then go back over there, then take some of this.

00:18:07.480 --> 00:18:11.940
And yeah, it's just, it seems like it takes some of the worst practices when you try to

00:18:11.940 --> 00:18:12.880
push it too far.

00:18:13.160 --> 00:18:13.400
Yeah.

00:18:13.400 --> 00:18:18.600
I think if it fits on a page and, and you've got a few pages, I think, you know, and everything

00:18:18.600 --> 00:18:20.000
is self-explanatory.

00:18:20.000 --> 00:18:21.160
I'm okay with that.

00:18:21.160 --> 00:18:25.420
And, you know, even though I've done that for a survey that I published with one of the papers

00:18:25.420 --> 00:18:27.800
that I wrote and it was the best way to present it.

00:18:27.900 --> 00:18:33.800
But when you've got a lot of those embedded formulas, I, as a person opening it, have no

00:18:33.800 --> 00:18:37.760
idea what's the flow of all of this and the bigger they get.

00:18:37.760 --> 00:18:42.000
And that's, you know, there's research that's been done and people who've analyzed Excel spreadsheets

00:18:42.000 --> 00:18:46.940
is that for every hundred things that you do in Excel, there's going to be approximately

00:18:46.940 --> 00:18:47.860
five errors.

00:18:47.860 --> 00:18:51.400
And the more complex it is, the more likely you're going to make these mistakes.

00:18:51.400 --> 00:18:55.600
And I think the hardest ones are, for example, the one that came across in some of the data

00:18:55.600 --> 00:18:59.060
that I was involved in, I asked to see it this, for example, take the average, because

00:18:59.060 --> 00:19:02.260
we did three responses from somebody, take the average of the three.

00:19:02.260 --> 00:19:04.280
But what happens is there's a missing data point.

00:19:04.280 --> 00:19:07.720
Well, just by default, from what we did, Excel puts a zero.

00:19:07.720 --> 00:19:10.500
So now you're averaging two numbers with a zero.

00:19:10.500 --> 00:19:13.220
And it was just, but you had to search through it.

00:19:13.220 --> 00:19:17.440
And it was like in, you know, page number eight on, you know, this II52.

00:19:17.440 --> 00:19:19.900
And they're very difficult mistakes to find.

00:19:19.900 --> 00:19:25.340
Whereas coding, if it's done, you know, if you choose your variable names well, and you

00:19:25.340 --> 00:19:28.320
do a bit of documentation, it can almost read like a story.

00:19:28.320 --> 00:19:33.900
And you can, even somebody who can't code necessarily can at least follow and kind of, or you could

00:19:33.900 --> 00:19:36.160
just sit down with them and just tell them the story of the code.

00:19:36.160 --> 00:19:38.180
And they might be able to say, that doesn't make any sense.

00:19:38.180 --> 00:19:38.660
Yeah.

00:19:38.660 --> 00:19:38.900
Yeah.

00:19:38.900 --> 00:19:40.440
Wait, you're doing this wrong, right?

00:19:40.440 --> 00:19:42.420
Whereas Excel is much more nebulous.

00:19:42.420 --> 00:19:42.720
Yeah.

00:19:42.720 --> 00:19:44.440
It's very vague.

00:19:46.800 --> 00:19:49.680
This portion of Talk Python To Me is sponsored by Clubhouse.

00:19:49.920 --> 00:19:54.520
Clubhouse is a fast and enjoyable project management platform that breaks down silos and brings

00:19:54.520 --> 00:19:56.740
teams together to ship value, not features.

00:19:56.740 --> 00:20:01.460
Great teams choose Clubhouse because they get flexible workflows where they can easily customize

00:20:01.460 --> 00:20:04.560
workflow state for teams or projects of any size.

00:20:04.560 --> 00:20:09.760
Advanced filtering, quickly filtering by project or team to see how everything is progressing.

00:20:10.260 --> 00:20:14.680
And effective sprint planning, setting their weekly priorities with iterations and then

00:20:14.680 --> 00:20:16.140
letting Clubhouse run the schedule.

00:20:16.140 --> 00:20:20.640
All of the core features are completely free for teams with up to 10 users.

00:20:20.640 --> 00:20:26.020
And as Talk Python listeners, you'll get two free months on any paid plan with unlimited users

00:20:26.020 --> 00:20:27.660
and access to the premium features.

00:20:27.660 --> 00:20:28.840
So get started today.

00:20:29.120 --> 00:20:33.060
Just click the Clubhouse link in your podcast player show notes or on the episode page.

00:20:33.060 --> 00:20:38.240
So you wrote a blog post called Errors in Science.

00:20:38.240 --> 00:20:38.860
I make them.

00:20:38.860 --> 00:20:39.300
Do you?

00:20:39.300 --> 00:20:40.860
Part one, two, three.

00:20:40.860 --> 00:20:43.200
And I'll link to part three.

00:20:43.200 --> 00:20:48.120
And one of the things I found amusing from there was you actually linked to an article which

00:20:48.120 --> 00:20:51.920
talks about the 12 of the biggest spreadsheet fails in history.

00:20:51.920 --> 00:20:54.180
Do you remember that article?

00:20:54.180 --> 00:20:54.760
Yes.

00:20:54.760 --> 00:20:56.260
It's pretty scary.

00:20:56.580 --> 00:21:00.180
And I mean, in our case, well, I guess it could some of these mistakes, you know, they

00:21:00.180 --> 00:21:03.580
lead to in science lead to retraction with the biggest problems would be that.

00:21:03.580 --> 00:21:06.540
And that's kind of a big embarrassment and something we don't want to do.

00:21:06.540 --> 00:21:06.840
Right.

00:21:06.840 --> 00:21:11.020
And other people can write based their conclusions on a paper that then has retracted.

00:21:11.020 --> 00:21:13.420
So it's kind of a bit of a house of cards as well.

00:21:13.420 --> 00:21:13.920
Exactly.

00:21:13.920 --> 00:21:17.400
You know, and unfortunately, some people, even though it's retracted, some people continue

00:21:17.400 --> 00:21:20.380
citing the original one, which is, you know, you're not supposed to do, but people

00:21:20.380 --> 00:21:21.760
haven't realized it's been retracted.

00:21:21.760 --> 00:21:22.700
So it's a bit of an issue.

00:21:22.700 --> 00:21:26.460
But some of the other ones that, you know, if you do this in the financial industry,

00:21:26.460 --> 00:21:30.800
that there are some companies that, you know, very simple Excel mistakes have led to, you

00:21:30.800 --> 00:21:33.120
know, millions and millions of dollars being lost.

00:21:33.120 --> 00:21:37.040
And so, yeah, so that article just kind of highlights the some of the worst.

00:21:37.040 --> 00:21:43.920
And the European Union actually has a whole kind of group that's working on this and dealing

00:21:43.920 --> 00:21:48.680
with how can we improve these practices with regards to spreadsheets because the mistakes

00:21:48.680 --> 00:21:49.500
are so costly.

00:21:49.500 --> 00:21:49.840
Right.

00:21:49.840 --> 00:21:52.340
I'll just read just a couple because I think they're kind of amusing.

00:21:53.460 --> 00:21:58.320
Hans Alta, a Canadian company, made a cut and paste error in their spreadsheet and it cost

00:21:58.320 --> 00:22:03.180
them $24 million where they caused them to buy.

00:22:03.180 --> 00:22:08.260
They bought some U.S. power transmission hedge contracts at the wrong rate.

00:22:08.260 --> 00:22:14.500
Fidelity, their Magellan fund, which is like an investment mutual fund type fund thing.

00:22:14.800 --> 00:22:20.340
They had to cancel a $4 per share dividend because they had a missing minus sign.

00:22:20.340 --> 00:22:22.600
So they thought they made a profit instead of a loss.

00:22:22.600 --> 00:22:29.320
MI5, the British spy agency, actually bugged over a thousand wrong phone numbers.

00:22:29.320 --> 00:22:32.520
There's just like all these weird errors.

00:22:32.520 --> 00:22:37.180
Anyways, a really fun read for people that get, you know, sucked into that world.

00:22:37.380 --> 00:22:41.460
So there's the drag and drop lab view type stuff, which is not that great.

00:22:41.460 --> 00:22:44.580
There's some just not very much programming skills at all.

00:22:44.580 --> 00:22:45.560
Maybe a little MATLAB.

00:22:45.560 --> 00:22:48.180
There's trying to over leverage Excel.

00:22:48.180 --> 00:22:53.580
A lot of these could be fixed by, you know, a little bit of Python, a little bit of pandas

00:22:53.580 --> 00:22:57.860
or, you know, whatever library it is that works with the type of data that you're using.

00:22:57.860 --> 00:22:58.080
Right.

00:22:58.240 --> 00:22:58.440
Yeah.

00:22:58.440 --> 00:23:03.440
And I think with Python, it's the fact that, and you've mentioned this yourself, it's just

00:23:03.440 --> 00:23:04.380
the Swiss army knife.

00:23:04.380 --> 00:23:10.820
It's that MATLAB has a license and its application is very, you know, engineer, math and science

00:23:10.820 --> 00:23:11.200
focused.

00:23:11.200 --> 00:23:14.680
Whereas Python, I had a master's student who came and finished with us.

00:23:14.680 --> 00:23:17.740
And I kind of, his first study, he programmed with me.

00:23:17.740 --> 00:23:20.320
Second study, he did most of it.

00:23:20.320 --> 00:23:22.580
And I just looked over shoulder and made sure everything was okay.

00:23:22.580 --> 00:23:24.540
But he went on now and he's working.

00:23:24.740 --> 00:23:28.160
You know, in a sense, he's got a new superpower is that it's universal.

00:23:28.160 --> 00:23:30.680
He can use it for such a variety of things.

00:23:30.680 --> 00:23:32.840
That's not specifically for science.

00:23:32.840 --> 00:23:37.080
So while it's obviously great, the learning curve isn't that steep if you've got a bit

00:23:37.080 --> 00:23:42.000
of time and it's just so diverse rather than some of the more specialized languages.

00:23:42.000 --> 00:23:47.240
So I think as an introduction, Python, I mean, it really, it's so simple, easy to read.

00:23:47.240 --> 00:23:48.800
And it's a new skill.

00:23:48.800 --> 00:23:53.920
That's kind of how I sold it to the institute where I work at here in Australia is they were

00:23:53.920 --> 00:23:58.000
looking for ideas for almost like a vision for 2022 or what.

00:23:58.000 --> 00:24:02.220
And I just said, well, wouldn't it be great if we could advertise that every student that

00:24:02.220 --> 00:24:07.640
comes and does a PhD with us will have basic skills in at least one programming language

00:24:07.640 --> 00:24:08.540
when they leave.

00:24:08.540 --> 00:24:09.780
And they thought that was a great idea.

00:24:09.780 --> 00:24:13.800
So that's how I pitched it that, you know, in this day and age, it's got to be part of the

00:24:13.800 --> 00:24:17.880
education, not simply the, you know, sitting at the workbench or working with spreadsheets.

00:24:17.880 --> 00:24:18.200
Yeah.

00:24:18.200 --> 00:24:22.060
Something you just have to pick up in your spare time as part of your research project

00:24:22.060 --> 00:24:22.500
or whatever.

00:24:22.500 --> 00:24:24.120
Be better if it was more, right?

00:24:24.120 --> 00:24:27.420
Because we have tons of spare time when we're doing our PhDs.

00:24:27.420 --> 00:24:29.700
It's evenings and weekends.

00:24:29.700 --> 00:24:33.180
And it's the few of us who are, you know, a bit silly enough to do it, bit hermits.

00:24:33.180 --> 00:24:36.240
And we just do it on our own because we just feel the need to do it.

00:24:36.240 --> 00:24:38.620
But yeah, a lot of other people, you know, sensibly don't do it.

00:24:38.620 --> 00:24:39.260
And that's fine.

00:24:39.260 --> 00:24:43.740
But I think in the long term, if it's become more acceptable and it's actually presented

00:24:43.740 --> 00:24:46.140
right from the beginning that, hey, this is how it is.

00:24:46.140 --> 00:24:47.920
You're going to learn a bit of programming to learn a bit of this.

00:24:47.920 --> 00:24:52.280
It just becomes part of the learning process rather than when you just, it would be nice

00:24:52.280 --> 00:24:54.100
if you learned it, but there's no structure.

00:24:54.100 --> 00:24:57.100
We're not going to teach you and I'm not going to point you to any resources.

00:24:57.100 --> 00:24:58.740
That's difficult for a lot of learners.

00:24:58.740 --> 00:24:59.120
Yeah.

00:24:59.120 --> 00:25:03.380
Well, I think it's a great service to offer that to your students, right?

00:25:03.380 --> 00:25:08.940
To say, you're going to learn whatever it is you're here to study and get your master's

00:25:08.940 --> 00:25:10.160
degree in or whatever it is.

00:25:10.160 --> 00:25:15.500
And also you're going to have this programming skill in the context of that, because I'm sure

00:25:15.500 --> 00:25:21.120
that if you go out there and apply for a job and there's 10 people, probably more, but let's

00:25:21.120 --> 00:25:22.240
say there's 10 people apply.

00:25:22.240 --> 00:25:26.940
Two of them also have good programming skills that are relevant to that in addition.

00:25:26.940 --> 00:25:30.180
And all things being equal, like that's down to two candidates.

00:25:30.180 --> 00:25:30.740
You know what I mean?

00:25:30.740 --> 00:25:31.020
Yeah.

00:25:31.020 --> 00:25:32.460
So it's really great.

00:25:32.720 --> 00:25:37.300
Now, one of the things you did that I'd like to just chat a little bit about, I think is

00:25:37.300 --> 00:25:44.280
interesting, is you did a survey around scientific computing at your institute, right?

00:25:44.280 --> 00:25:44.520
Yeah.

00:25:44.520 --> 00:25:44.960
So yeah.

00:25:44.960 --> 00:25:46.160
So let's talk about that a little bit.

00:25:46.160 --> 00:25:49.560
What was the survey trying to get at and what were some of the results?

00:25:49.560 --> 00:25:53.720
Well, after I pitched this idea of training, obviously I have some ideas.

00:25:53.720 --> 00:25:56.580
I'd done the software carpentry teacher training.

00:25:56.580 --> 00:25:59.960
So I had my own opinion of how it all should work.

00:25:59.960 --> 00:26:03.880
But again, who am I to say how everything should run and what are the needs of the people?

00:26:03.880 --> 00:26:06.880
Especially because where I work, there's people who work on cells.

00:26:06.880 --> 00:26:08.240
Some people work on epidemiology.

00:26:08.240 --> 00:26:09.940
Some people work on human research.

00:26:09.940 --> 00:26:15.060
And the fields are as different as schizophrenia, falls in balance, people with vestibular issues.

00:26:15.060 --> 00:26:15.940
We study the gamut.

00:26:15.940 --> 00:26:20.360
And so rather than impose what I thought people would need, I just said, hey, you know, we've

00:26:20.360 --> 00:26:23.900
got these easy survey online things to do nowadays.

00:26:23.900 --> 00:26:27.260
So how about I just create a little survey, get some information because I'm a scientist.

00:26:27.260 --> 00:26:27.900
I like data.

00:26:27.900 --> 00:26:30.480
So I just said, let me get some data so I can make informed decisions.

00:26:30.480 --> 00:26:32.480
And also it allows me to track.

00:26:32.480 --> 00:26:36.020
If I were to continue this over time, I'd be able to see how people are changing.

00:26:36.020 --> 00:26:39.700
So it was a variety of questions based on, you know, what field are you in?

00:26:39.700 --> 00:26:41.560
What's your level of training or education?

00:26:41.560 --> 00:26:43.980
And currently, what are your current practices?

00:26:44.440 --> 00:26:47.360
And then looking at in terms of what would you want to learn?

00:26:47.360 --> 00:26:48.860
How would you want to learn that?

00:26:48.860 --> 00:26:49.980
And those types of questions.

00:26:49.980 --> 00:26:50.280
Right.

00:26:50.280 --> 00:26:51.300
So I sent out the survey.

00:26:51.300 --> 00:26:54.100
Our institute, I can't really say the number right now.

00:26:54.100 --> 00:26:57.600
It's probably where we're now above 200 people for sure.

00:26:57.600 --> 00:27:01.020
I think depends on how many of the students are present, but it's a biggish institute, but

00:27:01.020 --> 00:27:01.900
not all that big.

00:27:01.900 --> 00:27:03.560
But we had 80 people respond.

00:27:03.560 --> 00:27:08.720
And it was nice because senior scientists replied, senior postdocs, postdocs, students, and a

00:27:08.720 --> 00:27:09.500
few staff as well.

00:27:09.500 --> 00:27:11.980
So the responses kind of reflect a bit of everybody.

00:27:11.980 --> 00:27:13.980
And so that was kind of nice.

00:27:14.320 --> 00:27:15.580
And yeah, it's good.

00:27:15.580 --> 00:27:18.280
As you might expect, we're not, you know, it's not, it's not all that surprising that

00:27:18.280 --> 00:27:20.680
pretty much everybody analyzes data with computers.

00:27:20.680 --> 00:27:22.260
There's some that don't.

00:27:22.260 --> 00:27:26.800
And I would have to say, well, it's possibly some of the staff and also some of the senior

00:27:26.800 --> 00:27:27.200
people.

00:27:27.200 --> 00:27:30.460
It's kind of why I don't want to become the most senior scientist, because at some point

00:27:30.460 --> 00:27:31.960
you almost stop looking at the data.

00:27:31.960 --> 00:27:38.140
You entrust the pyramid of senior postdocs and postdocs and students to handle the day-to-day

00:27:38.140 --> 00:27:38.500
data.

00:27:38.500 --> 00:27:40.020
And so they kind of don't do that.

00:27:40.020 --> 00:27:44.060
But most people, as part of their job at some point, manage.

00:27:44.200 --> 00:27:45.040
Some form of data.

00:27:45.040 --> 00:27:48.180
So it is a useful, it's just become, this is what we do.

00:27:48.180 --> 00:27:49.080
We manage with data.

00:27:49.080 --> 00:27:53.800
And most people want some form of training or knowledge.

00:27:53.800 --> 00:27:58.600
And I guess one of the unsurprising, as we were talking before about Excel, is that most

00:27:58.600 --> 00:28:01.660
people, 80% or so, do stuff with Excel.

00:28:02.160 --> 00:28:03.140
And that's okay.

00:28:03.140 --> 00:28:08.420
But what's surprising to me, and I guess because Excel is even easier to pick up, is the fact

00:28:08.420 --> 00:28:12.760
that nobody's actually got, most people, 20% only had actual training, had done a course

00:28:12.760 --> 00:28:14.720
of some sort with regards to Excel.

00:28:14.720 --> 00:28:14.960
Yeah.

00:28:15.000 --> 00:28:16.660
I think people think Excel is easy.

00:28:16.660 --> 00:28:18.420
In some sense, it is easy.

00:28:18.420 --> 00:28:21.340
But that can be a really advanced tool.

00:28:21.340 --> 00:28:26.360
When I was in college, I took a course on basically like spreadsheets.

00:28:26.360 --> 00:28:30.920
And man, back in the day, it was like Lotus 1, 2, 3, and all sorts of random things that aren't

00:28:30.920 --> 00:28:31.760
really around anymore.

00:28:32.980 --> 00:28:38.260
But I remember learning, I felt like I can use Excel, I can load data, I can do formulas,

00:28:38.260 --> 00:28:38.540
whatever.

00:28:38.540 --> 00:28:41.640
Like, there's a lot to learn about stuff that you can do in there.

00:28:41.640 --> 00:28:46.480
So that's, you know, that only one out of five get any real instruction on it.

00:28:46.480 --> 00:28:47.000
That's surprising.

00:28:47.000 --> 00:28:47.520
Yeah.

00:28:47.520 --> 00:28:52.180
And, you know, I have a colleague who went off and kind of did an online course for Excel.

00:28:52.180 --> 00:28:54.740
And, you know, he came back and everybody was really impressed.

00:28:54.740 --> 00:28:56.540
And just, he was showing everybody new things.

00:28:56.540 --> 00:29:02.960
And so, done properly, as he was doing it, I could see that, okay, it's not as bad as I

00:29:02.960 --> 00:29:03.860
used to picture it.

00:29:03.860 --> 00:29:07.340
But unfortunately, he's one out of, you know, everybody I've ever come across.

00:29:07.340 --> 00:29:11.200
And so, really, the majority of people are just think it's just point, click, add some

00:29:11.200 --> 00:29:12.300
numbers, try a few things.

00:29:12.300 --> 00:29:15.560
But, yeah, there's not much education behind it.

00:29:15.560 --> 00:29:19.700
And I think what's interesting also in the survey, I asked about other tools.

00:29:19.700 --> 00:29:22.840
So, for example, you know, we do a lot of data management or statistics.

00:29:22.840 --> 00:29:26.380
And there's obviously the typical point and click programs.

00:29:26.380 --> 00:29:28.140
And a lot of those have the equivalence.

00:29:28.140 --> 00:29:32.080
But for, you know, you could do that in programming, is that many more people were using point

00:29:32.080 --> 00:29:32.860
and click programs.

00:29:32.940 --> 00:29:34.100
than people who would program.

00:29:34.100 --> 00:29:37.400
Yet the ones that programmed always had more training.

00:29:37.400 --> 00:29:40.480
Just because, obviously, to learn it, they had to do some form of training.

00:29:40.480 --> 00:29:41.460
This is the point and click.

00:29:41.460 --> 00:29:44.640
It's the problem that it's just, it's deceptively simple.

00:29:44.640 --> 00:29:48.840
And I think statistics is one of those areas that, you know, I think a lot of people have

00:29:48.840 --> 00:29:50.440
allergies to for some reason in science.

00:29:50.440 --> 00:29:51.860
I kind of like them myself.

00:29:51.860 --> 00:29:53.040
I think they're important.

00:29:53.040 --> 00:29:55.020
And you got to understand them.

00:29:55.020 --> 00:29:59.060
But with this point and click stuff, a lot of people just kind of click some buttons,

00:29:59.400 --> 00:30:00.180
think it's okay.

00:30:00.180 --> 00:30:03.460
And then this big output comes out with sometimes some figures.

00:30:03.460 --> 00:30:04.820
A lot of times these big tables.

00:30:04.820 --> 00:30:07.220
And they're difficult to interpret.

00:30:07.220 --> 00:30:09.920
And yet some people just say, oh, where's my p-value in there?

00:30:09.920 --> 00:30:11.420
And then they're just like, great, this one worked.

00:30:11.420 --> 00:30:15.320
And if it didn't, well, you know, maybe click a few different buttons and see if the answer

00:30:15.320 --> 00:30:15.720
changes.

00:30:15.920 --> 00:30:18.880
Which is obviously not great science, but it does happen.

00:30:18.880 --> 00:30:22.020
Whereas with programming, it's, you kind of have to know what you're doing from the get

00:30:22.020 --> 00:30:22.240
go.

00:30:22.240 --> 00:30:26.780
And so there's a lot less chance of that just kind of what people would call p-hacking.

00:30:26.780 --> 00:30:31.060
It's just searching for and trying permutations of it until you get something that, oh, that

00:30:31.060 --> 00:30:32.720
looks better or what I was expecting.

00:30:32.720 --> 00:30:33.180
Yeah.

00:30:33.180 --> 00:30:36.820
Well, if you're going to wire stuff together and push buttons, like it's almost always going

00:30:36.820 --> 00:30:37.940
to give you an output, right?

00:30:37.940 --> 00:30:40.020
So yeah, well, there's the answer, right?

00:30:40.020 --> 00:30:43.720
Well, in programming, you kind of got to really think through it and line it up.

00:30:43.820 --> 00:30:47.520
Or it's not going to give you an output, it's going to give you an exception, you know,

00:30:47.520 --> 00:30:48.920
a traceback or something, right?

00:30:48.920 --> 00:30:49.180
Yeah.

00:30:49.180 --> 00:30:54.600
And I think the value of programming, for example, in those contexts, and it's one of those things

00:30:54.600 --> 00:30:55.560
I'd never even thought of.

00:30:55.560 --> 00:31:00.340
Now I do it almost all the time is that if I'm using a new statistic or I'm using a new

00:31:00.340 --> 00:31:06.000
program to analyze my data, why risk putting in my own data that I spent all this time putting

00:31:06.000 --> 00:31:10.800
in and hoping that I'm doing it right to get an answer rather than generate, which is quite

00:31:10.800 --> 00:31:14.120
simple nowadays, generate some data that I know the answer to.

00:31:14.120 --> 00:31:18.300
So, you know, simulate the data and put in some artifacts or put in a certain trend.

00:31:18.300 --> 00:31:20.980
So it will give me a statistical result, run it through.

00:31:20.980 --> 00:31:22.540
And is it as expected?

00:31:22.540 --> 00:31:23.900
If so, great.

00:31:23.900 --> 00:31:26.580
Then I can apply that to my actual hard earned data.

00:31:26.580 --> 00:31:31.060
And I can kind of trust the data and the results a bit more versus other than that.

00:31:31.060 --> 00:31:34.640
I'm sure there's people out there who work with statisticians on a day to day basis.

00:31:34.640 --> 00:31:39.500
There's other people who themselves are quite competent, but my experience has been a lot

00:31:39.500 --> 00:31:43.780
of people, a lot of labs, not everybody, but a lot of us kind of just do that.

00:31:43.780 --> 00:31:47.640
We just collect data, put it in the program, fiddle about with our own data, and in the

00:31:47.640 --> 00:31:49.780
end, see what kind of comes out that makes sense.

00:31:49.780 --> 00:31:52.440
And hoping in the end, it's a hope that, okay, I think I did it right.

00:31:52.440 --> 00:31:52.660
Yeah.

00:31:52.660 --> 00:31:56.120
But it's pretty risky in terms of, you know, this is science and we're going to publish

00:31:56.120 --> 00:31:57.380
it, make it publicly available.

00:31:57.780 --> 00:32:02.520
So yeah, it was a bit of an eye opener in terms of, but what was nice is that my survey

00:32:02.520 --> 00:32:07.060
highlighted that, okay, this is what people are currently doing, but what do people want

00:32:07.060 --> 00:32:07.420
to do?

00:32:07.420 --> 00:32:08.620
Are they interested in it?

00:32:08.620 --> 00:32:12.040
And yeah, there was definitely a big interest in learning these skills.

00:32:12.040 --> 00:32:17.480
One of the questions was about, do you think how valuable is it to have computer coding as

00:32:17.480 --> 00:32:18.560
a skill currently?

00:32:18.560 --> 00:32:21.940
And the average was, it's important.

00:32:21.940 --> 00:32:26.440
And then the next question was, how is it for the future as a young, as a young investigator

00:32:26.440 --> 00:32:28.400
in the future career?

00:32:28.400 --> 00:32:29.260
How important is it?

00:32:29.260 --> 00:32:30.280
And it was very important.

00:32:30.280 --> 00:32:34.640
So it's highlights the fact that there's this shift to even the fields that may historically

00:32:34.640 --> 00:32:39.900
not have incorporated coding into their education of their students are now seeing that, yeah,

00:32:39.900 --> 00:32:42.280
well, maybe I don't do it as a senior or a postdoc.

00:32:42.280 --> 00:32:46.820
But I think that for the future, even those people are acknowledging that it's valuable.

00:32:46.820 --> 00:32:51.220
But as you might expect, one of my questions was trying to understand what would they want?

00:32:51.220 --> 00:32:54.040
But most importantly, in a sense, what are the biggest problems?

00:32:54.040 --> 00:32:55.880
Why aren't you coding right now?

00:32:55.940 --> 00:32:56.660
Why aren't you learning?

00:32:56.660 --> 00:32:57.880
And what are the obstacles?

00:32:57.880 --> 00:32:59.860
And some of them are addressable.

00:32:59.860 --> 00:33:01.900
Like lack of institutional resources.

00:33:01.900 --> 00:33:03.320
Like you could have more of that.

00:33:03.320 --> 00:33:04.700
Or you could have more examples.

00:33:04.700 --> 00:33:10.500
But one of the biggest one in that area that you got for your survey was lack of time.

00:33:10.500 --> 00:33:12.880
And it's hard to help people make more time.

00:33:12.880 --> 00:33:13.420
Exactly.

00:33:13.420 --> 00:33:16.680
I wonder whether that's a real problem or it's a perception.

00:33:17.140 --> 00:33:23.000
I think that for people who, like myself, when I first got introduced to coding, it's the unknown.

00:33:23.000 --> 00:33:27.020
And you think, my God, that's going to take me, you know, a year of my time.

00:33:27.020 --> 00:33:27.260
Right.

00:33:27.260 --> 00:33:33.640
These are like the wizards of Silicon Valley that like create this magical digital world around us.

00:33:33.640 --> 00:33:37.800
And it's like engineering plus with all the math and everything.

00:33:37.800 --> 00:33:40.360
It seems so hard from the outside.

00:33:40.360 --> 00:33:41.040
And then you do it.

00:33:41.040 --> 00:33:42.180
You're like, oh, that's all?

00:33:42.180 --> 00:33:43.280
Well, that was not so hard.

00:33:43.280 --> 00:33:43.680
Right?

00:33:43.740 --> 00:33:44.760
I just called this library.

00:33:44.760 --> 00:33:45.240
Exactly.

00:33:45.240 --> 00:33:48.160
With all the new tools, it makes it much simpler.

00:33:48.160 --> 00:33:54.620
My one piece of advice to students or people who come and ask me about these things is just pick one task in your next study.

00:33:54.620 --> 00:33:55.640
Don't do the whole thing.

00:33:55.640 --> 00:33:57.340
Just pick one thing.

00:33:57.340 --> 00:34:02.640
Whatever you, if it's about the acquisition of the data or if it's just making your figures.

00:34:02.640 --> 00:34:03.720
Or cleaning up the data.

00:34:03.720 --> 00:34:04.240
Yeah.

00:34:04.240 --> 00:34:06.600
Just pick one thing that you can automate.

00:34:06.600 --> 00:34:09.240
And if you want, I can help you along.

00:34:09.240 --> 00:34:10.220
Just do one step.

00:34:10.720 --> 00:34:19.920
And it makes it so different than if you're learning from a book that's giving you examples about, I don't know, leeches or the economy or some other problem that doesn't relate to me.

00:34:19.920 --> 00:34:24.820
Whereas this one, I'm actually building, using my learning to actually help me out.

00:34:24.820 --> 00:34:27.640
You're going to find a solution because in a sense you have to.

00:34:27.640 --> 00:34:31.440
But it's not daunting because you're not going out and learning everything that you need.

00:34:31.440 --> 00:34:35.460
I'm not setting up a web page to present my data or to do a survey or whatever it is.

00:34:35.660 --> 00:34:40.620
Just pick a simple, biteable chunk and then on your next study, just add to that.

00:34:40.620 --> 00:34:41.640
And then you'll see.

00:34:41.640 --> 00:34:42.260
That's really good advice.

00:34:42.260 --> 00:34:42.480
Yeah.

00:34:42.480 --> 00:34:42.960
Yeah.

00:34:42.960 --> 00:34:47.040
I think that's why the lack of time, I think, is they think they have to just stop and learn.

00:34:47.040 --> 00:34:49.100
And that's just not feasible.

00:34:49.100 --> 00:34:49.440
Right.

00:34:49.440 --> 00:34:51.220
I got to redo the way I do everything.

00:34:51.220 --> 00:34:52.680
We're going to rewrite this whole thing.

00:34:52.680 --> 00:34:53.040
Yeah.

00:34:53.040 --> 00:34:53.540
Yeah, exactly.

00:34:53.540 --> 00:34:55.560
Like, there's a bunch of little steps.

00:34:56.000 --> 00:35:01.900
You know, I would say, what is the step that makes you the least want to work on this project?

00:35:01.900 --> 00:35:02.920
You know what I mean?

00:35:02.920 --> 00:35:05.920
Like, what is the most not fun thing you do?

00:35:05.920 --> 00:35:07.120
Could you automate that?

00:35:07.120 --> 00:35:07.400
Yeah.

00:35:07.400 --> 00:35:12.040
And I guess the other one I've done for myself, actually, one of the big pushes to do Python,

00:35:12.040 --> 00:35:16.520
especially for data acquisition, for some of the research I do, is a lot of taking responses

00:35:16.520 --> 00:35:17.580
from other people.

00:35:17.580 --> 00:35:21.680
And we do these perceptual illusions to know where your body is in space.

00:35:21.680 --> 00:35:23.940
And we always have to get the answer.

00:35:24.620 --> 00:35:28.300
And for me, it was after we were done these studies, the first few times I participated

00:35:28.300 --> 00:35:33.540
in them and helped out, is once you look at the data and there's an outlier or a few points

00:35:33.540 --> 00:35:35.040
that you're just like, that can't be right.

00:35:35.040 --> 00:35:36.500
But then what do you do?

00:35:36.500 --> 00:35:38.040
You go back and it's a piece of paper.

00:35:38.040 --> 00:35:39.580
And then it's a number that I wrote.

00:35:39.580 --> 00:35:41.200
And then I'm like, well, did I write it wrong?

00:35:41.200 --> 00:35:43.740
Or did the person, you know, did I not understand what they were saying?

00:35:43.740 --> 00:35:45.060
Or their accent might have been different.

00:35:45.060 --> 00:35:49.980
And then you try to follow the chain and you're always, and I hated that because I had no real

00:35:49.980 --> 00:35:52.800
reason to exclude the data based on a known error.

00:35:53.220 --> 00:35:54.440
And that just frustrated me.

00:35:54.440 --> 00:35:59.920
And it happened enough that I kind of built this system around testing these things that,

00:35:59.920 --> 00:36:01.680
you know, it's all computer.

00:36:01.680 --> 00:36:06.240
It's built around, well, Python with a bit of Pygame on top for the interface.

00:36:06.240 --> 00:36:09.420
And in that way, now the data goes straight into the computer.

00:36:09.420 --> 00:36:13.360
Each response is verified with the person who's given me the answer.

00:36:13.360 --> 00:36:15.340
It shows it to them and says, is this actually what you answered?

00:36:15.840 --> 00:36:18.760
And it's just saved so much trouble.

00:36:18.760 --> 00:36:22.820
And now our study we just did had zero data that was even in question.

00:36:22.820 --> 00:36:29.860
And so we've gone from a lot of stress and possibly a few data points that were wrong to now I live in peace that after the study is done.

00:36:30.060 --> 00:36:33.320
And, you know, we get good, surprisingly, as experimenters.

00:36:33.320 --> 00:36:36.800
If you do it over and over, you kind of, it's less stressful to run the experiments.

00:36:36.800 --> 00:36:38.240
I can kind of think on my feet.

00:36:38.520 --> 00:36:42.900
But when it's the students and it's their first time running an experiment, they're pretty stressed out.

00:36:42.900 --> 00:36:44.000
There's a lot to think about.

00:36:44.000 --> 00:36:49.880
And you could see how easily they could forget to, you know, to check something or to write something down that's not correct.

00:36:49.880 --> 00:36:52.920
And then they go and, you know, copy paste that into the computer.

00:36:52.920 --> 00:36:55.680
There's so many levels of errors that can happen there.

00:36:55.680 --> 00:36:58.820
So for myself, part of it was early on the lowest hanging fruit.

00:36:58.820 --> 00:37:02.380
But that one was one I had to tackle because I was just so insecure.

00:37:02.380 --> 00:37:05.380
I didn't feel good about the fact that I just don't know.

00:37:05.380 --> 00:37:08.700
I mean, I think, let's say, 95% of my data is right.

00:37:08.700 --> 00:37:10.840
But can I get it to close to 100?

00:37:10.840 --> 00:37:13.320
And I think we're nearing that.

00:37:13.320 --> 00:37:15.040
And I think it was a big undertaking.

00:37:15.040 --> 00:37:18.400
But now the system's there and we've used it multiple times over.

00:37:18.400 --> 00:37:24.880
And, yeah, so you have to pick what's most important or, as you said, what's the most annoying job that you have to do.

00:37:24.880 --> 00:37:26.940
And data entry for us was one of the huge ones.

00:37:26.940 --> 00:37:27.780
Nobody wants to do that.

00:37:27.780 --> 00:37:28.260
That's boring.

00:37:28.260 --> 00:37:30.940
And so, yeah, just do it on the fly.

00:37:30.940 --> 00:37:39.640
And then the computer does it perfectly every time as long as you, you know, again, test your code and make sure it's doing what you expect, which is a whole other story that we might get into.

00:37:39.640 --> 00:37:41.340
Yeah, we should get into that as well.

00:37:41.340 --> 00:37:46.560
But at least, you know, it's as long as the software is working right, it's the foundation, right?

00:37:46.560 --> 00:37:52.900
Your data is the foundation of your research, which is the foundation of your papers and your work.

00:37:53.120 --> 00:37:55.040
And you definitely want that to be right.

00:37:55.040 --> 00:37:56.760
So if you can automate that.

00:37:56.760 --> 00:38:01.720
This portion of Talk Python To Me is brought to you by Linode.

00:38:01.720 --> 00:38:10.680
Whether you're working on a personal project or managing your enterprise's infrastructure, Linode has the pricing, support, and scale that you need to take your project to the next level.

00:38:10.680 --> 00:38:25.320
With 11 data centers worldwide, including their newest data center in Sydney, Australia, enterprise-grade hardware, S3-compatible storage, and the next-generation network, Linode delivers the performance that you expect at a price that you don't.

00:38:25.360 --> 00:38:41.380
Get started on Linode today with a $20 credit and you get access to native SSD storage, a 40-gigabit network, industry-leading processors, their revamped cloud manager at cloud.linode.com, root access to your server, along with their newest API and a Python CLI.

00:38:41.380 --> 00:38:49.400
Just visit talkpython.fm/Linode when creating a new Linode account and you'll automatically get $20 credit for your next project.

00:38:49.400 --> 00:38:50.700
Oh, and one last thing.

00:38:50.700 --> 00:38:51.460
They're hiring.

00:38:51.460 --> 00:38:54.580
Go to linode.com slash careers to find out more.

00:38:55.060 --> 00:38:55.900
Let them know that we sent you.

00:38:55.900 --> 00:39:05.820
I do want to come back and ask you a question about this importance of learning computer programming for the future grad students and whatnot.

00:39:05.820 --> 00:39:14.220
One of the things I think is interesting here is probably that means people are seeing more and more data that they need to work with.

00:39:14.220 --> 00:39:17.320
That's probably one angle I would suspect that's pretty straightforward.

00:39:17.620 --> 00:39:25.100
I wonder another one about just almost like sort of grant money angles as well.

00:39:25.100 --> 00:39:29.320
Because when you're a new grad student or postdoc, maybe you don't have a grant yet.

00:39:29.320 --> 00:39:30.680
Maybe you don't have a lot of resources.

00:39:31.060 --> 00:39:38.040
And with things like Python and the SciPy space and whatnot, you know, it doesn't matter if you have money or not.

00:39:38.040 --> 00:39:41.880
You have some of the best computational tools in the world.

00:39:41.880 --> 00:39:46.940
Those ones that people used to find black holes and work from the Higgs boson and whatnot.

00:39:46.940 --> 00:39:49.240
And you get those tools for free as well.

00:39:49.240 --> 00:39:50.640
What do you think about that angle?

00:39:50.840 --> 00:39:56.720
Yeah, well, I mean, for us, it's actually that's the truth is that there's things that I wouldn't have been able to do.

00:39:56.720 --> 00:40:00.260
Some of it is going data mining on our own data that we've accumulated.

00:40:00.260 --> 00:40:04.400
And I'm about to do the same thing with a colleague of mine that I write a blog with.

00:40:04.400 --> 00:40:12.060
We're going to go data mine three different data sets that have just been laying there that have a piece of information that would be really useful together, especially.

00:40:12.060 --> 00:40:17.640
That, you know, doing it by hand or by Excel, which is I think it's an insurmountable task.

00:40:17.640 --> 00:40:19.520
But programming makes that possible.

00:40:20.120 --> 00:40:27.780
And then the other thing is, as you mentioned, a lot of this move for all of science and funding agencies, especially, are asking people to make their data public.

00:40:27.780 --> 00:40:30.980
Some journals also ask to put your code public.

00:40:30.980 --> 00:40:36.200
So now, really, you have access to all these things that maybe I can't collect this data.

00:40:36.200 --> 00:40:39.080
Maybe I can't do this, but I have access now.

00:40:39.080 --> 00:40:40.120
I can download it.

00:40:40.120 --> 00:40:41.300
I can search through it.

00:40:41.300 --> 00:40:43.360
I can ask new questions on old data.

00:40:43.360 --> 00:40:43.660
Right.

00:40:43.660 --> 00:40:48.960
Get their Jupyter notebook and their data, and then you can start thinking from there, right?

00:40:49.020 --> 00:40:53.920
You can start exploring and changing it and slicing it differently and trying to make discoveries, right?

00:40:53.920 --> 00:40:54.220
Yeah.

00:40:54.220 --> 00:41:01.740
And I think that's the whole push towards open data is when you do clinical studies, for example, clinical trials to see if an intervention works.

00:41:01.740 --> 00:41:03.300
Well, that's important.

00:41:03.500 --> 00:41:06.840
But then, really, it's the meta-analysis, the thing that puts it all together.

00:41:06.840 --> 00:41:14.520
And so that push for people to present the data in their papers in a way that could be useful for scientists who do science on science.

00:41:14.660 --> 00:41:19.580
They analyze all the studies, put them together and say, overall, the evidence is this.

00:41:19.580 --> 00:41:25.680
Well, similarly, I think this is where coding and open data can help is let's not reinvent the wheel.

00:41:25.680 --> 00:41:29.280
And some of these data sets can be combined or they can be just searched.

00:41:29.280 --> 00:41:37.600
And by people who have completely different ideas that you'd never thought of, but somebody is going to go out there and just either contact you or just themselves, just move on with that data.

00:41:37.600 --> 00:41:41.280
And I think just progress will happen a lot faster and more efficiently.

00:41:41.280 --> 00:41:44.660
And that kind of research, as you're pointing out, doesn't really need any grant money.

00:41:44.660 --> 00:41:49.260
I mean, you can work on a fairly cheap machine and just get the data and try out a few things.

00:41:49.340 --> 00:41:51.380
And I think that's where it's going to, definitely.

00:41:51.380 --> 00:41:53.540
Big data, but big collaboration as well.

00:41:53.540 --> 00:41:53.820
Right.

00:41:53.820 --> 00:41:58.920
It needs time, but it doesn't need money for resources potentially, right?

00:41:58.920 --> 00:41:59.380
Yeah.

00:41:59.380 --> 00:42:01.740
It's a culture change because of the incentives.

00:42:01.740 --> 00:42:04.560
There's a lot of incentive to be exclusive.

00:42:04.560 --> 00:42:06.380
I own this data set.

00:42:06.380 --> 00:42:07.440
I'm the one who collected it.

00:42:07.440 --> 00:42:10.480
And my group pushes these results out.

00:42:10.480 --> 00:42:13.720
And I don't want to be scooped by anybody else, for example.

00:42:13.720 --> 00:42:15.180
Some of that I can understand.

00:42:15.180 --> 00:42:15.600
Right.

00:42:15.600 --> 00:42:18.420
There's still discoveries to be made in this data.

00:42:18.940 --> 00:42:20.320
And here's our first one.

00:42:20.320 --> 00:42:20.520
Yeah.

00:42:20.520 --> 00:42:22.100
But we're hanging on to it for the rest, right?

00:42:22.100 --> 00:42:23.660
Which is, yeah, I understand that.

00:42:23.660 --> 00:42:25.620
That might be a hard thought to get that.

00:42:25.620 --> 00:42:25.880
Yeah.

00:42:25.880 --> 00:42:28.320
And so I think it's a culture change that way.

00:42:28.320 --> 00:42:31.460
It's a gradually, I think, that people will be more transparent.

00:42:31.460 --> 00:42:36.280
And hopefully, you know, and you can see putting an embargo saying, you know, we'll make it public,

00:42:36.280 --> 00:42:37.400
but in a certain amount of time.

00:42:37.400 --> 00:42:41.260
But at some point, but the competition for these things is quite high.

00:42:41.260 --> 00:42:44.480
So therefore, you can see why some people like to kind of hoard their data a little bit and

00:42:44.480 --> 00:42:46.860
not necessarily make it publicly available.

00:42:47.040 --> 00:42:51.860
But the move is for a lot of the top journals to require people to put their data in some

00:42:51.860 --> 00:42:53.680
form on public repositories.

00:42:53.680 --> 00:42:54.480
So the move is there.

00:42:54.480 --> 00:42:58.720
And if you're funded, actually, a lot of funding agencies in Europe, and I think the NIH has

00:42:58.720 --> 00:43:02.160
some of these policies, is that if you're funded by us, well, you're going to make your data

00:43:02.160 --> 00:43:03.020
available to others.

00:43:03.020 --> 00:43:03.700
Right, right.

00:43:03.700 --> 00:43:05.680
This is ultimately paid for by the taxpayers.

00:43:05.680 --> 00:43:06.900
This is not yours.

00:43:06.900 --> 00:43:08.420
So share.

00:43:08.540 --> 00:43:08.860
Exactly.

00:43:08.860 --> 00:43:09.160
Right.

00:43:09.160 --> 00:43:12.600
Similar for open publication is that, you know, we're giving you the money to do this.

00:43:12.600 --> 00:43:16.320
Therefore, when you publish, you have to publish in open source journals, or you're going to

00:43:16.320 --> 00:43:20.400
pay the fee to make it an open publication within that paywall journal.

00:43:20.400 --> 00:43:23.720
So those are similar in terms of the move towards open science.

00:43:23.720 --> 00:43:24.060
Sure.

00:43:24.480 --> 00:43:30.900
Well, one of the interesting things that you've written about, and I think it comes back to this

00:43:30.900 --> 00:43:38.880
sort of, which comes first, but one of the challenges is the life cycle and the openness

00:43:38.880 --> 00:43:46.260
or the lack thereof of the data and the algorithms and the libraries for science is not necessarily

00:43:46.260 --> 00:43:50.940
the same as for random software project by software developers, right?

00:43:50.940 --> 00:43:52.760
Say versus Flask, right?

00:43:52.760 --> 00:43:57.280
You talked about some of the important lessons that people in the science space can take from

00:43:57.280 --> 00:44:01.800
the computer science side of things, things like GitHub and issue tracking and whatnot.

00:44:01.800 --> 00:44:02.880
Do you want to talk about that a bit?

00:44:02.880 --> 00:44:04.380
Well, it's computer science.

00:44:04.380 --> 00:44:06.620
And I was always thought, why is that called a science?

00:44:06.620 --> 00:44:06.880
Really?

00:44:06.980 --> 00:44:09.540
Aren't they just, you know, nerds or geeks on the computer?

00:44:09.540 --> 00:44:12.520
And I had that false perception, obviously.

00:44:12.520 --> 00:44:15.420
And now I'm kind of one of those people myself to some extent.

00:44:15.420 --> 00:44:19.680
But when I was starting out, it was all just, isn't it just a mishmash of they're just typing

00:44:19.680 --> 00:44:21.540
and there's no rhyme or reason about it.

00:44:21.540 --> 00:44:23.480
And to be honest, it's kind of interesting.

00:44:23.480 --> 00:44:28.600
I coded MATLAB for the longest time and I had so many misconceptions.

00:44:28.600 --> 00:44:35.320
My code was, my PhD code was two scripts that were, you know, and I thought it was cool

00:44:35.320 --> 00:44:37.700
that I had like 3,000 some lines of code.

00:44:37.700 --> 00:44:37.980
Yeah.

00:44:37.980 --> 00:44:40.040
I had so much copy and paste.

00:44:40.040 --> 00:44:41.620
It was very embarrassing.

00:44:41.620 --> 00:44:44.400
I don't want to go back to that because I just didn't know any better.

00:44:44.400 --> 00:44:45.980
And the people who taught me didn't know any better.

00:44:45.980 --> 00:44:46.360
Right.

00:44:46.360 --> 00:44:47.900
Nobody said, what are you doing here?

00:44:47.900 --> 00:44:49.260
They're like, well, that looks like mine.

00:44:49.260 --> 00:44:50.340
So this must be fine.

00:44:50.340 --> 00:44:51.240
Exactly.

00:44:51.240 --> 00:44:51.760
Yeah.

00:44:52.000 --> 00:44:53.460
So it's just an inheritance.

00:44:53.460 --> 00:44:57.820
It's just this, unfortunately, the natural selection is in the wrong direction in this case.

00:44:57.820 --> 00:45:00.260
So gradually, you know, I read up more about it.

00:45:00.260 --> 00:45:02.800
Software carpentry pointed me in a good direction.

00:45:02.800 --> 00:45:04.660
And then I read some books.

00:45:04.660 --> 00:45:08.020
I fell upon your podcast and then Brian Hawkins as well.

00:45:08.020 --> 00:45:13.080
And I started realizing that all this stuff has already been figured out, which obviously

00:45:13.080 --> 00:45:13.880
is obvious.

00:45:13.880 --> 00:45:17.220
People have figured this out in, you know, a long time ago in the 70s, 80s.

00:45:17.220 --> 00:45:20.140
And up till now, it's just so much simpler.

00:45:20.140 --> 00:45:25.960
The workflow, all the things like GitHub with making suggestions or changes and all those

00:45:25.960 --> 00:45:27.160
kind of things, pull requests.

00:45:27.160 --> 00:45:27.580
Right.

00:45:27.580 --> 00:45:28.820
You put your code up there.

00:45:28.820 --> 00:45:32.660
Somebody will find, if they find something wrong, they'll put an issue in there.

00:45:32.660 --> 00:45:35.980
If they can fix something or improve something, they'll do a PR.

00:45:35.980 --> 00:45:42.800
And it's, you know, science talks so much about this research study is valid.

00:45:42.800 --> 00:45:46.520
We know the Big Bang happened this way because this is peer reviewed, right?

00:45:46.520 --> 00:45:46.920
Yeah.

00:45:47.040 --> 00:45:49.320
And I mean, that's kind of what GitHub is.

00:45:49.320 --> 00:45:53.140
Just less formally, less credentialed, but in a sense, right?

00:45:53.140 --> 00:45:53.760
Yeah.

00:45:53.760 --> 00:45:59.140
But what's interesting there is I spoke to, we have a floor meeting once a week.

00:45:59.140 --> 00:46:05.500
And just before Christmas, I did talk about this comparison of what we can learn from computer

00:46:05.500 --> 00:46:06.160
scientists.

00:46:06.160 --> 00:46:10.800
And that was a bit what I was pointing out was that a computer scientist will write their

00:46:10.800 --> 00:46:15.240
code and do it as best as they can and then put it up there.

00:46:15.900 --> 00:46:19.980
And in a sense, not that they expect there to be bugs because, you know, some people will

00:46:19.980 --> 00:46:22.860
then go to the next step, which is they'll make tests for their code.

00:46:22.860 --> 00:46:28.000
But there's still this knowledge that there possibly and most likely is a bug of some sort

00:46:28.000 --> 00:46:32.840
or a case that I've not considered that if you throw it at my code, okay, it'll crash.

00:46:33.180 --> 00:46:34.640
Whereas, and that's expected.

00:46:34.640 --> 00:46:38.300
And then when you get a pull request, you're thankful and you say, you know, great.

00:46:38.300 --> 00:46:40.140
It's not a improving the code.

00:46:40.140 --> 00:46:42.360
It's actually a fixing a problem with my current code.

00:46:42.360 --> 00:46:47.920
And it's this iterative process that happens over time for improvement versus in science.

00:46:48.060 --> 00:46:53.680
And I realize this doesn't speak to everybody out there, but a vast majority of us, if we

00:46:53.680 --> 00:46:59.340
do code, but even if we don't, we just do our work and then we polish it up into this little,

00:46:59.340 --> 00:47:02.980
you know, either Word or PDF document that we submit to a journal.

00:47:03.500 --> 00:47:08.040
And this polished final version has most of the time, no data attached to it.

00:47:08.040 --> 00:47:12.920
It's just a few figures and some tables gets assessed by two, three other of my peers.

00:47:12.920 --> 00:47:17.260
And they have no idea that, you know, all the steps that were taken.

00:47:17.260 --> 00:47:23.080
There is research on this that kind of shows that the number of somewhat arbitrary decisions

00:47:23.080 --> 00:47:27.400
that are made along the way to collect your data in terms of, okay, well, I'm going to use

00:47:27.400 --> 00:47:28.300
this versus that.

00:47:28.300 --> 00:47:30.160
I'm going to exclude these cases versus that.

00:47:30.160 --> 00:47:32.660
I'm going to use this test or this filter setting versus that.

00:47:32.960 --> 00:47:36.480
There's so many permutations that in the end, it's almost, of course, you're going to find

00:47:36.480 --> 00:47:40.080
something significant, but in itself, it's just a self-fulfilling prophecy.

00:47:40.080 --> 00:47:41.760
You're setting yourself up to find something.

00:47:41.760 --> 00:47:48.580
And then as the Texas sharpshooter example, it's that thing of the guy who, he's got a barn

00:47:48.580 --> 00:47:53.780
and there's bullet holes in the barn and there's always a red circle around it.

00:47:53.780 --> 00:47:58.000
And there's a guy who comes by and he says, wow, do you hit that every time?

00:47:58.000 --> 00:47:59.360
And he goes, yeah, I'm so good.

00:47:59.360 --> 00:48:02.900
And then his wife comes out and then she says, he actually just shoots.

00:48:02.900 --> 00:48:04.860
And he draws a circle around it afterwards.

00:48:04.860 --> 00:48:08.140
So if you want to find something, you'll find it.

00:48:08.140 --> 00:48:13.800
And yeah, there's just, I don't want to say that I'm a skeptical about other scientists,

00:48:13.800 --> 00:48:19.200
but we are one of the people I work with, Simon Gandivia, does a lot of work on cognitive biases.

00:48:19.200 --> 00:48:24.740
And we have to almost protect ourselves from our own science in a sense, because the people

00:48:24.740 --> 00:48:26.240
doing it aren't the computers, it's us.

00:48:26.240 --> 00:48:27.300
We have to make the decisions.

00:48:27.540 --> 00:48:31.820
And without knowing it, we have these, and a bias is that, is that you're not aware of it.

00:48:31.820 --> 00:48:36.320
Somebody might even point it out to you and you might just not acknowledge that it's there.

00:48:36.320 --> 00:48:39.540
You might think that doesn't apply to me, but I know other people that it applies to.

00:48:39.540 --> 00:48:41.720
And so we just have to come up with ways.

00:48:41.780 --> 00:48:46.780
And I think that coding, making decisions before the data comes in and making it transparent,

00:48:46.780 --> 00:48:48.980
it's one of the ways that we can improve what we do.

00:48:48.980 --> 00:48:53.500
And so in terms of things that we can learn from computer scientists, I think, for example,

00:48:53.500 --> 00:48:58.760
the push towards publishing the data and the code, it's so interesting because once we publish it,

00:48:58.760 --> 00:49:01.020
if I make that, it's a big stress on people.

00:49:01.020 --> 00:49:05.540
Currently, it's almost like some people don't even make an effort to clean the data or the code

00:49:05.540 --> 00:49:06.880
because they don't want anybody to use it.

00:49:06.880 --> 00:49:07.560
Right, right.

00:49:07.560 --> 00:49:11.420
Just leave it totally obscure and like, well, I have no idea what this does.

00:49:11.420 --> 00:49:12.740
And the variable names are bad.

00:49:12.740 --> 00:49:13.840
And what is this about?

00:49:13.840 --> 00:49:15.080
And just, ah, forget it, right?

00:49:15.080 --> 00:49:16.600
That's the hopeful outcome.

00:49:16.600 --> 00:49:16.920
Yeah.

00:49:16.920 --> 00:49:20.240
And somebody looked at that as well and saying that I think it's over 80% of the data sets

00:49:20.240 --> 00:49:22.660
that are out there or code is actually not really useful.

00:49:22.660 --> 00:49:27.360
But if you think of it from a computer science point of view, well, that's actually almost the

00:49:27.360 --> 00:49:28.360
start of it, right?

00:49:28.360 --> 00:49:32.560
Unless you have a very big group and there's been multiple eyes on the code, this might be the

00:49:32.560 --> 00:49:34.540
first public appearance of this code.

00:49:34.540 --> 00:49:39.400
And it would be nice if people had the chance to look at it, run it a few times, figure out

00:49:39.400 --> 00:49:40.540
if there's any issues.

00:49:40.540 --> 00:49:45.620
But the risk of that, the way the current publishing system works is that if anybody finds a genuine,

00:49:45.620 --> 00:49:50.340
not more just, not a little error, but anything that's of significance, that means the paper

00:49:50.340 --> 00:49:53.280
probably will need to be retracted, which is a huge deal in science.

00:49:53.280 --> 00:49:53.660
Right.

00:49:53.660 --> 00:49:58.840
Versus in computer science, well, sure, put a pull request and I'll fix that for you.

00:49:58.840 --> 00:50:01.080
They're humble enough to know that I'm not perfect.

00:50:01.080 --> 00:50:05.580
There's going to be things, I may have made a mistake in this versus in science, it's what

00:50:05.580 --> 00:50:07.580
we publish and we just want to move on.

00:50:07.580 --> 00:50:10.460
We want to just, you know, that thing's something on my CV.

00:50:10.460 --> 00:50:13.700
I've ticked that box, another number and I move forward.

00:50:13.700 --> 00:50:18.800
So that's one lesson that I don't know how to incorporate it exactly in terms of the workflow

00:50:18.800 --> 00:50:19.800
of how we do things.

00:50:19.800 --> 00:50:25.800
It's very tricky because the incentives are sort of opposed to the right behavior somewhat,

00:50:25.800 --> 00:50:29.620
as you described about like, if there's a big problem, we're going to have to retract the

00:50:29.620 --> 00:50:31.040
paper.

00:50:31.040 --> 00:50:36.060
There are some things trying to solve that a little bit like Joss, Journal of Open Source

00:50:36.060 --> 00:50:36.400
Software.

00:50:36.400 --> 00:50:37.160
Are you familiar with that?

00:50:37.160 --> 00:50:37.500
Yeah.

00:50:37.500 --> 00:50:37.860
Yeah.

00:50:37.860 --> 00:50:44.620
So, I mean, you can publish the code there and get some eyes on it, but fundamentally, right,

00:50:44.620 --> 00:50:46.540
eventually you've got to take it and do the research.

00:50:46.540 --> 00:50:49.540
And if the problem is found afterwards, it's bad.

00:50:49.960 --> 00:50:54.500
But at the same time, I mean, isn't really the zen of science to get it right?

00:50:54.500 --> 00:50:58.660
Again, the pressure, the time constraint that we all have makes it that it doesn't happen.

00:50:58.660 --> 00:51:04.460
But another lesson from computer science, part of this was listening to Brian Okken and his

00:51:04.460 --> 00:51:08.840
podcast and then also trying to get through his book, which is really good.

00:51:08.980 --> 00:51:14.620
But again, it's that thing of it's good, but it doesn't really apply, or at least I couldn't jump

00:51:14.620 --> 00:51:21.640
into it and directly apply it because it's too big of a step for what I do because most of the code,

00:51:21.640 --> 00:51:24.960
some of it is reusable, but a lot of it is case specific.

00:51:25.700 --> 00:51:32.080
And so to build up a whole test suite around my code seems a bit overkill, but that's definitely

00:51:32.080 --> 00:51:36.840
a way to prevent the issues that if I could test my code, maybe simulate some data.

00:51:36.840 --> 00:51:37.860
That'd be very useful.

00:51:37.860 --> 00:51:39.780
And I think it's a great lesson, right?

00:51:39.780 --> 00:51:43.360
Take some pytest and write some tests or even in MATLAB or whatever.

00:51:43.360 --> 00:51:50.100
But I do think testing science is harder than testing a lot of things that people talk about

00:51:50.100 --> 00:51:52.420
testing when they talk about unit testing.

00:51:52.560 --> 00:51:56.540
For example, if I write a test for my online course site, right?

00:51:56.540 --> 00:52:00.620
I want to test that users can sign up, but they can't sign up if they pass a bad email

00:52:00.620 --> 00:52:01.960
address or something like that, right?

00:52:01.960 --> 00:52:03.260
Here's a good email address.

00:52:03.260 --> 00:52:04.640
It returns true.

00:52:04.640 --> 00:52:05.500
Email is valid.

00:52:05.500 --> 00:52:06.440
Here's a bad email address.

00:52:06.440 --> 00:52:07.220
It returns false.

00:52:07.220 --> 00:52:08.080
Email not valid.

00:52:08.080 --> 00:52:13.140
But if I have, here are some wiggles and gravity.

00:52:13.140 --> 00:52:14.960
Was that a black hole collision?

00:52:14.960 --> 00:52:16.820
Like, I don't know.

00:52:16.820 --> 00:52:18.860
We've never observed it before.

00:52:18.860 --> 00:52:21.280
I'm not even like, you know, like, you know what I'm getting at?

00:52:21.280 --> 00:52:23.300
It's just like, it's really hard.

00:52:23.300 --> 00:52:24.160
And so, I don't know.

00:52:24.160 --> 00:52:25.280
Do you have any advice?

00:52:25.280 --> 00:52:30.600
Like, maybe take data that you know the outcome of and then try to run your code and predict

00:52:30.600 --> 00:52:32.360
something that you know should be some way?

00:52:32.360 --> 00:52:33.040
Or I don't know.

00:52:33.040 --> 00:52:34.940
What do you advise people like?

00:52:34.940 --> 00:52:40.800
Because it seems much harder from a software side to write the right test for that kind

00:52:40.800 --> 00:52:41.020
of stuff.

00:52:41.020 --> 00:52:45.620
Yeah, I definitely think that's the test your code where it's possible in terms of just

00:52:45.620 --> 00:52:46.920
line to line or functions.

00:52:46.920 --> 00:52:52.380
But then when it actually is interfacing with the data, I think simulating the data or a

00:52:52.380 --> 00:52:55.060
data that's already been, you know, analyzed and processed.

00:52:55.060 --> 00:52:58.780
Those are the two things that I think have to be done a little bit more.

00:52:58.780 --> 00:53:01.780
And some fields just do it innately, whereas we don't.

00:53:01.780 --> 00:53:05.660
And sometimes there's a limitation to how much we can test the code in this case.

00:53:05.660 --> 00:53:10.780
But I think that being able to simulate data and having it know the outcome before you

00:53:10.780 --> 00:53:13.740
run it through it, it gives you at least some amount of certainty.

00:53:13.740 --> 00:53:17.100
So yeah, that's one thing that people could start doing a little bit more.

00:53:17.100 --> 00:53:18.360
But where do they start?

00:53:18.360 --> 00:53:20.820
I mean, for myself, that's one that I don't know how.

00:53:20.820 --> 00:53:26.740
There's Greg Wilson, the founder of Software Carpentry, has this series of papers on, in

00:53:26.740 --> 00:53:30.500
a sense, best computer practices, scientific computer practices, and good enough.

00:53:30.500 --> 00:53:31.960
And in there, it's true.

00:53:31.960 --> 00:53:33.360
We don't have enough time to be perfect.

00:53:33.360 --> 00:53:35.600
So good enough for most of us is good.

00:53:36.200 --> 00:53:38.100
And he mentions testing your code.

00:53:38.100 --> 00:53:41.300
But that's where it ends, is that, you know, he might put a reference.

00:53:41.300 --> 00:53:47.600
But I don't necessarily think that the current way to do it for, you know, big software programs

00:53:47.600 --> 00:53:49.720
or projects translate all that well.

00:53:49.720 --> 00:53:53.700
Obviously, some types of sciences, that's what it is, because it's all based around big programs

00:53:53.700 --> 00:53:55.700
and big pipelines of data analysis.

00:53:55.700 --> 00:54:00.240
But on the people that are more like myself, that do data collection themselves, they write

00:54:00.240 --> 00:54:02.180
their code themselves, they write the papers themselves.

00:54:02.180 --> 00:54:05.260
It's, I'm just not sure how to test my code.

00:54:05.260 --> 00:54:08.880
Or if I do, it's going to be clunky, it's going to take me a long time.

00:54:08.880 --> 00:54:11.020
And is it necessary to be at that level?

00:54:11.020 --> 00:54:12.640
I would love for somebody.

00:54:12.640 --> 00:54:14.900
But again, it's this thing, everybody's strapped for time.

00:54:15.000 --> 00:54:20.520
And so somebody like Brian, obviously has no interest in writing a textbook or a blog series

00:54:20.520 --> 00:54:22.660
on how can scientists test their code.

00:54:22.660 --> 00:54:26.420
And also, it's the fact that we're so different, that the fields are so varied.

00:54:26.720 --> 00:54:31.340
And so I still feel that while I think computer uptake in terms of programming, Python, those

00:54:31.340 --> 00:54:33.700
types of things has definitely skyrocketed.

00:54:33.700 --> 00:54:40.580
Some of the tools that come along with computer science haven't matured or morphed enough to

00:54:40.580 --> 00:54:42.520
make it easily implementable.

00:54:42.520 --> 00:54:46.880
So, you know, GitHub is something that version controls, obviously, another important thing

00:54:46.880 --> 00:54:49.380
to talk about in terms of computer software.

00:54:49.580 --> 00:54:53.540
And I think software carpentry teaches that on its two-day course.

00:54:53.540 --> 00:54:55.780
And it's just logical, I mean, in terms of the way.

00:54:55.780 --> 00:55:02.340
Yet scientists, I don't know, there's a comic strip called PhD, Piled Higher and Deeper.

00:55:02.340 --> 00:55:06.700
And there's this one that everybody puts up as a slide often.

00:55:06.700 --> 00:55:12.280
It's the, he has his thesis version as a doc, a Word document.

00:55:12.280 --> 00:55:17.300
And it has a thesis version one doc, and then it has version 1.2.

00:55:17.300 --> 00:55:21.540
And then it has final, and then final, final, and then final, final, underscore, dash, final

00:55:21.540 --> 00:55:21.920
changes.

00:55:21.920 --> 00:55:27.420
And I cringe because I actually looked back when I found that at my own thesis.

00:55:27.420 --> 00:55:29.600
And that's exactly what I had.

00:55:29.600 --> 00:55:32.160
You're like, look, this is an interesting naming convention.

00:55:32.160 --> 00:55:33.460
It's slightly different than mine.

00:55:33.460 --> 00:55:34.440
Exactly.

00:55:34.440 --> 00:55:38.000
Everybody kind of laughs at it when you show it.

00:55:38.000 --> 00:55:40.480
But really, there's no great workaround.

00:55:40.480 --> 00:55:46.160
Because, you know, like a Word, for example, does have this inbuilt thing that you can, you

00:55:46.160 --> 00:55:47.680
know, track changes, everybody loves it.

00:55:47.680 --> 00:55:49.520
But once you accept that change, it's gone.

00:55:49.520 --> 00:55:53.680
So if you want to have a history of it, you need to save a new version of it.

00:55:53.680 --> 00:55:57.720
And there's the more collaborative online things that, you know, Google Docs and stuff like

00:55:57.720 --> 00:55:57.900
that.

00:55:57.900 --> 00:56:02.780
But still, the idea of having a history, and in a sense, that's what science is about, is

00:56:02.780 --> 00:56:06.540
being able to show from the raw data, all the steps that were done.

00:56:06.540 --> 00:56:09.360
And I think it should continue on to the manuscript as well.

00:56:09.540 --> 00:56:13.080
So version control is another important lesson that we can apply, I think.

00:56:13.080 --> 00:56:17.720
I just noticed that Google Docs, I know they had a version history, but you can tag different

00:56:17.720 --> 00:56:19.820
versions, which is kind of cool.

00:56:19.820 --> 00:56:22.240
Like, so you could have final, final, final, final changes.

00:56:22.240 --> 00:56:25.120
Just in one doc, right?

00:56:27.540 --> 00:56:32.620
And I guess the last thing to highlight, I think that, again, I'm a bit of a geek, so

00:56:32.620 --> 00:56:33.820
I'd actually like to do this.

00:56:33.820 --> 00:56:38.000
But the people I've been surrounded generally aren't people who code and especially don't

00:56:38.000 --> 00:56:38.640
code in Python.

00:56:38.640 --> 00:56:40.620
But this idea of a code review.

00:56:40.620 --> 00:56:41.300
Yeah.

00:56:41.360 --> 00:56:43.800
I was baffled to hear that people actually do that.

00:56:43.800 --> 00:56:46.400
Like, people sit in a room and present code.

00:56:46.400 --> 00:56:50.780
And I was just like, that would be, as a person who doesn't know how to code or just learning,

00:56:50.780 --> 00:56:52.480
to just sit in on that would be useful.

00:56:52.480 --> 00:56:57.880
And then also to sit there and have other people who code kind of critique it, but also improve

00:56:57.880 --> 00:57:01.160
it or see if there's any issues and help answer some of my questions.

00:57:01.160 --> 00:57:02.040
I'm like, wow.

00:57:02.040 --> 00:57:03.960
And I'm sure it happens in some bigger labs.

00:57:03.960 --> 00:57:04.220
Yeah.

00:57:04.220 --> 00:57:09.140
But on the day-to-day, pretty much my second personality is the person I do my code review

00:57:09.140 --> 00:57:09.400
with.

00:57:09.680 --> 00:57:13.020
That's about all I have is I just sit there and I, does this make sense?

00:57:13.020 --> 00:57:13.940
Talk out loud, maybe.

00:57:13.940 --> 00:57:19.560
And it's another way that, although it seems currently that the publication, once it's out

00:57:19.560 --> 00:57:23.540
there, you don't want any problems to be found because you may have to retract it.

00:57:23.540 --> 00:57:25.360
So what can be done beforehand?

00:57:25.360 --> 00:57:26.040
Well, you know.

00:57:26.040 --> 00:57:26.400
Right.

00:57:26.400 --> 00:57:29.640
How much can you bring that up ahead of the release?

00:57:29.640 --> 00:57:30.000
Exactly.

00:57:30.000 --> 00:57:31.040
Yeah, yeah, yeah.

00:57:31.040 --> 00:57:31.420
Absolutely.

00:57:31.420 --> 00:57:31.700
Yeah.

00:57:31.700 --> 00:57:33.180
So that's one other thing that we could do.

00:57:33.180 --> 00:57:37.440
But the time constraints make it that it just, unfortunately, I haven't seen it implemented

00:57:37.440 --> 00:57:37.840
very much.

00:57:37.840 --> 00:57:41.820
Well, I think it's probably, it sounds to me like it's, in my experience, working in

00:57:41.820 --> 00:57:47.180
like a cognitive science research lab and some other stuff, I feel like maybe it's time,

00:57:47.180 --> 00:57:51.400
but even the bigger challenge is expertise, right?

00:57:51.400 --> 00:57:53.620
Usually, you know, who are you going to go to?

00:57:53.620 --> 00:57:56.260
Because you're the person that knows the most about that.

00:57:56.340 --> 00:57:57.680
So here we are.

00:57:57.680 --> 00:57:58.860
I'm going to do what I can, right?

00:57:58.860 --> 00:57:59.840
Yeah.

00:57:59.840 --> 00:58:05.520
I think it would be a really cool service to set up some kind of, not like GitHub, but

00:58:05.520 --> 00:58:07.820
some kind of online thing.

00:58:07.820 --> 00:58:15.000
Maybe you can link your GitHub profile to it or something where it allows scientists to donate

00:58:15.000 --> 00:58:19.620
a little bit of time in order to receive code reviews of their code, right?

00:58:19.680 --> 00:58:24.020
Like if I could put up my code into this project, you know, it'll still stay hidden, not going

00:58:24.020 --> 00:58:24.440
to come out.

00:58:24.440 --> 00:58:29.560
But if I agree to code review somebody's stuff collaboratively with them, then they'll do

00:58:29.560 --> 00:58:32.420
it for me or someone else will do that for mine, right?

00:58:32.420 --> 00:58:36.360
Like I earned a half hour of code review by doing a half hour for someone else.

00:58:36.360 --> 00:58:37.140
Or I don't know.

00:58:37.140 --> 00:58:41.560
It seems like there's probably some way to like put this out on the internet and create it in

00:58:41.560 --> 00:58:45.560
a way where, you know, the 20 people that are doing this kind of thing actually could

00:58:45.560 --> 00:58:48.340
get together and have a look and help each other out maybe.

00:58:48.340 --> 00:58:48.780
Yeah.

00:58:48.780 --> 00:58:49.920
No, I think that'd be useful.

00:58:49.920 --> 00:58:53.160
And, you know, you have to find the people that you would trust to do that.

00:58:53.160 --> 00:58:57.780
But it's similar to, you know, the earning beans for giving good feedback.

00:58:57.780 --> 00:59:00.060
I think here you can earn trust points or whatever it would be.

00:59:00.060 --> 00:59:04.060
And, you know, the quality of your comments and keeping it to yourself.

00:59:04.060 --> 00:59:04.640
But yeah.

00:59:04.640 --> 00:59:10.300
And proper coding practices, simply breaking it down into small, biteable chunks means that you

00:59:10.300 --> 00:59:11.400
can reuse it yourself.

00:59:11.400 --> 00:59:15.780
So once maybe you've got some feedback on a section or maybe somebody will tell you,

00:59:15.780 --> 00:59:16.740
turn that into a function.

00:59:16.740 --> 00:59:19.580
Well, then once it's been reviewed, you can kind of trust it.

00:59:19.580 --> 00:59:22.020
But I think a lot of us just get into it.

00:59:22.020 --> 00:59:22.820
We just want the answer.

00:59:22.820 --> 00:59:25.500
And we, in a sense, we probably reinvent the wheel way too many times.

00:59:25.500 --> 00:59:25.820
Yeah.

00:59:25.820 --> 00:59:30.620
That's something I definitely saw a lot of is like, here's a huge long script with no

00:59:30.620 --> 00:59:33.680
function or branching or other than an if statement.

00:59:33.680 --> 00:59:37.800
You know, it doesn't have, it doesn't have a lot of structure to it, which means it's nearly,

00:59:37.800 --> 00:59:40.280
it cannot be reused almost, right?

00:59:40.460 --> 00:59:40.820
Exactly.

00:59:40.820 --> 00:59:45.380
And one of the things you touched on is one of the big differences between scientific

00:59:45.380 --> 00:59:52.560
computation code and like computer science, formal software developer code is you hinted

00:59:52.560 --> 00:59:58.080
at it before, but it's like you often hear that code is read way more times than it's written.

00:59:58.080 --> 01:00:01.260
It should be written first for the software developers.

01:00:01.440 --> 01:00:04.960
And then secondly, so it also runs things like that, right?

01:00:04.960 --> 01:00:09.500
Whereas with science code, it's like, once you get it working and you get the graph, you're

01:00:09.500 --> 01:00:09.760
done.

01:00:09.760 --> 01:00:10.800
You don't need to polish it.

01:00:10.800 --> 01:00:11.940
You don't need to touch it again.

01:00:11.940 --> 01:00:13.080
It works.

01:00:13.080 --> 01:00:14.220
It did the thing.

01:00:14.220 --> 01:00:15.120
We got the outcome.

01:00:15.120 --> 01:00:17.740
We're going to come up with something different next time or whatever.

01:00:17.740 --> 01:00:18.040
Right.

01:00:18.140 --> 01:00:23.280
And I think that puts a very different kinds of pressure on organizing your code, reusing

01:00:23.280 --> 01:00:24.740
your code, documenting your code.

01:00:24.740 --> 01:00:26.300
There's just like all these different pressures.

01:00:26.300 --> 01:00:29.980
And I'm not saying one is better than the other necessarily.

01:00:29.980 --> 01:00:32.920
If your job is to like, I got to quickly analyze this data and get it out.

01:00:32.920 --> 01:00:34.340
Like, I'm not going to tell you all.

01:00:34.440 --> 01:00:36.240
And you have to make a package while you're at it, right?

01:00:36.240 --> 01:00:37.220
Like, that's not your problem.

01:00:37.220 --> 01:00:41.420
But it does mean the code is treated differently.

01:00:41.420 --> 01:00:45.300
It potentially has errors lurking in different ways and so on, right?

01:00:45.300 --> 01:00:45.760
Yeah.

01:00:45.760 --> 01:00:52.900
And I think that's the workflow hasn't been adapted very much to the lifecycle of the kind

01:00:52.900 --> 01:00:53.920
of code that we would write.

01:00:53.920 --> 01:00:58.940
And I think it's the lesson of take as much as you can and turn it into functions and things

01:00:58.940 --> 01:00:59.840
that you can reuse.

01:00:59.840 --> 01:01:04.080
And then, you know, build tests around those, for example, or have code reuse on those.

01:01:04.180 --> 01:01:08.900
And then the nuances for this current study, well, that'll be, you know, something to maybe

01:01:08.900 --> 01:01:12.580
just be a little bit more careful about and maybe have somebody look at it or check the

01:01:12.580 --> 01:01:12.980
outputs.

01:01:12.980 --> 01:01:17.740
But it's true that, you know, I was listening to it really rung a bell when Brian Okken said

01:01:17.740 --> 01:01:20.480
that about, you know, in terms of testing, why not?

01:01:20.480 --> 01:01:24.220
When once the test is built, once the code is written, you're going to make it legible,

01:01:24.220 --> 01:01:28.720
obviously make it clear, but also make sure that it's correct because it's, you're going

01:01:28.720 --> 01:01:30.440
to be looking at this over and over and over.

01:01:30.640 --> 01:01:34.680
And it's going to, you know, whereas in science, I write all the time.

01:01:34.680 --> 01:01:36.740
I read very little code.

01:01:36.740 --> 01:01:38.960
I barely know how to read other people's code.

01:01:38.960 --> 01:01:43.360
And that's interesting to me too, because I'm sure that with all your experience of the

01:01:43.360 --> 01:01:48.660
various languages that you know, you can kind of look at different code and kind of pick

01:01:48.660 --> 01:01:53.700
up quickly the general structure of things, even if the variable names are funny or versus

01:01:53.700 --> 01:01:57.600
for me, because I've got such a personal style that I've kind of adopted based on the

01:01:57.600 --> 01:02:01.860
various things, the resources I've used, you know, I can read my code very well.

01:02:01.860 --> 01:02:06.060
But then the second I go just slightly differently, I'm just bleary eyed.

01:02:06.060 --> 01:02:07.820
I'm like, what are they doing here?

01:02:07.820 --> 01:02:08.280
And I can't.

01:02:08.280 --> 01:02:10.940
And it's because we were very much just code for ourselves.

01:02:10.940 --> 01:02:15.460
Not everybody, but many scientists code for themselves or maybe one other person.

01:02:15.460 --> 01:02:16.100
Yeah.

01:02:16.280 --> 01:02:16.640
Yeah.

01:02:16.640 --> 01:02:19.120
And so it makes it a little bit more difficult.

01:02:19.120 --> 01:02:23.700
But that idea of code reviews, I agree that if you can't, somebody else doesn't know how

01:02:23.700 --> 01:02:27.400
to code, well, they're not going to be able to help you with the line to line things.

01:02:27.400 --> 01:02:33.940
And while I have a bit of a love hate relationship with Jupyter notebooks, the one thing that I've

01:02:33.940 --> 01:02:39.760
think that they're really useful for is you can sit in a room with your lab group, for example,

01:02:40.300 --> 01:02:47.540
and you can intertwine code with outputs, with figures, and you can tell the story of

01:02:47.540 --> 01:02:48.140
your code.

01:02:48.140 --> 01:02:53.260
And while the, you know, if there's a, you're calling the wrong function or there's a little

01:02:53.260 --> 01:02:57.620
bit of a mistake, those might be more difficult for others who don't code defined, but at least

01:02:57.620 --> 01:03:02.140
the structure of your code, what it's doing, what it's exceptions that it's trying to catch.

01:03:02.140 --> 01:03:03.380
You can do that.

01:03:03.380 --> 01:03:07.260
I mean, I think Python's very readable as a language, but I think that the Jupyter notebook

01:03:07.260 --> 01:03:09.580
makes it even more accessible because you can document it.

01:03:09.640 --> 01:03:12.880
You could put little interpretations here and there, and then the figures are output.

01:03:12.880 --> 01:03:17.880
It's kind of a way to do a bit of a code review for people who would probably run away from

01:03:17.880 --> 01:03:21.400
that and be a bit scared of saying, let's come to this code review at 12 today.

01:03:21.400 --> 01:03:24.800
Nobody's going to show up, but if you can, come on, I'm going to show you how I analyze

01:03:24.800 --> 01:03:26.420
my data and I'll show you some results.

01:03:26.420 --> 01:03:29.400
You can kind of secretly put in a bit of a code review.

01:03:29.400 --> 01:03:31.440
You can hide it in a Jupyter notebook.

01:03:31.440 --> 01:03:31.740
Yeah.

01:03:31.740 --> 01:03:32.320
Disguise it.

01:03:32.320 --> 01:03:32.780
Exactly.

01:03:32.780 --> 01:03:35.080
That's a good idea.

01:03:35.080 --> 01:03:35.880
Very, very cool.

01:03:35.880 --> 01:03:39.080
Well, you know, thinking through this, looking back on what you've been saying,

01:03:39.080 --> 01:03:43.380
it does sound like there's some interesting things to take from the computer science world

01:03:43.380 --> 01:03:45.820
and adopt into the scientific world.

01:03:45.820 --> 01:03:51.320
But I would say one really good thing that it seems to me is if what we're doing is moving

01:03:51.320 --> 01:03:57.540
people from Excel into something like Python, even if there's fewer tests than maybe ideally

01:03:57.540 --> 01:03:58.180
and whatnot.

01:03:58.180 --> 01:04:06.180
Surely the code can be more validated in Python or Jupyter than it could be as it is in Excel,

01:04:06.180 --> 01:04:06.460
right?

01:04:06.460 --> 01:04:09.480
So that's got to be good for reproducibility and correctness.

01:04:09.480 --> 01:04:09.760
Yeah.

01:04:09.760 --> 01:04:10.760
No, I totally agree.

01:04:10.760 --> 01:04:16.320
And simple lessons about, you know, variable naming and just how to structure the code into

01:04:16.320 --> 01:04:16.840
functions.

01:04:16.840 --> 01:04:21.320
The more functions you have, then the main script, if you like, just becomes very readable.

01:04:21.660 --> 01:04:25.720
If you give it in one of your courses, it's all about you highlighted, just make, I was

01:04:25.720 --> 01:04:27.400
surprised at how long your function names were.

01:04:27.400 --> 01:04:30.040
But on the other hand, they were so clear.

01:04:30.040 --> 01:04:34.120
I'm like, I know exactly what this thing does versus I had this weird, I don't know where

01:04:34.120 --> 01:04:37.200
I learned it, but you know, you had to abbreviate everything and keep everything as short as you

01:04:37.200 --> 01:04:37.380
can.

01:04:37.380 --> 01:04:37.840
Right, right, right.

01:04:37.840 --> 01:04:40.760
And then six months from now, I can't remember what it does.

01:04:40.900 --> 01:04:45.220
But when you take the time to just make a bit of a very clear descriptive function name,

01:04:45.220 --> 01:04:47.840
then the main script actually reads really well.

01:04:47.840 --> 01:04:52.900
And so those are little lessons that, you know, it'll help everybody interpret it a bit better.

01:04:52.900 --> 01:04:56.980
And if you make that public, it's so much easier for somebody else to look at that, possibly

01:04:56.980 --> 01:04:57.900
even reuse it.

01:04:57.900 --> 01:05:02.920
Whereas if you open up an Excel spreadsheet, I don't even know, how would you find out all

01:05:02.920 --> 01:05:06.140
the cells that have background computations or macros?

01:05:06.140 --> 01:05:07.360
I don't even know how you get started.

01:05:07.360 --> 01:05:08.240
I have no idea.

01:05:08.240 --> 01:05:12.060
You can't go through every Excel, it's in Excel, there you got it, it's crazy.

01:05:12.060 --> 01:05:13.160
Yeah, yeah.

01:05:13.160 --> 01:05:14.700
Well, I really appreciate that comment.

01:05:14.700 --> 01:05:18.300
I'm like, you're allergic to Excel, I'm allergic to comments.

01:05:18.300 --> 01:05:23.580
So anytime I'm about to write a little name function and then give it a comment to say what

01:05:23.580 --> 01:05:26.660
it should do, I'm like, oh, maybe its name should just be what it does.

01:05:26.660 --> 01:05:28.260
And then we won't need a comment, will we?

01:05:28.260 --> 01:05:29.980
Yeah, no, that was a good tip.

01:05:29.980 --> 01:05:31.260
So I use that all the time there.

01:05:31.260 --> 01:05:31.580
Awesome.

01:05:31.580 --> 01:05:36.480
I really do like this good enough practices in scientific computing that you referenced.

01:05:36.480 --> 01:05:39.740
And I'll be sure to put that in for the show notes.

01:05:39.740 --> 01:05:44.300
But it's got like really easy to adopt and reasonable stuff.

01:05:44.300 --> 01:05:46.400
So it's clear, concise steps.

01:05:46.400 --> 01:05:47.280
That's really great.

01:05:47.280 --> 01:05:50.740
All right, Martin, I think it's a good place to leave it for our main topic.

01:05:50.740 --> 01:05:53.620
But before you get out of here, let me ask you the last two questions.

01:05:53.620 --> 01:05:56.060
If you're going to write some Python code, do some research.

01:05:56.060 --> 01:05:57.580
What editor do you use?

01:05:57.760 --> 01:05:59.780
It's been PyCharm for a few years now.

01:05:59.780 --> 01:06:05.280
And just to anybody who out there is an academic or a researcher, you can get a free pro license

01:06:05.280 --> 01:06:07.220
if you just email them your academic email.

01:06:07.220 --> 01:06:09.040
And you can renew it every year.

01:06:09.040 --> 01:06:10.860
So it just gives you that extra bit of...

01:06:10.860 --> 01:06:13.100
So if it comes from a .edu or something like that?

01:06:13.100 --> 01:06:13.640
Exactly.

01:06:13.640 --> 01:06:16.600
And then you get the functionalities for the scientific mode.

01:06:16.600 --> 01:06:17.820
That's the main one I would use.

01:06:17.820 --> 01:06:18.080
Right.

01:06:18.140 --> 01:06:23.460
And you can actually access all the JetBrains programs, IDEs.

01:06:23.460 --> 01:06:24.760
But personally, I just use PyCharm.

01:06:24.760 --> 01:06:27.540
But yeah, so we can get a pro license as academics.

01:06:27.540 --> 01:06:29.280
Nice editor and nice tip.

01:06:29.280 --> 01:06:29.640
All right.

01:06:29.640 --> 01:06:32.860
A notable PyPI package that you've run across that people should know about?

01:06:32.860 --> 01:06:37.540
I would say one that I emulated because at the time it was a bit above my head.

01:06:37.540 --> 01:06:39.400
But there's something called PsychoPy.

01:06:39.400 --> 01:06:39.820
Yeah.

01:06:39.820 --> 01:06:41.580
Not in psychopath, but psychology.

01:06:41.580 --> 01:06:47.660
And it's this framework to test, to collect data in presenting different types of stimuli

01:06:47.660 --> 01:06:50.960
that you might do in psychology, like visual illusions or sounds.

01:06:50.960 --> 01:06:54.060
And it's a nice way they actually have now implemented it.

01:06:54.060 --> 01:06:56.580
So you can actually design and run your experiments right on the web.

01:06:56.580 --> 01:06:59.140
But you can also implement it on your own machines.

01:06:59.140 --> 01:07:02.660
So PsychoPy is a group in England that's been doing that.

01:07:02.660 --> 01:07:05.960
Just recently, there's a package called DABEST.

01:07:05.960 --> 01:07:07.580
I think it's DABEST.

01:07:07.580 --> 01:07:08.320
I don't know how to say it.

01:07:08.320 --> 01:07:09.720
D-A-B-E-S-T.

01:07:09.720 --> 01:07:10.540
Pi.

01:07:10.540 --> 01:07:11.140
DABEST.

01:07:11.140 --> 01:07:12.360
Yeah.

01:07:12.360 --> 01:07:14.560
It's data analysis through estimation.

01:07:14.560 --> 01:07:17.180
And it's pretty much there's this trend towards moving away

01:07:17.180 --> 01:07:22.280
through from just simple p-values and just saying that something is significant or not

01:07:22.280 --> 01:07:24.940
to providing appropriate estimates of these effect sizes.

01:07:24.940 --> 01:07:28.680
And sometimes your data is parametric, which means normally distributed.

01:07:28.680 --> 01:07:29.560
Other times it's not.

01:07:29.560 --> 01:07:33.740
And so there's this move towards estimating these things in the confidence intervals.

01:07:33.740 --> 01:07:36.440
But there's some of the statistical software doesn't do it for you.

01:07:36.440 --> 01:07:39.280
So these people, I'm pretty sure they're from Singapore.

01:07:39.280 --> 01:07:42.120
And it's cross-platform, but they have a version for Python.

01:07:42.120 --> 01:07:43.980
And it gives you these beautiful plots.

01:07:43.980 --> 01:07:48.180
It computes your estimates for you, but it gives you these wonderful graphs of the effects.

01:07:48.180 --> 01:07:50.280
And it's all done through bootstrapping.

01:07:50.280 --> 01:07:53.100
So it has no assumptions about the distribution of your data.

01:07:53.100 --> 01:07:54.020
So that's a really neat one.

01:07:54.020 --> 01:07:56.560
They came out, I think, just a few years, not even a year ago, I think.

01:07:56.560 --> 01:07:57.500
So that's quite useful.

01:07:57.500 --> 01:07:58.720
Yeah, those are great suggestions.

01:07:58.720 --> 01:07:59.080
Awesome.

01:07:59.080 --> 01:07:59.880
All right.

01:07:59.880 --> 01:08:00.660
Final call to action.

01:08:00.660 --> 01:08:01.760
People are out there.

01:08:01.760 --> 01:08:04.220
Maybe they're scientists or do scientific computing.

01:08:04.220 --> 01:08:07.760
They want to bring some more of these ideas from computer science to their world.

01:08:07.880 --> 01:08:12.040
I would say for yourself, smallest, biteable chunk.

01:08:12.040 --> 01:08:14.380
Implement something for yourself.

01:08:14.380 --> 01:08:18.780
And then also just try to, in the tea room, coffee room, just mention it to people.

01:08:18.780 --> 01:08:23.120
And if you hear about issues, don't sound like the smartass who says, why didn't you code that?

01:08:23.120 --> 01:08:27.080
Just say, hey, if you want to sit down for two seconds, I can just show you something.

01:08:27.080 --> 01:08:31.420
And because I think that there's this dualism of people who code and those who don't.

01:08:31.420 --> 01:08:35.520
And I think that the magic of it for some people is a bit intimidating.

01:08:35.520 --> 01:08:41.780
And so rather than keeping the magic for ourselves and being a bit elusive, I think just demystify

01:08:41.780 --> 01:08:43.740
the whole thing and just say, hey, look, it's really simple.

01:08:43.740 --> 01:08:44.900
Let's just do this.

01:08:44.900 --> 01:08:48.260
And I think the more people can do that and make it part of the culture of how we do things,

01:08:48.260 --> 01:08:49.500
I think that helps.

01:08:49.500 --> 01:08:51.200
And support from above.

01:08:51.200 --> 01:08:56.220
So the senior scientists who may not have come through a time when coding was available all

01:08:56.220 --> 01:09:00.700
that readily or was a specialty, even if they don't want to themselves, support the

01:09:00.700 --> 01:09:04.600
junior people and realize that, you know, for their future careers and just for the betterment

01:09:04.600 --> 01:09:07.440
of reproducible science, try to support it if you can.

01:09:07.440 --> 01:09:10.440
Very good advice and super interesting ideas.

01:09:10.440 --> 01:09:11.440
Thanks for sharing them with us.

01:09:11.440 --> 01:09:11.700
All right.

01:09:11.700 --> 01:09:12.400
No, thank you, Michael.

01:09:12.400 --> 01:09:12.780
You bet.

01:09:12.780 --> 01:09:13.000
Bye.

01:09:13.000 --> 01:09:13.260
See you.

01:09:21.260 --> 01:09:23.860
This has been another episode of Talk Python To Me.

01:09:23.860 --> 01:09:29.000
Our guest on this episode was Martin Haru, and it's been brought to you by Clubhouse and Linode.

01:09:29.000 --> 01:09:34.820
Clubhouse is a fast and enjoyable project management platform that breaks down silos and brings teams

01:09:34.820 --> 01:09:36.620
together to ship value, not features.

01:09:36.620 --> 01:09:38.360
Fall in love with project planning.

01:09:38.360 --> 01:09:41.440
Visit talkpython.fm/clubhouse.

01:09:42.080 --> 01:09:45.780
Start your next Python project on Linode's state-of-the-art cloud service.

01:09:45.780 --> 01:09:50.280
Just visit talkpython.fm/Linode, L-I-N-O-D-E.

01:09:50.280 --> 01:09:53.460
You'll automatically get a $20 credit when you create a new account.

01:09:53.460 --> 01:09:55.600
Want to level up your Python?

01:09:55.600 --> 01:10:00.460
If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

01:10:00.460 --> 01:10:06.020
Or if you're looking for something more advanced, check out our new async course that digs into all the

01:10:06.020 --> 01:10:08.640
different types of async programming you can do in Python.

01:10:08.640 --> 01:10:12.580
And of course, if you're interested in more than one of these, be sure to check out our

01:10:12.580 --> 01:10:13.280
Everything Bundle.

01:10:13.280 --> 01:10:15.180
It's like a subscription that never expires.

01:10:15.180 --> 01:10:17.320
Be sure to subscribe to the show.

01:10:17.320 --> 01:10:19.720
Open your favorite podcatcher and search for Python.

01:10:19.720 --> 01:10:20.960
We should be right at the top.

01:10:20.960 --> 01:10:25.780
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

01:10:25.780 --> 01:10:29.940
and the direct RSS feed at /rss on talkpython.fm.

01:10:29.940 --> 01:10:32.020
This is your host, Michael Kennedy.

01:10:32.020 --> 01:10:33.520
Thanks so much for listening.

01:10:33.520 --> 01:10:34.560
I really appreciate it.

01:10:34.560 --> 01:10:36.340
Now get out there and write some Python code.

01:10:36.340 --> 01:11:06.320
I'll see you next time.

