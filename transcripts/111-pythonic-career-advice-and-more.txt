00:00:00 It's time for some Pythonic job and career advice with Matt Harrison.

00:00:03 Listen in as we discuss how most developer jobs never make it to full job listings that

00:00:08 you actually see out there and available, and how you can get in on them.

00:00:12 We also discuss his books and avalanche research with the Pandas Library.

00:00:16 This is Talk Python To Me, episode 111, recorded May 4th, 2017.

00:00:22 Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the

00:00:51 ecosystem, and the personalities.

00:00:53 This is your host, Michael Kennedy.

00:00:55 Follow me on Twitter, where I'm @mkennedy.

00:00:57 Keep up with the show and listen to past episodes at talkpython.fm, and follow the show on Twitter

00:01:02 via at Talk Python.

00:01:03 Talk Python To Me is partially supported by our training courses.

00:01:07 Have you tried to learn Python but got stuck or lost focus?

00:01:10 We know how it feels to try and jam fact after fact, loop construct after turn hair expression

00:01:16 into your head.

00:01:17 At best, it's boring.

00:01:19 At worst, it can turn you off programming altogether.

00:01:21 That's why we built our course, Python Jumpstart by Building 10 Apps.

00:01:25 This course guides you through carefully planned applications.

00:01:29 It starts simple, but progresses to quite real apps.

00:01:32 Best of all, you won't be learning dry facts.

00:01:35 You'll be learning like the pros do, by building real applications and learning in context.

00:01:40 If you want to start building with Python, just visit talkpython.fm/course to get started.

00:01:46 Matt, welcome to Talk Python.

00:01:48 Oh, hi.

00:01:49 Thanks, Michael.

00:01:50 Thanks for letting me come on the show.

00:01:51 Yeah, we've had some conversations on Twitter and sort of brushed shoulders on the internet,

00:01:57 if you will, and haven't really had a great chance to sit down and talk.

00:02:01 So let's do it over Skype tonight, huh?

00:02:03 Sounds good.

00:02:04 Happy May 4th.

00:02:06 May the 4th of the force be with you.

00:02:09 Yes, may the 4th be with you.

00:02:11 Awesome.

00:02:13 All right, so we're going to talk about kind of a sampling of things.

00:02:18 Data science, books, careers.

00:02:22 These are questions that we both get a lot, and we've had some, I'm not sure I should speak

00:02:27 for you, but definitely I can say that I've had some non-standard career paths that I think

00:02:31 is we can definitely exchange some ideas there, maybe help some people, you know, jumpstart their

00:02:37 career.

00:02:37 And finally, you've got a cool project going on that we'll talk about.

00:02:40 But before we get to all of those, let's start at the beginning.

00:02:42 What's your story?

00:02:43 How did you get into programming in Python?

00:02:44 Yeah.

00:02:45 So I'm, I guess, a child of the 80s, and back in 1983, my dad came home from work one day

00:02:53 with a box that said Commodore 64 on it.

00:02:55 And my brother and I proceeded to teach ourselves basic.

00:03:00 I think mostly he taught it, and I sort of sat and watched him.

00:03:05 So we were doing pair programming back in 1983.

00:03:07 We had a byte magazine.

00:03:10 And we'd just sit down and copy what was in the magazine and learn code from that.

00:03:16 That was my first foray into that.

00:03:19 And I can still remember typing peek and poke and changing the background color of that.

00:03:24 Do you think that that's kind of a lost skill or a lost way of learning of here's a bunch of text.

00:03:32 I have to literally type this in to make it work, right?

00:03:35 Like, will that ever come again?

00:03:37 Probably not, right?

00:03:38 Not really.

00:03:38 I doubt it.

00:03:39 I mean, I think the Raspberry Pi is probably the closest that we have right now.

00:03:43 But if you think about it, you have, you know, an iPhone or a tablet device that comes with a GUI environment and everything is all these apps on it are.

00:03:56 A lot of them are hundreds of man years to make.

00:04:00 And we were plopped into a basic environment and you sort of had to learn to do everything from scratch.

00:04:06 And it's interesting because I teach kids programming and I think about my experience and it's really different from they want to jump in and start doing 3D programming and games and that.

00:04:17 And people who are new to computers, they don't appreciate a lot of what's going on underneath, I guess.

00:04:23 That's an interesting point that you really have different expectations of what you get out, right?

00:04:29 Like, you're saying like, oh my gosh, I made this green blue.

00:04:31 It's amazing, right?

00:04:32 Like, people today wouldn't be amazed with this.

00:04:35 That's silly.

00:04:36 But yeah.

00:04:36 How do I make the dragon fly?

00:04:38 Yeah, exactly.

00:04:40 My brother and I messed around on the Commodore for a while and it wasn't until high school that I did much more programming.

00:04:48 I took the AP computer science class in high school and did Pascal then.

00:04:52 And I also did a summer program where I did a prologue.

00:04:56 I felt that programming was important and it changed the way I thought.

00:05:02 I was in the university.

00:05:04 It wasn't until the university that I sort of went down the programming path or computer science path and sort of locked in on that.

00:05:11 And then, you know, the rest is somewhat history.

00:05:15 I, in school, did Java, Lisp, C, and taught myself Perl at the end of school because I was told that if I knew Perl, then I would be employable.

00:05:27 Which was sort of funny being in the middle of Silicon Valley and not being employable coming out of school, which just seemed sort of silly.

00:05:35 So I taught myself Perl and proceeded to get a job doing Perl.

00:05:41 And eventually I came to Python because the company I was working for, it was a search company.

00:05:49 And I was tasked with working with all these smart PhDs.

00:05:53 And one of them was doing Tickle.

00:05:56 And I needed to do, make a, what we called a term suggester to pick out the relevant terms of the corpus.

00:06:04 And he wanted to do it in Tickle.

00:06:07 And I was a Perl person.

00:06:08 And neither of us wanted to cross that bridge to the other side.

00:06:12 And so he said, well, I hear there's this cool language called Python.

00:06:16 I think we should try that.

00:06:18 Even though, like, white space is important in it, maybe we can get over that and use Python to solve this problem.

00:06:25 And we sort of both agreed on that, that white space wouldn't be a huge deal.

00:06:30 And three days later, we had a working prototype.

00:06:33 And I don't think either of us really looked back.

00:06:35 We sort of...

00:06:36 Wow, that's awesome.

00:06:37 Yeah, yeah.

00:06:38 We sort of promptly forgot our Perl and Tickle and hid that we were using Python from the rest of the company, but moved forward like that.

00:06:46 Did Python eventually become something that was widely used within the company?

00:06:50 Or was it like you guys kind of had this side project and, yeah, we don't talk about how it's implemented.

00:06:54 It was not looked upon.

00:06:56 People were sort of disappointed that we were using...

00:06:59 This is back in 2000.

00:07:00 So Python was not widely used at the company.

00:07:03 Everything was Java and .NET.

00:07:05 That was the cool, cool thing to use at that time.

00:07:08 Yeah, that was definitely the hotness.

00:07:09 And, of course, they were doing, like, soap, web service exchange, all sorts of badness.

00:07:14 Yeah.

00:07:15 Yeah, we implemented our own version of soap that we called Dove.

00:07:19 And, yeah, that was the glory days.

00:07:24 They gave you a nice, creamy hands afterwards that wouldn't dry them out or anything, huh?

00:07:28 Yeah, you were all enterprise-y.

00:07:31 Nice.

00:07:32 So I'm glad the XML-heavy days are behind us, especially the namespaces.

00:07:37 So the...

00:07:38 Okay.

00:07:40 So the search engine stuff sounds really cool.

00:07:44 Are you still working on that?

00:07:45 Are you doing something different these days?

00:07:46 So these days, I spend most of my time doing...

00:07:50 I'm working at a company called Far Better, and we're creating a business travel app.

00:07:55 So the idea is to use computers to do something that computers are good at, like searching a lot of different options.

00:08:03 And so the elevator pitch for that is to...

00:08:06 You enter where you want to go and when you want to be there and hit go.

00:08:10 And in a minute, we have a complete itinerary plan that crawls 100 million different options and picks the best flight for you based on your preferences, be it brand or cost or schedule.

00:08:22 That's really awesome.

00:08:22 We're definitely going to have to dig into that.

00:08:24 That sounds really fun.

00:08:25 So you're still doing plenty of Python there, I presume?

00:08:27 Yeah, doing Python there.

00:08:29 And occasionally, you know, every couple of weeks, I'll do a training as well.

00:08:34 So my employer is nice enough to give me a little time to actually do training as well.

00:08:40 So I'm still involved doing training as well.

00:08:42 Okay.

00:08:42 Speaking of training, you're giving a couple of tutorials coming up at PyCon.

00:08:46 And like you said, it's May 4th.

00:08:48 And what is that?

00:08:50 That's like 15 days until PyCon.

00:08:53 Maybe even sooner for your tutorials, right?

00:08:55 Yeah.

00:08:55 The days before then.

00:08:56 Two weeks away.

00:08:58 Yeah, two weeks.

00:08:58 Yeah.

00:08:59 What tutorials are you doing?

00:09:00 So I'm giving beginning hands-on Python and intermediate hands-on Python.

00:09:05 So I've been giving some version of these tutorials for probably about 10 years now.

00:09:12 So it's definitely a great way to get involved and sort of share, I guess, my love of Python

00:09:19 and help others learn Python.

00:09:21 I've tweaked them a little bit this year.

00:09:24 Traditionally, they've been more of a, here's some labs and go and do these labs.

00:09:28 And this year I've tweaked them and we're going to build a Markov chain from scratch and sort

00:09:34 of introduce all the basic constructs in the beginning class.

00:09:37 And then in the intermediate class, we're going to go over sort of the meaty parts of Python.

00:09:42 So talk about generators and decorators and all that fun stuff and introduce those in the

00:09:49 context of making a Markov chain generator.

00:09:52 So it should be fun.

00:09:53 Interesting.

00:09:53 Yeah, that sounds awesome.

00:09:54 Do you find that people, like there, obviously there's plenty of people who are super experts

00:09:59 in Python, but do you find there's a large number of people that maybe like can read the

00:10:03 basic syntax and they do the basic things they know how to do from C, but they don't really

00:10:07 take advantage of the language?

00:10:08 I guess that was my experience.

00:10:10 And I, you know, doing training where Python is right now.

00:10:14 I mean, a lot of my training is enterprise big companies that are migrating people from,

00:10:20 ironically, Java and C# to Python.

00:10:22 And so, you know, my experience was very similar to that, where I said we learned Python in three

00:10:29 days and that's in three days we had a working prototype in Python.

00:10:32 And, you know, once you get past sort of the replace curly braces with colons and indent,

00:10:38 you can sort of read Python and you can be pretty proficient with it.

00:10:43 And so I've seen that people will sort of say, well, I can understand this.

00:10:49 I can read it.

00:10:50 Let's sort of do that.

00:10:52 And then you sort of throw in like decorators and yields and people's eyes sort of glaze

00:10:58 over and they just sort of ignore those sorts of things.

00:11:00 Right.

00:11:00 And I think I was sort of in that camp for a while as well and didn't really appreciate

00:11:06 those or didn't really see the need for them.

00:11:08 And part of my tutorials sort of to get across the point of, yeah, you can get around with

00:11:15 basic Python and you can be proficient in it and program like it, see your Java and whatnot.

00:11:20 But there's a lot of syntax sugar that's pretty nice in Python that you can do cool stuff with.

00:11:28 And so you can take advantage of that and wrap your eyes or wrap your brain around closures

00:11:34 and decorators and generators.

00:11:37 You can do a lot of cool stuff with that.

00:11:39 So and you can apply it to a lot of problems that are pretty common in programming.

00:11:43 Yeah, for sure.

00:11:44 And get more out of the language.

00:11:45 Yeah.

00:11:46 So it sounds like your intermediate tutorial would kind of cover that stuff.

00:11:49 That's cool.

00:11:50 And then you're also running the Young Coders Workshop.

00:11:51 What's that?

00:11:52 Yeah.

00:11:52 Kind of know about it, but tell everyone about it.

00:11:54 Yeah.

00:11:54 So I believe it's for 12 to 16 year olds.

00:11:59 You can bring your kids and or your kids can come to it.

00:12:03 You don't have to bring them.

00:12:04 And we're just going to give them a Raspberry Pi and they can get an introduction to Python

00:12:09 for the day.

00:12:10 So I'm doing the beginning workshop that will be on Saturday at PyCon.

00:12:15 So that should be fun.

00:12:17 I've done elementary kids in the past and was hoping to get my kids up there.

00:12:23 But it turns out they actually have scheduling conflicts.

00:12:26 So they won't be up there, but I'll still be doing that.

00:12:30 So it should be good.

00:12:31 I like learning and helping other people learn.

00:12:33 So that should be fun.

00:12:35 Yeah.

00:12:35 That's really cool.

00:12:36 And are these pretty much sold out?

00:12:37 Yeah.

00:12:38 I believe I got an email from the tutorial organizer and they said that every tutorial session was

00:12:45 sold out, which, yeah, it's awesome.

00:12:48 I mean, I think my first PyCon was 2005 and there was 300 something people there.

00:12:54 And now, you know, there's a conference has just grown to a really big conference.

00:13:00 And it's crazy that it's awesome.

00:13:03 But it's really good to see the growth and see, you know, like I said, enterprises coming

00:13:09 to Python and wholeheartedly accepting it.

00:13:11 So great timing.

00:13:12 Yeah.

00:13:12 It's no longer tucked under the corner in that broom closet on that one project.

00:13:16 Right.

00:13:16 Now it's the thing they're seeking out.

00:13:18 Yeah.

00:13:18 Yeah.

00:13:19 So that's awesome.

00:13:20 Yeah.

00:13:20 Yeah.

00:13:21 So I, I, I've tried to hit this message like beginning of this year, you know, PyCon's

00:13:25 going to sell out.

00:13:26 Everybody get your tickets.

00:13:26 And I've, you know, if you don't get them, you're going to be sad.

00:13:29 Don't wait.

00:13:30 And I've heard from a few people that said, I'm going to go to PyCon.

00:13:34 I'm getting my tickets.

00:13:35 I'm just thinking, oh no.

00:13:36 A little bit later.

00:13:37 Nope.

00:13:37 No more tickets.

00:13:38 Yeah.

00:13:39 I've had people asking me like, how is there like a back door?

00:13:42 Do you know someone I can, yeah, I can get tickets from?

00:13:45 Well, you should have got them when everyone was saying they're going to

00:13:49 sell out, but yeah, well it's, you know, there's an, I don't want to go too far

00:13:53 down this because we want to stay in the other topics, but they could choose larger places.

00:13:57 They could do Moscone center in San Francisco, but they're really trying to strike the balance

00:14:01 between not having too huge of a conference, holding it in locations like Portland or Ohio

00:14:07 or wherever, where it's not super expensive to come to.

00:14:11 And so there's this, this trade-off between sort of growing to fit the size of as many

00:14:16 people as want to come, but then also like maybe pricing.

00:14:19 people out or making it difficult.

00:14:20 So it's, it's tough.

00:14:21 Yeah.

00:14:21 And kudos to them.

00:14:22 I think the organizers do a great job.

00:14:24 So it's not something that I would want to do.

00:14:27 So yes, absolutely.

00:14:30 Absolutely.

00:14:30 I've organized like small training events.

00:14:32 This seems harder.

00:14:34 Yeah.

00:14:34 Yeah.

00:14:35 So speaking of things that are harder, writing books, you, you've been doing, you know,

00:14:41 I knew about your pandas book and then I started to look on Amazon and you have a lot

00:14:45 of books.

00:14:46 Yeah.

00:14:46 I guess it's sort of misleading how many books I have there.

00:14:50 I sort of have three books and then one of the books has been sold as sort of sub booklets.

00:14:57 And, and so, well, I guess, yeah.

00:15:00 So yeah, some of them aren't huge.

00:15:01 They're like 60 or 80 pages, right?

00:15:03 Yeah.

00:15:03 Yeah.

00:15:04 Yeah.

00:15:04 So I guess I now have four books.

00:15:06 I just recently released this tiny Python 3.6 notebook, which people lament the name because

00:15:14 it's not a Jupyter notebook.

00:15:16 It's just a little teeny book.

00:15:18 It's like literally a notebook.

00:15:20 It's like the thing that was where you put your notes before all this computer stuff.

00:15:23 Yeah.

00:15:24 Yeah.

00:15:24 I Python, right?

00:15:26 namespaces, namespace clash there.

00:15:28 Exactly.

00:15:29 It sounds great though.

00:15:30 So what's in there?

00:15:31 Yeah.

00:15:31 So that's just a little book that I wanted to give to attendees of my training classes that

00:15:38 just had, here's the basic syntax of Python.

00:15:41 And if you forget something, you can look up decorators or generators or the basic syntax

00:15:47 and have it all in a physical place if you're a physical person.

00:15:51 And so that's my latest book.

00:15:55 And that came out, I think a month or two ago, I actually experimented and put the source up

00:16:02 on GitHub.

00:16:03 So that's freely available to anyone who wants to look at it or peruse it.

00:16:09 And, you know, if you want a physical version, you can get those on Amazon or whatnot.

00:16:16 But yeah, it's there.

00:16:18 And people have offered to translate it into other languages and whatnot.

00:16:21 And, you know, as they've sort of started that process, but I think they got bored.

00:16:28 So we'll see what happens.

00:16:29 But it's fun to see what happens when you throw something out over the fence like that.

00:16:35 That sounds really cool.

00:16:36 And so you basically self-published this?

00:16:38 Yeah.

00:16:39 Yeah, I don't want to get into like a big self-publishing versus publishing.

00:16:44 But for me, I think self-publishing sort of made sense.

00:16:48 And so I went down that route.

00:16:50 And with my prior books, I had made a tool chain that allows me using restructured text

00:16:57 to easily publish e-books and LaTeX from the same source.

00:17:02 So it's pretty easy to do that for me.

00:17:06 So that's what I've done there.

00:17:09 And I think the feedback's been pretty good on it so far.

00:17:13 I think people have liked it.

00:17:14 And it's sold a little bit.

00:17:17 People have liked it.

00:17:18 And so I'm happy for that.

00:17:21 That's cool.

00:17:21 So you say 3.6 notebook, not Python 3 notebook.

00:17:25 Yeah.

00:17:26 Is there going to be like a 3.7 next December or whenever that ships?

00:17:30 I guess there could be if I get patches for it.

00:17:33 Why is it 3.6 versus 3?

00:17:35 The new 3.6 features came out.

00:17:38 f-strings.

00:17:39 I wanted to put those in there.

00:17:40 The async and await stuff.

00:17:42 I put that in there.

00:17:43 I guess I can go on a little rant.

00:17:45 I think 3.6, I don't know how much I should say here.

00:17:50 3.6 is a good version of Python 3.

00:17:53 Let's leave it at that.

00:17:54 I think if you're going to use Python 3, you should use 3.6.

00:17:57 Yeah, for sure.

00:17:58 There's a ton of internal improvements like speed and memory usage on dictionaries and objects and all sorts of stuff.

00:18:04 So yeah, a lot of non-obvious things as well.

00:18:07 So then you have a couple of books that seem like they're a little bit like your tutorials,

00:18:12 like a foundational one and an intermediate one with the things that we talked about before, right?

00:18:16 Yeah.

00:18:17 Those actually, the impetus for those books actually came from my tutorials.

00:18:21 So I had given my tutorials at PyCon and I got accepted to give one at OSCON, the O'Reilly Open Source Conference.

00:18:32 And I thought, well, instead of just rewriting my slides, I'll write a book instead of rewriting my slides,

00:18:38 which clearly I underestimated the amount of time and effort it goes to create a book.

00:18:45 The conference was like three months away and I thought, oh, I can whip this out.

00:18:48 And it was probably almost a year or so, maybe nine months.

00:18:52 What is that, a week of work?

00:18:54 Yeah, yeah, yeah.

00:18:55 Oh my God, this.

00:18:55 And so...

00:18:57 Do that this evening.

00:18:57 There's a ton of work that goes into a book.

00:18:59 I feel like I'm a creator.

00:19:02 I like to create things.

00:19:03 And this is the book that I want, that I would have wanted.

00:19:09 And so it was sort of inside of me and I wanted to put it out.

00:19:13 And so I guess that was my therapy or something to write a book.

00:19:17 That's really great.

00:19:18 Yeah.

00:19:19 Or your affliction.

00:19:20 Yeah.

00:19:21 The other one I want to talk about is you have a book called Learning the Pandas Library,

00:19:25 Python Tools for Data Munging Analysis and Visualization.

00:19:29 So I know Pandas is a really great library.

00:19:33 I've seen some of the data loading, transformation, cleaning type of tricks you can do to it.

00:19:39 And it seems really cool.

00:19:40 But we've not really talked about Pandas very much on the show.

00:19:45 We've mentioned it, but not really.

00:19:46 What is it?

00:19:48 Why do you use it?

00:19:48 Maybe give everyone listening who doesn't know the overview of Pandas.

00:19:51 Sure, sure.

00:19:52 So Pandas, what's a good way to describe Pandas?

00:19:55 I think in my book, I describe Pandas as a way to create in-memory database and do database

00:20:02 type operations on tabular data in Python.

00:20:06 And some people might not like that definition.

00:20:09 But basically, if you have tabular data and you need to filter it or tweak it or do operations

00:20:16 on it, Pandas is a great tool to do that.

00:20:19 And you can even combine the different data frames, right?

00:20:23 In sort of a join-like way?

00:20:24 Yeah, basically anything you can do with a database, you can do in Pandas.

00:20:28 So there are basically two main data structures that most people worry about.

00:20:34 One is a series.

00:20:35 And you can think of a series as a column of data and a data frame as a bunch of columns,

00:20:43 which turns out to be a row.

00:20:45 And I say columns versus rows because typically Pandas is used more for doing analytics than

00:20:52 more of an OLTP.

00:20:53 OLTP type database.

00:20:54 And so most analytical databases tend to be columnar versus row oriented.

00:21:00 And that gives you some advantages in that most of your columns are homogenous.

00:21:06 And so Pandas can do some fancy things there where rather than implementing this in pure Python,

00:21:12 it can take advantage of things like NumPy and Cython under the covers.

00:21:18 And so you can get some pretty big speed ups when you're doing numerical processing on these columns.

00:21:23 That's 10 or another magnitude faster than you would get if it was pure Python.

00:21:30 And you're also saving on memory spaces as well because you don't have a Python object under the covers there.

00:21:36 Right.

00:21:37 A lot of it is like C structures, much like NumPy.

00:21:40 Yeah.

00:21:41 Yeah.

00:21:41 So you can, when you load data, you can say, I want to treat this as a float.

00:21:48 I want to treat this as an integer.

00:21:50 Or, you know, if you have string type data, you can say, I want to treat this as a categorical value.

00:21:56 And so it can do some optimizations under the covers to make those things performant and memory efficient as well.

00:22:04 That's a pretty brief introduction to Pandas.

00:22:07 But yeah, and then once you go from that, you can, there's a semi-famous tweet from, I think it's Big Data Borat or some Borat avatar where he says 80% of data science is cleaning your data.

00:22:23 And the other 20% is complaining about cleaning your data.

00:22:26 And so something like that.

00:22:30 I just butchered it.

00:22:31 But the gist is that Pandas is that tool that allows Big Data Borat to do the 100% there of taking his data and clean it and munch it and whatnot.

00:22:42 Big Data Borat.

00:22:44 That's awesome.

00:22:44 Yeah, I suppose there's probably a bunch of good things on Twitter that I'm missing out there.

00:22:49 So you go through in your book and you talk about these data structures and, like you said, series and data frames and some of the database operations.

00:22:56 And you do some kind of analysis, right?

00:22:59 Like on avalanches, you said?

00:23:01 Yeah.

00:23:01 I live in Utah and snow is in Utah.

00:23:05 And so I like to take advantage of the snow.

00:23:06 And so I ski.

00:23:08 And so sometimes I do backcountry skiing, which involves hiking up a mountain and then skiing down.

00:23:13 And that invariably when you're out in nature and you don't have someone taking care of the avalanches for you, you have to be careful about where you ski.

00:23:26 Because a lot of times those good places to ski are also good places for avalanches to occur.

00:23:33 And so, you know, there's websites and whatnot that track this sort of thing.

00:23:39 And there's a Utah avalanche website.

00:23:42 And so the sort of capstone chapter, I guess, in my book, I go through an example analysis where I took, scraped the data off of this website and did some analysis and figured out, you know, how many slides there are per year.

00:23:57 How many people typically die, sadly, and avalanches per year and where avalanches occur and elevations and aspects and that sort of thing.

00:24:06 So just showing an example of taking something that isn't easily accessible.

00:24:13 There's no CSV floating around with this avalanche data and using Python sort of end to end to grab the data, do some munging on it.

00:24:22 And I ended up doing a little infographic that the Utah avalanche center used and basically all done in Python.

00:24:32 So pretty good testament to the power of Python.

00:24:35 That sounds really pretty interesting.

00:24:37 I like the fact that it's like it wasn't accessible.

00:24:39 You had to go like scrape it off the website.

00:24:41 Like, no, this we're getting this and we're going to use this.

00:24:45 It's going to be great.

00:24:46 I was actually trapped by an avalanche up at Snowbird.

00:24:50 One time I was supposed to be doing a training class in Salt Lake City and instead was stuck up there.

00:24:55 And if you guys find me at PyCon, we can grab a beer and talk about being stuck in avalanches.

00:24:59 So I definitely can see why you would study those there.

00:25:02 So one of the things that that you decided to do after writing this book was like, hey, maybe I'll make a video course because that's also quick and easy.

00:25:10 Right.

00:25:11 Was that a week?

00:25:11 Yeah.

00:25:12 Yeah.

00:25:12 And that's another couple of days.

00:25:14 And you're good with that.

00:25:15 Yeah.

00:25:15 So I made a video course, basically, that O'Reilly's published.

00:25:21 So Introduction to Pandas for Developers.

00:25:24 And that basically takes the contents of the book and puts them into Jupyter Notebooks and goes over all your basics, taking you from zero to hero in pandas.

00:25:36 And it also goes over that avalanche example as well.

00:25:41 And if people prefer video form.

00:25:44 So that was, you know, another thing where I sort of said, hey, I'm a creator and I'll create this.

00:25:51 And it was a good experience for me to get it out there.

00:25:54 Therapeutic, I guess.

00:25:55 Yeah, that's good.

00:25:56 So I'll be sure to link to all those things if people want to check them out, especially learn more about pandas, which sounds really fun.

00:26:03 Check out the avalanche analysis.

00:26:05 Cool.

00:26:05 Yeah.

00:26:05 Thanks.

00:26:06 Yeah.

00:26:06 I'm interested in hearing about your avalanche.

00:26:09 So we'll have to catch up at PyCon.

00:26:11 Absolutely.

00:26:11 That sounds like a good story.

00:26:13 Yeah.

00:26:14 It was quite the stressful day, but it turned out to be pretty fun.

00:26:16 Hey, everyone.

00:26:18 Michael here.

00:26:18 Let me take just a moment and thank one of our sponsors who makes this show possible.

00:26:21 This portion of Talk Python and May has been brought to you by Rollbar.

00:26:25 One of the frustrating things about being a developer is dealing with errors.

00:26:28 Relying on users to report errors, digging through log files, trying to debug them, or a million alerts just flooding your inbox and ruining your day.

00:26:36 With Rollbar's full stack error monitoring, you get the context, insight, and control you need to find and fix bugs faster.

00:26:43 Adding the Rollbar Python SDK is just as easy as pip install Rollbar.

00:26:47 You can start tracking production errors and deployments in eight minutes or less.

00:26:51 Rollbar works with all the major languages and frameworks, including the Python ones like Django, Flask, Pyramid, as well as Ruby, .NET, Node, iOS, and Android.

00:27:01 You can integrate Rollbar into your existing workflow.

00:27:03 Send error alerts to Slack or HipChat or automatically create new JIRA issues, pivotal tracker issues, and a lot more.

00:27:09 They have a special offer for Talk Python To Me listeners.

00:27:12 Visit talkpython.fm/rollbar.

00:27:14 Sign up and get the bootstrap plan free for 90 days.

00:27:17 That's 100,000 errors tracked for free.

00:27:20 But, you know, just between you and me, I hope you don't encounter that many errors.

00:27:24 Give Rollbar a try today.

00:27:26 Just go to talkpython.fm/rollbar.

00:27:29 And if you happen to be going to PyCon this year, be sure to stop by Rollbar's booth.

00:27:33 Get a live demo and pick up some of their swag.

00:27:36 You know, doing all this stuff, all this writing these books, video courses, training, like this is not your standard career, right?

00:27:46 And one of the things that we both kind of talked about when we planned out the show was,

00:27:50 let's talk a little bit about helping people, you know, supercharge their career as a Python developer, right?

00:27:56 Yeah, this is something that I've experienced as a person who's been doing Python for more than, you know, since the turn of the century.

00:28:06 And, you know, someone who's now training people to use Python.

00:28:10 And also, I run the Utah Python user group for about five years.

00:28:16 And so I've seen sort of the change in demand and the basic, I mean, it's...

00:28:22 Yeah, you talked about PyCon.

00:28:23 It's like 10x from what it was, you know, 10 years ago.

00:28:27 Yeah.

00:28:28 And there's a huge demand for people who can program.

00:28:31 And there's a huge demand for Python right now.

00:28:34 I mean, I just, the other day went over, like, Hacker News has the who's hiring post every month.

00:28:40 And Python's right up there, number one or number two, behind JavaScript in the most desired languages.

00:28:48 So it's a great time to be a Python developer.

00:28:51 Yeah, I did a thing that covered basically the active GitHub repositories.

00:28:56 And Python is number two for the language of most active GitHub repositories, non-trivial ones.

00:29:03 JavaScript being ahead of it.

00:29:05 But I think JavaScript's over-counted, right?

00:29:07 Like, if you do Django, you're also a JavaScript developer.

00:29:09 If you do Flask or Pyramid, you're a JavaScript developer.

00:29:12 If you do Ruby on Rails, you're a JavaScript developer, right?

00:29:15 Like, you can't avoid JavaScript.

00:29:16 Yeah.

00:29:17 For better or for worse, JavaScript is the lingua franca of the web, right?

00:29:21 I mean, that's, everyone's browser speaks JavaScript.

00:29:24 Yeah.

00:29:24 And the thing that I think is interesting about that is, like, how much does that skew these statistics?

00:29:29 Like, JavaScript being on the top all the time, is that because it's pervasive everywhere, so you just have to have it?

00:29:35 Or is it really JavaScript is so much in demand as its own individual thing?

00:29:39 I don't know the answer to that.

00:29:41 Yeah.

00:29:41 I mean, anecdotally, I think I searched for Node as I was looking in those hacker news posts.

00:29:47 And I don't think Node appeared as much as Python.

00:29:49 So maybe there's some solace in that.

00:29:52 Yeah, sure.

00:29:53 Server-side JavaScript versus client-side, something like that.

00:29:55 So you said you think that the way people pursue jobs these days is somewhat broken.

00:30:02 What do you mean by that?

00:30:03 As, you know, the leader or the, not the leader, I guess the person who ran the user group and someone whose people come up to me and say, hey, I want to get a job.

00:30:14 How do I get a job?

00:30:15 It seems that, you know, emailing some jobs at randomcompany.com and dropping your resume there is probably the worst way to get a job.

00:30:26 I sort of speak from experience of, like, there's got to be a better way to do it.

00:30:31 And it seems like a lot of times people who are interested in development and whatnot are also the more introverted type or don't want to sort of put themselves out there.

00:30:43 Yeah.

00:30:44 And whatever that means, you know, it's just hard for people to feel vulnerable, I guess.

00:30:50 And so you can randomly send off.

00:30:53 Yeah.

00:30:53 Like, go give a talk at your meetups.

00:30:57 Write a, create a blog and consistently write for it.

00:31:00 Create open source projects.

00:31:02 Speak at conferences.

00:31:04 All of these things, you know, carry some inhibitions with them, right?

00:31:09 Yeah.

00:31:09 And it can be hard, right?

00:31:11 I mean, the internet can be a ruthless place where, you know, if you're out there, you're going to get trolled or whatnot.

00:31:18 And so that can be pretty daunting for a lot of people.

00:31:22 My advice to people has consistently been, though, the best way to get a job is to network.

00:31:29 And you can, you know, try and not do that.

00:31:34 But your job search is going to be less effective than it could be otherwise if you're not out there networking.

00:31:40 Well, I want to hear what you, what you mean by networking, but I'm going to add that I feel like the experience with the companies that I've worked for, when we go to hire somebody, has largely been, let's try to find somebody.

00:31:55 And if we have to, we'll post a public job listing and people can submit their resumes.

00:32:00 But that's like a last resort.

00:32:01 Yeah.

00:32:02 And so.

00:32:03 Yeah.

00:32:04 There's like, like sort of these dark matter jobs, which make up the majority of, of like getting, moving around and getting going in programming jobs where it's like, I know Sarah, she's an awesome programmer.

00:32:16 Like she can really do this.

00:32:17 Let's just talk to her.

00:32:18 Like, oh, great.

00:32:19 We don't have to interview anybody.

00:32:20 Sarah's in, right?

00:32:22 Like that sort of thing happens a lot.

00:32:24 And so you've got to get out there and be present with these people, right?

00:32:29 So what do you mean by networking though?

00:32:31 Yeah.

00:32:31 I mean, I agree with you a hundred percent in that a lot of these finding a job or hiring people is expensive for a company as well.

00:32:40 And unless you're the Google type who are going to have some process where they churn and they're okay with rejecting good people because they just don't want to hire bad people.

00:32:49 Not every, you know, most companies aren't, aren't that way.

00:32:53 And so.

00:32:54 You just don't have the scale, right?

00:32:55 To go through, we can't hire a hundred new people and keep 50 of them.

00:32:58 Like that just doesn't work.

00:33:00 Yeah.

00:33:00 And, and a lot of companies, like you said, have positions and don't want, they'd rather just go through people they know and, and hire it that way.

00:33:08 Cause it's a lot cheaper and a lot easier.

00:33:10 And it's, they know what they're getting.

00:33:12 And so I think networking there, you know, you can call it various things, but it doesn't have to be necessarily work related.

00:33:20 I guess I, you know, there's meetups and whatnot.

00:33:23 And it's interesting.

00:33:24 You go to like a meetup and like the Utah meetup every time they start off with, okay, who's hiring?

00:33:30 And there'll be, you know, a handful of people who stand up and say, this is what we're hiring for.

00:33:33 And you can go up and talk to them and sort of figure out what they're doing.

00:33:37 And also there's a handful, they say, who needs a job?

00:33:40 And there are a handful of people who stand up and say, this is what I'm looking for.

00:33:43 And there's connections that are made there, which is a lot better than randomly sending an email.

00:33:49 But I would sort of even go further.

00:33:52 Like networking doesn't even have to be like this.

00:33:54 Okay.

00:33:54 I need to go talk about code.

00:33:56 I, when I lived in the Bay area, I played ultimate Frisbee a lot.

00:34:02 And so, you know, I played a game down in Palo Alto with their VCs playing in that game.

00:34:10 And I played a game that was a block away from the Apple campus.

00:34:14 And I played in a league down there.

00:34:16 And you think about, this is back in the early 2000s, but like all the big companies, the Oracles

00:34:23 and the IBMs and Microsoft and Google, like I knew people at all those companies just from

00:34:29 playing Frisbee and networking doesn't have to be like drudgery.

00:34:34 It can be something in sports, you know, here in Utah, there's a bunch of geeks who go

00:34:40 skiing, you know, backcountry skiing and will go skiing before work.

00:34:43 It can be church.

00:34:45 If you're involved in a church group or whatnot, or school or conferences and meetups are sort

00:34:52 of what people classically think of as networking, but it doesn't have to be limited to sort of

00:34:58 technical pursuits per se.

00:34:59 Yeah.

00:35:00 If you're really bold, you could put on something, right?

00:35:02 Like the data science hiking group or something, right?

00:35:06 Yeah.

00:35:06 And maybe in Silicon Valley, the odds are that, you know, you're playing Frisbee.

00:35:10 Someone in Palo Alto, it's pretty, pretty high odds that someone there or most of the people

00:35:16 there are going to be like some, have some tech related job or whatnot.

00:35:20 But even here in Utah, I'm involved in Frisbee groups here and there I've seen jobs.

00:35:26 People have gotten jobs by playing Frisbee.

00:35:29 So put yourself out there.

00:35:30 Yeah.

00:35:31 You might have a master's degree, but the thing that really did it was that, ultimate Frisbee

00:35:35 game that could be a culture fit for some people.

00:35:37 Yeah, for sure.

00:35:38 I feel like there's sort of two different groups, like getting into the programming space is a

00:35:44 huge step change.

00:35:45 Like to go from, no, I've, I have no experience to like, I have my first job seems really pretty

00:35:52 challenging and like a big step.

00:35:54 And then it feels to me like once you're kind of in the door, people are like, oh, you can

00:35:58 program.

00:35:59 We need programmers to some degree, right?

00:36:01 Yeah.

00:36:02 So what advice, especially do you have for like the people on there trying to make that

00:36:05 first step?

00:36:06 I talked to a lot of people who come from maybe a QA or they're doing tech support or something

00:36:11 and they want to get into programming.

00:36:12 And I think if you want to get into programming, the thing that you need to show is you need

00:36:18 to show that you can program.

00:36:20 And so that might be taking some project and sort of implementing it from end to end, or

00:36:27 that might be going to some coding bootcamp and figuring out that, yeah, I can do all this

00:36:33 stuff and have something to show after it.

00:36:35 But you need to have something that allows you to get a foot in the door.

00:36:39 And after that, you know, if you've got a foot in the door and you're sort of legitimate,

00:36:43 then you shouldn't have a problem.

00:36:46 But getting that first little project or it can be a challenge for a lot of people.

00:36:52 Yeah.

00:36:53 You know, one of the things people often ask me, I got a question today from somebody,

00:36:58 a listener saying, look, I know I want to get into programming in Python and I have some

00:37:04 experience, but I'm like you said, I'm coming from some slightly, slightly different area.

00:37:08 What should I learn?

00:37:10 Right?

00:37:10 Like, should I learn web development?

00:37:13 Should I learn databases?

00:37:14 Should I learn data science?

00:37:15 Like, what should I learn?

00:37:16 What would you tell that person?

00:37:18 Assuming it's restricted to Python somehow.

00:37:20 It's restricted to Python.

00:37:21 What should they learn in Python?

00:37:22 Yeah.

00:37:23 Yeah.

00:37:23 Like that a standard Python developer might do.

00:37:26 Yeah.

00:37:26 Or data scientists using Python might do.

00:37:29 Yeah.

00:37:29 I talk about that a lot in my courses.

00:37:32 It's like one of the big draws of Python is that it's not basically limited to development,

00:37:37 right?

00:37:38 I mean, you have these data scientists who are determining what ads we click on and whatnot.

00:37:42 And a lot of them aren't classical programmers per se, but they're using Python.

00:37:48 That's Jupyter notebook and Python tooling and day in and day out.

00:37:53 And a lot of the DevOps type stuff as well.

00:37:56 You know, with like SaltStack, these people aren't programmers either.

00:38:01 They're more DevOps type.

00:38:03 And there's a lot of Python in that world as well.

00:38:06 I personally trained a lot of people specifically to use Python.

00:38:10 And that's what they're using it for.

00:38:13 So I think pigeonholing Python into just for strictly programmers maybe does a disservice to that, right?

00:38:22 Yeah, I agree.

00:38:23 One of the big draws of the language is that it's so flexible.

00:38:27 And if you think of Ruby, you think of like Rails and you think of like PHP, you think of the web or you think of R and you think of data science.

00:38:36 But Python sort of has communities and groups that are sort of in all those camps.

00:38:42 And, you know, it's not just a breadth thing, but it's pretty deep as well.

00:38:47 There's deep tools in Python.

00:38:48 So I think someone's got to figure out, you know, if they want to be a programmer, yeah, that you can go down that programming route in Python.

00:38:57 But there are other avenues for making a living using Python that don't necessarily require that your title be software engineer.

00:39:06 Yeah, I think that's a pretty good point.

00:39:08 I threw it out there super vague because that's the way I always get it, right?

00:39:11 But I feel like people have to decide, like, what general direction you want to go?

00:39:16 Do you want to do web development?

00:39:17 Okay, then I can tell you what you probably need to work on.

00:39:20 You want to do DevOps?

00:39:21 I can tell you what you need to work on.

00:39:22 You want to do data science?

00:39:23 Same.

00:39:24 But if you just say, I want to do Python, what do I do?

00:39:27 Like, it's not quite differentiated enough to really decide, right?

00:39:31 Yeah.

00:39:31 I mean, I guess I would say if you want to do Python, then mobile apps is probably what you don't want to do, right?

00:39:38 Or 3D games is probably what you don't want to do.

00:39:40 Yeah.

00:39:41 Although, you know, you say that and I probably would have said the same thing.

00:39:44 But, I mean, they've got all the process pipelining stuff done in Python for even the big game shops, right?

00:39:52 I mean, obviously, you wouldn't write the game in Python.

00:39:54 Yeah.

00:39:54 No, no, that's true.

00:39:55 Python is in a great place right now.

00:39:58 And it's, you'd be, I'm not you, but I mean, it's amazing at all the places they're using Python.

00:40:03 Yeah, for sure it is.

00:40:05 I also feel like people don't often enough take, like, what is their specialty and think,

00:40:11 how can I take my specialty plus Python and make it, like, supercharged, right?

00:40:16 Like, do you know biology?

00:40:17 Find a way to work with biologists where, like, they're totally missing the game of, like, having automation and computers solve their problems.

00:40:26 Yeah.

00:40:27 Or if you're in finance or if you're whatever, you know, like, like, how do you put those together?

00:40:31 Because that'll give you a huge boost, I think.

00:40:32 Yeah.

00:40:33 And a lot of, like, when you read data science career type things, it's like some people are of the opinion that it's easier to take someone who has domain knowledge and sort of make them, give them data science skills than the reverse of, like, giving someone who has data science skills domain knowledge in some specific niche.

00:40:50 Yeah.

00:40:50 I think I agree with that for the most part.

00:40:52 You know, two random people, not maybe some expert programmer, right?

00:40:56 Yeah.

00:40:57 Who knows?

00:40:57 This portion of Talk Python To Me is brought to you by Hired.

00:41:01 Hired is the platform for top Python developer jobs.

00:41:04 Create your profile and instantly get access to thousands of companies who will compete to work with you.

00:41:10 Take it from one of Hired's users who recently got a job and said, I had my first offer within four days and I ended up getting eight offers in total.

00:41:17 I've worked with recruiters in the past, but they were pretty hit and miss.

00:41:20 I tried LinkedIn, but I found Hired to be the best.

00:41:23 I really like knowing the salary up front and privacy was also a huge seller for me.

00:41:27 Well, that sounds pretty awesome, doesn't it?

00:41:29 But wait until you hear about the signing bonus.

00:41:31 Everyone who accepts a job from Hired gets a $300 signing bonus.

00:41:34 And as Talk Python listeners, it gets even sweeter.

00:41:37 Use the link talkpython.fm/Hired and Hired will double the signing bonus to $600.

00:41:43 Opportunity is knocking.

00:41:45 Visit talkpython.fm/Hired and answer the door.

00:41:49 I guess the takeaway is like really the thing that carries the weight in all of this is people who hire programmers hire them because they have proof or they can show experience of actually doing the thing.

00:42:07 Unlike so many other jobs, right?

00:42:09 Where like I have a business degree.

00:42:11 Well, I must be great at running businesses because it came from a good school.

00:42:14 So you're hired, right?

00:42:16 No, you have to show that I can do these things.

00:42:19 And so building up stuff for that proof in advance over time, like not the week before you want to try this, right?

00:42:27 But like have a GitHub repository with as much interesting things you can do.

00:42:30 Contribute to open source projects.

00:42:32 Write a blog.

00:42:33 Work on things, right?

00:42:34 Like build this up because those are hard to sort of do all at once and make that not seem like you just threw it together.

00:42:40 Yeah.

00:42:40 You see young, I say young people like teenagers who have contributed to repositories and get jobs.

00:42:46 And so it's not like you have to spend years doing this sort of thing, but you know, you do have to show that you can do it.

00:42:53 Right.

00:42:53 And I think another skill that is pretty essential is that you, especially if you're starting out, is that you have the aptitude and ability to like learn and are sort of willing to be taught.

00:43:06 Because a lot of stuff that, you know, even that I'm using today, this stuff didn't exist a few years ago.

00:43:13 So it's sort of constant churn of learning new things.

00:43:16 Yeah.

00:43:17 If you don't want to learn new things, you're going to hate this job.

00:43:19 Yeah.

00:43:20 Speaking of jobs, let's talk about your job.

00:43:23 You're working on a startup based on Python and I'm always excited about businesses running on Python.

00:43:29 So let's talk about what you guys are doing there a little bit.

00:43:32 Yeah.

00:43:32 Startups called Far Better.

00:43:34 And what's the URL?

00:43:35 Farbetter.com.

00:43:37 F-A-R-B-E-T-T-E-R.

00:43:39 And there's a little video there that explains the basic gist of it.

00:43:44 But hopefully we're just finishing putting the dots in the I's and crossing the T's and get something out to our beta users here pretty soon.

00:43:55 But again, the idea here is that, you know, I've done a lot of traveling and traveling is somewhat annoying.

00:44:02 You know, if I want to go to the Bay Area, it says where you're what airport you're flying out of, what airport are you flying into.

00:44:10 And in the Bay Area, there are three different airports.

00:44:12 And I don't really actually care which airport.

00:44:15 I care what's the most convenient for me.

00:44:18 And so we think we've got a pretty good UE where we just say, where do you want to go and when you need to be there?

00:44:23 Don't even worry about the airport.

00:44:25 And we go out and figure out what the inventory is, what the nearest airports are to you and to where you're going.

00:44:32 And then we sort of figure out all the different combinations.

00:44:36 And we take advantage of AWS and figure out based on your preferences, what would be the best trip for you based on, you know, if you're a Delta person or I guess Delta is the good airline these days.

00:44:52 Well, I shouldn't be brand sensitive.

00:44:54 But, you know, based on your priorities, right?

00:44:58 But it does.

00:44:59 Yeah, it does matter which one, because a lot of times you have frequent flyer miles.

00:45:02 You might get a free upgrade on one and not the other.

00:45:04 If you fly a lot, you care that you're not stuck onto like some cheapo thing.

00:45:09 We're based on, you know, the idea here is that business travelers are going to fly once or more a month.

00:45:15 And business travelers actually are really brand sensitive.

00:45:18 So they want to get their trip to Hawaii at the end of the year.

00:45:21 And I want to fly Delta or whatever airline every time if I can.

00:45:26 But, you know, if I'm going to miss that, if I'm not going to make that deal because another airline, because I have a layover, maybe I'll take the direct flight, even if it's off brand, because I'll get the million dollar deal or whatnot.

00:45:38 Right.

00:45:39 And so schedule could trump that.

00:45:42 And so we've got a system written in Python that in under a minute will figure out a customized itinerary based on your preferences.

00:45:52 So it's pretty cool.

00:45:53 And it's kind of fun to see something come together like that.

00:45:58 And it's gratifying to after working on something for a while, actually see it come out.

00:46:03 Yeah, that sounds like a really cool project.

00:46:05 And you said originally it was written in Clojure and then you guys have converted it to Python 3, right?

00:46:11 Originally it was written in Clojure and we implemented it and did a microservice style of architecture there, which I think was great and was probably super scalable and whatnot.

00:46:28 But the problem was the engineers weren't scaling.

00:46:32 And so, you know, with two engineers and having half a dozen or more microservices, it's kind of hard to keep track of everything.

00:46:39 And having 15 plus years of Python experience and less than that of Clojure experience, we decided that let's simplify this a little bit, keep it simple and start from scratch and take advantage of Python.

00:46:56 And we've taken advantage of the async stuff in 3.6 and that's pretty cool.

00:47:01 And I think our only regret is that we didn't port to Python a little bit earlier.

00:47:06 Yeah, sure.

00:47:07 Well, that sounds really interesting.

00:47:08 You said that you had a bunch of microservices and you've actually like condensed that down to a Django app plus AWS Lambda.

00:47:18 Yeah.

00:47:19 And I'm seeing this as a trend.

00:47:20 I think it's happening quite a bit.

00:47:23 I mean, the idea of microservices was we're going to take some big monolithic app and break it into these little bits of functionality.

00:47:31 Like maybe here's the thing that charges the credit card.

00:47:34 That's a service.

00:47:35 And here's the thing that does login.

00:47:37 And here's the thing that, you know, creates a user or whatever.

00:47:40 And these are like little services that you piece together in your app.

00:47:45 But now we have things like Lambda.

00:47:47 Yeah.

00:47:47 You want to talk about the trade-offs and how that's working?

00:47:50 Yeah.

00:47:50 The serverless architecture, I guess.

00:47:52 Or I don't know.

00:47:53 Maybe I think someone called it milli-services now instead of micro.

00:47:57 But yeah.

00:47:58 I mean, again, it comes back to the point of like you've always got to be learning.

00:48:02 Like this Lambda stuff when we started this project didn't exist.

00:48:06 And so it wasn't really an option.

00:48:08 But it is now.

00:48:10 And it...

00:48:11 Maybe tell people what Lambda is really quick.

00:48:13 Yeah.

00:48:13 So if you're not familiar with Lambda, it's basically a way to expose a function and scale

00:48:19 out a function where you can say, I'm going to let you run 100 versions of this function

00:48:25 at the same time and pull back the answers.

00:48:28 And you don't have to necessarily start up 100 VMs or whatnot.

00:48:32 Amazon takes care of that for you.

00:48:34 You just tell it what function you want to run and you can call it, depending on what your

00:48:38 service level agreement is, X number of times concurrently.

00:48:42 So it makes so much sense to me.

00:48:44 I mean, with microservices, while it's cool to break your stuff up into these small pieces,

00:48:48 you really end up with like 10 little servers to babysit and manage and configure.

00:48:53 Yeah.

00:48:54 Like many of them are down like charge credit card.

00:48:56 Well, like that's a function.

00:48:57 Maybe we could just make it a function that runs like magically on AWS, right?

00:49:02 Yeah.

00:49:02 And, you know, one of the nice things about Lambda is that it supports Python out of the

00:49:07 box.

00:49:07 And up till last week or two weeks ago, it was Python 2, but they recently now support Python

00:49:15 3.6.

00:49:16 So I think you have Python, Java and .NET.

00:49:20 So pretty limited choices there, but we're good with Python there.

00:49:25 And it's pretty cool.

00:49:27 So, you know, the architecture of this app has changed, but it's radically been simplified,

00:49:34 but it still scales out, which is pretty cool.

00:49:38 That's cool.

00:49:38 And how much like supporting infrastructure can you have on Lambda?

00:49:43 Like I haven't really tried to use it in, you know, in anger, right?

00:49:46 Like if I've got like say pandas or I've got, you know, SQLAlchemy and I want to talk to

00:49:53 RDS or, you know, like how much like foundational dependencies can you ship up there?

00:49:58 I think there's a limit of, I want to say like a hundred megabytes of how much you can pack

00:50:06 up into a function.

00:50:07 Don't quote me on that.

00:50:09 But basically, since we're developing on Mac, you've got to basically take a Docker image

00:50:14 and then get all of the dependencies in that Docker image and then zip that up and then send

00:50:20 that tarball or zip file up to, up to AWS.

00:50:25 And so there's some work in, in doing that, unless it's pure Python, right?

00:50:29 If you, if you want to take advantage of like pandas or something, you've got to use a Linux

00:50:35 version and not any random, you know, Mac or Windows version because AWS isn't running on

00:50:42 that.

00:50:42 Yeah.

00:50:44 I'd be surprised if they had Macs back there somewhere.

00:50:46 Not likely.

00:50:48 Yeah.

00:50:48 Probably not going to happen.

00:50:49 No, probably not.

00:50:50 Very interesting.

00:50:52 So this whole architecture is working out for you though.

00:50:54 like sort of consolidating a little bit and just going in like all these little microservices,

00:50:58 these are now Lambda functions.

00:50:59 We're going to push those out.

00:51:00 Yeah.

00:51:01 Does the rest of your app also run in like an EC2 or something like that?

00:51:04 Mm-hmm.

00:51:04 We've got the elastic load balancer in front and then we've got the Django app that's stateless

00:51:10 and then we've got DynamoDB on our backend.

00:51:14 And so it's been very simplified and you've got JSON sort of talking over the place and, but

00:51:23 it does the job and it's pretty cool.

00:51:25 That's cool.

00:51:26 What do you think of DynamoDB?

00:51:27 And that's one of the more extreme cloud hosted NoSQL databases I would say if I describe it.

00:51:35 Yeah.

00:51:35 I have sort of mixed feelings about AWS and that like there's a huge amount of vendor lock-in,

00:51:41 which is good for Amazon, right?

00:51:44 because you get sort of gets sucked in there.

00:51:46 But, you know, if you have, if you can take advantage of their functionality and it works for you,

00:51:52 you should do that.

00:51:53 And not everything needs to be in the relational database.

00:51:57 So I think it just sort of depends on what your architecture is.

00:52:01 Sure.

00:52:02 Yeah.

00:52:03 I share your concerns with the lock-in and these cloud platforms as well.

00:52:07 I mean, they're even more lock-in than OSs in some ways, which is kind of crazy, but yeah,

00:52:14 it's going to be an interesting world in 10 or 20 years when there's a few of these giant things that

00:52:19 just run everything.

00:52:20 Yeah.

00:52:21 I imagine that like this serverless, I imagine Google would probably come out with something

00:52:26 if they haven't already or, you know, there'll be competition there.

00:52:29 But it seems like Amazon, everyone's just sort of following Amazon and can't really compete

00:52:35 with this giant behemoth right now.

00:52:37 But competition's good.

00:52:39 So hopefully, hopefully there'll be some competition and that will keep everyone in check.

00:52:43 I hope so.

00:52:44 I hope so.

00:52:44 All right.

00:52:46 Well, we're getting a little bit short on time, so I guess we should probably leave it there.

00:52:50 But that sounds fun.

00:52:51 I guess one more question, like what kind of machine learning, data science, AI stuff

00:52:55 you got going on to make that happen there?

00:52:56 Basic idea is that we've spent a lot of time making a mathematical model that represents a

00:53:02 trip, which isn't necessarily trivial.

00:53:04 And then throwing a bunch of computing power at going through that search space and figuring

00:53:12 out based on your preferences what those best trips are.

00:53:15 You know, over time, we want to put some machine learning into that and saying, you know,

00:53:19 you said that brand was really important to you, but it turned out the cost was really

00:53:24 important to you.

00:53:25 So we're going to, you know, on the back end, tweak your preferences based on what you're

00:53:30 really doing.

00:53:31 Right.

00:53:31 You say this matters more, but you're not actually behaving that way, right?

00:53:35 Yeah.

00:53:36 Based on behavior and not what you think your behavior is.

00:53:39 But we're not there yet.

00:53:41 No, it sounds really cool.

00:53:42 Yeah.

00:53:42 I don't want to don't want you to spill the secret sauce, but it's cool to hear what you're

00:53:46 doing.

00:53:46 Yeah.

00:53:46 All right, Matt.

00:53:47 So final two questions.

00:53:48 Okay.

00:53:49 If you're going to write some Python code, what editor do you open up?

00:53:52 I use Emacs and I'm currently using the Space Max variant of that.

00:53:57 So, I mean, I've used that since late nineties and I guess you can pry it from my cold dead

00:54:04 fingers or whatever.

00:54:05 I duck as people throw their Vim flavored tomatoes at me.

00:54:09 Yes, exactly.

00:54:10 Well, it's just going to hit their screens.

00:54:11 It won't really hurt you.

00:54:12 Yeah.

00:54:13 But when I'm teaching, I typically use idle.

00:54:15 So you can cringe at that as well.

00:54:18 Okay.

00:54:18 Sure.

00:54:20 All right.

00:54:21 Awesome.

00:54:22 And then sort of notable PyPI package.

00:54:25 You have over a hundred thousand to pick from these days.

00:54:27 That's pretty incredible.

00:54:28 I guess we'll bring it back to the start.

00:54:30 One that we've liked at work is a package called Zeep, which is a modern soap package in Python.

00:54:38 So it has Python 3 async support.

00:54:43 And so you're sort of blending the old enterprise stuff with the latest and greatest of Python.

00:54:50 So Zeep.

00:54:52 Z-E-E-P.

00:54:52 All right.

00:54:53 It sounds cool.

00:54:55 Okay.

00:54:55 So final call to action.

00:54:56 People, there's a lot of stuff they can check out.

00:54:58 They can check out your travel company.

00:55:00 You've got your books.

00:55:02 You've got your, probably they can meet you at PyCon, right?

00:55:05 Yeah.

00:55:05 I'll be at PyCon.

00:55:07 Be at the tutorials.

00:55:09 I'm going to be at O'Reilly's booth, I think on Friday.

00:55:12 So if you want to meet me there, I'll be around as well.

00:55:15 Saturday, I'll be in the Young Coders camp.

00:55:18 But come up and talk with me if you want to.

00:55:21 Otherwise, I guess you can follow me on Twitter if you want to.

00:55:24 Dunder M. Harrison is my handle on Twitter.

00:55:28 Nice.

00:55:28 And I'll put that in the show notes as well.

00:55:30 Cool.

00:55:30 All right.

00:55:31 Well, Matt, thank you for being on the show.

00:55:32 It's been great to chat with you about all these projects and see what you're up to.

00:55:36 Yeah.

00:55:36 Thanks.

00:55:36 I appreciate it.

00:55:37 Bet.

00:55:37 Talk to you later.

00:55:38 Okay.

00:55:38 We'll see you.

00:55:39 This has been another episode of Talk Python To Me.

00:55:43 Today's guest was Matt Harrison.

00:55:46 And this episode is sponsored by Rollbar and Hired.

00:55:50 Rollbar takes the pain out of errors.

00:55:52 They give you the context and insight you need to quickly locate errors that might have

00:55:56 otherwise gone unnoticed until your users complain to you, of course.

00:55:59 As Talk Python To Me listeners, you can track a ridiculous number of errors for free.

00:56:03 Just go to rollbar.com slash Talk Python To Me to get started.

00:56:07 Hired wants to help you find your next big thing.

00:56:10 Visit talkpython.fm/Hired to get five or more offers with salary and equity presented

00:56:16 right up front and a special listener signing bonus of $600.

00:56:20 Are you or your colleagues trying to learn Python?

00:56:22 Well, be sure to visit training.talkpython.fm.

00:56:25 We now have year-long course bundles and a couple of new classes released just this week.

00:56:31 Have a look around.

00:56:32 I'm sure you'll find a class you'll enjoy.

00:56:33 Be sure to subscribe to the show.

00:56:36 Open your favorite podcatcher and search for Python.

00:56:38 We should be right at the top.

00:56:39 You can also find the iTunes feed at /itunes, Google Play feed at /play, and

00:56:45 direct RSS feed at /rss on talkpython.fm.

00:56:48 Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

00:56:53 Corey just recently started selling his tracks on iTunes, so I recommend you check it out at

00:56:58 talkpython.fm/music.

00:57:00 You can browse his tracks he has for sale on iTunes and listen to the full-length version

00:57:05 of the theme song.

00:57:06 This is your host, Michael Kennedy.

00:57:08 Thanks so much for listening.

00:57:09 I really appreciate it.

00:57:10 Smix, let's get out of here.

00:57:12 Stay tuned.

