WEBVTT

00:00:00.001 --> 00:00:02.160
What kind of applications can you build with Python?

00:00:02.160 --> 00:00:06.060
You hear me featuring many people on this show that build websites,

00:00:06.060 --> 00:00:09.100
web services, or some data science-driven application.

00:00:09.100 --> 00:00:13.920
Of course, all of those are wonderful, but I know many of you have dreamed of building a game.

00:00:13.920 --> 00:00:16.600
In this episode, I'm interviewing Joseph Charlin.

00:00:16.600 --> 00:00:21.840
He created the game Epicos and the entire toolchain to build it in Python.

00:00:21.840 --> 00:00:24.680
He has a great story about how he came across Python,

00:00:24.680 --> 00:00:26.600
why he decided to use it in his game,

00:00:26.600 --> 00:00:30.260
and advice he has for anyone out there taking on a large project like this.

00:00:30.260 --> 00:00:35.740
This is Talk Python To Me, episode 78, recorded September 24th, 2016.

00:00:53.200 --> 00:01:04.580
Welcome to Talk Python To Me, a weekly podcast on Python,

00:01:04.580 --> 00:01:07.640
the language, the libraries, the ecosystem, and the personalities.

00:01:07.640 --> 00:01:09.760
This is your host, Michael Kennedy.

00:01:09.760 --> 00:01:11.760
Follow me on Twitter, where I'm @mkennedy.

00:01:11.760 --> 00:01:15.640
Keep up with the show and listen to past episodes at talkpython.fm,

00:01:15.640 --> 00:01:18.240
and follow the show on Twitter via at Talk Python.

00:01:19.340 --> 00:01:20.120
Hey, everyone.

00:01:20.120 --> 00:01:22.300
As always, thank you so much for listening.

00:01:22.300 --> 00:01:26.680
I think we have an interesting look inside a really cool project by Joseph this week,

00:01:26.680 --> 00:01:28.560
so I hope you enjoy the episode.

00:01:28.560 --> 00:01:33.740
He talks about the game that he built and the whole toolchain and how he used Python to do it.

00:01:33.740 --> 00:01:39.440
And he and I talked after the show and decided it would be really great to give away some copies of his game.

00:01:39.440 --> 00:01:44.000
As always, if you want to win something from the show, you have to be a friend of the show.

00:01:44.440 --> 00:01:45.080
Super easy.

00:01:45.080 --> 00:01:51.280
Just visit talkpython.fm, click on friends of the show in the nav bar, enter your email address, boom, we're friends.

00:01:51.280 --> 00:01:53.140
Well, we're already friends.

00:01:53.140 --> 00:01:54.080
You're listening to the show, right?

00:01:54.080 --> 00:01:54.840
So thank you so much.

00:01:54.840 --> 00:02:02.080
But officially, to win, you've got to be a friend of the show, so give me an email address so I can hopefully pull it out and send you one of the games.

00:02:02.080 --> 00:02:03.480
Hope you enjoy the episode.

00:02:03.480 --> 00:02:04.820
Let's hear from Joseph.

00:02:04.820 --> 00:02:08.040
Joseph, welcome to the show.

00:02:08.240 --> 00:02:11.980
I'm super excited to talk about how you built your game in Python.

00:02:11.980 --> 00:02:14.600
And not just your game, but your entire toolchain.

00:02:14.600 --> 00:02:20.500
And the story of how you did this and your journey is super interesting, and I'm looking forward to sharing with everyone.

00:02:20.500 --> 00:02:22.280
Yeah, it was really fun.

00:02:22.280 --> 00:02:24.660
And thanks for having me on the show.

00:02:24.660 --> 00:02:26.280
I think it'll be fun to talk about it.

00:02:26.280 --> 00:02:27.280
Yeah, I definitely will.

00:02:27.280 --> 00:02:27.940
And you're welcome.

00:02:27.940 --> 00:02:35.080
So before we get into the story of Epicos and your game and things like that, let's talk about your history.

00:02:35.080 --> 00:02:36.480
Like, how did you get into programming?

00:02:36.480 --> 00:02:44.940
So strangely, I didn't actually have a computer to program on growing up, like a lot of my friends who are also programmers.

00:02:44.940 --> 00:02:49.880
But when I started going to college, actually, my dad bought me a computer.

00:02:49.880 --> 00:02:58.320
And as a kind of random thing, I took intro to computer programming course in college.

00:02:58.320 --> 00:02:59.520
It was totally random.

00:02:59.520 --> 00:03:03.140
I was supposed to be, you know, I was in pre-architecture major, right?

00:03:03.140 --> 00:03:06.140
So I wasn't doing anything related to programming.

00:03:06.140 --> 00:03:12.220
And I took this programming course, and I was like, this is what I want to do for the rest of my life.

00:03:12.220 --> 00:03:14.700
All I want to do is program.

00:03:14.700 --> 00:03:16.520
This is it.

00:03:16.520 --> 00:03:19.600
And I had to switch to computer science.

00:03:20.120 --> 00:03:24.320
And I knew, you know, there were a lot of math prerequisites that were going to be new.

00:03:24.320 --> 00:03:25.300
And I was like, I'll just do it.

00:03:25.300 --> 00:03:26.160
I don't care.

00:03:26.160 --> 00:03:27.580
I'm going to study hard.

00:03:27.580 --> 00:03:28.520
I'm going to learn everything.

00:03:28.520 --> 00:03:32.800
I'm not one of these guys who's been programming their whole life or whatever.

00:03:32.800 --> 00:03:35.580
That's great if, you know, if you have that.

00:03:35.580 --> 00:03:36.500
That's awesome.

00:03:36.500 --> 00:03:38.120
But not me.

00:03:38.200 --> 00:03:39.140
I learned in college.

00:03:39.140 --> 00:03:42.800
And my express goal was always to program video games.

00:03:42.800 --> 00:03:44.120
I love video games.

00:03:44.120 --> 00:03:45.760
Had a NES growing up.

00:03:45.760 --> 00:03:48.760
Most of my favorite games are NES games, I would say.

00:03:48.760 --> 00:03:51.200
But that got me into the games.

00:03:51.200 --> 00:03:56.900
And when I was programming in college, I always wanted to make games out of my programs.

00:03:56.900 --> 00:04:00.320
So I was learning stuff like DirectX.

00:04:01.180 --> 00:04:04.160
I was trying to learn stuff for game programming.

00:04:04.160 --> 00:04:07.500
I was making little games all the time in college.

00:04:07.500 --> 00:04:08.600
That's really cool.

00:04:08.600 --> 00:04:10.140
That's kind of how I got into programming.

00:04:10.140 --> 00:04:16.740
I think a lot of us can relate to this feeling of like, once you discover programming, you're like, this is what I want to do.

00:04:16.740 --> 00:04:29.040
I still remember one of my very first paid outside of university jobs was working on 3D visualization software doing C++ and OpenGL.

00:04:29.220 --> 00:04:33.240
And I was just thinking, you know, my first day, first week at work, I'm like, this is it.

00:04:33.240 --> 00:04:35.420
Like, my life is perfect.

00:04:35.420 --> 00:04:38.820
I'm sitting here doing like OpenGL and programming.

00:04:38.820 --> 00:04:40.320
And oh my gosh, this is so amazing.

00:04:40.320 --> 00:04:42.060
I was just thrilled.

00:04:42.060 --> 00:04:49.360
So you've done a lot of C++ programming as DirectX and probably OpenGL as well and all the major game engines.

00:04:49.360 --> 00:04:52.280
That's kind of what you do for your day job, right?

00:04:52.280 --> 00:04:52.960
Yeah.

00:04:52.960 --> 00:04:55.620
I mean, I'm not an indie dev during the day.

00:04:55.620 --> 00:04:57.060
I'm a programmer.

00:04:57.480 --> 00:04:59.060
I do game stuff.

00:04:59.060 --> 00:05:02.660
So I've been in the games industry about 10 years.

00:05:02.660 --> 00:05:05.620
I've shipped three or four titles.

00:05:05.620 --> 00:05:07.500
If you count expansion packs, I don't know.

00:05:07.500 --> 00:05:08.340
Three or four.

00:05:08.340 --> 00:05:11.840
Any major ones that we probably played if we're into games?

00:05:11.840 --> 00:05:15.600
I shipped a few mediocre console titles.

00:05:15.600 --> 00:05:16.820
I mean, they weren't bad.

00:05:16.820 --> 00:05:19.720
I liked them, but probably nothing too big.

00:05:19.720 --> 00:05:20.260
Okay.

00:05:20.760 --> 00:05:25.040
And then I went and I started working at ArenaNet, which makes Guild Wars.

00:05:25.040 --> 00:05:27.140
So Guild Wars 2, I worked on.

00:05:27.140 --> 00:05:31.940
I would love to take credit for a lot of the things in Guild Wars 2, but I can't.

00:05:31.940 --> 00:05:33.560
I only joined a year before they shipped.

00:05:33.560 --> 00:05:40.540
You know, I tried to help out before shipping, but like, obviously, the lion's share of the credit for this game doesn't go to me.

00:05:41.120 --> 00:05:43.120
And there's a lot of programmers here.

00:05:43.120 --> 00:05:48.640
The major games have an incredible number of developers and artists and team members.

00:05:48.640 --> 00:05:52.340
It's not a one-person deal to ship games these days, is it?

00:05:52.340 --> 00:05:53.360
It's really huge.

00:05:53.360 --> 00:05:58.620
ArenaNet isn't super big like EA or anything, which makes it nice, actually.

00:05:58.840 --> 00:06:01.120
But there's a lot of people you're working with.

00:06:01.120 --> 00:06:09.580
And the key thing ArenaNet actually let me do was, in most games industry jobs, you're working like, it's not a 9-to-5 thing, right?

00:06:09.580 --> 00:06:11.820
You're working 12, 14 hours a day.

00:06:11.820 --> 00:06:14.300
You can't make a side project, right?

00:06:14.300 --> 00:06:16.260
You have to go home and sleep, right?

00:06:16.260 --> 00:06:21.920
Or go home and drink so that you can get over working 14 hours and then go to sleep.

00:06:21.920 --> 00:06:23.020
And that's it.

00:06:23.020 --> 00:06:23.880
You can't do that.

00:06:23.880 --> 00:06:31.000
Once I started working at this new job at a more responsible company, plug for Internet, basically, it is.

00:06:31.000 --> 00:06:35.180
They actually make sure that there's no real overtime there.

00:06:35.180 --> 00:06:38.140
So I came home, and I was like, wow, I should be programming.

00:06:38.140 --> 00:06:41.220
And that's kind of how the game started getting made.

00:06:41.220 --> 00:06:43.540
That's great.

00:06:43.540 --> 00:06:44.120
That's great.

00:06:44.120 --> 00:06:48.920
So we'll talk about how you're using Python in your game in a moment.

00:06:48.920 --> 00:06:55.520
But why don't you tell the story of how you got into Python and why you thought it might be interesting for a game in the first place?

00:06:55.520 --> 00:07:00.120
You know, I don't know if I'm exactly 100% Python programmer.

00:07:00.120 --> 00:07:00.980
I like Python.

00:07:00.980 --> 00:07:02.700
I'm really a C programmer.

00:07:02.700 --> 00:07:10.640
Most of my work is in C++, but I prefer C-style stuff with a little C++ thrown in.

00:07:10.640 --> 00:07:15.780
I'm not, you know, going off the deep end with all the C++ features.

00:07:15.780 --> 00:07:17.340
It's a good language.

00:07:17.340 --> 00:07:18.080
I like it a lot.

00:07:18.240 --> 00:07:19.900
It's my first language to see.

00:07:19.900 --> 00:07:26.220
So obviously, it's like your first language always has a special place in your heart, no matter who you are, I think.

00:07:26.220 --> 00:07:32.300
At work, I had to fix a bug, which happened to be in Python.

00:07:32.300 --> 00:07:35.460
I think an artist had made a script in Python.

00:07:35.460 --> 00:07:36.840
And it was a good script.

00:07:36.840 --> 00:07:37.620
It had a bug in it.

00:07:38.760 --> 00:07:39.760
And I fixed it.

00:07:39.760 --> 00:07:40.140
And I fixed it.

00:07:40.140 --> 00:07:50.820
After learning a little bit of Python, like, think about maybe like a couple hours, Python gave me enough ammo to kind of fix a rudimentary bug.

00:07:50.920 --> 00:07:54.680
So if you're getting into Python, it's not too bad if you're a C programmer already.

00:07:54.680 --> 00:07:57.020
But then I was looking at this language.

00:07:57.020 --> 00:07:59.520
I was like, huh, I wonder what you can do with this thing.

00:07:59.520 --> 00:08:02.720
Because I'm thinking about it as a C programmer, really.

00:08:02.840 --> 00:08:04.740
I'm thinking about Python as a C guy.

00:08:04.740 --> 00:08:07.900
Like, oh, this looks like it'll save me some time.

00:08:07.900 --> 00:08:10.700
Maybe I don't have to declare things.

00:08:10.700 --> 00:08:15.300
You know, I don't have to put together all the nuts and bolts of the program as much.

00:08:15.840 --> 00:08:16.840
And I took it home.

00:08:16.840 --> 00:08:19.000
And I wrote a C program.

00:08:19.000 --> 00:08:21.100
You know, I wrote a program in C.

00:08:21.100 --> 00:08:23.200
I can't remember what it was.

00:08:23.200 --> 00:08:26.580
I think I had to automate some process I was working on.

00:08:26.580 --> 00:08:29.380
And then as a challenge, I wrote it in Python.

00:08:29.380 --> 00:08:33.000
So in C, it was 300 lines of code.

00:08:33.000 --> 00:08:34.260
And I'm making up the lines.

00:08:34.260 --> 00:08:36.500
I don't remember exactly how many lines it was.

00:08:36.500 --> 00:08:38.320
Let's say it was 300 lines of code.

00:08:38.320 --> 00:08:42.920
In Python, it was like 100 lines of code.

00:08:43.240 --> 00:08:47.120
My first Python program, you know, 100 lines of code instead of 300.

00:08:47.120 --> 00:08:50.800
And I'm thinking, wow, this is pretty great.

00:08:50.800 --> 00:08:52.460
I had to write.

00:08:52.460 --> 00:08:53.860
That's a nice improvement.

00:08:53.860 --> 00:08:55.600
A third the amount of code.

00:08:55.600 --> 00:08:56.640
That's cool.

00:08:56.640 --> 00:08:58.420
And then I was looking at it more.

00:08:58.420 --> 00:08:59.800
Like, okay, let me learn more Python.

00:08:59.800 --> 00:09:02.180
So this is, you know, learning almost no Python.

00:09:02.180 --> 00:09:03.500
I got a third out.

00:09:03.500 --> 00:09:04.580
That's great.

00:09:04.580 --> 00:09:09.480
Because less code, you know, if you know as a coder, less code means less bugs, right?

00:09:10.380 --> 00:09:13.580
You don't want to write things in as long way as possible.

00:09:13.580 --> 00:09:14.200
That's it.

00:09:14.200 --> 00:09:17.000
So less code, less bugs, great.

00:09:17.000 --> 00:09:18.680
And then I started learning more Python.

00:09:18.680 --> 00:09:21.120
I was like, wow, I can get this down to 50 lines.

00:09:21.120 --> 00:09:22.280
And I learned more.

00:09:22.280 --> 00:09:24.540
It's like, I can get this down to 25 lines.

00:09:24.540 --> 00:09:26.140
Learn more Python.

00:09:26.140 --> 00:09:30.680
Learn about how the sorting works, the data structures, all the stuff that I just normally

00:09:30.680 --> 00:09:36.500
manually code or use some library for, which tends to be verbose in C++.

00:09:36.500 --> 00:09:39.740
And then, oh, wait, it's 20 lines of code.

00:09:39.740 --> 00:09:41.120
Wait, it's 10 lines of code.

00:09:41.120 --> 00:09:44.840
And I'm sitting here with 10 lines of code instead of 300 lines of code.

00:09:44.840 --> 00:09:50.240
10 lines of expressive code instead of 300 lines of nuts and bolts and a little bit of

00:09:50.240 --> 00:09:52.340
expressivity somewhere in there.

00:09:52.960 --> 00:09:57.380
And I'm like, I could probably write this thing in a couple lines, but it would be really

00:09:57.380 --> 00:09:58.020
ugly code.

00:09:58.020 --> 00:10:01.960
So I'm going to leave it at whatever it was, 25 or 15 lines of code.

00:10:02.100 --> 00:10:08.740
That experience was the one which convinced me, wow, Python, there's something to this

00:10:08.740 --> 00:10:09.400
language.

00:10:09.400 --> 00:10:12.520
Granted, I haven't done a lot with scripting languages.

00:10:12.520 --> 00:10:13.460
I'm a C person.

00:10:13.460 --> 00:10:16.920
So people tell me, well, you can do this.

00:10:16.920 --> 00:10:18.020
So with this, you can do this.

00:10:18.020 --> 00:10:19.240
Okay, maybe they're right.

00:10:19.240 --> 00:10:25.100
But for me, I learned at Python, this exact experience was what got me into Python.

00:10:25.100 --> 00:10:29.200
And that totally convinced me there's something to this language.

00:10:29.200 --> 00:10:30.720
That is a really cool story.

00:10:30.720 --> 00:10:33.840
I wish you had kept all the versions of code.

00:10:33.840 --> 00:10:36.520
We could put them up as like GitHub gists or something like that.

00:10:36.520 --> 00:10:39.000
But still, the story is great.

00:10:39.000 --> 00:10:44.720
And I think a lot of times you'll hear people say, well, I like this language because it's

00:10:44.720 --> 00:10:46.460
dynamic and it doesn't have types.

00:10:46.460 --> 00:10:50.820
Or I like this language because it doesn't require compiling like C does or something.

00:10:50.820 --> 00:10:55.560
But I think what was really cool about your story is it really highlights what's truly

00:10:55.560 --> 00:11:02.480
cool about languages like Python and especially Python is that whether or not you compile those

00:11:02.480 --> 00:11:05.800
25 lines, it is a much better experience.

00:11:05.800 --> 00:11:11.360
What you can do and the way you put these, the standard library together and the packages

00:11:11.360 --> 00:11:12.320
and all sorts of stuff.

00:11:12.320 --> 00:11:12.940
It's great.

00:11:12.940 --> 00:11:14.220
Yeah, I totally agree.

00:11:14.220 --> 00:11:17.520
I don't want to put words in the mouth of the devs of Python.

00:11:17.520 --> 00:11:21.220
But I think the point of the language is just to be expressive.

00:11:21.220 --> 00:11:26.360
So you'll write, normally you'll write code and there's a lot of boilerplate code.

00:11:26.360 --> 00:11:31.700
There's a little bit of code that carries the intent of what you actually wanted to do.

00:11:32.060 --> 00:11:37.240
And in Python, it's like the code that expresses what you wanted to do is the code, more or less.

00:11:37.240 --> 00:11:42.820
Yeah, you had a cool thing where you said, you're talking about an algorithm, the A-star

00:11:42.820 --> 00:11:46.600
path navigation algorithm in a Reddit post that we'll get to talking about.

00:11:46.600 --> 00:11:52.280
And you said, here, look, Wikipedia is describing the algorithm in words and basically pseudocode.

00:11:52.280 --> 00:11:53.280
Drop this into Python.

00:11:53.280 --> 00:11:56.100
How much work would it be to just make it execute, basically?

00:11:56.100 --> 00:11:57.980
Which is really nice, I think.

00:11:58.380 --> 00:11:58.980
It's amazing.

00:11:58.980 --> 00:12:02.500
Like, I copy-pasted some pseudocode into the Python editor.

00:12:02.500 --> 00:12:04.840
I changed, I think, the equals signs, right?

00:12:04.840 --> 00:12:07.660
And the pseudocode is different than the equals signs of Python.

00:12:07.660 --> 00:12:08.980
And then it worked.

00:12:08.980 --> 00:12:10.620
And I was like, I don't have to write A-star now.

00:12:10.620 --> 00:12:11.560
That's awesome.

00:12:11.560 --> 00:12:13.100
Cool.

00:12:13.100 --> 00:12:13.920
So let's talk about your...

00:12:13.920 --> 00:12:15.740
It is like, I can't even believe it worked.

00:12:15.740 --> 00:12:16.480
Yeah.

00:12:16.480 --> 00:12:18.480
That's really, really cool.

00:12:18.480 --> 00:12:20.120
So let's talk about your game.

00:12:20.120 --> 00:12:20.580
What's it called?

00:12:20.580 --> 00:12:21.240
Oh, sure.

00:12:21.240 --> 00:12:22.560
Epicos is the game.

00:12:22.560 --> 00:12:25.120
E-P-I-K-O-S.

00:12:25.120 --> 00:12:27.940
It's the Greek word for epic.

00:12:27.940 --> 00:12:28.940
Oh, nice.

00:12:28.940 --> 00:12:33.240
And it's a game I wanted to make for a number of years.

00:12:33.240 --> 00:12:37.360
Even in college, I wanted to make this game.

00:12:37.360 --> 00:12:43.240
But once I started working in the games industry, of course, I didn't have time because of the hours.

00:12:43.240 --> 00:12:45.660
But then I eventually had time.

00:12:45.660 --> 00:12:47.480
I got to a more responsible company.

00:12:50.780 --> 00:12:55.220
The game is pretty retro.

00:12:55.220 --> 00:13:02.680
It's hard to say that in a world where pretty much every game claims to be retro these days.

00:13:02.680 --> 00:13:03.120
Yeah.

00:13:03.120 --> 00:13:05.380
It definitely has a retro feel.

00:13:05.380 --> 00:13:06.600
I'll vouch for you.

00:13:06.600 --> 00:13:07.640
It does have a retro feel.

00:13:07.640 --> 00:13:11.380
And it's a visual RPG where it's...

00:13:11.380 --> 00:13:11.620
I don't know.

00:13:11.620 --> 00:13:17.360
I feel kind of like it's a simplified Legends of Zelda type game maybe a little bit.

00:13:17.360 --> 00:13:19.240
Like it has that kind of feel of playing.

00:13:19.240 --> 00:13:20.580
It might feel that way.

00:13:20.580 --> 00:13:26.820
I feel actually it's a combo of Ultima and Final Fantasy, probably four.

00:13:26.820 --> 00:13:31.000
Probably a combo of Ultima four and Final Fantasy four.

00:13:31.460 --> 00:13:36.700
So like Ultima, you have interesting property that the more...

00:13:36.700 --> 00:13:40.320
The faster you input on your keyboard, the faster the game runs.

00:13:40.320 --> 00:13:44.940
No games, even if they claim to be retro, no games have this property anymore.

00:13:44.940 --> 00:13:46.920
But in the 80s, a lot of games had this property.

00:13:46.920 --> 00:13:49.500
If you type fast, the game went fast.

00:13:49.500 --> 00:13:50.980
And if you type slow, the game went slow.

00:13:50.980 --> 00:13:53.400
And if you left, the game didn't do anything at all.

00:13:53.400 --> 00:13:57.900
And whereas nowadays, even the turn-based games, it doesn't matter how fast you go.

00:13:57.900 --> 00:14:01.640
So they're very slow because you have to wait for the AI to think.

00:14:01.640 --> 00:14:05.440
And you have to wait for all these stupid animations you don't even care about to finish playing.

00:14:05.440 --> 00:14:08.180
And all these sound effects you get over with.

00:14:08.180 --> 00:14:09.780
And you just want to play the game.

00:14:09.780 --> 00:14:15.840
But the game is so enamored with its own wonderful effects, it won't even let you play it.

00:14:15.840 --> 00:14:18.880
And plus the AI is typically not written efficiently.

00:14:18.880 --> 00:14:21.840
Which my AI isn't any...

00:14:21.840 --> 00:14:23.060
You know, it does stuff.

00:14:23.060 --> 00:14:24.000
But think about it.

00:14:24.000 --> 00:14:24.520
It's in Python.

00:14:24.520 --> 00:14:27.220
I mean, that's like 500 times slower than C.

00:14:27.740 --> 00:14:29.520
And the game runs that frame, right?

00:14:29.520 --> 00:14:31.560
So it's possible to do.

00:14:31.560 --> 00:14:32.200
That's awesome.

00:14:32.200 --> 00:14:35.060
And it's all about designing it in the right way, right?

00:14:35.060 --> 00:14:36.980
I mean, it's the trade-offs you make.

00:14:36.980 --> 00:14:37.460
Like you said...

00:14:37.460 --> 00:14:37.900
Yeah, absolutely.

00:14:37.900 --> 00:14:39.760
Stay away from the crazy animations.

00:14:39.760 --> 00:14:40.880
And guess what?

00:14:40.880 --> 00:14:42.760
You can go through the steps faster.

00:14:42.760 --> 00:14:43.220
That's cool.

00:14:43.220 --> 00:14:44.920
Yeah, everything runs really fast.

00:14:44.920 --> 00:14:48.200
On your website, you have a place where you say...

00:14:48.200 --> 00:14:51.080
You talk about the outstanding features of the game.

00:14:51.080 --> 00:14:52.620
Can you maybe highlight some of those?

00:14:52.620 --> 00:14:55.360
It has a very original mythology.

00:14:55.360 --> 00:14:58.060
There's a website called Indie Overlook.

00:14:58.060 --> 00:14:59.840
I want to plug.

00:14:59.840 --> 00:15:01.580
They did a review of my game.

00:15:01.580 --> 00:15:07.720
They got the idea of the feeling of mythology and lore is a key part to the game.

00:15:07.720 --> 00:15:11.700
And also, they were critical of some aspects of the game, which I totally agree with.

00:15:11.700 --> 00:15:15.140
Like, I agree with what they liked about it and what they didn't like about it.

00:15:15.140 --> 00:15:16.300
So Indie Overlook.

00:15:16.300 --> 00:15:17.080
Check them out.

00:15:17.720 --> 00:15:22.020
And the original world and story is one of the main things.

00:15:22.020 --> 00:15:27.460
So basically, everything you see in the game has a lot of backstory and thought behind it.

00:15:27.460 --> 00:15:29.880
And I'm thinking about Lord of the Rings, right?

00:15:29.880 --> 00:15:33.240
Because if you read Tolkien, he won't say, oh, and they passed a hill.

00:15:33.240 --> 00:15:37.660
He'll say, well, this hill, you know, once upon a time, there was a kingdom on the hill.

00:15:37.660 --> 00:15:39.920
And before that, there was this other kingdom on the hill.

00:15:40.000 --> 00:15:41.700
And before that, the elves were on the hill.

00:15:41.700 --> 00:15:42.980
And before that, this happened.

00:15:42.980 --> 00:15:47.180
And the hill, you know, he's thinking about not the world in terms of the static thing,

00:15:47.180 --> 00:15:49.920
but all these layers of history that happened.

00:15:49.920 --> 00:15:51.320
Mythology, really.

00:15:51.320 --> 00:15:54.460
I tried to kind of, like, put that feeling into everything.

00:15:54.460 --> 00:15:57.940
Everything had ancient roots in my world.

00:15:57.940 --> 00:15:58.860
Ancient roots.

00:15:58.860 --> 00:16:07.100
And you can find out about it via conversation, but you also can find ancient tablets that you can get translated by bards.

00:16:07.100 --> 00:16:08.680
You can read more about it.

00:16:09.220 --> 00:16:14.440
You can also skip this part of the game if you're not a lore guy, if you just like tactical RPG and story.

00:16:14.440 --> 00:16:15.320
That's cool.

00:16:15.320 --> 00:16:17.040
That part's optional.

00:16:17.040 --> 00:16:18.980
But it's a pretty original world.

00:16:18.980 --> 00:16:20.340
The characters are pretty original.

00:16:20.340 --> 00:16:21.760
The story's totally new.

00:16:21.760 --> 00:16:25.040
So that was the idea with the first bullet there.

00:16:25.040 --> 00:16:26.120
Nice.

00:16:26.120 --> 00:16:29.100
Turn-based combat was another goal of mine.

00:16:29.100 --> 00:16:30.440
I like turn-based combat.

00:16:30.440 --> 00:16:35.660
I feel like in the U.S., not many games are made with turn-based combat.

00:16:35.660 --> 00:16:37.560
Definitely not a lot of big games.

00:16:38.000 --> 00:16:40.040
Would you say it's more of, like, a Japanese style?

00:16:40.040 --> 00:16:45.080
I would definitely say Japan has us on this one, right?

00:16:45.280 --> 00:16:48.300
And I happen to like the turn-based stuff.

00:16:48.300 --> 00:16:49.180
Maybe it's subjective.

00:16:49.180 --> 00:16:51.840
I feel like it's a little more thoughtful.

00:16:51.840 --> 00:16:54.500
But I like real-time sometimes, too.

00:16:54.500 --> 00:16:57.740
So I think they're both valid game systems.

00:16:57.740 --> 00:16:59.380
I just happen to like turn-based better.

00:16:59.380 --> 00:17:02.000
And it's pretty unrepresented these days.

00:17:02.000 --> 00:17:05.900
Although, if you go back to the 80s, real-time is pretty unrepresented.

00:17:05.900 --> 00:17:08.360
Because real-time was just harder to do, I imagine.

00:17:08.360 --> 00:17:09.400
Yeah.

00:17:09.400 --> 00:17:10.060
Absolutely.

00:17:10.060 --> 00:17:12.920
I think it started out as a requirement, right?

00:17:12.920 --> 00:17:14.660
I mean, in the early games.

00:17:14.660 --> 00:17:15.460
Yeah, pretty much.

00:17:15.460 --> 00:17:17.060
You didn't have the same environment.

00:17:17.060 --> 00:17:17.380
Okay.

00:17:17.380 --> 00:17:18.100
Pretty much.

00:17:18.100 --> 00:17:22.720
And the idea of the turn-based-ness of this game is that it'll run as fast as you need it to.

00:17:23.280 --> 00:17:26.160
And if you go back and you play Ultima IV, which you should, it's great.

00:17:26.160 --> 00:17:30.780
If you get good at that game, you can start inputting commands as fast as your fingers can type.

00:17:30.780 --> 00:17:31.960
And the game will just go.

00:17:31.960 --> 00:17:33.780
And that's the idea of my game.

00:17:33.780 --> 00:17:38.340
Like, if you can think and you know what all the moves in the strategic combat are,

00:17:38.340 --> 00:17:42.680
you can just play it and it'll be fast and it'll be fun because you're doing it so fast.

00:17:42.680 --> 00:17:43.940
That's a fun feeling.

00:17:43.940 --> 00:17:47.320
That's a good, it's kind of a natural high to be doing things fast.

00:17:47.960 --> 00:17:54.580
I think StarCraft players can tell you, you know, it's a lot of fun to move your pieces around fast.

00:17:54.580 --> 00:17:56.740
Or if you want to be more thoughtful, just slow down.

00:17:56.740 --> 00:18:01.060
And the game runs as fast basically as you need it to.

00:18:01.060 --> 00:18:06.580
And another thing that's fun about the combat is that A-Star algorithm that we mentioned earlier

00:18:06.580 --> 00:18:11.380
controls how, of course, all the monsters pass and stuff.

00:18:11.380 --> 00:18:16.840
What I wanted to do was have A-Star control their decisions, but I never got that done.

00:18:16.980 --> 00:18:22.160
So you can use A-Star not only to pass spatially, but you can pass through decisions.

00:18:22.160 --> 00:18:23.960
Like, they could say, what's my goal?

00:18:23.960 --> 00:18:24.760
To kill the player.

00:18:24.760 --> 00:18:25.080
Okay.

00:18:25.080 --> 00:18:27.460
What different actions can I do?

00:18:27.460 --> 00:18:31.020
And almost use those as spatial locations in A-Star.

00:18:31.020 --> 00:18:31.580
But I didn't do that.

00:18:31.580 --> 00:18:32.140
Oh, wow.

00:18:32.140 --> 00:18:32.700
I see.

00:18:32.700 --> 00:18:34.940
I hadn't really considered applying the algorithm that way.

00:18:34.940 --> 00:18:39.100
But if you've got, like, a decision tree that has different outcomes, you can use it.

00:18:39.100 --> 00:18:39.900
Yeah.

00:18:39.900 --> 00:18:40.620
To sort of put that together.

00:18:40.620 --> 00:18:40.920
Okay.

00:18:40.920 --> 00:18:41.560
Interesting.

00:18:41.560 --> 00:18:42.780
It's super cool.

00:18:42.780 --> 00:18:44.320
It's called planning, I believe.

00:18:44.320 --> 00:18:46.320
I had a friend who told me about it.

00:18:46.960 --> 00:18:47.880
I didn't come up with it.

00:18:47.880 --> 00:18:48.500
Yeah, that's cool.

00:18:48.500 --> 00:18:50.280
And I get to implement that.

00:18:50.280 --> 00:18:54.580
But that would be a future work for you guys at home.

00:18:54.580 --> 00:18:58.340
Each character, of course, has unique abilities in this game.

00:18:58.340 --> 00:19:02.520
So I wanted to avoid some of the common pitfalls of RPGs.

00:19:02.520 --> 00:19:04.980
Like, you have to level up and stuff like that.

00:19:04.980 --> 00:19:06.800
And you have to grind and all that stuff.

00:19:06.800 --> 00:19:07.300
Yeah.

00:19:07.520 --> 00:19:10.040
And then combat's impossible to balance, right?

00:19:10.040 --> 00:19:12.360
Because now you got to level 10.

00:19:12.360 --> 00:19:14.440
Well, the enemies are balanced for level 3.

00:19:14.440 --> 00:19:15.660
Well, how did you know that?

00:19:15.660 --> 00:19:17.960
Or maybe you're level 2 and the enemies are too hard.

00:19:17.960 --> 00:19:18.480
Well, how fun?

00:19:18.480 --> 00:19:19.400
That's not fun.

00:19:19.400 --> 00:19:22.900
So basically, if you think of a game like Advance Wars.

00:19:22.900 --> 00:19:25.200
Have you played Advance Wars?

00:19:25.200 --> 00:19:26.220
I haven't played it.

00:19:26.220 --> 00:19:26.620
No, sorry.

00:19:26.620 --> 00:19:27.780
How about Fire Emblem?

00:19:28.700 --> 00:19:31.000
No, I haven't played games for a little while.

00:19:31.000 --> 00:19:33.240
I used to play tons, but I haven't played them for a while.

00:19:33.240 --> 00:19:34.420
Oh, my God.

00:19:34.420 --> 00:19:35.720
Oh, my God.

00:19:35.720 --> 00:19:36.560
This guy works too hard.

00:19:36.560 --> 00:19:37.040
Okay.

00:19:37.040 --> 00:19:41.400
There's these great turn-based games, Fire Emblem and Advance Wars.

00:19:41.400 --> 00:19:44.340
And they're all Game Boy Advance games, I think.

00:19:44.340 --> 00:19:46.720
They're still making them now, some of them.

00:19:46.720 --> 00:19:50.320
They're all perfectly balanced because there's no levels or XP.

00:19:50.320 --> 00:19:54.000
And basically, they just lay out a scenario and you have to fight through it.

00:19:54.000 --> 00:19:55.420
And they all work.

00:19:56.020 --> 00:19:59.940
That's kind of the goal with the different characters and their different abilities with me.

00:19:59.940 --> 00:20:08.380
So there's no XP, but I can balance encounters perfectly because, or as hard as I wanted to make them, at least.

00:20:08.380 --> 00:20:14.660
Basically, I set down the characters and I set down all the monsters and I know their stats exactly and all their abilities.

00:20:14.660 --> 00:20:17.860
And each of the characters have different ways to solve problems.

00:20:17.860 --> 00:20:23.020
Like, you got your tank guy who can deal damage and receive damage.

00:20:23.240 --> 00:20:26.040
And you have characters with really different AOEs.

00:20:26.040 --> 00:20:28.020
And you have a character who can set traps.

00:20:28.020 --> 00:20:29.180
Yeah, nice.

00:20:29.180 --> 00:20:31.060
A character who has more, like, utility stuff.

00:20:31.060 --> 00:20:35.300
So different abilities have to complement each other.

00:20:35.300 --> 00:20:35.700
Sure.

00:20:35.700 --> 00:20:40.900
And I like the way that you balanced it because that is one of the hardest parts of creating a game.

00:20:40.900 --> 00:20:44.080
It's creating it in a way that is challenging but not frustrating.

00:20:44.080 --> 00:20:46.640
And I think that's really, really, really cool.

00:20:46.640 --> 00:20:48.000
I totally agree.

00:20:48.000 --> 00:21:02.260
This portion of Talk Python Deme is brought to you by Hired.

00:21:02.260 --> 00:21:05.280
Hired is the platform for top Python developer jobs.

00:21:05.280 --> 00:21:10.100
Create your profile and instantly get access to 3,500 companies who will work to compete with you.

00:21:10.100 --> 00:21:12.960
Take it from one of Hired's users who recently got a job and said,

00:21:12.960 --> 00:21:18.260
I had my first offer on Thursday after going live on Monday and I ended up getting eight offers in total.

00:21:18.260 --> 00:21:21.720
I've worked with recruiters in the past, but they've always been pretty hit and miss.

00:21:21.720 --> 00:21:24.560
I tried LinkedIn, but I found Hired to be the best.

00:21:24.560 --> 00:21:26.640
I really like knowing the salary up front.

00:21:26.640 --> 00:21:29.020
Privacy was also a huge seller for me.

00:21:29.020 --> 00:21:30.700
Sounds awesome, doesn't it?

00:21:30.700 --> 00:21:32.700
Well, wait until you hear about the sign-in bonus.

00:21:32.700 --> 00:21:36.120
Everyone who accepts a job from Hired gets $1,000 sign-in bonus.

00:21:36.400 --> 00:21:38.780
And as Talk Python listeners, it gets way sweeter.

00:21:38.780 --> 00:21:44.020
Use the link Hired.com slash Talk Python To Me and Hired will double the signing bonus to $2,000.

00:21:44.020 --> 00:21:45.820
Opportunities knocking.

00:21:45.820 --> 00:21:49.580
Visit Hired.com slash Talk Python To Me and answer the door.

00:21:49.580 --> 00:21:57.500
Let's talk about your Reddit post.

00:21:57.920 --> 00:22:01.460
So you wrote a post on Reddit that was super popular.

00:22:01.460 --> 00:22:03.840
You wrote it and the title was,

00:22:03.840 --> 00:22:10.340
How I Built an Entire Game and Tool Chain 100% in Python Using Pygame.

00:22:10.340 --> 00:22:14.660
And it got 894, more than that, over 894 upvotes.

00:22:14.660 --> 00:22:15.280
I know.

00:22:15.280 --> 00:22:16.660
I was so excited.

00:22:16.660 --> 00:22:18.420
People love their Python.

00:22:18.420 --> 00:22:19.160
What can I say?

00:22:19.160 --> 00:22:20.100
I love it too.

00:22:21.100 --> 00:22:25.620
Well, you know what I think is interesting is, like, if you said, if you wrote a post that said,

00:22:25.620 --> 00:22:33.920
how I created an entire game world in C++ or how I did it all in Objective-C and I put it on the iPad,

00:22:33.920 --> 00:22:36.880
it's like, well, okay, yeah, that's what people do.

00:22:36.880 --> 00:22:40.140
Yeah, that's very normal.

00:22:40.140 --> 00:22:51.780
It's that people love Python and experiences like you're having are just pushing it just a little bit out of its comfort zone of building data-driven web apps and data science tooling and things like that.

00:22:51.780 --> 00:22:58.720
And I think it really unleashes the creativity and, you know, the idea is like, oh, I could do that too in Python.

00:22:58.720 --> 00:22:59.220
How cool.

00:22:59.220 --> 00:23:00.560
You're absolutely right.

00:23:00.560 --> 00:23:02.180
And you absolutely can do that.

00:23:02.180 --> 00:23:11.820
Like, Python is, as long as you keep the scope of your game down, something simple like I did, it is totally very well-equipped to help you write your game.

00:23:11.820 --> 00:23:19.780
And it feels like an act of expression rather than an act of hooking boilerplate, you know, layers of code together.

00:23:19.780 --> 00:23:20.140
Yeah.

00:23:20.140 --> 00:23:23.000
You're actually, you feel like you're writing a game again.

00:23:23.000 --> 00:23:26.840
You write less so that the joy is more apparent, maybe?

00:23:26.840 --> 00:23:32.160
Yeah, you write less and you write the stuff that has the logic bits that are game bits.

00:23:32.160 --> 00:23:32.700
Basically.

00:23:32.700 --> 00:23:35.200
And it's quite a good experience.

00:23:35.200 --> 00:23:37.000
I recommend picking up Pygame.

00:23:37.000 --> 00:23:40.280
And even if you want to make Pong, you know, just make something.

00:23:40.280 --> 00:23:40.800
It can be fun.

00:23:40.800 --> 00:23:41.160
Okay.

00:23:41.160 --> 00:23:41.840
Interesting.

00:23:41.840 --> 00:23:46.940
So we talked about why you got interested in Python and why you thought it was really cool.

00:23:46.940 --> 00:23:53.480
But what made you say, okay, I can actually use Python to write this game before you had the experience of doing it?

00:23:53.480 --> 00:23:54.420
Well, I didn't know.

00:23:54.420 --> 00:23:55.380
I didn't know.

00:23:55.380 --> 00:23:58.520
So I wrote, first I wrote that little program.

00:23:58.520 --> 00:23:59.920
I can't even remember what I did.

00:23:59.920 --> 00:24:01.140
I need to automate some process.

00:24:01.140 --> 00:24:02.040
And I wrote it in Python.

00:24:02.040 --> 00:24:03.320
I was like, oh, that's really impressive.

00:24:03.320 --> 00:24:05.520
I wrote it in so few lines of code.

00:24:05.520 --> 00:24:09.220
Next, I said, well, you know, I love 16 color graphics.

00:24:09.220 --> 00:24:11.480
You know, real 80s style stuff.

00:24:11.480 --> 00:24:17.780
Most people, it's like they're trying to be retro, but they kind of push it past what retro actually would have done, which is fine.

00:24:17.780 --> 00:24:20.880
But I actually wanted true, like, 16 color stuff.

00:24:21.260 --> 00:24:23.700
So I wrote a paint program in Python.

00:24:23.700 --> 00:24:27.840
And this paint program could only paint 16 colors.

00:24:27.840 --> 00:24:31.020
And it would also allow you to animate your sprites and stuff like that.

00:24:31.020 --> 00:24:33.820
And after I wrote this paint program, it was an experiment.

00:24:33.820 --> 00:24:35.520
I didn't know I was going to write the whole game.

00:24:35.640 --> 00:24:36.640
It's like, you know, I'll start.

00:24:36.640 --> 00:24:37.920
I'll write a paint program.

00:24:37.920 --> 00:24:41.060
And after I wrote the paint program, I was like, you know what?

00:24:41.720 --> 00:24:43.040
I'm going to write a map editor.

00:24:43.040 --> 00:24:45.580
And I think I'm going to probably write a whole game.

00:24:45.580 --> 00:24:49.100
So kind of a long way of answering your question.

00:24:49.100 --> 00:24:49.660
Yeah, I know.

00:24:49.660 --> 00:24:52.100
It's like you just said, well, maybe it's possible.

00:24:52.100 --> 00:24:52.800
Let's see.

00:24:52.800 --> 00:24:53.900
And let's get started.

00:24:53.900 --> 00:24:54.120
Yeah.

00:24:54.120 --> 00:24:54.480
Yeah.

00:24:54.480 --> 00:24:55.180
That's what it was.

00:24:55.260 --> 00:24:58.960
So the first thing that you said, well, if I'm going to create this world that we described

00:24:58.960 --> 00:25:05.380
in the beginning, and it's going to be this retro world with 16-bit and this kind of music

00:25:05.380 --> 00:25:09.660
and so on, you said, all right, the first thing I'm going to need to be able to do is

00:25:09.660 --> 00:25:15.480
basically issue commands to the game engine or the tool chain and so on.

00:25:15.480 --> 00:25:24.940
So you built basically a command line interface or almost like a REPL, like a console for your

00:25:24.940 --> 00:25:26.820
set of tools and your game, right?

00:25:26.820 --> 00:25:27.480
Yes.

00:25:27.480 --> 00:25:30.900
And I would recommend doing so for anyone, any hobbyist.

00:25:30.900 --> 00:25:35.720
Basically, even before the paint program, you know, I knew if I was going to write any tools,

00:25:35.720 --> 00:25:38.940
I would need to be able to issue commands for it.

00:25:38.940 --> 00:25:43.120
And there's UI toolkits out there and you can use whatever you want.

00:25:43.240 --> 00:25:45.940
But I wanted real fast iteration.

00:25:45.940 --> 00:25:48.300
And there's really nothing as fast as typing.

00:25:48.300 --> 00:25:54.700
I mean, mousing around, picking stuff off menus, not really that fast and not really that flexible.

00:25:54.700 --> 00:26:00.360
And every time you want to add something to your menu, you have to deal with all that UI work.

00:26:00.360 --> 00:26:05.680
Whereas the old school style typing, you can add a new command to your program pretty easily.

00:26:05.680 --> 00:26:11.440
I wrote this little console in Pygame that all that you do was type into the console and you

00:26:11.440 --> 00:26:15.100
could hit enter or, you know, delete, you know, whatever you want in terms of that.

00:26:15.100 --> 00:26:16.560
And that was it.

00:26:16.560 --> 00:26:18.960
It didn't do anything in and of itself.

00:26:18.960 --> 00:26:23.480
But every other tool I made and the game itself, if you play it, will use it.

00:26:23.480 --> 00:26:27.400
So if you play the game, on the very bottom of the game screen, you see things printing out like,

00:26:27.400 --> 00:26:30.480
oh, you move north or, oh, you talk to this guy and it'll print out.

00:26:30.480 --> 00:26:31.340
That's all the console.

00:26:31.340 --> 00:26:32.560
It's working.

00:26:32.560 --> 00:26:34.360
It asks you, do you want to save?

00:26:34.360 --> 00:26:35.060
Yes or no?

00:26:35.060 --> 00:26:35.420
You know?

00:26:35.420 --> 00:26:35.980
Yeah.

00:26:36.100 --> 00:26:36.580
Oh, that's cool.

00:26:36.580 --> 00:26:37.880
It's still doing its job.

00:26:37.880 --> 00:26:38.960
It's a hard worker.

00:26:38.960 --> 00:26:40.020
Oh, that's, yeah.

00:26:40.020 --> 00:26:43.440
That's really cool that you get to, you reuse it even into the gameplay.

00:26:43.440 --> 00:26:44.120
That's great.

00:26:44.120 --> 00:26:45.580
So you have this paint program.

00:26:45.580 --> 00:26:46.860
Yeah, you have the paint program.

00:26:46.860 --> 00:26:51.100
And because it's really 16-bit, there's like 16 choices for colors.

00:26:51.100 --> 00:26:54.720
So you click on the color you want and then you've got kind of a square.

00:26:54.940 --> 00:26:58.720
And it's almost like building icons, I felt like.

00:26:58.720 --> 00:27:03.420
It kind of felt like an icon editor because the size and resolution of things.

00:27:03.420 --> 00:27:05.080
You also had a map editor.

00:27:05.080 --> 00:27:06.920
And I thought the map editor was pretty cool.

00:27:06.920 --> 00:27:08.500
That was also in Pi Game, right?

00:27:08.500 --> 00:27:10.400
Yeah, I have that open right here.

00:27:10.400 --> 00:27:13.340
So the paint program was 16 colors.

00:27:13.340 --> 00:27:15.700
So more like 4-bit, even before 16.

00:27:15.700 --> 00:27:17.640
Yeah, right.

00:27:17.640 --> 00:27:18.380
Of course, yeah.

00:27:18.380 --> 00:27:18.680
16-bit.

00:27:18.680 --> 00:27:20.000
16-color 4-bit, yeah.

00:27:20.000 --> 00:27:23.820
I think the graphics are about the year 1984 with this game.

00:27:23.940 --> 00:27:27.120
So quite a bit before Super NES and those things.

00:27:27.120 --> 00:27:27.760
Pretty retro.

00:27:27.760 --> 00:27:30.680
The map editor was next.

00:27:30.680 --> 00:27:38.000
And of course, now that I had the ability to paint tiles, basically, laying out the tiles gives you a map.

00:27:38.000 --> 00:27:41.700
And at the bottom of my map editor was our friend the console.

00:27:41.700 --> 00:27:46.800
And at the side, I made a palette of different tiles you could choose from.

00:27:46.800 --> 00:27:51.380
Of course, I ended up writing, painting quite a lot of tiles for the game.

00:27:51.740 --> 00:27:53.740
It ended up being kind of my hobby.

00:27:53.740 --> 00:27:58.340
I don't know exactly how many, but I'm going to open the folder of game assets.

00:27:58.340 --> 00:28:01.200
And I'll tell you how many things I made with this paint program.

00:28:01.200 --> 00:28:01.500
Sure.

00:28:01.500 --> 00:28:05.560
Okay, 826 items were made with this paint program.

00:28:06.040 --> 00:28:10.300
Like little wolves and brick walls and stone walls and water.

00:28:10.300 --> 00:28:15.060
And by the way, this is kind of a visual thing that we're doing over audio, which is tough.

00:28:15.060 --> 00:28:23.520
But in the Reddit post as well as in the show notes, you can link to the screenshots for all these tools that Joseph built and so on.

00:28:23.600 --> 00:28:24.820
So you'll be able to pull them up.

00:28:24.820 --> 00:28:27.340
Yeah, please go ahead and check out that Reddit post.

00:28:27.340 --> 00:28:30.220
It has a screenshot of this map editor.

00:28:30.220 --> 00:28:32.140
Although it's a pretty basic map editor.

00:28:32.140 --> 00:28:35.940
It's definitely something you can consider writing yourself.

00:28:35.940 --> 00:28:40.020
Even if it's just for educational purposes, it's fun to write a map editor, right?

00:28:40.020 --> 00:28:40.800
Yeah, for sure.

00:28:40.800 --> 00:28:42.980
And to save load, I used Pickle.

00:28:43.460 --> 00:28:47.540
So it's just, I mean, Pickle, you know, obviously it's not 100% secure.

00:28:47.540 --> 00:28:51.180
If someone gives you a Pickle file and you open it, it might blow your computer up.

00:28:51.180 --> 00:28:52.500
But, you know, don't do that.

00:28:52.500 --> 00:28:53.580
And you're okay.

00:28:53.580 --> 00:28:54.360
Yeah.

00:28:54.360 --> 00:28:58.320
I didn't write any saving and loading code at all for this program.

00:28:58.320 --> 00:28:59.360
I just used Pickle.

00:28:59.360 --> 00:29:00.540
I was just like, whatever.

00:29:00.540 --> 00:29:08.000
Yeah, just basically take the memory structure of the Python objects and just stash them binary to disk and then pull them back up, right?

00:29:08.000 --> 00:29:09.700
That's more or less the idea.

00:29:09.700 --> 00:29:12.600
Yeah, it's perfectly fast for a game like this, right?

00:29:12.740 --> 00:29:14.000
It's perfectly fine.

00:29:14.000 --> 00:29:18.260
And if you write a lot of games, you know saving and loading is a thing.

00:29:18.260 --> 00:29:19.560
I mean, you have to deal with it.

00:29:19.560 --> 00:29:22.000
And I just pickled a bunch of Python dictionaries.

00:29:22.000 --> 00:29:24.980
And the first thing in the dictionary was the version, right?

00:29:24.980 --> 00:29:27.260
Okay, this is version 1.0 of my save.

00:29:27.260 --> 00:29:32.320
And the reason versioning is important is because, say, I passed the game and I did patch the game.

00:29:32.320 --> 00:29:35.120
You want to up version everyone's save files.

00:29:35.120 --> 00:29:41.520
You don't want to have people have to start over because you decided to drop a new version.

00:29:41.720 --> 00:29:45.700
And even for me, when I'm debbing it, I mean, there's probably like seven or eight versions of the saves.

00:29:45.700 --> 00:29:49.040
I don't want to have to remake all my saves.

00:29:49.040 --> 00:29:54.760
So it's important that your save loader be able to filter up old versions of saves, even from the very beginning.

00:29:54.920 --> 00:30:01.180
So I can take a, you know, three-year-old version of Epicos and just load up the characters from it and play the game.

00:30:01.180 --> 00:30:03.840
And that's just all using Python dictionaries.

00:30:03.840 --> 00:30:05.200
First thing in the dictionary is a version.

00:30:05.200 --> 00:30:10.660
And then everything else is, you know, what characters you talk to, what items you had, where you are in the world.

00:30:10.660 --> 00:30:11.380
Yeah, okay.

00:30:11.520 --> 00:30:15.400
And the map editor uses the same tech as the game, so pickling and unpickling.

00:30:15.400 --> 00:30:19.840
And I think I did some light compression because the map's got a little too big for pickle to handle.

00:30:19.840 --> 00:30:22.640
So I compressed before I pickled.

00:30:22.640 --> 00:30:24.840
But it's all in the realm of Python.

00:30:24.840 --> 00:30:28.240
No C stuff is going on here at all.

00:30:28.240 --> 00:30:33.580
And the map editor, basically, it lets you choose what category of object you want.

00:30:33.640 --> 00:30:42.760
So I grouped things, like you can work on natural objects or things in doors or things in caves or monsters or whatever you want to work.

00:30:42.760 --> 00:30:44.160
And you just paint them out with the mouse.

00:30:44.160 --> 00:30:45.700
This tool does use the mouse.

00:30:45.700 --> 00:30:48.280
I feel like for painting, the mouse is a great tool.

00:30:48.280 --> 00:30:52.080
And it lets you zoom in and out with the wheel and all that stuff.

00:30:52.080 --> 00:30:52.900
Yeah, it makes a lot of sense.

00:30:52.900 --> 00:30:57.620
So this world is pretty immense and you can walk around from place to place.

00:30:57.620 --> 00:31:01.000
Did you, like, sketch this out on paper?

00:31:01.680 --> 00:31:08.280
Like, how did you go to designing, like, the larger world and then connecting it to what you actually do in the tools, like in the editor?

00:31:08.280 --> 00:31:10.260
I did sketch the world out on paper.

00:31:10.260 --> 00:31:14.500
But for the tools, first I sort of, like, I still wasn't totally convinced.

00:31:14.500 --> 00:31:16.040
Like, oh, can I build this whole game?

00:31:16.040 --> 00:31:19.080
So I just made a little house in the map editor, right?

00:31:19.080 --> 00:31:21.940
A little house with some windows.

00:31:21.940 --> 00:31:24.540
So I have a little fireplace and some candles.

00:31:24.540 --> 00:31:27.000
And if you play the game, this is where the game starts.

00:31:27.000 --> 00:31:29.720
So the first scene you'll see is this house.

00:31:29.720 --> 00:31:33.720
But interestingly, that's the first map I made.

00:31:33.720 --> 00:31:37.120
And I just made a little house for fun.

00:31:38.740 --> 00:31:42.460
And after I made that, I was pretty convinced I could make a big world.

00:31:42.460 --> 00:31:45.280
You know, I made some other medium-sized things first.

00:31:45.280 --> 00:31:46.520
I didn't go for the overworld.

00:31:46.520 --> 00:31:53.580
I made some towns, which are, like, you know, bigger than the house, but not really huge.

00:31:53.580 --> 00:31:56.020
And then I decided to make the game world.

00:31:56.020 --> 00:31:58.140
And as you said, I sketched it out on paper.

00:31:58.480 --> 00:32:00.180
I planned the whole game out.

00:32:00.180 --> 00:32:02.520
So if you can imagine, I wrote a plot.

00:32:02.520 --> 00:32:06.920
So I knew where everything had to be roughly.

00:32:07.720 --> 00:32:15.340
This is impossible in a game with multiple people programming it or designing it because, you know, different people come up with different things, which is fine.

00:32:15.340 --> 00:32:22.380
But if you're doing a one-man show like I did, you can plan stuff out and you can stick to your plan if you force yourself hard enough.

00:32:22.380 --> 00:32:23.820
And then it's all planned out.

00:32:23.820 --> 00:32:27.920
So you can kind of almost sketch it on a paper and stick with that sketch.

00:32:28.120 --> 00:32:31.220
And I think I still have the paper around here, but I'm not going to look for it.

00:32:31.220 --> 00:32:31.640
Yeah, sure.

00:32:31.640 --> 00:32:32.260
That's really cool.

00:32:32.260 --> 00:32:33.120
You know, for the whole time.

00:32:33.120 --> 00:32:33.700
Nice.

00:32:33.700 --> 00:32:45.040
So we talked a little bit about some of the things in the game in terms of the algorithms and what it took to build, like how you save and load, the A-star algorithm for Path and AI.

00:32:45.040 --> 00:32:51.240
But can we maybe talk about in general, like, what's it like to write a game for Pygame?

00:32:51.240 --> 00:32:52.760
I've looked at Pygame a little bit.

00:32:52.760 --> 00:32:54.360
I haven't really written too many games.

00:32:54.460 --> 00:32:57.880
The last time I wrote something, it was 3D and then OpenGL.

00:32:57.880 --> 00:33:03.520
And it was more of a simulation than a game for something I was actually working on at a job.

00:33:03.520 --> 00:33:04.860
Oh, wow.

00:33:04.860 --> 00:33:05.160
Yeah.

00:33:05.160 --> 00:33:12.000
So I remember what it's like to write those types of things in, say, C++ and OpenGL or DirectX.

00:33:12.000 --> 00:33:14.440
You know, you've got kind of like an animation loop.

00:33:14.440 --> 00:33:15.980
You run your AI step.

00:33:15.980 --> 00:33:18.120
You run a rendering step.

00:33:18.120 --> 00:33:20.260
You do very, you know, process input.

00:33:20.260 --> 00:33:22.580
Like, what does it look like to write in Pygame?

00:33:22.580 --> 00:33:24.240
Like, how does that compare?

00:33:24.780 --> 00:33:26.200
It's very simple, actually.

00:33:26.200 --> 00:33:29.940
It's good or bad, depending on how you use it.

00:33:29.940 --> 00:33:31.200
So Pygame is simple.

00:33:31.200 --> 00:33:33.100
It doesn't give you much.

00:33:33.100 --> 00:33:38.640
So scope your project to playing to Pygame's strength, and you'll be very happy.

00:33:38.640 --> 00:33:43.860
If you scope your project to trying to do things Pygame can't do, don't use Pygame.

00:33:43.860 --> 00:33:45.120
You'll be less happy.

00:33:45.120 --> 00:33:51.860
Basically, it gives you, yeah, you have to, you know, you have to use, you know, I wanted to use Pygame because it was pure Python.

00:33:52.580 --> 00:33:57.140
What the code looks like is you're pretty much normal game loop controls everything.

00:33:57.540 --> 00:34:09.700
So in most 3D games or other games I've worked at, you know, at some point in the program, there's a loop, and the loop does something on the, something like, take input from, you know, first part of the loop.

00:34:09.700 --> 00:34:12.880
Take input from the keyboard or from the mouse or controller.

00:34:12.880 --> 00:34:14.420
Second part of the loop.

00:34:14.420 --> 00:34:15.440
Draw the screen.

00:34:15.440 --> 00:34:17.140
Third part of the loop.

00:34:17.140 --> 00:34:19.400
Run all the AI for all the characters.

00:34:20.180 --> 00:34:24.080
And then you're done, and then it loops again, and it draws the next frame of the game.

00:34:24.080 --> 00:34:28.960
And this is more or less how a lot of games are written.

00:34:28.960 --> 00:34:32.920
Of course, you could say, oh, what about networking and all these other features?

00:34:32.920 --> 00:34:33.680
Yeah, sure.

00:34:33.680 --> 00:34:36.640
I mean, that could be in the loop or probably not.

00:34:36.640 --> 00:34:39.500
It's probably interrupt-driven or some other messaging system.

00:34:39.500 --> 00:34:43.400
But for me, it was basically a very simple game loop.

00:34:43.400 --> 00:34:44.500
Take input.

00:34:44.500 --> 00:34:46.000
Draw the screen.

00:34:46.000 --> 00:34:47.300
Run the AI.

00:34:47.300 --> 00:34:48.360
That's it.

00:34:48.520 --> 00:34:53.060
And drawing the screen, of course, I'm not sure if any of those bits you want me to elaborate on,

00:34:53.060 --> 00:34:57.700
but that's generally what the game loop should look like for Pygame, I would say.

00:34:57.700 --> 00:35:03.480
Yeah, I think that's, I mean, we don't want to go too deep in code on audio, but at the same time,

00:35:03.480 --> 00:35:06.040
I want to give people a sense for what does it look like?

00:35:06.040 --> 00:35:13.160
What pieces do you put in there, and what pieces does the framework itself, what does Pygame itself support, you know?

00:35:13.160 --> 00:35:15.380
So, yeah, that's really cool.

00:35:15.580 --> 00:35:18.860
You know, you talked about making a plan.

00:35:18.860 --> 00:35:20.560
It lets you draw sprites, and that's it.

00:35:20.560 --> 00:35:21.960
That's all it does.

00:35:21.960 --> 00:35:23.300
Sprite goes here, sprite goes there.

00:35:23.300 --> 00:35:23.580
Awesome.

00:35:23.580 --> 00:35:27.940
Yeah, so one thing that I thought was interesting that you talked about.

00:35:27.940 --> 00:35:28.540
Yeah, that's all it does, literally.

00:35:28.800 --> 00:35:35.600
Yeah, one thing you talked about I thought was interesting and really a powerful message was how long it took you

00:35:35.600 --> 00:35:39.280
and sort of your process for getting the game done, right?

00:35:39.280 --> 00:35:40.640
I mean, this is a lot of stuff.

00:35:40.640 --> 00:35:41.580
You're building a lot of apps.

00:35:41.580 --> 00:35:42.920
You're building a console system.

00:35:42.920 --> 00:35:46.580
You're building a paint program, a map editor, file format, AI.

00:35:46.820 --> 00:35:52.560
I mean, there's a lot of things to do just to have the game, and then you've got to, like, build websites and market it.

00:35:52.560 --> 00:35:57.100
So why don't you tell us about how long it took and kind of, like, how you stayed on track?

00:35:57.100 --> 00:36:00.560
It took, I think, about two years to make the game.

00:36:00.560 --> 00:36:04.100
I was also working a full-time job during this.

00:36:04.100 --> 00:36:05.440
Yeah, that's a lot of work.

00:36:05.500 --> 00:36:06.020
No excuses.

00:36:06.020 --> 00:36:06.560
I'm working.

00:36:06.560 --> 00:36:07.140
I can't do it.

00:36:07.140 --> 00:36:07.640
You can do it.

00:36:07.640 --> 00:36:07.880
I don't know.

00:36:07.880 --> 00:36:08.580
You just can't do it.

00:36:08.580 --> 00:36:11.680
Yeah, I mean, if you come home, like, on any project, if...

00:36:11.680 --> 00:36:12.500
Well, I'm working, but it's work.

00:36:12.500 --> 00:36:13.040
Yeah, absolutely.

00:36:13.040 --> 00:36:18.240
On a project like that, if you say, look, I'm going to take and just dedicate an hour a day.

00:36:18.240 --> 00:36:26.100
Maybe not every single day will that work, but if your plan is, I'm just going to do a little bit every day, you know, you can do it, I think,

00:36:26.100 --> 00:36:29.100
is maybe one of the messages that you were carrying there.

00:36:29.100 --> 00:36:30.100
Yeah, yeah, absolutely.

00:36:30.100 --> 00:36:31.160
You can totally do it.

00:36:31.160 --> 00:36:31.800
Do what I did.

00:36:31.800 --> 00:36:35.360
Say, I'm going to program my Python for 15 minutes today.

00:36:35.520 --> 00:36:36.660
Just 15 minutes.

00:36:36.660 --> 00:36:38.440
Then you can probably do that.

00:36:38.440 --> 00:36:42.960
And then even if you're scared or you're having creative block, just do that.

00:36:42.960 --> 00:36:46.460
And then next day you have to say, well, now I have to do 20 minutes.

00:36:46.460 --> 00:36:49.620
And eventually you can see where this is going.

00:36:49.620 --> 00:36:52.040
Pretty soon you're doing it for an hour a week.

00:36:52.040 --> 00:36:55.000
You can just do it for an hour for a couple weeks and then two hours.

00:36:55.000 --> 00:36:56.840
Once you're at two hours, you're done.

00:36:56.840 --> 00:36:58.360
Just do it two hours a day.

00:36:58.360 --> 00:37:04.180
And if you're in that habit of doing two hours a day, you'll want to do it more because you'll be in such a good habit

00:37:04.180 --> 00:37:07.460
that over the weekends you'll do six or seven hours, right?

00:37:07.460 --> 00:37:11.900
If you have whatever D&D with your friends, you go over to your friend's house and play D&D.

00:37:11.900 --> 00:37:15.120
Don't just lock yourself in your room and only program Python.

00:37:15.120 --> 00:37:21.040
But you'll want to program a lot if you're in a good habit because it'll just be normal for you.

00:37:21.040 --> 00:37:21.820
It won't be weird.

00:37:21.820 --> 00:37:23.980
You have to get over it not being normal.

00:37:23.980 --> 00:37:25.900
Yeah, you do have to make a habit out of it.

00:37:25.900 --> 00:37:26.860
I think that's important.

00:37:27.020 --> 00:37:31.660
Whether it's a game or a website you're trying to launch or an app or anything, right?

00:37:31.660 --> 00:37:35.240
But if you're going to create something that is long-term like this, you definitely have to make it a habit.

00:37:35.240 --> 00:37:40.700
And I also think seeing success encourages you to keep going because you're excited.

00:37:40.700 --> 00:37:42.000
You're like, look what I did last week.

00:37:42.000 --> 00:37:43.080
I'm going to totally do this.

00:37:43.080 --> 00:37:45.040
Think how far it'll be next week, right?

00:37:45.040 --> 00:37:45.880
And you just keep going.

00:37:45.880 --> 00:37:46.940
Yeah, absolutely.

00:37:46.940 --> 00:37:51.160
If you don't see any fun stuff coming out of it, it can feel really burdensome.

00:37:51.360 --> 00:37:53.340
So start with something small.

00:37:53.340 --> 00:37:54.300
Start with your paint program.

00:37:54.300 --> 00:37:55.680
Don't start with the whole game.

00:37:55.680 --> 00:37:58.220
And then at least you can say, well, I made a paint program.

00:37:58.220 --> 00:38:03.820
Even if that's all you do and that's as far as you get before giving up, at least you have that.

00:38:03.820 --> 00:38:05.040
Yeah, that's really cool.

00:38:05.040 --> 00:38:10.740
You also talked a little bit about running into bottlenecks and helping yourself get over those.

00:38:10.740 --> 00:38:14.020
What are some of the bottlenecks that you hit trying to go through this project?

00:38:14.020 --> 00:38:17.440
Well, none of it really had to do with Python, luckily.

00:38:17.440 --> 00:38:18.940
So there's that.

00:38:18.940 --> 00:38:21.000
And the Python code never got complicated.

00:38:21.740 --> 00:38:23.340
Never got boilerplate-y.

00:38:23.340 --> 00:38:25.380
It was always small and trim.

00:38:25.380 --> 00:38:32.600
The main bottleneck for Epicos specifically was I never wrote a tool for the cinematics.

00:38:32.600 --> 00:38:36.120
So for the non-interactive conversations.

00:38:36.120 --> 00:38:43.180
So if you've ever played Final Fantasy, one of the early ones, like four or five, people talk to each other.

00:38:43.180 --> 00:38:44.720
And it's totally scripted.

00:38:44.720 --> 00:38:46.620
And it's fun to watch.

00:38:46.620 --> 00:38:49.740
I wanted a real bit of that experience in my game.

00:38:49.820 --> 00:38:53.860
And I thought, oh, there's only going to be a few of these conversations in the game.

00:38:53.860 --> 00:38:56.100
And then there ended up being like, you know, hundreds.

00:38:56.100 --> 00:39:07.720
And basically, like, probably, like, if you imagine the game took two years, like, a fourth of that is probably writing these cinematic scripts.

00:39:08.200 --> 00:39:12.640
And they just got more and more and more complicated because I would always try to do better, right?

00:39:12.640 --> 00:39:14.700
I would say, well, I did that before.

00:39:14.700 --> 00:39:15.300
I have to do better.

00:39:15.300 --> 00:39:16.880
This script has to have an earthquake in it.

00:39:16.880 --> 00:39:19.840
Or it has to have a new font show up magically.

00:39:19.840 --> 00:39:21.200
You never saw this font before.

00:39:21.200 --> 00:39:22.820
And it's going to look really magical.

00:39:22.820 --> 00:39:26.520
Or this, you know, this one has to start playing sounds.

00:39:26.640 --> 00:39:28.820
And then I have scripts that are playing sound.

00:39:28.820 --> 00:39:31.540
I'm like, well, now I have to add sounds to all my previous ones.

00:39:31.540 --> 00:39:32.260
Or they sound dumb.

00:39:32.260 --> 00:39:34.380
You know, they feel dumb because I'm like, where is the sound?

00:39:34.920 --> 00:39:40.820
So I basically ended up writing this scripting language that sits on top of Python to do all my cinematics.

00:39:40.820 --> 00:39:42.540
And it worked.

00:39:42.540 --> 00:39:44.020
Like, it chipped.

00:39:44.020 --> 00:39:45.640
But it was just not ideal.

00:39:45.640 --> 00:39:50.600
And what I should have done was write something like almost a movie editor.

00:39:50.600 --> 00:39:55.480
Or you can imagine, like, a tool where you would scrub through a scene.

00:39:55.480 --> 00:39:55.900
Right.

00:39:55.900 --> 00:39:57.960
It was almost a multi-track thing.

00:39:57.960 --> 00:39:59.280
Kind of like animating it mild.

00:39:59.280 --> 00:39:59.840
Yeah.

00:39:59.840 --> 00:40:00.400
Yeah, absolutely.

00:40:00.400 --> 00:40:01.360
Exactly.

00:40:01.360 --> 00:40:02.900
Like track editing.

00:40:02.900 --> 00:40:04.120
And I should have done that.

00:40:04.180 --> 00:40:05.180
And I didn't.

00:40:05.180 --> 00:40:10.540
So I think the lesson is make sure you have the tools before you dive in too deeply.

00:40:10.540 --> 00:40:11.160
Right.

00:40:11.160 --> 00:40:12.260
I did that mostly.

00:40:12.260 --> 00:40:13.340
And I didn't do it enough.

00:40:13.340 --> 00:40:14.860
Yeah.

00:40:14.860 --> 00:40:20.560
So one thing that I think is interesting, shifting gears a little bit, you built your game and you want to get it to people.

00:40:20.560 --> 00:40:21.300
Yeah.

00:40:21.300 --> 00:40:26.320
One thing I think is interesting that is more difficult than it should be in Python.

00:40:26.320 --> 00:40:28.260
And there's interesting projects working on it.

00:40:28.260 --> 00:40:30.860
You use some that we're talking about and we will.

00:40:30.860 --> 00:40:33.340
There's as well as some others.

00:40:33.440 --> 00:40:44.140
Is getting your Python code in your application sent to somebody who can run it like an application rather than like, here's a bunch of scripts.

00:40:44.140 --> 00:40:45.840
Make sure you have these packages installed.

00:40:45.840 --> 00:40:46.080
Yeah.

00:40:46.080 --> 00:40:46.700
Right.

00:40:46.780 --> 00:40:49.740
So how do you go about shipping and packaging up the game?

00:40:49.740 --> 00:40:51.680
So I tried everything.

00:40:51.680 --> 00:40:55.300
And the answer was this was a pretty technically challenging thing.

00:40:55.300 --> 00:40:58.140
It wasn't just your typical happy Python coding.

00:40:58.140 --> 00:40:59.900
It was just like, oh, how am I going to do this?

00:41:00.260 --> 00:41:01.640
I tried kind of everything.

00:41:01.640 --> 00:41:09.180
And what I ended up using was I couldn't get Py2EXU to work, which is people's normal route.

00:41:09.180 --> 00:41:11.560
You know, let me open up my little script.

00:41:11.820 --> 00:41:11.960
Yeah.

00:41:11.960 --> 00:41:17.960
One of the other projects that comes to mind that I think is interesting is the Beware project.

00:41:17.960 --> 00:41:26.780
And they're working on ways to package up apps that work good for OS X, for Linux, for Windows, things like that.

00:41:26.780 --> 00:41:29.160
And so, but this is a new project coming along.

00:41:29.160 --> 00:41:30.840
I think we'll get there.

00:41:30.840 --> 00:41:38.600
But it's definitely a place where it's more challenging to, you know, create a thing that you deliver with no assumption of Python or anything.

00:41:38.600 --> 00:41:39.320
It's hard.

00:41:39.320 --> 00:41:41.700
I had to use something called PyInstaller.

00:41:41.700 --> 00:41:46.600
So, go, if you grab that, I'm telling you right here, it will work with PyGame.

00:41:46.600 --> 00:41:57.840
I believe Python 2.exe either doesn't work with PyGame or you have to spend, you know, days and days to get it to work and it's not really worth your time.

00:41:57.840 --> 00:41:59.820
So, I would say PyInstaller.

00:41:59.820 --> 00:42:06.640
Now, if you read that Reddit post, people will make better suggestions than PyInstaller, which is some of the beauty of Reddit, right?

00:42:06.640 --> 00:42:09.820
So, there's even better options out there if you read the post.

00:42:09.960 --> 00:42:13.620
But if you don't read the post, PyInstaller will work for you.

00:42:13.620 --> 00:42:24.100
And running that, basically, I was able to make my Python scripts into an .exe and then it was simply a matter of packing up the art assets with those.

00:42:24.100 --> 00:42:29.140
So, I have a distribution script, which I recommend everyone make.

00:42:29.140 --> 00:42:34.680
And basically, when you double-click on this script, it takes all your code and it builds in .exe and it builds in even an installer.

00:42:36.300 --> 00:42:42.420
So, basically, then you can give that to your friends rather than giving them a bunch of source code.

00:42:42.420 --> 00:42:42.900
That's right.

00:42:42.900 --> 00:42:46.500
I mean, on one hand, you've got to package up the Python game so it runs.

00:42:46.500 --> 00:42:50.980
But then you also have to package up that plus the assets into like an installer.

00:42:50.980 --> 00:42:56.060
So, an MSI on Windows, a PKG on OS X or something like this, right?

00:42:56.060 --> 00:42:58.120
So, it's not just one layer.

00:42:58.120 --> 00:42:59.020
It's several layers.

00:42:59.020 --> 00:42:59.600
Yeah, that takes time.

00:42:59.600 --> 00:43:00.580
Yeah, definitely.

00:43:00.580 --> 00:43:01.260
That's work.

00:43:01.260 --> 00:43:07.080
It's frustrating work as well, I think, because you have the thing you're trying to give to people finished.

00:43:07.080 --> 00:43:12.600
But you can't give it to them until you go through like this other step of like polishing this delivery.

00:43:12.600 --> 00:43:13.320
Exactly that.

00:43:13.320 --> 00:43:16.420
And it's different on every platform, of course.

00:43:16.420 --> 00:43:21.160
The good news on Linux is you assume people can unzip, you know, a TAR file.

00:43:21.160 --> 00:43:22.880
So, I just give a TAR file.

00:43:22.880 --> 00:43:25.300
Because I don't think Linux guys want an installer.

00:43:25.500 --> 00:43:27.840
Say, I want it in this directory here.

00:43:27.840 --> 00:43:28.960
It's like, okay, here you go.

00:43:28.960 --> 00:43:33.020
But I think Windows is a little bit more like different barrier of entry.

00:43:33.020 --> 00:43:37.140
So, you want to double click on it and it installs somewhere.

00:43:37.140 --> 00:43:40.200
You can say where that is or not, you know.

00:43:40.200 --> 00:43:40.940
Yeah, exactly.

00:43:40.940 --> 00:43:46.560
And I recommend not doing any tricks like with the registry like most programs do you install.

00:43:46.560 --> 00:43:49.180
Like in my program, if you delete it, it's gone.

00:43:49.180 --> 00:43:50.240
It's off your computer.

00:43:50.240 --> 00:43:52.220
If you move it, it'll still work.

00:43:52.220 --> 00:43:53.840
It doesn't need to know where it was installed to.

00:43:53.840 --> 00:43:54.540
Very old school.

00:43:54.740 --> 00:43:55.120
Yeah, yeah.

00:43:55.120 --> 00:43:59.400
Definitely no registry and none of that stuff in Windows, which just makes your life hard.

00:43:59.400 --> 00:44:05.020
So, it runs on Windows and it runs on Linux according to your website.

00:44:05.020 --> 00:44:08.440
But if I recall correctly, I played your game on OS X.

00:44:08.440 --> 00:44:10.980
So, is it also supported on OS X?

00:44:10.980 --> 00:44:14.120
Or did I get the Linux version somehow?

00:44:14.120 --> 00:44:18.000
Some people have figured out to run it on OS X.

00:44:18.000 --> 00:44:23.680
And they've done it via like a Linux emulator or Windows emulator.

00:44:23.680 --> 00:44:26.640
They've tried, you know, different things.

00:44:26.640 --> 00:44:28.340
And this is not officially supported.

00:44:28.340 --> 00:44:31.080
So, one guy sent in a crash report.

00:44:31.080 --> 00:44:32.380
I was like, oh, I'll look at it.

00:44:32.380 --> 00:44:33.420
But I don't have a Mac.

00:44:33.420 --> 00:44:37.500
I don't know if I can do this for that system.

00:44:37.600 --> 00:44:41.060
So, you might be able to get it to run on OS.

00:44:41.060 --> 00:44:42.260
But there's no guarantees.

00:44:42.260 --> 00:44:42.960
Okay.

00:44:42.960 --> 00:44:43.340
Interesting.

00:44:43.340 --> 00:44:47.860
So, I would say Linux and Windows are the most main platforms.

00:44:47.860 --> 00:44:52.120
And if sales pick up and it makes sense for me to do a Mac, I'll go out and buy a Mac.

00:44:52.120 --> 00:44:54.060
I can't run it in VirtualBox.

00:44:54.060 --> 00:44:57.340
I don't think it's supported in VirtualBox.

00:44:57.340 --> 00:44:58.040
Right.

00:44:58.100 --> 00:45:00.140
So, I can't just emulate a Mac.

00:45:00.140 --> 00:45:05.420
You know, it's possible that I ran it on Windows 10 in parallels on my Mac.

00:45:05.420 --> 00:45:06.280
It's possible.

00:45:06.280 --> 00:45:07.040
It will work on Windows 10.

00:45:07.040 --> 00:45:07.560
Yeah, yeah.

00:45:07.560 --> 00:45:07.780
Okay.

00:45:07.780 --> 00:45:08.900
Interesting.

00:45:08.900 --> 00:45:10.600
It will definitely work, guys.

00:45:10.600 --> 00:45:11.420
Cool.

00:45:11.420 --> 00:45:11.780
Cool.

00:45:11.780 --> 00:45:14.960
And the Linux port took only a day.

00:45:14.960 --> 00:45:20.660
So, if you think about like Python, one of its strengths is it pretty much will run anywhere.

00:45:20.660 --> 00:45:25.620
So, you know, Linux port, I had some capitalizations in some of my file names I had to fix.

00:45:25.620 --> 00:45:31.620
And, of course, you have to totally redo the distribution and, you know, the thing that makes an EXE.

00:45:31.620 --> 00:45:34.380
That doesn't work at all the same way on Linux.

00:45:34.380 --> 00:45:37.640
But besides that stuff, the game should run really easy.

00:45:37.640 --> 00:45:43.780
And one thing to keep in mind with Pygame is most 3D applications don't work through a VirtualBox.

00:45:43.780 --> 00:45:44.780
But Pygame does.

00:45:44.780 --> 00:45:51.360
So, you can even be having your Windows system open and open a VirtualBox with Pygame in it.

00:45:51.360 --> 00:45:52.380
And it will work fine.

00:45:52.380 --> 00:45:55.840
So, you can dev for Linux and Windows at the same time.

00:45:55.840 --> 00:45:56.660
It would be quite nice.

00:45:56.660 --> 00:45:57.500
Oh, that is nice.

00:45:57.500 --> 00:45:59.520
Yeah, you don't have to dual boot or anything crazy like that.

00:45:59.520 --> 00:45:59.800
Yep.

00:46:13.380 --> 00:46:19.420
We all want to ship our software faster, respond to user requests quicker, and build an edge on the competition.

00:46:19.420 --> 00:46:24.460
But the faster you go, the more likely a bug or issue will slip by and cause your users grief.

00:46:24.460 --> 00:46:27.700
I have the same trade-offs with my Talk Python websites and infrastructure.

00:46:27.700 --> 00:46:29.400
That's why I use SnapCI.

00:46:29.400 --> 00:46:33.000
Every time I check in at GitHub, SnapCI springs into action.

00:46:33.380 --> 00:46:35.300
A clean copy of code is pulled from GitHub.

00:46:35.300 --> 00:46:37.340
A Python 3 virtual environment is created.

00:46:37.340 --> 00:46:39.480
All the packages and dependencies are installed.

00:46:39.480 --> 00:46:40.760
The unit tests are run.

00:46:40.760 --> 00:46:44.540
Finally, I'm notified in Slack and a menu bar on my Mac about the outcome.

00:46:44.540 --> 00:46:48.160
That way, I know it's safe to ship a shiny new version of my web app.

00:46:48.160 --> 00:46:53.560
Ship your software faster with a 30-day free trial at snap.ci slash talkpython.

00:47:01.800 --> 00:47:04.120
Could you build a 3D game, a Pi game?

00:47:04.120 --> 00:47:04.520
Nope.

00:47:04.520 --> 00:47:06.280
It's all about 2D sprites.

00:47:06.280 --> 00:47:08.160
3D, it's all about 2D.

00:47:08.160 --> 00:47:11.880
If you want, you're going to have to go into the Pi GL stuff, which is fine.

00:47:11.880 --> 00:47:20.380
Don't forget, you know, devs at home here, like, 99% of games' problems arise because they're in 3D.

00:47:20.380 --> 00:47:23.460
Everything is just much more complicated than 3D.

00:47:23.460 --> 00:47:24.360
And I love 3D.

00:47:24.360 --> 00:47:25.180
I do it at work.

00:47:25.180 --> 00:47:29.340
But for a side project, be careful about 3D.

00:47:29.340 --> 00:47:32.180
Unless you want something that looks like Minecraft, very simple.

00:47:32.180 --> 00:47:34.620
You know, be very careful about 3D.

00:47:34.620 --> 00:47:37.920
Pi game avoids a lot of these problems by being 2D.

00:47:37.920 --> 00:47:38.580
Yeah, that's great.

00:47:38.580 --> 00:47:40.960
Yeah, I've done a few major things in 3D.

00:47:40.960 --> 00:47:46.300
And there's so, so many little catch-ups and hang-ups you can get caught on.

00:47:46.300 --> 00:47:48.300
It's like, why don't I see this?

00:47:48.300 --> 00:47:51.440
Well, I drew it, you know, clockwise versus counterclockwise.

00:47:51.440 --> 00:47:54.880
Now, it's invisible because from the wrong direction.

00:47:54.880 --> 00:47:56.140
It's just like, ah, gosh.

00:47:56.140 --> 00:48:00.020
It's really complicated and it's really a career.

00:48:00.020 --> 00:48:04.880
You know, doing 3D is really a total career and there's specialists who deal with that.

00:48:04.880 --> 00:48:07.200
It's really, it's really a lot of work.

00:48:07.200 --> 00:48:07.960
It's amazing.

00:48:07.960 --> 00:48:08.540
But my game, no.

00:48:08.540 --> 00:48:13.120
Yeah, to make it look, yeah, to make it look professional, it's really, really hard.

00:48:13.120 --> 00:48:14.920
Okay, that's interesting.

00:48:14.920 --> 00:48:15.340
Yeah.

00:48:15.340 --> 00:48:20.080
You know, one thing I wanted to give a shout-out about, have you seen the movie, Indie Game?

00:48:20.080 --> 00:48:21.620
Indie Game, the movie?

00:48:21.620 --> 00:48:22.860
No, I haven't.

00:48:22.960 --> 00:48:24.460
People should check out Indie Game, the movie.

00:48:24.460 --> 00:48:25.400
It's really interesting.

00:48:25.400 --> 00:48:35.000
It's not quite the same story as your story because you had a full-time job and you're doing this sort of as a side project, which is, I think, a really cool thing to do.

00:48:35.000 --> 00:48:41.280
These guys, they spent like two years working on these indie retro games and it kind of takes you through their journey.

00:48:41.280 --> 00:48:44.780
But it's also more similar than it is different to this.

00:48:44.780 --> 00:48:48.700
So if you're looking for a good documentary about this kind of stuff, check out Indie Game, the movie.

00:48:48.700 --> 00:48:49.540
That one's a good one.

00:48:49.540 --> 00:48:50.340
That sounds pretty rad.

00:48:50.340 --> 00:48:50.560
Yeah.

00:48:50.560 --> 00:48:55.780
Most indie game guys still have studios with, you know, five, six people in them.

00:48:55.780 --> 00:49:02.840
What's weird about my project is I just did it myself because my game is just so retro and so unique.

00:49:02.840 --> 00:49:08.360
Because I tried for years to convince artists to help me and programmers to help me.

00:49:08.360 --> 00:49:08.940
And they're like, what?

00:49:08.940 --> 00:49:13.880
You want to write a game that's like actually using 80s era technology?

00:49:13.880 --> 00:49:14.880
You must be nuts.

00:49:14.880 --> 00:49:17.620
Nobody would help me write this game.

00:49:17.620 --> 00:49:19.920
So eventually I said, look, I have to write it myself.

00:49:19.920 --> 00:49:21.820
And at that time, Python came along.

00:49:21.820 --> 00:49:24.060
I was like, this is how I'm writing this game.

00:49:24.060 --> 00:49:25.720
Python is the way to go.

00:49:25.720 --> 00:49:27.220
That's really cool they lined up that way.

00:49:27.220 --> 00:49:27.620
Great.

00:49:28.480 --> 00:49:29.920
Yeah, I think we should probably leave it there.

00:49:29.920 --> 00:49:31.460
We're kind of getting long on time.

00:49:31.460 --> 00:49:33.780
But before I let you go, let me ask you two questions.

00:49:33.780 --> 00:49:34.800
I always ask them, I guess.

00:49:34.800 --> 00:49:41.560
You must have come across some interesting PyPI packages that you could use to make your game work.

00:49:41.560 --> 00:49:43.560
I mean, PyGame among them probably, right?

00:49:43.560 --> 00:49:48.280
What one's your favorite that you feel like you want to tell people about they maybe don't know about?

00:49:48.280 --> 00:49:50.440
I want to plug PyGame and Pickle.

00:49:50.440 --> 00:49:51.980
Those are super cool.

00:49:51.980 --> 00:49:53.300
PyGame and Pickle.

00:49:53.300 --> 00:49:54.560
Check them out if you're new to Python.

00:49:54.560 --> 00:49:55.980
They're really cool.

00:49:55.980 --> 00:49:56.720
Okay.

00:49:56.720 --> 00:49:57.220
Excellent.

00:49:57.220 --> 00:49:57.620
Excellent.

00:49:58.440 --> 00:50:00.900
And when you write Python code, what editor did you use?

00:50:00.900 --> 00:50:02.500
I used Notepad.

00:50:02.500 --> 00:50:03.460
Wow.

00:50:03.460 --> 00:50:03.780
Okay.

00:50:03.780 --> 00:50:04.240
Awesome.

00:50:04.240 --> 00:50:08.000
You were being serious about the retro.

00:50:08.000 --> 00:50:09.180
Notepad++ to be exact.

00:50:09.180 --> 00:50:09.640
Yeah, yeah.

00:50:09.640 --> 00:50:10.580
Because you got to have some.

00:50:10.580 --> 00:50:11.080
I'm serious.

00:50:11.080 --> 00:50:12.060
I'm a serious guy.

00:50:12.060 --> 00:50:13.780
Notepad++, by the way.

00:50:13.780 --> 00:50:14.500
Not just Notepad.

00:50:14.500 --> 00:50:15.080
Yeah, yeah, yeah.

00:50:15.080 --> 00:50:15.440
Cool.

00:50:15.440 --> 00:50:16.640
It's a little bit better.

00:50:16.640 --> 00:50:17.060
Yeah, I know.

00:50:17.060 --> 00:50:17.280
Of course.

00:50:17.280 --> 00:50:19.140
It has to understand, you know, tabs don't.

00:50:19.140 --> 00:50:19.980
Tabs mean spaces.

00:50:19.980 --> 00:50:20.840
Things like that, right?

00:50:20.840 --> 00:50:22.340
Okay.

00:50:22.340 --> 00:50:23.040
Yeah, yeah, yeah.

00:50:23.040 --> 00:50:23.900
Awesome.

00:50:23.900 --> 00:50:24.480
All right.

00:50:24.480 --> 00:50:26.440
Well, Joseph, this was a really fun story.

00:50:26.440 --> 00:50:28.200
And thank you for giving us a look inside.

00:50:28.400 --> 00:50:30.340
What you built and how you built it.

00:50:30.340 --> 00:50:32.080
How about a final call to action?

00:50:32.080 --> 00:50:35.280
If people are excited about your project, how do they check it out?

00:50:35.280 --> 00:50:35.940
What do they do?

00:50:35.940 --> 00:50:38.400
So you can go to epicosrpg.com.

00:50:38.400 --> 00:50:42.280
And there's links to how you can buy it at itch.io.

00:50:42.280 --> 00:50:45.800
If you want to buy it too there, you can follow me on Twitter.

00:50:46.340 --> 00:50:47.340
I'm JJC Coder.

00:50:47.340 --> 00:50:47.800
I'm JJC Coder.

00:50:47.800 --> 00:50:51.420
And I would love to hear from everyone whether or not you played the game.

00:50:51.420 --> 00:50:52.980
Even if you didn't like the game.

00:50:52.980 --> 00:50:55.240
I'd like to hear what you didn't like about the game.

00:50:55.240 --> 00:50:58.380
And if you liked the game, I would like to hear what you liked about the game.

00:50:58.380 --> 00:50:59.560
Game is moddable.

00:50:59.560 --> 00:51:01.020
So I want to see people's...

00:51:01.020 --> 00:51:02.460
It's a little bit moddable.

00:51:02.620 --> 00:51:04.580
So I want to see people's alternative tile sets.

00:51:04.580 --> 00:51:06.260
I saw quite a few good ones already.

00:51:06.260 --> 00:51:11.040
So I want you guys to make tiles, make the game look like you want it to make.

00:51:11.040 --> 00:51:12.660
Maybe you don't want it to be 16 colors.

00:51:12.660 --> 00:51:15.240
Maybe you want 128 colors.

00:51:15.240 --> 00:51:16.000
Go for it.

00:51:16.000 --> 00:51:17.100
You know, I want to see what you make.

00:51:17.340 --> 00:51:17.660
Awesome.

00:51:17.660 --> 00:51:19.000
All right.

00:51:19.000 --> 00:51:20.460
Well, thank you so much for being on the show.

00:51:20.460 --> 00:51:21.460
It was a fun conversation.

00:51:21.460 --> 00:51:22.200
Thanks.

00:51:22.200 --> 00:51:23.280
This was really great.

00:51:23.280 --> 00:51:23.720
Yeah, you bet.

00:51:23.720 --> 00:51:23.940
Good luck.

00:51:23.940 --> 00:51:24.420
Thanks.

00:51:24.420 --> 00:51:24.740
Bye-bye.

00:51:24.740 --> 00:51:28.900
This has been another episode of Talk Python To Me.

00:51:28.900 --> 00:51:31.800
Hired wants to help you find your next big thing.

00:51:31.800 --> 00:51:36.540
Visit Hired.com slash Talk Python To Me to get five or more offers with salary and equity

00:51:36.540 --> 00:51:40.320
presented right up front and a special listener signing bonus of $2,000.

00:51:40.320 --> 00:51:44.500
SnapCI is modern, continuous integration and delivery.

00:51:44.500 --> 00:51:47.120
Build, test, and deploy your code directly from GitHub.

00:51:47.480 --> 00:51:50.380
All in your browser with debugging, Docker, and parallels included.

00:51:50.380 --> 00:51:53.420
Try them for free at snap.ci slash Talk Python.

00:51:53.420 --> 00:51:56.340
Are you or a colleague trying to learn Python?

00:51:56.340 --> 00:52:01.020
Have you tried books and videos that just left you bored by covering topics point by point?

00:52:01.020 --> 00:52:05.060
Well, check out my online course, Python Jumpstart by Building 10 Apps at

00:52:05.060 --> 00:52:09.620
 talkpython.fm/course to experience a more engaging way to learn Python.

00:52:09.620 --> 00:52:12.620
And if you're looking for something a little more advanced,

00:52:12.620 --> 00:52:16.980
try my Write Pythonic Code course at talkpython.fm/pythonic.

00:52:16.980 --> 00:52:23.620
You can find the link from this episode at talkpython.fm/episodes slash show slash 78.

00:52:23.620 --> 00:52:25.980
Be sure to subscribe to the show.

00:52:25.980 --> 00:52:28.180
Open your favorite podcatcher and search for Python.

00:52:28.180 --> 00:52:29.420
We should be right at the top.

00:52:29.420 --> 00:52:34.820
You can also find the iTunes feed at /itunes, Google Play feed at /play,

00:52:34.820 --> 00:52:38.740
and direct RSS feed at /rss on talkpython.fm.

00:52:39.100 --> 00:52:43.820
Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

00:52:43.820 --> 00:52:48.500
Corey just recently started selling his tracks on iTunes, so I recommend you check it out at

00:52:48.500 --> 00:52:50.520
 talkpython.fm/music.

00:52:50.520 --> 00:52:55.880
You can browse his tracks he has for sale on iTunes and listen to the full length version of the theme song.

00:52:55.880 --> 00:52:57.940
This is your host, Michael Kennedy.

00:52:57.940 --> 00:52:59.220
Thanks so much for listening.

00:52:59.400 --> 00:53:00.400
I really appreciate it.

00:53:00.400 --> 00:53:02.560
Smix, let's get out of here.

00:53:02.560 --> 00:53:24.560
Stay tuned.

00:53:24.560 --> 00:53:24.800
you

00:53:24.800 --> 00:53:25.300
you

00:53:25.300 --> 00:53:55.280
Thank you.

