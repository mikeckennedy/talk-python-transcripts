WEBVTT

00:00:00.001 --> 00:00:02.360
The Python landscape is changing pretty dramatically.

00:00:02.360 --> 00:00:07.720
Python's rapid growth over the past five years means it doesn't look the same as the early days.

00:00:07.720 --> 00:00:12.120
On this episode, we'll take a deep look inside the state of the Python ecosystem

00:00:12.120 --> 00:00:15.060
with Eva Jalowalska and Dmitry Filipov.

00:00:15.060 --> 00:00:18.740
They led the recent PSF and JetBrains Python survey,

00:00:18.740 --> 00:00:21.020
and they're here to dig into the results.

00:00:21.020 --> 00:00:26.640
This is Talk Python To Me, episode 176, recorded August 27, 2018.

00:00:26.640 --> 00:00:43.820
Welcome to Talk Python To Me, a weekly podcast on Python,

00:00:43.820 --> 00:00:46.880
the language, the libraries, the ecosystem, and the personalities.

00:00:46.880 --> 00:00:51.020
This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy.

00:00:51.020 --> 00:00:54.900
Keep up with the show and listen to past episodes at talkpython.fm,

00:00:54.900 --> 00:00:57.500
and follow the show on Twitter via at talkpython.

00:00:57.500 --> 00:01:02.160
This episode is brought to you by Linode and brilliant.org.

00:01:02.160 --> 00:01:05.700
Check out what they're offering during their segments. It really helps support the show.

00:01:05.700 --> 00:01:09.280
Eva, Dmitry, welcome to Talk Python.

00:01:09.280 --> 00:01:10.500
Thanks for having us, Michael.

00:01:10.500 --> 00:01:12.060
It's a pleasure to be on your show.

00:01:12.060 --> 00:01:16.640
Oh, it's great that you're both here. I'm really glad that you came to talk about this project.

00:01:16.640 --> 00:01:20.800
It's really important, I think, to take the pulse of the community every now and then,

00:01:20.800 --> 00:01:22.340
and this is a perfect project for that.

00:01:22.340 --> 00:01:28.340
So excited to share the results you guys got from this whole survey thing that you've done.

00:01:28.340 --> 00:01:31.420
Before we get to that, though, let's start with your story.

00:01:31.420 --> 00:01:33.840
How did you get interested in Python?

00:01:33.840 --> 00:01:35.640
Eva, start with you, I guess.

00:01:35.640 --> 00:01:40.340
Sure. So I actually started working on PyCon by itself,

00:01:40.340 --> 00:01:43.180
and it was a very great experience.

00:01:43.180 --> 00:01:49.580
And eventually, I left the employer that I was working through as a meeting planner and joined the PSF.

00:01:49.580 --> 00:01:54.120
And that's how I got involved in the PSF and the Python community.

00:01:54.120 --> 00:01:54.960
That's great.

00:01:54.960 --> 00:01:56.020
Dmitry, how about you?

00:01:56.140 --> 00:02:05.180
So I started my development career at Astronautics Corporation of America working on Boeing 777 and Boeing 787 projects.

00:02:05.180 --> 00:02:08.420
So if you are on those airplanes, be sure they're safe.

00:02:08.420 --> 00:02:11.120
I've put a lot of efforts into testing them.

00:02:11.120 --> 00:02:17.560
Like actually working on such projects, you quickly learn that testing is an extremely important part of software development.

00:02:17.560 --> 00:02:24.440
But my love story with Python actually began when I started working for Oracle about seven years ago.

00:02:24.440 --> 00:02:29.640
I was responsible for interoperability between Oracle Linux and Oracle VM.

00:02:29.640 --> 00:02:36.060
So back then, I would make sure that Oracle Linux runs smoothly as a guest virtual machine on Oracle VM.

00:02:36.060 --> 00:02:44.000
So that required some Linux kernel hacking and writing a lot of automated tests to check that various Oracle Linux versions work properly.

00:02:44.420 --> 00:02:47.820
So Python came in handy for writing tests and automation.

00:02:47.820 --> 00:02:49.480
That's how I started with Python.

00:02:49.480 --> 00:02:52.320
Later, I discovered an open position at JetBrains.

00:02:52.320 --> 00:02:55.320
You thought you would go make some Python tools for Python people.

00:02:55.320 --> 00:02:56.280
Exactly.

00:02:56.280 --> 00:02:57.340
That's cool.

00:02:57.340 --> 00:03:00.360
It must have been fun to work on the 777, especially the 787.

00:03:00.360 --> 00:03:02.660
That's a really fantastic airplane.

00:03:02.660 --> 00:03:05.380
Yes, it's a dream plane, dreamliner.

00:03:05.380 --> 00:03:07.380
It totally is.

00:03:07.380 --> 00:03:11.600
I've gotten to fly it a couple of times and I've always really enjoyed it.

00:03:12.380 --> 00:03:19.980
I guess just to recap what you guys do today, day to day, Dubit, you're in charge of marketing and overseeing PyCharm at JetBrains.

00:03:19.980 --> 00:03:21.240
Would you say that's your general role?

00:03:21.240 --> 00:03:21.940
Yeah.

00:03:21.940 --> 00:03:25.820
Basically, I'm responsible for many tasks around Python project.

00:03:25.820 --> 00:03:27.580
PyCharm project, I mean.

00:03:27.580 --> 00:03:34.960
I do some product management activities like making sure that PyCharm is released on time with everything ready by the release date.

00:03:35.480 --> 00:03:38.060
I'm also responsible for everything marketing.

00:03:38.060 --> 00:03:42.980
So, as an example, I coordinate content creation, our appearance at major Python events.

00:03:42.980 --> 00:03:47.840
I run PyCharm blog, manage partnership campaigns, among many other things.

00:03:47.840 --> 00:03:49.680
Yeah, that sounds like a fun job.

00:03:49.680 --> 00:03:50.380
Eva, how about you?

00:03:50.380 --> 00:03:53.640
So, I'm the director of operations at the Python Software Foundation.

00:03:53.880 --> 00:03:59.020
So, that pretty much means that I oversee everything that the PSF does.

00:03:59.020 --> 00:04:04.180
That includes Python, which is the conference that we run yearly here in the U.S.

00:04:04.240 --> 00:04:11.800
And then our grants program, as well as any trademarks that we manage for the Python programming language.

00:04:11.800 --> 00:04:15.180
And several other things, like managing our staff and day-to-day things like that.

00:04:15.180 --> 00:04:16.960
Yeah, that's quite a bit.

00:04:16.960 --> 00:04:19.320
And PyCon itself is a big project, right?

00:04:19.320 --> 00:04:20.540
It absolutely is.

00:04:20.540 --> 00:04:26.040
I would say at this point, it takes up two full-time employees at least eight months out of the year.

00:04:26.040 --> 00:04:26.740
That's incredible.

00:04:26.740 --> 00:04:28.080
But it's a huge event.

00:04:28.080 --> 00:04:28.620
It's really fun.

00:04:28.820 --> 00:04:41.760
So, speaking of PyCon, the reason I reached out to both of you is you did a really interesting presentation at PyCon for a project that had been maybe six months in the making, but previous to that, about this survey.

00:04:41.760 --> 00:04:49.280
So, PSF and JetBrains put some efforts together to get a bunch of the Python community come fill out a nice questionnaire.

00:04:49.280 --> 00:04:54.200
And you guys at JetBrains did a really great job on analysis of it.

00:04:54.200 --> 00:04:58.960
So, we'll get to talk about all the results there and stuff, but let's start with how this project came together.

00:04:58.960 --> 00:05:09.620
So, the story of the Python developer survey goes back in 2016, when I personally was fascinated by an idea of running a survey among Python developers.

00:05:09.620 --> 00:05:18.820
By that time, I already had some experience with surveys among various PyStream users, but I wanted to run something on a completely different scale.

00:05:18.820 --> 00:05:26.080
So, I gathered a working group comprised of people from the research team, where people have a lot of experience with math and stats.

00:05:26.080 --> 00:05:29.580
People from the survey team who helped me to organize previous surveys.

00:05:29.580 --> 00:05:35.600
People from the marketing department to help us to promote the survey designers, to create a nice-looking report.

00:05:35.600 --> 00:05:39.020
And we did that survey, which was quite a success.

00:05:39.020 --> 00:05:48.200
We gathered something around, I believe, 4,000 responses through our own channels, through advertisement on Google, Stack Overflow, and others.

00:05:48.200 --> 00:05:49.860
This is the 2016 survey, right?

00:05:49.860 --> 00:05:51.520
Yes, this is the 2016 survey.

00:05:51.520 --> 00:05:56.300
So, it's telling the story prior to our latest 2017 survey.

00:05:56.300 --> 00:05:56.860
Yeah, yeah, yeah.

00:05:56.860 --> 00:06:01.640
So, back then, we've got to some nice results, and they were really good and of high quality.

00:06:01.640 --> 00:06:07.920
I did a talk at PyGotham 2016 in New York, and the survey was well-received.

00:06:07.920 --> 00:06:21.100
The only problem with that survey was that we had around 50% of PyTerm users among respondents, which was way higher than our estimation of PyTerm share among Python editors and IDs.

00:06:21.460 --> 00:06:24.860
In some sense, you were surveying your customers rather than the broad.

00:06:24.860 --> 00:06:25.060
Right.

00:06:25.060 --> 00:06:26.340
Exactly, exactly.

00:06:26.340 --> 00:06:26.860
Okay.

00:06:26.860 --> 00:06:27.240
Exactly.

00:06:27.240 --> 00:06:33.980
So, back then, I started thinking about how we can make the survey better, how to make it independent and unbiased.

00:06:34.380 --> 00:06:41.420
So, later in 2016, I bumped into Eva, I believe, at PyCon APEC in South Korea, if I'm not mistaken.

00:06:41.420 --> 00:06:42.100
Yeah.

00:06:42.100 --> 00:06:42.800
Yeah.

00:06:43.160 --> 00:06:54.940
And back then, I told her about the Python survey that we did, and together with Eva, we came up with an idea that Python Software Foundation can be the key to make the survey much better.

00:06:54.940 --> 00:06:58.760
So, in 2017, we ran the survey in a different format.

00:06:58.760 --> 00:07:08.560
Instead of promoting survey through JetBrains channels like we did in 2016, we promoted the survey only through the official Python channels and official Python Software Foundation channels.

00:07:08.560 --> 00:07:09.320
Exactly.

00:07:09.320 --> 00:07:12.060
So, we reached out via Python.org.

00:07:12.240 --> 00:07:22.460
We put banners up on the download pages, which received the highest amount of feedback, as well as our Twitter, the PSF blog.

00:07:22.460 --> 00:07:30.540
We reached out to several communities that we work with since the PSF gives out grants pretty much globally.

00:07:30.540 --> 00:07:33.000
We're in touch with a lot of different communities.

00:07:33.000 --> 00:07:38.760
So, we're going to continue to do a lot of outreach that way as well for the next version.

00:07:38.760 --> 00:07:40.320
Yeah, that's really cool.

00:07:40.320 --> 00:07:50.080
I think having this sort of vendor-neutral version really puts a lot of authority behind this survey, right?

00:07:50.080 --> 00:07:54.280
It's one thing to say, well, look, PyCharm is really popular among PyCharm users.

00:07:54.540 --> 00:08:04.260
Maybe, you know, Python 3 versus Python 2 usage varies on that because maybe more professionals use Python versus they don't.

00:08:04.260 --> 00:08:04.480
I don't know.

00:08:04.480 --> 00:08:05.560
I'm just making up this stuff, right?

00:08:05.560 --> 00:08:09.240
But having it really neutral seems like a super valuable addition.

00:08:09.240 --> 00:08:14.680
And we'll talk about where some of the participants came from, but it sounds to me like you really pulled that off quite well.

00:08:15.140 --> 00:08:16.260
Yeah, we think it worked.

00:08:16.260 --> 00:08:17.460
It worked very well.

00:08:17.460 --> 00:08:23.780
Looking at the countries that we received responses from, we noticed that a lot.

00:08:23.780 --> 00:08:32.020
We're missing a lot of feedback from people on the African continent, probably Indian continent, but we're going to move on that for the next version.

00:08:32.020 --> 00:08:33.480
Yeah, and now you know, right?

00:08:33.480 --> 00:08:34.360
Exactly.

00:08:34.360 --> 00:08:35.140
Yeah.

00:08:35.140 --> 00:08:36.680
There always has to be a starting point.

00:08:36.840 --> 00:08:38.100
So you live and you learn.

00:08:38.100 --> 00:08:39.180
Exactly.

00:08:39.180 --> 00:08:41.360
So what were some of the goals of the survey?

00:08:41.360 --> 00:08:51.280
With this survey, we wanted to solely, like, we did the survey for the purpose of mapping out an accurate landscape of the Python community.

00:08:51.280 --> 00:08:59.000
We wanted to identify the latest trends and gather insight on how the Python development world looks today.

00:08:59.000 --> 00:09:06.180
With this survey, we want to learn how Python is being used by diverse developers, what components complement its use,

00:09:06.320 --> 00:09:08.320
and what makes it one of the most loved languages.

00:09:08.320 --> 00:09:14.960
And from the PSF standpoint, it was important to us because, you know, the PSF is there to support the community.

00:09:14.960 --> 00:09:21.340
So the more that we know of the direction that the community is going in, the more we'll be prepared to help them in the future.

00:09:21.340 --> 00:09:27.860
So it's a very useful tool, not just for the community, in my opinion, but also for the nonprofit behind the language.

00:09:27.860 --> 00:09:32.440
Yeah, certainly knowing where things are going and where the support needs to be.

00:09:32.580 --> 00:09:41.760
And you learn some interesting lessons, like you were hinting at there, about, say, maybe, you know, the PSF does some outreach and some support for various communities.

00:09:42.580 --> 00:09:47.980
And maybe some of these areas where it's somewhat underrepresented, you could, you know, maybe do more, right?

00:09:47.980 --> 00:09:48.740
Exactly.

00:09:48.740 --> 00:09:50.140
Yeah, that's great.

00:09:50.140 --> 00:09:55.940
So, Dimitris, you said in your 2016 edition, you had about 4,000, 4,500 developers.

00:09:55.940 --> 00:10:01.880
And now this survey had 9,500 developers from almost 150 different countries.

00:10:01.880 --> 00:10:02.580
That's pretty awesome.

00:10:03.080 --> 00:10:03.700
Yeah, it is.

00:10:03.700 --> 00:10:12.580
And I hope in this year, actually, when we're going to run this survey next time, I hope we'll get even more respondents.

00:10:12.580 --> 00:10:16.580
So it will be bigger and better in quality as well.

00:10:16.580 --> 00:10:17.680
Yeah, absolutely.

00:10:17.680 --> 00:10:19.880
I'll put this question out to both of you.

00:10:19.880 --> 00:10:23.100
How can people, so last time it was in October 2017.

00:10:23.100 --> 00:10:27.120
I think you're planning a similar timeframe for this one of 2018.

00:10:27.340 --> 00:10:31.780
So that'd be in about a month and a half or so, the survey will come out again.

00:10:31.780 --> 00:10:40.920
How do people, is there a way for people to, say, join a mailing list or get announcements so they don't have to, like, bump into a banner on python.org or something to know about it?

00:10:40.920 --> 00:10:48.700
So we don't have a mailing list, but we'll definitely announce it via the PSF Twitter account, which is at the PSF.

00:10:48.700 --> 00:10:57.180
And we'll be announcing it via our Slack channels and our blog, which is PyFound, blogspotpyfound.org.

00:10:57.180 --> 00:11:00.600
How long was the survey open for, this one that you already did?

00:11:00.600 --> 00:11:02.160
It was open for three weeks.

00:11:02.160 --> 00:11:03.140
Three weeks.

00:11:03.140 --> 00:11:04.540
So people have a decent amount of time.

00:11:04.540 --> 00:11:11.100
And I'll definitely share it on my Twitter account as well and probably talk about it on the Python Bytes podcast and try to get the word out.

00:11:11.100 --> 00:11:14.540
It'd be great to have as many people, you know, participate.

00:11:14.540 --> 00:11:17.180
Because I know there's more than 9,000 Python developers out there.

00:11:17.180 --> 00:11:18.300
Definitely.

00:11:18.300 --> 00:11:19.300
Absolutely.

00:11:19.300 --> 00:11:22.500
Eva, do you know the number, actually?

00:11:22.500 --> 00:11:24.880
Do you have an official PSF number?

00:11:24.880 --> 00:11:26.280
Do you have an official PSF number?

00:11:26.280 --> 00:11:33.320
There is no PSF official data on that, but we're definitely hoping to get there with a survey like this.

00:11:33.320 --> 00:11:34.400
Yeah, that's great.

00:11:34.400 --> 00:11:40.860
I think it's really difficult to estimate the overall number of Python developers, and they can be official number for that.

00:11:40.860 --> 00:11:49.180
Because in the end, like with the 2017 survey, we run into the problem because who is the Python developer?

00:11:49.340 --> 00:11:50.500
It's a very difficult question.

00:11:50.500 --> 00:11:54.440
It's a very difficult question because people use Python to a different extent.

00:11:54.440 --> 00:11:58.780
Some of them use Python full-time as their primary language.

00:11:58.780 --> 00:12:02.460
Some of them use them as an additional language.

00:12:03.020 --> 00:12:10.360
And it's hard to say how many can be considered to be called Python developers.

00:12:10.360 --> 00:12:11.160
Exactly.

00:12:11.160 --> 00:12:11.240
Exactly.

00:12:11.240 --> 00:12:11.600
Exactly.

00:12:11.600 --> 00:12:19.120
Even for those people that are not, quote-unquote, developers in their day job, they might use Python as a tool in their day job.

00:12:19.120 --> 00:12:21.980
It's definitely difficult to categorize.

00:12:22.320 --> 00:12:22.720
Exactly.

00:12:22.720 --> 00:12:32.620
For example, many people who wear, like, data analyst hats sitting in large banks doing a lot of data analysis.

00:12:32.620 --> 00:12:37.560
Can we call them Python developers or data analysts if they use Python?

00:12:38.080 --> 00:12:38.300
Yeah.

00:12:38.300 --> 00:12:41.860
Does it got to do 20% other day in Python or 15%?

00:12:41.860 --> 00:12:42.120
Right.

00:12:42.120 --> 00:12:42.560
Right?

00:12:42.560 --> 00:12:43.040
Yeah.

00:12:43.040 --> 00:12:43.800
Yeah, exactly.

00:12:43.800 --> 00:12:45.220
Yeah, that's a really good point.

00:12:45.220 --> 00:12:49.940
Another thing, another idea I want to just throw out there as people think about this, this is not my idea.

00:12:49.940 --> 00:12:55.580
This idea came from Scott Hanselman, who's really well-known in the developer space, has his own podcast.

00:12:55.580 --> 00:12:59.820
But he has this really great idea talking about sort of reaching all of the developers.

00:13:00.660 --> 00:13:06.220
And he says, look, there's this entire world of what he labeled dark matter developers.

00:13:06.220 --> 00:13:10.040
We know they're out there, but we can't see them.

00:13:10.040 --> 00:13:10.840
We can't detect them.

00:13:10.840 --> 00:13:12.020
They don't come to conferences.

00:13:12.020 --> 00:13:13.320
They're not on social media.

00:13:13.320 --> 00:13:19.220
They just go to their job, and they work in their code, and they basically are not visible to the community in a sense.

00:13:19.220 --> 00:13:20.420
There's tons of those people.

00:13:20.420 --> 00:13:25.960
And that concept, I think, really makes it hard to know the entire extent.

00:13:25.960 --> 00:13:28.840
But you guys are doing a pretty good job of trying to take that pulse anyway.

00:13:29.160 --> 00:13:30.760
And we hope to improve it year on year.

00:13:30.760 --> 00:13:32.400
Yeah, for sure.

00:13:32.400 --> 00:13:39.380
So one of the things you did with this that I hinted at the beginning is you gave this as a presentation at PyCon in PyCon 2018.

00:13:39.380 --> 00:13:41.160
So it was Python by the numbers.

00:13:41.160 --> 00:13:46.640
So if people want to watch your presentation with some slides and graphs and stuff, they can check that out there.

00:13:46.640 --> 00:13:50.300
And then, of course, the results of the survey are up.

00:13:50.300 --> 00:13:51.740
And I'll put the link in the show notes.

00:13:51.740 --> 00:13:55.880
And who was responsible for actually writing up the analysis of that?

00:13:55.880 --> 00:13:58.920
Was that the JetBrains, the PSF, someone else?

00:13:58.920 --> 00:14:01.500
We did it on the JetBrains side.

00:14:01.500 --> 00:14:12.300
So our partnership with Python Software Foundation was that Python Software Foundation was responsible for promoting the survey through their official channels.

00:14:12.300 --> 00:14:14.520
And JetBrains did all the rest.

00:14:14.640 --> 00:14:16.860
So we set up the survey, set up the logic.

00:14:16.860 --> 00:14:21.700
We then analyzed the results and created the report.

00:14:22.100 --> 00:14:26.400
Yeah, congratulations, because that was a really, really nice write-up.

00:14:26.400 --> 00:14:36.860
I love each section had like a here's the key takeaway from this section and would sort of, you know, not just show the stats, but put it into more colloquial terms, I guess.

00:14:36.860 --> 00:14:38.120
Like, here's a bunch of stats.

00:14:38.120 --> 00:14:44.140
And oh, by the way, what that means is there's, you know, four out of five Python developers use Python as their main language.

00:14:44.140 --> 00:14:47.460
Or, you know, something to that effect would be like a thing that would be in there.

00:14:47.460 --> 00:14:48.480
That was really cool.

00:14:48.760 --> 00:14:50.620
Yeah, that was a cool feature of this report.

00:14:50.620 --> 00:14:53.820
Yeah, I really found it super, super approachable.

00:14:53.820 --> 00:14:57.060
So let's go back to first before we get into the results.

00:14:57.060 --> 00:15:02.360
I want to make sure we make it really clear on who participated, where they're coming from, what groups are being measured.

00:15:02.460 --> 00:15:09.560
Because, you know, one of the whole reasons I wanted to have you all on the show is there's so much hype around Python right now.

00:15:09.560 --> 00:15:17.400
And there's so many surveys that are just putting Python at or near the top, or it has a, you know, really steep growth curve or something like that.

00:15:17.400 --> 00:15:18.780
I'm thinking Stack Overflow surveys.

00:15:18.780 --> 00:15:23.220
The IEEE survey just came out and had Python right at the top, things like that.

00:15:23.560 --> 00:15:29.500
But those are all, people will say, well, yeah, that's what that survey said, but it's this slice of people or it's that slice of people.

00:15:29.500 --> 00:15:37.200
So the people that took this survey were primarily coming from the Python community itself, right?

00:15:37.200 --> 00:15:40.900
So let's talk about where, maybe Eva, you could cover this.

00:15:40.900 --> 00:15:42.960
Where did the participants actually come from?

00:15:42.960 --> 00:15:46.060
Like what sources did you drive them to the survey?

00:15:46.060 --> 00:15:47.040
Sure.

00:15:47.040 --> 00:15:57.220
So the sources that we used to get people to the survey were Python.org website, mainly through the downloads page and the homepage.

00:15:57.220 --> 00:16:04.340
PSF Twitter account, the Python blog, LinkedIn, as well as I believe your podcast even brought some people in.

00:16:04.340 --> 00:16:07.960
Yeah, that's, I saw you list Python podcasts and I'm like, wait, is that mine?

00:16:07.960 --> 00:16:08.160
Yeah.

00:16:08.160 --> 00:16:08.480
That's cool.

00:16:08.480 --> 00:16:11.180
Yeah, that's great.

00:16:11.180 --> 00:16:15.780
So 60% came from Python.org and then maybe social media pulled in.

00:16:15.780 --> 00:16:16.140
Right.

00:16:16.140 --> 00:16:18.620
Or you guys maybe pulled in another 30%.

00:16:18.620 --> 00:16:21.940
So the vast majority was sort of from the PSF, right?

00:16:21.940 --> 00:16:22.800
Correct.

00:16:22.800 --> 00:16:23.260
Yeah.

00:16:23.260 --> 00:16:32.100
And for the next version, we definitely want to do more one-on-one outreach to communities that might not necessarily have the need to go to Python.org.

00:16:32.100 --> 00:16:37.560
Because mainly those are people that are downloading or they might not follow us on Twitter or whatnot.

00:16:37.560 --> 00:16:40.520
So we're going to do a lot more one-on-one outreach as well.

00:16:40.520 --> 00:16:41.840
Yeah, that's really tricky though, right?

00:16:41.840 --> 00:16:48.380
Because if you do one-on-one outreach to certain communities, they might have really different views or like really different uses, right?

00:16:48.380 --> 00:16:49.120
Different style.

00:16:49.120 --> 00:16:51.880
It'll definitely give us the global outlook, right?

00:16:51.880 --> 00:16:53.240
Yeah, absolutely.

00:16:53.780 --> 00:16:54.080
All right.

00:16:54.080 --> 00:16:58.020
So let's, I guess, maybe let's start talking through some of the results.

00:16:58.020 --> 00:17:01.480
We could just start at some really high-level stuff like age.

00:17:01.480 --> 00:17:05.040
Maybe give us a quick summary of the ages that people took this.

00:17:05.040 --> 00:17:08.580
Was it like mostly young students or what kind of professional developers?

00:17:08.580 --> 00:17:09.220
What did you see?

00:17:09.220 --> 00:17:11.560
We definitely saw a younger audience.

00:17:11.900 --> 00:17:18.440
Half were between the ages of 18 and 29 and a fourth were between the ages of 30 and 39.

00:17:18.440 --> 00:17:20.140
Yeah, that's good.

00:17:20.140 --> 00:17:23.320
There were still a fair number of people who were older.

00:17:23.320 --> 00:17:27.960
I know a lot of folks feel like if they're, you know, 40, it's too late to learn the program.

00:17:27.960 --> 00:17:29.960
But there was plenty of folks in those age ranges, right?

00:17:30.120 --> 00:17:36.280
When you put all of the older categories together, they definitely added up to a significant amount.

00:17:36.280 --> 00:17:37.780
Yeah, that's great to hear.

00:17:37.780 --> 00:17:41.220
Because I feel like a lot of people are like, well, I missed my chance to be a developer.

00:17:41.220 --> 00:17:43.220
And I just don't feel like that's really true.

00:17:43.220 --> 00:17:50.060
Another interesting way that we were marketing the first one that we need to provide for the second one is to reach that older audience as well.

00:17:50.060 --> 00:17:50.720
All right.

00:17:50.720 --> 00:17:51.120
Absolutely.

00:17:51.120 --> 00:17:52.020
The whole dark matter.

00:17:52.020 --> 00:17:52.460
Thanks.

00:17:52.460 --> 00:17:57.120
This portion of Talk Python To Me is brought to you by Linode.

00:17:57.580 --> 00:18:01.060
Are you looking for bulletproof hosting that's fast, simple, and incredibly affordable?

00:18:01.060 --> 00:18:05.980
Look past that bookstore and check out Linode at talkpython.fm/Linode.

00:18:05.980 --> 00:18:07.900
That's L-I-N-O-D-E.

00:18:07.900 --> 00:18:12.380
Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:18:12.380 --> 00:18:14.900
They have 10 data centers across the globe.

00:18:14.900 --> 00:18:17.440
So no matter where you are, there's a data center near you.

00:18:17.440 --> 00:18:22.660
Whether you want to run your Python web app, host a private Git server, or file server,

00:18:22.660 --> 00:18:25.500
you'll get native SSDs on all the machines.

00:18:25.900 --> 00:18:32.780
A newly upgraded 200 gigabit network, 24-7 friendly support, even on holidays, and a seven-day money-back guarantee.

00:18:32.780 --> 00:18:35.100
Do you need a little help with your infrastructure?

00:18:35.100 --> 00:18:41.340
They even offer professional services to help you get started with architecture, migrations, and more.

00:18:41.340 --> 00:18:44.420
Get a dedicated server for free for the next four months.

00:18:44.420 --> 00:18:47.260
Just visit talkpython.fm/Linode.

00:18:49.260 --> 00:18:57.140
Another interesting fact that you guys had highlighted in your talk was that from younger developers who participated,

00:18:57.140 --> 00:19:01.600
more disproportionately came from outside the U.S., I guess is what I'm trying to say.

00:19:01.600 --> 00:19:06.140
We had a lot of people that came from India and China between that age range.

00:19:06.420 --> 00:19:14.040
Yeah, I think it's interesting that maybe people see more opportunity or better opportunity by jumping into software development there,

00:19:14.040 --> 00:19:21.760
whereas in more stable traditional markets like the U.S. or Europe, maybe there's less people going to software development.

00:19:21.760 --> 00:19:22.160
I don't know.

00:19:22.160 --> 00:19:23.660
It's an interesting takeaway, though.

00:19:24.120 --> 00:19:28.220
Yeah, it could also depend on, you know, what schools are using.

00:19:28.220 --> 00:19:29.960
It's an unknown at this point.

00:19:29.960 --> 00:19:31.180
Yeah, for sure, for sure.

00:19:31.180 --> 00:19:32.680
How about countries?

00:19:32.680 --> 00:19:38.060
So speaking of coming from outside the U.S., like U.S. was probably still the most popular, right?

00:19:38.060 --> 00:19:40.220
Yeah, the U.S. brought in 18%.

00:19:40.220 --> 00:19:41.160
What about other ones?

00:19:41.160 --> 00:19:42.680
Where else did people come from?

00:19:42.680 --> 00:19:51.660
On the second place, we have India with 13%, China 7%, 6% for United Kingdom, 5% Germany,

00:19:52.120 --> 00:19:55.560
then goes Brazil, France, Russia, Poland, Canada.

00:19:55.560 --> 00:19:58.740
Yeah, it starts to tail off pretty quick, probably, at the far you go out.

00:19:58.740 --> 00:19:59.500
Yeah, exactly, exactly.

00:19:59.500 --> 00:20:08.220
So Brazil has 4%, and like the next France, it's 3%, and all the rest is 2% and 1%.

00:20:08.220 --> 00:20:08.940
Yeah, interesting.

00:20:08.940 --> 00:20:12.800
I wonder how much of this is a language thing, right?

00:20:12.800 --> 00:20:17.120
To say that almost as many people came from India as they did from the U.S.,

00:20:17.120 --> 00:20:21.420
whereas English is not the first language of folks in India.

00:20:21.580 --> 00:20:25.620
So that's almost a stronger endorsement to have 13% coming from there, right?

00:20:25.620 --> 00:20:26.520
True, true.

00:20:26.520 --> 00:20:27.000
Pretty interesting.

00:20:27.000 --> 00:20:30.220
How about an experience, like years of experience?

00:20:30.220 --> 00:20:33.940
You said, sort of ask people how long they've been in programming.

00:20:33.940 --> 00:20:38.280
What's the time that an average Python developer has been a Python developer?

00:20:38.740 --> 00:20:43.460
So the Python survey respondents reported a wide range of experiences.

00:20:43.460 --> 00:20:50.960
Like we had 22% of people with less than one year of experience in the IT industry.

00:20:50.960 --> 00:20:56.600
We had the same percentage for people with more than 11 years of experience in software development.

00:20:56.600 --> 00:20:59.500
And there was a smooth distribution in the middle.

00:20:59.680 --> 00:21:01.600
Yeah, so some new people, which is great.

00:21:01.600 --> 00:21:05.520
You've got to have new blood, or it's not going to be a vibrant community,

00:21:05.520 --> 00:21:08.540
but also some experienced mentors around, right?

00:21:08.540 --> 00:21:09.320
Yeah, exactly.

00:21:09.320 --> 00:21:13.160
I think this shows how strong the Python language is growing to be.

00:21:13.160 --> 00:21:15.740
Just like you said, Michael, you need newcomers,

00:21:15.740 --> 00:21:21.600
and you need people that have been doing this for many years in order to be a successful community.

00:21:21.600 --> 00:21:22.880
Yeah, absolutely.

00:21:22.880 --> 00:21:29.360
Another thing that was interesting, you measured this in a couple of ways to try to get the sense of

00:21:29.360 --> 00:21:33.540
how large of a team or what types of folks work there.

00:21:33.540 --> 00:21:39.300
So you have, do you work by yourself or do you work in a team was one interesting thing you asked.

00:21:39.300 --> 00:21:42.560
And then the other was, how large of a team do you work in?

00:21:42.560 --> 00:21:45.560
So let's see, you guys want to speak to that?

00:21:45.560 --> 00:21:46.000
Sure.

00:21:46.000 --> 00:21:51.300
So in terms of working in teams versus working independently,

00:21:51.300 --> 00:21:56.440
we found out that three out of five developers work on independent projects.

00:21:56.440 --> 00:22:02.380
So 56% work on their own projects independently,

00:22:02.380 --> 00:22:08.140
while 4% work on it as external consultants.

00:22:08.140 --> 00:22:10.500
And then in terms of team sizes,

00:22:11.400 --> 00:22:16.360
about three quarters of the developers who work in teams work in very small teams.

00:22:16.360 --> 00:22:22.500
So 74% of their respondents in the survey said they work in team sizes between two and seven people.

00:22:22.500 --> 00:22:27.040
And then the next highest group was 60% in eight to 12.

00:22:27.040 --> 00:22:28.920
And that's already getting kind of large.

00:22:28.920 --> 00:22:29.040
Yeah.

00:22:29.040 --> 00:22:29.580
Yeah.

00:22:29.580 --> 00:22:30.700
It's most of them right there.

00:22:30.880 --> 00:22:32.220
I think it's really interesting to measure.

00:22:32.220 --> 00:22:36.640
And I think it also measures something interesting about Python as a technology.

00:22:37.180 --> 00:22:39.900
So when I think of like big corporate teams,

00:22:39.900 --> 00:22:44.000
you know, I've done lots of training and I've traveled to lots of companies and worked with their various teams.

00:22:44.000 --> 00:22:54.220
And you think of like these like .NET folks and Java folks on these like large teams that are building like enterprise software and stuff like that.

00:22:54.220 --> 00:22:59.140
And those, I think, probably tend to be a little bit more than what you're measuring here.

00:22:59.140 --> 00:23:07.060
And Python, I think one of its main advantages is it doesn't require a team of 100 people to do the same thing.

00:23:07.060 --> 00:23:09.160
And I think you're kind of measuring that here.

00:23:09.160 --> 00:23:11.140
Or there's evidence of that here.

00:23:11.140 --> 00:23:11.660
Yeah.

00:23:11.660 --> 00:23:15.320
It could definitely lead to evidence of that being the reason.

00:23:15.320 --> 00:23:15.720
Absolutely.

00:23:16.020 --> 00:23:20.560
Yeah, there's a really interesting story that came out from Mike Driscoll's Python interviews book.

00:23:20.560 --> 00:23:27.400
And I'm sorry, I don't remember who he interviewed because there's like 10 people we talked about that actually talked about this history.

00:23:27.400 --> 00:23:32.080
But there was, back in the day, there was Google Video and there was YouTube.

00:23:32.080 --> 00:23:35.440
And YouTube was a little scrappy startup using Python.

00:23:35.440 --> 00:23:40.200
And YouTube had a team of like 100 people using C++, I think they had said.

00:23:40.840 --> 00:23:46.940
And little scrappy YouTube kept adding features and features faster and faster than this large C++ team at Google.

00:23:46.940 --> 00:23:48.500
So Google eventually just bought them.

00:23:48.500 --> 00:23:51.700
Just bought YouTube as a way to win.

00:23:51.700 --> 00:23:58.980
But, you know, it's kind of, I feel like this part of the survey kind of captures that contrast there.

00:23:58.980 --> 00:23:59.940
And I think it's pretty interesting.

00:23:59.940 --> 00:24:03.280
So let's talk about jobs and what people are doing.

00:24:03.280 --> 00:24:09.280
You ask about whether people were full-time employed, whether they were students, whether they're freelance or self-employed,

00:24:10.180 --> 00:24:11.520
which is an interesting distinction.

00:24:11.520 --> 00:24:13.320
I think it's a proper one, but it's interesting.

00:24:13.320 --> 00:24:14.280
What did you find there?

00:24:14.280 --> 00:24:21.540
So we found that the large majority of the respondents, 52%, are fully employed by a company or organization.

00:24:21.540 --> 00:24:27.540
And then to what we were talking about earlier, 28% of the respondents are students.

00:24:27.540 --> 00:24:28.780
Yeah, that's pretty high.

00:24:28.780 --> 00:24:30.020
I think that's a good thing, though.

00:24:30.020 --> 00:24:34.200
I mean, students now become professional developers a couple years later, right?

00:24:34.200 --> 00:24:35.040
Yeah, absolutely.

00:24:35.040 --> 00:24:39.460
It keeps that funnel being filled from newcomer to longtime contributor.

00:24:39.520 --> 00:24:40.160
Yeah.

00:24:40.160 --> 00:24:48.940
Well, it's also good to see that Python is finally being introduced in schools because that is something that we're continuously discussing, even at the PSP level.

00:24:48.940 --> 00:24:52.220
Yeah, maybe we could talk about that just for a second.

00:24:52.520 --> 00:24:59.120
And I'm sorry I only have, like, really U.S. visibility into this because I don't pay that much attention to schools all over the world.

00:24:59.120 --> 00:25:09.580
But I know in the U.S., like, Python has been becoming or is the most taught first-year computer science language at universities, which is great.

00:25:09.860 --> 00:25:15.280
And I think that that trend is generally global.

00:25:15.280 --> 00:25:20.700
So, you know, I think that's a good thing.

00:25:20.700 --> 00:25:21.340
And that's a good thing.

00:25:21.340 --> 00:25:21.500
And that's a good thing.

00:25:21.500 --> 00:25:21.960
That's a good thing.

00:25:21.960 --> 00:25:25.100
And that official program is, like, nationwide.

00:25:25.340 --> 00:25:36.960
And I think it's still in Java, which makes it really, really, basically, just nobody seems to want to change that to catch up with the times because, you know, it's the way we've done things, right?

00:25:37.480 --> 00:25:44.540
Do you ever address that or try to get around that or try to convince people maybe Java is not the best option for students to start with?

00:25:44.540 --> 00:25:52.040
So this is a continuing discussion, I guess, debate, argument, whatever we want to call it.

00:25:52.040 --> 00:26:07.120
So at PyCon, we even have a dedicated workshop called the Education Summit where educators get together and they discuss how to approach these situations and how to best convince people that Python is the right way to go, whether it's, you know, the tools.

00:26:07.120 --> 00:26:13.820
That they have set up for children to learn Python or the type of support that's out there.

00:26:13.820 --> 00:26:21.320
But mainly, I think one of the scenarios that we're running into is a lot of places just lack the instructors, maybe.

00:26:21.320 --> 00:26:22.060
Yeah.

00:26:22.060 --> 00:26:26.860
Who's going to reteach all the teachers that have spent all that time to learn Java, right?

00:26:26.860 --> 00:26:28.540
They're not really developers.

00:26:28.540 --> 00:26:31.660
They're probably, like, math teachers or chemistry teachers or something, right?

00:26:31.660 --> 00:26:32.320
Exactly.

00:26:32.320 --> 00:26:33.420
Interesting.

00:26:33.420 --> 00:26:33.820
Yeah.

00:26:33.820 --> 00:26:36.820
I'm sure that's a constant challenge that you guys deal with as a PSF.

00:26:36.820 --> 00:26:37.580
All right.

00:26:37.580 --> 00:26:38.560
How about salary range?

00:26:38.560 --> 00:26:53.740
Like, one of the things that I think probably hasn't hurt Python's growth is you'll see a lot of different surveys from, like, Indeed or the job board type places where Python developers get paid above average, at least in the software space.

00:26:53.740 --> 00:26:54.660
What do you find?

00:26:54.660 --> 00:27:00.460
So we found that some are definitely above average.

00:27:00.460 --> 00:27:03.020
I'm not sure what we want to call average at this point.

00:27:03.020 --> 00:27:05.140
It varies so much by a region, right?

00:27:05.140 --> 00:27:05.680
Right.

00:27:05.800 --> 00:27:06.160
Exactly.

00:27:06.160 --> 00:27:09.560
You live in the Midwest in a small town versus you live in San Francisco.

00:27:09.560 --> 00:27:15.120
Like, one of the rich people, same salary in San Francisco, you might not be able to afford a house, right?

00:27:15.120 --> 00:27:15.520
It's crazy.

00:27:15.520 --> 00:27:16.340
Exactly.

00:27:16.340 --> 00:27:22.280
And that is even a bigger range when you compare it to countries like India, right?

00:27:22.560 --> 00:27:28.480
So I think that that even is evident in some of the other surveys that we see other communities put out.

00:27:28.480 --> 00:27:35.980
But, yeah, it's hard to say what, which groups are above average and below without knowing that.

00:27:35.980 --> 00:27:36.500
Sure.

00:27:36.500 --> 00:27:42.000
So one of the things that you covered that I thought was really interesting was global job demand.

00:27:42.000 --> 00:27:48.100
And if you take just the straight numbers, demand for Python developers in the U.S. is, I can't remember.

00:27:48.200 --> 00:27:51.160
I'm trying to visualize the graph from the last time I saw it.

00:27:51.160 --> 00:27:55.640
I think it was roughly like twice as much as any other country.

00:27:55.640 --> 00:27:57.980
But that's partly because there's so much tech.

00:27:58.120 --> 00:28:05.140
So what I found was really interesting was how much growth there was for Python jobs in different countries.

00:28:05.140 --> 00:28:06.220
Yeah, exactly.

00:28:06.220 --> 00:28:11.980
So I used the job board that's on python.org to gather some of those stats.

00:28:11.980 --> 00:28:19.040
So I'm not sure how well those results, you know, actually blanket everything that's happening.

00:28:19.040 --> 00:28:27.480
But it's definitely amazing to see what's happening in Brazil right now, how it's, you know, doubled in percentage in some of the areas.

00:28:27.480 --> 00:28:31.880
Especially in countries that we might not consider as tech hubs.

00:28:31.880 --> 00:28:34.700
But this is telling that maybe in the future we will.

00:28:34.700 --> 00:28:36.000
Yeah, that's really interesting.

00:28:36.000 --> 00:28:36.820
It definitely could be.

00:28:36.820 --> 00:28:47.700
Yeah, so you had like year over year growth from 2016 to 2017, like four times the demand in Brazil, twice in China, and almost not quite twice, but quite a bit in India as well.

00:28:47.700 --> 00:28:50.780
And those are all really good signs for people that know how to write Python.

00:28:50.780 --> 00:28:51.960
Yeah, absolutely.

00:28:52.380 --> 00:28:59.060
Probably this chart explains the numbers that we gathered with the survey on the distribution among countries.

00:28:59.060 --> 00:28:59.640
Yeah.

00:28:59.640 --> 00:29:04.460
So we also see here India has grown a lot, China, Brazil.

00:29:04.460 --> 00:29:07.640
Those were all the ones where the participants were now coming from, right?

00:29:07.640 --> 00:29:08.620
Yeah, exactly.

00:29:08.620 --> 00:29:09.020
Yeah.

00:29:09.020 --> 00:29:09.760
Yeah, great.

00:29:10.400 --> 00:29:22.880
So, Dimitri, one of the things that you talked about on the survey that I thought was pretty interesting was, and we kind of touched on this earlier, is, are you a Python developer or a developer that uses Python?

00:29:22.880 --> 00:29:28.380
So one way you tried to get at that was, is Python your main development language?

00:29:28.380 --> 00:29:29.640
So what did you find out there?

00:29:30.140 --> 00:29:30.360
Yeah.

00:29:30.360 --> 00:29:30.360
Yeah.

00:29:30.360 --> 00:29:39.740
So with this survey, we identified that almost four out of five Python developers use Python as their main language.

00:29:39.740 --> 00:29:45.280
And comparing to the previous survey, it's 4% increase.

00:29:45.280 --> 00:29:45.620
Right.

00:29:45.620 --> 00:29:51.100
So we have more Python developers and the ones, and among them, more of them are choosing to make it their main language.

00:29:51.100 --> 00:29:51.560
True.

00:29:51.560 --> 00:29:52.020
True.

00:29:52.020 --> 00:29:52.640
Yeah.

00:29:52.780 --> 00:29:59.020
So, yeah, and I think that this can be explained by rapidly growing popularity of Python among data scientists.

00:29:59.020 --> 00:29:59.780
Yeah.

00:29:59.780 --> 00:30:02.320
Because this segment of users is growing much faster than others.

00:30:02.320 --> 00:30:12.400
Yeah, I guess if I was going to take, like, what is the one, if there was one biggest takeaway from your survey that you two did, it would have to be that, wow, data science is making an impact.

00:30:12.400 --> 00:30:13.380
Absolutely.

00:30:13.380 --> 00:30:14.100
True.

00:30:14.100 --> 00:30:14.320
Right?

00:30:14.320 --> 00:30:15.600
There was a lot of growth.

00:30:15.640 --> 00:30:25.620
If you look at the growth curves of Python popularity over time, there seemed to be a pretty strong increase in the rate of growth 2012, 2013, and then it's gone on from there.

00:30:25.620 --> 00:30:33.800
And I feel like that's when, you know, a lot of, you know, Jupyter is kicking in, the machine learning stuff in Python is kicking in.

00:30:33.800 --> 00:30:40.180
There's just a lot of people are sort of moving away from R and those other languages and, you know, MATLAB and whatnot into Python.

00:30:40.180 --> 00:30:42.920
So that definitely shows up here, doesn't it?

00:30:42.920 --> 00:30:43.560
Mm-hmm.

00:30:43.640 --> 00:30:49.920
Yeah, so you asked, what are the types of, like, what type of developer are you or what types of development do you do?

00:30:49.920 --> 00:30:53.140
And you have 50% data analysis and 48 web developers.

00:30:53.140 --> 00:30:55.800
Yeah, that's right there, isn't it?

00:30:55.800 --> 00:30:56.640
Yeah.

00:30:56.640 --> 00:30:59.740
Actually, in the survey, we asked two similar questions.

00:30:59.740 --> 00:31:04.220
What do you use Python for where respondents could select multiple answers?

00:31:04.220 --> 00:31:08.440
And what do you use Python for the most with only one possible answer?

00:31:08.980 --> 00:31:14.480
So you just described the results from the first question where multiple answers were allowed.

00:31:14.480 --> 00:31:15.460
What about the other one?

00:31:15.460 --> 00:31:15.960
Yeah.

00:31:15.960 --> 00:31:16.300
About, yeah.

00:31:16.300 --> 00:31:24.500
About the other one, when we asked about the primary type of development, 26% of Python users identified as web developers.

00:31:24.500 --> 00:31:30.380
Outpacing data analysis reported by only 18% by a wide margin.

00:31:30.800 --> 00:31:36.680
However, when we combined, we had two options for data science, actually, data analysis and machine building.

00:31:36.680 --> 00:31:45.980
And if we combine those two types of development, we come up to 27% of people doing primarily data science.

00:31:46.360 --> 00:31:53.600
So actually, there is 26% of web developers and 27% of people doing data science.

00:31:53.600 --> 00:31:54.860
So it's like one-to-one.

00:31:54.860 --> 00:31:57.460
And you asked this question on the survey.

00:31:57.460 --> 00:32:05.740
You said, you asked them, I can't remember exactly what the question was, but it was like, what do you expect people primarily do?

00:32:05.740 --> 00:32:09.120
Or what ratio among data scientists and web developers?

00:32:09.120 --> 00:32:09.560
Yeah.

00:32:09.560 --> 00:32:12.340
And one out of 10 got that ratio correct.

00:32:12.500 --> 00:32:16.040
Yeah, that was one of the most intriguing questions in this survey.

00:32:16.040 --> 00:32:23.540
So we asked people to estimate the ratio between web developers and data scientists in the Python world.

00:32:23.540 --> 00:32:29.140
Respondents could answer based just on their own experience, belief, and general gut feeling.

00:32:29.140 --> 00:32:38.640
Because we explicitly asked about primarily types of development in the previous question, we could compare the community perception with the real stats that we've got from this survey.

00:32:39.340 --> 00:32:43.880
So based on the data we've got from the question about main type of development, ratio is one-to-one.

00:32:43.880 --> 00:32:49.200
And just as you said, only one in 10 people guessed this correctly.

00:32:49.200 --> 00:32:49.760
Yeah.

00:32:49.760 --> 00:32:57.340
And the most common answer for the community was there are five times as many web developers as there are data scientists.

00:32:57.340 --> 00:32:57.780
Right.

00:32:57.780 --> 00:32:58.580
Exactly.

00:32:58.580 --> 00:33:01.260
That's way, it's not like a little off.

00:33:03.720 --> 00:33:13.180
What I find most interesting about this, like this is already super interesting, but what I find even more interesting is half of the people who took this survey are data scientists.

00:33:13.180 --> 00:33:15.820
And still, that was the most common answer.

00:33:15.820 --> 00:33:24.280
So in some sense, I think it's interesting that even probably among data scientists, they feel like they're more underrepresented than they actually are.

00:33:24.600 --> 00:33:25.600
That's a great point.

00:33:25.600 --> 00:33:26.240
Yeah.

00:33:26.240 --> 00:33:27.060
Isn't that crazy?

00:33:27.060 --> 00:33:27.540
Yeah.

00:33:27.540 --> 00:33:30.840
So I think, you know, maybe this will sort of shine a little light on that, right?

00:33:30.840 --> 00:33:32.920
That people are like, wait, most people do what I do.

00:33:32.920 --> 00:33:36.580
I thought I was the weird guy in the corner that they came to ask for graphs or whatever, right?

00:33:36.580 --> 00:33:39.520
Well, hopefully it will bring many communities together.

00:33:40.080 --> 00:33:40.420
Yeah.

00:33:40.420 --> 00:34:04.980
You know, it makes me think of the keynote from PyCon 2017, I think it was, when Jake Vanderplass talked, you know, he did a great keynote there here in Portland, actually, and about Python, the Python community being a mosaic of all these different ways in which people use Python and their goals and what their whole training and what they want to do and the types of things they're building and just appreciating the differences.

00:34:04.980 --> 00:34:08.780
And I think this is just one more reason we should appreciate that keynote.

00:34:09.280 --> 00:34:10.240
Yeah, I agree 100%.

00:34:10.240 --> 00:34:23.420
Even when we look at the 2018 keynote by Q, and she's talking about kids learning how to use Python to program Raspberry Pis so they can water their flowers outside.

00:34:23.420 --> 00:34:26.520
It's a wide, wide range and a big mosaic.

00:34:26.520 --> 00:34:27.960
So I'm glad you brought that up.

00:34:27.960 --> 00:34:33.540
This portion of Talk Python To Me is brought to you by Brilliant.org.

00:34:33.880 --> 00:34:40.740
Many of you have come to software development and data science through paths that did not include a full-on computer science or mathematic degree.

00:34:40.740 --> 00:34:45.360
Yet, in our technical field, you may find you need to learn exactly these topics.

00:34:45.360 --> 00:34:47.020
You could go back to university.

00:34:47.020 --> 00:34:50.940
But then again, this is the 21st century and we do have the internet.

00:34:51.360 --> 00:34:55.640
Why not take some engaging online courses to quickly get just the skills that you need?

00:34:55.640 --> 00:34:57.880
That's where Brilliant.org comes in.

00:34:57.880 --> 00:35:00.320
They believe that effective learning is active.

00:35:00.320 --> 00:35:05.020
So master the concepts you need by solving fun, challenging problems yourself.

00:35:05.580 --> 00:35:06.680
Get started today.

00:35:06.680 --> 00:35:10.740
Just visit talkpython.fm/brilliant and sign up for free.

00:35:10.740 --> 00:35:11.900
And don't wait either.

00:35:11.900 --> 00:35:16.260
If you decide to upgrade to a paid account for guided courses and more practice exercises,

00:35:16.260 --> 00:35:22.700
the first 200 people that sign up from Talk Python will get an extra 20% off an annual premium subscription.

00:35:22.700 --> 00:35:25.740
That's talkpython.fm/brilliant.

00:35:25.740 --> 00:35:34.100
So another hot button item in the community has got to be Python 2 versus Python 3, right?

00:35:34.100 --> 00:35:35.060
Yeah, exactly.

00:35:35.300 --> 00:35:41.660
So with this survey, we've learned that Python 3 is now a strong leader with 75%.

00:35:41.660 --> 00:35:46.040
And Python 2 is used as the main interpreter by only 25% of people.

00:35:46.040 --> 00:35:48.100
75% Python 3.

00:35:48.100 --> 00:35:49.060
Yeah.

00:35:49.060 --> 00:35:52.100
And the share of Python 3 is growing rapidly.

00:35:52.100 --> 00:36:01.060
In 2016 survey, we had just only 16% of people using Python 2 and 40% for Python 3.

00:36:01.060 --> 00:36:03.520
So it's two times increase for Python 3.

00:36:03.520 --> 00:36:04.480
That's really great.

00:36:04.480 --> 00:36:06.400
I think it's super good news for the community.

00:36:06.400 --> 00:36:15.180
I feel like the story used to be I can't switch to Python 3 because library X, Y, and Z doesn't support Python 3.

00:36:15.180 --> 00:36:16.040
And I need it, right?

00:36:16.440 --> 00:36:28.660
And now I feel like the story is there's these three libraries I really would like to use, but they only support Python 3.

00:36:28.660 --> 00:36:41.020
All the new features are only Python 3.

00:36:41.020 --> 00:36:41.320
Yeah, true.

00:36:41.320 --> 00:36:51.220
Another interesting finding from the same question that the distribution of Python 3 users is different comparing web developers and data scientists.

00:36:51.220 --> 00:37:04.780
So among web developers, only 70% of people use Python 3.

00:37:04.780 --> 00:37:07.140
Why do you think that is?

00:37:07.140 --> 00:37:07.640
I think that is?

00:37:07.640 --> 00:37:16.400
I think that this can be explained that web developers still have to maintain some legacy code while transitioning to Python 3.

00:37:16.400 --> 00:37:21.320
And many data analysts and machine learning specialists.

00:37:21.320 --> 00:37:25.400
They have joined the community just recently and went straight forward to Python 3.

00:37:25.400 --> 00:37:27.240
Yeah, I think you're probably right.

00:37:27.240 --> 00:37:37.720
This is a really great stat because I was talking to somebody on Twitter talking about a colleague saying, hey, my colleague says we should be using Python 2 because almost everybody uses Python 2.

00:37:37.720 --> 00:37:40.440
There's this graph or that graph that they found somewhere.

00:37:40.440 --> 00:37:47.060
And it's not just not does everybody, you know, it's not false that everybody uses Python 2.

00:37:47.060 --> 00:37:48.320
It's like really false, right?

00:37:48.320 --> 00:37:50.260
75% of the people are using Python 3.

00:37:50.260 --> 00:37:59.060
And I think this number is going to rapidly increase as we get to January 1st, 2020 when Python 2 is no longer supported.

00:37:59.060 --> 00:37:59.700
True.

00:37:59.700 --> 00:38:02.440
So I'll throw this out to all the consultants out there.

00:38:02.440 --> 00:38:10.140
So I have a theory that October, November, and especially January, right around that time frame.

00:38:10.140 --> 00:38:20.540
So October, November, December of 2019, and January 2020, there are going to be a lot of executives and stuff going, wait a minute.

00:38:20.540 --> 00:38:28.800
Are you telling me that our main platform for our website or our company actually no longer supported if there's bugs?

00:38:28.800 --> 00:38:29.820
We can't get them fixed?

00:38:29.880 --> 00:38:32.820
It's like, yeah, because you guys wouldn't let us rewrite it in Python 3.

00:38:32.820 --> 00:38:34.200
So here we are.

00:38:34.200 --> 00:38:36.820
And it's going to be kind of like the Y2K.

00:38:36.820 --> 00:38:41.380
There's going to be all these consultants that are like, hey, I'm a specialist in converting from Python 2 to Python 3.

00:38:41.380 --> 00:38:42.780
And there's going to be a lot of work around that.

00:38:42.780 --> 00:38:43.880
That's a great comparison.

00:38:43.880 --> 00:38:47.060
Yeah, exactly.

00:38:47.060 --> 00:38:48.400
Great job opportunity.

00:38:48.400 --> 00:38:49.100
Exactly.

00:38:49.100 --> 00:38:56.100
People out there listening, you have about a year to get really good and market yourself as a Python 2 to 3 expert.

00:38:57.960 --> 00:39:00.180
Yeah, it's pretty cool that this is out there.

00:39:00.180 --> 00:39:00.760
All right.

00:39:00.760 --> 00:39:04.360
So I guess we could talk a little bit about what languages and frameworks are popular.

00:39:04.360 --> 00:39:05.720
What did you find there?

00:39:05.720 --> 00:39:10.840
Yeah, the most popular languages used together with Python is JavaScript.

00:39:10.840 --> 00:39:13.500
So 50% of Python developers use JavaScript.

00:39:13.500 --> 00:39:18.000
You know, that ties almost exactly to the 49% of web developers.

00:39:18.000 --> 00:39:18.540
True.

00:39:18.540 --> 00:39:19.100
Right?

00:39:19.900 --> 00:39:24.040
Another thing, we also found that HTML and CSS used by 49%.

00:39:24.040 --> 00:39:29.900
So it's a pretty close number, which kind of confirms the same thing, like the same takeaway.

00:39:29.900 --> 00:39:37.700
We also have 39% of people using SQL, which kind of also related to web development.

00:39:37.700 --> 00:39:41.200
Bash and Shell, 39%.

00:39:41.200 --> 00:39:45.280
Interestingly, 34% use C and C++.

00:39:45.280 --> 00:39:47.860
23% Java.

00:39:47.860 --> 00:39:49.780
14% PHP.

00:39:49.780 --> 00:39:51.340
That's interesting.

00:39:51.340 --> 00:39:53.180
11% C#.

00:39:53.180 --> 00:39:54.780
Yeah, that's pretty interesting.

00:39:54.780 --> 00:39:58.560
Certainly there's the web languages tie in there and the database stuff.

00:39:58.560 --> 00:40:04.660
What about like popular libraries like Django versus Flask, those types of things?

00:40:05.180 --> 00:40:08.160
Yeah, we identified that Django is the most popular framework.

00:40:08.160 --> 00:40:10.500
It's used by 41% of Python developers.

00:40:10.500 --> 00:40:12.360
It's not a big surprise, is it?

00:40:12.360 --> 00:40:13.740
It's not.

00:40:13.740 --> 00:40:17.840
So one thing that's interesting about your analysis here is it's kind of interactive.

00:40:17.840 --> 00:40:21.660
You can see all the results are from a web developer view or a data science view.

00:40:21.660 --> 00:40:23.360
So you have Django at 41%.

00:40:23.360 --> 00:40:25.440
You have NumPy Pandas at 39%.

00:40:25.440 --> 00:40:27.780
So they're almost tied in popularity.

00:40:27.780 --> 00:40:32.340
But if you say, show that to me for web developers, it's 70%.

00:40:32.340 --> 00:40:35.500
75% of web developers are using Django.

00:40:35.500 --> 00:40:36.640
We're just a little bit of NumPy.

00:40:36.640 --> 00:40:38.760
And data science, it's like you flip the graph, right?

00:40:38.760 --> 00:40:39.520
Quite a bit.

00:40:39.520 --> 00:40:40.540
We just kind of expect it, yeah.

00:40:40.540 --> 00:40:41.240
Yeah.

00:40:41.240 --> 00:40:46.080
You also have an analysis of like additional parallel technologies like Jupyter and Docker

00:40:46.080 --> 00:40:47.280
and Anaconda and so on.

00:40:47.280 --> 00:40:49.660
And similar stuff, right?

00:40:49.660 --> 00:40:53.800
Like web developers, more Docker, data science, very much Jupyter.

00:40:54.120 --> 00:41:00.080
Yeah, when asked about those additional technologies, Jupyter Notebook ranked highest at 31%,

00:41:00.080 --> 00:41:04.300
which makes sense given the large number of developers involved in data science.

00:41:04.300 --> 00:41:10.320
Yeah, I thought another interesting thing that you guys spoke about was cloud platforms.

00:41:10.320 --> 00:41:11.280
Oh, yeah.

00:41:11.280 --> 00:41:12.480
When we asked which one.

00:41:12.480 --> 00:41:13.700
Yeah, which one do you use?

00:41:13.700 --> 00:41:20.260
Like when I think of it, certainly the 800-pound gorilla in the room, the big thing is AWS, right?

00:41:20.260 --> 00:41:21.160
True.

00:41:21.260 --> 00:41:26.840
And you hear stats that Microsoft Azure is in second place among all the other ones.

00:41:26.840 --> 00:41:30.740
But restrict that view to the Python community and that's not true, right?

00:41:30.740 --> 00:41:31.560
Mm-hmm.

00:41:31.560 --> 00:41:32.100
Exactly.

00:41:32.100 --> 00:41:36.220
So Microsoft Azure ranked at 16%.

00:41:36.220 --> 00:41:37.360
What about some of the other ones?

00:41:37.360 --> 00:41:38.380
What was number two?

00:41:38.380 --> 00:41:39.220
Yeah.

00:41:39.440 --> 00:41:40.820
Number two was Google App Engine.

00:41:40.820 --> 00:41:50.220
We had Heroku with 26%, DigitalOcean with 23%, and the fifth place is for Microsoft Azure.

00:41:50.220 --> 00:41:50.980
Yeah.

00:41:50.980 --> 00:41:52.000
Yeah, that's pretty interesting.

00:41:52.000 --> 00:41:59.600
You could tell for sure that AWS plays an important role because when they have an outage, it seems like the internet itself is broken.

00:42:02.080 --> 00:42:03.140
Why is everything down?

00:42:03.140 --> 00:42:04.840
Oh, AWS Virginia is down.

00:42:04.840 --> 00:42:05.380
I get it.

00:42:05.380 --> 00:42:06.240
Yeah.

00:42:06.240 --> 00:42:06.580
Yeah.

00:42:06.580 --> 00:42:09.440
This question about popular cloud platforms.

00:42:09.440 --> 00:42:15.260
We didn't list a lot of other popular options.

00:42:15.260 --> 00:42:18.520
However, people answered in the other option.

00:42:18.520 --> 00:42:23.020
So they mentioned Linode, Python Anywhere, OpenShift, and OpenStack.

00:42:23.020 --> 00:42:30.460
So these platforms are also quite popular among Python developers, and we are going to include those options in the next iteration of our survey.

00:42:30.460 --> 00:42:31.240
Oh, yeah.

00:42:31.240 --> 00:42:32.260
That'll be really interesting.

00:42:32.260 --> 00:42:36.760
Well, I also feel like some of these have gotten more momentum in the most recent times.

00:42:36.760 --> 00:42:42.220
So I'm very interested to see what the next version of the survey is going to bring in comparison of this one.

00:42:42.220 --> 00:42:42.780
Yeah.

00:42:42.780 --> 00:42:46.540
You'll start to be able to develop these trends, which will actually be super interesting.

00:42:46.540 --> 00:42:48.600
I think that would be the most interesting part.

00:42:48.600 --> 00:42:49.640
Yeah, for sure.

00:42:49.640 --> 00:42:49.960
Exactly.

00:42:49.960 --> 00:42:53.360
It's going to be the main feature of our next survey.

00:42:53.360 --> 00:42:53.720
Yeah.

00:42:53.720 --> 00:43:00.320
So, Dimitri, since you brought up Python Anywhere, something that really surprised me a little while ago, well, quite a while ago, actually,

00:43:00.440 --> 00:43:12.040
but I had gone to python.org so many times, and there's a little text box with, like, code right there and, like, a prompt-looking button.

00:43:12.040 --> 00:43:19.900
But what I didn't realize is if you click that prompt, that will open an interactive shell on Python Anywhere where you can just start typing Python.

00:43:19.900 --> 00:43:21.340
Yes, it will.

00:43:21.340 --> 00:43:22.520
That's pretty cool.

00:43:22.520 --> 00:43:24.620
I wonder how many people actually know about that.

00:43:24.620 --> 00:43:27.720
We probably don't tweet about it as much as we should.

00:43:27.720 --> 00:43:28.380
That's a good point.

00:43:28.380 --> 00:43:29.860
Yeah, it's cool.

00:43:30.060 --> 00:43:34.860
I'm looking at, like, a Bash shell or actually a Python REPL on C6 right here on Python.

00:43:34.860 --> 00:43:35.220
Exactly.

00:43:35.220 --> 00:43:36.140
3.6.

00:43:36.140 --> 00:43:37.500
Very cool.

00:43:37.500 --> 00:43:38.960
How cool is that?

00:43:38.960 --> 00:43:40.180
Yeah, it's super cool.

00:43:40.180 --> 00:43:40.800
All right.

00:43:40.800 --> 00:43:41.620
So, let's see.

00:43:41.620 --> 00:43:44.320
Maybe we can talk a little bit about tools and features.

00:43:44.320 --> 00:43:50.320
One of the questions you asked were, here's a whole bunch of features that editors and other tools, like linters and source control,

00:43:50.320 --> 00:43:52.280
how much do you use them or not use them?

00:43:52.280 --> 00:43:53.380
Do you want to touch on that, Dimitri?

00:43:53.380 --> 00:43:54.560
Yeah, sure.

00:43:54.560 --> 00:43:59.760
So, the top spots were occupied by code up to completion, code refactoring,

00:43:59.760 --> 00:44:03.840
writing unique tests, using virtual environments for Python projects.

00:44:03.840 --> 00:44:12.000
On the other hand, no-scale databases, Python profilers, and code coverage tools were among the more rarely used tools and features.

00:44:12.360 --> 00:44:12.480
Yeah.

00:44:12.480 --> 00:44:17.360
So, I think it's too bad that, like, the profiler and code coverage weren't used that much.

00:44:17.360 --> 00:44:21.160
But, you know, they're such a valuable thing that I think it's overlooked.

00:44:21.160 --> 00:44:21.660
Yeah.

00:44:21.900 --> 00:44:28.480
And, by the way, the results that they've got in 2017 is very similar to the data we've got in 2016.

00:44:28.480 --> 00:44:34.920
So, the picture or the usage of those tools doesn't change much, seems to be.

00:44:34.920 --> 00:44:35.300
Okay.

00:44:35.300 --> 00:44:35.740
Interesting.

00:44:35.740 --> 00:44:37.600
I should probably ask about this one.

00:44:37.600 --> 00:44:40.840
Dimitri would probably be really more than happy to answer this one.

00:44:41.060 --> 00:44:41.940
What about editors?

00:44:41.940 --> 00:44:49.320
Well, for editors and IDs, we asked two similar questions.

00:44:49.320 --> 00:44:55.180
So, one of them was, what editor or ID have you considered for use in your Python development?

00:44:55.480 --> 00:45:03.240
With multiple answers allowed and a single answer option, a question, what is the main editor you use for your current Python development?

00:45:03.240 --> 00:45:06.480
So, PyCharm is the most popular tool.

00:45:06.480 --> 00:45:07.680
We have around...

00:45:07.680 --> 00:45:09.120
You have 32% of the people...

00:45:09.120 --> 00:45:10.940
Yeah, 32% for PyCharm.

00:45:10.940 --> 00:45:11.200
Yeah.

00:45:11.200 --> 00:45:13.780
For both editions, PyCharm community and PyCharm professional.

00:45:13.780 --> 00:45:21.860
And that's, I mean, like, I think that number would be massively skewed if, like, you and JetBrains were the ones promoting this project.

00:45:21.860 --> 00:45:23.680
But, like, we talked about the sources, right?

00:45:23.680 --> 00:45:24.420
It wasn't really.

00:45:24.420 --> 00:45:25.120
Yeah.

00:45:25.580 --> 00:45:25.800
Yeah.

00:45:25.800 --> 00:45:27.820
And then what are some of the other editors people use?

00:45:27.820 --> 00:45:35.040
Some of the other popular editors are Sublime Text, Veeam, Idle, Atom, and VS Code.

00:45:35.040 --> 00:45:35.860
Yeah.

00:45:35.860 --> 00:45:38.040
I suspect the Idle speaks a lot to the students.

00:45:38.040 --> 00:45:39.740
And I also think...

00:45:39.740 --> 00:45:43.100
I feel like, you know, the survey was done leading up to October 2017.

00:45:43.100 --> 00:45:46.760
I feel like VS Code will make a much higher appearance.

00:45:46.760 --> 00:45:47.200
Yeah.

00:45:47.200 --> 00:45:48.260
Right?

00:45:48.260 --> 00:45:48.700
Like...

00:45:48.700 --> 00:45:52.080
We are really looking forward for an updated results this year.

00:45:52.080 --> 00:45:52.720
Yeah.

00:45:52.900 --> 00:45:56.360
I think the VS Code team has, like, really put a lot of effort into Python.

00:45:56.360 --> 00:45:57.480
I've started...

00:45:57.480 --> 00:46:01.000
You know, I ask this question every time at the end of the podcast, what editor people use.

00:46:01.000 --> 00:46:04.200
And I hear VS Code showing up more, a lot more than it used to.

00:46:04.440 --> 00:46:07.780
I see a lot of great positivity around it on Twitter as well.

00:46:07.780 --> 00:46:08.500
Yeah.

00:46:08.500 --> 00:46:08.980
For sure.

00:46:08.980 --> 00:46:10.100
Another thing...

00:46:10.100 --> 00:46:10.320
Yeah.

00:46:10.320 --> 00:46:15.560
Another thing that's interesting, I think, is to discuss how people get Python, right?

00:46:15.720 --> 00:46:21.740
Like, Eva, I'm not sure what you can do, but if you could just get Microsoft to ship Python 3 with Windows, we'd all be in a good place.

00:46:21.740 --> 00:46:23.400
But that doesn't happen.

00:46:23.400 --> 00:46:28.560
So there's different ways in which we might get Python on your system.

00:46:28.560 --> 00:46:33.580
So you asked that question, and some of the options were like, you go to Python.org and you click the download button.

00:46:34.100 --> 00:46:43.400
Or use something like Homebrew or Aptitude on Linux or Anaconda or surprisingly many people build it from source.

00:46:43.400 --> 00:46:45.480
7% Yeah.

00:46:45.480 --> 00:46:47.480
True hackers.

00:46:47.480 --> 00:46:48.440
Exactly.

00:46:48.440 --> 00:46:49.480
That's a lot.

00:46:49.480 --> 00:46:51.160
7%, right?

00:46:51.220 --> 00:46:53.680
I mean, I know people do it, but that seems like a lot.

00:46:53.680 --> 00:47:04.100
Anyway, so I guess we had 39% go and download it from Python.org, 31% get it through some kind of package manager in their OS, and 15% in Anaconda.

00:47:04.100 --> 00:47:04.620
Correct.

00:47:04.620 --> 00:47:05.320
Yeah.

00:47:05.320 --> 00:47:07.320
Those are pretty interesting things to know, I think.

00:47:07.320 --> 00:47:16.860
Well, it makes me happy that, you know, one of the main infrastructure items that the PSF helps maintain for the community is Python.org.

00:47:16.860 --> 00:47:19.240
So I'm very happy to see that it's being used worldwide.

00:47:19.240 --> 00:47:20.320
Yeah, absolutely.

00:47:20.880 --> 00:47:25.060
I guess maybe the last question directly we can touch on is operating systems.

00:47:25.060 --> 00:47:38.820
Because to me, if I had to be somehow stripped of my knowledge and just sort of walked around conferences or something, I would feel like, well, the majority of the Python world runs on Mac, right?

00:47:38.820 --> 00:47:40.440
I would think so, yeah.

00:47:40.440 --> 00:47:42.220
Because, like, everyone's carrying around a Mac.

00:47:42.220 --> 00:47:43.240
They got all their stickers on it.

00:47:43.240 --> 00:47:43.760
They're all cool.

00:47:43.760 --> 00:47:47.580
But that's not exactly how it breaks down, is it?

00:47:47.580 --> 00:47:48.220
Yeah, exactly.

00:47:48.220 --> 00:47:50.640
So it feels like a very limited view.

00:47:50.640 --> 00:47:52.360
Well, exactly.

00:47:52.820 --> 00:48:01.600
That's why we think that the survey is more of a global outlook on how things are versus the way that we see them.

00:48:02.060 --> 00:48:10.080
Yeah, so your survey found that 49% of the people use Windows, 19% Linux, 15% Mac, and then other people just, I don't know, other stuff.

00:48:10.900 --> 00:48:12.520
Which is, I think, is pretty interesting.

00:48:12.520 --> 00:48:17.640
And it really, you know, I try to drive the point home that Windows is super important in the Python space.

00:48:17.980 --> 00:48:18.600
And I know it's a lot of, I think, yeah.

00:48:18.600 --> 00:48:19.700
And I know it gets a lot of love.

00:48:19.700 --> 00:48:25.260
But also, I feel like periodically packages people build, they're not tested on Windows, or they won't install on Windows.

00:48:25.260 --> 00:48:26.520
Or if they do, they're hard.

00:48:26.520 --> 00:48:29.900
Unlike Mac and Linux, it might be just pip install.

00:48:29.900 --> 00:48:33.220
But on Windows, you've got to install this other weird thing to make it work, you know.

00:48:33.700 --> 00:48:40.100
So I feel like Windows kind of gets lost in people thinking about their, where people are using Python.

00:48:40.100 --> 00:48:43.200
But in fact, it's more than two times as popular as anything else.

00:48:43.200 --> 00:48:43.660
Yeah.

00:48:43.660 --> 00:48:44.660
Yeah, we're thinking about.

00:48:44.660 --> 00:48:45.140
All right.

00:48:45.140 --> 00:48:48.720
Well, I think that's probably it for the topics of the survey directly we want to cover.

00:48:48.720 --> 00:48:49.980
Well done, you guys.

00:48:49.980 --> 00:48:50.880
That was really nice.

00:48:50.880 --> 00:48:51.660
Yeah, thank you.

00:48:51.660 --> 00:48:52.720
Thank you.

00:48:52.720 --> 00:48:54.380
People want to give you feedback?

00:48:54.380 --> 00:48:55.420
How do they do it?

00:48:55.960 --> 00:48:57.140
They should email us.

00:48:57.140 --> 00:48:58.940
We have a mailing list.

00:48:58.940 --> 00:49:01.520
And we also have a GitHub repo.

00:49:01.520 --> 00:49:04.840
So the mailing list is surveys at python.org.

00:49:04.840 --> 00:49:06.320
And that will go to Dimitri and I.

00:49:06.320 --> 00:49:11.540
And the GitHub link, Michael, can you include that in the links below?

00:49:11.540 --> 00:49:11.980
Awesome.

00:49:11.980 --> 00:49:13.280
Yeah, I'll definitely include it.

00:49:13.280 --> 00:49:18.400
So the link to the GitHub repo, which has an issue tracker where people can submit issues.

00:49:18.400 --> 00:49:19.200
That's cool.

00:49:19.200 --> 00:49:20.160
And then also...

00:49:20.160 --> 00:49:21.780
Also feedback, not just issues.

00:49:21.780 --> 00:49:27.960
But if they have any ideas for improvements or, you know, let's say they know of a community

00:49:27.960 --> 00:49:31.040
that wants to get involved for next time, they could definitely post it there.

00:49:31.040 --> 00:49:31.740
Yeah, interesting.

00:49:31.740 --> 00:49:33.420
What about the raw data?

00:49:33.420 --> 00:49:38.080
Like, Dimitri's team took this and came up with what I said was a really beautiful result.

00:49:38.080 --> 00:49:43.120
But, you know, it is an interpretation of the data somewhat, right?

00:49:43.120 --> 00:49:43.580
Exactly.

00:49:43.580 --> 00:49:45.300
Can people do their own interpreting?

00:49:45.300 --> 00:49:46.400
Yeah, absolutely.

00:49:46.400 --> 00:49:50.600
So along with the report, we also shared the raw data in CSV format.

00:49:50.600 --> 00:49:51.480
Okay, cool.

00:49:51.480 --> 00:49:52.320
And yeah, that's...

00:49:52.320 --> 00:49:55.400
You can find that off the linked survey results.

00:49:55.400 --> 00:50:00.940
If you go by the link to the report, down in the bottom of the page, you can find the link

00:50:00.940 --> 00:50:01.700
to the raw data.

00:50:01.700 --> 00:50:01.920
Yeah.

00:50:01.920 --> 00:50:05.620
I won't link to it directly because you have a couple of things like, please consider this

00:50:05.620 --> 00:50:06.580
as you look at this data.

00:50:06.580 --> 00:50:07.760
I'll let people read that first.

00:50:07.760 --> 00:50:08.840
But yeah, nice.

00:50:08.840 --> 00:50:09.660
Yeah.

00:50:09.660 --> 00:50:17.740
Unfortunately, last year, we didn't provide Python scripts, which people can use to, like,

00:50:17.740 --> 00:50:21.080
bootstrap their analysis with this raw data.

00:50:21.180 --> 00:50:22.640
Yeah, that was a suggestion.

00:50:22.640 --> 00:50:25.860
Yeah, that was a suggestion after our talk.

00:50:25.860 --> 00:50:26.740
Right.

00:50:26.740 --> 00:50:30.000
So maybe a Jupyter Notebook that does the analysis or something, right?

00:50:30.000 --> 00:50:30.460
Exactly.

00:50:30.460 --> 00:50:30.780
Exactly.

00:50:30.780 --> 00:50:31.320
Yeah.

00:50:31.320 --> 00:50:32.660
That'd be really sweet to have.

00:50:32.660 --> 00:50:33.120
All right.

00:50:33.120 --> 00:50:34.860
So you're doing this again?

00:50:34.860 --> 00:50:35.420
Absolutely.

00:50:37.100 --> 00:50:37.640
Very soon.

00:50:37.640 --> 00:50:37.660
Very soon.

00:50:37.660 --> 00:50:41.760
I'm not sure when you're going to be airing the episode, but we're planning on launching

00:50:41.760 --> 00:50:42.420
in October.

00:50:42.420 --> 00:50:43.140
Okay.

00:50:43.140 --> 00:50:43.400
Yeah.

00:50:43.400 --> 00:50:44.940
So this episode will be out really soon.

00:50:44.940 --> 00:50:49.040
So people should have some time to get ready and prepare for its arrival.

00:50:49.040 --> 00:50:52.660
But sometime in October, do you actually have a date when you're letting out or just general

00:50:52.660 --> 00:50:53.000
timeframe?

00:50:53.500 --> 00:50:56.560
We are going to start the survey in the beginning of October.

00:50:56.560 --> 00:51:00.500
We don't have an exact date, but stay tuned for the beginning of October.

00:51:00.500 --> 00:51:01.160
All right.

00:51:01.160 --> 00:51:01.360
Cool.

00:51:01.360 --> 00:51:05.080
And I'll try to spread the word again to all of the listeners when that happens.

00:51:05.080 --> 00:51:05.960
Yeah.

00:51:05.960 --> 00:51:06.540
All right.

00:51:06.600 --> 00:51:08.720
Well, I think we probably should leave it there.

00:51:08.720 --> 00:51:10.060
We've covered a lot of stuff.

00:51:10.060 --> 00:51:13.220
And I really think this is a great service you all are doing for the community.

00:51:13.220 --> 00:51:19.040
And like you, I think the trends are going to be as relevant as the actual numbers.

00:51:19.040 --> 00:51:20.200
Yeah, I agree.

00:51:20.200 --> 00:51:23.960
And I'm very happy that it's gaining some momentum and interest.

00:51:23.960 --> 00:51:26.380
And thank you so much for inviting us to talk about it.

00:51:26.380 --> 00:51:27.040
Yeah, absolutely.

00:51:27.040 --> 00:51:28.840
So final call to action.

00:51:28.840 --> 00:51:32.200
Maybe people could spread the word.

00:51:32.200 --> 00:51:35.320
Like when you hear that the survey is out, tell everyone you know.

00:51:35.320 --> 00:51:36.220
Encourage them.

00:51:36.480 --> 00:51:38.740
Drop it in your internal company's Slack channel.

00:51:38.740 --> 00:51:39.580
Things like that, right?

00:51:39.580 --> 00:51:40.320
Yeah, exactly.

00:51:40.320 --> 00:51:44.660
We encourage everyone to take part in this survey and promote it to everyone.

00:51:44.660 --> 00:51:45.860
Post it on social media.

00:51:45.860 --> 00:51:46.300
Exactly.

00:51:46.300 --> 00:51:47.740
Take it to your user group.

00:51:47.740 --> 00:51:49.080
Yeah, that's a good idea.

00:51:49.080 --> 00:51:49.860
Take it to the user group.

00:51:49.860 --> 00:51:50.340
Very cool.

00:51:50.340 --> 00:51:50.820
All right.

00:51:50.820 --> 00:51:53.060
Eva, Dimitri, it's been great to have you on the show.

00:51:53.060 --> 00:51:55.520
Thanks for doing this project and sharing it with everyone.

00:51:55.520 --> 00:51:56.200
Thank you.

00:51:56.200 --> 00:51:57.320
And thank you for having us.

00:51:57.320 --> 00:51:58.440
Yeah, thanks, Michael.

00:51:58.440 --> 00:51:59.220
You bet.

00:51:59.220 --> 00:51:59.480
Bye.

00:51:59.480 --> 00:51:59.920
Bye.

00:51:59.920 --> 00:51:59.920
Bye.

00:51:59.920 --> 00:52:00.480
Bye.

00:52:00.480 --> 00:52:04.960
This has been another episode of Talk Python To Me.

00:52:05.480 --> 00:52:09.160
Our guests on this episode have been Eva Jodlowska and Dimitri Filipov.

00:52:09.160 --> 00:52:12.360
And it has been brought to you by Linode and Brilliant.org.

00:52:12.360 --> 00:52:16.120
Linode is bulletproof hosting for whatever you're building with Python.

00:52:16.120 --> 00:52:20.460
Get four months free at talkpython.fm/Linode.

00:52:20.460 --> 00:52:22.260
That's L-I-N-O-D-E.

00:52:22.260 --> 00:52:27.960
Brilliant.org wants to help you level up your math and science through fun, guided problem solving.

00:52:27.960 --> 00:52:31.620
Get started for free at talkpython.fm/brilliant.

00:52:32.220 --> 00:52:33.140
Want to level up your Python?

00:52:33.140 --> 00:52:38.300
If you're just getting started, try my Python jumpstart by building 10 apps or our brand new

00:52:38.300 --> 00:52:40.160
100 days of code in Python.

00:52:40.160 --> 00:52:43.920
And if you're interested in more than one course, be sure to check out the everything bundle.

00:52:43.920 --> 00:52:46.200
It's like a subscription that never expires.

00:52:46.200 --> 00:52:48.420
Be sure to subscribe to the show.

00:52:48.420 --> 00:52:50.600
Open your favorite podcatcher and search for Python.

00:52:50.600 --> 00:52:51.840
We should be right at the top.

00:52:51.840 --> 00:52:57.640
You can also find the iTunes feed at /itunes, Google Play feed at /play, and

00:52:57.640 --> 00:53:01.180
direct RSS feed at /rss on talkpython.fm.

00:53:01.180 --> 00:53:03.040
This is your host, Michael Kennedy.

00:53:03.040 --> 00:53:04.400
Thanks so much for listening.

00:53:04.400 --> 00:53:05.480
I really appreciate it.

00:53:05.480 --> 00:53:07.400
Now get out there and write some Python code.

00:53:07.400 --> 00:53:28.000
I'll see you next time.

