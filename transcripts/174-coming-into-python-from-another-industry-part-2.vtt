WEBVTT

00:00:00.001 --> 00:00:04.280
Not everyone comes to software development and Python through four-year computer science programs

00:00:04.280 --> 00:00:10.320
at universities. This episode highlights one alternative journey into Python. Over the course

00:00:10.320 --> 00:00:15.560
of two episodes, you will meet people who started in other industries and specializations and now

00:00:15.560 --> 00:00:21.220
make Python part of their daily experience. Some of them have used programming to power up their

00:00:21.220 --> 00:00:26.180
specialization. Others decided they'd rather just be doing programming full-time and made that switch

00:00:26.180 --> 00:00:32.480
over. This is part two of the two-part series. Our guests this time are Giuseppe Consolo, Brian Skin,

00:00:32.480 --> 00:00:39.840
and Teresa Borkusch. This is Talk Python to Me, episode 174, recorded July 15th, 2018.

00:00:53.120 --> 00:00:58.980
Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries, the ecosystem,

00:00:58.980 --> 00:01:04.200
and the personalities. This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy.

00:01:04.200 --> 00:01:09.500
Keep up with the show and listen to past episodes at talkpython.fm and follow the show on Twitter

00:01:09.500 --> 00:01:15.460
via at Talk Python. This episode is brought to you by Vetteri and Rollbar. Please check out what

00:01:15.460 --> 00:01:20.300
they're both offering during their segments. It really helps support the show. Giuseppe, Brian,

00:01:20.540 --> 00:01:25.200
Teresa, welcome to Talk Python. Thanks for having us. Yeah, it's really great to have you all here,

00:01:25.200 --> 00:01:30.480
and I'm really excited to share your story with everyone. So many people come into programming,

00:01:30.480 --> 00:01:37.420
either use it to amplify their skills or actually move into programming, and they haven't gone through

00:01:37.420 --> 00:01:43.160
a four-year computer science degree, and that pretty much covers you all as well. So I'm really excited to

00:01:43.160 --> 00:01:49.700
dig into what the motivation was, how that's affected you, and just what your experience was. So that's

00:01:49.700 --> 00:01:56.580
going to be great. I think probably the first place to start is, what industry did you come from? And I guess we'll

00:01:56.580 --> 00:02:02.640
just go down our list. Giuseppe, you started in somewhere that probably most people don't think of as hotbeds of

00:02:02.640 --> 00:02:11.080
programming. No, it's a completely different industry. So right now, my current job is a DevOps engineer. But until

00:02:11.080 --> 00:02:19.320
five years ago, I was in medical school, although I was not progressing, I was kind of stuck. I've been

00:02:19.320 --> 00:02:25.660
stuck for a few years. And there was an ambulance paramedic and member of a rescue team. I think

00:02:25.660 --> 00:02:32.900
rescue inside a chemical plant or something like that. So completely different industry to what I'm doing

00:02:32.960 --> 00:02:38.240
right now. Yeah. So you used to drive around racing to emergencies and ambulances and stuff like that,

00:02:38.240 --> 00:02:44.300
right? Yes, that's correct. Just got to be such a crazy job. And you must have some wild stories. It's

00:02:44.300 --> 00:02:48.780
very different than sitting behind a keyboard all day, I'm sure. A lot different. Although there's some

00:02:48.780 --> 00:02:54.000
similarity in the way, you know, in this is happening world, everything is on fire. And you have to,

00:02:54.000 --> 00:03:01.700
you know, be quick and do something very quickly do kind of diagnose on be very quick at finding what's

00:03:01.700 --> 00:03:07.140
wrong and fix it. So in a way, it's kind of similar. The web server is down. It's a little bit similar.

00:03:07.140 --> 00:03:13.020
All right, Brian Skin, how about you? My background is chemical engineering. I have a bachelor's and PhD

00:03:13.020 --> 00:03:19.640
there. And I really have not moved out of chemical engineering. I sort of changed subdisciplines,

00:03:19.720 --> 00:03:24.940
so to speak. What I'm working on now isn't at all directly related to what I got my doctorate,

00:03:24.940 --> 00:03:29.080
what I did for my doctorate, but it is still engineering, chemical engineering, sort of a

00:03:29.080 --> 00:03:35.020
thing. So my day to day, most of it is working on developing new processes for things like

00:03:35.020 --> 00:03:39.260
electroplating and electropolishing. For anybody who knows what electrochemistry is,

00:03:39.260 --> 00:03:41.980
if it's under that field, then we've probably played with it.

00:03:41.980 --> 00:03:47.820
Okay, that sounds really interesting. I suspect there's, you know, that's much closer to the sort

00:03:47.820 --> 00:03:55.140
of computational stuff. So probably less far away than say ambulances in medicine. But still,

00:03:55.140 --> 00:03:57.120
it's not a lot of programming, right?

00:03:57.120 --> 00:03:59.780
Not in the nominal job description. No.

00:03:59.780 --> 00:04:01.680
Yeah, sure. Cool. And Teresa?

00:04:01.680 --> 00:04:07.180
Currently, I'm a data scientist. But up until, I don't know, about two years ago, I had been

00:04:07.180 --> 00:04:13.320
a biologist. And I was a grad student. And I spent a lot of time studying animal behavior,

00:04:13.320 --> 00:04:18.780
really. So a lot of time abroad, observing dolphins and primates and stuff. So very little

00:04:18.780 --> 00:04:19.480
programming there.

00:04:19.480 --> 00:04:23.440
Yeah, a little bit disconnected. It sounds really fascinating, though.

00:04:23.440 --> 00:04:27.040
Yeah, super cool, but not a lot of time. Well, sometime behind a computer, but not programming.

00:04:27.040 --> 00:04:31.240
Yeah, more data analysis and vlogging what you've seen, right?

00:04:31.240 --> 00:04:38.540
Yeah, yeah. A lot of like looking at photos. And I did like some caveman level R for some stats

00:04:38.540 --> 00:04:40.040
classes. But that was as far as it went.

00:04:40.040 --> 00:04:45.660
Yeah, interesting. I like the description. So I guess the one of the first questions everyone's

00:04:45.660 --> 00:04:52.280
probably wondering to hear is, you know, why did you get into programming? Like, the chemical

00:04:52.280 --> 00:04:57.560
engineering is somewhat close to the computational stuff, but other ones, not so much, I guess. So

00:04:57.560 --> 00:05:01.540
Teresa, maybe we'll start with you. Like, what was the motivation to get into programming in Python?

00:05:01.540 --> 00:05:07.180
It sort of taps into, I liked, even though I was programming like a caveman in R, I did really like

00:05:07.180 --> 00:05:11.440
doing the sorts of statistical analyses and wanted to take it further and sort of wanted to make a

00:05:11.440 --> 00:05:16.920
career out of it. And thought that learning Python and sort of getting involved in data science would

00:05:16.920 --> 00:05:22.940
be the way to do that. So that was, yeah, that was my motivation. I found the tool set I had to

00:05:22.940 --> 00:05:26.960
answer sort of scientific questions wasn't really sufficient. And it was just looking for something

00:05:26.960 --> 00:05:27.880
bigger and more powerful.

00:05:27.880 --> 00:05:33.660
In the beginning, were you considering like, I'm going to get these skills so that I can

00:05:33.660 --> 00:05:38.860
do my biology work better? Or were you pretty sure you're like, I kind of want to move beyond this and

00:05:38.860 --> 00:05:41.900
like get into the straight data science programming side of things?

00:05:41.900 --> 00:05:45.180
I was moving out of biology. I think I was more interested in like, I really want to get into

00:05:45.180 --> 00:05:48.020
data science. That seems like a really great career path.

00:05:48.020 --> 00:05:52.280
Yeah, I think it is. And probably a lot of the skills you learned in biology about data collection and

00:05:52.280 --> 00:05:56.880
things like that. And the little bit of our experience as well helped.

00:05:56.880 --> 00:06:01.220
Yeah, totally. There's a certain way of thinking, you know, generating hypotheses and testing them

00:06:01.220 --> 00:06:05.680
that is continuous throughout both fields. So it seems like they're totally disconnected. But the

00:06:05.680 --> 00:06:10.060
how you think about questions and go about answering them is sort of useful in both.

00:06:10.060 --> 00:06:13.760
Yeah, that's cool. Brian, how about you? Why'd you get into programming?

00:06:13.760 --> 00:06:20.400
Programming sort of grabbed me from the beginning. I, my first programs were on my TI-82 calculator in high

00:06:20.400 --> 00:06:27.020
school. And, you know, just kind of continued from there, TI-82, TI-89. My one actual formal programming

00:06:27.020 --> 00:06:34.020
class was a required intro C++ class, freshman year of college. And then other than that, it was all kind

00:06:34.020 --> 00:06:38.880
of somewhat self-directed, somewhat externally motivated. I did an internship in college that

00:06:38.880 --> 00:06:44.440
turned into the company I was working for had this, it was actually data science. But more than I look back

00:06:44.440 --> 00:06:51.300
at it, they had this gigantic table of data from the processes they were running. And my job over this

00:06:51.300 --> 00:06:58.600
eight month internship was to develop an application for suggesting improved programs for their equipment.

00:06:59.160 --> 00:07:05.980
And at the time, what was at hand was Excel VBA. So I got really, really good at Excel VBA, GUIs and,

00:07:05.980 --> 00:07:11.060
you know, the document object model and everything. And so that really established that. And then from there,

00:07:11.060 --> 00:07:18.080
I dabbled in Java a bit in mid grad school, but then came to Python about four years ago.

00:07:18.080 --> 00:07:24.980
Oh, yeah, I suspect many people's first programming, you know, in quotes, experience is Excel,

00:07:25.180 --> 00:07:30.920
right? Like I have these pieces of data. And can I show or hide or change the color of this

00:07:30.920 --> 00:07:35.180
based on whether it's positive or negative, or, you know, something like that, right?

00:07:35.180 --> 00:07:38.740
Yeah, I mean, you know, the multiple times on the podcast, you've had people say,

00:07:38.740 --> 00:07:44.320
in industry, in the corporate world, the most prevalent database is Excel. The same thing is true

00:07:44.320 --> 00:07:49.560
that the for the corporate world, in a lot of cases, unless there's a specific reason to use,

00:07:49.560 --> 00:07:54.640
you know, something else, Excel is probably also the one of the most prevalent development

00:07:54.640 --> 00:07:59.940
environments in the corporate world, just because it's, it's anybody who has window has office,

00:07:59.940 --> 00:08:02.140
has VBA for better or for worse.

00:08:02.140 --> 00:08:06.660
Yeah, that's pretty funny. And probably a lot of the programming happens in that one little cell

00:08:06.660 --> 00:08:09.080
editing text area right at the top, right?

00:08:09.080 --> 00:08:13.840
Yeah, the formulas too. I mean, that's, it's like these different paradigms going on,

00:08:13.840 --> 00:08:15.920
colliding and, you know, crashing into one another.

00:08:15.920 --> 00:08:21.480
I'm sure, I'm sure. Giuseppe, how about you? You took a pretty hard turn, I guess,

00:08:21.480 --> 00:08:27.460
suspect it probably wasn't something day to day that you were experiencing, or maybe it was, tell us.

00:08:27.460 --> 00:08:34.600
No, it wasn't. I have to go back to something like five years ago, I decided I wanted to change my life.

00:08:34.600 --> 00:08:43.520
And I left medical school, I moved to another country to England, and followed my other passion, which is Linux.

00:08:43.520 --> 00:08:48.960
And along the way, so I started to take support and then into a sysadmin job.

00:08:48.960 --> 00:08:53.180
And along the way, I picked up a genuine passion for Python.

00:08:53.740 --> 00:08:57.220
And, you know, the reason is very, it comes to a simple reason.

00:08:57.220 --> 00:08:58.760
It's easy to understand.

00:08:58.760 --> 00:09:05.180
So, even though I didn't have a that specific background, I could understand Python.

00:09:05.180 --> 00:09:11.560
So, I offered some of my friends from my hometown Linux user group,

00:09:11.560 --> 00:09:17.160
they've been doing stuff in Python for some time, and I was kind of, you know, exposed to Python.

00:09:17.160 --> 00:09:18.120
I was curious.

00:09:18.740 --> 00:09:21.040
So, that's how I got started, really.

00:09:21.040 --> 00:09:24.300
And then I found that it made my life a lot easier.

00:09:24.300 --> 00:09:28.920
So, my day-to-day job was a lot easier because of Python, because the new skills.

00:09:28.920 --> 00:09:34.840
And that was really the moment where, yes, I love this programming language.

00:09:34.840 --> 00:09:35.440
I love Python.

00:09:35.440 --> 00:09:40.400
Yeah, you can do some stuff in Bash and Shell scripts, but it's not the same as a real programming language.

00:09:40.560 --> 00:09:41.240
Yes, absolutely.

00:09:41.240 --> 00:09:46.060
And I had the first time experience about that.

00:09:46.060 --> 00:09:55.120
My previous job, my old job, I wrote a script in Python to resolve a day-to-day problem that was nearly impossible to do in Bash.

00:09:55.120 --> 00:09:56.640
Python, easy.

00:09:56.640 --> 00:10:02.360
I mean, it took me a bit of time to get to that point, but I learned a lot along the way.

00:10:02.360 --> 00:10:03.200
Yeah, absolutely.

00:10:03.200 --> 00:10:04.180
That sounds really interesting.

00:10:04.380 --> 00:10:14.760
Was it scary or nerve-wracking to, you know, leave medical school and then also leave Italy and just completely rearrange your life like that?

00:10:14.760 --> 00:10:16.720
Like, were you like, what am I doing?

00:10:16.720 --> 00:10:17.820
I'm almost a doctor.

00:10:17.820 --> 00:10:18.540
This is crazy.

00:10:18.540 --> 00:10:19.040
It is.

00:10:19.040 --> 00:10:19.320
It is.

00:10:19.320 --> 00:10:30.180
Between all of these single things, moving to a new country, changing my life, I don't know what was more scary, but here I am.

00:10:30.180 --> 00:10:33.360
Yeah, it sounds like it's working out pretty well for you.

00:10:33.520 --> 00:10:34.320
It's really interesting.

00:10:34.320 --> 00:10:35.620
I have two of my neighbors.

00:10:35.620 --> 00:10:40.160
They're both doctors at a nice hospital, research hospital here.

00:10:40.160 --> 00:10:43.040
And I talk to them about, you know, have a good day.

00:10:43.040 --> 00:10:43.920
How is everything going?

00:10:43.920 --> 00:10:50.120
And they're like, I wish I would have just gone into computers or started a podcast or something.

00:10:50.120 --> 00:10:52.300
It seems like, I'm like, really?

00:10:52.300 --> 00:10:53.240
And they're like, yeah.

00:10:53.240 --> 00:10:59.000
It's just, you know, your life looks easy and smooth and mine is stressful and all this bureaucracy and stuff.

00:10:59.000 --> 00:11:01.100
So you probably made a good choice there, Giuseppe.

00:11:01.100 --> 00:11:02.160
Giuseppe, sorry.

00:11:02.160 --> 00:11:02.980
I think so, yeah.

00:11:03.380 --> 00:11:06.740
Now I'm working, you know, a desk job.

00:11:06.740 --> 00:11:08.120
So I'm not outside.

00:11:08.120 --> 00:11:11.040
And people don't throw stuff at me.

00:11:11.040 --> 00:11:13.500
How boring.

00:11:13.500 --> 00:11:17.380
Maybe one of those little office dart things, like a little office toy, right?

00:11:17.380 --> 00:11:18.480
Yeah.

00:11:18.480 --> 00:11:20.080
Nerf guns, yeah.

00:11:20.080 --> 00:11:20.480
Yeah.

00:11:20.480 --> 00:11:21.040
How funny.

00:11:21.900 --> 00:11:22.180
Okay.

00:11:22.180 --> 00:11:31.460
So one thing I wanted to start this conversation with is I feel like there's a lot of talk about people becoming programmers because computers are important.

00:11:31.680 --> 00:11:32.680
So programmers, that's what you should do.

00:11:32.680 --> 00:11:33.540
So programmers, that's what you should do.

00:11:33.540 --> 00:11:41.520
But I think there's a large value in having another skill like biology or chemistry or medicine or something like that.

00:11:41.660 --> 00:11:45.440
And sort of supercharging that with programming or Python.

00:11:45.440 --> 00:11:50.500
Now, I know some of you kind of moved on to do more specific programming.

00:11:50.500 --> 00:11:52.120
But, you know, you come from this background.

00:11:52.120 --> 00:11:54.400
So you're totally in a good place to talk about it.

00:11:54.400 --> 00:12:03.180
Maybe just let me know what you think about, like, people who are not going to become programmers but are doing stuff and, say, in your field that you came from, you know, how it might help them.

00:12:03.180 --> 00:12:04.880
So, Giuseppe, start with you.

00:12:04.980 --> 00:12:18.140
The new thing that comes to my mind is when I was doing the ambulance, the paramedic stuff, sometimes we had some kind of problems with the keeping track of vehicles, ambulances, and calls.

00:12:18.340 --> 00:12:32.920
And that was at some point I was considering, oh, it would be so much easier if someone who is inside, who does this on a daily basis, could write a single program that just do what you need to do.

00:12:32.920 --> 00:12:36.080
Just keep track of the ambulances, keep track of the calls.

00:12:36.080 --> 00:12:41.200
Unfortunately, in Italy, well, at least where I was working, we didn't have any of that.

00:12:41.200 --> 00:12:46.660
Some custom proprietary software, but not nearly close to what we needed.

00:12:46.660 --> 00:12:55.640
And for some time I kind of dreamed of, oh, if only I could pick up very quickly some programming skills, I could do that.

00:12:55.640 --> 00:13:01.040
Yeah, imagine just like a cheap Raspberry Pi with a cellular connection or something like that, right?

00:13:01.040 --> 00:13:01.760
Yes, absolutely.

00:13:01.760 --> 00:13:07.240
Imagine how much you can do and how much you can do processing data with Pi.

00:13:07.240 --> 00:13:14.840
A lot of data, like the call time, the average time the ambulance needs to get to some place.

00:13:15.160 --> 00:13:19.540
And how much you can improve the system having access to this data.

00:13:19.540 --> 00:13:23.240
I'm sure somewhere someone is doing something like this.

00:13:23.240 --> 00:13:30.980
But I guess I was in the wrong place and I had the wrong kind of skill set at the time.

00:13:30.980 --> 00:13:31.800
At the time, yeah.

00:13:31.880 --> 00:13:46.380
If I could go back now and, well, not now, I don't consider myself skilled enough, but say in 10 years with the skills that I, the skills I would like to have in 10 years, go back in time and do that thing.

00:13:46.380 --> 00:13:48.120
That would be my dream.

00:13:48.620 --> 00:13:51.240
Yeah, it sounds like a really cool use of the IoT stuff.

00:13:51.240 --> 00:13:54.620
And these days, it's got to be almost easy.

00:13:54.620 --> 00:13:56.980
So, Brian, what do you think about it?

00:13:56.980 --> 00:13:58.320
You're still doing chemical engineering.

00:13:58.320 --> 00:14:01.980
What do you think about this power-up, Python power-up idea?

00:14:02.180 --> 00:14:09.760
I think the analogy that I would draw is actually it's kind of a reflection of the technical management conundrum.

00:14:09.760 --> 00:14:28.080
Where in order for someone to make better, at least, high-level vision choices for a technical effort, if you don't know at least something about the, if you don't have some expertise in the technical thing, then it's hard to have the perspective to make those kind of bigger visionary decisions.

00:14:28.080 --> 00:14:29.640
It can still work, but it can be harder.

00:14:29.640 --> 00:14:33.740
I would draw the same sort of parallel to the programming skill set.

00:14:34.000 --> 00:14:43.600
A lot of the things that we work on involves equipment and tanks and pumps and things that you can't really, there's no IoT for the simple pumps we work with, for example.

00:14:43.600 --> 00:14:57.340
But in terms of data analysis and driving some of the data acquisition hardware or some controller hardware, having the ability to just toss together a script or to dig into a command line or a serial prompt or something.

00:14:57.840 --> 00:15:14.720
And even if it's not the prettiest code or the most efficient, effective, fastest, whatever, it's still so many orders of magnitude more capable than it would if there were not any programming expertise around to bring to it.

00:15:14.720 --> 00:15:24.300
And so it's not critical exactly, but it can help so much that it almost is, I would say it's near critical in a lot of cases.

00:15:24.300 --> 00:15:34.180
It basically opens up new possible questions you can answer and stuff because where there used to be too much data, now it's, you know, it runs for three seconds.

00:15:34.180 --> 00:15:34.880
Manageable.

00:15:34.880 --> 00:15:40.820
And you can also, you know, being able to handle things faster means you can handle more things, which is really valuable.

00:15:40.820 --> 00:15:41.320
So.

00:15:41.320 --> 00:15:42.140
Teresa, how about you?

00:15:42.140 --> 00:15:44.980
Do you see those kinds of opportunities in the biology space?

00:15:44.980 --> 00:15:45.380
Totally.

00:15:45.380 --> 00:15:49.440
I think it's helpful, I think, to think of programming as something that'll save you time.

00:15:49.580 --> 00:16:00.180
You know, looking back on the way I used to handle data or the way we used to store data and the amount of time I spent, like, scrolling through Excel sheets looking for things when, like, you know, the database, a database might have been the right solution.

00:16:00.880 --> 00:16:07.900
Or, you know, manually cleaning things in Excel when, if I had just put something into, say, like, a Pandas data frame, yeah, it would have saved me hours.

00:16:07.900 --> 00:16:20.480
So I like to think that its main benefit would have been just freeing up brain space to think about, like, the actual biological problems or the actual questions of interest and kind of automate away a lot of those pain points.

00:16:20.660 --> 00:16:23.800
Yeah, and it seems to me like that kind of work is the least fun.

00:16:23.800 --> 00:16:28.600
You know, like, cleaning up data by hand in Excel or something like that.

00:16:28.600 --> 00:16:29.220
Yeah.

00:16:29.220 --> 00:16:30.220
That doesn't sound fun.

00:16:30.220 --> 00:16:32.620
It's the least fun, but you can never make it go away.

00:16:32.620 --> 00:16:34.480
You can just make it take.

00:16:34.480 --> 00:16:35.800
No, you have to do it.

00:16:35.800 --> 00:16:38.320
Yeah, it'll take a tenth of the time, though, with the right tools for the job.

00:16:38.320 --> 00:16:39.300
Yeah, yeah, that's cool.

00:16:39.300 --> 00:16:42.320
I have a very low tolerance for boring, repetitive tasks now.

00:16:42.320 --> 00:16:44.240
It's like, okay, I'm automating this right now.

00:16:45.500 --> 00:16:46.320
Yeah, exactly.

00:16:46.320 --> 00:16:52.200
I've had the same experiences in some of my stuff where I'm like, you know, for the third day, I spend an hour doing something.

00:16:52.200 --> 00:16:59.680
I'm like, why do I not just take half an hour, write a program that solves this problem, and it'll be fixed forever, not just for today.

00:16:59.680 --> 00:17:08.100
Yeah, but you kind of need to hit that threshold, right, where it's like, I know I'm doing this enough, and it's painful enough, and so on, until you decide, like, that's it.

00:17:08.100 --> 00:17:09.260
I'm writing a program.

00:17:09.720 --> 00:17:29.400
I guess maybe, like, a lot of the real opportunity for people to see programming as relevant to them when they're not programmers is kind of this automate the boring stuff type of angle, like that Al Swigert talks about in his book and stuff, which is they're really just, you know, you could do that in 10 lines of Python if you just knew the 10 lines in the right packages.

00:17:29.400 --> 00:17:29.840
Yeah.

00:17:32.340 --> 00:17:35.080
This portion of Talk Python is brought to you by Vetteri.

00:17:35.080 --> 00:17:41.400
Vetteri is an online hiring marketplace that connects highly qualified job seekers with thousands of inspiring companies.

00:17:41.400 --> 00:17:47.140
They specialize in positions in the tech space, including software development, data science, and project managers.

00:17:47.140 --> 00:17:52.120
Vetteri is not only free for job seekers, you'll actually get paid to get a job through them.

00:17:52.120 --> 00:17:55.940
They're offering a $500 bonus if you accept a job through Vetteri.

00:17:56.160 --> 00:18:06.520
Whether you're looking for a job at a tech startup or a major corporation, visit talkpython.fm/Vetteri, that's V-E-T-T-E-R-Y, and get that $500 bonus.

00:18:06.520 --> 00:18:19.420
Brian, I guess I'll ask you this one first, because it's maybe most relevant to you, is how has learning programming sort of changed how you do chemical engineering?

00:18:19.420 --> 00:18:24.740
Like you said, you now have this super low threshold for boring repetitive work, which is obvious.

00:18:24.740 --> 00:18:25.940
What else?

00:18:25.940 --> 00:18:30.620
So the programming shows up, it's really scattered all over.

00:18:30.620 --> 00:18:37.340
I mean, the title, the automated boring stuff, is a really great philosophy, I think, for how it helps me.

00:18:37.340 --> 00:18:48.180
My day-to-day spans the whole range of engineering research, writing proposals, doing experiments, directing them, doing some modeling sometimes, consoles, that sort of thing.

00:18:48.180 --> 00:18:50.240
Writing stuff up, writing talks, writing papers.

00:18:50.800 --> 00:18:54.840
And for the most part, programming kind of sits in the gaps.

00:18:54.840 --> 00:18:56.580
It's scattered all over.

00:18:56.580 --> 00:19:06.580
And this is where the VBA is actually really helpful, has been really helpful, because I have a library of scripts that are bound to ribbon buttons or keyboard shortcuts or whatever.

00:19:06.580 --> 00:19:22.320
So I can file labeling, categorizing, filing emails, popping attachments off the server, cleaning up data in Excel, chart, some chart automation stuff, keyboard shortcuts in Word to switch highlighting around or various things.

00:19:22.320 --> 00:19:36.860
I can work large single-digit integer times faster because of all of the automation I have tied into my workflow start to finish in just lots of small little ways that are customized to me and they work really well.

00:19:37.300 --> 00:19:39.260
So it's a productivity enhancer to the max.

00:19:39.260 --> 00:19:39.640
Yeah.

00:19:39.640 --> 00:19:45.460
I'm really impressed at how many different apps it sounds like you've plugged this stuff into.

00:19:45.460 --> 00:19:50.960
It's not just like, well, I'll go do it in Python now, but like Word and Excel and all sorts of stuff.

00:19:50.960 --> 00:19:51.740
Well, that's the thing.

00:19:51.740 --> 00:19:55.840
I'm the only, I think it's safe to say I'm the only programmer in my office.

00:19:55.840 --> 00:19:59.040
I work in a small business that's 10 technical staff.

00:19:59.040 --> 00:20:02.180
I'm the only one with any programming background at all.

00:20:02.480 --> 00:20:10.440
And some of what I've written, I've handed off to other people, and the only way they're realistically going to use it is if it can be bound to a keyboard shortcut or a button.

00:20:10.440 --> 00:20:11.380
Yeah, that makes sense.

00:20:11.380 --> 00:20:15.060
Obviously, the command line and a pip install this, and yeah, that's not going to work.

00:20:15.060 --> 00:20:22.600
Yeah, there are some data analysis tasks, and I've done a very little bit of probably very low-quality machine learning for a project.

00:20:22.600 --> 00:20:26.560
And so for that, Python was the only thing that made sense of what I knew.

00:20:26.560 --> 00:20:28.580
But for the day-to-day, it's all VA.

00:20:28.940 --> 00:20:29.860
That's really interesting.

00:20:29.860 --> 00:20:37.160
Are you known as the person who can solve the programming problems and people come to you with data problems, like process this for me?

00:20:37.160 --> 00:20:38.140
Not so much.

00:20:38.140 --> 00:20:39.600
I could be, but...

00:20:39.600 --> 00:20:40.580
You dodged that bullet.

00:20:40.580 --> 00:20:44.040
It's more that in order to know, it goes back to that pain point problem.

00:20:44.040 --> 00:20:52.700
In order to help somebody out with a data analysis or data processing automation, I have to understand what the data is and what I need to do, what needs to be done with it.

00:20:52.900 --> 00:21:00.260
And that knowledge transfer adds significantly to that cost of an automation step.

00:21:00.260 --> 00:21:00.540
Right.

00:21:00.540 --> 00:21:10.000
It has happened, but a lot of the time, it's not enough pain for them to cross that threshold of making it worth the extra communication time and then the automation.

00:21:10.000 --> 00:21:12.600
It's happened a couple of times, but it actually doesn't happen very often.

00:21:12.600 --> 00:21:15.280
Yeah, they probably don't realize the amount of pain they could avoid.

00:21:15.280 --> 00:21:17.580
They probably just see that as a fact of their job.

00:21:17.580 --> 00:21:18.060
I agree.

00:21:18.160 --> 00:21:19.980
I think it's very likely that's the case.

00:21:19.980 --> 00:21:21.840
Like you have a lower tolerance now.

00:21:21.840 --> 00:21:24.580
So, Teresa, let me ask you about you.

00:21:24.580 --> 00:21:27.620
So, you've fully switched into doing data science.

00:21:27.620 --> 00:21:29.640
What kind of problems are you studying now?

00:21:29.640 --> 00:21:30.580
What sorts of problems?

00:21:30.580 --> 00:21:32.840
Yeah, like what area of data science are you doing?

00:21:32.840 --> 00:21:33.940
I work for iRobot.

00:21:33.940 --> 00:21:38.760
So, a lot of analysis on data that would explain how people are using a robot.

00:21:38.760 --> 00:21:43.160
So, some things that are sort of consumer-based analytics, like looking at use patterns, things like that.

00:21:43.280 --> 00:21:50.780
I like to use the analogy that it's not that different from studying, say, like a population of dolphins out in the ocean that you can't really see what they're doing.

00:21:50.780 --> 00:21:53.000
You just get like glimpses or a few signals.

00:21:53.000 --> 00:21:59.140
I don't really know what all the people are doing with their products, but I get glimpses and signals, and it's somewhat analogous.

00:21:59.140 --> 00:22:00.260
That's really interesting.

00:22:00.260 --> 00:22:06.080
So, iRobot, that's the company that makes like Roomba, the automated vacuums, and things like that.

00:22:06.080 --> 00:22:06.780
Yeah, that's right.

00:22:06.780 --> 00:22:09.980
Small, like home cleaning personal robots.

00:22:09.980 --> 00:22:11.840
Yeah, I have one in my kitchen right now.

00:22:11.840 --> 00:22:13.340
It's not going, but it's hanging out there.

00:22:13.340 --> 00:22:16.880
To you, it was more of a sort of career transition.

00:22:16.880 --> 00:22:21.620
I guess, like how do you, are you happy that you've learned programming and took this transition?

00:22:21.620 --> 00:22:22.680
Is it working out well?

00:22:22.680 --> 00:22:23.700
Like what was the experience?

00:22:23.700 --> 00:22:24.260
Oh, totally.

00:22:24.260 --> 00:22:33.340
It's, I love how, you know, I was trained as a scientist using probably not all the tools that I could have to really work in that field in academia.

00:22:33.780 --> 00:22:40.020
But now I still get to use sort of my science content knowledge, but with this whole new, way more powerful skill set.

00:22:40.500 --> 00:22:43.720
So I think back a lot to like problems that I've solved now in my current job.

00:22:43.720 --> 00:22:47.480
And they're somewhat similar to questions that might have been asked before, but they were such a struggle.

00:22:47.480 --> 00:22:53.120
I had no idea how to process this much data or, you know, how to make up a graph that would answer this question easily.

00:22:53.120 --> 00:23:01.240
And now knowing Python and being plugged into all the really great tools like Pandas or scikit-learn, all these things for machine learning, it's a breeze to do this sort of stuff.

00:23:01.240 --> 00:23:06.240
And I always look back and say, if I had the skills I have now, I was still doing that job, what I could have done.

00:23:06.240 --> 00:23:10.060
But it's overall been just amazing.

00:23:10.480 --> 00:23:11.680
That sounds really awesome.

00:23:11.680 --> 00:23:19.920
Is it interesting to come from an academic space and then into industry, as they say, and sort of look back and go, just see the differences?

00:23:19.920 --> 00:23:20.720
Yeah, totally.

00:23:20.720 --> 00:23:22.720
I think the contrast is really interesting.

00:23:22.720 --> 00:23:27.120
I think the pace at which things move has been a huge shocker in a way.

00:23:27.120 --> 00:23:38.600
Like academia is much slower, you know, as opposed to, you know, if a question needs to be answered, they need the answer within a week or a few weeks, as opposed to, oh, spend a few months like thinking about it.

00:23:38.600 --> 00:23:40.900
Or, you know, maybe you'll publish a paper in a year.

00:23:40.900 --> 00:23:41.960
Exactly.

00:23:41.960 --> 00:23:42.600
Well, yeah.

00:23:42.600 --> 00:23:45.440
And then they'll come out in a journal six months after that, right?

00:23:45.440 --> 00:23:45.960
Exactly.

00:23:45.960 --> 00:23:46.400
Right.

00:23:46.400 --> 00:23:54.580
And two people will read it instead of, you know, this very fast turnaround, kind of not necessarily high profile, but work that has impact, like immediate impact.

00:23:54.580 --> 00:23:54.820
Yeah.

00:23:54.820 --> 00:24:00.680
It is interesting how narrow the academic exposure is.

00:24:00.680 --> 00:24:08.760
I mean, it's really important, but it's, there's like 10 people that might read a paper and it will influence their thinking in the world, right?

00:24:08.760 --> 00:24:12.060
Which is crazy compared to like all the people that have a Roomba.

00:24:12.060 --> 00:24:12.720
Exactly.

00:24:12.720 --> 00:24:14.440
Yeah.

00:24:14.440 --> 00:24:15.640
Much broader audience.

00:24:15.640 --> 00:24:16.180
Yeah.

00:24:16.240 --> 00:24:19.660
Maybe a little more shallow effect on their life, but more broad.

00:24:19.660 --> 00:24:21.360
Yeah.

00:24:21.360 --> 00:24:23.660
Who knows which one has more volume.

00:24:23.660 --> 00:24:24.240
Okay.

00:24:24.240 --> 00:24:25.880
Giuseppe, how about you?

00:24:25.880 --> 00:24:31.940
Like this move from studying medicine and doing, you know, the ambulance emergency stuff into DevOps.

00:24:32.180 --> 00:24:33.800
Like, how's that transition been?

00:24:33.800 --> 00:24:42.300
I'm trying to get rid of the old habits of jumping into problems, you know, heads on and putting out fires.

00:24:42.300 --> 00:24:54.040
I'm trying to get new habits on, think about the problem, break it in single little problems that you can then fix to apply some automation to that.

00:24:54.400 --> 00:25:04.660
So these days I'm mostly working on this part and automation of provisioning virtual machine servers and I'm using Python to do that.

00:25:04.660 --> 00:25:12.160
So it's not an easy transition from the old world, the old life, the old habits, but I'm getting there.

00:25:12.160 --> 00:25:16.860
I'm getting there and I'm enjoying a lot Python along the way.

00:25:16.860 --> 00:25:19.260
It's really fun for me.

00:25:19.260 --> 00:25:24.040
It makes it feel easier in my day-to-day work life.

00:25:24.260 --> 00:25:24.940
Yeah, that's really cool.

00:25:24.940 --> 00:25:28.140
What kind of stuff do you do around DevOps that you talked about?

00:25:28.140 --> 00:25:35.420
For example, the need to automate the provision, the creation of a series of server in environment.

00:25:35.420 --> 00:25:39.320
And so far, it's not much automated.

00:25:39.320 --> 00:25:44.300
So my project currently is to make that completely, fully automated.

00:25:44.300 --> 00:25:50.360
And when I was interviewed for this position a few months ago, I asked, can I use Python?

00:25:50.360 --> 00:25:51.680
The answer was yes.

00:25:51.780 --> 00:25:54.280
And I was, yes, I want this job.

00:25:54.280 --> 00:25:56.500
It's funny.

00:25:56.500 --> 00:26:01.840
But, you know, working in a technology day-to-day-to-day, like some technologies are more fun than others.

00:26:01.840 --> 00:26:07.520
And if you get to choose, it really can make a difference on how happy and joyful what you're doing.

00:26:07.520 --> 00:26:09.280
Yeah, absolutely.

00:26:09.960 --> 00:26:23.360
So come the first week, the second week at this job, and I have to get information from a hypervisor about all the VMs running, something in the range of 120 VMs.

00:26:23.360 --> 00:26:38.140
And the specs, the information about the disks, the RAM CPU, that kind of boring stuff that you think, why don't I automate that once and reuse multiple times every time I need to gather information again.

00:26:38.640 --> 00:26:40.140
And I did that in Python.

00:26:40.140 --> 00:26:43.540
And there's a wonderful SDK.

00:26:43.540 --> 00:26:50.100
It's called Over Engine SDK Python, which is really a great library.

00:26:50.280 --> 00:26:57.280
But for some reason, it didn't play well with the version of the hypervisor we are currently using.

00:26:57.500 --> 00:27:15.800
So I ended up writing a simple skeleton script using requests to pull information using the APIs from the hypervisor, getting this information, parse what I need, and put everything in a well-organized CSV file.

00:27:15.800 --> 00:27:16.460
That's really cool.

00:27:16.460 --> 00:27:20.460
That was the fun part of my first, second week at the new job.

00:27:20.680 --> 00:27:32.140
I thought, this is what I really wanted to do, and gave me another motivation to keep doing more Python, give me more confidence in doing more in the future.

00:27:32.140 --> 00:27:33.480
Yeah, that's a great story.

00:27:33.480 --> 00:27:36.900
I feel like those little solutions add up, right?

00:27:36.900 --> 00:27:45.940
You come to a company, you get hired there or something, and people just do stuff in this sort of painful manual way because that's the way they've always done it.

00:27:45.940 --> 00:27:47.240
And you come with fresh eyes.

00:27:47.240 --> 00:27:47.880
You're like, why?

00:27:47.880 --> 00:27:50.140
Why is this not automatic, right?

00:27:50.140 --> 00:27:54.400
And then slowly, these things sort of get piled on until everything gets easier.

00:27:54.400 --> 00:27:54.760
It's great.

00:27:54.760 --> 00:27:57.440
Especially if you're coming from a different background.

00:27:57.440 --> 00:28:01.400
So it's not really – I still feel I'm misplaced.

00:28:01.400 --> 00:28:02.820
I'm not in the right place.

00:28:02.820 --> 00:28:06.780
I still have to think, is it really me doing this stuff?

00:28:06.780 --> 00:28:10.440
I couldn't think of myself doing Python five years ago.

00:28:10.440 --> 00:28:14.260
It's a complete drastic change.

00:28:14.260 --> 00:28:16.700
Yeah, it's like an identity shift, right?

00:28:16.700 --> 00:28:17.220
Yes.

00:28:17.220 --> 00:28:18.680
It sounds like a good one, though.

00:28:18.680 --> 00:28:20.500
Yes, that makes me so happy.

00:28:20.500 --> 00:28:21.860
So it's definitely a good one.

00:28:21.860 --> 00:28:22.360
That's awesome.

00:28:22.360 --> 00:28:23.700
Yeah, that's really, really great.

00:28:24.500 --> 00:28:31.800
So one thing I'd like to do is maybe go around and see which – sort of what technologies you're all using these days.

00:28:31.800 --> 00:28:34.660
It's probably a little bit different as you're solving different types of problems.

00:28:34.660 --> 00:28:37.540
So, Teresa, what does yours look like?

00:28:37.540 --> 00:28:39.880
Is it Jupyter and those kinds of things?

00:28:39.880 --> 00:28:40.920
What are you using these days?

00:28:41.060 --> 00:28:41.680
Yeah, definitely.

00:28:41.680 --> 00:28:41.740
Yeah, definitely.

00:28:41.740 --> 00:28:44.200
I'm in Jupyter notebooks pretty much all day.

00:28:44.200 --> 00:28:45.720
I really like Jupyter notebooks.

00:28:45.720 --> 00:28:47.960
Other people on my team are sort of – have mixed feelings.

00:28:47.960 --> 00:28:50.080
But for me, it's really convenient.

00:28:50.080 --> 00:28:52.140
And it just really works well for me.

00:28:52.140 --> 00:28:58.860
In terms of which specific libraries I like, Pandas and NumPy are sort of essentials.

00:28:59.200 --> 00:29:06.100
I find myself dipping into like SciPy or like stats models or something for more statistics-relevant things.

00:29:06.100 --> 00:29:13.560
And I guess – actually, a major part of my job is making like visualizations to summarize findings and things like that that are –

00:29:13.560 --> 00:29:13.660
Sure.

00:29:14.060 --> 00:29:15.240
You know, it could be shared around the company.

00:29:15.240 --> 00:29:22.160
And I found that Plotly is a really great library for that sort of easy to use and makes pretty nice looking graphs.

00:29:22.160 --> 00:29:23.080
Yeah, can recommend.

00:29:23.080 --> 00:29:24.120
Yeah, cool.

00:29:24.120 --> 00:29:25.440
Plotly is really nice.

00:29:25.440 --> 00:29:28.600
Some of those – some of the graphing capabilities there are really coming along.

00:29:28.600 --> 00:29:31.400
Are you thinking of switching to a JupyterLab?

00:29:31.400 --> 00:29:32.000
I don't know.

00:29:32.000 --> 00:29:32.860
Probably not.

00:29:32.860 --> 00:29:34.580
I think I'm pretty happy with my setup.

00:29:34.580 --> 00:29:36.260
But I might be able to be convinced.

00:29:36.260 --> 00:29:37.340
Yeah, yeah.

00:29:37.340 --> 00:29:38.080
It's a little bit different.

00:29:38.080 --> 00:29:42.680
So, the people that aren't using Jupyter that you're working with, what else are they using?

00:29:42.760 --> 00:29:45.000
What's their alternative if they don't totally love it?

00:29:45.000 --> 00:29:47.180
PyCharm, I think, is the other contender.

00:29:47.180 --> 00:29:52.860
As well as just like – I guess like just writing scripts in Atom and then running it, you know, from the command line or something like that.

00:29:52.860 --> 00:29:57.100
Yeah, so more like traditional computer science type programming stuff.

00:29:57.100 --> 00:29:57.360
Yeah.

00:29:57.360 --> 00:29:58.140
Okay, yeah.

00:29:58.140 --> 00:29:59.160
That makes a lot of sense.

00:29:59.160 --> 00:30:00.720
Brian, how about you?

00:30:00.720 --> 00:30:01.360
Platform?

00:30:01.360 --> 00:30:04.400
So, at work, I am strictly Windows.

00:30:04.400 --> 00:30:06.580
I do use Git Bash for everything.

00:30:06.580 --> 00:30:07.920
Source controlling it.

00:30:07.920 --> 00:30:09.840
Mostly, I'm in Jupyter Notebook.

00:30:09.840 --> 00:30:12.700
A lot of H5Py, NumPy, SciPy, SciKits.

00:30:12.700 --> 00:30:14.420
It's Matplotlib sort of a thing.

00:30:14.420 --> 00:30:15.960
Side projects.

00:30:15.960 --> 00:30:22.520
I work both Linux and Windows and go broader to Sphinx documentation, Tox for testing, Travis.

00:30:23.280 --> 00:30:28.020
I have packages on PyPI, so I've messed with the setup.py, Twine, and all that kit.

00:30:28.020 --> 00:30:32.720
And I'm a big fan of adders for basically everything I'm doing.

00:30:32.720 --> 00:30:35.520
Yeah, adders is a good way to get some quick classes in place.

00:30:35.520 --> 00:30:40.280
The wrapper, the Dunder wrapper and Dunder string that it auto-generates, that's so annoying.

00:30:40.280 --> 00:30:45.440
Creating those by hand and just having a nice representation by default is so nice.

00:30:45.580 --> 00:30:47.100
Yeah, I really like outputs.

00:30:47.100 --> 00:30:49.960
I'll go and write those almost primarily for debugging.

00:30:49.960 --> 00:30:55.680
If I want to print one out or I can pause in a debugger at a breakpoint, you see the variables windows.

00:30:55.680 --> 00:31:00.100
Instead of just seeing this object at this memory address, you can see really useful stuff there.

00:31:00.100 --> 00:31:00.440
It's great.

00:31:00.440 --> 00:31:02.160
And adders just does that automatically, right?

00:31:02.280 --> 00:31:03.400
Yep, it definitely does.

00:31:03.400 --> 00:31:03.860
Nice.

00:31:03.860 --> 00:31:05.340
Giuseppe, how about you?

00:31:05.340 --> 00:31:06.520
Linux all the way.

00:31:06.520 --> 00:31:07.980
I'm in Linux 7.

00:31:07.980 --> 00:31:09.020
All right, which distribution?

00:31:09.020 --> 00:31:11.600
Well, I'm partial to Ubuntu.

00:31:11.600 --> 00:31:13.880
Yeah, I like Ubuntu as well.

00:31:13.880 --> 00:31:21.660
Although I have to say I started some, well, a long time ago with Gintu.

00:31:21.660 --> 00:31:22.400
Yeah, nice.

00:31:22.400 --> 00:31:24.880
Which probably not everyone knows.

00:31:24.880 --> 00:31:29.860
But I'm using CentOS and Red Hat, they're better at work.

00:31:29.860 --> 00:31:31.740
But I use Ubuntu at home.

00:31:31.860 --> 00:31:32.040
Nice.

00:31:32.040 --> 00:31:39.740
And for Python, what are some of the libraries and stuff you're using for interacting with VMs over the network and the kind of work you're doing?

00:31:39.740 --> 00:31:41.100
I try to keep it simple.

00:31:41.100 --> 00:31:45.660
I'm using mostly requests and Beautiful Soup.

00:31:45.660 --> 00:31:49.960
And I don't know if you want to count this as a...

00:31:49.960 --> 00:31:56.620
They come with any Linux distribution, any Python in a Linux distribution that I've used so far.

00:31:56.620 --> 00:32:00.420
My best friends are Subprocess and ArgParse.

00:32:00.420 --> 00:32:01.440
Yeah, of course.

00:32:01.440 --> 00:32:03.060
There's a lot of automation stuff there.

00:32:03.060 --> 00:32:04.060
That's great.

00:32:04.060 --> 00:32:04.420
Yeah.

00:32:04.420 --> 00:32:07.820
Do you use things like Paramico and stuff for remote interactions?

00:32:07.820 --> 00:32:08.840
When I can, yeah.

00:32:08.940 --> 00:32:16.420
But sometimes I had to just use Subprocess and call SSH with Subprocess just to make it the Python script portable.

00:32:16.420 --> 00:32:22.140
So you could use it everywhere on any machine, even if you don't have Paramico on that machine.

00:32:22.140 --> 00:32:25.220
Because, you know, you have to install Paramico.

00:32:25.220 --> 00:32:25.660
Right.

00:32:25.660 --> 00:32:30.100
Sometimes, you know, trying to keep it simple so it can be used anywhere.

00:32:30.100 --> 00:32:37.000
That was the best strategy for me in some occasions so far.

00:32:37.000 --> 00:32:37.180
Yeah.

00:32:37.180 --> 00:32:37.540
Yeah.

00:32:37.540 --> 00:32:38.640
It sounds like it's working well.

00:32:38.640 --> 00:32:39.180
That's great.

00:32:41.280 --> 00:32:44.520
This portion of Talk Python To Me has been brought to you by Rollbar.

00:32:44.900 --> 00:32:48.200
One of the frustrating things about being a developer is dealing with errors.

00:32:48.940 --> 00:32:57.220
Relying on users to report errors, digging through log files, trying to debug issues, or getting millions of alerts just flooding your inbox and ruining your day.

00:32:57.220 --> 00:33:03.960
With Rollbar's full stack error monitoring, you get the context, insight, and control you need to find and fix bugs faster.

00:33:04.400 --> 00:33:07.960
Adding Rollbar to your Python app is as easy as pip install Rollbar.

00:33:07.960 --> 00:33:12.200
You can start tracking production errors and deployments in eight minutes or less.

00:33:12.200 --> 00:33:16.360
Are you considering self-hosting tools for security or compliance reasons?

00:33:16.360 --> 00:33:19.940
Then you should really check out Rollbar's compliant SaaS option.

00:33:19.940 --> 00:33:29.320
Get advanced security features and meet compliance without the hassle of self-hosting, including HIPAA, ISO 27001, Privacy Shield, and more.

00:33:29.320 --> 00:33:30.700
They'd love to give you a demo.

00:33:30.700 --> 00:33:32.400
Give Rollbar a try today.

00:33:32.400 --> 00:33:36.100
Go to talkpython.fm/Rollbar and check them out.

00:33:36.100 --> 00:33:41.840
Giuseppe and Teresa, think of biology and medicine and stuff.

00:33:41.840 --> 00:33:42.800
I want to ask you this question.

00:33:42.800 --> 00:33:46.660
Back to the people, the place you were before, Brian.

00:33:46.660 --> 00:33:47.500
I'm still where you are.

00:33:47.500 --> 00:33:54.560
If you're talking to someone who is in your industry or was in the industry you came from, and they had no background in programming,

00:33:54.560 --> 00:34:00.760
what advice would you give to them about maybe learning it or how it might help them push their career forward?

00:34:00.760 --> 00:34:01.700
Teresa, go first.

00:34:01.800 --> 00:34:18.460
I think I left my field maybe about two years ago, but it really did seem to me that there was a certain sparsity of biologists who were competent in or, I mean, both interested and able to program and just like utilize the power that this, you know, that Python could unleash for you.

00:34:18.460 --> 00:34:20.860
And I would say do it because it'll set you apart.

00:34:21.180 --> 00:34:24.900
It'll both make your life easier and make you sort of a rarity in the field.

00:34:24.900 --> 00:34:29.660
So I think the field as a whole could really benefit from more people who have these skills.

00:34:29.660 --> 00:34:40.840
And, you know, if you want to be like a competitive job prospect within the field, if you have the ability to, say, set up a database for a project you're trying to work on, that's really going to put you head and shoulders above a lot of the other candidates out there.

00:34:40.960 --> 00:34:41.440
Yeah, that's cool.

00:34:41.440 --> 00:34:46.760
And if you decide for some reason that academia is not for you, you could always go work for a cool robot company, right?

00:34:46.760 --> 00:34:47.320
Yeah, exactly.

00:34:47.320 --> 00:34:48.320
Just jump ship.

00:34:48.320 --> 00:34:48.740
It's okay.

00:34:48.740 --> 00:34:50.540
All right.

00:34:50.540 --> 00:34:51.940
Giuseppe, how about you?

00:34:52.200 --> 00:34:54.520
I would say don't be afraid.

00:34:54.520 --> 00:35:07.280
For a long time, really a long time, I was curious about Python, but too afraid to start doing anything, even to, you know, start opening a book about Python because of my lack of programming background.

00:35:07.280 --> 00:35:09.180
So don't be afraid.

00:35:09.180 --> 00:35:10.340
Try a little script.

00:35:10.340 --> 00:35:13.440
Try something just for fun and practice.

00:35:13.440 --> 00:35:18.660
That's something that in medicine, it's everything about practice, practice, practice.

00:35:18.660 --> 00:35:24.140
Do something until you can do it blindfold or you can do it without looking.

00:35:24.140 --> 00:35:28.880
You can do it on a different patient every day and still you can do that something.

00:35:28.880 --> 00:35:41.120
So in the same way, if you keep practicing and doing a little bit every day, that's a good way to get rid of the fear of not having a programming background.

00:35:41.620 --> 00:35:53.280
And this is where the 100 days of code is perfect for anyone from a different, I believe, from anyone from a different background that wants to get started with Python.

00:35:53.280 --> 00:35:55.280
That is a good resource.

00:35:55.280 --> 00:35:57.060
And it's not that much of a commitment.

00:35:57.060 --> 00:35:59.540
It's an hour a day for a little over three months.

00:35:59.540 --> 00:36:00.420
It's not too bad.

00:36:00.420 --> 00:36:01.680
Brian, how about you?

00:36:01.680 --> 00:36:05.420
So I keep coming back to the automate the boring stuff theme.

00:36:05.420 --> 00:36:11.780
For somebody in engineering who isn't looking to become a full-time dev, think about what you do during the day.

00:36:11.780 --> 00:36:19.400
Think about the tasks that you have to address and then identify the ones that drive you nuts because it's the same thing over and over and over again.

00:36:19.400 --> 00:36:20.240
And start small.

00:36:20.240 --> 00:36:21.320
Find a little thing.

00:36:21.320 --> 00:36:24.920
It can be hard to know what's going to be big or small going into it.

00:36:24.920 --> 00:36:29.180
But pick something that seems like it's small and then identify a relevant programming language.

00:36:29.240 --> 00:36:33.960
So a lot of the proprietary software has its own internal scripting languages or whatnot.

00:36:33.960 --> 00:36:39.200
But if you're in Excel, if you're in Word, it gets slammed a lot, kicked around.

00:36:39.200 --> 00:36:45.180
But VBA is actually a pretty good choice because if somebody else needs to use what you end up making, it will transfer.

00:36:45.180 --> 00:36:50.400
And then, of course, I would definitely recommend Python for anything general because it's great for that.

00:36:50.900 --> 00:36:52.280
And then look around.

00:36:52.280 --> 00:36:55.360
Find a book, a Learn to Program book in that language.

00:36:55.360 --> 00:36:58.140
O'Reilly has stuff for Excel that has some VBA in it.

00:36:58.140 --> 00:36:59.340
There's a VBA for dummies.

00:36:59.340 --> 00:37:03.280
There are a plethora of Python books that you can find.

00:37:03.280 --> 00:37:04.240
Search the web.

00:37:04.240 --> 00:37:06.040
Hit up Stack Overflow.

00:37:06.040 --> 00:37:14.800
And just search until you find something that seems relevant to solve what you're trying to solve to automate this problem, to solve this problem.

00:37:14.800 --> 00:37:15.960
Try it.

00:37:15.960 --> 00:37:16.860
Code it.

00:37:16.860 --> 00:37:21.620
If it doesn't work, keep tinkering at it until this first small thing, you can get it to work.

00:37:21.620 --> 00:37:22.800
And then pick the next thing.

00:37:22.800 --> 00:37:24.560
And learn what you need to do to make it work.

00:37:24.560 --> 00:37:37.280
And just step by step, eventually you'll accumulate enough of an understanding of the way the computer thinks, the way the computer works, that you can start telling it what to do without having to figure anything out.

00:37:37.280 --> 00:37:38.260
And then you're unstoppable.

00:37:38.260 --> 00:37:39.240
Oh, that's great advice.

00:37:39.240 --> 00:37:43.680
And I feel like these can really quickly add up in ways that are hard to foresee.

00:37:43.680 --> 00:37:53.100
If you can do this little thing to process a CSV file, maybe convert it to an Excel file, and then you're going to do some other little trick, get some other little trick.

00:37:53.100 --> 00:37:58.820
All of a sudden, you could sort of chain those together and process a thousand files all at once.

00:37:58.820 --> 00:38:01.820
Whereas before, you're like, oh, boy, I've got to go through all of this.

00:38:02.200 --> 00:38:05.920
They add up in non-obvious ways.

00:38:05.920 --> 00:38:06.160
Yeah.

00:38:06.160 --> 00:38:10.140
It is definitely a super linear capability curve.

00:38:10.140 --> 00:38:18.040
If you know how to do n things, you have n to the x, where x is large, total things you can do with those bits of knowledge.

00:38:18.040 --> 00:38:18.340
Yeah.

00:38:18.460 --> 00:38:30.240
I think actually part of the secret of programming that people who are not programmers don't actually get to see is it's really about building these little building blocks and then clicking them together to build larger building blocks.

00:38:30.240 --> 00:38:34.020
And in the end, you're clicking big pieces together, not small pieces often.

00:38:34.020 --> 00:38:34.560
Yes.

00:38:34.560 --> 00:38:35.300
Absolutely.

00:38:35.300 --> 00:38:35.740
I agree.

00:38:35.840 --> 00:38:40.640
And also the ability to see the problem and break the problem in single units.

00:38:40.640 --> 00:38:51.280
That's another something that, from my point of view, helps to, it's something to get in front of a big problem, it's something to see the big problem, be able to split it in single units.

00:38:51.280 --> 00:39:00.960
And, okay, now I do this unit, now I do this, fix this problem, do this little action, little operation, and then after a while, bam, your big problem is gone.

00:39:00.960 --> 00:39:01.660
Yeah.

00:39:01.800 --> 00:39:13.180
It's definitely an important part of the skill set, but it's something I don't, that's not something that somebody coming, new coming into programming should expect to be able to do in an effect efficient or natural way with no experience whatsoever.

00:39:13.180 --> 00:39:20.780
I, I would be surprised if most people coming in fresh to programming would have an instinct for how to break problems down that way.

00:39:20.780 --> 00:39:25.640
It's sort of, that sense develops along with the facility in programming generally.

00:39:25.640 --> 00:39:25.900
Yeah.

00:39:25.900 --> 00:39:31.780
It's definitely powerful once you get it, but it's hard to just, it's hard to see that it's being useful in the early days.

00:39:31.780 --> 00:39:32.780
early, early stages.

00:39:32.780 --> 00:39:36.000
All right, we're getting sort of near the end of our time here.

00:39:36.000 --> 00:39:40.420
So I do want to ask you all sort of forward looking question on this.

00:39:40.420 --> 00:39:50.380
So obviously programming is changing stuff for all of you, but it's also, I think, dramatically changing everyone's roles in these industries.

00:39:50.380 --> 00:40:01.580
So I guess, where do you see programming and technology pushing your industry or the one you came from over say the next 10 years in the next reasonably predictable amount of time?

00:40:01.580 --> 00:40:02.640
Brian, you want to go first?

00:40:02.640 --> 00:40:02.980
Sure.

00:40:02.980 --> 00:40:03.800
10 years.

00:40:03.940 --> 00:40:07.920
I have to imagine that programming will still be a non-critical skill.

00:40:07.920 --> 00:40:09.800
You can thrive and do well without it.

00:40:09.800 --> 00:40:20.440
But as the scope of data and the automatability, automability of proprietary tools and the growth of open source stuff like Python and R and others,

00:40:20.820 --> 00:40:26.920
the productivity and capability advantage that's going to come from being a programmer, that differential is only going to increase.

00:40:26.920 --> 00:40:36.580
Things may get to the point where a lack of a programming ability just is too much of an efficiency drag on an engineer in general.

00:40:36.580 --> 00:40:42.200
You're thinking it's like almost like saying, well, I can't type or I can't use Word.

00:40:42.200 --> 00:40:42.700
Right.

00:40:42.700 --> 00:40:44.400
I just take notes on my legal pad.

00:40:44.400 --> 00:40:45.660
Like, you know what?

00:40:45.660 --> 00:40:46.960
Thanks, but no thanks.

00:40:46.960 --> 00:40:48.500
We're going to find a different candidate.

00:40:48.640 --> 00:40:49.660
Exactly that sort of thing.

00:40:49.660 --> 00:40:52.420
It won't be fatal, but it will be more and more important.

00:40:52.420 --> 00:41:08.980
And ultimately, no matter how far things go, I think it will continue to be a skill that differentiates between just a solid competence versus being a magician of sorts in terms of being able to churn through, chew through data and tasks.

00:41:08.980 --> 00:41:09.360
Yeah.

00:41:09.360 --> 00:41:12.640
You should be able to address questions or problems that others just can't.

00:41:12.640 --> 00:41:13.340
Yes, exactly.

00:41:13.340 --> 00:41:13.700
Yeah.

00:41:13.700 --> 00:41:14.060
Interesting.

00:41:14.060 --> 00:41:14.440
Teresa?

00:41:14.620 --> 00:41:19.600
Yeah, I agree with that idea that it'll be sort of a, the baseline will raise.

00:41:19.600 --> 00:41:20.120
You know what I mean?

00:41:20.120 --> 00:41:33.980
Like you'll, there'll be a certain expectation that you will know how to store larger amounts of data or like a task, you know, the expectation that cleaning your data set might take you two weeks, like sort of an expectation that it might take you a couple hours because you can do it programmatically.

00:41:34.360 --> 00:41:35.660
I think things have to go that way.

00:41:35.660 --> 00:41:37.600
It seems almost inevitable.

00:41:37.600 --> 00:41:49.320
And I guess something that I would hope would come with it, and I don't really know if it's headed this way, is sort of a change in how we think about sharing code or sharing information of that type in academia.

00:41:49.780 --> 00:41:58.260
I know that like, you know, if you, now at my work, if someone were conducting an analysis and we really wanted to comb into it and reproduce it, you'd want to see the code for how they set things up.

00:41:58.260 --> 00:42:00.580
And I don't think that standard is there in academia.

00:42:00.580 --> 00:42:01.820
It's sort of hand-wavy.

00:42:01.820 --> 00:42:05.260
Like we did this model with these things, but you don't see it written out.

00:42:05.260 --> 00:42:09.360
So I don't know that things will go that way, but I think that would really be a benefit.

00:42:09.900 --> 00:42:18.300
There are definitely people pushing that way and infrastructure getting to the point where, you know, they're still figuring out how to manage it, how in the world to set everything up.

00:42:18.300 --> 00:42:19.940
But there's definitely attention being paid to it.

00:42:19.940 --> 00:42:20.640
Right.

00:42:20.640 --> 00:42:24.780
Because there is sort of attention you want to protect your work and, you know, your original ideas and things like that.

00:42:24.780 --> 00:42:28.600
But it does, you know, science is sort of built on sharing the ideas among different teams.

00:42:28.600 --> 00:42:31.680
So sharing that code would really go a long way, I think.

00:42:31.680 --> 00:42:38.900
I wonder if there's going to be a shift where, you know, right now it's like you get credit for writing the paper and getting the result.

00:42:39.240 --> 00:42:44.900
But it's maybe, you know, more is like, well, we collected the data and then here you can see we wrote the software.

00:42:44.900 --> 00:42:49.500
And here's the GitHub repository that shows all the commit history.

00:42:49.500 --> 00:42:52.540
And, yeah, somebody took it and drew a picture and made a conclusion.

00:42:52.540 --> 00:42:53.640
But that's not the work.

00:42:53.640 --> 00:42:54.420
You know what I mean?

00:42:54.420 --> 00:42:55.240
Yeah, exactly.

00:42:55.240 --> 00:43:04.100
Yeah, one thing I know of where they're doing that, you can actually assign a DOI to a GitHub repo and possibly even a specific release.

00:43:04.100 --> 00:43:06.240
CERN, I think, is where it's out of.

00:43:06.240 --> 00:43:09.400
There's a site called Zenodo, Z-E-N-O-D-O.

00:43:09.400 --> 00:43:09.900
That's right.

00:43:09.900 --> 00:43:10.280
Yeah.

00:43:10.280 --> 00:43:12.580
And that might have come up previously on the podcast.

00:43:12.580 --> 00:43:22.620
But they're definitely getting infrastructure to site data, code, and all those sorts of things as individual units to tie into this research documentation process.

00:43:22.620 --> 00:43:22.880
Yeah.

00:43:22.880 --> 00:43:30.260
It lets you sort of claim or make a permanent link back to the software in an exact state, the digital object identifier.

00:43:30.260 --> 00:43:31.020
Yeah.

00:43:31.020 --> 00:43:33.860
They're doing some really cool stuff with reproducible science there.

00:43:33.940 --> 00:43:35.780
But also, you could see it for attribution, right?

00:43:35.780 --> 00:43:36.600
Interesting.

00:43:36.600 --> 00:43:37.420
Yeah, that's really cool.

00:43:37.420 --> 00:43:37.700
Yeah.

00:43:37.700 --> 00:43:40.020
Giuseppe, let me ask you the same question.

00:43:40.020 --> 00:43:44.700
Where do you see, like, programming and software pushing medicine in the next 10 years?

00:43:44.700 --> 00:43:46.380
That's an interesting question.

00:43:46.760 --> 00:43:59.780
Maybe in the direction of collecting information, storing information, and parsing information on a higher level, on a region, city, region, general population level.

00:43:59.780 --> 00:44:04.200
Which is, there must be some work being done about that.

00:44:04.200 --> 00:44:04.460
Yeah.

00:44:04.460 --> 00:44:06.120
That privacy always gets in the way.

00:44:06.120 --> 00:44:06.680
You know?

00:44:06.680 --> 00:44:09.680
The privacy just makes it so hard to write that software.

00:44:09.880 --> 00:44:11.300
It's all for the greater good.

00:44:11.300 --> 00:44:25.440
But on a personal level, maybe, do you remember what was done with Watson, the IBM software, but taking the history of a patient and making a diagnosis of the patient in an automated way?

00:44:25.440 --> 00:44:41.300
So maybe that's a possibility using AI or machine learning in a way that the processor, I wouldn't say less prone to error, but maybe it could be, you know, a safeguard or a backup for the doctor, for example.

00:44:41.300 --> 00:44:42.520
Yeah, that's a really good point.

00:44:42.520 --> 00:44:52.540
Something that verify the information and say, okay, the probability this being the illness is this much or could be this other problem, this other.

00:44:52.540 --> 00:44:58.960
Yeah, when I was young, thinking about careers, you know, people always said, oh, you could become a doctor and you're always going to have a good job.

00:44:58.960 --> 00:45:02.000
And it's always going to, you know, that is a stable, reliable job.

00:45:02.000 --> 00:45:05.060
There are always going to be people and they're always going to need health care.

00:45:05.060 --> 00:45:09.740
And if you want to be safe, you become a doctor or, you know, of course, if you're under a resident as well.

00:45:09.740 --> 00:45:11.580
But that was a part of the message, I thought.

00:45:11.580 --> 00:45:13.580
And I don't know that that's necessarily true anymore.

00:45:13.580 --> 00:45:16.600
There is a physical part that is not going to go away.

00:45:16.600 --> 00:45:21.120
It's not going away, not today, not in 10 years, 15 years.

00:45:21.440 --> 00:45:28.440
But there's another part of the whole process that could be, I would say, improved by technology.

00:45:28.440 --> 00:45:29.740
Yeah, for sure.

00:45:29.740 --> 00:45:33.520
I mean, we saw some projects where they took mammogram pictures.

00:45:34.400 --> 00:45:38.760
And the AIs were doing better than the radiologists on predicting cancer.

00:45:38.760 --> 00:45:44.300
There's some stuff they took on doctor's notes and then figured out the readmission rates.

00:45:44.300 --> 00:45:46.420
And actually, the AI was doing better on that.

00:45:46.420 --> 00:46:00.460
And I can see a world where, like, a doctor is a skilled scientist who understands the body, but is also largely acting as a, like, a very knowledgeable counselor to help understand what the machines are saying.

00:46:01.000 --> 00:46:01.840
It's going to be interesting.

00:46:01.840 --> 00:46:02.220
Yeah.

00:46:02.220 --> 00:46:02.540
Yeah.

00:46:02.540 --> 00:46:05.840
There'll always be a place for doctors, but I think it's going to shift a little.

00:46:05.840 --> 00:46:06.420
It'll be interesting.

00:46:06.420 --> 00:46:07.200
All right.

00:46:07.200 --> 00:46:10.060
Well, I guess we're going to probably leave it there just for the sake of time.

00:46:10.060 --> 00:46:11.560
So it's all very interesting.

00:46:11.560 --> 00:46:15.380
But we've got to ask you all the last final two questions, of course.

00:46:15.380 --> 00:46:17.900
So just quickly go through both these.

00:46:17.900 --> 00:46:18.680
We won't have a lot of time.

00:46:18.680 --> 00:46:20.400
So, Giuseppe, I'll start with you.

00:46:20.400 --> 00:46:23.300
Favorite editor or what you use day to day?

00:46:23.300 --> 00:46:25.300
And then notable PyPI package.

00:46:25.300 --> 00:46:29.800
I use Sublime Text with Anaconda, and I love it.

00:46:29.800 --> 00:46:36.660
And that Anaconda is a plugin that makes Python editing better, not Anaconda, the distribution that distributes scientific packages.

00:46:36.660 --> 00:46:37.120
That's correct.

00:46:37.120 --> 00:46:37.940
Pretty clear for everyone, yeah?

00:46:40.680 --> 00:46:49.840
And favorite package, I guess, I'll go with the request just because it saved my day in so many different occasions.

00:46:49.840 --> 00:46:50.880
It is special.

00:46:50.880 --> 00:46:51.520
Brian?

00:46:51.520 --> 00:46:53.300
I'm a polyglot when it comes to editors.

00:46:53.300 --> 00:46:56.160
I work most of it's in Jupyter for side projects.

00:46:56.160 --> 00:47:05.080
Depending on how big the project is, if it's smaller, I'll just use Vim on Linux or Notepad, Wordpads, lightweight text editors on Windows.

00:47:05.540 --> 00:47:09.780
Or if I do want a full IDE on Linux, I think it's pronounced Genie, G-E-A-N-Y.

00:47:09.780 --> 00:47:10.160
Okay.

00:47:10.160 --> 00:47:12.820
And then I'll pull up PyCharm on Windows.

00:47:12.820 --> 00:47:18.180
And as for a package, I'm going to go kind of far from the usual fold, I think, here.

00:47:18.180 --> 00:47:26.000
For one of my side projects where there's a technical program that runs some calculations, but it just spits data to the terminal.

00:47:26.080 --> 00:47:30.900
But I want to run it async, and I've used a package called Sarge.

00:47:30.900 --> 00:47:31.700
Sarge, okay.

00:47:31.700 --> 00:47:33.560
Yeah, like Sargent and all.

00:47:33.560 --> 00:47:33.800
Yeah.

00:47:33.800 --> 00:47:34.580
To run it.

00:47:34.580 --> 00:47:36.660
It's a wrapper around subprocess, I guess.

00:47:36.820 --> 00:47:45.100
But it handles all of the pipes, the standard in, standard out, standard error, so that you don't get lockups from buffers filling up.

00:47:45.100 --> 00:47:45.780
Oh, wow.

00:47:45.780 --> 00:47:46.080
Okay.

00:47:46.080 --> 00:47:55.280
Continuously flushes them and makes them available as capture objects that then you can pull and parse and spit back to the console if you want.

00:47:55.280 --> 00:48:03.660
And it's like a version 0.1.5 or something, so it's still not only early development, but for what I've needed it for, it's worked really well.

00:48:03.660 --> 00:48:04.140
That's cool.

00:48:04.140 --> 00:48:06.840
So that's like that building block idea, right?

00:48:06.840 --> 00:48:10.660
So now you can take these other processes and really easily click them together.

00:48:10.660 --> 00:48:10.960
Mm-hmm.

00:48:10.960 --> 00:48:11.300
Nice.

00:48:11.300 --> 00:48:11.740
I love it.

00:48:11.740 --> 00:48:12.340
Teresa?

00:48:12.340 --> 00:48:17.100
As far as editors, I'm a big Jupyter fan, but also I just use Atom.

00:48:17.100 --> 00:48:18.640
Nothing too crazy there.

00:48:18.640 --> 00:48:25.000
And package-wise, I'll say one that's not necessarily my all-time favorite, but it saved me a ton of time recently.

00:48:25.160 --> 00:48:33.240
So I'll give a little shout-out to OpenPyExcel, which is just a really convenient way to work with Excel sheets, especially if people want to save data in multiple tabs.

00:48:33.240 --> 00:48:35.420
It's really very, very helpful.

00:48:35.420 --> 00:48:36.260
Oh, that's cool.

00:48:36.260 --> 00:48:38.740
Yeah, I've played just a little bit with that, and that is great.

00:48:38.740 --> 00:48:43.260
And I think it's really relevant to the audience who would be interested in this particular show, right?

00:48:43.260 --> 00:48:47.540
Like, very likely they've got some data in Excel and they want to just interact with it.

00:48:47.540 --> 00:48:50.600
Well, here's a nice way to automate that from Python.

00:48:50.600 --> 00:48:50.980
It's cool.

00:48:50.980 --> 00:48:51.200
Yeah.

00:48:51.200 --> 00:48:52.780
I haven't used it yet, but I'm planning on it.

00:48:52.780 --> 00:48:54.200
Yeah, it's really good.

00:48:54.260 --> 00:49:01.360
It'll let you just, like, tab through all the tabs that you might not be able to get if you just saved as a CSV and really very, very intuitive, I think.

00:49:01.360 --> 00:49:05.720
You could even do formatting, I think, like colors and formulas and stuff like that.

00:49:05.720 --> 00:49:06.500
It's pretty sweet.

00:49:06.500 --> 00:49:07.300
Yeah, I think so.

00:49:07.300 --> 00:49:09.760
I haven't gotten too much into that aspect, but I think that you can.

00:49:09.760 --> 00:49:10.840
I think so, too.

00:49:10.840 --> 00:49:14.580
I've just never needed to, like, programmatically set a color, but I could see how you might someday.

00:49:14.580 --> 00:49:16.020
All right.

00:49:16.120 --> 00:49:17.940
Well, thank you all for being on the show.

00:49:17.940 --> 00:49:21.420
It's been really great to hear your stories and thanks for coming on and sharing them with everyone.

00:49:21.420 --> 00:49:21.940
Thank you.

00:49:21.940 --> 00:49:23.500
Thank you very much for the opportunity.

00:49:23.500 --> 00:49:24.360
Really appreciate it.

00:49:24.360 --> 00:49:24.900
Yeah, you bet.

00:49:24.900 --> 00:49:25.400
Bye, everyone.

00:49:27.240 --> 00:49:29.880
This has been another episode of Talk Python to Me.

00:49:29.880 --> 00:49:34.620
Guests on this episode have been Giuseppe Consolo, Brian Skin, and Teresa Borkush.

00:49:34.620 --> 00:49:37.800
It's been brought to you by Vetteri and Rollbar.

00:49:37.800 --> 00:49:42.160
Vetteri will connect job seekers with thousands of great companies.

00:49:42.160 --> 00:49:43.980
Make Monday something to celebrate.

00:49:44.340 --> 00:49:46.620
Visit talkpython.fm/Vetteri.

00:49:46.620 --> 00:49:48.520
That's V-E-T-T-E-R-Y.

00:49:48.520 --> 00:49:51.560
And get a $500 bonus if you accept a job through them.

00:49:51.560 --> 00:49:54.360
Rollbar takes the pain out of errors.

00:49:54.360 --> 00:50:02.080
They give you the context and insight you need to quickly locate and fix errors that might have gone unnoticed until your users complain, of course.

00:50:02.080 --> 00:50:09.160
As Talk Python to Me listeners, track a ridiculous number of errors for free at rollbar.com slash talkpythontome.

00:50:09.160 --> 00:50:10.840
Want to level up your Python?

00:50:11.260 --> 00:50:17.880
If you're just getting started, try my Python jumpstart by building 10 apps or our brand new 100 days of code in Python.

00:50:17.880 --> 00:50:21.680
And if you're interested in more than one course, be sure to check out the Everything Bundle.

00:50:21.680 --> 00:50:23.920
It's like a subscription that never expires.

00:50:23.920 --> 00:50:26.120
Be sure to subscribe to the show.

00:50:26.120 --> 00:50:28.320
Open your favorite podcatcher and search for Python.

00:50:28.320 --> 00:50:29.560
We should be right at the top.

00:50:29.560 --> 00:50:38.860
You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

00:50:38.860 --> 00:50:40.760
This is your host, Michael Kennedy.

00:50:40.980 --> 00:50:42.120
Thanks so much for listening.

00:50:42.120 --> 00:50:43.200
I really appreciate it.

00:50:43.200 --> 00:50:45.120
Now, get out there and write some Python code.

00:50:45.120 --> 00:50:45.180
Thank you.

00:50:45.180 --> 00:50:45.820
Thank you.

00:50:45.820 --> 00:50:45.820
Thank you.

00:50:45.820 --> 00:50:45.820
Thank you.

00:50:45.820 --> 00:50:45.840
Thank you.

00:50:45.840 --> 00:50:46.480
Thank you.

00:50:46.480 --> 00:50:46.480
Thank you.

00:50:46.480 --> 00:50:46.480
Thank you.

00:50:46.480 --> 00:50:47.100
Thank you.

00:50:47.100 --> 00:50:47.740
Thank you.

00:50:47.740 --> 00:50:47.740
Thank you.

00:50:47.740 --> 00:50:47.740
Thank you.

00:50:47.740 --> 00:50:48.560
Thank you.

00:50:48.560 --> 00:50:49.200
Thank you.

00:50:49.200 --> 00:50:49.700
Thank you.

00:50:49.700 --> 00:50:50.020
Thank you.

00:50:50.020 --> 00:50:50.660
Thank you.

00:50:50.660 --> 00:50:50.660
Thank you.

00:50:50.660 --> 00:50:51.280
Thank you.

00:50:51.280 --> 00:50:51.780
Thank you.

00:50:51.780 --> 00:50:52.420
Thank you.

00:50:52.420 --> 00:50:52.420
Thank you.

00:50:52.420 --> 00:50:53.040
Thank you.

00:50:53.040 --> 00:50:53.040
Thank you.

00:50:53.040 --> 00:50:53.420
Thank you.

00:50:53.420 --> 00:50:53.780
Thank you.

00:50:53.780 --> 00:50:54.420
Thank you.

00:50:54.420 --> 00:50:54.580
Thank you.

00:50:54.580 --> 00:50:55.040
Thank you.

00:50:55.040 --> 00:50:55.480
Thank you.

00:50:55.480 --> 00:50:56.280
Thank you.

00:50:56.280 --> 00:50:57.540
Thank you.

00:50:57.540 --> 00:50:57.920
Thank you.

00:50:57.920 --> 00:50:58.420
Thank you.

00:50:58.420 --> 00:50:59.060
Thank you.

00:50:59.060 --> 00:50:59.680
Thank you.

00:50:59.680 --> 00:50:59.920
Thank you.

00:50:59.920 --> 00:51:01.180
Thank you.

00:51:01.180 --> 00:51:01.920
Thank you.

00:51:01.920 --> 00:51:02.420
you

00:51:02.420 --> 00:51:02.920
you

00:51:02.920 --> 00:51:03.420
you

00:51:03.420 --> 00:51:05.420
Thank you.

00:51:05.420 --> 00:51:35.400
Thank you.

