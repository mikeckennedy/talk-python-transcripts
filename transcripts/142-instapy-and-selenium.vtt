WEBVTT

00:00:00.001 --> 00:00:04.680
Is there some task you find yourself performing frequently, repetitively on the web?

00:00:04.680 --> 00:00:09.860
With Python and modern tooling, virtually every website and every web application has become

00:00:09.860 --> 00:00:14.240
easily scriptable. I'm not talking about web scraping. I'm referring to Selenium,

00:00:14.240 --> 00:00:18.800
which is a headless Python front end for the full version of the Chrome browser.

00:00:18.800 --> 00:00:23.500
Join me and Tim Grossman as we talk about Selenium and how to automate the web.

00:00:23.500 --> 00:00:28.500
You'll learn about his project Instapy, which is a full Python package for automating almost

00:00:28.500 --> 00:00:35.560
anything involving Instagram. This is Talk Python To Me, episode 142, recorded December 5th, 2017.

00:00:35.560 --> 00:00:54.560
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem,

00:00:54.560 --> 00:00:59.320
and the personalities. This is your host, Michael Kennedy. Follow me on Twitter where I'm at,

00:00:59.320 --> 00:01:04.860
mkennedy. Keep up with the show and listen to past episodes at talkpython.fm and follow the show on

00:01:04.860 --> 00:01:11.040
Twitter via at Talk Python. This episode is brought to you by Linode and GoCD. Be sure to check out what

00:01:11.040 --> 00:01:15.420
they're offering during their segments. It really helps support the show. Talk Python To Me is partially

00:01:15.420 --> 00:01:21.520
supported by our training courses. Have you tried to learn Python but got stuck or lost focus? We know

00:01:21.520 --> 00:01:27.540
how it feels to try and jam fact after fact, loop construct after turn hair expression into your

00:01:27.540 --> 00:01:33.280
head. At best, it's boring. At worst, it can turn you off programming altogether. That's why we built

00:01:33.280 --> 00:01:38.580
our course, Python Jumpstart by Building 10 Apps. This course guides you through carefully planned

00:01:38.580 --> 00:01:44.900
applications. It starts simple but progresses to quite real apps. Best of all, you won't be learning

00:01:44.900 --> 00:01:50.140
dry facts. You'll be learning like the pros do by building real applications and learning in context.

00:01:50.140 --> 00:01:56.020
If you want to start building with Python, just visit talkpython.fm/course to get started.

00:01:56.020 --> 00:01:58.460
Tim, welcome to Talk Python.

00:01:58.460 --> 00:01:59.540
Hey, thanks for having me.

00:01:59.540 --> 00:02:05.960
It's great to have you here. You have a pretty cool project and it's really leveraging some technology

00:02:05.960 --> 00:02:11.520
that I haven't done that much with with Selenium. And we're going to talk about basically automating

00:02:11.520 --> 00:02:18.880
websites with Selenium and then your package, which packages it all up into automating Instagram and

00:02:18.880 --> 00:02:23.380
Instapy, which is really, really fun. So I'm looking forward to talking about this sort of getting the

00:02:23.380 --> 00:02:26.760
web data where there is no API or where you don't want to use the API.

00:02:26.760 --> 00:02:32.300
Yeah, well, I'm excited as well to talk about Instapy and how I did it and kind of the underlying

00:02:32.300 --> 00:02:37.140
technology. It'll be really fun. So before we get into that, though, let's hear your story. How'd you

00:02:37.140 --> 00:02:38.920
get into programming and into Python?

00:02:39.280 --> 00:02:44.380
Well, at least for me, these are kind of two different starting points because I got into

00:02:44.380 --> 00:02:49.840
programming while doing my bachelor's degree in arts. And my bachelor's thesis was about

00:02:49.840 --> 00:02:58.820
automating repetitive processes when it comes to using 3D art and animation tools. And it was kind

00:02:58.820 --> 00:03:03.760
of the starting point where I started to be interesting in writing scripts and doing automation and writing

00:03:03.760 --> 00:03:04.760
code.

00:03:04.760 --> 00:03:11.760
Was this things like the Adobe tools, like Photoshop and some of the other ones? I know a lot of the

00:03:11.760 --> 00:03:16.980
3D animation software has like automation pipelines that you can plug into.

00:03:16.980 --> 00:03:24.840
There was this or there is this one tool called SeaBrush and film advertisement and games use it to

00:03:24.840 --> 00:03:31.380
create high detailed models of, for example, characters or any kind of organic stuff. And yet they have

00:03:31.380 --> 00:03:36.620
this internal scripting language called Cscript. And with that, you can easily create GUI applications

00:03:36.620 --> 00:03:42.900
that help you, for example, color different layers in different styles easily. You will do that by

00:03:42.900 --> 00:03:47.780
yourself and it will take a lot of time. But if you have a script that does it for you and you have a nice

00:03:47.780 --> 00:03:54.140
like GUI that you can use to color everything the way you want to, it saves you a lot of time in the long run.

00:03:54.140 --> 00:04:00.180
Yeah, that sounds really cool. So that got you into programming in this funky language called Cscript, which I've

00:04:00.180 --> 00:04:02.540
never heard of. What was it like?

00:04:02.540 --> 00:04:11.900
Really interesting. When you first start out with such a thing and it's the first language you get into, it's kind of hard.

00:04:11.900 --> 00:04:18.780
And it actually was a programming language or a scripting language more like where there wasn't a lot of documentation.

00:04:18.780 --> 00:04:25.580
So it was a pretty niche language and was kind of hard to get in and kind of hard to keep track of.

00:04:25.580 --> 00:04:29.420
But once you get down the foundations, it's really awesome.

00:04:29.420 --> 00:04:36.300
And it's really interesting to build stuff with it because there's a huge community behind SeaBrush who are all just artists.

00:04:36.300 --> 00:04:43.180
But if you're into scripting as well, you can create tools that not only help you get your workflow improved,

00:04:43.180 --> 00:04:45.180
but also help a lot of other people.

00:04:45.180 --> 00:04:55.180
Yeah, that's really cool. It's really nice that there's that community. It's probably not quite the same as being able to go to Stack Overflow and look how to do some double loopless comprehension.

00:04:56.060 --> 00:05:10.940
So that's really cool. And I think that's really cool. So I think that's really cool. All right. So, you know, one of the areas that I know in this whole space that has a lot of Python is Blender and the 3D stuff that they got going on there.

00:05:10.940 --> 00:05:14.940
That's pretty interesting. So how did you go from Cscript into Python?

00:05:14.940 --> 00:05:24.460
Python was actually introduced pretty lately in my studies. So after finishing my bachelor's degree in arts, I kind of was really interested in getting into programming.

00:05:24.460 --> 00:05:29.580
And so I started another bachelor's degree, which is computer science right now, and I'm still studying it.

00:05:29.580 --> 00:05:36.300
And quite a half a year to a year ago, we had this lecture called data mining.

00:05:36.300 --> 00:05:51.420
And as most of the Python users probably know it, that Python is one of the most used languages for data analytics, data science, and all these data uprangling kind of tasks where you use Pandas and Pencilflow, depending on what you do.

00:05:51.420 --> 00:05:59.020
So I had to prepare for this lecture a little bit because I didn't want to go in there without having any kind of knowledge in Python.

00:05:59.020 --> 00:06:04.860
And so I really got introduced or I introduced myself into this Python field.

00:06:04.860 --> 00:06:07.100
I had learned Java before and JavaScript.

00:06:07.100 --> 00:06:10.380
So I kind of knew a little bit about the basics and the foundations.

00:06:10.380 --> 00:06:12.500
So it was not too hard to get into it.

00:06:12.500 --> 00:06:25.100
And a lot of people probably know, or all the listeners probably know that Python is just a really nice language that looks like it's written how you would do it initially.

00:06:25.380 --> 00:06:30.560
So it's kind of like you say it, you can sometimes write it down and it's pretty easy to get into.

00:06:30.560 --> 00:06:32.140
Yeah, it's really lovely in that way.

00:06:32.140 --> 00:06:38.620
There's a great cartoon that was going around a meme on, I don't know where it was, maybe Instagram, maybe on Twitter.

00:06:39.000 --> 00:06:44.080
It was a picture of these people standing around some description on paper.

00:06:44.080 --> 00:06:46.120
And it said pseudocode.

00:06:46.120 --> 00:06:49.900
And it said, we need to convert this pseudocode into Python.

00:06:49.900 --> 00:06:56.140
And so then the next picture in the cartoon is they just put dot PY on the end of the pseudocode.

00:06:56.140 --> 00:06:57.020
Nice.

00:06:57.260 --> 00:06:58.420
And it's kind of like that, right?

00:06:58.420 --> 00:07:00.520
It's like, this is the way you would naturally describe it.

00:07:00.520 --> 00:07:01.840
And then, oh yeah, that's actually how it works.

00:07:01.840 --> 00:07:02.360
Just run that.

00:07:02.360 --> 00:07:02.840
Absolutely.

00:07:02.840 --> 00:07:03.180
Yeah.

00:07:03.180 --> 00:07:03.480
Yeah.

00:07:03.480 --> 00:07:03.840
Yeah.

00:07:03.840 --> 00:07:04.280
Very cool.

00:07:04.280 --> 00:07:05.260
All right.

00:07:05.260 --> 00:07:11.600
So you said that you got your degree in art and now you're working on a computer science.

00:07:11.600 --> 00:07:17.700
And actually, you come from Stuttgart, where a lot of listeners know I spent some time there

00:07:17.700 --> 00:07:20.280
as well, but neither of us are in Stuttgart right now.

00:07:20.280 --> 00:07:21.800
We're both on the West Coast in the US.

00:07:21.800 --> 00:07:26.960
So you're actually doing something pretty exciting as a sort of a little time away from your studies

00:07:26.960 --> 00:07:28.240
in a sense, or applied studies.

00:07:28.240 --> 00:07:28.880
Yes, exactly.

00:07:28.880 --> 00:07:32.160
I'm currently sitting kind of in the heart of the Silicon Valley.

00:07:32.540 --> 00:07:39.240
And it was one of my biggest goals while studying to get involved in this area and get maybe

00:07:39.240 --> 00:07:41.640
an internship in the Silicon Valley area.

00:07:41.640 --> 00:07:47.420
And right now I'm sitting in Palo Alto, where I'm doing an internship at Bosch in the field

00:07:47.420 --> 00:07:54.360
of data engineering, which is kind of a subfield of data science and this big data field where

00:07:54.360 --> 00:07:56.180
a lot of people are currently working on.

00:07:56.180 --> 00:07:56.880
Yeah, that's really cool.

00:07:56.880 --> 00:07:59.760
Bosch is one of those companies that seems to do a little bit of everything.

00:07:59.760 --> 00:08:01.800
Yeah, exactly.

00:08:01.800 --> 00:08:06.040
You know, I think of them as automotive parts, but it's also so many other types of things.

00:08:06.040 --> 00:08:07.560
What kind of stuff are you doing in your internship?

00:08:07.560 --> 00:08:09.000
We have a lot of data.

00:08:09.000 --> 00:08:13.720
So we have these manufacturing lines and these manufacturing lines, they produce a ton of

00:08:13.720 --> 00:08:15.780
data for different components.

00:08:15.780 --> 00:08:21.920
So we want to have this real-time stream of data and we kind of operate on them.

00:08:21.920 --> 00:08:27.520
We transform it, we clean it up, we normalize it to make sure that the data scientists later

00:08:27.520 --> 00:08:35.900
have an easy task in operating on them and creating models out of it, creating graphs out of it,

00:08:35.900 --> 00:08:38.060
getting some better insights in general.

00:08:38.060 --> 00:08:38.680
That's really cool.

00:08:38.940 --> 00:08:41.000
I've never been really a data scientist.

00:08:41.000 --> 00:08:43.140
I've been more of the programmer side of things.

00:08:43.140 --> 00:08:48.580
But I hear from the data scientists that I know that a major part of the job is actually data

00:08:48.580 --> 00:08:50.820
acquisition, normalization, cleanup.

00:08:50.820 --> 00:08:54.560
You probably use Pandas and all those kinds of things a lot over there, right?

00:08:54.700 --> 00:08:59.620
Since I'm more into data engineering and less into data science itself, I'm mostly doing

00:08:59.620 --> 00:09:02.760
Python in my free time for some private projects.

00:09:02.760 --> 00:09:07.020
And at Bosch, we mostly use, for example, Scala and Kafka.

00:09:07.020 --> 00:09:08.640
We use Spark.

00:09:08.640 --> 00:09:16.000
And there is also, we could use Spark for Python because there is PySpark, but we all do it on

00:09:16.000 --> 00:09:18.600
the JVM and therefore we use Scala.

00:09:18.600 --> 00:09:19.480
Yeah, that's cool.

00:09:19.480 --> 00:09:21.320
Scala sounds like an interesting thing.

00:09:21.320 --> 00:09:26.560
I know there was Jython as one of the options for running Python in the JVM, but I kind

00:09:26.560 --> 00:09:30.960
of feel like Jython hasn't gotten a lot of attention in the last, I don't know, many years.

00:09:30.960 --> 00:09:33.320
Do you guys think about Jython at all?

00:09:33.320 --> 00:09:36.840
That's really interesting because right now I'm working on a project as well.

00:09:36.840 --> 00:09:38.160
It's also at Bosch.

00:09:38.160 --> 00:09:41.020
It's an evaluation of a third-party tool.

00:09:41.020 --> 00:09:45.020
And they have this small component, this Jython component.

00:09:45.020 --> 00:09:49.280
And I wasn't really sure what it is or what it was until I got used to it.

00:09:49.280 --> 00:09:53.880
And then I had some pretty interesting task about daytime conversion.

00:09:53.880 --> 00:09:55.560
And we had this weird daytime.

00:09:55.560 --> 00:10:02.620
And it was really nice to use Java in combination with Python and combine the forces of their daytime

00:10:02.620 --> 00:10:08.580
and date conversion libraries to create this really nice and well-structured code that does

00:10:08.580 --> 00:10:09.740
exactly what we want to do.

00:10:09.740 --> 00:10:12.860
So I think it's pretty cool to combine these.

00:10:12.860 --> 00:10:14.860
And it runs pretty fast as well.

00:10:14.860 --> 00:10:18.460
So it's not too bad, even though it's not that popular yet.

00:10:18.460 --> 00:10:19.280
Yeah, that's awesome.

00:10:19.280 --> 00:10:24.280
I know there's some major, major companies right in the area where you are, but I can't

00:10:24.280 --> 00:10:29.760
name their names because how I learned about this, that use Jython as a major, major platform

00:10:29.760 --> 00:10:30.320
out there.

00:10:30.320 --> 00:10:31.680
So that's pretty interesting.

00:10:31.680 --> 00:10:33.020
I definitely think it makes sense.

00:10:33.140 --> 00:10:39.400
If you're already mostly doing Java as a company or, you know, similarly, if you're like a

00:10:39.400 --> 00:10:44.120
Microsoft.net shop to use Python.net or Iron Python to be able to just go, okay, well, this

00:10:44.120 --> 00:10:45.240
part is better in Python.

00:10:45.240 --> 00:10:47.480
And I know I can't fight the forces.

00:10:47.480 --> 00:10:51.440
Like it's trying to push back the ocean to say, we're just going to rewrite it in Python.

00:10:51.440 --> 00:10:53.100
So let's just, you know, put them together.

00:10:53.100 --> 00:10:54.360
Like you said, that's cool.

00:10:54.360 --> 00:10:54.960
Yeah, totally.

00:10:54.960 --> 00:10:55.240
Yeah.

00:10:55.240 --> 00:11:00.960
That's, it was a real nice experience playing around with this Jython code and seeing what

00:11:00.960 --> 00:11:01.420
they can do.

00:11:01.420 --> 00:11:02.100
Yeah, for sure.

00:11:02.100 --> 00:11:06.240
Let's talk a little bit about the Instagram stuff that you've been up to.

00:11:06.240 --> 00:11:09.940
And like we said at the beginning, we'll focus on some of the foundations as well.

00:11:09.940 --> 00:11:13.000
So what are the origins of this?

00:11:13.080 --> 00:11:17.700
Like it feels to me like it came from, you know, you're going to help some companies

00:11:17.700 --> 00:11:22.660
basically automate their social media story.

00:11:22.660 --> 00:11:24.660
And there are automations out there.

00:11:24.660 --> 00:11:26.760
Like I use buffer for the podcast, right?

00:11:26.760 --> 00:11:32.540
And I can schedule a social media message to go out to LinkedIn, Twitter, Facebook at any

00:11:32.540 --> 00:11:34.000
time and like all sorts of stuff.

00:11:34.000 --> 00:11:39.980
But we're talking like go in and comment on this post, go and like this photo, go reshare

00:11:39.980 --> 00:11:41.800
this, you know, those kinds of things, right?

00:11:41.800 --> 00:11:42.420
Yeah, exactly.

00:11:42.580 --> 00:11:47.380
So the tool I built has a lot of these features you already described right now.

00:11:47.380 --> 00:11:53.180
And it's really for people who know some of the pages that are out there, these services

00:11:53.180 --> 00:11:59.160
that offer you to just pay three bucks, pay five bucks to get 100, 200 followers right

00:11:59.160 --> 00:11:59.460
away.

00:11:59.460 --> 00:12:03.160
It's really not comparable to that kind of automation.

00:12:03.160 --> 00:12:04.880
If you would name it like that.

00:12:04.880 --> 00:12:11.620
It's more in the term of, all right, I have my account and my account is about cards.

00:12:11.740 --> 00:12:12.740
My account is about cards.

00:12:12.740 --> 00:12:19.460
And so I want to interact with people that also have an account about cards or also used

00:12:19.460 --> 00:12:22.340
to post a lot of cat pictures.

00:12:22.340 --> 00:12:27.420
And then the script or the bot, however you want to call it, goes to their account and

00:12:27.420 --> 00:12:31.460
for example, likes one of their pictures or comments on one of their pictures.

00:12:31.460 --> 00:12:32.940
And you can set that all up.

00:12:32.940 --> 00:12:36.320
You can say, all right, I want to like, but I don't want to comment.

00:12:36.320 --> 00:12:41.060
And then if you want to comment, you can set comments like, all right, this is a nice cat

00:12:41.060 --> 00:12:42.520
or this is a cute looking cat.

00:12:42.660 --> 00:12:45.580
And you can also set up that you want to follow these people.

00:12:45.580 --> 00:12:52.720
So that and if you do that, they will see you as a person, you as a profile in their news

00:12:52.720 --> 00:12:55.480
page or their notifications page.

00:12:55.480 --> 00:12:59.700
And they, of course, will check out your account as well, because this is how the whole Instagram

00:12:59.700 --> 00:13:03.160
social networking thing works nowadays.

00:13:03.580 --> 00:13:06.820
And that will make them attracted to your page.

00:13:06.820 --> 00:13:12.480
And maybe if they see that you post similar stuff to them, they will just follow you or

00:13:12.480 --> 00:13:17.560
like your stuff and comment on your stuff naturally, because they really don't know that it's a

00:13:17.560 --> 00:13:20.520
bot or that it's kind of automation behind it.

00:13:20.520 --> 00:13:21.100
That's for sure.

00:13:21.100 --> 00:13:26.480
I feel like there are these services that you can go out there and kind of get social media

00:13:26.480 --> 00:13:28.460
followers or whatever.

00:13:28.460 --> 00:13:33.100
And they've always seemed so empty and shallow to me, right?

00:13:33.100 --> 00:13:38.280
Like, it seems like the real way to get meaningful people that will care what you say and interact

00:13:38.280 --> 00:13:39.780
with you is to interact with them, right?

00:13:39.780 --> 00:13:41.180
I mean, it's just human nature.

00:13:41.180 --> 00:13:41.720
Absolutely.

00:13:41.720 --> 00:13:42.460
Yeah.

00:13:42.460 --> 00:13:49.400
I noticed these people all the time using these scripts to go and follow like the podcast or

00:13:49.400 --> 00:13:50.240
follow me personally.

00:13:50.240 --> 00:13:55.660
And then three days later, they'll unfollow because I didn't follow them back or, you know,

00:13:55.660 --> 00:13:56.640
something like that.

00:13:56.640 --> 00:13:59.940
And like, you know, just because you follow me, that's not going to do it.

00:13:59.940 --> 00:14:03.080
And, you know, hint to everyone listening, if you want me to do it, you know,

00:14:03.080 --> 00:14:08.320
I follow almost everyone that sends me a direct message or mentions me in any way,

00:14:08.320 --> 00:14:09.920
any form of real interaction.

00:14:09.920 --> 00:14:11.220
I follow that person.

00:14:11.220 --> 00:14:15.020
But it just, you know, just because something like something comes along and follows me,

00:14:15.020 --> 00:14:18.040
like what's the chance it's just going to go away again in three days?

00:14:18.040 --> 00:14:22.480
You know, that's so I think these real interactions are important.

00:14:22.480 --> 00:14:25.300
And you talked about you actually gave a talk at EuroPython, right?

00:14:25.420 --> 00:14:25.880
Yeah, exactly.

00:14:25.880 --> 00:14:28.040
It was exactly about this topic.

00:14:28.040 --> 00:14:33.660
It was not only about this Instapy, this tool I built, but more general about how you can

00:14:33.660 --> 00:14:37.880
use Python and Selenium, which is just a front end testing library.

00:14:37.880 --> 00:14:43.660
How you can use these in combination to create automations yourself, for example, for Instagram,

00:14:43.660 --> 00:14:44.700
if you want to do that.

00:14:44.840 --> 00:14:45.400
Yeah, that's cool.

00:14:45.400 --> 00:14:49.940
One of the little stories you shared in there, which totally resonated with me with other jobs

00:14:49.940 --> 00:14:55.220
that I had, not around social media, but just this, there were people whose job was to go

00:14:55.220 --> 00:15:00.120
around, log into the client's accounts, find interesting related social media accounts and

00:15:00.120 --> 00:15:01.820
interact with them a little bit and then go away.

00:15:01.820 --> 00:15:06.600
And there's just their job was just to be that active person for hundreds of accounts, right?

00:15:07.160 --> 00:15:07.800
Yeah, exactly.

00:15:07.800 --> 00:15:13.280
This is one thing I found out after I gave the talk and had some interactions with a few

00:15:13.280 --> 00:15:19.040
people that contacted me because of the project was that they told me that they have companies,

00:15:19.040 --> 00:15:24.760
they have businesses that do these kind of automations for customers, but they have one or two people

00:15:24.760 --> 00:15:25.340
sitting there.

00:15:25.340 --> 00:15:30.060
And these people, they come in at eight in the morning, they sit down on their desk and have

00:15:30.060 --> 00:15:32.880
a huge list of accounts with username and password.

00:15:33.320 --> 00:15:38.160
And then they log into that account and all they do on that day is to go through these

00:15:38.160 --> 00:15:42.300
accounts, liking, commenting and following people on Instagram.

00:15:42.300 --> 00:15:47.240
And I just thought that was, that's just so ridiculous because of course you can automate

00:15:47.240 --> 00:15:48.080
this kind of stuff.

00:15:48.080 --> 00:15:53.300
And it's, it's really hard to believe that there are companies that pay several people to do

00:15:53.300 --> 00:15:53.560
that.

00:15:53.560 --> 00:15:58.600
If there is, there could be, for example, one guy that is working on it full time to automate

00:15:58.600 --> 00:15:59.260
this kind of stuff.

00:15:59.260 --> 00:15:59.540
Yeah.

00:15:59.740 --> 00:16:04.580
I, you know, I worked at some companies where there was a lot of manual stuff.

00:16:04.580 --> 00:16:07.880
It was not company full of programmers or the company full of scientists.

00:16:07.880 --> 00:16:11.960
And they would, they would do all these things manually.

00:16:11.960 --> 00:16:16.080
And they literally had like grad students and stuff who would just go through the data and

00:16:16.080 --> 00:16:17.320
do this repetitious stuff.

00:16:17.320 --> 00:16:22.600
And like, you know, we could just write software this week to like do all of this and without

00:16:22.600 --> 00:16:23.740
errors and right away.

00:16:23.740 --> 00:16:24.940
And they were totally terrified.

00:16:24.940 --> 00:16:26.940
They're like, you're going to get rid of our jobs.

00:16:26.940 --> 00:16:31.620
Like, no, we're going to make it so you can actually do the jobs humans are meant to do

00:16:31.620 --> 00:16:33.200
and not have to do this junk.

00:16:33.200 --> 00:16:36.900
And so then, you know, after a month they had like, they were doing like higher level, more

00:16:36.900 --> 00:16:37.660
interesting stuff.

00:16:37.660 --> 00:16:39.540
And then another round of automation.

00:16:39.540 --> 00:16:42.200
And then they were just doing more interesting things.

00:16:42.200 --> 00:16:45.300
And I kind of feel like that's, that could happen here.

00:16:45.300 --> 00:16:45.480
Right.

00:16:45.480 --> 00:16:49.660
Like those people who come in and sit down and sit in just like blindly following and liking

00:16:49.660 --> 00:16:55.060
stuff, they could actually be following up on the conversations triggered by the bots

00:16:55.060 --> 00:16:56.460
and stuff like that, you know?

00:16:56.460 --> 00:16:56.980
Absolutely.

00:16:56.980 --> 00:16:57.340
Yeah.

00:16:57.340 --> 00:16:57.580
Yeah.

00:16:57.580 --> 00:16:58.180
Pretty interesting.

00:16:58.180 --> 00:17:03.420
This portion of Talk Python To Me is brought to you by Linode.

00:17:03.420 --> 00:17:07.500
Are you looking for bulletproof hosting that's fast, simple, and incredibly affordable?

00:17:07.500 --> 00:17:13.620
Look past that bookstore and check out Linode at talkpython.fm/Linode, L-I-N-O-D-E.

00:17:13.620 --> 00:17:17.960
Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:17:18.400 --> 00:17:20.160
They have 10 data centers across the globe.

00:17:20.160 --> 00:17:22.880
So no matter where you are, there's a data center near you.

00:17:22.880 --> 00:17:26.960
Whether you want to run your Python web app, host a private Git server, or a file server,

00:17:26.960 --> 00:17:32.880
you'll get native SSDs on all machines, a newly upgraded 200 gigabit network, and 24-7

00:17:32.880 --> 00:17:36.240
friendly support, even on holidays, and a seven-day money-back guarantee.

00:17:36.240 --> 00:17:39.700
Want a dedicated server for free for the next four months?

00:17:39.700 --> 00:17:44.040
Use the coupon code Python17 at talkpython.fm/Linode.

00:17:45.040 --> 00:17:49.900
All right, so let's take a step back and let's talk sort of the foundations, because I think

00:17:49.900 --> 00:17:54.440
the foundational stuff is actually really interesting for people, regardless of whether they care

00:17:54.440 --> 00:17:55.920
about Instagram or not.

00:17:55.920 --> 00:18:00.480
And then we could talk about how that's sort of led to Instapy.

00:18:00.480 --> 00:18:04.400
So really, a lot of this is based upon Selenium, right?

00:18:04.400 --> 00:18:05.120
Exactly, yeah.

00:18:05.120 --> 00:18:06.880
Yeah, so tell everyone what Selenium is.

00:18:06.880 --> 00:18:08.520
We haven't talked about it too much on the podcast.

00:18:08.600 --> 00:18:12.580
For those who don't know, Selenium is actually a front-end testing framework.

00:18:12.580 --> 00:18:18.100
And what this means is that you create a front-end for your application, for example.

00:18:18.100 --> 00:18:19.860
It's just a simple web page.

00:18:19.860 --> 00:18:27.880
And then you use Selenium to create interaction, create a simulation that just imitates a user

00:18:27.880 --> 00:18:29.300
clicking on different buttons.

00:18:29.520 --> 00:18:37.960
It imitates a user clicking on posts of people commenting or just writing into a simple text

00:18:37.960 --> 00:18:38.300
box.

00:18:38.300 --> 00:18:38.620
Right.

00:18:38.620 --> 00:18:42.880
One of the things you can do is say, like, go to this text box and send this sequence of

00:18:42.880 --> 00:18:43.280
keys.

00:18:43.280 --> 00:18:47.780
You know, I space like space this period, you know, right?

00:18:48.260 --> 00:18:52.640
So this is different from, say, like, Beautiful Soup or something where you just get the HTML.

00:18:52.640 --> 00:18:58.680
This actually has, like, a headless Chrome, Chrome the browser, and it runs that.

00:18:58.680 --> 00:19:01.480
And then you interact with Chrome through Python, right?

00:19:01.480 --> 00:19:02.180
Yeah, exactly.

00:19:02.180 --> 00:19:05.960
So, for example, the first step is always to create a new browser instance.

00:19:05.960 --> 00:19:11.540
And if you don't use Chrome headless, it will just open up a new browser window as you would

00:19:11.540 --> 00:19:13.200
do it if you would do it manually.

00:19:13.480 --> 00:19:18.760
And in there, then you can do this automation in terms of saying, all right, I want my mouse

00:19:18.760 --> 00:19:24.360
to be at this position and click that point in the graphical user interface.

00:19:24.360 --> 00:19:24.720
Yeah.

00:19:24.720 --> 00:19:26.460
And you can actually watch it, right?

00:19:26.460 --> 00:19:26.920
Exactly.

00:19:26.920 --> 00:19:27.120
Yeah.

00:19:27.120 --> 00:19:30.360
You can sit there and watch your automation doing the job for you, actually.

00:19:30.360 --> 00:19:31.760
That's pretty awesome.

00:19:31.760 --> 00:19:33.020
I'm working.

00:19:33.020 --> 00:19:33.300
Look.

00:19:33.300 --> 00:19:37.660
And it's pretty easy to install, right?

00:19:37.660 --> 00:19:41.800
It's super easy because it's a simple Python package on PyPI.

00:19:42.020 --> 00:19:45.380
And you can just do pip install Selenium and you're ready to go.

00:19:45.380 --> 00:19:46.260
Yeah, that's really awesome.

00:19:46.260 --> 00:19:51.300
So, the way to get started is you basically create an instance of Selenium.

00:19:51.300 --> 00:19:54.920
You tell it to use the headless Chrome.

00:19:54.920 --> 00:19:57.520
And then you just set up a request, right?

00:19:57.520 --> 00:19:59.200
And then start interacting with it.

00:19:59.200 --> 00:19:59.700
Yeah, exactly.

00:19:59.700 --> 00:20:02.300
Actually, that is the full headline here.

00:20:02.300 --> 00:20:02.580
Yeah.

00:20:02.580 --> 00:20:03.240
Nice.

00:20:03.240 --> 00:20:04.580
Not too hard.

00:20:04.580 --> 00:20:05.280
And so, it loads up.

00:20:05.280 --> 00:20:14.980
And one of the things this is really important for is if you were to use screen scraping on any website that uses a modern Java front-end framework.

00:20:14.980 --> 00:20:16.740
You might call them modern web.

00:20:16.740 --> 00:20:18.860
I'm not sure that's really the right term for it.

00:20:18.900 --> 00:20:32.000
But, you know, any AngularJS, VueJS, these types of sites, what you're going to get back if you hit them with, say, request plus BeautifulSoup is a bunch of mustache curly braces where data would go if it were to run the JavaScript, right?

00:20:32.000 --> 00:20:40.740
That's one of the biggest problems when using, like you said, requests, because this content is only rendered dynamically once you enter the page.

00:20:40.740 --> 00:20:48.420
And if you just use requests, you will get back the skeleton of the page, but not the skeleton filled with the actual content.

00:20:48.420 --> 00:20:48.820
Right.

00:20:48.820 --> 00:20:50.340
So, this basically, it's real Chrome.

00:20:50.340 --> 00:20:53.020
So, it really runs all the stuff that's happening there.

00:20:53.020 --> 00:20:55.660
But you have this really nice way to interact with it.

00:20:55.660 --> 00:21:00.120
So, there's a couple of ways in which you might go find things in the page.

00:21:00.120 --> 00:21:04.840
Like, maybe let's take the example of logging into Instagram through Selenium, right?

00:21:04.840 --> 00:21:06.740
So, give us a bit of a description.

00:21:06.740 --> 00:21:10.920
Maybe the first, like the X pathway, and we'll talk about page object later.

00:21:10.920 --> 00:21:18.380
What you have to do to make it work is you kind of look into the page HTML of the web page.

00:21:18.380 --> 00:21:26.240
So, you just open up the document HTML, and then you can look into it, and you can, for example, select one of the page elements.

00:21:26.580 --> 00:21:31.100
Let's say we are on the login page, and we want to go into the username input box.

00:21:31.100 --> 00:21:36.400
So, we just look up the XPath in the XML, in the HTML.

00:21:36.400 --> 00:21:41.840
And once we found the input box, we can then use that identifier.

00:21:41.840 --> 00:21:56.380
For example, we could use a combination of the element class, which is, for example, the input field, and the class itself, or an ID, to get a combined query, which we can then use to uniquely identify this input box.

00:21:56.580 --> 00:21:57.360
Yeah, that's really cool.

00:21:57.360 --> 00:22:07.080
And so, what you actually get back is you get a Python object, and then you can, like, send it the keys and otherwise interact with it, right?

00:22:07.580 --> 00:22:15.040
And so, you could go, say, write the XPath expression to find the username and send the keys, your username.

00:22:15.040 --> 00:22:19.920
Find the XPath expression for the password thing, get that object back, send it the keys, your password.

00:22:19.920 --> 00:22:28.780
And then you could actually go do the same thing for the login button, and then you can call click or other types of JavaScript behaviors on it, right?

00:22:28.780 --> 00:22:29.760
Kind of the way it works.

00:22:30.160 --> 00:22:32.840
And it won't get any more hard.

00:22:32.840 --> 00:22:34.500
Yeah, that's really, really interesting.

00:22:34.500 --> 00:22:38.260
The other thing that I thought was pretty cool about it was action chains.

00:22:38.260 --> 00:22:40.520
Do you want to tell us maybe about how action chains work?

00:22:40.520 --> 00:22:45.820
Action chains are kind of the same commands, but you can chain them together.

00:22:45.820 --> 00:22:48.920
So, you only have one execution instead of several ones.

00:22:49.340 --> 00:22:53.060
So, for example, let's, again, take the example of just logging in a user.

00:22:53.060 --> 00:23:06.900
Before that, you would have to do, to write several commands to find the element, for example, for the username and password, and then send the keys there and click on the login button.

00:23:06.900 --> 00:23:18.660
If you use action chains, you can chain them together and put an execute command at the end, which will then trigger the whole chain to execute after all, which will also move your mouse cursor, for example.

00:23:19.020 --> 00:23:25.260
This will create a more natural interaction than only using the simple commands.

00:23:25.260 --> 00:23:32.140
Yeah, I don't know how much of a anti-automation detection these different sites use.

00:23:32.140 --> 00:23:41.420
I know some of them, even when you're doing basic screen scraping, they won't respond to you if they think your, say, your user agent is not something like Chrome or Firefox.

00:23:41.420 --> 00:23:46.240
If they see that as like requests on Python 3, they're like, no, no, thank you.

00:23:46.240 --> 00:23:48.160
The content is empty.

00:23:48.700 --> 00:23:54.340
But if you go and, you know, spoof the header for user agent, it's like, oh, yeah, here's the HTML.

00:23:54.340 --> 00:23:56.180
I love you, dear user.

00:23:56.180 --> 00:23:56.500
Welcome.

00:23:56.500 --> 00:24:01.560
So, it sounds like this might also be a little bit of a good thing for that.

00:24:01.560 --> 00:24:02.080
Yeah, exactly.

00:24:02.080 --> 00:24:06.640
And especially a lot of the pages really do block you off in general.

00:24:06.640 --> 00:24:09.720
So, they don't even give you an empty object.

00:24:09.980 --> 00:24:13.520
They will just maybe make sure that you won't get a response at all.

00:24:13.520 --> 00:24:27.960
And it's really hard to get dynamically rendered content on some of the big pages because they have these agreements, these license agreements that especially state that you're not supposed to crawl the web page in this kind of stuff.

00:24:27.960 --> 00:24:28.440
Yeah, sure.

00:24:28.440 --> 00:24:33.620
There's actually, I had long, long ago, I had, sorry, I'm forgetting his name.

00:24:34.280 --> 00:24:36.800
I had the guy behind Scrapey on.

00:24:36.800 --> 00:24:43.340
And he actually runs web scraping as a service at scrapinghub.com.

00:24:43.760 --> 00:24:46.060
And it has, like, all these different servers.

00:24:46.060 --> 00:24:52.500
And it has, like, all this infrastructure for dealing with these types of things, like, always come from a different IP address and all sorts of stuff.

00:24:52.500 --> 00:24:58.240
But it's definitely a challenge to work with some of the sites, especially if they don't want you to.

00:24:58.240 --> 00:24:59.120
All right.

00:24:59.120 --> 00:25:01.340
So, we've gone through this action chain.

00:25:01.340 --> 00:25:02.400
We've logged in.

00:25:02.400 --> 00:25:13.720
And then on most of these social media sites, certainly Instagram, Facebook, and Twitter, for better or worse, they've deeply embraced the idea of the infinite scroll rather than some form of.

00:25:13.720 --> 00:25:14.520
Paging, right?

00:25:14.520 --> 00:25:18.580
Yeah, this is, if you want to automate this kind of stuff, it's totally annoying.

00:25:18.580 --> 00:25:19.600
Sure.

00:25:19.600 --> 00:25:23.360
So, tell us what the problem is and how you might solve that with Selenium.

00:25:23.360 --> 00:25:34.860
If you check out, for example, the feed page of your Instagram profile, you will see that there's only a few posts prefetched and all the other stuff will be fetched once you reach the end of the page.

00:25:34.860 --> 00:25:41.900
This is pretty good for the performance of your network because you only have to get all the data that is visible right now.

00:25:42.320 --> 00:25:52.140
But if you do it with a query, then you have this paging style where you get, for example, eight posts per query.

00:25:52.140 --> 00:25:57.420
And then you have to make sure you keep that paging object as well so you get more data.

00:25:57.880 --> 00:26:08.400
And with Selenium, this is pretty easy because since you're an automated user, you can just use a command to scroll down to the bottom of the page and scroll up again.

00:26:08.400 --> 00:26:12.640
And once the new content is loaded, you do it over and over again.

00:26:12.980 --> 00:26:22.300
This will just trigger new content to be loaded all the time, which will make sure that you have a really nice and large portion of the webpage visible.

00:26:22.300 --> 00:26:22.620
Yeah.

00:26:22.620 --> 00:26:28.620
And it usually has that little loading gif at the, you know, little spinning loading thing at the end as it's loading up.

00:26:28.620 --> 00:26:30.840
So, can you detect that and wait for it to go away?

00:26:30.840 --> 00:26:32.480
Or do you just give it some time?

00:26:32.480 --> 00:26:36.060
Just go to the end and just wait for five seconds.

00:26:36.060 --> 00:26:36.340
Okay.

00:26:36.400 --> 00:26:47.140
What it's doing right now is it will scroll to the end of the page and then it will scroll up again and it will wait a few seconds before it will try again.

00:26:47.140 --> 00:26:52.700
And if there's no more content, we will detect that and then we'll kind of try again.

00:26:52.700 --> 00:26:58.420
So, it's more like a two-way security that you will actually get new content.

00:26:58.420 --> 00:27:04.260
If you don't have any network, it will just stop doing it and then get the content that is already there.

00:27:04.260 --> 00:27:04.520
Okay.

00:27:04.940 --> 00:27:08.720
Another one of the problems that you talked about, well, I guess there's a couple of problems.

00:27:08.720 --> 00:27:17.540
One is the obvious problem that if you're using XPath, it's super dependent on the structure of the HTML.

00:27:17.540 --> 00:27:22.480
Like, it's even worse than using CSS, which already depends on the page structure.

00:27:22.480 --> 00:27:25.020
But it's like really the true structure.

00:27:25.020 --> 00:27:27.160
And if it changes, that's really bad.

00:27:27.160 --> 00:27:30.400
And, you know, most people are like, whoa, wonderful.

00:27:30.400 --> 00:27:32.520
You know, Twitter redesigned their website.

00:27:32.720 --> 00:27:35.240
I could just imagine some people going, oh, no.

00:27:35.240 --> 00:27:37.600
We're going to have to get right on this.

00:27:37.600 --> 00:27:39.000
You know?

00:27:39.000 --> 00:27:41.120
So, that's one of the problems you run into, right?

00:27:41.120 --> 00:27:48.580
The other one, which this one I didn't actually think about but makes perfect sense for these global companies like Instagram and other social media,

00:27:48.580 --> 00:27:52.660
is they can send you different languages.

00:27:52.940 --> 00:28:02.280
And so, if you're like writing a query to say, go find the thing that says login, and then you get German back, it's not going to say login usually, right?

00:28:02.280 --> 00:28:04.700
Unmelden or whatever it's going to say, right?

00:28:05.500 --> 00:28:06.220
Yeah, exactly.

00:28:06.220 --> 00:28:07.660
That's like you described.

00:28:07.660 --> 00:28:10.900
It's all the time it was like, oh, no, they changed something again.

00:28:11.660 --> 00:28:18.600
And, for example, with the language part, you can actually force Chrome to use a specific language.

00:28:18.600 --> 00:28:25.180
So, this was kind of the first things we introduced to make sure that we don't have a big problem with the languages at all.

00:28:25.180 --> 00:28:36.280
Because searching a button for its text is pretty nice, and they won't change the English text in a lot of cases because it's just like default or standardly described.

00:28:36.280 --> 00:28:46.860
And then we can set the language of the browser to English from the beginning, and this will help us find elements that won't break that fast.

00:28:46.860 --> 00:28:47.680
Yeah, that's cool.

00:28:47.680 --> 00:28:52.680
Yeah, I definitely learned about the setting, the preferred language in your browser when I moved to Germany.

00:28:52.860 --> 00:28:58.740
So, that was a little German, but I can't do all my web work on German.

00:28:58.740 --> 00:29:00.260
It's just not, it wasn't that good.

00:29:00.260 --> 00:29:01.660
So, yeah, all right.

00:29:01.660 --> 00:29:02.560
So, those are some of the problems.

00:29:02.560 --> 00:29:08.900
One thing that Selenium has that's pretty cool is something called the page object pattern that takes away a lot of those issues, right?

00:29:08.900 --> 00:29:09.580
Yeah, exactly.

00:29:09.580 --> 00:29:11.540
Yeah, so tell us about the page object pattern.

00:29:11.540 --> 00:29:18.400
The pattern is actually just another design pattern that was kind of introduced by Selenium itself.

00:29:19.200 --> 00:29:24.400
So, in the page object pattern, you just assign each page a separate object.

00:29:24.400 --> 00:29:31.840
So, it's a little bit of an object-oriented approach to this whole web automation thing.

00:29:32.200 --> 00:29:43.540
And, for example, if we take the login page again, and you build a page object pattern, you build a page object of that login page, then you will just focus on the important parts there.

00:29:43.540 --> 00:29:47.180
So, for example, we again have the username field.

00:29:47.180 --> 00:29:48.680
We again have the password field.

00:29:48.680 --> 00:29:50.320
We have the login button.

00:29:50.320 --> 00:29:55.340
And, for example, we have a dropdown for languages or the signup button.

00:29:55.340 --> 00:30:03.620
And then you will just assign each of the fields of that object will be expathed to one of the elements on the page itself.

00:30:03.620 --> 00:30:04.260
Yeah, that's cool.

00:30:04.260 --> 00:30:08.020
But it knows, okay, I've detected it in the HTML that way.

00:30:08.020 --> 00:30:10.660
So, it's not like it's going to vary so much.

00:30:10.780 --> 00:30:14.380
You just have the end result that you're after, like the username or something.

00:30:14.380 --> 00:30:23.560
And on this page object, object, kind of meta, the things like text boxes and stuff, those are the attributes.

00:30:23.560 --> 00:30:25.160
And you can interact with them that way, right?

00:30:25.160 --> 00:30:27.120
And what do the buttons become functions?

00:30:27.120 --> 00:30:34.260
You still have the buttons as fields there, but you also create methods or functions for the buttons itself.

00:30:34.260 --> 00:30:46.760
For example, you will have a login function that just triggers the click on the login button itself, just so you have a really nice abstraction over the more complex structure, which you can call really easily.

00:30:46.760 --> 00:30:49.680
And therefore, you will get a really nice API layer.

00:30:49.680 --> 00:30:51.300
That sounds really, really nice.

00:30:51.300 --> 00:30:52.960
You solve so many problems.

00:30:52.960 --> 00:30:54.800
You solve the page structure changing.

00:30:56.340 --> 00:31:02.480
You solve having to worry about actually what the XPath queries are.

00:31:02.480 --> 00:31:04.520
You know, you solve the language problem.

00:31:04.520 --> 00:31:07.860
It sounds really, really nice to have this page object.

00:31:07.860 --> 00:31:08.500
All right.

00:31:08.500 --> 00:31:12.080
This is just everything we've talked about so far is just Selenium.

00:31:12.080 --> 00:31:18.160
And anybody who wants to automate basically anything on the web using Python, they could just leverage this, right?

00:31:18.160 --> 00:31:18.820
Yeah, absolutely.

00:31:18.820 --> 00:31:19.320
Cool.

00:31:19.320 --> 00:31:26.320
So, you took this and said, all right, well, let's build kind of a wrapper around or on top of that.

00:31:26.320 --> 00:31:29.140
And really focus it on Instagram.

00:31:29.140 --> 00:31:30.940
And you called it Instapy, right?

00:31:30.940 --> 00:31:33.360
Yeah, Instapy is kind of a...

00:31:33.360 --> 00:31:34.420
You probably have guessed it.

00:31:34.420 --> 00:31:36.260
It's a combination of Instagram and Python.

00:31:36.260 --> 00:31:38.120
So, it's not too straightforward.

00:31:38.120 --> 00:31:41.460
It's a really great little phrase.

00:31:41.460 --> 00:31:43.580
So, tell us, you know, what it is.

00:31:43.580 --> 00:31:46.320
How does it sort of add value to this whole chain?

00:31:46.460 --> 00:31:53.620
Instapy actually is just another layer on top of this whole abstraction we already have with Selenium and this page object pattern.

00:31:53.620 --> 00:31:57.800
And with Instapy, you can build your own bot actually.

00:31:57.800 --> 00:31:59.800
So, you have different methods.

00:31:59.800 --> 00:32:01.680
Like, for example, all right, I want to like.

00:32:01.680 --> 00:32:02.820
I want to comment.

00:32:03.060 --> 00:32:06.640
I want to interact with the followers of a special page.

00:32:06.640 --> 00:32:09.560
I want to follow these people.

00:32:09.560 --> 00:32:15.640
And now you can really set up and really define the bot, how it should act for you.

00:32:15.640 --> 00:32:19.000
So, it's not a one solution that fits for everyone.

00:32:19.000 --> 00:32:23.900
But you can really define it on your own and how you want it to work for yourself.

00:32:23.900 --> 00:32:24.540
That's really cool.

00:32:24.540 --> 00:32:28.420
And it has so many Instagram-focused things that you can do.

00:32:28.420 --> 00:32:30.840
Before we get into the details, though, where did it come from?

00:32:30.880 --> 00:32:32.020
Why did you create this thing?

00:32:32.020 --> 00:32:34.760
Were you trying to like beat your friends on Instagram?

00:32:34.760 --> 00:32:37.720
And you're like, I'm going to have more followers by the end of the week, I promise.

00:32:37.720 --> 00:32:44.580
Well, the idea actually originated when I started learning Python.

00:32:44.580 --> 00:32:48.640
And there is this great book called Automating the Boring Stuff from Al Swigert.

00:32:48.640 --> 00:32:49.500
Yeah, Al's great.

00:32:49.500 --> 00:32:50.640
That book is just awesome.

00:32:50.640 --> 00:32:53.860
And there is one chapter about automating stuff with Selenium.

00:32:53.860 --> 00:33:00.480
And he has this, in my opinion, a little bit boring task of filling out the online form.

00:33:00.480 --> 00:33:05.860
And it's really, it's a good example in terms of what you can use Selenium for.

00:33:05.860 --> 00:33:10.780
But I thought it would be nicer to have something more interesting, at least for me.

00:33:10.780 --> 00:33:14.800
And so, I started playing around with Instagram a little bit.

00:33:14.800 --> 00:33:19.060
And I kind of realized that just liking random stuff worked out pretty cool.

00:33:19.320 --> 00:33:27.700
There was a journalist who, this was Facebook, not Instagram, who went and actually, as an experiment, liked everything that was on his Facebook feed.

00:33:27.700 --> 00:33:32.820
Whether it was like really left wing or right wing, offensive, funny, whatever.

00:33:32.820 --> 00:33:34.020
He just liked everything.

00:33:34.020 --> 00:33:36.620
And he said it destroyed his account after that week.

00:33:37.700 --> 00:33:42.000
I don't think Instagram is so contentious as somewhere like Facebook, though.

00:33:42.000 --> 00:33:44.760
Yeah, there's one similar problem.

00:33:44.760 --> 00:33:53.800
If you like to, or if you follow too many people, then your news feed, a lot of people just care about their news feed of posts that friends, for example, post.

00:33:53.800 --> 00:34:00.600
And if you follow a lot of people and you reach the 10,000 people that are, is it the cap for the amount of people you can follow?

00:34:00.760 --> 00:34:06.040
Then your feed will get really messy and you won't find anything there and probably have a lot of trash in there.

00:34:06.040 --> 00:34:07.940
Yeah, yeah, for sure.

00:34:07.940 --> 00:34:09.520
It's tough when you have too many people.

00:34:09.520 --> 00:34:12.860
You kind of lose your friends among all the folks you're trying to follow.

00:34:12.860 --> 00:34:17.300
This portion of Talk Python To Me was brought to you by GoCD.

00:34:17.300 --> 00:34:26.060
GoCD is an on-premise, open-source, continuous delivery tool to help you get better visibility into and control of your team's deployments.

00:34:26.560 --> 00:34:32.600
With GoCD's comprehensive pipeline modeling, you can model complex workflows for multiple teams with ease.

00:34:32.600 --> 00:34:38.220
And GoCD's value stream map lets you track changes from commit to deploy at a glance.

00:34:38.220 --> 00:34:42.340
Say goodbye to deployment panic and hello to consistent, predictable deliveries.

00:34:42.340 --> 00:34:46.740
We all know that continuous integration is super important to the code quality of your applications.

00:34:46.740 --> 00:34:50.360
Choose the open-source local CI server, GoCD.

00:34:50.360 --> 00:34:54.280
Learn more at talkpython.fm/gocd.

00:34:54.280 --> 00:34:57.100
That's talkpython.fm/gocd.

00:34:57.100 --> 00:35:00.340
There's a couple things that you can do there.

00:35:00.340 --> 00:35:07.780
For example, if I wanted to go and find Instagram posts that were related to some particular thing,

00:35:07.780 --> 00:35:14.760
and you can check that they're not your friends and that they don't have any, you know, not safe for work sort of messages.

00:35:14.760 --> 00:35:24.180
So there's kind of a fairly complex set of rules that you can use to work through your Instagram feed and interact with those through Python, right?

00:35:24.180 --> 00:35:24.900
Yeah, exactly.

00:35:24.900 --> 00:35:35.300
So we have a lot of distinct features already that kind of help you really make sure that you don't like or comment or follow people that you really don't want to follow.

00:35:35.300 --> 00:35:47.400
And there's, for example, this feature where you can just define a list of tags, a list of words that should not appear in the description of the post you want to like.

00:35:47.640 --> 00:35:57.960
So, for example, if you're kind of right-winged and there is a post that has some left-winged comments or left-winged tags, left-winged descriptions in there,

00:35:57.960 --> 00:36:01.360
then you really don't want to follow them or interact with that post.

00:36:01.520 --> 00:36:06.800
You can make sure that the bot won't follow that one or won't interact with that post, specific post.

00:36:06.800 --> 00:36:15.860
You can also just, as example, I had one actor and he wanted to interact with the followers of one of his co-actors

00:36:15.860 --> 00:36:21.360
because he knew that the people that follow his co-actor most likely will also follow him.

00:36:21.360 --> 00:36:28.620
So he wanted a feature where he can interact with the followers of his co-worker and it worked out great.

00:36:28.620 --> 00:36:30.980
We developed it and he really liked the feature.

00:36:31.180 --> 00:36:41.700
That sounds like a really good idea for basically anyone who has some competition or collaboration type of person, right?

00:36:41.700 --> 00:36:47.460
Let's say I'm General Motors and I want to capture some of the people from Porsche who like Porsche.

00:36:47.460 --> 00:36:52.560
I could just go and follow everyone who likes Porsche or Mercedes or whatever.

00:36:52.560 --> 00:36:56.920
And there's a good chance those people are into cars and they might follow me back.

00:36:56.920 --> 00:37:00.260
I could show some Corvette thing to them or something, right?

00:37:00.840 --> 00:37:01.440
Yeah, exactly.

00:37:01.440 --> 00:37:06.600
And I wasn't aware of that kind of tactic until that guy pointed out.

00:37:06.600 --> 00:37:16.400
But in the end or in the later run, I really realized that it's kind of a really core features that a lot of people use right now because it's just really powerful.

00:37:16.400 --> 00:37:17.500
Yeah, that's a great idea.

00:37:17.500 --> 00:37:20.620
My mind's going on things I can do around that.

00:37:22.220 --> 00:37:24.820
But with this, you can even make it automatic, right?

00:37:24.820 --> 00:37:29.440
And like I said at the beginning, I think it's really important to not just follow somebody.

00:37:29.440 --> 00:37:34.800
I don't think that really is a strong signal that that person wants to interact with you or that account cares about you.

00:37:34.800 --> 00:37:36.980
But having some kind of interaction, right?

00:37:36.980 --> 00:37:40.920
So in addition to, say, following, you can like somebody's post.

00:37:40.920 --> 00:37:44.000
You can actually comment on their post and things like that, right?

00:37:44.000 --> 00:37:45.660
It even kind of randomizes it, doesn't it?

00:37:45.720 --> 00:37:46.180
Yeah, exactly.

00:37:46.180 --> 00:37:57.500
For example, if you found the users you want to follow from that other guy's account, you can also set the bot to make sure that the bot goes to the account of that person.

00:37:57.880 --> 00:38:03.920
And then, for example, interact with five random posts he posted in the last several weeks.

00:38:03.920 --> 00:38:12.680
And then, for example, you say that on two of these posts, you actually want to comment something and you want to follow the account as well.

00:38:12.680 --> 00:38:15.260
Or you want to like even more posts.

00:38:15.260 --> 00:38:16.500
It's pretty interesting.

00:38:16.500 --> 00:38:24.200
It's really fun to just kind of dream about like automating social media interactions at that level, right?

00:38:24.200 --> 00:38:24.760
Yeah, yeah.

00:38:24.860 --> 00:38:31.400
And it's really interesting for a lot of people because it's just because it's this toolbox.

00:38:31.400 --> 00:38:34.000
It's really this just modular toolbox.

00:38:34.000 --> 00:38:36.860
You kind of can imagine it like Lego pieces.

00:38:36.860 --> 00:38:39.500
You can just stack together however you want to.

00:38:39.500 --> 00:38:41.920
So it really fits your needs.

00:38:41.920 --> 00:38:43.520
And maybe it's only your needs.

00:38:43.520 --> 00:38:47.280
And then you can really fit it to your specific use case.

00:38:47.520 --> 00:38:56.780
Yeah, I did a sort of a look back in the year back last New Year's on the data science world with Jonathan Morgan from Partially Derivative.

00:38:57.160 --> 00:39:06.500
And one of the things that came out of there and makes a lot of sense after looking back on it these days is there on Twitter, there were so many bots.

00:39:06.500 --> 00:39:12.540
And when it got to the political debates and conversations, it was some insane number.

00:39:12.540 --> 00:39:21.720
Like many percent of the characters on Twitter interacting on these political debates were bots on both sides.

00:39:21.920 --> 00:39:27.300
And what would happen is periodically one bot would get into an argument with another one.

00:39:27.300 --> 00:39:28.820
Nice.

00:39:28.820 --> 00:39:29.980
Yeah.

00:39:29.980 --> 00:39:33.540
So, you know, like a left wing bot would fight with a right wing bot.

00:39:33.540 --> 00:39:35.420
It's like, just, you know, just stop.

00:39:35.420 --> 00:39:37.440
So that's pretty wild.

00:39:37.440 --> 00:39:38.680
All right.

00:39:38.700 --> 00:39:45.480
So I guess maybe one of the things that is worth covering now is maybe what are the limitations?

00:39:45.480 --> 00:39:49.040
Like when does it make sense to use Instapy?

00:39:49.040 --> 00:39:50.440
When should you not?

00:39:50.440 --> 00:39:51.660
What are the drawbacks of it?

00:39:51.660 --> 00:40:04.560
A few of the drawbacks are that if you're really active yourself on Instagram, for example, then the bot probably might not make any sense because you only have a predefined number of interactions you can do per day.

00:40:04.560 --> 00:40:12.880
And this is limited by Instagram, of course, because if they detect some malicious interaction, they will make sure that they block these features.

00:40:12.880 --> 00:40:18.280
And since they have this really nice microservice architecture, they can just block you from liking.

00:40:18.280 --> 00:40:26.440
So, for example, if you go overboard with liking a lot of pictures, they will just make sure that you're not able to like any pictures for the next 24 hours.

00:40:26.440 --> 00:40:28.560
It's the same with commenting and following.

00:40:28.560 --> 00:40:32.620
So they're really defined in what they turn off for your account.

00:40:32.620 --> 00:40:33.700
That's pretty interesting.

00:40:34.000 --> 00:40:37.820
That is really interesting that they're very fine grained rather than just you've been too busy.

00:40:37.820 --> 00:40:38.420
Go away.

00:40:38.420 --> 00:40:39.220
Yeah, exactly.

00:40:39.220 --> 00:40:40.740
That's it's pretty nice.

00:40:40.740 --> 00:40:57.180
And another maybe another drawback of Instapy itself is that even though it's kind of automated right now as it is right now, you still have to make sure that you take a look at it every now and then and that you don't let it carry away.

00:40:57.180 --> 00:41:01.000
Because in some cases, there can be problems with commenting as well.

00:41:01.000 --> 00:41:05.100
If you did not define everything as close as possible.

00:41:05.100 --> 00:41:16.460
So, for example, a while ago, I had a guy that accidentally commented on a post of someone that had an illness, which was pretty serious.

00:41:16.460 --> 00:41:21.780
And, of course, he only set up the basic comments like awesome, super cool.

00:41:21.780 --> 00:41:23.520
And, wow, this is so nice.

00:41:23.520 --> 00:41:31.300
And, yeah, so one of his bot just commented, wow, this is super nice on the bottom of this post.

00:41:31.300 --> 00:41:32.160
That's so terrible.

00:41:32.660 --> 00:41:35.180
Yeah, and it's so wrong in many levels.

00:41:35.180 --> 00:41:38.240
But, yeah, you got to be really careful about that kind of stuff, right?

00:41:38.240 --> 00:41:40.500
It's still just a script.

00:41:40.500 --> 00:41:42.800
There is no AI behind it.

00:41:42.800 --> 00:41:43.740
So it's not intelligent.

00:41:43.740 --> 00:41:44.600
It's not smart.

00:41:44.600 --> 00:41:46.940
It just does whatever you tell it to do.

00:41:46.940 --> 00:41:49.280
It probably could have an AI behind it, though, right?

00:41:49.280 --> 00:42:00.520
Like that could be a feature that somebody plugs in some kind of machine learning NLTK type thing and tries to do sentiment analysis and tries to make a meaningful statement.

00:42:00.840 --> 00:42:02.640
Yeah, that's a totally valid point here.

00:42:02.640 --> 00:42:09.600
And we have some, in the later run, we implemented some image analysis with the Clarify API.

00:42:09.600 --> 00:42:13.720
And these guys are really good at making sense of pictures.

00:42:13.720 --> 00:42:19.640
So we use it to take the post's picture and let it run through the API.

00:42:19.640 --> 00:42:28.660
And if we get some special type of tags back, for example, not safe for work or anything, then we just make sure that you won't comment it.

00:42:28.820 --> 00:42:32.100
I mean, you can totally define it for yourself.

00:42:32.100 --> 00:42:35.280
So, for example, you say, I don't want to like any pictures of pizza.

00:42:35.280 --> 00:42:37.280
And then you just say, yeah, sure.

00:42:37.280 --> 00:42:41.180
Whenever the API detects there is pizza in the picture, don't like that picture.

00:42:41.180 --> 00:42:42.720
Yeah, we're a taco shop.

00:42:42.720 --> 00:42:43.720
We don't want pizza.

00:42:43.720 --> 00:42:46.640
Only tacos and burritos.

00:42:46.640 --> 00:42:47.120
Come on.

00:42:47.120 --> 00:42:47.840
That's what we like.

00:42:47.840 --> 00:42:48.900
That's pretty interesting.

00:42:48.900 --> 00:42:50.800
How long does it take for that API to run?

00:42:50.800 --> 00:42:53.680
Like given a picture, how quickly do you get an answer back?

00:42:53.760 --> 00:42:54.420
That's a good question.

00:42:54.420 --> 00:42:55.680
But it's super fast.

00:42:55.680 --> 00:43:06.620
So if you do that query in your, for example, in your terminal, because they just have this super simple API, then it's probably just a second or so until you get the response back.

00:43:06.620 --> 00:43:08.820
But that's not a point with Instapy.

00:43:08.820 --> 00:43:16.340
Because Instapy in general more works like a slow tool, because if you go too fast, Instagram, like I said, will block you off.

00:43:16.340 --> 00:43:25.300
And so we have this predefined kind of wait times in there that, for example, delays a second like for like three seconds.

00:43:25.720 --> 00:43:28.700
So this API call isn't really a problem here.

00:43:28.700 --> 00:43:38.020
If it takes a little more time, nobody cares because it's just kind of a random factor that will make your bot a little bit less likely to be detected.

00:43:38.020 --> 00:43:39.140
So let's see.

00:43:39.140 --> 00:43:43.340
What advice would you give to companies that are thinking of doing this kind of stuff?

00:43:43.340 --> 00:43:46.220
Has it worked out well for people?

00:43:46.220 --> 00:43:51.880
Or they, I feel like it's still the best thing probably is to have a true natural interactions.

00:43:51.880 --> 00:43:55.000
But maybe, you know, some combination.

00:43:55.440 --> 00:43:55.900
Yeah, exactly.

00:43:55.900 --> 00:44:06.740
So it's super important that you don't only, especially if you're a little business or a small shop, it's super important that you don't just set it up and let it go wild out there.

00:44:06.740 --> 00:44:10.800
Because you will maybe even fend off your customers, your actual customers.

00:44:10.800 --> 00:44:21.420
But it's really interesting to search for new customers or interact with people that might be interested in your shop, in your product, in your food, for example.

00:44:21.420 --> 00:44:24.300
And we have a feature that is called like by location.

00:44:24.300 --> 00:44:31.360
So you can actually set your own location as a center point and do some area around it.

00:44:31.360 --> 00:44:36.220
So you will only interact with people that have posted something close to you.

00:44:36.220 --> 00:44:42.920
So you will know that these people are either in the area or that the people were in this area and might come back.

00:44:42.920 --> 00:44:43.280
Wow.

00:44:43.280 --> 00:44:44.900
That sounds actually really valuable.

00:44:44.900 --> 00:44:45.500
That's awesome.

00:44:45.500 --> 00:44:48.820
What do you think about the ethical side of these things?

00:44:49.020 --> 00:44:53.680
This can let businesses have richer interactions with their customers.

00:44:53.680 --> 00:44:55.780
But also I can see how it could be abused.

00:44:55.780 --> 00:45:16.300
It's always a very hard decision to make and very hard decisions to make in the long run because there are so many things that can be abused and so many things that can be used to not only help your business, but also kind of destroy your business, even though you're not aware of it.

00:45:16.840 --> 00:45:23.900
Of course, there's not always someone that takes care of the whole bot itself and checks every comment twice before it gets posted.

00:45:23.900 --> 00:45:32.220
But if you see it in the other way, there are a lot of profiles out there and a lot of people out there that are these influencers.

00:45:32.220 --> 00:45:36.640
And these people often are just people that have a lot of money.

00:45:36.640 --> 00:45:39.400
They sometimes don't even have good content.

00:45:39.640 --> 00:45:46.980
And they're different between people that have good content and are famous and people that have good content and are not famous on Instagram.

00:45:46.980 --> 00:45:56.660
It's really just a small, small gap because maybe the people that have that are famous have more had more followers in the beginning or they they started earlier.

00:45:56.660 --> 00:46:06.120
And so we what I think Instapai is really good for and what Instapai really does good is that it kind of makes people equal.

00:46:06.120 --> 00:46:09.100
Let's say it makes people equal on a social level.

00:46:09.100 --> 00:46:14.540
So, for example, if you have good content, then it does not matter if you have a lot of money.

00:46:14.540 --> 00:46:19.360
So you can buy yourself 10,000 followers on Instagram or 10,000 likes per picture.

00:46:19.520 --> 00:46:28.480
It doesn't make any difference because if you use the bot for free and you have a lot of bad pictures or you use the bot for free and you have good pictures.

00:46:28.480 --> 00:46:37.140
Of course, the person with the good pictures and the nice content will be preferred by the people he interacts with for himself.

00:46:37.140 --> 00:46:47.680
And it's kind of the difference because we take that money aspect that kind of really, in my opinion, destroys this whole system.

00:46:47.920 --> 00:46:57.680
We take that out of the loop and make sure that people can become influencers, even though they don't invest that much time and money into growing their social accounts.

00:46:57.680 --> 00:47:00.280
That's an interesting way to look at it, right?

00:47:00.280 --> 00:47:05.920
Just because people, somebody is a celebrity doesn't mean that they necessarily have better content.

00:47:05.920 --> 00:47:06.500
Absolutely.

00:47:06.500 --> 00:47:07.080
Right.

00:47:07.080 --> 00:47:10.300
But they definitely have a head start on attracting people.

00:47:10.300 --> 00:47:10.600
Yeah.

00:47:10.600 --> 00:47:13.380
So let's talk about the community around Instapai a little bit.

00:47:13.380 --> 00:47:15.260
It's actually really popular.

00:47:15.600 --> 00:47:18.900
You have almost 3,000 stars on GitHub, 700 forks.

00:47:18.900 --> 00:47:21.200
Let's see, 72 contributors.

00:47:21.200 --> 00:47:23.000
This has become quite the project.

00:47:23.000 --> 00:47:27.300
And I'm so glad that it grew so big and that so many people are interested in it.

00:47:27.420 --> 00:47:36.660
Because, like we talked about it in the beginning, this kind of adjustments to the XPaths, for example, are really time consuming and are a little bit annoying.

00:47:36.660 --> 00:47:42.560
But if there are a lot of people working on it, like they do right now, which is just awesome, it gets a lot easier.

00:47:42.560 --> 00:47:44.480
And everyone has fewer work.

00:47:44.600 --> 00:47:55.560
And they really help not only grow the tool itself, but also just make sure that people are able to use it, still use it, and are glad about it.

00:47:55.560 --> 00:47:57.440
There is this one guy, he's called João.

00:47:58.000 --> 00:48:00.080
And he's at Converge on GitHub.

00:48:00.080 --> 00:48:09.040
And I'm super glad that this guy is so involved in the project because he helped me out so many times, especially since I'm now working full time.

00:48:09.040 --> 00:48:14.860
And it's pretty hard to do a lot of open source work in my free time right now.

00:48:14.980 --> 00:48:19.620
So he's always there and he's probably way smarter than I am.

00:48:19.620 --> 00:48:23.080
And he's just super active and helps out.

00:48:23.080 --> 00:48:24.980
And there are a lot of people like him.

00:48:24.980 --> 00:48:36.780
And it's so interesting and so nice to see a community building around this tool that not only uses the tool, but really it's self-contained already.

00:48:36.780 --> 00:48:40.640
So if I don't do any interaction anymore, the tool won't die.

00:48:40.880 --> 00:48:44.940
It's just the people help each other, the people communicate with each other.

00:48:44.940 --> 00:48:48.200
They even build a Slack channel without me being really involved.

00:48:48.200 --> 00:48:50.340
And they kind of are totally active.

00:48:50.340 --> 00:48:53.660
They're close to 150 people that are on the Slack channel.

00:48:53.660 --> 00:49:06.480
And it's just so amazing to see and to hear about all these progress people make with Instapai and all these emails I get about how they use Instapai and that they thank me for building it.

00:49:06.600 --> 00:49:16.280
Even though I kind of built the initial tool and I kind of built this idea of pushing it open source to make everyone able to access it.

00:49:16.280 --> 00:49:24.940
But in the end, it turns out that the community is way better in improving that script and improving the publicity of it.

00:49:24.940 --> 00:49:31.080
And really, I'm so thankful for that community because it makes the tool way more attractive.

00:49:31.080 --> 00:49:40.740
And it keeps me in the project myself because sometimes I thought about quitting, especially after I got some less nice emails from people.

00:49:40.740 --> 00:49:43.460
There was one guy from South Africa.

00:49:43.720 --> 00:49:48.500
He's doing social automation as kind of a way to finance his master's degree.

00:49:48.500 --> 00:50:02.100
And he wrote me that I should take down the project because it keeps him from getting more customers or from getting more clients that pay him to do their automation with which he pays his bachelor's degree with.

00:50:02.100 --> 00:50:08.420
So I kind of had some points where I thought about maybe I should stop supporting that project.

00:50:08.420 --> 00:50:11.160
But this community really speaks for itself.

00:50:11.420 --> 00:50:12.960
It's definitely got a life of its own, right?

00:50:12.960 --> 00:50:16.620
There's 711 copies on different repos already.

00:50:16.620 --> 00:50:17.720
So that's pretty cool.

00:50:17.720 --> 00:50:23.360
And yeah, I'm looking at the GitHub repository now and Converge is the last commit two days ago.

00:50:23.360 --> 00:50:24.840
So yeah, he's definitely very active.

00:50:24.840 --> 00:50:25.900
That's pretty awesome.

00:50:25.900 --> 00:50:26.460
Absolutely.

00:50:26.460 --> 00:50:28.080
I really love this guy.

00:50:28.080 --> 00:50:28.960
That's awesome.

00:50:28.960 --> 00:50:30.040
So shout out to him.

00:50:30.040 --> 00:50:30.840
Very cool.

00:50:31.260 --> 00:50:39.820
One of the things I like to ask people who have projects like this is I know a lot of my listeners are wanting to get into open source and they want to contribute.

00:50:39.820 --> 00:50:41.740
But it's really easy to go.

00:50:41.740 --> 00:50:43.340
I want to contribute to requests.

00:50:43.340 --> 00:50:46.320
I want to contribute to Django or whatever.

00:50:46.320 --> 00:50:56.740
And these are such finely polished, highly used, not necessarily physically large, but large in complexity and dependencies types of applications.

00:50:56.740 --> 00:51:03.360
And it's really hard for someone trying to get into it to go, yeah, I'm going to add a major revision to Django in some way, right?

00:51:03.360 --> 00:51:05.220
Like you've got to live and breathe that stuff.

00:51:05.220 --> 00:51:09.600
So this seems like there's 162 issues.

00:51:09.600 --> 00:51:14.480
It seems like there's a lot of room for other people to come in and play around with this.

00:51:14.480 --> 00:51:15.040
What do you think?

00:51:15.040 --> 00:51:16.140
Can people come get involved?

00:51:16.140 --> 00:51:24.940
There are so many interesting stories and so many nice stories about people that write me emails because they started getting into Python because of the project.

00:51:24.940 --> 00:51:26.080
They saw this one issue.

00:51:26.080 --> 00:51:31.540
And these issues are not big problems or not big kind of improvements.

00:51:31.540 --> 00:51:38.100
But there are small things that went wrong that were developed wrong or that had some kind of bug in it.

00:51:38.100 --> 00:51:42.840
And so people start digging into the code and thinking about how they could solve it.

00:51:42.840 --> 00:51:44.420
And then they fork the project.

00:51:44.420 --> 00:51:46.860
They play around with it on their local machines.

00:51:46.860 --> 00:51:52.840
And at some point, they, of course, find the problem because all of these problems are not that big of problems.

00:51:52.840 --> 00:51:55.500
You don't need to write a ton of tests for it.

00:51:55.500 --> 00:51:58.720
You don't need to really write a ton of code for it.

00:51:58.720 --> 00:52:00.680
And it's super easy to contribute.

00:52:00.680 --> 00:52:06.080
And that's probably one of the reasons why there are already so many contributors, because it's just fun.

00:52:06.080 --> 00:52:08.420
It's easy and you can help a lot of people.

00:52:08.420 --> 00:52:14.100
There will be a ton of people that are thankful for you fixing that bug in that tool.

00:52:14.100 --> 00:52:15.440
It's just great.

00:52:15.440 --> 00:52:16.740
Yeah, that's really, really cool.

00:52:16.740 --> 00:52:22.020
So it does seem like a project that's kind of the right size for getting involved in open source.

00:52:22.020 --> 00:52:25.220
It's not massive, but it's also not a toy project.

00:52:25.220 --> 00:52:25.540
Right.

00:52:25.580 --> 00:52:26.900
It's kind of fairly approachable.

00:52:26.900 --> 00:52:27.380
Absolutely.

00:52:27.380 --> 00:52:27.660
Yeah.

00:52:27.660 --> 00:52:37.200
It's one of these medium sized projects that got some attention, but not too much to be really heavily developed by a core team.

00:52:37.200 --> 00:52:39.720
But it's all open source and it's all contributors.

00:52:39.720 --> 00:52:40.140
Yeah.

00:52:40.140 --> 00:52:40.520
Excellent.

00:52:41.040 --> 00:52:52.980
So another thing that you talked about when you were at EuroPython that I thought was pretty powerful was the effect that working on open source has had on your career, at least on the software side.

00:52:52.980 --> 00:52:54.220
I don't know about the art side.

00:52:54.720 --> 00:52:57.900
Maybe speak to that a little bit and share your story there.

00:52:57.900 --> 00:52:59.840
Sorry, in terms of art or?

00:52:59.840 --> 00:53:00.560
No, no, no.

00:53:00.560 --> 00:53:06.680
Like just, you know, you said how you laid out like a couple of things that changed because you contributed to open source.

00:53:06.680 --> 00:53:15.940
So like you got like requests for internships, job offers, all sorts of cool stuff that happened by just creating this project, for example.

00:53:15.940 --> 00:53:17.180
This got really crazy.

00:53:17.180 --> 00:53:24.720
In the beginning, it were just people asking me to join their teams and to interview with them.

00:53:24.720 --> 00:53:36.120
And when I started putting a note on the bottom of my article about Instapy, people really contacted me that since I want an internship, don't you want to come over to Iceland?

00:53:36.120 --> 00:53:43.060
Don't you want to come over to Australia, to Japan, to Brazil, to the United States?

00:53:43.060 --> 00:53:45.340
It was just completely all over the world.

00:53:45.340 --> 00:53:51.820
So people from all over the world wrote me in mails that I, that they would be interesting in having me in their team.

00:53:51.820 --> 00:53:53.540
And it's just so crazy.

00:53:53.540 --> 00:53:58.200
And I got the talk at Europython because of that project.

00:53:58.200 --> 00:54:04.220
I now got another talk at the DevFest in Mountain View about that kind of topics.

00:54:04.220 --> 00:54:07.260
And while I'm sitting here right now and talking to you.

00:54:07.260 --> 00:54:07.900
Yeah, that's right.

00:54:07.900 --> 00:54:09.500
It's pretty amazing.

00:54:09.640 --> 00:54:16.080
I think you are in just such a different position when people come to you and they're like, we want to work with you.

00:54:16.080 --> 00:54:16.980
And here's the opportunity.

00:54:16.980 --> 00:54:19.020
Here's what we can do to make that amazing.

00:54:19.260 --> 00:54:27.720
As opposed to you writing, you know, going to the Contact Us forum on a hundred random companies and say, I promise I'm good.

00:54:27.720 --> 00:54:28.840
I want to come work with you.

00:54:28.840 --> 00:54:29.080
Right.

00:54:29.080 --> 00:54:30.940
It's not even the same type of thing.

00:54:30.940 --> 00:54:31.160
Right.

00:54:31.160 --> 00:54:31.560
Yeah.

00:54:31.560 --> 00:54:40.700
And if they see that you have a good GitHub profile, of course, recruiters and any type of people that search for other people that have some experience.

00:54:40.820 --> 00:54:46.600
Of course, they will look at your GitHub profile because it's just kind of the social profile of a developer.

00:54:46.600 --> 00:54:47.460
It really is.

00:54:47.460 --> 00:54:54.080
And one of the things that I think is interesting about GitHub is it's super hard to fake your commit timelines.

00:54:54.080 --> 00:54:55.400
Right.

00:54:55.400 --> 00:55:01.200
Like if you've got five repositories, but they all appeared 10 days ago.

00:55:02.560 --> 00:55:07.900
It's like, well, maybe they just put that here for this interview or because they now want a job.

00:55:07.900 --> 00:55:16.200
But if it's been there for two years and there's like lots of green bars and the little commit, I don't know what you call that, a streak or whatever they have at the bottom.

00:55:16.200 --> 00:55:17.080
Right.

00:55:17.080 --> 00:55:19.400
That that's definitely a very strong signal.

00:55:19.400 --> 00:55:20.220
So I think that's cool.

00:55:20.220 --> 00:55:20.840
Absolutely.

00:55:20.840 --> 00:55:21.160
Yeah.

00:55:21.160 --> 00:55:32.720
It's just crazy what a nice presence, a nice open presence as a developer can give you and how much value is in this kind of portfolio.

00:55:32.720 --> 00:55:34.160
It's just crazy.

00:55:34.160 --> 00:55:34.500
Yeah.

00:55:34.500 --> 00:55:37.340
I was talking a while ago with someone.

00:55:37.340 --> 00:55:38.400
I can't remember which episode.

00:55:38.400 --> 00:55:41.260
But if you start your own project, that's one thing.

00:55:41.260 --> 00:55:47.400
But if you contribute to other people's projects, a lot of these Python meetups, there's the sprints that are after.

00:55:47.400 --> 00:55:48.240
Right.

00:55:48.240 --> 00:55:56.580
So if you go and contribute to Instapy, maybe there's an Instapy sprint and you can work with some of the other developers there or you contribute to Flask.

00:55:56.580 --> 00:55:58.720
You can go work with the core developers of Flask.

00:55:58.720 --> 00:56:07.000
And that can really create connections that are quite valuable in the developer space that you wouldn't just get normally.

00:56:07.000 --> 00:56:07.300
Right.

00:56:07.300 --> 00:56:10.740
You can sit down with the core team and actually work on some product.

00:56:10.740 --> 00:56:13.920
And so next time you're interviewing, they're like, oh, I see.

00:56:13.920 --> 00:56:15.640
Well, you've talked about Flask.

00:56:15.640 --> 00:56:16.860
And so why would you do this?

00:56:16.860 --> 00:56:19.860
It's like, well, here, when we wrote it internally, this is what it did.

00:56:19.860 --> 00:56:20.720
And that's why you do it.

00:56:20.720 --> 00:56:22.260
It's like, OK, you're hired.

00:56:22.260 --> 00:56:23.060
You know what I mean?

00:56:23.060 --> 00:56:27.060
Like that's a really interesting and not super hard thing to do.

00:56:27.060 --> 00:56:27.220
Right.

00:56:27.220 --> 00:56:32.020
Like if you go to these sprints and sit down, like you can sit with a really experienced person and level up that way.

00:56:32.140 --> 00:56:37.920
This is also one thing I love about open source is that if you want to contribute, you have to dig into their code.

00:56:37.920 --> 00:56:39.760
You have to understand their architecture.

00:56:39.760 --> 00:56:47.340
You have to understand how they write their code, their style guides and their kind of relations between classes, for example.

00:56:47.340 --> 00:56:51.540
And this will just make you so much better developer.

00:56:51.540 --> 00:56:53.060
It's insane.

00:56:53.200 --> 00:56:53.880
It's really wonderful.

00:56:53.880 --> 00:56:58.840
You can definitely absorb a lot of that years of experience, especially if you're new.

00:56:58.840 --> 00:56:59.800
Awesome.

00:56:59.800 --> 00:57:00.220
All right.

00:57:00.220 --> 00:57:02.600
Well, Tim, I think we're just about out of time.

00:57:02.600 --> 00:57:04.660
We have to leave it there for Instapy.

00:57:04.660 --> 00:57:08.220
But it sounds like a fun project and also one people can get involved with.

00:57:08.900 --> 00:57:11.500
So before you go, though, I have two questions for you.

00:57:11.500 --> 00:57:12.500
The two questions.

00:57:12.500 --> 00:57:15.740
First of all, if you're working on Instapy, what editor do you open up?

00:57:15.740 --> 00:57:18.060
If I work on Instapy, it's definitely PyJarm.

00:57:18.060 --> 00:57:28.940
And if I get into some more data science-y stuff and create some metrics and just kind of get some insights into Instapy, then I will use Spyder.

00:57:28.940 --> 00:57:29.380
Okay.

00:57:29.380 --> 00:57:30.280
Yeah, those are really cool.

00:57:30.280 --> 00:57:37.200
People haven't mentioned Spyder very much, but it comes with the Anaconda distribution and it's kind of the data science equivalent of PyJarm, I guess.

00:57:37.200 --> 00:57:38.620
Maybe it's the way to think of it, right?

00:57:38.700 --> 00:57:42.040
That's probably why it's two editors, but they're kind of the same.

00:57:42.040 --> 00:57:44.080
They're kind of parallel, but different.

00:57:44.080 --> 00:57:44.540
That's cool.

00:57:44.540 --> 00:57:45.160
All right.

00:57:45.160 --> 00:57:47.120
And notable PyPI package.

00:57:47.120 --> 00:57:49.740
I'll go ahead and throw out pip install Instapy for you.

00:57:49.740 --> 00:57:51.360
What other one?

00:57:51.360 --> 00:57:53.360
Sadly, Instapy isn't on PyPI.

00:57:53.360 --> 00:57:54.520
Oh, is it not?

00:57:54.520 --> 00:57:55.720
No, it's not.

00:57:55.720 --> 00:58:05.060
By now it's not because we have some or we didn't investigate it in too much into it in terms of we have to use this Chrome driver right now.

00:58:05.220 --> 00:58:09.360
And this Chrome driver has to be added in later on because it's depending on the system.

00:58:09.800 --> 00:58:13.180
And so we have to, we're not yet ready to push it on PyPI.

00:58:13.180 --> 00:58:15.740
But it's one of the next things we will definitely do.

00:58:15.740 --> 00:58:18.340
And then, of course, it will be pip installed Instapy.

00:58:18.340 --> 00:58:25.400
I actually was thinking about that's got to be a pretty massive download to take the different platforms of Chrome with it and stuff like that.

00:58:25.460 --> 00:58:25.600
All right.

00:58:25.600 --> 00:58:26.520
So, yeah.

00:58:26.520 --> 00:58:27.180
Okay, cool.

00:58:27.180 --> 00:58:27.740
All right.

00:58:27.740 --> 00:58:29.900
So other notable PyPI package.

00:58:29.900 --> 00:58:30.920
Of course, Selenium.

00:58:30.920 --> 00:58:33.220
Because I just really, really like it.

00:58:33.220 --> 00:58:34.360
And it's so handy.

00:58:34.360 --> 00:58:43.340
And I'll go with requests because right now we are switching over or we try to switch over to requests for some of the data gathering.

00:58:43.340 --> 00:58:49.560
Because lately I've been kind of reverse engineering the Instagram GraphQL API.

00:58:49.560 --> 00:58:56.360
And they have some really neat endpoints there that you can leverage to get all the information without doing a lot of work.

00:58:56.360 --> 00:58:59.560
And so we are going for requests.

00:58:59.560 --> 00:59:01.360
We are using requests as well now.

00:59:01.360 --> 00:59:01.660
Okay.

00:59:01.660 --> 00:59:02.000
Yeah.

00:59:02.000 --> 00:59:02.840
Nice combination.

00:59:02.840 --> 00:59:04.800
And it's interesting that you have the two there.

00:59:04.800 --> 00:59:05.660
Cool.

00:59:05.660 --> 00:59:06.060
All right.

00:59:06.120 --> 00:59:07.200
So final call to action.

00:59:07.200 --> 00:59:09.280
People are interested in Instapy.

00:59:09.280 --> 00:59:09.880
What do they do?

00:59:09.880 --> 00:59:10.700
How do they get started?

00:59:10.700 --> 00:59:14.420
First of all, just go to GitHub and search for Instapy.

00:59:14.420 --> 00:59:15.480
You will definitely find it.

00:59:15.480 --> 00:59:19.360
It's the biggest Instagram bot on GitHub right now.

00:59:19.360 --> 00:59:23.520
There are several others, but none of them is as popular as Instapy.

00:59:23.520 --> 00:59:24.500
So just go there.

00:59:24.500 --> 00:59:25.660
Check it out.

00:59:25.660 --> 00:59:26.840
Fork it.

00:59:26.840 --> 00:59:27.840
Clone it.

00:59:27.840 --> 00:59:28.740
Try it out.

00:59:28.740 --> 00:59:33.160
And if you're interested, if you have some ideas, just post it as an issue.

00:59:33.540 --> 00:59:38.400
Or get into it yourself and just check out the issues.

00:59:38.400 --> 00:59:41.820
Check what problems people have and try to fix them.

00:59:41.820 --> 00:59:42.780
It's super easy.

00:59:42.780 --> 00:59:47.160
And you will be one of the core contributors of Instapy, which is also nice.

00:59:47.160 --> 00:59:48.180
Yeah, that's really awesome.

00:59:48.180 --> 00:59:49.420
All right.

00:59:49.420 --> 00:59:52.600
Well, thanks so much for being on the show and sharing your project with us.

00:59:52.600 --> 00:59:54.240
That was very interesting.

00:59:54.240 --> 00:59:54.520
Yeah.

00:59:54.520 --> 00:59:55.240
Thanks for being here.

00:59:55.240 --> 00:59:56.940
It was really amazing.

00:59:56.940 --> 00:59:57.760
Yeah, you bet.

00:59:57.760 --> 00:59:58.200
Thank you.

00:59:58.200 --> 00:59:58.500
Bye.

00:59:58.500 --> 01:00:02.740
This has been another episode of Talk Python To Me.

01:00:03.160 --> 01:00:05.120
Today's guest has been Tim Grossman.

01:00:05.120 --> 01:00:08.520
And this episode has been brought to you by Linode and GoCD.

01:00:08.520 --> 01:00:12.980
Linode is bulletproof hosting for whatever you're building with Python.

01:00:12.980 --> 01:00:17.340
Get your four months free at talkpython.fm/Linode.

01:00:17.340 --> 01:00:19.860
Just use the code Python17.

01:00:19.860 --> 01:00:24.940
GoCD is the on-premise, open-source, continuous delivery server.

01:00:24.940 --> 01:00:29.060
Want to improve your deployment workflow but keep your code and builds in-house?

01:00:29.500 --> 01:00:35.420
Check out GoCD at talkpython.fm/gocd and take control over your process.

01:00:35.420 --> 01:00:38.080
Are you or a colleague trying to learn Python?

01:00:38.080 --> 01:00:42.740
Have you tried books and videos that just left you bored by covering topics point by point?

01:00:42.740 --> 01:00:48.760
Well, check out my online course Python Jumpstart by building 10 apps at talkpython.fm/course

01:00:48.760 --> 01:00:51.320
to experience a more engaging way to learn Python.

01:00:51.320 --> 01:00:54.340
And if you're looking for something a little more advanced,

01:00:54.340 --> 01:00:58.700
try my Write Pythonic code course at talkpython.fm/pythonic.

01:00:58.700 --> 01:01:01.420
Be sure to subscribe to the show.

01:01:01.420 --> 01:01:03.620
Open your favorite podcatcher and search for Python.

01:01:03.620 --> 01:01:04.860
We should be right at the top.

01:01:04.860 --> 01:01:10.260
You can also find the iTunes feed at /itunes, Google Play feed at /play,

01:01:10.260 --> 01:01:14.180
and direct RSS feed at /rss on talkpython.fm.

01:01:14.180 --> 01:01:16.060
This is your host, Michael Kennedy.

01:01:16.060 --> 01:01:17.420
Thanks so much for listening.

01:01:17.420 --> 01:01:18.480
I really appreciate it.

01:01:18.480 --> 01:01:20.420
Now get out there and write some Python code.

01:01:20.420 --> 01:01:40.980
I'll see you next time.

