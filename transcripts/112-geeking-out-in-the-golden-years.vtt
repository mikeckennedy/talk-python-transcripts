WEBVTT

00:00:00.001 --> 00:00:05.140
I've always thought that if I retire, I'd more or less do what I've been doing the whole time for my job,

00:00:05.140 --> 00:00:07.300
except this time without meetings or reports.

00:00:07.300 --> 00:00:10.320
That is, write interesting and fulfilling software.

00:00:10.320 --> 00:00:13.940
In this episode of Talk Python To Me, we're back together with Philip Guao

00:00:13.940 --> 00:00:18.940
to discuss his research project aimed at improving the learning to code experience for older adults.

00:00:18.940 --> 00:00:21.340
That's those 60 to 85 years old.

00:00:21.340 --> 00:00:24.260
It's time to think about geeking out in your golden years.

00:00:24.260 --> 00:00:28.420
This is episode 112, recorded May 15, 2017.

00:00:28.420 --> 00:00:32.100
Developers, developers, developers, developers.

00:00:32.100 --> 00:00:35.260
I'm a developer in many senses of the word

00:00:35.260 --> 00:00:39.620
because I make these applications, but I also use these verbs to make this music.

00:00:39.620 --> 00:00:44.160
I construct it line by line, just like when I'm coding another software design.

00:00:44.160 --> 00:00:47.360
In both cases, it's about design patterns.

00:00:47.360 --> 00:00:50.360
Anyone can get the job done. It's the execution that matters.

00:00:50.360 --> 00:00:51.840
I have many interests.

00:00:51.840 --> 00:00:56.380
Welcome to Talk Python To Me, a weekly podcast on Python,

00:00:56.380 --> 00:00:59.460
the language, the libraries, the ecosystem, and the personalities.

00:00:59.460 --> 00:01:01.580
This is your host, Michael Kennedy.

00:01:01.580 --> 00:01:03.580
Follow me on Twitter, where I'm @mkennedy.

00:01:03.580 --> 00:01:07.460
Keep up with the show and listen to past episodes at talkpython.fm

00:01:07.460 --> 00:01:10.000
and follow the show on Twitter via at Talk Python.

00:01:10.000 --> 00:01:14.180
This episode is brought to you by Rollbar and Hired.

00:01:14.180 --> 00:01:16.220
Thank them both for supporting the show.

00:01:16.220 --> 00:01:23.540
Check them out at Rollbar and at Hired underscore HQ on Twitter and tell them thank you.

00:01:24.340 --> 00:01:26.720
Philip, welcome back to Talk Python.

00:01:26.720 --> 00:01:27.920
Hi, Michael. How are you?

00:01:27.920 --> 00:01:31.640
I'm doing great, and I'm really looking forward to our conversation today.

00:01:31.640 --> 00:01:36.220
Last time you were on Talk Python, we talked about the CPython internals

00:01:36.220 --> 00:01:40.540
and your CPython, your 10-hour CPython code walk, which was really fun, right?

00:01:40.540 --> 00:01:41.560
Yeah, yeah, that was awesome.

00:01:41.560 --> 00:01:45.380
Yeah, so that was actually my first ever podcast appearance.

00:01:45.380 --> 00:01:46.880
That was back in, I think, 2015.

00:01:47.540 --> 00:01:51.420
And you actually inspired me to do a podcast series of my own.

00:01:51.420 --> 00:01:57.800
So not exactly on Python, but just on general interesting conversations with interesting people,

00:01:57.800 --> 00:01:59.740
many of which are in science and technology.

00:01:59.740 --> 00:02:05.120
But I think appearing on Talk Python two years ago really inspired that podcast series.

00:02:05.120 --> 00:02:06.280
That is really cool.

00:02:06.280 --> 00:02:09.100
I'm really honored that I was able to inspire you to do that.

00:02:09.100 --> 00:02:10.860
Like, why don't you tell people what's the name of your podcast?

00:02:10.860 --> 00:02:11.560
How do they find it?

00:02:11.560 --> 00:02:14.900
So if they want to expand out a little bit, they can go check out yours.

00:02:14.900 --> 00:02:19.580
Yeah, so it's on originally called the PG podcast after my own initials, PG.

00:02:19.580 --> 00:02:21.020
It's just on my website.

00:02:21.020 --> 00:02:21.800
I'll link to it.

00:02:21.800 --> 00:02:24.060
Basically, my podcast is super low tech.

00:02:24.060 --> 00:02:26.040
I just record a YouTube live session.

00:02:26.040 --> 00:02:28.220
So basically, we just do a YouTube live.

00:02:28.220 --> 00:02:30.020
It just streams and goes on YouTube.

00:02:30.020 --> 00:02:34.120
I usually record for about 30 minutes because my conversations are usually less technical.

00:02:34.120 --> 00:02:36.980
They're more just kind of one idea with each person.

00:02:36.980 --> 00:02:40.620
So we do like a 30-minute slot, which is kind of like a work meeting slot.

00:02:40.740 --> 00:02:42.320
And then we just upload online.

00:02:42.320 --> 00:02:45.920
So oftentimes, the audio isn't amazing because we're just doing YouTube live.

00:02:45.920 --> 00:02:50.600
But I find that since I'm an amateur at this, I just want to get content out there.

00:02:50.600 --> 00:02:53.500
And I don't really care about the high fidelity too much.

00:02:53.500 --> 00:02:55.060
I just want to get interesting content out.

00:02:55.060 --> 00:02:58.480
And I found just going on YouTube live and streaming is just super convenient.

00:02:58.480 --> 00:02:59.640
Yeah, that's really great.

00:02:59.640 --> 00:03:00.800
Yeah, I've listened to some of your shows.

00:03:00.800 --> 00:03:01.520
They were inspiring.

00:03:01.520 --> 00:03:03.860
You had me on once, and that was an honor as well.

00:03:03.860 --> 00:03:10.000
I think what you said about, hey, like, don't let the perfect be the enemy of the good and hold you up.

00:03:10.000 --> 00:03:14.300
It's really important, not just in, like, if you want to do podcasting, but any kind of creative stuff you want to do.

00:03:14.300 --> 00:03:17.600
Like, a lot of these things, you only get better by doing it.

00:03:17.600 --> 00:03:20.720
And if you wait until you're perfect, you're never going to do it.

00:03:20.720 --> 00:03:23.300
So, like, get out there and do something, whatever it is you're inspired about, right?

00:03:23.300 --> 00:03:23.800
That's right.

00:03:23.800 --> 00:03:24.840
I think that's exactly...

00:03:24.840 --> 00:03:28.200
I mean, that's the attitude I've taken to blogging, to now podcasting.

00:03:28.200 --> 00:03:31.260
I've been making these vlogs, these kind of short video vlogs.

00:03:31.260 --> 00:03:32.660
And I think that's exactly right.

00:03:32.660 --> 00:03:35.040
So, as you mentioned, I had you on my podcast.

00:03:35.040 --> 00:03:43.000
It's very meta here that you were talking about the process of you starting up a podcast and kind of turning it into a career and such.

00:03:43.040 --> 00:03:46.760
And this is kind of a jujitsu-like move because you had me on first.

00:03:46.760 --> 00:03:49.420
And then I thought I could, you know, turn the tables and have you on.

00:03:49.420 --> 00:03:53.880
But then you ended up on top and having me on again for the second time.

00:03:53.880 --> 00:03:56.300
So, I think you have the high ground now.

00:03:56.520 --> 00:03:57.360
Or just for the moment.

00:03:57.360 --> 00:03:58.320
Just for the moment, right?

00:03:58.320 --> 00:03:59.820
It's always fluid.

00:03:59.820 --> 00:04:00.520
Very cool.

00:04:00.520 --> 00:04:02.640
So, I am very excited to have you back.

00:04:02.640 --> 00:04:08.580
Let's not totally rehash all of what you did to get into programming because we did have you on the show and cover that before.

00:04:08.580 --> 00:04:11.200
But maybe just, you know, that's like almost two years ago.

00:04:11.200 --> 00:04:15.940
Let's remind people just what you do today today because I think it's super relevant to where we're going with this conversation.

00:04:15.940 --> 00:04:17.060
You're at UCSD, right?

00:04:17.060 --> 00:04:17.320
Right.

00:04:17.320 --> 00:04:22.000
So, I'm actually an assistant professor in the cognitive science department at UC San Diego.

00:04:22.000 --> 00:04:30.240
So, I was actually, last time I was on your podcast, I was an assistant professor in a computer science department at the University of Rochester, the very opposite end of the country.

00:04:30.240 --> 00:04:36.500
So, I actually recently moved to San Diego because my family is from Southern California.

00:04:36.500 --> 00:04:39.900
And it's a lot nicer weather down here, especially in the winter.

00:04:39.900 --> 00:04:42.080
So, I've been enjoying it a lot so far.

00:04:42.080 --> 00:04:46.580
So, I basically do research at the intersection of what I call cognitive and computer science.

00:04:46.580 --> 00:04:49.900
And that intersection is a lot about online learning.

00:04:50.380 --> 00:04:57.160
And I'm especially interested in how people are learning to code and learning programming and building tools to support the learning of programming.

00:04:57.160 --> 00:04:58.880
I think that's what brings us here today.

00:04:58.880 --> 00:04:59.840
Yeah, it definitely is.

00:04:59.840 --> 00:05:00.940
That sounds super cool.

00:05:00.940 --> 00:05:03.460
I studied math a long time.

00:05:03.460 --> 00:05:15.000
But my first computer job, my first professional job, I would say, was working at a company that was really a spinoff from a university in Southern California as well with a bunch of cognitive science PhDs.

00:05:15.000 --> 00:05:20.120
It's really interesting how cognitive science has this computational aspect, although it's not really thought of.

00:05:20.120 --> 00:05:22.120
It's like hardly even a STEM thing.

00:05:22.120 --> 00:05:23.020
I mean, STEM, I guess.

00:05:23.020 --> 00:05:25.160
But it's like on the border of STEM, I would say, even.

00:05:25.160 --> 00:05:34.620
Yeah, I would say, actually, it's kind of a great kind of interdisciplinary hybrid of the social and the computational sciences.

00:05:34.620 --> 00:05:47.100
Because what a lot of people are interested in is this intersection, like I was saying, between cognitive and computer science of studying how people are doing the act of programming or studying or developing tools to help people be more productive.

00:05:47.100 --> 00:05:53.620
And I think the unifying factor behind a lot of this research, even though it's computational in nature, is that it always involves the human in the loop.

00:05:53.620 --> 00:05:55.580
Like our brains are always the limiting factor.

00:05:55.580 --> 00:06:01.260
Because, you know, Moore's Law is making computers much faster, but our brains are not getting any faster for millions of years.

00:06:01.260 --> 00:06:02.460
Exactly.

00:06:02.460 --> 00:06:06.660
We're relatively the same creatures that we were 50 years ago, more or less, right?

00:06:06.660 --> 00:06:09.840
It's kind of amazing that we can keep up, though, right, in some ways.

00:06:10.060 --> 00:06:11.280
Yeah, I think that is amazing.

00:06:11.280 --> 00:06:18.340
I mean, it's kind of a testament to, you know, the testament to the foresight of evolution or something like that, that we're still able to keep up.

00:06:18.340 --> 00:06:20.860
But then the thing is, we do use a lot of external memory aids, right?

00:06:20.860 --> 00:06:29.800
I mean, imagine going through our modern workflows in any intensive job, if we're not allowed to write anything down or not allowed to use a computer, then we really can't actually do that much.

00:06:29.800 --> 00:06:30.680
Yeah, that's right.

00:06:30.680 --> 00:06:30.980
That's right.

00:06:30.980 --> 00:06:33.060
We just found better tools and keep building better tools.

00:06:33.060 --> 00:06:33.380
Awesome.

00:06:34.000 --> 00:06:45.860
So one of the things that, you know, I think is really powerful for people in today's society is learning not to just use computers, but to control them, right?

00:06:45.860 --> 00:06:57.940
To learn to become programmers, not necessarily for the sake of, I want to go get an official senior software engineer title, but I want to somehow amplify what I'm doing with software, right?

00:06:57.940 --> 00:06:58.320
Right.

00:06:58.500 --> 00:07:11.860
So I think a lot of the big kind of movements lately about learning to code, I mean, some of it, like you said, is practical is for jobs because, you know, software jobs are plentiful and there's, you know, software related jobs in pretty much every field you can think of now.

00:07:11.860 --> 00:07:15.800
There's so John Deere, which is a big company that makes tractors and farm equipment.

00:07:15.800 --> 00:07:26.480
They've recently been giving a lot of talks about big data, and it's because they've turned into a big data company because they have all these things on their tractors and devices and stuff, and they're managing logistics.

00:07:26.480 --> 00:07:34.060
And all these companies that you think of as traditionally very hardware mechanical companies, their competitive advantage now is becoming software.

00:07:34.060 --> 00:07:35.460
So jobs is one area.

00:07:35.460 --> 00:07:48.300
But even beyond that, like you mentioned, there are many people who are interested in learning for, say, personal enrichment or for just kind of with this broad umbrella of computational literacy of just, you know, knowing what technology is all about.

00:07:48.300 --> 00:07:49.000
Yeah, absolutely.

00:07:49.220 --> 00:07:54.280
And I think that's the primary focus where we're going, but a significant part of it.

00:07:54.280 --> 00:07:58.360
So let's get to your research project and the paper that is sort of the culmination of that.

00:07:58.360 --> 00:08:04.040
So you guys over there at UCSD, you and you had some grad students helping you out.

00:08:04.040 --> 00:08:04.460
Is that right?

00:08:04.460 --> 00:08:05.800
Yeah, well, actually, it's funny enough.

00:08:05.800 --> 00:08:07.420
This paper was actually just done by myself.

00:08:07.420 --> 00:08:11.780
It was kind of a summer side project that I collected with a bunch of data.

00:08:12.280 --> 00:08:14.060
But my other projects all involve students.

00:08:14.060 --> 00:08:16.840
This is sort of an outlier, the single author paper.

00:08:16.840 --> 00:08:18.060
Yeah, it's nice.

00:08:18.060 --> 00:08:20.300
So there were two titles that I ran across.

00:08:20.300 --> 00:08:25.840
One was like the press release from UCSD, which was great, which is like geeking out in the golden years.

00:08:25.840 --> 00:08:32.600
The official title was something to the effect of older adults learning computer programming, motivations, frustrations, and design opportunities.

00:08:32.600 --> 00:08:32.960
Right.

00:08:33.520 --> 00:08:37.960
So what's the general idea of this project that you undertook this summer?

00:08:37.960 --> 00:08:47.840
Yeah, so the general idea is that there's, like we mentioned earlier, there's a lot of initiatives for learning to code and for teaching coding and new tools and games and everything for learning programming.

00:08:47.840 --> 00:08:55.860
But if you actually look at the target audience, a lot of those are targeting young kids or primary or secondary school kids or at most like college students.

00:08:55.860 --> 00:09:02.420
So basically anyone under, you know, 20 years old, there's a ton of stuff and excitement about teaching the next generation to code.

00:09:02.640 --> 00:09:10.620
So I thought, what about looking at the opposite in the age spectrum of people, say, age 60 and over, of which there are actually a lot of people 60 and over.

00:09:10.620 --> 00:09:20.920
So there's some UN, United Nations estimates say that by 2030, about a quarter of the population of North America and Europe will be over 60 and about one sixth of the world population.

00:09:20.920 --> 00:09:23.520
So that's an enormous number of people over 60.

00:09:23.520 --> 00:09:31.600
And yet all this talk about technology and about programming literacy and computational literacy are focused on the youngest members of society, which is, of course, really important.

00:09:31.760 --> 00:09:34.900
But the older members of society have been really understudied.

00:09:34.900 --> 00:09:37.800
I think it's actually a large and really significant population.

00:09:37.800 --> 00:09:51.460
So I set out to basically do an online survey to kind of get at the motivations and the frustrations that perhaps people who are 60 and over are facing when they're learning programming, simply because no one has really explored it before.

00:09:51.460 --> 00:10:01.380
So this is kind of a greenfield research area because one of the nice things about research is that you try to take something that's a common assumption and flip it on its head and try to study the opposite.

00:10:01.380 --> 00:10:04.240
And oftentimes you come up with interesting and surprising results.

00:10:04.240 --> 00:10:05.900
So that was my summer project last summer.

00:10:05.900 --> 00:10:06.540
That's cool.

00:10:06.540 --> 00:10:06.760
Yeah.

00:10:06.760 --> 00:10:08.080
And I really enjoyed reading the paper.

00:10:08.080 --> 00:10:09.140
I think it's pretty accessible.

00:10:09.140 --> 00:10:11.460
It's not like super dense academic stuff.

00:10:11.460 --> 00:10:14.640
So, of course, we'll link to it and everyone can read through it.

00:10:14.980 --> 00:10:20.860
If you skim it, even it has cool tables and graphs, which I think the stuff that was captured there is really cool.

00:10:20.860 --> 00:10:30.480
So one of the things I think was interesting is maybe let's start talking about by the group that you studied.

00:10:30.480 --> 00:10:30.760
Right.

00:10:30.800 --> 00:10:36.900
So when we say older adults, like you could include me in that, maybe like I'm in my 40s.

00:10:36.900 --> 00:10:37.620
Am I an older adult?

00:10:37.620 --> 00:10:39.420
Like what do you mean by older adults?

00:10:39.420 --> 00:10:40.340
Yeah, that's a great question.

00:10:40.340 --> 00:10:43.560
I mean, as with anything, we need to define what older adults mean.

00:10:43.560 --> 00:10:48.240
So one commonly accepted value is about 60 and older.

00:10:48.240 --> 00:10:57.960
And that's an interesting threshold to talk about in paper, because a lot of, you know, the UN kind of they have this designation of older persons as 60 or older.

00:10:58.360 --> 00:11:01.360
Also, retirement ages are around 60 or 65.

00:11:01.360 --> 00:11:04.120
You know, some countries are creeping up higher for retirement ages.

00:11:04.120 --> 00:11:10.040
But we've and also, you know, Social Security benefits for a 1K IRA kind of cutoff ages are around 60.

00:11:10.040 --> 00:11:20.820
So I found that 60 was an interesting threshold because that actually captures both people who are still working or people who are phasing out into retirement or people who are actually retired already.

00:11:20.820 --> 00:11:23.960
So I so I thought 60 was actually a pretty good range.

00:11:23.960 --> 00:11:28.200
So you can actually get a fairly wide range of folks at 60.

00:11:28.200 --> 00:11:28.720
Sure.

00:11:28.720 --> 00:11:31.180
I think that's a good group as well.

00:11:31.180 --> 00:11:34.300
To 60 to 85, it sounded like was more or less.

00:11:34.300 --> 00:11:38.100
And it was sort of tilted towards the younger side of that group.

00:11:38.800 --> 00:11:42.760
But there was a balance of people of some of whom were sort of still working.

00:11:42.760 --> 00:11:46.280
Many of them, I mean, some of them were very high up in their company.

00:11:46.280 --> 00:11:46.700
Right.

00:11:46.700 --> 00:11:51.660
They were like lead scientists or they were CEOs or something and others were retired.

00:11:51.660 --> 00:11:55.680
And so what I guess let's start with, like, why were they doing this?

00:11:55.680 --> 00:11:55.900
Right.

00:11:55.940 --> 00:12:01.680
So I understand if you're 20 and, you know, you want to start a career while you want to do that.

00:12:01.680 --> 00:12:06.220
Or if you're 40 and you're like, I'm so tired of this, you know, law degree that I got.

00:12:06.220 --> 00:12:08.660
I want to go do something creative with software.

00:12:08.660 --> 00:12:09.500
Who knows?

00:12:09.500 --> 00:12:09.680
Right.

00:12:09.680 --> 00:12:12.420
But what about like you're kind of at your end of your career?

00:12:12.420 --> 00:12:13.360
What were their motivations?

00:12:13.680 --> 00:12:15.100
Yeah, that's a great that's a great question.

00:12:15.100 --> 00:12:18.620
So that was the motivations was the first major part of the study.

00:12:18.620 --> 00:12:22.500
And it was just, you know, a few survey questions based on, you know, why are you learning?

00:12:22.500 --> 00:12:24.120
What resources are you using to learn?

00:12:24.120 --> 00:12:27.800
I found several major sets of motivations that I talked about in the paper.

00:12:27.800 --> 00:12:32.420
I'll go over three most salient ones because these are the ones that have to do with age.

00:12:32.420 --> 00:12:37.180
So there were actually, like you mentioned, many people did talk about job related motivations

00:12:37.180 --> 00:12:41.560
because even though they were later in their career, these are probably the people who were the most kind of

00:12:41.560 --> 00:12:44.300
autodidactic most with the most self initiative.

00:12:44.300 --> 00:12:48.000
They want to still learn new technologies and learn later in their careers.

00:12:48.000 --> 00:12:49.260
But that's less age related.

00:12:49.260 --> 00:12:49.560
Right.

00:12:49.560 --> 00:12:55.600
So I think the age related ones I wrote down here, I'm looking at the summary is so 22 percent of the respondents.

00:12:55.600 --> 00:12:57.080
This is the highest numbers.

00:12:57.080 --> 00:13:01.720
22 percent wanted to learn now to make up for missed opportunities during their youth.

00:13:01.720 --> 00:13:07.040
So what that usually means is, you know, people said I always was interested in computers or technology,

00:13:07.040 --> 00:13:12.980
but I never had the chance to do it because my career was as a doctor or as a technician or something.

00:13:12.980 --> 00:13:17.980
But now that I'm approaching retirement, I actually want to learn this programming thing because it's so accessible online to learn.

00:13:17.980 --> 00:13:19.760
And I grew up with a technical background.

00:13:19.760 --> 00:13:21.000
I never actually learned it.

00:13:21.000 --> 00:13:23.520
So then 19, I'll go over the three.

00:13:23.520 --> 00:13:28.360
So 19 percent wanted to learn to keep their brains challenged, fresh and sharp as they age.

00:13:28.360 --> 00:13:31.700
So they these, again, are very much autodidactic self starters.

00:13:31.700 --> 00:13:34.340
They didn't want to just retire and watch TV passively.

00:13:34.420 --> 00:13:41.240
They wanted a challenging activity that they could do in their own homes so that, you know, they found that learning coding online was cool.

00:13:41.240 --> 00:13:47.020
And also, lastly, five percent were directly motivated by younger relatives, such as their children or grandchildren.

00:13:47.020 --> 00:13:50.480
So some people said, oh, my grandkids are now learning to code in school.

00:13:50.480 --> 00:13:52.540
I want to play with this, too, because I'm curious.

00:13:52.540 --> 00:13:54.660
So they were directly motivated by relatives.

00:13:54.660 --> 00:13:57.720
Yeah, I think all three of those are super interesting.

00:13:58.080 --> 00:14:05.880
For the first one, there was a quote that you had in your article that was something like there was this guy who's a retired chief information officer, CIO.

00:14:05.880 --> 00:14:07.920
So very much in the technical space.

00:14:07.920 --> 00:14:14.560
But he said, one of the reasons I wanted to learn to program now is I always wanted to do this.

00:14:14.560 --> 00:14:16.040
And I kind of did a little bit in school.

00:14:16.040 --> 00:14:18.280
But then I got kicked upstairs into management.

00:14:18.280 --> 00:14:23.460
I was I sort of advanced my career out of what I actually wanted to do.

00:14:23.460 --> 00:14:27.660
So they're kind of coming back and saying, look, this is something I always wanted to do.

00:14:27.660 --> 00:14:33.380
Now that I have time, I can choose this kind of as my retirement interest or something like that.

00:14:33.380 --> 00:14:33.560
Right.

00:14:33.640 --> 00:14:34.740
Yeah, that was a great quote.

00:14:34.740 --> 00:14:42.080
I mean, we had quite a few of the respondents actually wrote, you know, good paragraphs about their motivations.

00:14:42.080 --> 00:14:44.580
And it wasn't because these are usually free text responses.

00:14:44.580 --> 00:14:45.920
We let them write whatever they want.

00:14:45.920 --> 00:14:47.440
So some people really elaborate.

00:14:47.440 --> 00:14:53.100
So that person, he was a 67 year old retired CIO, chief information officer.

00:14:53.100 --> 00:15:00.300
And he said, you know, this he uses kicked upstairs metaphor of, you know, I got into, you know, he managed me to get into management pretty early.

00:15:00.300 --> 00:15:04.660
And, you know, he was always wanting to do the technical work, but his career obviously wasn't in it.

00:15:04.660 --> 00:15:10.280
And now that he has, you know, he also said, you know, in the quote, it said, I always wanted to be able to create programs.

00:15:10.280 --> 00:15:12.520
But between work and family never took the time.

00:15:12.520 --> 00:15:15.620
And now that I'm retired, I'm trying to fulfill the dream and learn.

00:15:15.620 --> 00:15:16.520
Oh, that sounds cool.

00:15:16.600 --> 00:15:27.920
I mean, I certainly, you know, I think that somewhat ties into the second level of the motivation is just wanting to do something interesting when you retire.

00:15:27.920 --> 00:15:28.160
Right.

00:15:28.160 --> 00:15:30.880
Like I see people doing crossword puzzles.

00:15:30.880 --> 00:15:34.360
I see them doing Sudoku or other things like that.

00:15:34.360 --> 00:15:42.180
And it's like, that's kind of interesting, but it's just nowhere near like the puzzle that is solving a problem with computers.

00:15:42.180 --> 00:15:42.520
Right.

00:15:42.520 --> 00:15:45.760
Like that's a really interesting ongoing puzzle.

00:15:45.940 --> 00:15:46.400
All right.

00:15:46.400 --> 00:15:58.260
To me, like building a program, a website or something like that, it's kind of like, I guess if I were to think of it in those types of terms, it'd be like the thousand piece puzzle or something, you know, where you really like get into it and you do it for a long time.

00:15:58.260 --> 00:16:02.400
It's not just like, you know, you spend five minutes on a Sudoku puzzle, something like that.

00:16:02.400 --> 00:16:02.640
Yeah.

00:16:02.640 --> 00:16:03.640
I think that's really interesting.

00:16:03.640 --> 00:16:15.780
And that, you know, both the fact that this is far more difficult and engaging, but also like you're saying, because it's far more difficult and harder to get started with, it's a lot harder than to just pick up a crossword puzzle or play bingo.

00:16:15.780 --> 00:16:24.680
Or something, which is kind of more routine, but it gives you that really short term dopamine release or, you know, are playing some, some small game on your, on your phone.

00:16:24.680 --> 00:16:38.140
So I guess the challenge there design wise is how could we make programming kind of engaging and creative still, but also accessible and fun so that it's not like, okay, you got to debug the C++ thing on visual studio before you get anything done.

00:16:38.820 --> 00:16:39.440
That's right.

00:16:39.440 --> 00:16:39.520
That's right.

00:16:39.520 --> 00:16:39.520
That's right.

00:16:39.520 --> 00:16:39.540
That's right.

00:16:39.540 --> 00:16:44.740
You have an incompatible header included or something in your C program won't compile.

00:16:44.740 --> 00:16:46.560
Like that's no longer fun, is it?

00:16:46.560 --> 00:16:47.500
All right.

00:16:47.500 --> 00:17:04.160
So I guess one of the things that we could talk about that's pretty interesting that you guys covered in there is what do people in this age group used to learn and how is that similar or different from say like the 25 year old person who wants to take a boot camp or something?

00:17:04.160 --> 00:17:04.440
Yeah.

00:17:04.440 --> 00:17:08.480
So another question I had on the survey was what resources were they using?

00:17:08.480 --> 00:17:11.500
And, and just to back up a little bit to give some context.

00:17:11.500 --> 00:17:18.900
So, you know, I designed the survey to put online, but then they, the one obvious question is where are we going to find older people learning programming, right?

00:17:18.900 --> 00:17:26.840
They're not in your local college campuses or boot camps or, you know, they're not just around hanging out and, you know, with their hoodies on in the coffee shop.

00:17:26.980 --> 00:17:29.160
Right. So, so where do we find all these people?

00:17:29.160 --> 00:17:38.500
So that brings me back to kind of a broader story about, so I've been maintaining this learn to code website called Python Tutor at PythonTutor.com for many years now.

00:17:38.500 --> 00:17:43.020
And it's had millions of users from pretty much every country under the sun.

00:17:43.080 --> 00:17:49.320
And I did a demographic survey a few years ago on the site, just a quick, you know, user survey.

00:17:49.320 --> 00:17:53.800
And it turned out that around one sixth of the users are about 55 and over.

00:17:53.800 --> 00:17:58.600
I didn't measure it super precisely, but, you know, even though it was only a six of people, it's still like a lot of people.

00:17:58.600 --> 00:18:02.420
Because if you have millions of people, one sixth is still, you know, tens of thousands, hundreds of thousands of people.

00:18:02.600 --> 00:18:08.500
So then I thought, hmm, this could be a pretty cool population to deploy a survey to because I own the site.

00:18:08.500 --> 00:18:17.800
Right. So all I what I did is that I made a short survey and I just put it on the website when people were learning to code, just put it as an optional link saying, hey, we're doing a research study.

00:18:17.800 --> 00:18:19.340
If you're interested, click this link.

00:18:19.340 --> 00:18:20.740
And it was completely optional.

00:18:21.200 --> 00:18:26.860
So because of that, though, the people going on the site are necessarily going to be ones learning online.

00:18:26.860 --> 00:18:29.180
Right. These are people taking massive open online courses.

00:18:29.180 --> 00:18:36.420
These MOOCs, these are people searching on Stack Overflow, teaching themselves, going on tutorial videos on YouTube, finding sites online.

00:18:36.420 --> 00:18:39.220
So the population is skewed toward online learners.

00:18:39.220 --> 00:18:41.780
But I think that there are a lot of people of all ages learning online.

00:18:41.780 --> 00:18:49.360
So the MOOCs are the biggest source, which is unsurprising because a lot of people who use my Python tutor sites come from MOOCs, from online courses.

00:18:49.680 --> 00:18:53.100
I see. There's some like online Python courses and others that are.

00:18:53.100 --> 00:18:54.680
Here's how you do your exercises.

00:18:54.680 --> 00:18:56.260
You drop in at PythonTutor.com.

00:18:56.260 --> 00:18:57.960
Yeah, you can link to the site.

00:18:57.960 --> 00:19:03.200
Yeah. I mean, a lot of it or they talk about on the forums or because it's a popular it's pretty popular site.

00:19:03.200 --> 00:19:06.040
People Google for, you know, Python debugger, Python tutorial.

00:19:06.040 --> 00:19:06.500
Yeah.

00:19:06.500 --> 00:19:07.660
And my site often comes up.

00:19:07.660 --> 00:19:14.780
So so a lot of people who are learning online in all sorts of ways from blogs, from watching YouTube, from Stack Overflow, they just get linked to my site.

00:19:14.780 --> 00:19:16.520
So there's a lot of online learners.

00:19:16.740 --> 00:19:27.180
And I think, you know, getting back to your question of how does this population differ, perhaps, from, say, 25 year olds or 20 year olds is I think the biggest thing is that they really lack a place to learn in person.

00:19:27.180 --> 00:19:28.840
Right. Like, you know, yeah.

00:19:28.840 --> 00:19:32.100
In theory, they could go to a coding boot camp or a hackathon or meetup.

00:19:32.100 --> 00:19:38.740
But, you know, you don't often see people over 60 at hackathons or boot camps because it's socially kind of a quote unquote young thing.

00:19:38.740 --> 00:19:42.400
Right. Just culturally, it's a thing for younger people who are to kind of gather.

00:19:42.400 --> 00:19:44.500
But then, you know, we might want to change that.

00:19:44.500 --> 00:19:47.980
Right. What about having coding groups in senior homes?

00:19:47.980 --> 00:19:50.960
What about coding groups in, you know, community centers and stuff?

00:19:50.960 --> 00:19:53.880
I think I think that's potentially the future, which is pretty cool.

00:19:54.100 --> 00:19:55.220
Yeah, that is pretty exciting.

00:19:55.220 --> 00:20:02.360
So certainly the MOOCs, people, communities around YouTube, you said that very few of them actually learned in person, right?

00:20:02.360 --> 00:20:07.060
Like five percent mentioned in class or in person learning in some form.

00:20:07.220 --> 00:20:09.160
Yeah. I mean, very few people learn in person.

00:20:09.160 --> 00:20:16.100
Yeah. I mean, and I think part of this is due to the bias of the sample because we're doing the survey on an online site that people are using to learn online.

00:20:16.100 --> 00:20:27.400
But I think another part of it, I mean, I think there is some truth in it that usually if you're over 60, you probably have fewer opportunities to be in a classroom than someone who is obviously K-12 in college or always in a classroom.

00:20:27.400 --> 00:20:36.500
But even when you're, you know, in your 20s or 30s, you might take boot camps, you might do continuing education classes, you might do Python training with Michael Kennedy, right?

00:20:36.500 --> 00:20:39.980
You're more likely to do these sort of professional training events at work.

00:20:39.980 --> 00:20:47.300
But when you're, say, 65 and retired, it's maybe hard for you to think about where to go to do an in-person training.

00:20:47.300 --> 00:20:50.020
And I think, you know, hopefully this will change in the future.

00:20:50.020 --> 00:20:54.120
Hopefully in the coming decades, there will be more in-person seminars and classes for this audience.

00:20:54.920 --> 00:20:55.580
Hey, everyone.

00:20:55.580 --> 00:20:56.100
Michael here.

00:20:56.100 --> 00:20:59.440
Let me take just a moment and thank one of our sponsors who makes this show possible.

00:20:59.440 --> 00:21:02.580
This portion of Talk Python To Me has been brought to you by Rollbar.

00:21:02.580 --> 00:21:06.080
One of the frustrating things about being a developer is dealing with errors.

00:21:06.080 --> 00:21:13.700
Relying on users to report errors, digging through log files, trying to debug them, or a million alerts just flooding your inbox and ruining your day.

00:21:13.700 --> 00:21:20.700
With Rollbar's full-stack error monitoring, you get the context, insight, and control you need to find and fix bugs faster.

00:21:21.020 --> 00:21:25.540
Adding the Rollbar Python SDK is just as easy as pip install Rollbar.

00:21:25.540 --> 00:21:29.260
You can start tracking production errors and deployments in eight minutes or less.

00:21:29.260 --> 00:21:38.760
Rollbar works with all the major languages and frameworks, including the Python ones like Django, Flask, Pyramid, as well as Ruby, .NET, Node, iOS, and Android.

00:21:39.120 --> 00:21:47.380
You can integrate Rollbar into your existing workflow, send error alerts to Slack or HipChat, or automatically create new JIRA issues, pivotal tracker issues, and a lot more.

00:21:47.380 --> 00:21:49.880
They have a special offer for Talk Python To Me listeners.

00:21:49.880 --> 00:21:52.460
Visit talkpython.fm/Rollbar.

00:21:52.460 --> 00:21:55.420
Sign up and get the bootstrap plan free for 90 days.

00:21:55.420 --> 00:21:57.820
That's 100,000 errors tracked for free.

00:21:57.820 --> 00:22:01.680
But, you know, just between you and me, I hope you don't encounter that many errors.

00:22:02.360 --> 00:22:03.580
Give Rollbar a try today.

00:22:03.580 --> 00:22:06.360
Just go to talkpython.fm/Rollbar.

00:22:06.360 --> 00:22:11.440
And if you happen to be going to PyCon this year, be sure to stop by Rollbar's booth.

00:22:11.440 --> 00:22:13.920
Get a live demo and pick up some of their swag.

00:22:15.120 --> 00:22:26.240
When I think of the different places, you're right that, like, university stuff, I really don't remember seeing people a lot older than me, even when I was a college student age, you know?

00:22:26.240 --> 00:22:37.120
But meetups, like the meetups that you would find on meetup.com, like the local Python or, you know, big data meetups or whatever, I think those do better.

00:22:37.820 --> 00:22:48.840
I think of all the places I've seen, I feel like the code camps, like the free code camps that are sort of like conferences seem to do actually pretty well with having a wide diversity of ages and ranges and stuff there.

00:22:48.840 --> 00:22:50.300
Yeah, I think that's actually really interesting.

00:22:50.300 --> 00:22:53.860
I mean, the open source community has been fairly good, right?

00:22:53.860 --> 00:23:00.460
I mean, kind of the stereotypical gray beard hackers are, you know, they're in the older generation.

00:23:00.780 --> 00:23:09.420
That's an interesting population because, you know, I feel like they're probably doing well in terms of having older developers who have been working on this for a long time.

00:23:09.420 --> 00:23:15.900
But I think it's still maybe hard to reach older people who have not been software developers and who are trying to get into it for the first time.

00:23:15.900 --> 00:23:21.240
Do you think that there's a lot of hesitation to go to these groups?

00:23:21.240 --> 00:23:26.320
Like, oh, I saw there's a meetup and it's probably just a bunch of young kids, so I'm not going to go.

00:23:26.320 --> 00:23:29.340
Whereas in reality, I don't really think that that's how they are.

00:23:29.420 --> 00:23:32.240
I think they're pretty open and welcome, at least the Python meetups.

00:23:32.240 --> 00:23:33.500
Yeah, I mean, I think that's it.

00:23:33.500 --> 00:23:55.340
I mean, I didn't ask about this in detail, but just from anecdotes from people's responses, I think there probably is kind of hesitation because, I mean, one of the things I talked about when I was talking about this work is if you go do a Google image search for, you know, programmer or learning to code, the images that come up are all like kids and young people with hoodies and, you know, beer pong at startups and everything.

00:23:55.340 --> 00:23:59.880
So the popular image conception of coding and learning to code is very young.

00:23:59.880 --> 00:24:04.500
So perhaps that kind of dissuades older adults from doing so in person.

00:24:04.500 --> 00:24:11.380
But I think you're right that once they actually go and see, especially in more welcoming communities like the Python one, they'll see, oh, they're people of all ages here.

00:24:11.380 --> 00:24:14.320
This is actually not an intimidating environment.

00:24:14.680 --> 00:24:23.200
But I think just kind of the popular media conceptions from, you know, the Silicon Valley TV shows and social network movies may be, you know, put off that way.

00:24:23.200 --> 00:24:23.740
Yeah.

00:24:23.800 --> 00:24:29.340
I'm not sure that popular media really portrays us developers all that correctly or accurately.

00:24:29.340 --> 00:24:29.620
Right.

00:24:29.620 --> 00:24:30.800
To everyone.

00:24:30.800 --> 00:24:32.880
It just may have different influences on different people.

00:24:32.880 --> 00:24:36.940
You talked about some of the reasons that people were learning.

00:24:36.940 --> 00:24:40.780
And you said there's actually some extra challenges.

00:24:40.780 --> 00:24:50.160
Like when we get to some of the stuff we could that you think you could do, I think some of those solutions might address what you already just now spoke about, like some of the isolation aspects.

00:24:50.160 --> 00:24:57.300
But there's also just like forgetfulness and other types of issues that come with age that can make this harder as well.

00:24:57.300 --> 00:24:57.580
Right.

00:24:57.580 --> 00:24:58.060
Yeah.

00:24:58.060 --> 00:25:01.740
So another part of the study was asking about frustrations.

00:25:01.740 --> 00:25:01.980
Right.

00:25:02.020 --> 00:25:06.140
So the title of the study was Motivations, Frustrations, and Design Opportunities.

00:25:06.140 --> 00:25:08.180
And I guess we'll talk about design opportunities at the end.

00:25:08.180 --> 00:25:12.900
So frustrations was really, you know, what challenges were they facing while they were learning?

00:25:12.900 --> 00:25:14.200
You know, what things frustrated them?

00:25:14.200 --> 00:25:20.240
And unsurprisingly, a lot of the frustrations were things that I'm sure you've seen with students of all ages, right?

00:25:20.240 --> 00:25:25.940
Oh, syntax error, setting up my environment, just kind of understanding the semantics of how programming languages work.

00:25:25.940 --> 00:25:26.800
So these are universal.

00:25:26.800 --> 00:25:29.760
I mean, we know that these things are hard about programming in general.

00:25:29.760 --> 00:25:30.640
You know what I find?

00:25:30.720 --> 00:25:38.520
I interact with people and I'm not sure if this is an age thing or not, but certainly people say, oh, Michael, you solve this problem.

00:25:38.520 --> 00:25:39.660
You're really good at computers.

00:25:39.660 --> 00:25:41.580
And I had I used no skill.

00:25:41.580 --> 00:25:49.660
All I did was just randomly try variations with the piece of software they're trying to get to work until the thing just, you know, gave in and worked.

00:25:49.660 --> 00:25:49.900
Right.

00:25:49.900 --> 00:25:52.380
It's not like I use some great skill or something.

00:25:52.380 --> 00:26:00.660
I just I was just persistently pushing through and I was just willing to play with, you know, whatever that people brought to me with their computers.

00:26:00.660 --> 00:26:01.500
Like, can you fix this?

00:26:01.500 --> 00:26:07.440
I'm like, I don't really know about that, but I'll try, you know, and I wonder if that's something about growing up with computers.

00:26:07.760 --> 00:26:10.020
Like we didn't have a lot of good sources to learn.

00:26:10.020 --> 00:26:12.660
So you had to just like try variations until it works.

00:26:12.660 --> 00:26:18.660
And maybe maybe that's something that comes to you easier when you grow up with it and you're not learning when you're 60.

00:26:18.660 --> 00:26:19.140
I don't know.

00:26:19.240 --> 00:26:24.020
Yeah, I think that's a great I mean, that's a good lead into some of the perceived age related frustrations.

00:26:24.020 --> 00:26:24.260
Right.

00:26:24.260 --> 00:26:30.680
So the stuff I just mentioned with syntax errors, runtime errors, setting of environment, that's kind of general technical problems of programming.

00:26:30.680 --> 00:26:36.860
It's kind of like if you're learning math, you have to learn all these mechanics that that is just there are just sets of rules that you have to learn.

00:26:37.340 --> 00:26:42.380
But I think that the self-efficacy and the self-confidence with tinkering was what you just mentioned.

00:26:42.380 --> 00:26:50.120
I think that is something that for the older population that didn't grow up with computers and didn't grow up tinkering, they might have more issues with because they think, oh, I'm not a computer person.

00:26:50.120 --> 00:26:52.140
You know, I grew up as a as a librarian.

00:26:52.140 --> 00:26:53.860
I grew up as a business person.

00:26:53.860 --> 00:26:55.540
I don't deal with tinkering stuff.

00:26:55.540 --> 00:26:57.880
So maybe they're not as willing to tinker as much.

00:26:57.880 --> 00:27:00.960
And that's what hampers them from from debugging more.

00:27:00.960 --> 00:27:03.920
So I think the self-efficacy is a big factor.

00:27:03.920 --> 00:27:05.500
I think I wrote that down in the paper.

00:27:05.500 --> 00:27:14.760
But on a related note, I think the highest number percentage of 14 percent of respondents were frustrated by their own perceived kind of cognitive impairments.

00:27:14.760 --> 00:27:24.580
So they kind of mentioned things like memory loss and difficulty concentrating and just kind of not being as quick and as, you know, as easy to get things as they used to.

00:27:24.580 --> 00:27:28.500
And again, this is not I didn't do a rigorous, you know, I didn't do brain scans or anything.

00:27:28.500 --> 00:27:29.300
This is just a survey.

00:27:29.300 --> 00:27:30.520
This is all self-reported.

00:27:30.520 --> 00:27:36.820
So who knows how much of that is actually really cognitive impairments and how much of it is just kind of self-perception and self-efficacy.

00:27:36.820 --> 00:27:41.060
Like, oh, you know, I'm older now and I don't really want to try to do X or Y as hard.

00:27:41.060 --> 00:27:44.900
But maybe they can still do it very well if they had good training or coaching.

00:27:44.900 --> 00:27:53.280
So I think that was, you know, I kind of wrote in the paper, regardless of whether the cognitive impairments were real or self-perceived, they still perceive themselves as having that limit.

00:27:53.280 --> 00:27:55.100
And that kind of frustrated.

00:27:55.100 --> 00:27:58.420
It's a real roadblock and frustration, regardless of whether it's valid, right?

00:27:58.420 --> 00:27:58.680
Right.

00:27:58.680 --> 00:27:59.120
Exactly.

00:27:59.120 --> 00:28:00.920
I mean, it's valid because they say it is.

00:28:00.920 --> 00:28:03.500
It's valid for them, whether it's psychological or physical.

00:28:03.500 --> 00:28:05.840
It's like an anti-placebo effect.

00:28:05.840 --> 00:28:06.340
Right.

00:28:07.200 --> 00:28:15.380
They also indicated that they felt like there was poorly organized online content, which kind of just describes the Internet itself.

00:28:15.380 --> 00:28:15.740
Right.

00:28:15.740 --> 00:28:16.540
Right.

00:28:16.540 --> 00:28:16.940
Yeah.

00:28:16.940 --> 00:28:20.200
I mean, I think this is again, I didn't mention this out as an age related factor.

00:28:20.200 --> 00:28:25.720
I mean, this is a general factor of if you're learning online and self-teaching yourself, it's actually pretty hard without a coach.

00:28:25.720 --> 00:28:25.940
Right.

00:28:25.940 --> 00:28:31.700
And it kind of related to another point that 10 percent of people mentioned that they're frustrated by lack of human contact.

00:28:31.700 --> 00:28:39.440
Because, again, if you're older, you're less likely to be in a school environment or in a boot camp or in a company where a lot of other people around can help you.

00:28:39.580 --> 00:28:46.720
So you're just vending for yourself, learning from these MOOCs, talking in forums, going on Stack Overflow, reading, you know, outdated tutorials.

00:28:46.720 --> 00:28:50.980
And another factor people mentioned was that the technology seems to change so fast now.

00:28:50.980 --> 00:28:51.160
Right.

00:28:51.160 --> 00:28:56.180
That even people who were programmers or engineers back in the day, they're like, yeah, my whole API fit in a book.

00:28:56.180 --> 00:28:56.380
Right.

00:28:56.380 --> 00:28:59.500
Like I just learned a manual for my assembly language, my device.

00:28:59.500 --> 00:29:07.740
But now it's like we have to Google for all these things and we do this web development or data science and the library changes every month and nothing works anymore on the web.

00:29:07.740 --> 00:29:10.060
And it's just, I mean, it's frustrating for me to think about.

00:29:10.060 --> 00:29:10.680
Yeah.

00:29:10.680 --> 00:29:12.740
And especially if they decide to learn JavaScript.

00:29:12.740 --> 00:29:13.560
Right.

00:29:13.560 --> 00:29:20.440
Because that's both dramatically changing and actually somehow getting really complicated.

00:29:20.440 --> 00:29:21.020
Right.

00:29:21.020 --> 00:29:21.380
Yeah.

00:29:21.380 --> 00:29:23.240
What happened to JavaScript being simple?

00:29:23.240 --> 00:29:23.440
Right.

00:29:23.440 --> 00:29:30.200
Somehow Python managed to stay true to its den of being simple but still being functional.

00:29:30.200 --> 00:29:30.520
Right.

00:29:30.520 --> 00:29:31.800
And doing amazing things.

00:29:31.800 --> 00:29:32.200
Yeah.

00:29:32.200 --> 00:29:34.680
I mean, without getting the weeds too much of language details.

00:29:34.680 --> 00:29:36.860
I mean, I was on the Python Tutor site.

00:29:36.860 --> 00:29:43.080
It's a web app that I maintain for this Learn to Code site that I use to deploy the survey itself.

00:29:43.080 --> 00:29:44.760
I was just working on it this morning.

00:29:45.200 --> 00:29:53.320
And I have this weird TypeScript and Webpack and minifiers and all this compile tool chain.

00:29:53.320 --> 00:29:57.640
And I have to remember how to compile and minify my code and deploy and everything.

00:29:57.640 --> 00:29:59.880
And I just remember, you know, now I'm feeling old.

00:29:59.880 --> 00:30:05.880
I remember when I started JavaScript, you just had a HTML file and you just wrote a thing in your HTML and stuff displayed.

00:30:05.880 --> 00:30:06.040
Right.

00:30:06.040 --> 00:30:08.920
There's no compilation or transpiling or anything.

00:30:09.380 --> 00:30:09.860
Exactly.

00:30:09.860 --> 00:30:16.740
Now, there's like four layers with map files and dependency injection and modules and whatnot.

00:30:16.740 --> 00:30:17.400
Very interesting.

00:30:17.400 --> 00:30:18.100
Yeah.

00:30:18.100 --> 00:30:19.240
It's wild.

00:30:19.240 --> 00:30:30.500
But you're right that the Python ecosystem still is, you know, it still can maintain, as long as you have a good package, like a meta package, like Anaconda or things, it's still fairly decent to copy and paste code.

00:30:30.500 --> 00:30:37.000
As long as you have all the stuff installed, you can, you know, if you have 10 lines of code, you import some libraries, you do some analysis, do a graph.

00:30:37.000 --> 00:30:38.900
It sort of works everywhere.

00:30:39.380 --> 00:30:39.860
Yeah, exactly.

00:30:39.860 --> 00:30:42.420
I mean, you got to get through the Python 2 versus Python 3.

00:30:42.420 --> 00:30:45.440
And you can, of course, go deep down into some package that's crazy.

00:30:45.440 --> 00:30:47.960
But there's like a base that is still simple, which is nice.

00:30:47.960 --> 00:30:48.260
Right.

00:30:48.260 --> 00:30:51.320
So how long would you say these folks have been trying to learn?

00:30:51.320 --> 00:30:51.900
Right.

00:30:51.900 --> 00:30:53.460
Are they all like really new?

00:30:53.460 --> 00:30:56.320
Have they been at it for a while and they're still sort of fiddling online?

00:30:56.320 --> 00:30:57.780
Or what's the spectrum of that?

00:30:57.780 --> 00:30:59.660
Yeah, there's a really wide range, actually.

00:30:59.660 --> 00:31:04.020
I think in this, let's see how, let's see, I'm trying to read from the paper itself.

00:31:04.020 --> 00:31:10.300
They range from, you know, I just started and I was just playing with online site to I've kind of been learning for years.

00:31:10.300 --> 00:31:10.540
Right.

00:31:10.540 --> 00:31:16.180
I mean, this is a very imprecise measure because a lot of people already know programming and they're like, yeah, I've been learning for a decade.

00:31:16.180 --> 00:31:19.720
And because I already do it in my job, but now I'm just trying to learn a new language.

00:31:19.720 --> 00:31:23.720
I'm trying to learn Python or JavaScript or web development or data science.

00:31:23.720 --> 00:31:24.980
So it ranged a lot.

00:31:24.980 --> 00:31:27.380
But this is definitely not all newbies.

00:31:27.380 --> 00:31:27.600
Right.

00:31:27.600 --> 00:31:37.960
So because people are on the site self-teaching, this is not like a controlled environment where we're taking a sample of the population who have never coded before and tell them to code.

00:31:37.960 --> 00:31:40.840
This is definitely very much a very high variance.

00:31:40.840 --> 00:31:41.540
Yeah, sure.

00:31:41.780 --> 00:31:46.460
So, yeah, it seems pretty evenly distributed between zero and 10 years.

00:31:46.460 --> 00:31:47.100
Right.

00:31:47.100 --> 00:31:48.320
Let's see.

00:31:48.320 --> 00:31:52.600
You know, another, I don't want to skip over this one because I think this is worth pulling out as well.

00:31:52.600 --> 00:31:55.240
I think this might be one of these anti-placebo things.

00:31:55.240 --> 00:32:03.240
Six percent of the respondents said that they are frustrated by their inability to think algorithmically, to conceptualize, plan, and implement solutions.

00:32:03.240 --> 00:32:04.620
Yeah.

00:32:04.620 --> 00:32:08.800
What do you make of that as being, like, that does not sound like an age-related thing to me at all.

00:32:08.880 --> 00:32:13.880
That just sounds like it's hard to learn to program and be effective, like, once you learn the syntax.

00:32:13.880 --> 00:32:14.820
Yeah, I think so.

00:32:14.820 --> 00:32:18.020
This, yeah, this thinking computationally or algorithmically.

00:32:18.020 --> 00:32:19.720
I mean, I kind of made those words.

00:32:19.720 --> 00:32:26.360
I mean, people didn't exactly use those words, but I kind of put the category of, you know, people were saying things like, I don't know how to think like the machine.

00:32:26.500 --> 00:32:28.240
It requires so much precision.

00:32:28.240 --> 00:32:34.700
It requires all these intricate rules or, like, recursion is really hard or, like, you know, functions are really hard.

00:32:34.700 --> 00:32:35.880
That's absolutely right.

00:32:35.880 --> 00:32:51.560
I think there's a lot of very rigorous computing education and programming education research that shows that even if you learn the syntax and the semantics of a language, just this idea of being able to have to think about abstractions and modeling and algorithmic thinking.

00:32:51.560 --> 00:32:53.300
We're thinking about things in terms of steps.

00:32:53.300 --> 00:32:55.500
It is a pretty hard process.

00:32:55.500 --> 00:33:05.700
And that's what a lot of my colleagues who are working with younger kids, you know, part of trying to do computational thinking and teaching in school is to try to say, okay, we're not going to teach you Java or programming.

00:33:05.860 --> 00:33:09.800
What about using something like Logo or Scratch that we can program robots?

00:33:09.800 --> 00:33:17.020
And the idea is to get you to think about step-by-step making recipes instead of, you know, becoming a professional programmer.

00:33:17.020 --> 00:33:20.680
I think this thing is a genuinely hard thing in programming.

00:33:20.680 --> 00:33:26.980
And it's something that as people who've done programming for many years, we kind of forget how big of a leap that is for people who don't program.

00:33:27.200 --> 00:33:33.940
Yeah, it's because I get this question from people who are not particularly older and also not particularly brand new to programming.

00:33:33.940 --> 00:33:36.580
It's just like, I see how you solve that problem.

00:33:36.580 --> 00:33:38.880
I would have never, ever come up with that myself.

00:33:38.880 --> 00:33:41.520
How did you think through to come up with this solution?

00:33:41.520 --> 00:33:41.800
Right?

00:33:41.800 --> 00:33:44.040
Because the solutions often are not that hard.

00:33:44.460 --> 00:33:51.320
But there it's, it's like looking at a blank sheet of paper or a blank Word document and you're going to write a novel.

00:33:51.320 --> 00:33:53.060
It's like, how do you start doing this thing?

00:33:53.060 --> 00:33:53.280
Right?

00:33:53.280 --> 00:33:59.540
Like, it's not that hard to see it, but to like see that it's wide open and what is the right choice to get started?

00:33:59.540 --> 00:34:00.300
Like, that's harder.

00:34:00.300 --> 00:34:00.680
Yeah.

00:34:00.680 --> 00:34:07.260
I mean, I think analogy, an imperfect analogy of this would be people's kind of math phobia with advanced math.

00:34:07.260 --> 00:34:07.420
Right?

00:34:07.420 --> 00:34:08.880
So I fall into this myself.

00:34:08.880 --> 00:34:16.460
So, you know, I see my colleagues who are doing theoretical computer science work or kind of mathematical, you know, serious grad level research math.

00:34:16.460 --> 00:34:19.420
You know, I think that they have this, they pose this problem.

00:34:19.420 --> 00:34:20.340
It's this open problem.

00:34:20.340 --> 00:34:23.480
And they, you know, prove these lemmas and theorems about it and they solve it.

00:34:23.480 --> 00:34:25.660
I think I have no idea how you go about doing this.

00:34:25.660 --> 00:34:29.400
Like, maybe I'll understand the theorem if you explain it to me and present it well.

00:34:29.400 --> 00:34:35.880
But I have no idea how you go from here's a problem to like many, many months later of turning and trial and error.

00:34:35.880 --> 00:34:38.200
Like, here's an elegant, you know, one page proof.

00:34:38.200 --> 00:34:40.960
And I think that obviously there's a process to this, right?

00:34:40.960 --> 00:34:44.900
This is like we were talking about in the beginning of the hour with the hacking mentality.

00:34:44.900 --> 00:34:48.740
You know, these people are there, you know, for the most part, human just like us.

00:34:48.740 --> 00:34:59.140
And they've gone through certain mental heuristics and, you know, certain kinds of kind of search algorithms in their brain and fitting pieces together and chunking pieces until they come up with mathematical proofs.

00:34:59.140 --> 00:35:05.620
And I think, you know, I personally never grew up with a very rigorous math education in terms of proof-based math.

00:35:05.620 --> 00:35:07.660
So, you know, I would fall in the same boat.

00:35:07.660 --> 00:35:14.540
If someone, you know, at this age, at my age, if someone's like, okay, now you got to do like proofs all day, I would be similarly as intimidating.

00:35:14.540 --> 00:35:17.860
I'm like, I have no idea how you start conceptualizing mathematical proofs.

00:35:17.860 --> 00:35:18.260
Exactly.

00:35:18.260 --> 00:35:21.540
It's one thing to read the proof of like Green's theorem or Stokes theorem.

00:35:21.540 --> 00:35:22.700
It's another to come up with it.

00:35:23.720 --> 00:35:28.480
Well, I guess that's why these people are famous and living on in history and they have theorems named after them.

00:35:28.480 --> 00:35:28.880
Exactly.

00:35:28.880 --> 00:35:30.860
There's other people who study their theorems, right?

00:35:30.860 --> 00:35:36.820
So there's a couple of other questions that you asked that I'd like to just like briefly touch on because I think they're kind of interesting.

00:35:36.820 --> 00:35:41.900
One was how many hours per week were they putting into this?

00:35:41.900 --> 00:35:44.040
Like, is this a half hour on Sunday morning?

00:35:44.040 --> 00:35:45.800
Is this like they do it an hour a day?

00:35:45.800 --> 00:35:46.760
What was the story there?

00:35:46.760 --> 00:35:47.040
Yeah.

00:35:47.040 --> 00:35:49.620
So people have spent a wide range of hours again.

00:35:49.840 --> 00:35:56.620
So the interesting split in this data was between people who are still working and people who are retired or semi-retired.

00:35:56.620 --> 00:36:01.060
And unsurprisingly, if you're retired or somewhat retired, you have more time to spend on it.

00:36:01.060 --> 00:36:09.140
So the median for working people was about five hours a week for working people and for retired or semi-retired was about 10 hours a week.

00:36:09.140 --> 00:36:10.800
But there was a pretty wide variation.

00:36:10.800 --> 00:36:11.980
Yeah, that's quite a bit though.

00:36:11.980 --> 00:36:15.260
Yeah, I would expect less if I had to guess, you know, that's cool.

00:36:15.260 --> 00:36:17.760
Yeah, I mean, it is, again, it's all self-reported anyways.

00:36:17.760 --> 00:36:26.120
But I think that, again, if people who are going on these sites to learn and judging by the seriousness of their responses, they are probably more in the serious side.

00:36:26.120 --> 00:36:31.580
And again, I feel like one of my pet theories is that if you're only doing an hour a week, you probably will give up.

00:36:31.580 --> 00:36:32.980
Yeah, that's true.

00:36:32.980 --> 00:36:36.040
You probably do have to put in more time than that because it is something you got.

00:36:36.040 --> 00:36:42.400
It's a pretty complicated thing with lots of facts, but also it requires tons of practice, kind of like the algorithmic thinking we're talking about.

00:36:42.540 --> 00:36:42.860
Exactly.

00:36:42.860 --> 00:36:43.180
Yeah.

00:36:43.180 --> 00:36:47.720
I mean, I think if you've been sticking with it for a while, you know, you hopefully get hooked enough so that you do spend.

00:36:47.720 --> 00:36:49.740
I mean, five hours goes by really fast.

00:36:49.740 --> 00:36:51.660
You can do that in a day if you're retired, right?

00:36:51.660 --> 00:36:51.980
Yeah.

00:36:51.980 --> 00:36:52.380
Yeah.

00:36:52.380 --> 00:36:57.660
I recently looked at some kind of, it certainly wasn't an academic paper.

00:36:57.660 --> 00:37:00.180
It was more like a blog post report type thing.

00:37:00.180 --> 00:37:02.440
I talked about it on Python Bytes.

00:37:02.440 --> 00:37:03.600
I'll put it in the show notes.

00:37:03.600 --> 00:37:11.560
So basically it was this code school that asked 20,000 people like how they're learning or why they're learning programming or something like this.

00:37:11.560 --> 00:37:15.860
And one of the facts that they had in there was gender.

00:37:15.860 --> 00:37:19.980
And they said 19% were women and the balance were men.

00:37:20.760 --> 00:37:28.060
And I felt like on one hand, like that's not really where we should be, but it's actually a little better than I would guess.

00:37:28.060 --> 00:37:35.840
Just thinking of like certain conferences I've attended, not in the Python space where it's like 5% of women attending.

00:37:35.840 --> 00:37:36.140
Right.

00:37:36.160 --> 00:37:37.480
So it's, it's really good.

00:37:37.480 --> 00:37:39.840
What's the gender story for older adults?

00:37:39.840 --> 00:37:40.380
Yeah.

00:37:40.380 --> 00:37:44.660
So for the respondents, we had 15% female, which is slightly lower than that.

00:37:44.660 --> 00:37:45.780
There was 19 you mentioned.

00:37:45.780 --> 00:37:46.320
I think so.

00:37:46.320 --> 00:37:46.460
Yeah.

00:37:46.460 --> 00:37:48.560
But that's just like college age learning.

00:37:48.560 --> 00:37:50.020
I think that's sort of the bootcamp crowd.

00:37:50.020 --> 00:37:50.380
Yeah.

00:37:50.380 --> 00:37:51.460
So that would make sense.

00:37:51.460 --> 00:37:57.220
The kind of college CS majors range is around 2025% nowadays.

00:37:57.220 --> 00:37:59.380
So in this population is 15%.

00:37:59.380 --> 00:38:04.240
It's not that surprising again, because in the older population, especially people who,

00:38:04.380 --> 00:38:09.080
most of these people are ones with technical degrees in science and engineering in, you know,

00:38:09.080 --> 00:38:13.680
historically in those days, most people were male growing up in that generation, majoring in that.

00:38:13.680 --> 00:38:17.920
And also, I think this is also pretty consistent with online learning in general.

00:38:17.920 --> 00:38:21.520
I mean, kind of MOOCs and online learning environments stack overflow.

00:38:21.520 --> 00:38:25.280
Those are overwhelmingly, you know, 90% plus male.

00:38:25.280 --> 00:38:33.240
I guess we as guys are willing to just go be by ourselves for hours and force knowledge down our heads.

00:38:33.240 --> 00:38:33.460
Okay.

00:38:33.460 --> 00:38:37.920
This portion of Talk Python To Me is brought to you by Hired.

00:38:37.920 --> 00:38:41.340
Hired is the platform for top Python developer jobs.

00:38:41.340 --> 00:38:46.780
Create your profile and instantly get access to thousands of companies who will compete to work with you.

00:38:46.780 --> 00:38:50.020
Take it from one of Hired's users who recently got a job and said,

00:38:50.180 --> 00:39:06.220
Well, that sounds pretty awesome, doesn't it?

00:39:06.220 --> 00:39:08.120
But wait until you hear about the signing bonus.

00:39:08.120 --> 00:39:11.660
Everyone who accepts a job from Hired gets a $300 signing bonus.

00:39:11.660 --> 00:39:14.660
And as Talk Python listeners, it gets even sweeter.

00:39:14.660 --> 00:39:20.020
Use the link talkpython.fm/Hired and Hired will double the signing bonus to $600.

00:39:20.020 --> 00:39:22.100
Opportunity is knocking.

00:39:22.100 --> 00:39:25.820
Visit talkpython.fm/Hired and answer the door.

00:39:26.820 --> 00:39:30.660
One final one of the questions you asked, what was their job or profession?

00:39:30.660 --> 00:39:32.900
And obviously you can't just like list off all the jobs.

00:39:32.900 --> 00:39:37.560
But what was the general sense of like types of jobs people had that are coming back to programming?

00:39:37.900 --> 00:39:41.000
I think the biggest one, I think, were scientists and engineers.

00:39:41.000 --> 00:39:46.860
So these are people who had a career in science or a non-software engineering type major.

00:39:46.860 --> 00:39:50.120
So they're electrical engineers, mechanical engineers, civil engineers.

00:39:50.120 --> 00:39:57.060
Basically, you know, these people were working at the equivalent of the Google and the Microsofts, you know, 40 years ago.

00:39:57.060 --> 00:39:59.480
They had a career in engineering or science.

00:39:59.480 --> 00:40:03.700
And now they're phasing out and they're getting into trying to learn this programming thing.

00:40:03.700 --> 00:40:07.580
Also, quite a few people were teachers, actually, which is interesting.

00:40:07.760 --> 00:40:13.200
And I suspect, I think most of them were not computer science teachers because there were actually very few computer science teachers, unfortunately.

00:40:13.200 --> 00:40:25.040
Most of these were STEM teachers who wanted to learn either to actually perhaps teach in their school or that they're retiring now to perhaps volunteer to teach or maybe teach summer school or teach part time.

00:40:25.040 --> 00:40:33.680
So it makes sense because the scientists and engineering crowd and the teaching crowd, you know, these are probably the people who are able and willing to go online to learn stuff in general.

00:40:33.680 --> 00:40:34.720
Sure, sure.

00:40:35.820 --> 00:40:45.840
One of the opportunities you pointed out is there's a big gap of people who can teach programming or both can and have the time and interest in teaching programming.

00:40:45.920 --> 00:40:52.700
And the amount of teachers, especially at the middle school and high school level, not so much the college and professional level.

00:40:52.700 --> 00:40:57.880
You're saying like there might be a way to match these two groups up and address that somewhat.

00:40:57.880 --> 00:40:58.340
Yeah.

00:40:58.480 --> 00:41:00.900
So I think one of the big issues in the U.S.

00:41:00.900 --> 00:41:09.360
I don't know personally about other countries, but in the United States is we have this dire shortage of computer science teachers at the high school and lower levels, right?

00:41:09.360 --> 00:41:11.640
At middle school and high school levels, especially.

00:41:11.920 --> 00:41:22.280
We just have a lack of computer science teachers because anyone who is majoring in computer science in college can get, you know, much better paying jobs in the software industry or in other industries.

00:41:22.280 --> 00:41:29.240
And unfortunately, in the U.S. with how teaching jobs are structured, these are usually not as well paid as other industry jobs.

00:41:29.240 --> 00:41:33.940
So kind of the best and brightest computer science majors are usually not becoming teachers.

00:41:33.940 --> 00:41:41.600
Unfortunately, I mean, I would love for for government to reform and make, you know, make teaching computer science the most glamorous, awesome profession ever.

00:41:41.700 --> 00:41:42.460
So more people do it.

00:41:42.460 --> 00:41:47.460
But the reality is that it is really hard to get good teachers in computer science.

00:41:47.460 --> 00:41:56.800
So one thing people have done, the most common way people have dealt with this is to retrain current teachers, current math and science teachers to be computer science teachers.

00:41:56.800 --> 00:41:59.180
So there are initiatives saying, you know, you're teaching.

00:41:59.180 --> 00:42:03.460
I mean, my computer science instructor was the AP calculus teacher in high school.

00:42:03.460 --> 00:42:05.620
And that's very common because they're math science people.

00:42:05.620 --> 00:42:08.660
So they're like, oh, why don't we why don't you teach computer science as well?

00:42:08.700 --> 00:42:13.080
We'll give you a summer training course to teach you how to do AP computer science stuff.

00:42:13.080 --> 00:42:17.220
And there's quite a few researchers thinking about how do you retrain current teachers?

00:42:17.220 --> 00:42:20.800
They're called in-service teachers to pivot them into computer science.

00:42:20.800 --> 00:42:24.260
And I propose in this paper, what about people who are 60 and over?

00:42:24.260 --> 00:42:24.460
Right.

00:42:24.460 --> 00:42:28.800
These are people who are clearly very intelligent, very hardworking, very technically capable.

00:42:28.800 --> 00:42:34.580
And they're phasing out of their primary career, but they still want to keep active and keep engaged.

00:42:34.580 --> 00:42:40.540
And I think teaching, especially part time, is a great way to do that because you get to be social, you get to be active.

00:42:40.540 --> 00:42:45.580
There's all these great psychological and physical benefits of maintaining activity over age.

00:42:45.580 --> 00:42:49.940
And these people have the skills and the wisdom and the enthusiasm to teach.

00:42:49.940 --> 00:42:52.760
I think that'll be an awesome thing if we can make that work.

00:42:52.760 --> 00:42:54.500
Yeah, I think that would be really great as well.

00:42:54.500 --> 00:43:01.640
And I feel like people perceive this kind of stuff to be more challenging than it is in practice.

00:43:01.640 --> 00:43:07.720
So I'm thinking of my daughter, who is my daughter in second grade, and I have older daughters as well.

00:43:07.720 --> 00:43:10.800
And we did an hour of code at her elementary school.

00:43:10.800 --> 00:43:11.420
Right.

00:43:11.420 --> 00:43:21.440
And so what we ended up doing was every grade had one hour of like a programming exercise with me and the principal actually during the hour of code.

00:43:21.440 --> 00:43:21.920
Right.

00:43:21.920 --> 00:43:29.060
And at first, when I approached them with this idea, I was like, well, maybe we can do this for fifth grade, maybe for fourth grade as well.

00:43:29.060 --> 00:43:29.760
But that's it.

00:43:29.760 --> 00:43:29.880
Right.

00:43:29.880 --> 00:43:31.000
They have to be like more.

00:43:31.000 --> 00:43:34.060
And the teachers can't really help because they're not programmers.

00:43:34.320 --> 00:43:41.300
In the end, we ended up doing basically something from, I think it's Grok Learning, basically a scratch thing.

00:43:41.300 --> 00:43:46.440
And even the first graders did amazing, successful problem solving.

00:43:46.440 --> 00:43:53.760
And all the teachers the next year were in there helping because they realized, oh, this is not actually as challenged as hard as I thought.

00:43:53.760 --> 00:43:54.920
And these kids are very excited.

00:43:54.920 --> 00:43:56.460
And everybody wanted to be part of it.

00:43:56.460 --> 00:44:01.040
And I think it's one of those things that just sounds super daunting if you've never tried it.

00:44:01.320 --> 00:44:05.160
Even if you're a good programmer, like, I'm not sure I want to go be around a bunch of crazy kids and do this.

00:44:05.160 --> 00:44:05.380
Right.

00:44:05.380 --> 00:44:08.960
You know, but in fact, I found it to be quite easy and fun.

00:44:08.960 --> 00:44:09.280
Yeah.

00:44:09.280 --> 00:44:13.460
And I think that's also a testament to the success of these custom learning environments for children.

00:44:13.460 --> 00:44:13.720
Right.

00:44:13.720 --> 00:44:21.220
So these are developed over many years of research and productization development of these more friendly virtual world environments or block based environments.

00:44:21.220 --> 00:44:32.180
Because, again, if you're throwing kids in there with teachers with, you know, old versions of Boardland Turbo C++ on Windows 3.1 that doesn't compile, then that's probably not a great first experience.

00:44:32.180 --> 00:44:32.860
Exactly.

00:44:32.860 --> 00:44:34.820
Well, but I think you teach the hardest part.

00:44:34.820 --> 00:44:36.380
You teach the algorithmic thinking.

00:44:36.380 --> 00:44:36.900
Right.

00:44:36.900 --> 00:44:37.300
Exactly.

00:44:37.300 --> 00:44:38.020
And the problem solving.

00:44:38.020 --> 00:44:40.460
And then it's like, okay, well, now I put that in words.

00:44:40.460 --> 00:44:40.780
Fine.

00:44:40.780 --> 00:44:41.920
Right.

00:44:42.640 --> 00:44:48.480
It's, you know, when you first learn programming, I feel like looking at the syntax and the compilers and all that stuff feels like that's the hard part.

00:44:48.480 --> 00:44:52.980
You get a compiler bug and a syntax bug and it won't compile and you finally get it to work.

00:44:52.980 --> 00:44:54.500
You're like, yes, I got my program working.

00:44:54.500 --> 00:44:56.940
And it's like, you realize you're just starting the work.

00:44:56.940 --> 00:45:00.840
You've got to understand where the real bugs and the real performance problems and everything else are.

00:45:00.840 --> 00:45:08.340
So I think it's, you know, get through that thinking part straight away and avoid the syntax, at least for the younger groups.

00:45:08.340 --> 00:45:11.200
I'm not sure about the older groups, if that makes any sense or not.

00:45:11.200 --> 00:45:15.000
Yeah, and that's actually made segue into design opportunities as well that we're already talking about.

00:45:15.000 --> 00:45:23.760
And one of the kind of design thinking things I had for the older population is that a lot of them mentioned how they didn't want to be patronized.

00:45:23.760 --> 00:45:23.940
Right.

00:45:23.940 --> 00:45:35.860
They didn't necessarily want games for kids or cutesy things that are like games or things that look like they're for kids because, you know, these people are serious career professionals and they want to learn.

00:45:35.860 --> 00:45:38.340
They've run global companies or something like this.

00:45:38.340 --> 00:45:38.580
Exactly.

00:45:38.580 --> 00:45:40.780
Now they are like thrown into scratch.

00:45:40.780 --> 00:45:41.060
Right.

00:45:41.120 --> 00:45:41.680
Exactly.

00:45:41.680 --> 00:45:44.340
So I think that was an interesting design challenge.

00:45:44.340 --> 00:45:47.660
You know, we have all this great research that shows what works well for younger kids.

00:45:47.660 --> 00:45:52.400
You know, what are the equivalent of this scratch and logos for older adults?

00:45:52.400 --> 00:45:56.280
One potential thing that some people mentioned are these brain training games.

00:45:56.460 --> 00:46:09.740
So these companies like Lumosity and other companies make these apps that, you know, that are kind of engaging and try to test your memory and try to, you know, these kinds of they make a lot of these games that stimulate older adults to learn and stuff.

00:46:09.740 --> 00:46:21.080
So perhaps couching learning programming in terms of these brain training puzzles or, you know, making claims saying, oh, you know, we can do this concentration game or do this photo game or something where you have to write some code.

00:46:21.080 --> 00:46:24.480
I think then they'll feel like, oh, this is something my peers do as well.

00:46:24.580 --> 00:46:27.200
So this doesn't feel like you're just giving me a kid's toy to play with.

00:46:27.200 --> 00:46:27.540
Yeah.

00:46:27.540 --> 00:46:27.880
Yeah.

00:46:27.880 --> 00:46:28.420
That's for sure.

00:46:28.420 --> 00:46:35.260
What are the like that ties into one of the motivations, which was I might be a scientist, but work with a bunch of developers or I'm a manager working with developers.

00:46:35.260 --> 00:46:40.980
And I want to understand what the people I'm the manager of actually do day to day, not just at a higher level.

00:46:40.980 --> 00:46:41.220
Right.

00:46:41.220 --> 00:46:41.500
Yeah.

00:46:41.500 --> 00:46:45.180
And I think that was for the kind of younger people in our generation and our sample.

00:46:45.180 --> 00:46:45.400
Right.

00:46:45.400 --> 00:46:45.820
Right.

00:46:45.820 --> 00:46:46.040
Right.

00:46:46.040 --> 00:46:48.740
The 60, 60 to 67 ish.

00:46:48.740 --> 00:46:49.000
Right.

00:46:49.000 --> 00:46:53.680
The people who are still working, they want to learn, you know, quote unquote, industrial best practices.

00:46:53.680 --> 00:46:53.940
Right.

00:46:53.940 --> 00:46:59.520
They want to be learning Python and web development and stuff because they wanted to see what people they're working with are doing.

00:46:59.520 --> 00:47:00.480
Yeah, for sure.

00:47:01.200 --> 00:47:01.480
All right.

00:47:01.480 --> 00:47:12.540
So you said in the end that there were seven ways that you thought we could help create something particularly useful for this age group, like not just scratch or something like that.

00:47:12.540 --> 00:47:12.720
Right.

00:47:12.720 --> 00:47:12.940
Yeah.

00:47:12.940 --> 00:47:17.280
So I kind of outlined just kind of design ideas in the conclusion of the study.

00:47:17.280 --> 00:47:21.780
And again, these are all kind of speculation based on based on the findings.

00:47:21.780 --> 00:47:25.340
And one of them I already mentioned was targeting the age group.

00:47:25.340 --> 00:47:25.580
Right.

00:47:25.620 --> 00:47:33.380
So this is very basic user centered design, knowing your audience thing of I think there is not a one size fits all solution for this.

00:47:33.380 --> 00:47:33.560
Right.

00:47:33.560 --> 00:47:39.440
So things like scratch are great for working with young children because they were well tested and developed with that in mind.

00:47:39.440 --> 00:47:42.960
So what does it mean to make something like that for an older adult population?

00:47:42.960 --> 00:47:47.500
Maybe it is a game because they do like games or they like crosswords and Sudoku and brain training games.

00:47:47.500 --> 00:47:50.640
But they're probably different kinds of games and the games that kids play.

00:47:50.640 --> 00:48:03.280
Another one is about this idea of of universal design, which is this which is this idea and design that says if you try to design for people with certain, say, cognitive or motor impairments.

00:48:03.360 --> 00:48:07.640
Or say the older adults may not be able to remember things as well or their hands may be more shaky.

00:48:07.640 --> 00:48:11.280
So they, you know, make more typos or they have more trouble typing and stuff.

00:48:11.280 --> 00:48:21.340
If you actually design of, say, a programming environment or a learning environment that takes those into account and kind of mitigates those effects, that can actually end up universally helping everybody.

00:48:21.340 --> 00:48:21.620
Right.

00:48:21.660 --> 00:48:34.020
I mean, an environment that helps people remember things better and helps data entry be easier can be good for people with, you know, other motor impairments or for people with learning disabilities or for people who are short on time.

00:48:34.020 --> 00:48:45.340
So I think that it's an interesting this sort of population of study is interesting because by designing for them, you can not only help all the people over 60, you can help people of all ages learn better.

00:48:45.340 --> 00:48:46.760
Yeah, that's a really good point.

00:48:46.760 --> 00:48:49.600
It feels like maybe a little more distributed cognition.

00:48:49.600 --> 00:48:50.180
Yeah.

00:48:50.260 --> 00:48:55.440
And, you know, maybe this whole coming wave of AI will somehow play into really helping here as well.

00:48:55.440 --> 00:49:03.780
You know, like if it doesn't just say, here's, you know, more than just say autocomplete for something.

00:49:03.780 --> 00:49:06.960
But, like, here are the things it looks like you're trying to do.

00:49:06.960 --> 00:49:11.280
Maybe, you know, here's a resource to help you show that or to learn that.

00:49:11.280 --> 00:49:13.360
Or, like, these are the common steps people take.

00:49:13.360 --> 00:49:15.760
The closest I've seen to this is something called Kite.

00:49:15.760 --> 00:49:19.280
But it's certainly focused on professional developers.

00:49:19.360 --> 00:49:20.680
It's not a teaching environment, right?

00:49:20.680 --> 00:49:21.220
Yeah, yeah.

00:49:21.220 --> 00:49:31.240
I mean, I think these sorts of better intelligence and, you know, better web search and web crawling type things, thinking about targeting that for a learner audience would be really cool.

00:49:31.240 --> 00:49:35.100
Because, like you said, the business angle is all for professionals at this point.

00:49:35.100 --> 00:49:42.180
Because these products, I mean, these deep learning startups are all trying to develop productivity tools for professionals or for data analysts or for things.

00:49:42.180 --> 00:49:47.300
But thinking about developing them for a novice population could be really promising.

00:49:47.300 --> 00:49:49.280
Yeah, I can see that helping a lot of people.

00:49:49.280 --> 00:49:52.560
Like, maybe you're a pro developer, but you're new in a language, right?

00:49:52.560 --> 00:49:55.560
That kind of exposure would be really helpful.

00:49:55.560 --> 00:49:58.280
Another thing you talked about was scaffolding.

00:49:58.280 --> 00:49:59.180
What do you mean with that?

00:49:59.260 --> 00:50:05.740
Yeah, so this idea of instructional scaffolding is just sort of akin to physical scaffolding, right?

00:50:05.740 --> 00:50:09.620
That you don't want to build a building by just throwing everything together all at once.

00:50:09.620 --> 00:50:12.140
You want to build an outside infrastructure.

00:50:12.140 --> 00:50:17.240
You want to build a scaffold so you can kind of gradually layer stuff on top without it toppling over.

00:50:17.240 --> 00:50:23.580
So a lot of the people were overwhelmed by just how many shared choices there were in software development.

00:50:23.580 --> 00:50:28.540
You know, like start a modern JavaScript-based front-end web project.

00:50:28.540 --> 00:50:29.220
What can you do?

00:50:29.220 --> 00:50:31.100
I don't even know how to make all those choices.

00:50:31.100 --> 00:50:31.940
There's so many.

00:50:31.940 --> 00:50:32.500
Exactly.

00:50:32.500 --> 00:50:37.100
There's some flowchart somewhere on the web that's like, here, you want to be a web developer?

00:50:37.100 --> 00:50:39.620
Here's like 500 things you can step through.

00:50:39.620 --> 00:50:40.520
Exactly.

00:50:40.520 --> 00:50:46.320
I don't know if they made that to be sarcastic or that they were actually serious about how this web development is awesome

00:50:46.320 --> 00:50:47.800
because you have so many choices.

00:50:47.800 --> 00:50:56.540
But yeah, so one of the ways to do scaffolding for these environments is just to make a nice prepackaged environment for a learning audience.

00:50:56.540 --> 00:51:01.120
So things like Racket, which is a scheme-based language and environment, have done a good job.

00:51:01.120 --> 00:51:03.680
They use it a lot in colleges and now in high schools.

00:51:03.680 --> 00:51:05.900
You can download Racket.

00:51:05.900 --> 00:51:08.940
It's called R-A-C-K-E-T.

00:51:08.940 --> 00:51:10.240
I can't spell on the air.

00:51:10.860 --> 00:51:17.640
And it's basically a scheme-based language and IDE so that you can do all your programming IDE.

00:51:17.640 --> 00:51:19.020
All the libraries are there.

00:51:19.020 --> 00:51:20.020
It's batteries included.

00:51:20.020 --> 00:51:27.480
There are also things like Anaconda for Python if you want to set up a Jupyter Notebook and do a data science workflow.

00:51:27.480 --> 00:51:29.900
And I think that there are more web-based things now too.

00:51:29.900 --> 00:51:31.820
So my Python tutor site has everything.

00:51:31.820 --> 00:51:33.440
All the libraries are included.

00:51:33.440 --> 00:51:34.260
You can play with it.

00:51:34.260 --> 00:51:40.620
There are web-based IDEs now that I think just make things so much more convenient than having to install everything on your computer.

00:51:40.620 --> 00:51:42.440
Yeah, especially with things like Python tutor.

00:51:42.440 --> 00:51:45.220
You don't have to worry about versions and all that kind of stuff.

00:51:45.220 --> 00:51:45.980
You just go run it.

00:51:45.980 --> 00:51:54.520
You also have nice visualizations, like stepping through, kind of like debugging, but more for a learning experience, not for a find and bug step like you can do on yours, right?

00:51:54.520 --> 00:51:54.800
Yeah.

00:51:54.860 --> 00:52:00.680
So I think visualizations are another great form of scaffold, not to plug my own work too much, but we're already down the path.

00:52:00.680 --> 00:52:00.840
Yeah.

00:52:00.840 --> 00:52:08.880
So having visualizations of how code is running is another great example of scaffolding because otherwise you're just looking at a terminal outputs all day.

00:52:08.880 --> 00:52:16.400
But if you can peek inside the computer and see, oh, this pointer points here and I thought it would point there, there's my bug, then that just helps you develop your code.

00:52:16.400 --> 00:52:16.500
Yeah.

00:52:16.500 --> 00:52:16.600
Yeah.

00:52:16.600 --> 00:52:17.700
Why did it do that?

00:52:17.700 --> 00:52:18.660
That's not what I expected.

00:52:18.660 --> 00:52:21.040
Well, that's what you told it to do.

00:52:22.440 --> 00:52:29.840
Another thing that you talked about as a possible thing to consider for solutions was that learners change as they gain expertise, right?

00:52:29.840 --> 00:52:37.960
So as the first week that you're writing code, you have a whole bunch of different problems than your first year, right?

00:52:37.960 --> 00:52:43.960
After your first year, a lot of stuff goes on autopilot and then now you think at a different level.

00:52:43.960 --> 00:52:46.080
So how does that fit into the solution?

00:52:46.080 --> 00:52:46.380
Yeah.

00:52:46.380 --> 00:52:47.800
So I think there's two aspects.

00:52:47.800 --> 00:52:56.540
There's one is the technical aspect, like you mentioned, which is I think a lot of programming education, both tools and curriculum are focused on the introductory end, right?

00:52:56.540 --> 00:53:00.680
On the how do you get started, the basic CS 101 end.

00:53:00.680 --> 00:53:05.560
And I think there's actually not that much work on how to progress, right?

00:53:05.560 --> 00:53:06.780
You know, what happens at six months?

00:53:06.780 --> 00:53:07.540
What happens in one year?

00:53:07.540 --> 00:53:08.900
What happens at five years?

00:53:09.120 --> 00:53:14.160
And I think the other end of that beyond technical is the kind of social aspect, right?

00:53:14.160 --> 00:53:19.480
That when people are progressing as learners, they may not want to be treated like beginners anymore.

00:53:19.480 --> 00:53:27.640
They want to be treated like apprentices, say, to like an open source project or junior colleagues in a company and such.

00:53:27.720 --> 00:53:42.700
And I think both the social and the technical have to go in lockstep because if we are only focusing our education on introductory, then it's sort of like a lemmings thing where they get started okay, but then everyone falls off the cliff because no one gets support after that first same month.

00:53:42.700 --> 00:53:43.660
Exactly.

00:53:43.660 --> 00:53:54.620
So another motivation that you talked about, and I'm not sure if we actually touched on it, was there's some kind of thing around their hobbies that they're really interested in.

00:53:54.940 --> 00:54:01.620
Like I still remember my grandpa was like insanely into collecting beer cans.

00:54:01.620 --> 00:54:08.640
He had like a thousand foot basement with walls built up and every wall had like some rare beer can from someplace.

00:54:08.640 --> 00:54:13.100
I mean, I don't know how many beer cans there were, but there were many and he really had a hard time keeping track of them.

00:54:13.100 --> 00:54:19.220
And so one of the things that would have been cool is like some kind of like beer can trading software, right?

00:54:19.220 --> 00:54:24.600
Which I was too young to write or whatever, but, you know, solving those kinds of problems, right?

00:54:24.620 --> 00:54:26.960
They're like, there's nothing for my beer can collection.

00:54:26.960 --> 00:54:28.420
Maybe I'll like create that.

00:54:28.420 --> 00:54:40.660
Yeah, I think that's a great set of motivations too that, yeah, we didn't talk about this earlier, but basically another main set of motivations is to actually create technologies or software that helps their peers and themselves, right?

00:54:40.660 --> 00:54:47.140
I mean, just like many hobbyists are getting into programming because they want to scratch their own itch, right?

00:54:47.140 --> 00:54:51.680
That whatever field you're in, you want to write software for yourself and your friends.

00:54:51.680 --> 00:54:56.120
And that's, this kind of brings a larger conversation about the youth centeredness of software.

00:54:56.120 --> 00:55:10.280
So it's a cliche that, you know, Silicon Valley makes software for 20 something unmarried young men, you know, to do their, you know, to have remote workers do their laundry and deliver them food because they still, you know, they don't know how to cook, right?

00:55:10.540 --> 00:55:18.260
I have no actual analysis of that, but it does feel like a lot of the problems being solved there are in that vein.

00:55:18.260 --> 00:55:18.640
Right.

00:55:18.640 --> 00:55:27.460
And, you know, there is a, you know, you could, you could play devil's advocate about that for other reasons, but it is true that, you know, and I teach a, I teach at the college level, right?

00:55:27.460 --> 00:55:34.500
And I teach project-based human computer action and web programming toward a classes where students are making projects.

00:55:34.500 --> 00:55:40.020
And unsurprisingly, every project idea is fulfilling a need that college students have, right?

00:55:40.020 --> 00:55:46.340
Every project idea is about delivering food or picking courses or doing laundry or finding parties to go to.

00:55:46.480 --> 00:55:50.820
And it's because these are the things that interest people who are, you know, age 18 or 24.

00:55:50.820 --> 00:56:01.880
So at the same time, there's definitely reason to believe we had this in our surveys that if you're 60 or over, you have certain hobbies like beer can collecting or other people mentioned like personal health.

00:56:01.880 --> 00:56:04.800
It's keeping track of their health records is very important to them, right?

00:56:04.800 --> 00:56:05.940
Health is a very important thing.

00:56:05.940 --> 00:56:12.200
Keeping track of personal memorabilia like family photos or personal narratives about their history.

00:56:12.200 --> 00:56:13.460
Yeah, genealogy type stuff.

00:56:13.460 --> 00:56:13.660
Yeah.

00:56:13.660 --> 00:56:14.200
Genealogy.

00:56:14.200 --> 00:56:14.460
Yeah.

00:56:14.460 --> 00:56:15.640
Genealogy is big.

00:56:16.020 --> 00:56:18.680
So they now play with software to do all this stuff.

00:56:18.680 --> 00:56:20.260
They use online genealogy sites.

00:56:20.260 --> 00:56:23.680
They use social networks to share photos and memories with relatives.

00:56:23.680 --> 00:56:29.680
And programming and making custom software or making plugins is a natural extension to their hobbies.

00:56:29.680 --> 00:56:33.780
And I think this has implications broadly economically as well, right?

00:56:33.800 --> 00:56:45.540
Because if we have more older people doing programming and making open source projects or making products even, we're going to have more age specific great products for people of that generation.

00:56:45.540 --> 00:56:52.860
Whereas now, you know, the stereotypical we're designing for 20 year olds in Silicon Valley, you know, with laundry and food delivery apps everywhere.

00:56:53.640 --> 00:56:54.080
Exactly.

00:56:54.080 --> 00:57:10.620
I've, you know, listening to you talk and thinking about, I feel like there are probably still like wide open spaces for relatively entry level type software that would make a big difference to older folks on a, you know, like hobby related type of things.

00:57:10.620 --> 00:57:10.960
Right.

00:57:10.960 --> 00:57:14.860
There's just, if you look at the, how do I serve 20 year olds like that?

00:57:15.520 --> 00:57:17.980
There's probably not a lot of low hanging fruit anymore.

00:57:17.980 --> 00:57:21.320
You got to do something really interesting or catch the right wave or whatever.

00:57:21.320 --> 00:57:21.660
Right.

00:57:21.660 --> 00:57:24.260
I mean, Snapchat, things like that.

00:57:24.260 --> 00:57:38.320
But, but there's probably a fairly wide number of underserved needs that somebody who, the reason I bring this up is if you're learning to program, you can't go and create, you know, amazon.com at its scale.

00:57:38.320 --> 00:57:43.880
But you could create like something that'll track and rank and evaluate your beer can collection.

00:57:43.880 --> 00:57:44.120
Right.

00:57:44.120 --> 00:57:45.860
Like that's not a super hard problem.

00:57:45.860 --> 00:57:51.440
And you could, you know, potentially make that a product and make it really interesting, like after your career career.

00:57:51.440 --> 00:57:51.880
Yeah.

00:57:51.880 --> 00:58:05.380
And that's a really interesting point you brought up because one thing that has happened is that when younger people, I guess, like us or even younger are designing or thinking, oh, let's think of business ideas or even research ideas or, you know, government funding.

00:58:05.380 --> 00:58:14.700
For when people think about older adults and technology, a lot of what people think about both in government funded research and in products is assistive technologies.

00:58:14.700 --> 00:58:14.960
Right.

00:58:14.960 --> 00:58:17.500
It's kind of slowing the decline of old age.

00:58:17.500 --> 00:58:20.040
It's kind of viewing old age as a quote unquote disease.

00:58:20.040 --> 00:58:20.380
Right.

00:58:20.380 --> 00:58:22.960
It's like, how do we help people live healthier lives?

00:58:22.960 --> 00:58:24.580
How do we make sure they're not bored?

00:58:24.580 --> 00:58:27.460
How do we make sure their mental and physical health is good?

00:58:27.460 --> 00:58:32.900
I mean, these are all important things, of course, but they they take this view of age as quote unquote decline.

00:58:33.140 --> 00:58:43.180
And I think that's unfortunate in a sense, because if you have people who are in that population designing stuff for their peers, you know, like your grandpa or their friends are like, yeah, we're designing stuff because this is fun for us.

00:58:43.180 --> 00:58:44.600
This is like how we're enjoying our life.

00:58:44.600 --> 00:58:45.220
This is our hobby.

00:58:45.220 --> 00:58:48.360
This is our equivalent of 20 year old laundry making apps.

00:58:48.360 --> 00:58:52.800
Like, yeah, we're not making apps to help us stave off age related decline.

00:58:52.800 --> 00:58:55.960
We're making apps because these are things we actually find intrinsically fun.

00:58:56.140 --> 00:59:05.800
And I think we'll hopefully see more of that as the older population is programming for themselves rather than, say, younger people like us thinking, oh, what products do you think my grandparents need?

00:59:05.800 --> 00:59:06.160
Right.

00:59:06.160 --> 00:59:06.780
That would be awesome.

00:59:06.780 --> 00:59:13.620
I'm just thinking of all the remote control things that you could build to, like for remote control hobbies and whatnot.

00:59:13.620 --> 00:59:14.160
It sounds great.

00:59:14.160 --> 00:59:16.240
Yeah, I think there's a lot of there's a lot of potential there.

00:59:16.240 --> 00:59:23.340
And I think that the future that I'm hoping to see with this work and others is to kind of view age as an opportunity.

00:59:23.340 --> 00:59:23.900
Right.

00:59:23.900 --> 00:59:35.340
And that I mean, again, if you Google, if you Google image search, you know, older adults and technology, I'm sure a lot of the pictures you'll see will be health related assistive technologies dealing with physical and mental disabilities.

00:59:35.340 --> 00:59:39.880
Things that are kind of, you know, they're necessary, but they're kind of staving off decline.

00:59:39.880 --> 00:59:45.300
But whereas I think in the future, if, you know, when many of us are over 60, we're still us, right?

00:59:45.300 --> 00:59:46.360
We're still want to have fun.

00:59:46.360 --> 00:59:55.260
We still want to make fun apps, silly apps, you know, games, things to hang out with our friends, maybe, you know, maybe sharing inappropriate things with our similar age friends and stuff.

00:59:55.260 --> 00:59:58.460
And I think that I would love to see more of that in that generation.

00:59:58.460 --> 01:00:01.920
And I think that they'll be empowered to do that once they know more about how to program.

01:00:01.920 --> 01:00:04.240
Yeah, that's I really think that's a great thing.

01:00:04.240 --> 01:00:08.900
I always have felt like if I ever retired, I would just keep doing the same thing, just more of it for myself.

01:00:09.500 --> 01:00:13.840
So hopefully, yeah, hopefully, we've inspired some people to pick that up as well.

01:00:13.840 --> 01:00:19.020
All right, Philip, I think it's about about time, we should probably just leave it there.

01:00:19.020 --> 01:00:21.900
Let me ask you the two questions I always ask before I let you out of here.

01:00:21.900 --> 01:00:25.860
One, if you're going to write some Python code, what editor do you open up?

01:00:25.860 --> 01:00:30.800
I think I've used them for exactly 10 years since, since I started grad school around 2007.

01:00:30.800 --> 01:00:35.660
And I do not customize that much beyond the regular syntax.

01:00:35.660 --> 01:00:39.380
I am supremely low tech in terms of programming.

01:00:39.380 --> 01:00:40.440
I just use them.

01:00:40.440 --> 01:00:42.260
Yeah, just make the need to move around, right?

01:00:42.260 --> 01:00:43.420
Yeah, it's always the same.

01:00:43.420 --> 01:00:43.660
Cool.

01:00:43.660 --> 01:00:45.900
And a notable PyPI package.

01:00:45.900 --> 01:00:52.880
So last time I was on here, I talked about Anaconda, or as I talked about this meta package that this one click installer for everything.

01:00:52.880 --> 01:00:59.700
And I'm trying to think of if I can think of anything else at this point that is major at this point.

01:00:59.940 --> 01:01:11.200
I might still be, you know, I think I'm still a proponent of these, of both Anaconda and things like Enthought and just these one click installer things that get you up and running.

01:01:11.200 --> 01:01:16.980
And I think even from two years ago, I think these have grown even more powerful because data science is a big thing now.

01:01:17.040 --> 01:01:20.980
And now they have Jupyter Notebooks and hopefully the Jupyter Lab IDs and stuff.

01:01:20.980 --> 01:01:31.720
And I just think having a one click installer on your computer to get everything going so that you can just copy any code from the web from any tutorial and play with it, I think is immensely powerful.

01:01:31.720 --> 01:01:40.000
And I think it covers the, I mean, these meta packages cover most of what you need for production level data science and analysis.

01:01:40.440 --> 01:01:41.380
Yeah, they're definitely great.

01:01:41.380 --> 01:01:48.320
And I feel like, you know, if you were getting started, just running Jupyter Notebooks and starting to type in there is actually not a bad way to go.

01:01:48.320 --> 01:01:48.760
That's right.

01:01:48.760 --> 01:01:56.400
And I think a lot of, speaking about education, a lot of more classes now are being taught in the notebooks because it's just a convenient, such a convenient medium.

01:01:56.400 --> 01:02:05.580
And also now there are services, I'm sure, I don't remember them off the top of my head, but there are web-based hosted platforms for Jupyter Notebook, which makes it even easier.

01:02:05.580 --> 01:02:09.600
So I guess my answer for that would be use one of those and you don't have to install any packages.

01:02:10.240 --> 01:02:11.040
You get all the good ones.

01:02:11.040 --> 01:02:11.340
Perfect.

01:02:11.340 --> 01:02:12.600
All right.

01:02:12.600 --> 01:02:13.360
Final call to action.

01:02:13.360 --> 01:02:22.880
I think my final call to action would be that, I mean, going with this age-related theme, it is a cliche, but it is never too late to start, right?

01:02:22.880 --> 01:02:35.320
That it's now easier than ever to not only learn programming, but I mean, I was talking to relatives who were, I have older relatives who they are retired or some are retired and they just learn a lot from YouTube, right?

01:02:35.320 --> 01:02:37.060
They're learning how to fix stuff around their house.

01:02:37.060 --> 01:02:39.680
They're learning to fix their cars.

01:02:39.680 --> 01:02:40.800
They're learning repair.

01:02:40.800 --> 01:02:43.840
They're also learning some basic things about coding, too.

01:02:43.840 --> 01:02:47.040
I was just talking to someone the other day just to kind of get a sample at it.

01:02:47.040 --> 01:02:50.220
So I think these online resources are just amazing.

01:02:50.220 --> 01:03:00.100
And also, I guess the other call to action is just if you're in an older generation, just to talk to, this is a great way to communicate with your younger relatives, right?

01:03:00.140 --> 01:03:07.460
I mean, if you have kids or grandkids who are into technology and stuff, that's an awesome way to connect with them and to find common ground.

01:03:07.460 --> 01:03:15.920
And we even found people in our surveys who talked about one of the reasons they want to learn was so they can chat with their kids and grandkids about technology.

01:03:15.920 --> 01:03:16.740
Yeah, that's awesome.

01:03:16.740 --> 01:03:21.620
Definitely this podcast and yours is the testament that developers love to talk about software.

01:03:21.800 --> 01:03:24.580
So if you're trying to connect, that's certainly a good way to do it.

01:03:24.580 --> 01:03:25.000
That's right.

01:03:25.000 --> 01:03:38.840
Yeah, so I guess one thing I'd like also to throw out there is, you know, maybe like if somebody's out there and they're kind of inspired and they're in this age group, maybe you could create like a Slack channel or a forum or host like some sort of virtual meetup on like Google Hangouts.

01:03:38.840 --> 01:03:42.020
Like these communities, you could totally create them, right?

01:03:42.060 --> 01:03:48.980
Like if people are feeling hesitant to go to, you know, meet up with maybe a bunch of startup kids, right?

01:03:48.980 --> 01:03:54.240
Start your own to talk about hobbies or what you're doing, like some of these hobby projects or something, right?

01:03:54.240 --> 01:03:55.180
Yeah, I think that's great.

01:03:55.180 --> 01:03:58.880
And especially I think the bar to text-based forums is a little lower.

01:03:58.880 --> 01:04:03.540
I mean, I kind of meetups, sorry, virtual meetups where you have to talk on camera, maybe a bit more intimidating.

01:04:03.540 --> 01:04:09.020
But there are already quite a few forums, just online communities of older adults talking about.

01:04:09.020 --> 01:04:11.880
A lot of it, again, is about health or a lot of it's about health.

01:04:11.880 --> 01:04:17.540
But there are already communities where older adults congregate to talk about their hobbies and also Facebook groups and everything.

01:04:17.540 --> 01:04:22.000
So if we can start more of those for technology-related things, that'll be great.

01:04:22.000 --> 01:04:27.560
But I think this ultimately has to be started by kind of early adopters in that age group and not necessarily by us.

01:04:27.560 --> 01:04:28.260
Right, exactly.

01:04:28.260 --> 01:04:31.800
Like some 20-year-old going and saying, I got my new startup idea.

01:04:31.800 --> 01:04:33.560
Maybe that works, maybe it doesn't.

01:04:33.560 --> 01:04:37.480
But it seems like someone from that community doing it would really have the most value.

01:04:37.480 --> 01:04:41.560
And I would love for someone like that to start a podcast like yours or mine.

01:04:41.760 --> 01:04:42.380
That would be awesome, too.

01:04:42.380 --> 01:04:43.600
That actually would really be cool.

01:04:43.600 --> 01:04:45.660
So podcasting is definitely one of these options.

01:04:45.660 --> 01:04:54.020
If you're out there and you do create one of these, be sure to drop by the episode page and put a comment in the bottom so that people can find it.

01:04:54.020 --> 01:04:56.780
I believe this one is talkpython.fm/112.

01:04:56.780 --> 01:05:01.340
So, yeah, people can put notes there.

01:05:01.340 --> 01:05:01.740
Great.

01:05:01.740 --> 01:05:03.860
Yeah, and you can email me or Michael as well.

01:05:03.860 --> 01:05:09.760
You should email us as well if you're listening and you're interested in this because I think we'll definitely be happy to talk about this.

01:05:09.880 --> 01:05:10.360
Yeah, absolutely.

01:05:10.360 --> 01:05:13.780
All right, Philip, thank you so much for once again being on the show.

01:05:13.780 --> 01:05:17.600
And I'm looking forward to whatever we'll talk about next time you come back.

01:05:17.600 --> 01:05:17.940
All right.

01:05:17.940 --> 01:05:18.580
Thanks again, Michael.

01:05:18.580 --> 01:05:19.260
This is great.

01:05:19.260 --> 01:05:19.580
You bet.

01:05:21.580 --> 01:05:24.440
This has been another episode of Talk Python To Me.

01:05:24.440 --> 01:05:29.340
Our guest has been Philip Guau, and this episode has been sponsored by Rollbar and Hired.

01:05:29.340 --> 01:05:32.160
Rollbar takes the pain out of errors.

01:05:32.160 --> 01:05:39.280
They give you the context and insight you need to quickly locate errors that might have otherwise gone unnoticed until your users complain to you, of course.

01:05:39.740 --> 01:05:43.500
As Talk Python To Me listeners, you can track a ridiculous number of errors for free.

01:05:43.500 --> 01:05:46.880
Just go to rollbar.com slash Talk Python To Me to get started.

01:05:46.880 --> 01:05:50.300
Hired wants to help you find your next big thing.

01:05:50.300 --> 01:05:58.860
Visit talkpython.fm/Hired to get five or more offers with salary and equity presented right up front and a special listener signing bonus of $600.

01:05:59.860 --> 01:06:02.040
Are you or your colleagues trying to learn Python?

01:06:02.040 --> 01:06:05.080
Well, be sure to visit training.talkpython.fm.

01:06:05.080 --> 01:06:10.900
We now have year-long course bundles and a couple of new classes released just this week.

01:06:10.900 --> 01:06:11.880
Have a look around.

01:06:11.880 --> 01:06:13.340
I'm sure you'll find a class you'll enjoy.

01:06:13.340 --> 01:06:15.760
Be sure to subscribe to the show.

01:06:15.760 --> 01:06:17.960
Open your favorite podcatcher and search for Python.

01:06:17.960 --> 01:06:19.200
We should be right at the top.

01:06:19.200 --> 01:06:28.520
You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

01:06:28.840 --> 01:06:33.600
Our theme music is Developers, Developers, Developers by Corey Smith, who goes by Smix.

01:06:33.600 --> 01:06:40.280
Corey just recently started selling his tracks on iTunes, so I recommend you check it out at talkpython.fm/music.

01:06:40.280 --> 01:06:45.640
You can browse his tracks he has for sale on iTunes and listen to the full-length version of the theme song.

01:06:45.640 --> 01:06:47.720
This is your host, Michael Kennedy.

01:06:47.720 --> 01:06:49.000
Thanks so much for listening.

01:06:49.000 --> 01:06:50.180
I really appreciate it.

01:06:50.180 --> 01:06:52.340
Smix, let's get out of here.

01:06:52.340 --> 01:06:56.600
Stating with my voice, there's no norm that I can feel within.

01:06:56.600 --> 01:06:57.820
Haven't been sleeping.

01:06:57.820 --> 01:06:59.460
I've been using lots of rest.

01:06:59.460 --> 01:07:02.320
I'll pass the mic back to who rocked it best.

01:07:02.320 --> 01:07:04.040
First developers.

01:07:04.040 --> 01:07:05.640
First developers.

01:07:05.640 --> 01:07:07.020
First developers.

01:07:07.020 --> 01:07:08.020
First developers.

01:07:08.020 --> 01:07:10.020
First developers.

01:07:10.020 --> 01:07:11.020
First developers.

01:07:11.020 --> 01:07:12.020
First developers.

01:07:12.020 --> 01:07:13.020
First developers.

01:07:13.020 --> 01:07:14.600
First of all, first of all, first of all...

01:07:14.600 --> 01:07:15.600
Thank you.

