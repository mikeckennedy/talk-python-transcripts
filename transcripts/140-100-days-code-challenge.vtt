WEBVTT

00:00:00.001 --> 00:00:05.920
How do you learn libraries or even parts of Python itself that you don't have actual work projects to try them out on?

00:00:05.920 --> 00:00:14.900
Whether that's SQLAlchemy, Slack bots, or Map APIs, actually building projects, small and large, with them is really the only way to gain true competency.

00:00:14.900 --> 00:00:21.020
Well, you might try one of the 100 days of Python code challenges that have been going around.

00:00:21.020 --> 00:00:26.580
This week, you'll meet Bob Belderbos and Julian Saccaria, who created PyBytes.

00:00:26.580 --> 00:00:33.320
They've done a few 100 days of code challenges and are here to share their experience and even some concrete examples.

00:00:33.320 --> 00:00:39.040
This is Talk Python To Me, episode 140, recorded November 28, 2017.

00:00:52.160 --> 00:00:59.580
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:00:59.580 --> 00:01:03.700
This is your host, Michael Kennedy. Follow me on Twitter, where I'm @mkennedy.

00:01:03.700 --> 00:01:10.180
Keep up with the show and listen to past episodes at talkpython.fm, and follow the show on Twitter via at Talk Python.

00:01:10.180 --> 00:01:13.460
Talk Python To Me is partially supported by our training courses.

00:01:14.160 --> 00:01:16.620
Have you heard about the 100 days of code challenge?

00:01:16.620 --> 00:01:20.840
It's a challenge where you write code for an hour a day for 100 days.

00:01:20.840 --> 00:01:24.300
It's helped many developers finally master programming.

00:01:24.300 --> 00:01:28.760
But it can be hard to know what to study or have resources to focus on.

00:01:28.760 --> 00:01:33.280
That's why we wrote not one, but two 100 days of code courses.

00:01:33.280 --> 00:01:37.060
100 days of code in Python, which covers mostly pure Python.

00:01:37.300 --> 00:01:43.500
And 100 days of web in Python, which covers a whole spectrum of web frameworks and concepts.

00:01:43.500 --> 00:01:50.680
If you've been thinking about taking the 100 days of code challenge, be sure to visit training.talkpython.fm and check out our courses.

00:01:50.680 --> 00:01:55.620
They are the 100 days of projects and lessons with a tidy bow on top just for you.

00:01:55.620 --> 00:01:58.280
Bob, Julian, welcome to Talk Python.

00:01:58.280 --> 00:02:00.080
Hey, Mike. Thanks for having us.

00:02:00.080 --> 00:02:01.060
An honor.

00:02:01.060 --> 00:02:03.920
It's great to have you here and see you at least on Skype.

00:02:03.920 --> 00:02:06.020
Bob, we had such a great time at PyCon.

00:02:06.020 --> 00:02:08.240
Indeed. It was very nice meeting you.

00:02:08.240 --> 00:02:09.180
Yeah, it was great to hang out.

00:02:09.180 --> 00:02:16.000
And I think that was really my favorite part of PyCon is just meeting all the people and the experiences outside the talks in the conference rooms.

00:02:16.000 --> 00:02:18.080
But it was a good time.

00:02:18.080 --> 00:02:20.080
And Julian, next year maybe you can make it.

00:02:20.080 --> 00:02:20.460
Who knows?

00:02:20.460 --> 00:02:22.380
Oh, man. Totally jealous.

00:02:22.380 --> 00:02:24.380
It is a very long way from Australia.

00:02:24.380 --> 00:02:26.600
I'm going to try for 2018.

00:02:26.600 --> 00:02:27.520
Oh, that's awesome.

00:02:27.520 --> 00:02:28.880
Yeah, I've done that flight from Sydney.

00:02:28.880 --> 00:02:29.540
It's a commitment.

00:02:29.540 --> 00:02:30.360
It's not pleasant.

00:02:30.360 --> 00:02:31.460
Let's just say that.

00:02:31.460 --> 00:02:36.000
No, but look, if you're going to Australia, you come from my direction to yours.

00:02:36.000 --> 00:02:37.140
It's a wonderful place to visit.

00:02:37.140 --> 00:02:39.560
So maybe I'll get down there someday.

00:02:39.560 --> 00:02:42.220
So we're going to talk about code challenges.

00:02:42.220 --> 00:02:47.300
You know, Twitter has been afire with this concept of 100 days of code.

00:02:47.400 --> 00:02:52.460
Basically, people who are learning something new or pushing their boundaries in some way.

00:02:52.460 --> 00:02:55.160
Like, I'm going to do this for 100 days.

00:02:55.160 --> 00:02:57.380
And I'm going to commit publicly to doing it.

00:02:57.380 --> 00:03:02.800
And, you know, sort of testify to social media, if that is a thing that I've done my days at work.

00:03:02.800 --> 00:03:03.060
Right.

00:03:03.380 --> 00:03:11.200
And so we're going to have a good sort of retrospective on this one that you did and maybe talk about another one that you guys are doing as well.

00:03:11.200 --> 00:03:15.040
Before we get there, though, let's start with your story.

00:03:15.040 --> 00:03:16.420
How did you get into programming in Python?

00:03:16.420 --> 00:03:17.660
Julian, go first.

00:03:17.660 --> 00:03:18.120
All right.

00:03:18.200 --> 00:03:20.220
So it's actually kind of funny.

00:03:20.220 --> 00:03:25.820
I'm really, if you're familiar with PyBytes, I'm the relative newbie compared to Bob.

00:03:25.820 --> 00:03:29.080
So I actually started with C++ in high school.

00:03:29.080 --> 00:03:32.740
But Python-wise, I don't actually work with Python every day.

00:03:32.740 --> 00:03:36.500
It's not what I do for a job, which has made it incredibly difficult.

00:03:36.500 --> 00:03:36.880
Right.

00:03:37.260 --> 00:03:38.820
It was actually Bob who pushed me.

00:03:38.820 --> 00:03:44.100
So I was trying to calculate some overtime when I worked in the field for Oracle.

00:03:44.100 --> 00:03:48.820
And, yeah, he said, why don't you create a Python app to track that?

00:03:48.820 --> 00:03:49.560
And that was it.

00:03:49.560 --> 00:03:53.440
As soon as I started doing it, bang, I was like, this is so cool.

00:03:53.440 --> 00:03:58.120
This is so much easier than smart pointers in C++ or, you know, whatever.

00:03:58.120 --> 00:03:59.260
Exactly.

00:03:59.260 --> 00:04:02.020
I'm like, well, now I don't have to log in and use the Oracle tool.

00:04:02.020 --> 00:04:02.860
I can use my own.

00:04:02.860 --> 00:04:03.980
Beautiful.

00:04:03.980 --> 00:04:04.720
Yeah, it was great.

00:04:04.960 --> 00:04:08.160
And then from that, it's just one thing after another and then PyBytes.

00:04:08.160 --> 00:04:08.780
Yeah, awesome.

00:04:08.780 --> 00:04:11.520
And what do you do day to day for work?

00:04:11.520 --> 00:04:12.460
Do you work at Oracle still?

00:04:12.460 --> 00:04:13.300
No, no.

00:04:13.300 --> 00:04:18.780
So I resigned about a year and a half ago and I now work for Amazon Web Services.

00:04:18.780 --> 00:04:19.560
Oh, exciting.

00:04:19.560 --> 00:04:20.160
What do you do there?

00:04:20.160 --> 00:04:23.640
It's a bit hush-hush, but I work in one of the data centers.

00:04:23.640 --> 00:04:25.820
So it's a lot of fun.

00:04:25.820 --> 00:04:28.060
So if anything goes down, it's probably me.

00:04:28.060 --> 00:04:28.700
No, I'm just kidding.

00:04:28.700 --> 00:04:32.900
We'll put your Twitter account on this page.

00:04:33.000 --> 00:04:37.480
And as soon as AWS, like Asia goes down, you're going to just hear about it.

00:04:37.480 --> 00:04:38.100
Yeah, sure.

00:04:38.100 --> 00:04:39.340
I'll get an email from you as well.

00:04:39.340 --> 00:04:40.820
Yeah, that's right.

00:04:40.820 --> 00:04:42.120
Nice.

00:04:42.120 --> 00:04:43.280
All right, Bob, how about yourself?

00:04:43.280 --> 00:04:46.020
I started programming about 10 years ago.

00:04:46.020 --> 00:04:52.760
I was working in a financial department and we had to close the month every month.

00:04:53.020 --> 00:04:54.700
And tasks got a bit boring.

00:04:54.700 --> 00:04:58.240
So I started to use Excel and macros to automate the stuff.

00:04:58.240 --> 00:05:04.440
At the same time, I discovered web design and making web pages, which I was very passionate about.

00:05:04.440 --> 00:05:10.560
So I self-taught programming, went back into Sun and later Oracle as a support engineer,

00:05:10.560 --> 00:05:16.320
started to build web tools for the engineers to solve their cases more rapidly.

00:05:17.160 --> 00:05:18.880
Well, I was doing that in Bash.

00:05:18.880 --> 00:05:22.360
Give us an example of like a tool you might make and the problem that it solves.

00:05:22.360 --> 00:05:23.240
An example of a tool?

00:05:23.240 --> 00:05:23.760
Yeah, yeah.

00:05:23.760 --> 00:05:25.280
Like what kind of tools would you make?

00:05:25.280 --> 00:05:27.980
Like what kind of problems and how would you help people solve them?

00:05:27.980 --> 00:05:32.520
Yeah, that was cool because there was one day in the chat room, somebody said like,

00:05:32.600 --> 00:05:38.720
well, we're getting all these diagnostic bundles from servers and we don't have any tool to do diagnostic on them.

00:05:38.720 --> 00:05:43.900
It's like these lucky moments when you see an opportunity and you can build something big.

00:05:43.900 --> 00:05:53.980
So I started to develop a tool to diagnose these bundles and have a web GUI for engineers to help solve the issues.

00:05:53.980 --> 00:05:57.540
And that tool became pretty big with hundreds of engineers using it.

00:05:57.540 --> 00:05:59.600
And that got me into it.

00:05:59.600 --> 00:06:00.660
And it's still in Python?

00:06:00.660 --> 00:06:02.020
No, that wasn't PHP.

00:06:02.020 --> 00:06:05.540
And later work then was in Perl.

00:06:05.540 --> 00:06:07.760
And that got a bit of a mess.

00:06:07.760 --> 00:06:16.900
So in 2012, I looked at other options, stumbled upon Python, found it very clean and nice.

00:06:16.900 --> 00:06:18.520
And I never looked back.

00:06:18.520 --> 00:06:21.660
So I've been using it for five years now.

00:06:21.660 --> 00:06:25.260
If you look at the graphs of the popularity of Python and the growth of Python,

00:06:25.260 --> 00:06:30.600
there's an amazing article from Stack Overflow called The Incredible Growth of Python.

00:06:30.600 --> 00:06:31.560
And that's super amazing.

00:06:31.560 --> 00:06:35.360
But if you look at where the graph turns sharply up, that's in 2012.

00:06:35.360 --> 00:06:38.800
So you're partly to blame or to credit for that.

00:06:38.800 --> 00:06:39.240
That's awesome.

00:06:39.240 --> 00:06:40.180
Yeah, man.

00:06:41.040 --> 00:06:43.560
So you just like languages with Ps, right?

00:06:43.560 --> 00:06:45.000
PHP, Perl, Python?

00:06:45.000 --> 00:06:48.080
I do like JavaScript a little bit as well.

00:06:48.080 --> 00:06:50.280
Maybe we can put a silent P in there.

00:06:50.280 --> 00:06:53.660
Speaking of Ps, let's talk about PyBytes.

00:06:53.660 --> 00:06:57.880
This is so similar to the name of my other podcast.

00:06:57.880 --> 00:06:59.060
That was so funny.

00:06:59.180 --> 00:07:00.740
There's all these weird coincidences, right?

00:07:00.740 --> 00:07:01.820
There were no Python podcasts.

00:07:01.820 --> 00:07:05.980
And then I released this one like days before podcast init comes out.

00:07:05.980 --> 00:07:07.680
And they're like, we're the first one.

00:07:07.680 --> 00:07:08.500
Wait, no, we're not.

00:07:08.500 --> 00:07:08.800
Why?

00:07:08.800 --> 00:07:11.780
And then, you know, we both released like a similar thing.

00:07:11.780 --> 00:07:13.540
I feel like it was just about the same time, right?

00:07:13.540 --> 00:07:16.720
It was around December last year, I think, right?

00:07:16.720 --> 00:07:17.220
Exactly.

00:07:17.220 --> 00:07:18.380
I think we were in November.

00:07:18.380 --> 00:07:20.140
It was just like crazy.

00:07:20.140 --> 00:07:23.820
So P-Y-B-I-T dot E-S, right?

00:07:23.820 --> 00:07:24.180
Yep.

00:07:24.180 --> 00:07:27.020
It reveals one of the locations, Spain.

00:07:28.340 --> 00:07:28.780
Exactly.

00:07:28.780 --> 00:07:29.860
That's where you are.

00:07:29.860 --> 00:07:30.700
Yeah.

00:07:30.700 --> 00:07:32.480
So you guys tell everyone about it.

00:07:32.480 --> 00:07:33.300
It's a pretty cool resource.

00:07:33.300 --> 00:07:39.820
So PyBytes is a blog where pretty much the bare minimum, we share our passion and love for Python.

00:07:39.820 --> 00:07:40.640
That's it.

00:07:40.640 --> 00:07:42.300
It started because of that.

00:07:42.300 --> 00:07:49.540
Bob and I, we always struggled to work on projects together because of the sheer time difference, time zones, different jobs now.

00:07:49.540 --> 00:07:51.180
And it was just ridiculous.

00:07:51.180 --> 00:07:53.920
So we eventually just bit the bullet and said, you know what?

00:07:53.920 --> 00:07:55.860
Why don't we start a blog together on Python?

00:07:55.860 --> 00:07:57.300
So he knew a lot.

00:07:57.620 --> 00:07:58.660
I didn't know a huge amount.

00:07:58.660 --> 00:08:05.020
And we felt that that gap between our knowledge levels would be an awesome concept for a blog.

00:08:05.020 --> 00:08:09.980
He could do the more complex stuff and I could do the really beginner stuff as I'm learning it.

00:08:10.100 --> 00:08:20.420
So as Bob would be learning some crazy complex concept, he would write these amazing articles on it and I'd be scratching my head going, what the hell are you talking about?

00:08:21.380 --> 00:08:30.960
And then I'd take something that was quite simple to Bob and I would write that in super layman's terms so that anyone could read it and understand it.

00:08:31.020 --> 00:08:33.540
And we had this sort of double whammy approach.

00:08:33.540 --> 00:08:45.880
I think that's really, yeah, that's a super cool idea because I think there's huge value in people who are new to a particular technology like you described yourself, talking about their experiences, explaining what they're learning.

00:08:45.880 --> 00:08:53.220
And there's so many people who are learning what you're learning that they're not necessarily looking for the high end expert analysis of meta classes.

00:08:53.440 --> 00:08:57.560
They want to know how to write a function with default values or, you know, something like this, right?

00:08:57.560 --> 00:08:58.800
And so that's super helpful.

00:08:58.800 --> 00:09:07.620
But then on the other hand, a lot of times that comes up a little bit short and not actually having the right depth, the really the best answer.

00:09:07.620 --> 00:09:10.180
And it feels like you guys could team up on that.

00:09:10.180 --> 00:09:11.140
Did it work that way, Bob?

00:09:11.140 --> 00:09:11.640
Yes.

00:09:11.640 --> 00:09:18.820
And I think it's a nice dynamic between beginner level and Julian making stuff really accessible.

00:09:19.380 --> 00:09:23.540
And me sometimes tackle maybe a bit more advanced topic.

00:09:23.540 --> 00:09:25.860
So, yeah, I think it's a great combination.

00:09:25.860 --> 00:09:31.900
And, yeah, funnily, yesterday we did a code challenge and we made a new one.

00:09:31.900 --> 00:09:35.400
And Julian sent me the beginning and I then tweaked it.

00:09:35.400 --> 00:09:37.560
And he said, well, that's way advanced.

00:09:37.560 --> 00:09:39.160
You do like sort with lambda.

00:09:39.160 --> 00:09:44.940
And that's cool because for some folks, some of the audience do need that more advanced level.

00:09:45.340 --> 00:09:48.980
But some of the folks are still with for loops and variables.

00:09:48.980 --> 00:09:52.000
And, yeah, you really have to take a step back.

00:09:52.000 --> 00:09:53.880
And I think Julian is great at that.

00:09:53.880 --> 00:09:59.720
He made some very accessible articles like on what is a class or how to write a for loop.

00:09:59.720 --> 00:10:03.920
And you notice that a lot of beginning Pythonistas need that.

00:10:03.920 --> 00:10:04.560
That's for sure.

00:10:04.660 --> 00:10:10.760
It's really easy to sort of zoom past the introductory stuff and get to like the excited internals.

00:10:10.760 --> 00:10:14.200
Like, here, let's disassemble this and look at the bytecode and see what it's doing.

00:10:14.200 --> 00:10:17.080
It's like, no, maybe not so much.

00:10:17.080 --> 00:10:19.520
And we got to take a step back.

00:10:19.520 --> 00:10:20.060
Cool.

00:10:20.060 --> 00:10:22.220
So how did you guys meet up?

00:10:22.220 --> 00:10:25.840
You guys are let's talk about some crazy time zone shifting.

00:10:25.840 --> 00:10:27.540
Like the world we live in is so amazing.

00:10:27.540 --> 00:10:28.560
So, Bob, what time is it?

00:10:28.560 --> 00:10:29.340
11 p.m.

00:10:29.340 --> 00:10:31.280
11.15 almost.

00:10:31.280 --> 00:10:31.720
Yeah.

00:10:31.720 --> 00:10:33.660
Julian, what time is it?

00:10:33.660 --> 00:10:35.420
It's 9.15 a.m. on Wednesday.

00:10:35.420 --> 00:10:36.580
Oh, you guys are all wrong.

00:10:36.580 --> 00:10:38.900
It's 2 in the afternoon on Tuesday.

00:10:38.900 --> 00:10:39.820
And you are in the future.

00:10:39.820 --> 00:10:40.260
We made it.

00:10:40.260 --> 00:10:41.220
So that's pretty.

00:10:41.220 --> 00:10:42.240
Yeah, exactly.

00:10:42.240 --> 00:10:44.600
Yes, we got at least 12 more hours.

00:10:44.600 --> 00:10:47.860
So how did you guys meet up across all this time and space?

00:10:47.860 --> 00:10:51.260
So we actually haven't met, believe it or not.

00:10:51.260 --> 00:10:53.340
Probably think I'm lying, but we haven't met in person.

00:10:53.340 --> 00:10:58.280
Back in Sun Microsystems where we both worked, Bob actually, out of the blue,

00:10:58.280 --> 00:11:02.160
randomly wanted to use some machines that I was looking after.

00:11:02.660 --> 00:11:07.360
And we had this conversation and we just, I guess, ended up emailing back and forth.

00:11:07.360 --> 00:11:10.120
And now we're practically married.

00:11:10.120 --> 00:11:11.040
It's crazy.

00:11:11.040 --> 00:11:12.840
Yeah.

00:11:12.840 --> 00:11:15.380
You guys have like deadlines every single day.

00:11:15.380 --> 00:11:17.940
You have to agree on code and whatnot, right?

00:11:17.940 --> 00:11:18.320
Yeah.

00:11:18.320 --> 00:11:19.280
Daily on the phone.

00:11:19.380 --> 00:11:19.840
That's awesome.

00:11:19.840 --> 00:11:25.080
So a lot of Skype or other VoIP stuff and GitHub and things like that.

00:11:25.080 --> 00:11:25.460
Yeah.

00:11:25.460 --> 00:11:28.720
WhatsApp works well for talking.

00:11:28.720 --> 00:11:33.100
And we use Slack also with some more folks of our community.

00:11:33.100 --> 00:11:36.140
And yeah, GitHub for coding.

00:11:36.140 --> 00:11:36.820
Yeah.

00:11:36.820 --> 00:11:37.620
We use a lot of tools.

00:11:37.620 --> 00:11:39.160
It's a great time to live in.

00:11:39.220 --> 00:11:39.940
It totally is.

00:11:39.940 --> 00:11:43.540
For Slack, do you guys have like a PyBytes community?

00:11:43.540 --> 00:11:43.980
Yes.

00:11:43.980 --> 00:11:44.820
That people can join?

00:11:44.820 --> 00:11:45.100
Yes.

00:11:45.100 --> 00:11:45.420
All right.

00:11:45.420 --> 00:11:45.960
Tell us about that.

00:11:46.060 --> 00:11:51.360
So that came around code challenges, which we will discuss in a bit.

00:11:51.760 --> 00:11:58.700
We started to ask people to join Slack to ask questions and share their experiences on the code challenges.

00:11:58.700 --> 00:12:06.860
And yeah, it's a great asset to build a community and get inputs and help people.

00:12:06.860 --> 00:12:07.400
Yeah.

00:12:07.400 --> 00:12:08.140
I think that's really nice.

00:12:08.140 --> 00:12:11.460
So we can put a link to that in the show notes if people want to join up.

00:12:11.460 --> 00:12:11.760
Yeah.

00:12:11.760 --> 00:12:12.120
It'd be cool.

00:12:12.120 --> 00:12:18.220
It's actually really cool because we invited people as they were doing pull requests and the challenges.

00:12:18.220 --> 00:12:20.320
And they're the most dedicated people, right?

00:12:20.820 --> 00:12:24.460
And so we're bringing them in and you get one or two people every few days.

00:12:24.460 --> 00:12:28.560
And now we have this community in there where we sort of back away sometimes.

00:12:28.560 --> 00:12:31.320
And these guys and girls, they just, they help each other.

00:12:31.320 --> 00:12:33.960
They answer their own questions and they have these conversations.

00:12:33.960 --> 00:12:34.700
We'll come back.

00:12:34.700 --> 00:12:38.920
I'll be at work all day and my watch is going nuts with hundreds of messages coming through.

00:12:38.920 --> 00:12:40.940
And I'm thinking, what am I missing out on?

00:12:40.940 --> 00:12:41.400
What's happening?

00:12:41.400 --> 00:12:41.660
Yeah.

00:12:41.660 --> 00:12:43.820
I got to take a lunch break and go see what's going on.

00:12:43.820 --> 00:12:44.240
Nice.

00:12:44.240 --> 00:12:45.860
That's really awesome.

00:12:45.860 --> 00:12:50.740
I mean, I have a Gitter channel for the podcast and a lot of people drop in there and it's similar.

00:12:51.440 --> 00:12:54.380
There's probably more people in your channel because I don't talk about it very much, but

00:12:54.380 --> 00:12:57.620
still it's great when people get in there and share ideas and help each other.

00:12:57.620 --> 00:12:58.180
Yeah, totally.

00:12:58.180 --> 00:12:58.600
All right.

00:12:58.600 --> 00:12:59.560
It's code challenge.

00:12:59.560 --> 00:13:00.960
So a hundred days of code.

00:13:00.960 --> 00:13:04.780
Bob, tell us what the general idea of this is.

00:13:04.780 --> 00:13:05.960
I have to get his name right.

00:13:05.960 --> 00:13:11.960
I think it was Alex Calloway who invented the challenge for JavaScript and promoting coding

00:13:11.960 --> 00:13:12.400
in general.

00:13:12.400 --> 00:13:15.020
It's about a hundred days in a row.

00:13:15.020 --> 00:13:18.520
Share your coding, share what you're doing, whatever it is.

00:13:18.520 --> 00:13:21.220
Do an hour a day and be responsible.

00:13:21.220 --> 00:13:22.980
Do a tweet out what you did.

00:13:23.340 --> 00:13:28.480
So you see a lot of tweets with a hashtag, a hundred days of code, and people share scripts

00:13:28.480 --> 00:13:32.120
or if they did a tutorial or whatever they did, but it's one hour a day.

00:13:32.120 --> 00:13:37.440
And we gave it a little twist of do actually a script a day, which we shot ourselves a little

00:13:37.440 --> 00:13:38.300
bit in the foot there.

00:13:38.300 --> 00:13:41.000
Tell us what happened.

00:13:41.000 --> 00:13:42.980
Is it like a little more than an hour or what happened?

00:13:43.080 --> 00:13:47.540
A lot of scripts were pretty basic and yeah, can use some refactoring and were within the

00:13:47.540 --> 00:13:50.060
hour, but sometimes it does not because typically happens.

00:13:50.060 --> 00:13:53.740
You start to build something cool and you really want to tweak it.

00:13:53.740 --> 00:13:55.400
And yeah, it can be more.

00:13:55.400 --> 00:13:59.940
But on the flip side, and we will go into a couple of scripts shortly.

00:13:59.940 --> 00:14:06.220
Yeah, we were picking our favorites for the show and we went through the logs and it's like

00:14:06.220 --> 00:14:07.660
a couple of months ago now.

00:14:07.660 --> 00:14:09.260
And we were like, did we do all this coding?

00:14:09.260 --> 00:14:12.500
It was like 5,000 lines of code in a hundred days.

00:14:12.860 --> 00:14:14.220
Well, between the two of us.

00:14:14.220 --> 00:14:18.160
So yeah, even and uneven days, but still we did so much.

00:14:18.160 --> 00:14:19.460
That was really cool.

00:14:19.460 --> 00:14:22.320
Julian, do you feel like you said you were a little newer at Python?

00:14:22.320 --> 00:14:27.620
Do you feel like this gave you some experience with Python in ways that maybe projects you're

00:14:27.620 --> 00:14:28.320
working on wouldn't?

00:14:28.320 --> 00:14:28.920
Oh, totally.

00:14:28.920 --> 00:14:32.120
Well, first of all, it absolutely destroyed me in a good way.

00:14:32.120 --> 00:14:34.260
It was just insane, right?

00:14:34.260 --> 00:14:36.880
We were coding every day as it was for PyBytes.

00:14:36.880 --> 00:14:40.880
So to suddenly say, well, we can do a hundred days.

00:14:40.880 --> 00:14:43.900
It was almost, well, we're already doing it.

00:14:43.900 --> 00:14:44.600
So what's the point?

00:14:44.600 --> 00:14:47.340
So that's when we started, said, well, what if we made a script?

00:14:47.340 --> 00:14:54.120
And that just took me from one level to maybe five levels above, you know, because I was

00:14:54.120 --> 00:14:56.160
forced to not only learn something.

00:14:56.160 --> 00:14:58.980
So it's not just watching a video or reading a doc or something.

00:14:59.060 --> 00:15:04.480
It was learn it, apply it, make it functional and have it actually do something that you

00:15:04.480 --> 00:15:05.400
can then share out.

00:15:05.400 --> 00:15:11.240
And someone can, you know, clone that from GitHub and have a running script that does something.

00:15:11.240 --> 00:15:11.920
That's really awesome.

00:15:11.920 --> 00:15:16.100
So you kind of put a little twist on it and just not just, I wrote some code.

00:15:16.100 --> 00:15:19.720
I have a code streak for a hundred days or whatever you want to call it.

00:15:20.160 --> 00:15:25.780
It's, I created 100 working little baby applications in a hundred days, right?

00:15:25.780 --> 00:15:26.500
And that was nuts.

00:15:26.500 --> 00:15:29.520
So we'll talk about the details of them in a minute.

00:15:29.520 --> 00:15:32.820
But Bob, can you just touch on like some of the things you got to play with?

00:15:32.820 --> 00:15:37.940
Like, did you get to play with a SQLAlchemy or TinyDB or, you know, things like this?

00:15:37.940 --> 00:15:38.280
Yeah.

00:15:38.280 --> 00:15:38.860
Oh, goodness.

00:15:38.860 --> 00:15:39.540
Yeah.

00:15:39.540 --> 00:15:40.980
SQLAlchemy was there.

00:15:40.980 --> 00:15:43.900
We will have some examples shortly.

00:15:44.100 --> 00:15:49.920
But we did some stats and I think we actually used exactly 100 modules, which was like a

00:15:49.920 --> 00:15:52.440
weird coincidence, 100 days, 100 modules.

00:15:52.440 --> 00:15:55.720
And I think like 40% or so was from PyPI.

00:15:55.720 --> 00:15:57.780
So it was a lot of external stuff as well.

00:15:57.780 --> 00:16:04.800
We discovered maps, plot cities on maps and a lot of APIs, web development, all kinds of

00:16:04.800 --> 00:16:05.100
stuff.

00:16:05.100 --> 00:16:09.900
And, you know, we have a lot of snippets there now, so we can go back and there's tools we

00:16:09.900 --> 00:16:10.840
use till this day.

00:16:11.200 --> 00:16:15.540
There were foundations in there with Twilio API that led to a guest post for the Twilio

00:16:15.540 --> 00:16:15.940
blog.

00:16:15.940 --> 00:16:19.200
There are Slack bots in there we use on our Slack today.

00:16:19.200 --> 00:16:21.720
Twitter automation we run today.

00:16:21.720 --> 00:16:23.520
It's pretty cool.

00:16:23.520 --> 00:16:25.920
Yeah, that's really, really awesome, actually.

00:16:25.920 --> 00:16:31.340
I feel like you could get a bunch of ideas of like almost products or things that you could

00:16:31.340 --> 00:16:34.740
create if you were willing to like put a few months into one of them, right?

00:16:34.740 --> 00:16:35.160
Totally.

00:16:35.160 --> 00:16:36.000
Exactly.

00:16:36.000 --> 00:16:38.000
And it's not about perfectionism.

00:16:38.940 --> 00:16:41.400
It's about doing these quick prototypes.

00:16:41.400 --> 00:16:42.620
Just get coding.

00:16:42.620 --> 00:16:47.240
You know, I mean, if you think about having the perfect script, you don't get it.

00:16:47.240 --> 00:16:49.540
You're not getting to do it.

00:16:49.540 --> 00:16:49.780
Yeah.

00:16:49.780 --> 00:16:54.300
I've known a lot of people who are in some people who are in programming who spend too much

00:16:54.300 --> 00:16:58.560
time worrying about getting things just right and not just going, I'm going to write this.

00:16:58.560 --> 00:17:00.020
And if I have to, I'll refactor it.

00:17:00.020 --> 00:17:03.640
And if like it's the worst case scenario, I'll just rewrite it knowing a lot more than I did

00:17:03.640 --> 00:17:04.280
the first time.

00:17:04.280 --> 00:17:09.300
You know, I feel like some people kind of get frozen during the headlights for big projects

00:17:09.300 --> 00:17:13.000
and just not really wanting to start being afraid of going the wrong direction.

00:17:14.880 --> 00:17:17.920
This portion of Talk Python To Me has been brought to you by Rollbar.

00:17:17.920 --> 00:17:21.600
One of the frustrating things about being a developer is dealing with errors.

00:17:21.600 --> 00:17:22.080
Ugh.

00:17:22.080 --> 00:17:27.520
Relying on users to report errors, digging through log files, trying to debug issues, or getting

00:17:27.520 --> 00:17:30.600
millions of alerts just flooding your inbox and ruining your day.

00:17:30.600 --> 00:17:35.380
With Rollbar's full stack error monitoring, you get the context, insight, and control you

00:17:35.380 --> 00:17:37.340
need to find and fix bugs faster.

00:17:37.340 --> 00:17:41.360
Adding Rollbar to your Python app is as easy as pip install Rollbar.

00:17:41.560 --> 00:17:45.580
You can start tracking production errors and deployments in eight minutes or less.

00:17:45.580 --> 00:17:49.760
Are you considering self-hosting tools for security or compliance reasons?

00:17:49.760 --> 00:17:53.340
Then you should really check out Rollbar's compliant SaaS option.

00:17:53.340 --> 00:17:58.480
Get advanced security features and meet compliance without the hassle of self-hosting, including

00:17:58.480 --> 00:18:02.720
HIPAA, ISO 27001, Privacy Shield, and more.

00:18:02.720 --> 00:18:04.100
They'd love to give you a demo.

00:18:04.100 --> 00:18:05.800
Give Rollbar a try today.

00:18:05.800 --> 00:18:09.480
Go to talkpython.fm/Rollbar and check them out.

00:18:10.080 --> 00:18:14.180
Julian, I guess this probably helps you just learn to just like, okay, you have to write.

00:18:14.180 --> 00:18:15.880
It is 11 o'clock at night.

00:18:15.880 --> 00:18:17.260
I have one hour left.

00:18:17.260 --> 00:18:18.160
I have to write, yeah?

00:18:18.160 --> 00:18:19.100
Yeah, that was it.

00:18:19.100 --> 00:18:22.700
It wasn't sit there and plan it and storyboard it or something.

00:18:22.700 --> 00:18:25.380
It was just, okay, what's the first thing we need for this app?

00:18:25.380 --> 00:18:26.740
Okay, it needs to output this data.

00:18:26.740 --> 00:18:28.320
Just write your prints.

00:18:28.320 --> 00:18:29.320
Write your for loops.

00:18:29.320 --> 00:18:30.760
Create your databases.

00:18:31.600 --> 00:18:32.720
And it wasn't perfect.

00:18:32.720 --> 00:18:33.640
It was tough.

00:18:33.640 --> 00:18:37.680
You know, there were some nights we'd be up till, you know, one in the morning with waking

00:18:37.680 --> 00:18:39.200
up at 530 because I have kids.

00:18:39.200 --> 00:18:41.380
And you'd be a wreck.

00:18:41.380 --> 00:18:45.720
And the only positive, the light at the end of the tunnel was seeing that countdown to the

00:18:45.720 --> 00:18:45.960
end.

00:18:45.960 --> 00:18:48.680
And knowing that you had a gap in between.

00:18:49.000 --> 00:18:53.280
So you could, you almost had two days to write the script, but you were writing across both

00:18:53.280 --> 00:18:53.660
days.

00:18:53.660 --> 00:18:56.640
And it was just...

00:18:56.640 --> 00:19:01.240
The other good thing is we probably spent, not spent, we probably save a couple of months

00:19:01.240 --> 00:19:03.200
of Netflix because I probably canceled it.

00:19:03.200 --> 00:19:07.120
Yeah, I was behind on all my Marvel TV.

00:19:07.120 --> 00:19:08.060
Yeah.

00:19:08.060 --> 00:19:10.360
Yeah, I sort of view programming as my gaming.

00:19:10.360 --> 00:19:13.740
Like I used to play things like Counter-Strike and games and whatnot.

00:19:13.740 --> 00:19:18.440
And now if I have an extra two hours, I'm like, oh, what feature can I add to my like

00:19:18.440 --> 00:19:19.300
training website?

00:19:19.300 --> 00:19:21.260
Or what other kind of thing could I create?

00:19:21.260 --> 00:19:24.640
Like, I bet I can do that in two hours, you know, and it becomes kind of a game as well.

00:19:24.640 --> 00:19:27.220
It's becoming like watching series.

00:19:27.220 --> 00:19:28.260
It's kind of relaxing.

00:19:28.260 --> 00:19:33.160
And yeah, the more you build, the more projects you have and the more features or stuff you

00:19:33.160 --> 00:19:34.340
want to add or fix.

00:19:34.340 --> 00:19:37.140
So yeah, it's kind of a lost game.

00:19:37.140 --> 00:19:39.020
For sure.

00:19:39.020 --> 00:19:39.960
All right.

00:19:39.960 --> 00:19:43.180
So let's talk about some of these particular challenges.

00:19:43.180 --> 00:19:45.120
You guys did 100 days of code.

00:19:45.120 --> 00:19:47.760
So 100 scripts, as you described it.

00:19:47.880 --> 00:19:50.700
And I asked you to pick 10 that you thought would be fun to talk about.

00:19:50.700 --> 00:19:53.400
So this is just a 10% sampling, right?

00:19:53.400 --> 00:19:55.260
This is not exhaustive by any measure.

00:19:55.260 --> 00:19:58.620
So Julian, want to start on day 51?

00:19:58.620 --> 00:19:59.020
Okay.

00:19:59.020 --> 00:20:04.600
So day 51, I chose this one because it had to do with the request module, which was one

00:20:04.600 --> 00:20:07.660
of the first modules I dealt with when I started learning.

00:20:07.660 --> 00:20:09.860
Because I wanted to scrape websites, right?

00:20:09.860 --> 00:20:11.340
And that was the way to get into it.

00:20:11.660 --> 00:20:16.180
One thing I remember back in the day that I was struggling with was how to deal with a

00:20:16.180 --> 00:20:17.640
website that had a login prompt.

00:20:17.640 --> 00:20:19.240
I was like, well, this is impossible.

00:20:19.240 --> 00:20:20.000
You can't do it.

00:20:20.000 --> 00:20:20.640
There's no way.

00:20:20.640 --> 00:20:20.840
Yeah.

00:20:20.840 --> 00:20:25.440
You can't do a get against that because it redirects you 301 over to this login page.

00:20:25.440 --> 00:20:25.980
Forget it.

00:20:25.980 --> 00:20:26.260
Exactly.

00:20:26.260 --> 00:20:26.740
Screw that.

00:20:26.840 --> 00:20:28.300
I don't need that data.

00:20:28.300 --> 00:20:29.300
Who needs it?

00:20:29.300 --> 00:20:31.380
So I was struggling.

00:20:31.380 --> 00:20:35.540
And again, for this 100 days, probably one of the complex things was coming up with ideas.

00:20:36.240 --> 00:20:41.380
And just I remembered that pain point and I Googled it and I found out, oh, you can actually

00:20:41.380 --> 00:20:42.500
log in with requests.

00:20:42.500 --> 00:20:43.380
What the hell is this?

00:20:43.380 --> 00:20:45.060
You know, so I can't believe it.

00:20:45.060 --> 00:20:46.280
So then I started playing with it.

00:20:46.280 --> 00:20:52.440
And next thing you know, I was writing a script to log into my freecycle.org account, which

00:20:52.440 --> 00:20:55.800
is like an eBay thing, but everything's free.

00:20:56.320 --> 00:21:02.760
And I was able to log into it, scrape my current ads and then save them, you know, report that

00:21:02.760 --> 00:21:07.240
data and save it back to a database, you know, and it was just a simple script.

00:21:07.240 --> 00:21:12.960
But the challenge of logging into something using a script was just mind blowing for me.

00:21:12.960 --> 00:21:13.640
That's really cool.

00:21:13.640 --> 00:21:16.220
So I, you know, I know that you can do that with requests.

00:21:16.220 --> 00:21:21.160
I know you can do posts and puts and deletes and all those kinds of things and headers, but

00:21:21.160 --> 00:21:25.820
maybe walk us through what is the process of like carrying over the session, right?

00:21:25.820 --> 00:21:30.780
So you go find the logging page, you put the body of like username, password, you do a

00:21:30.780 --> 00:21:31.160
post.

00:21:31.160 --> 00:21:36.300
Would you get back a cookie and have to carry that over to the next request?

00:21:36.300 --> 00:21:37.260
Do you remember how that went?

00:21:37.260 --> 00:21:37.540
Yeah.

00:21:37.540 --> 00:21:42.200
Essentially you have this payload as it's called, and you have to input your username and password

00:21:42.200 --> 00:21:44.940
into it and you do a post.

00:21:44.940 --> 00:21:51.700
The crazy thing here was that you had to investigate the URLs that you need to send this data to because

00:21:51.700 --> 00:21:53.260
you can't just send it to the page.

00:21:53.260 --> 00:21:58.140
You have to go into the background and look for their, I guess their login post request

00:21:58.140 --> 00:21:58.480
URL.

00:21:58.480 --> 00:22:06.000
And then I was able to send that data, that payload data to that using requests.

00:22:06.000 --> 00:22:09.820
And then you get back your session so you can log in.

00:22:09.820 --> 00:22:11.340
And it was, it's just crazy.

00:22:11.500 --> 00:22:12.060
That's pretty awesome.

00:22:12.060 --> 00:22:13.360
Nice.

00:22:13.360 --> 00:22:13.620
Okay.

00:22:13.620 --> 00:22:15.020
That one sounds like a really fun one.

00:22:15.020 --> 00:22:19.220
And it's like, you took this idea that you kind of already had more or less down like request,

00:22:19.220 --> 00:22:21.420
beautiful soup, CSS selectors.

00:22:21.420 --> 00:22:22.040
We're going to do this.

00:22:22.040 --> 00:22:26.620
Oh, wait, here's this next level that I need to like jump over.

00:22:26.620 --> 00:22:27.960
And, you know, it's really cool.

00:22:27.960 --> 00:22:30.820
He took one of these challenges and opportunity to do that.

00:22:30.820 --> 00:22:31.220
Yeah.

00:22:31.220 --> 00:22:31.700
Yeah.

00:22:31.700 --> 00:22:32.580
It was, it was awesome.

00:22:32.720 --> 00:22:35.000
And then, you know, you, you learn stuff along the way.

00:22:35.000 --> 00:22:40.880
So then it was quite simple to take that data and chuck it into a SQL light database, you

00:22:40.880 --> 00:22:41.920
know, nice and easy.

00:22:41.920 --> 00:22:42.620
Yeah, definitely.

00:22:42.620 --> 00:22:44.660
That's nice and easy for sure.

00:22:44.660 --> 00:22:46.800
Bob, how about yours?

00:22:46.800 --> 00:22:47.960
What one do you want to talk about?

00:22:48.040 --> 00:22:52.280
The very first script I did and day number one, and we were still full of ideas.

00:22:52.280 --> 00:22:56.600
So there's a handle at Python underscore tip.

00:22:56.600 --> 00:22:58.400
You might have heard of them.

00:22:58.400 --> 00:23:05.360
They do a daily tweet of a trick or tip in Python, pretty scientific, but they have some very good

00:23:05.360 --> 00:23:07.260
tips and get a great following.

00:23:07.260 --> 00:23:15.760
The way you submit tips to them is via a Google doc, which goes into a spreadsheet or CSV downloadable.

00:23:16.120 --> 00:23:20.340
But there was not really a way to see if, if a tip was already submitted.

00:23:20.340 --> 00:23:25.200
So you don't want to clutter their database or spreadsheet with duplicate tips.

00:23:25.200 --> 00:23:34.020
So I made a little script to just probably request, get the CSV, which is just a public URL, parse

00:23:34.020 --> 00:23:38.700
it in some data structure and just from the command line, you give it one or more strings.

00:23:38.700 --> 00:23:43.300
And then it's just a little CLI script.

00:23:43.300 --> 00:23:49.100
And it then tells you if the string you're looking for, it shows you the tips that has that string in them.

00:23:49.100 --> 00:23:53.660
So you can just say, oh, OK, they have like already five Ether tools tips.

00:23:53.660 --> 00:23:56.920
The one I'm about to submit is pretty similar, so I don't do it.

00:23:56.920 --> 00:23:59.080
And the fun thing is, right, exactly.

00:23:59.080 --> 00:24:04.420
That was also a nice example of like meeting other developers because then we reached out

00:24:04.420 --> 00:24:05.480
to them, hey, make this script.

00:24:05.480 --> 00:24:06.820
This can be helpful for you.

00:24:07.300 --> 00:24:12.100
And then they, at the submit form, they then linked to the script that people could download

00:24:12.100 --> 00:24:12.660
that script.

00:24:12.660 --> 00:24:17.580
I even made a one-liner wrapper that you can do it with a bash, Wget or whatever.

00:24:17.580 --> 00:24:20.840
Just do one command, even if you don't have the script locally.

00:24:20.840 --> 00:24:22.800
And yeah, they linked to it.

00:24:22.900 --> 00:24:27.040
So it was a little bit also for the community if somebody wanted to use that.

00:24:27.040 --> 00:24:28.140
Yeah.

00:24:28.140 --> 00:24:29.480
And then we stayed in touch.

00:24:29.480 --> 00:24:36.980
And later we reached out to Python tip again to do more, to actually associate two code challenges

00:24:36.980 --> 00:24:39.000
to the great collection of tips they have.

00:24:39.000 --> 00:24:44.260
So that was kind of a nice script, but also like meeting other developers.

00:24:44.260 --> 00:24:44.540
Yeah.

00:24:44.540 --> 00:24:50.400
I think the ability to reach out to people and form these connections is really powerful.

00:24:50.700 --> 00:24:55.520
You know, that's sort of because GitHub makes it so easy, right?

00:24:55.520 --> 00:24:59.200
Like it's super easy to connect with people and things like Twitter and so on.

00:24:59.200 --> 00:25:01.540
It's always been there, but it's really great.

00:25:01.540 --> 00:25:05.400
And it's like one afternoon of work or something.

00:25:05.400 --> 00:25:10.420
You've got this little script and now you've got this connection with someone else doing cool,

00:25:10.420 --> 00:25:11.280
similar stuff, right?

00:25:11.280 --> 00:25:11.620
Yeah.

00:25:11.620 --> 00:25:12.720
Yeah, that's awesome.

00:25:12.720 --> 00:25:13.520
Yeah, for sure.

00:25:13.520 --> 00:25:15.900
Julian, take us back to day 25.

00:25:15.900 --> 00:25:16.160
All right.

00:25:16.160 --> 00:25:16.860
So we're going backwards.

00:25:16.860 --> 00:25:18.780
You're talking about SQLite before, yeah?

00:25:18.780 --> 00:25:20.080
Yeah, yeah.

00:25:20.140 --> 00:25:25.780
So this one, one of the first things I learned with the whole 100 days thing was to use SQLite.

00:25:25.780 --> 00:25:29.920
So over the years, I remember seeing people using SQL databases.

00:25:29.920 --> 00:25:32.840
I'm going, I have no idea what I'm looking at here.

00:25:32.840 --> 00:25:34.320
You guys must be.

00:25:34.320 --> 00:25:38.820
Yeah, it's so painful to set up and I need a server and the credentials and come on.

00:25:38.820 --> 00:25:40.240
Yeah, exactly.

00:25:40.240 --> 00:25:41.360
I don't have time for that.

00:25:41.360 --> 00:25:41.520
No.

00:25:41.520 --> 00:25:44.000
It was always one thing that I wanted to do.

00:25:44.000 --> 00:25:47.140
You know, I saw it and I thought this must be such an amazing skill to have.

00:25:47.140 --> 00:25:48.240
These people are wizards.

00:25:48.240 --> 00:25:49.740
I don't know how they do it, you know?

00:25:49.740 --> 00:25:56.620
And so I learned SQLite 3 using Python and just starting off nice and simple database and

00:25:56.620 --> 00:25:58.840
names, you know, the usual stuff you might start off with.

00:25:59.200 --> 00:26:04.900
But then as I was making more things where I wanted to store that data, I was getting really

00:26:04.900 --> 00:26:08.120
annoyed that I had to keep setting up this database manually.

00:26:08.120 --> 00:26:13.200
And this is one of my favorite things about the 100 days is that I ended up creating a whole

00:26:13.200 --> 00:26:18.280
bunch of little scripts that automate these tiny little repetitive processes.

00:26:18.280 --> 00:26:19.280
And this is one of them.

00:26:19.280 --> 00:26:26.460
So day 25, I created a script that generates a test SQLite database.

00:26:27.120 --> 00:26:29.660
So the sort of Python code.

00:26:29.660 --> 00:26:30.760
See, I've prepared now.

00:26:30.760 --> 00:26:31.960
I've got it up here on the screen.

00:26:31.960 --> 00:26:38.540
The Python for the sort of generic database format that I might like with, say, three text

00:26:38.540 --> 00:26:40.220
columns and one integer column.

00:26:40.220 --> 00:26:43.140
That was just a very generic test one that I was creating.

00:26:43.140 --> 00:26:45.460
And this will create that.

00:26:45.460 --> 00:26:49.800
You just run this command and it prompts you to ask for the name of your database.

00:26:49.800 --> 00:26:50.860
And that's it.

00:26:50.860 --> 00:26:51.680
Just creates it.

00:26:51.680 --> 00:26:52.120
Oh, nice.

00:26:52.420 --> 00:26:53.980
Yeah, that's how I started it.

00:26:53.980 --> 00:26:55.040
So I have expanded it.

00:26:55.040 --> 00:26:56.280
I haven't updated the code on GitHub.

00:26:56.280 --> 00:26:57.260
Shame on me.

00:26:57.260 --> 00:27:01.840
Where it asks you then to name your columns and the name of your table.

00:27:01.840 --> 00:27:05.040
So it walks you through a little almost wizard to set it up.

00:27:05.040 --> 00:27:07.000
So that was that one.

00:27:07.000 --> 00:27:11.060
It was actually a lot of fun because then after that, I could just use that every time.

00:27:11.060 --> 00:27:15.320
Yeah, this is one of the harder things to work in with SQLite is if you map something

00:27:15.320 --> 00:27:21.480
like SQLAlchemy to it, then you can just say, you know, create all tables right on the

00:27:21.480 --> 00:27:23.300
models you're mapping and it just does it.

00:27:23.300 --> 00:27:27.800
But if you don't want to use that, you're like, oh, well, I got to do all the DDL like

00:27:27.800 --> 00:27:30.500
creation syntax and all that kind of stuff.

00:27:30.500 --> 00:27:32.400
So this is a nice little thing to have.

00:27:32.400 --> 00:27:33.760
Yeah, it was very useful.

00:27:33.760 --> 00:27:36.200
The SQLAlchemy that's coming next.

00:27:36.200 --> 00:27:38.720
That's a good one.

00:27:38.720 --> 00:27:42.900
And by the way, if you're listening and you want to follow along, I'll have the link to

00:27:42.900 --> 00:27:45.540
your GitHub repository.

00:27:45.540 --> 00:27:47.540
That's the 100 days of code.

00:27:47.540 --> 00:27:50.000
So every one of these is just numbered by day.

00:27:50.620 --> 00:27:56.800
So it's github.com/pybytes, P-Y-B-I-T-S, 100 days of slash 100 days of code.

00:27:56.800 --> 00:27:58.420
So you guys can follow along.

00:27:58.420 --> 00:27:59.400
It has the numbers right there.

00:27:59.400 --> 00:28:00.700
All right, Bob.

00:28:00.700 --> 00:28:05.400
One of the challenges, if you want to do any sort of testing is external dependencies, right?

00:28:05.400 --> 00:28:06.500
Especially APIs.

00:28:06.500 --> 00:28:09.720
And if they're like rate limited or something, it's even worse.

00:28:09.720 --> 00:28:12.100
Or if they're going to make modifying changes like post something.

00:28:12.620 --> 00:28:16.900
So your number 81 has some cool examples of how to get around this, right?

00:28:16.900 --> 00:28:17.520
Exactly.

00:28:17.520 --> 00:28:19.620
That's the problem with external APIs.

00:28:19.620 --> 00:28:23.000
You don't want to call them over and over again when you run your test.

00:28:23.720 --> 00:28:32.460
So I spent one day looking at unit test mock patch to mock test the T-PY API.

00:28:32.460 --> 00:28:40.180
And yeah, I managed to do a little script to populate some fake data and do the patch object

00:28:40.180 --> 00:28:41.120
decorator.

00:28:41.120 --> 00:28:44.000
Kind of fake the call to the T-PY API.

00:28:45.120 --> 00:28:47.980
And yeah, that worked out pretty well.

00:28:47.980 --> 00:28:52.780
It was not a critical script, but that's really where you do the coding just for the sake of

00:28:52.780 --> 00:28:53.220
practice.

00:28:53.220 --> 00:28:57.260
Because the original script was just a funny who tweeted what.

00:28:57.260 --> 00:29:02.040
Because somebody on Twitter asked like, okay, so whom I'm talking to?

00:29:02.040 --> 00:29:03.340
It's PyBites.

00:29:03.340 --> 00:29:04.520
Is this Julian or Bob?

00:29:04.520 --> 00:29:09.880
So we made a little script that based on the location of the tweet, it would then return

00:29:09.880 --> 00:29:12.940
Bob or Julian because Julian is in Australia and Spain.

00:29:12.940 --> 00:29:14.080
Oh, yeah, that's awesome.

00:29:14.180 --> 00:29:16.100
So you can just test by the geolocation.

00:29:16.100 --> 00:29:17.260
Nice.

00:29:17.260 --> 00:29:17.660
Exactly.

00:29:17.660 --> 00:29:22.960
So I took this example to show that you can just go like random stuff.

00:29:22.960 --> 00:29:25.240
It can be funny and just get practice.

00:29:25.240 --> 00:29:33.040
But then who tweeted script then actually raised this second need to practice mocking and how

00:29:33.040 --> 00:29:34.100
to test an external API.

00:29:34.100 --> 00:29:35.760
So that was then a second script.

00:29:35.760 --> 00:29:37.860
So one script follows the other.

00:29:37.860 --> 00:29:38.900
So that's the nice thing.

00:29:38.900 --> 00:29:39.700
Just get started.

00:29:39.700 --> 00:29:43.860
And yeah, you might be afraid that you don't get to the 100, but you will.

00:29:44.120 --> 00:29:45.420
Yeah, that's awesome.

00:29:46.500 --> 00:29:49.860
This portion of Talk Python To Me was brought to you by GoCD.

00:29:49.860 --> 00:29:55.920
GoCD is an on-premise, open source, continuous delivery tool to help you get better visibility

00:29:55.920 --> 00:29:58.600
into and control of your team's deployments.

00:29:58.600 --> 00:30:03.820
With GoCD's comprehensive pipeline modeling, you can model complex workflows for multiple

00:30:03.820 --> 00:30:05.160
teams with ease.

00:30:05.580 --> 00:30:10.780
And GoCD's value stream map lets you track changes from commit to deploy at a glance.

00:30:10.780 --> 00:30:14.960
Say goodbye to deployment panic and hello to consistent, predictable deliveries.

00:30:14.960 --> 00:30:19.300
We all know that continuous integration is super important to the code quality of your applications.

00:30:19.300 --> 00:30:22.920
Choose the open source local CI server, GoCD.

00:30:23.440 --> 00:30:26.740
Learn more at talkpython.fm/GoCD.

00:30:26.740 --> 00:30:29.500
That's talkpython.fm/GoCD.

00:30:29.500 --> 00:30:34.860
So maybe really quickly tell people about the patch.object decorator.

00:30:34.860 --> 00:30:40.760
So this is a decorator that you can put on any block of code, but typically maybe write

00:30:40.760 --> 00:30:42.560
on a particular unit test method.

00:30:42.560 --> 00:30:42.940
Yes.

00:30:43.060 --> 00:30:49.520
And it will reach deep down inside and change the implementation of some part of probably

00:30:49.520 --> 00:30:51.420
that API or really whatever you pointed out, right?

00:30:51.420 --> 00:30:52.580
Like time, for example.

00:30:52.580 --> 00:30:53.000
Yes.

00:30:53.000 --> 00:31:00.440
So it has been a while this script, but the decorator wraps a unit test method and it calls

00:31:00.440 --> 00:31:02.940
the CPI API, so the original method.

00:31:02.940 --> 00:31:09.420
But you're kind of replacing the original get status method of that API with, you give it a

00:31:09.420 --> 00:31:13.680
return value, which is then the fake data defined in the main body of the script.

00:31:13.680 --> 00:31:20.500
So it's like I'm faking calling that API, returning my own data, and I'm not making the network

00:31:20.500 --> 00:31:20.940
call.

00:31:20.940 --> 00:31:22.760
That's basically what it's doing.

00:31:22.760 --> 00:31:23.660
Yeah, that's super cool.

00:31:23.660 --> 00:31:24.020
Yeah.

00:31:24.020 --> 00:31:24.320
Yeah.

00:31:24.320 --> 00:31:24.840
Very nice.

00:31:24.840 --> 00:31:25.360
Let's see.

00:31:25.360 --> 00:31:27.620
Next up, Julian, Word Scramble.

00:31:27.620 --> 00:31:29.120
Tell us about the Word Scramble one.

00:31:29.120 --> 00:31:29.480
All right.

00:31:29.480 --> 00:31:31.820
So let me just say a quick disclaimer.

00:31:31.820 --> 00:31:36.980
I'm not a cheater at Words with Friends, but I may have used this one.

00:31:36.980 --> 00:31:37.960
But if one were to.

00:31:38.480 --> 00:31:42.360
But if someone was to play Words with Friends, this might be helpful.

00:31:42.360 --> 00:31:46.740
So I remember, you know, back in the day, playing Words with Friends a lot.

00:31:46.740 --> 00:31:52.660
There were people who would use these little apps on their iPhone to put the letters in

00:31:52.660 --> 00:31:57.600
and it would unscramble that into a whole dictionary list of possibilities.

00:31:57.600 --> 00:31:58.160
Right.

00:31:58.160 --> 00:32:00.940
And that was the inspiration for this.

00:32:00.940 --> 00:32:02.200
Not that I ever used one of those.

00:32:02.200 --> 00:32:02.400
Right.

00:32:02.400 --> 00:32:03.260
That would be wrong.

00:32:03.260 --> 00:32:04.780
You shouldn't do that.

00:32:04.780 --> 00:32:08.180
So if I've ever beaten anyone with Words with Friends, I wasn't using this.

00:32:08.180 --> 00:32:11.460
So the idea is that it's exactly just that.

00:32:11.460 --> 00:32:16.700
I just Googled a standard dictionary.txt, just the whole dictionary and text file.

00:32:17.440 --> 00:32:35.200
And yeah, I used itatools permutations to then read in the words that you will enter into this app and compare it to the dictionary and then come up with whatever valid words you could make out of that series of letters that you enter.

00:32:36.240 --> 00:32:36.720
And that was it.

00:32:36.720 --> 00:32:38.860
It's simple in concept.

00:32:38.860 --> 00:32:40.780
It actually took me a while.

00:32:40.780 --> 00:32:44.880
I ended up calling Bob on this one and saying, oh, man, what am I doing wrong?

00:32:44.880 --> 00:32:46.120
You know, and I showed him the code.

00:32:46.120 --> 00:32:49.420
And this is the beauty of the whole PyBytes relationship, right?

00:32:49.420 --> 00:32:51.920
And I told you, like, AetherTools, permutations.

00:32:51.920 --> 00:32:53.020
Dude, you're growing.

00:32:53.020 --> 00:32:56.240
I mean, look where you are.

00:32:56.240 --> 00:32:56.800
This is awesome.

00:32:56.800 --> 00:32:59.540
Yeah, this is super cool.

00:32:59.540 --> 00:33:02.380
It would have been an ugly for loop, I think, when I started.

00:33:02.380 --> 00:33:13.820
Yeah, I think that's one of the things that you have to learn as you get better in Python is I probably could implement this algorithm or I could probably pip install this algorithm.

00:33:13.820 --> 00:33:15.000
So let's do that instead.

00:33:15.000 --> 00:33:16.620
I mean, I know AetherTools is built in.

00:33:16.620 --> 00:33:25.320
But yeah, just knowing the stuff that you can use, like the pre-built things like AetherTools permutations, rather than going, well, how do I implement a permutation?

00:33:25.320 --> 00:33:27.680
Well, let me think about like a nested loop, right?

00:33:27.680 --> 00:33:31.860
Yeah, well, on that, one of the worst things is you'll spend time on something.

00:33:31.860 --> 00:33:37.720
And then 10 minutes later or even 10 days later, someone like Bob goes, why don't you just use permutations?

00:33:37.720 --> 00:33:41.740
And you'll be like, oh, there's a permutations.

00:33:41.740 --> 00:33:42.900
This existed?

00:33:42.900 --> 00:33:43.800
Damn it.

00:33:43.800 --> 00:33:46.100
Yeah, exactly.

00:33:46.100 --> 00:33:53.240
That's never ending because even if you think you have some Pythonic tricks up your sleeves, there's always more.

00:33:53.240 --> 00:33:56.240
There's so many constructs still learning.

00:33:56.660 --> 00:33:57.980
Sure, there's a bunch built in.

00:33:57.980 --> 00:34:01.620
I feel like a lot of them live in AetherTools and Functools and those sorts of things.

00:34:01.620 --> 00:34:06.440
But just also, there's 120,000 plus on PyPI, right?

00:34:06.440 --> 00:34:09.460
Like if you run out of standard library tricks, there's a few more out there.

00:34:09.460 --> 00:34:09.880
Indeed.

00:34:09.880 --> 00:34:10.260
Yeah.

00:34:10.260 --> 00:34:10.820
That's awesome.

00:34:10.820 --> 00:34:11.920
All right.

00:34:11.920 --> 00:34:16.880
So the next one up is using a pillow to create images in Python.

00:34:16.880 --> 00:34:18.420
Bob, tell us about that.

00:34:18.540 --> 00:34:22.420
Yeah, I picked this one because it's a tool that we still use today.

00:34:22.420 --> 00:34:24.720
Just, again, a simple prototype.

00:34:24.720 --> 00:34:27.160
Just give it a URL and some text.

00:34:27.160 --> 00:34:28.600
Downloads the URL image.

00:34:28.600 --> 00:34:29.780
It puts it on a canvas.

00:34:29.780 --> 00:34:34.540
And it puts your text on top of it, which makes a reasonable banner.

00:34:34.540 --> 00:34:37.260
It's not like Photoshop art, but it's good enough.

00:34:38.260 --> 00:34:44.160
And, yeah, I think, or this script or some code channels morphed into it.

00:34:44.160 --> 00:34:50.780
But we start, we're still using this to make PyBytes banners for new code challenges articles.

00:34:50.780 --> 00:34:51.340
Oh, nice.

00:34:51.340 --> 00:34:57.460
So you can like auto generate like day 31, day 32, day 33 for each one.

00:34:57.460 --> 00:34:58.060
That's the thing.

00:34:58.120 --> 00:35:00.760
I think later we wrapped it in some Flask GUI.

00:35:00.760 --> 00:35:02.900
So we just have a form.

00:35:02.900 --> 00:35:07.600
And we give it the text and the background image URL there.

00:35:07.600 --> 00:35:09.460
And it makes the banner there.

00:35:09.460 --> 00:35:13.400
And you can just click download or even download it directly to your.

00:35:13.400 --> 00:35:16.000
So I make a banner in 10 seconds now or less.

00:35:16.000 --> 00:35:16.600
That's awesome.

00:35:16.600 --> 00:35:19.400
That's way better than like living in Photoshop all the time.

00:35:19.400 --> 00:35:20.280
Yeah, we don't want that.

00:35:20.280 --> 00:35:21.140
We want to go.

00:35:21.140 --> 00:35:22.260
Yeah, yeah, for sure.

00:35:22.260 --> 00:35:24.500
Yeah, I think that's really cool.

00:35:24.500 --> 00:35:29.460
I mean, I had a similar experience recently when I wanted to make all the, I wanted to

00:35:29.460 --> 00:35:32.140
create audio versions of my online courses.

00:35:32.140 --> 00:35:36.480
So how do you take MP4s, convert them to MP3s?

00:35:36.480 --> 00:35:39.620
Then how do you go and put like, this is the title.

00:35:39.620 --> 00:35:40.840
This is the album.

00:35:40.840 --> 00:35:42.820
This is this track in this album.

00:35:42.820 --> 00:35:47.220
And, you know, you find something cool like Pillow or, you know, it's not actually Pillow,

00:35:47.220 --> 00:35:51.360
but like there's just these like little libraries that you wouldn't necessarily think is easy

00:35:51.360 --> 00:35:52.260
to work with.

00:35:52.260 --> 00:35:55.820
Like it doesn't seem like it'd be that easy to work with images, but you know, here

00:35:55.820 --> 00:35:56.100
it is.

00:35:56.100 --> 00:35:56.280
Right.

00:35:56.280 --> 00:35:58.720
Same thing for like IDX tags and MP3s.

00:35:58.720 --> 00:35:59.480
Very cool.

00:35:59.480 --> 00:36:00.080
Yeah.

00:36:00.080 --> 00:36:03.120
So Julian, what about this steam scraper?

00:36:03.120 --> 00:36:03.600
Okay.

00:36:03.600 --> 00:36:05.120
So I love games.

00:36:05.120 --> 00:36:09.960
And that's probably one of the worst things about PyBytes is that I have less gaming time

00:36:09.960 --> 00:36:10.380
than ever.

00:36:10.380 --> 00:36:13.160
This was actually a fun project for me.

00:36:13.160 --> 00:36:17.820
It actually spanned a few days and it was made up of a few scripts that I made throughout

00:36:17.820 --> 00:36:18.900
this entire series.

00:36:20.120 --> 00:36:21.920
This one I still use.

00:36:21.920 --> 00:36:25.700
What it does is, and I know someone out there is going to be listening and say, why don't

00:36:25.700 --> 00:36:27.340
you just use the RSS feed?

00:36:27.340 --> 00:36:29.500
Well, who cares about the RSS?

00:36:29.500 --> 00:36:31.400
The whole point is to make this, right?

00:36:31.400 --> 00:36:36.680
What I did was I scraped the RSS feed using this scraper.

00:36:37.340 --> 00:36:41.920
And this is Steam.com, store.steampad, you know, the Valve game service.

00:36:41.920 --> 00:36:45.100
And I scraped the RSS feed for all the latest games.

00:36:45.100 --> 00:36:47.780
Either way, I was scraping that file.

00:36:47.780 --> 00:36:54.940
I was passing that file, sorry, using a feed parser as well to then get all of the games,

00:36:54.940 --> 00:36:58.860
just the titles and the URLs, dump that into a database.

00:36:59.640 --> 00:37:03.860
Okay, so that was like one section that took me a day or two to wrap my head around because

00:37:03.860 --> 00:37:05.440
I'd never used feed parser at this point.

00:37:05.440 --> 00:37:11.280
Then there was the whole emailing myself the notification that these games were released,

00:37:11.280 --> 00:37:12.000
you know.

00:37:12.180 --> 00:37:15.800
So I'd written an email script at the start of this entire series.

00:37:15.800 --> 00:37:22.080
And then the catch was I was spamming myself with every new game multiple times.

00:37:22.080 --> 00:37:25.980
So I'm going, well, I already know that game's released.

00:37:25.980 --> 00:37:27.000
I've already bought that game.

00:37:27.000 --> 00:37:28.060
I don't want to be told again.

00:37:28.060 --> 00:37:32.740
So then I spoke with Bob and he said, oh, you know, I've conquered this problem before.

00:37:32.740 --> 00:37:35.860
I've encountered it just at a zero one flag.

00:37:35.860 --> 00:37:37.040
And that was it.

00:37:37.040 --> 00:37:40.180
I just mind blown, you know, just I was like, oh, sweet.

00:37:40.180 --> 00:37:43.140
So then I, in the database, added a new column.

00:37:43.140 --> 00:37:47.660
Every existing game, every time something's added, it's given a flag of zero.

00:37:47.660 --> 00:37:51.820
And then once it's been emailed out, it then gets a flag of one.

00:37:51.820 --> 00:37:53.640
And then you only email out the zeros.

00:37:53.640 --> 00:37:55.220
Yeah, that's actually really, really cool.

00:37:55.220 --> 00:37:57.080
So tell me about feed parser.

00:37:57.080 --> 00:38:03.180
That was actually complex for me because I'd never had to pass XML before.

00:38:03.820 --> 00:38:10.660
And so trying to drill your way down through these nested XML tags just did my head in.

00:38:10.660 --> 00:38:16.220
And I remember crying one night, huddled in a corner, you know, with a blanket over me.

00:38:16.220 --> 00:38:18.100
The namespaces.

00:38:18.100 --> 00:38:19.120
The namespaces.

00:38:20.540 --> 00:38:20.960
Exactly.

00:38:20.960 --> 00:38:24.840
And, you know, Bob called me and he said, what's wrong, my son?

00:38:24.840 --> 00:38:26.720
How can I help you?

00:38:26.720 --> 00:38:29.660
You know, and I talked to him about it.

00:38:29.660 --> 00:38:32.680
And he showed me the name Tuple.

00:38:32.680 --> 00:38:35.100
And at that point, I'd never used the name Tuple.

00:38:35.100 --> 00:38:36.300
So this is what I mean.

00:38:36.300 --> 00:38:40.640
You know, Bob knows these things and I'm still grasping at straws sometimes.

00:38:40.640 --> 00:38:43.060
So I was like, what's the name Tuple?

00:38:43.060 --> 00:38:44.260
And he walked me through it.

00:38:44.260 --> 00:38:48.300
You know, I remember this phone call was about half an hour as he's telling me all these things.

00:38:48.300 --> 00:38:49.400
And I'm like, this is amazing.

00:38:49.400 --> 00:38:51.920
And he'd already had a script that used name Tuple.

00:38:51.920 --> 00:38:53.520
So he used that as an example.

00:38:53.520 --> 00:39:00.980
And then I was able to use that, find the correct names and links and then save the data.

00:39:00.980 --> 00:39:03.940
And, you know, my code, I was hacking my way down.

00:39:03.940 --> 00:39:08.000
And it just became like five lines as opposed to, you know, 20 or 30.

00:39:08.000 --> 00:39:08.260
Yeah.

00:39:08.260 --> 00:39:11.800
And you don't need to know all the XPath expressions to search through it.

00:39:11.800 --> 00:39:12.480
This is really awesome.

00:39:12.480 --> 00:39:18.420
So FeedParser just understands RSS1, RSS2, Atom, all that.

00:39:18.420 --> 00:39:21.580
And you could just ask it questions after it loads up an XML feed.

00:39:21.580 --> 00:39:22.300
Yeah, pretty much.

00:39:22.300 --> 00:39:23.080
Exactly right.

00:39:23.080 --> 00:39:27.480
I was just looking for those tag names and it just knew it.

00:39:27.480 --> 00:39:28.460
It just found it.

00:39:28.460 --> 00:39:30.420
It was able to search that stuff for me.

00:39:30.420 --> 00:39:31.200
So I loved it.

00:39:31.200 --> 00:39:31.880
Oh, that's sweet.

00:39:31.880 --> 00:39:32.540
All right.

00:39:32.540 --> 00:39:35.260
So the next one, you know what I enjoyed talking?

00:39:35.260 --> 00:39:37.060
I mean, I enjoy a lot of things about talking to you guys.

00:39:37.060 --> 00:39:40.400
But one of the things that's really cool about going through this is like, I didn't know about FeastParser.

00:39:40.400 --> 00:39:43.700
I just, you know, import elementary and just go after with XPath.

00:39:43.700 --> 00:39:46.340
Like, apparently I don't need to do that anymore.

00:39:46.340 --> 00:39:47.220
That's really, really cool.

00:39:47.220 --> 00:39:52.900
And so, I mean, it's not a huge deal for me, but it could, if it was just automatic, that would be better.

00:39:52.900 --> 00:39:59.660
And I think for the next one as well, I've never played with PyGitHub, but apparently on day 84, you did, right, Bob?

00:39:59.660 --> 00:40:00.040
Yeah.

00:40:00.040 --> 00:40:00.600
All right.

00:40:00.600 --> 00:40:01.220
What is this one?

00:40:01.220 --> 00:40:13.940
Simple prototype again, just a little script to functions to get a user object from the GitHub API and show stats, all the stats for all his or her repos.

00:40:13.940 --> 00:40:15.920
So the stars and the forks.

00:40:15.920 --> 00:40:16.980
Yeah.

00:40:16.980 --> 00:40:22.180
The funny thing is, as you say, you raise awareness to yourself that that library exists.

00:40:22.360 --> 00:40:34.260
And the funny thing is, now that developing something bigger for our code challenges, where I do use a lot of GitHub integration, I went back to that library again.

00:40:34.260 --> 00:40:35.140
Yeah, that's really cool.

00:40:35.140 --> 00:40:41.620
I mean, GitHub does have like a straight up HTTP JSON API, but having a wrapper over top of it.

00:40:41.620 --> 00:40:45.760
So you just say get user or, you know, repo.fork.

00:40:45.760 --> 00:40:50.000
That is so much nicer than actually parsing the dictionaries.

00:40:50.300 --> 00:41:03.480
I do have to say that recent acquire PDB skills helped me because there was, now that I'm digging deeper into the GitHub API, the PyGitHub, there was not, documentation was a bit limited.

00:41:03.480 --> 00:41:10.860
But that was actually also a blessing to inspect objects with PDB set trace and really look into it.

00:41:10.860 --> 00:41:12.640
I mean, GitHub APIs is huge.

00:41:12.640 --> 00:41:13.400
Yeah, that's pretty massive.

00:41:13.400 --> 00:41:15.280
And you can do a lot of fun stuff with it.

00:41:15.280 --> 00:41:17.180
So highly recommend it.

00:41:17.180 --> 00:41:17.860
Yeah, very cool.

00:41:17.860 --> 00:41:23.060
All right, let's talk about some Flask apps that you worked on, Julian.

00:41:23.060 --> 00:41:27.100
All right, so you probably know by now, Mike, I'm a bit of a Flask addict.

00:41:27.100 --> 00:41:28.440
I can't get over it.

00:41:28.440 --> 00:41:33.440
So this was something, so for a long time, I wanted to be able to make web apps.

00:41:33.440 --> 00:41:34.520
And I had no idea.

00:41:34.520 --> 00:41:38.880
And I thought it was magic how people were able to have this script turn into a web page.

00:41:38.880 --> 00:41:40.700
And I never understood how they did it.

00:41:40.700 --> 00:41:43.020
It scared me approaching it.

00:41:43.560 --> 00:41:47.040
And Bob pointed me at Flask and he said, try this.

00:41:47.040 --> 00:41:51.080
And first of all, I went through the Flask documentation and I just melted.

00:41:51.080 --> 00:41:52.700
I was like, what is this?

00:41:52.700 --> 00:41:54.900
This is so detailed and complex.

00:41:54.900 --> 00:41:55.660
This is crazy.

00:41:55.660 --> 00:42:01.200
This is sort of route maps and methods and views and templates and template language and models.

00:42:01.200 --> 00:42:01.860
And ah.

00:42:01.860 --> 00:42:02.500
Exactly.

00:42:02.500 --> 00:42:03.080
Exactly.

00:42:03.080 --> 00:42:04.380
This whole new language.

00:42:04.380 --> 00:42:06.400
It's like learning a whole new programming language.

00:42:06.700 --> 00:42:09.900
And I ended up going through 20 different sources.

00:42:09.900 --> 00:42:11.180
You know, I was checking YouTube.

00:42:11.180 --> 00:42:12.060
I was Googling.

00:42:12.060 --> 00:42:13.780
Like three or four new languages, right?

00:42:13.780 --> 00:42:15.040
It was just crazy.

00:42:15.040 --> 00:42:17.660
So I said, this is something I have to learn.

00:42:17.660 --> 00:42:23.600
And I ended up writing, I think, three or four Flask apps as part of this hundred days.

00:42:23.600 --> 00:42:26.220
So I won't go into each one in too much detail.

00:42:26.220 --> 00:42:29.180
But every one of them was something different.

00:42:29.180 --> 00:42:32.280
It was like a new sort of Flask skill that I hadn't dealt with before.

00:42:32.280 --> 00:42:36.220
So my three favorite that I wrote, I wrote a BMI calculator.

00:42:36.220 --> 00:42:37.920
So that's body mass index.

00:42:37.920 --> 00:42:39.960
Just a simple calculation, right?

00:42:39.960 --> 00:42:41.080
On the command line.

00:42:41.080 --> 00:42:47.080
But to turn that into a workable form on a website that someone can enter in the data.

00:42:47.080 --> 00:42:53.680
And then it actually shows that result, your BMI, on the same page.

00:42:53.680 --> 00:42:55.960
Like that, that was difficult for me.

00:42:55.960 --> 00:42:58.380
You know, I was just thinking, how do I do this?

00:42:58.380 --> 00:43:00.200
So that was pretty cool.

00:43:00.200 --> 00:43:05.500
So that involved having to have a div below the form.

00:43:05.500 --> 00:43:07.460
So the form entry field is quite simple.

00:43:07.460 --> 00:43:13.220
But there's a hidden div that doesn't appear unless a certain variable exists.

00:43:13.220 --> 00:43:15.180
And it was actually really cool.

00:43:15.180 --> 00:43:17.000
I felt like I was a magician.

00:43:17.000 --> 00:43:18.440
I felt like a hacker.

00:43:18.440 --> 00:43:19.620
I was like, man, this is cool.

00:43:19.620 --> 00:43:21.020
I love building web apps like that.

00:43:21.020 --> 00:43:23.460
It takes a while to put the pieces together.

00:43:23.460 --> 00:43:25.480
But once you have them, you're like, whoa, look at it work.

00:43:25.480 --> 00:43:26.260
Exactly.

00:43:26.260 --> 00:43:26.900
It's mesmerizing.

00:43:26.900 --> 00:43:29.640
I still use it, even though I don't care about my BMI.

00:43:29.640 --> 00:43:31.240
I just do it every now and then.

00:43:31.240 --> 00:43:34.360
Another one was a pay calculator.

00:43:34.360 --> 00:43:36.320
You can tell I care about my pay, right?

00:43:36.320 --> 00:43:40.880
No, just that the whole overtime thing that Bob helped me with a year and a half ago.

00:43:40.880 --> 00:43:46.460
I wanted to calculate how much money, if you work X many hours at this rate, how much it makes.

00:43:46.460 --> 00:43:47.720
I thought that's a simple use case.

00:43:48.220 --> 00:43:51.500
The cool part is that it uses Flask sessions.

00:43:51.500 --> 00:43:56.420
So it saves your hourly rate as a session object.

00:43:56.420 --> 00:44:01.640
And then you can keep using that session object to calculate different hours.

00:44:01.640 --> 00:44:03.040
You don't have to enter it in every time.

00:44:03.960 --> 00:44:10.980
And yeah, and to test it out, I had the first page as a way you enter it in and it's saved as a session object.

00:44:10.980 --> 00:44:12.460
And the second page.

00:44:12.880 --> 00:44:17.280
So when you browse to the second page, the session object carries over.

00:44:17.280 --> 00:44:20.240
And that was the challenge for this specific app.

00:44:20.240 --> 00:44:21.560
So that was really cool.

00:44:21.880 --> 00:44:28.380
And the last one was one of my favorites because it was the first Flask app that I wrote that uses an external API.

00:44:28.380 --> 00:44:30.320
Actually, was it an external API?

00:44:30.320 --> 00:44:33.700
No, I think it was a time zone list.

00:44:33.700 --> 00:44:41.360
Either way, it was it imports every time zone on the planet and then populates a pull down menu with it.

00:44:41.360 --> 00:44:48.640
So then you choose that time zone and it tells you what the current time is in that country or in that space compared to your current time.

00:44:48.640 --> 00:44:51.820
So, yeah, it was actually really, really cool.

00:44:51.940 --> 00:44:52.540
I enjoyed that.

00:44:52.540 --> 00:44:57.580
That was difficult populating that list with data from some other function.

00:44:57.580 --> 00:44:59.260
So that was the challenge for this one.

00:44:59.260 --> 00:44:59.760
Yeah, yeah.

00:44:59.760 --> 00:45:00.660
That sounds really cool.

00:45:00.660 --> 00:45:01.460
Very, very nice.

00:45:01.460 --> 00:45:09.280
And obviously that love of Flask carried on over after this finished and that's how I got started with the Flask course.

00:45:09.280 --> 00:45:09.960
Yeah, exactly.

00:45:09.960 --> 00:45:12.080
We'll definitely talk a little more about that at the end.

00:45:12.080 --> 00:45:12.960
That's awesome.

00:45:12.960 --> 00:45:14.880
So last one, Bob.

00:45:14.880 --> 00:45:16.320
Let's talk about some automation.

00:45:16.320 --> 00:45:17.880
Autogen, I don't know.

00:45:17.880 --> 00:45:18.660
Pelican, I know.

00:45:18.660 --> 00:45:20.500
Slack, I know, but I've never done anything with it.

00:45:20.500 --> 00:45:21.420
Tell us about all these things.

00:45:21.560 --> 00:45:22.520
Yeah, I couldn't choose.

00:45:22.520 --> 00:45:24.520
So I put them all under the automation.

00:45:24.520 --> 00:45:26.940
I'm going to automate all the things, just all of them.

00:45:26.940 --> 00:45:28.100
Automation buckets.

00:45:28.100 --> 00:45:36.100
So to start with, so it was funny because with the 100 days, you do a tweet of your progress every day.

00:45:36.480 --> 00:45:47.380
So that was the first common thing to automate, to have it reach out to our log file on the GitHub repo, read in a day, and automatically tweet what's in there.

00:45:47.640 --> 00:45:53.900
Which also put a bit of pressure on us because we had a bit of pressure on us because we had this daily deadline at 22.43 p.m.

00:45:53.900 --> 00:45:54.860
The bot's going to get there.

00:45:54.860 --> 00:45:55.000
The bot's going to get there.

00:45:55.000 --> 00:45:56.220
The bot's going to get there quick.

00:45:56.220 --> 00:45:57.820
The bot is going to get us.

00:45:57.820 --> 00:45:58.860
It's going to get the text.

00:45:58.860 --> 00:46:00.560
If it's blank, I have to delete the tweet.

00:46:00.560 --> 00:46:02.460
It's not a shame, but it's a shame.

00:46:03.460 --> 00:46:06.060
So it put actually pressure on us.

00:46:06.060 --> 00:46:08.400
But yeah, we saved a lot of time with that.

00:46:08.400 --> 00:46:09.740
There were Slack bots.

00:46:09.740 --> 00:46:14.240
So for example, a neat tool that could actually help people in marketing.

00:46:14.240 --> 00:46:19.180
When your domain gets mentioned on Twitter, it gets posted to a Slack channel.

00:46:19.180 --> 00:46:23.680
So I mean, if you get retweeted or stuff, you notice it in notification.

00:46:23.680 --> 00:46:28.540
But if somebody just tweets your URL or mentions your URL in any sense, you don't.

00:46:28.540 --> 00:46:28.700
Right.

00:46:28.700 --> 00:46:33.080
And that happens a lot if somebody just discovers like a page or something you've done that's cool.

00:46:33.120 --> 00:46:34.220
And they just shared on Twitter.

00:46:34.220 --> 00:46:37.960
They might not even know about your Twitter account or forget to put it in there.

00:46:37.960 --> 00:46:42.760
So yeah, you'll find a lot of stuff if you search for your domain outside of your Twitter name.

00:46:42.760 --> 00:46:43.040
Yeah.

00:46:43.040 --> 00:46:44.740
So we see that all on Slack now.

00:46:44.740 --> 00:46:45.640
Pelican.

00:46:45.640 --> 00:46:49.620
Yeah, we write some articles and we have quite some entries.

00:46:49.620 --> 00:46:57.140
So I made a little command line tool to just do some inputs and ask some questions about topic and tags.

00:46:57.140 --> 00:47:02.380
And then generates a markdown file with the right formatting, which again,

00:47:02.560 --> 00:47:04.880
saves some time off every time we have to write a post.

00:47:04.880 --> 00:47:06.800
Yeah, Slack is really cool.

00:47:06.800 --> 00:47:10.040
We have a challenge going on now to build a chatbot.

00:47:10.040 --> 00:47:12.960
And the most original submission we'll get.

00:47:12.960 --> 00:47:14.740
Actually, we buy them a book.

00:47:14.740 --> 00:47:16.720
We're really fond of chatbots.

00:47:17.500 --> 00:47:22.820
And one I wanted to mention, that idea that grew from the 100 days was a karma bot.

00:47:22.820 --> 00:47:26.420
So when you're in Slack, you do like, HipChat uses it.

00:47:26.420 --> 00:47:33.440
When you do like user or subject plus plus or minus minus, a karma bot just keeps track of the score.

00:47:33.440 --> 00:47:38.340
And that was all kind of stuff, prototypes that were born out of the 100 days.

00:47:38.480 --> 00:47:38.640
Wow.

00:47:38.640 --> 00:47:39.440
That's really cool.

00:47:39.440 --> 00:47:39.640
Yeah.

00:47:39.640 --> 00:47:40.720
A lot of stuff came out of there.

00:47:40.720 --> 00:47:41.580
All right.

00:47:41.580 --> 00:47:43.620
So that's one tenth of what you guys learned.

00:47:43.620 --> 00:47:46.760
And I feel like that was super valuable just talking through that with you.

00:47:46.760 --> 00:47:48.240
So that's pretty awesome.

00:47:48.240 --> 00:47:51.680
Julian, do you recommend people try this 100 day code challenge?

00:47:51.680 --> 00:47:53.000
Or is it like too intense?

00:47:53.000 --> 00:47:54.980
Is it like a P90X or whatever?

00:47:56.260 --> 00:47:56.900
No, no.

00:47:56.900 --> 00:47:59.380
I totally think you need to do this.

00:47:59.380 --> 00:48:04.980
If you're interested in programming at any way, shape, or form, you should totally do it.

00:48:04.980 --> 00:48:08.500
The only advice I'll give is that it's tough.

00:48:08.500 --> 00:48:11.300
There are days where you're going to want to go out with your mates.

00:48:11.300 --> 00:48:13.260
And you're going to come home at 11 p.m.

00:48:13.260 --> 00:48:15.320
And you'll be probably drunk.

00:48:15.320 --> 00:48:17.860
And you'll be like, I have to write some code.

00:48:17.860 --> 00:48:20.980
And you'll have to prep.

00:48:20.980 --> 00:48:22.680
Maybe do more the day before.

00:48:23.040 --> 00:48:26.320
This whole script a day thing was over the top.

00:48:26.320 --> 00:48:31.940
So it was something I think we may do one day, again, if we're crazy.

00:48:31.940 --> 00:48:39.340
But the whole just building a pattern and the repetition to make you learn something every day.

00:48:39.340 --> 00:48:41.360
So this we apply to other things as well.

00:48:41.360 --> 00:48:43.620
It's not just 100 days of code now for us.

00:48:43.620 --> 00:48:50.020
But the main thing is if you are married and you have kids, please take that into account.

00:48:50.740 --> 00:48:58.380
Because that was one of the biggest hurdles with us is that it's like you'll have family time and then you'll have to go, I've got to go write a script.

00:48:58.380 --> 00:48:59.340
They don't understand.

00:48:59.340 --> 00:49:00.540
It's not their thing, right?

00:49:00.540 --> 00:49:01.960
So you have to run away.

00:49:01.960 --> 00:49:02.300
You have to.

00:49:02.300 --> 00:49:04.100
That was the hardest thing to balance, to be honest.

00:49:04.100 --> 00:49:08.000
So if you can plan, tell your better half, look, here's what I'm doing.

00:49:08.000 --> 00:49:08.860
Work it out.

00:49:08.860 --> 00:49:12.100
Even plan a time of the year where work isn't too crazy.

00:49:12.100 --> 00:49:13.620
But plan it in advance.

00:49:13.620 --> 00:49:16.300
Don't just jump on it because it can be pretty taxing.

00:49:16.420 --> 00:49:17.080
Yeah, of course.

00:49:17.080 --> 00:49:22.420
You know, one thing that comes to mind while you're speaking is maybe this doesn't have to be outside work, right?

00:49:22.420 --> 00:49:29.260
Maybe you could get an hour of work at your job saying, hey, dear manager, I'm trying to learn this thing.

00:49:29.260 --> 00:49:30.940
And, you know, I have this training budget.

00:49:30.940 --> 00:49:35.720
Could you just give me time instead of, you know, a class with a bunch of boring slides anyway?

00:49:35.720 --> 00:49:36.820
Like, I'll just do this.

00:49:36.820 --> 00:49:37.840
That's an amazing.

00:49:37.840 --> 00:49:39.260
Or something along those lines, right?

00:49:39.260 --> 00:49:40.200
That's a really good idea.

00:49:40.200 --> 00:49:43.040
I'm going to take that to work and try that.

00:49:43.040 --> 00:49:43.740
Nice.

00:49:43.740 --> 00:49:43.940
Yeah.

00:49:43.940 --> 00:49:44.460
That's a good.

00:49:44.460 --> 00:49:45.080
Thanks, man.

00:49:45.080 --> 00:49:45.720
You should.

00:49:45.720 --> 00:49:46.800
Let us know how it goes.

00:49:46.800 --> 00:49:47.040
Yeah.

00:49:47.040 --> 00:49:51.680
It's a good return on investment because you're really practicing.

00:49:51.680 --> 00:49:57.800
And to really to learn the program, it requires a lot of hours of deliberate practice.

00:49:57.800 --> 00:49:59.820
And 100 Days of Code does that.

00:49:59.820 --> 00:50:00.000
Yeah.

00:50:00.000 --> 00:50:07.240
I feel like you guys must have got a lot of confidence and, like, capability with other libraries that you otherwise wouldn't have touched.

00:50:07.240 --> 00:50:07.660
Exactly.

00:50:07.660 --> 00:50:09.060
Two, right?

00:50:09.060 --> 00:50:09.340
Yeah.

00:50:09.340 --> 00:50:09.900
Very cool.

00:50:09.900 --> 00:50:10.140
Okay.

00:50:10.140 --> 00:50:11.760
So, you also have another one.

00:50:11.760 --> 00:50:14.480
And I don't even know where you are in the timing of it.

00:50:14.480 --> 00:50:19.180
But it went around Django specifically, not just Python in general.

00:50:19.180 --> 00:50:19.880
Tell us about that.

00:50:19.880 --> 00:50:20.140
Yeah.

00:50:20.140 --> 00:50:24.380
So, after 100 Days of Code, we were kind of a bit tired.

00:50:24.380 --> 00:50:26.700
But, nevertheless, we started a new 100 Days.

00:50:26.700 --> 00:50:28.360
It was a bit looser.

00:50:28.360 --> 00:50:36.700
So, we didn't do, like, a daily tweet anymore because, I mean, Django apps are typically, like, long, stretched projects.

00:50:36.700 --> 00:50:42.580
You have to do something like Django page view per day or an API endpoint per day or something.

00:50:42.580 --> 00:50:44.740
We weren't, like, that strict on it.

00:50:45.340 --> 00:50:48.500
But, yeah, we did manage to do two or three apps.

00:50:48.500 --> 00:50:49.500
For example, we made a lot of things like that.

00:50:49.500 --> 00:50:49.500
So, we made a lot of things like that.

00:50:49.500 --> 00:50:49.500
So, we made a lot of things like that.

00:50:49.500 --> 00:50:49.500
So, we made a lot of things like that.

00:50:49.500 --> 00:50:49.500
So, we made a lot of things like that.

00:50:49.500 --> 00:50:49.500
So, we made a lot of things like that.

00:50:49.500 --> 00:50:49.500
So, we made a lot of things like that.

00:50:49.500 --> 00:50:50.500
So, we made a lot of things like that.

00:50:50.500 --> 00:50:50.500
So, we made a lot of things like that.

00:50:50.500 --> 00:50:51.500
So, we made a lot of things like that.

00:50:51.500 --> 00:50:52.500
So, we made a lot of things like that.

00:50:52.500 --> 00:50:52.500
So, we made a lot of things like that.

00:50:52.500 --> 00:50:53.500
So, we made a lot of things like that.

00:50:53.500 --> 00:50:54.500
So, we made a lot of things like that.

00:50:54.500 --> 00:50:55.500
So, we made a lot of things like that.

00:50:55.500 --> 00:50:56.500
So, we made a lot of things like that.

00:50:56.500 --> 00:50:57.500
So, we made a lot of things like that.

00:50:57.500 --> 00:50:58.500
So, we made a lot of things like that.

00:50:58.500 --> 00:50:59.500
So, we made a lot of things like that.

00:50:59.500 --> 00:51:00.500
So, we made a lot of things like that.

00:51:00.500 --> 00:51:01.500
So, we made a lot of things like that.

00:51:01.500 --> 00:51:02.500
So, we made a lot of things like that.

00:51:02.500 --> 00:51:03.500
So, we made a lot of things like that.

00:51:03.500 --> 00:51:04.500
So, we made a lot of things like that.

00:51:04.500 --> 00:51:05.500
So, we made a lot of things like that.

00:51:05.500 --> 00:51:06.500
So, we made a lot of things like that.

00:51:06.500 --> 00:51:07.500
So, we made a lot of things like that.

00:51:07.500 --> 00:51:08.500
So, we made a lot of things like that.

00:51:08.500 --> 00:51:09.500
So, we made a lot of things like that.

00:51:09.500 --> 00:51:10.500
So, we made a lot of things like that.

00:51:10.500 --> 00:51:11.500
So, we made a lot of things like that.

00:51:11.500 --> 00:51:12.500
So, we made a lot of things like that.

00:51:12.500 --> 00:51:13.500
So, we made a lot of things like that.

00:51:13.500 --> 00:51:14.500
We made a lot of things like that.

00:51:14.500 --> 00:51:15.500
So, we made a lot of things like that.

00:51:15.500 --> 00:51:16.500
So, we made a lot of things like that.

00:51:16.500 --> 00:51:17.500
So, we made a lot of things like that.

00:51:17.500 --> 00:51:18.500
So, we made a lot of things like that.

00:51:18.500 --> 00:51:19.500
So, we made a lot of things like that.

00:51:19.500 --> 00:51:20.500
So, we made a lot of things like that.

00:51:20.500 --> 00:51:21.500
So, we made a lot of things like that.

00:51:21.500 --> 00:51:22.500
So, we made a lot of things like that.

00:51:22.500 --> 00:51:23.500
So, we made a lot of things like that.

00:51:23.500 --> 00:51:24.500
So, we made a lot of things like that.

00:51:24.500 --> 00:51:25.500
So, we made a lot of things like that.

00:51:25.500 --> 00:51:26.500
So, we made a lot of things like that.

00:51:26.500 --> 00:51:27.500
So, we made a lot of things like that.

00:51:27.500 --> 00:51:28.500
So, we made a lot of things like that.

00:51:28.500 --> 00:51:29.500
So, we made a lot of things like that.

00:51:29.500 --> 00:51:30.500
So, we made a lot of things like that.

00:51:30.500 --> 00:51:31.500
Yeah.

00:51:31.500 --> 00:51:33.500
Still, we got quite some stuff done.

00:51:33.500 --> 00:51:33.500
Yeah.

00:51:33.500 --> 00:51:34.500
That's awesome.

00:51:34.500 --> 00:51:35.500
And so, this one is also done?

00:51:35.500 --> 00:51:36.500
Yeah.

00:51:36.500 --> 00:51:37.500
It's done.

00:51:37.500 --> 00:51:38.500
Yeah.

00:51:38.500 --> 00:51:39.500
I mean, the deadline is over.

00:51:39.500 --> 00:51:41.500
And now, we take a little bit of rest to prepare for another.

00:51:41.500 --> 00:51:42.500
Rest.

00:51:42.500 --> 00:51:43.500
Come on.

00:51:43.500 --> 00:51:45.500
You got time for one and a half more this year.

00:51:45.500 --> 00:51:46.500
Right.

00:51:46.500 --> 00:51:47.500
Basically, we're focusing on our project.

00:51:47.500 --> 00:51:48.500
Yeah.

00:51:48.500 --> 00:51:49.500
He meant the rest framework.

00:51:49.500 --> 00:51:50.500
That's what he meant.

00:51:50.500 --> 00:51:51.500
That's right.

00:51:51.500 --> 00:51:52.500
Right.

00:51:52.500 --> 00:51:53.500
Django rest framework.

00:51:53.500 --> 00:51:54.500
100 days of it.

00:51:54.500 --> 00:51:55.500
Perfect.

00:51:55.500 --> 00:51:56.500
Awesome framework.

00:51:56.500 --> 00:51:57.500
Nice.

00:51:57.500 --> 00:51:58.500
So, I think, you know, get a look at the time.

00:51:58.500 --> 00:52:00.500
We'll probably just leave it here for this topic.

00:52:00.500 --> 00:52:02.500
But I feel like this was super valuable.

00:52:02.500 --> 00:52:06.500
Looking at the 10 you chose and talking about them, I can definitely see the value of doing

00:52:06.500 --> 00:52:07.500
them.

00:52:07.500 --> 00:52:08.500
And I've learned a few things myself.

00:52:08.500 --> 00:52:10.500
So, you know, thanks for walking us through this.

00:52:10.500 --> 00:52:11.500
Nice.

00:52:11.500 --> 00:52:12.500
No worries.

00:52:12.500 --> 00:52:13.500
Yeah.

00:52:13.500 --> 00:52:14.500
Awesome.

00:52:14.500 --> 00:52:15.500
So, before you guys get out of here, though, you have to face the two questions.

00:52:15.500 --> 00:52:18.500
So, first of all, we'll start with you, Bob, I guess.

00:52:18.500 --> 00:52:21.500
If you're going to write some Python code, what editor do you use?

00:52:21.500 --> 00:52:22.500
Vim.

00:52:22.500 --> 00:52:23.500
Vim.

00:52:23.500 --> 00:52:24.500
All right.

00:52:24.500 --> 00:52:25.500
On.

00:52:25.500 --> 00:52:26.500
And notable PyPI package.

00:52:26.500 --> 00:52:29.500
Play with 100 packages or modules in this whole thing.

00:52:29.500 --> 00:52:30.500
So, probably found some cool ones.

00:52:30.500 --> 00:52:31.500
Can we still say request?

00:52:31.500 --> 00:52:32.500
You can still say request.

00:52:32.500 --> 00:52:33.500
That's awesome.

00:52:33.500 --> 00:52:35.500
Maybe for data analysis, I would say pandas.

00:52:35.500 --> 00:52:41.500
We didn't really use it in 100 days, but it's an excellent tool to do any kind of data

00:52:41.500 --> 00:52:42.500
analysis.

00:52:42.500 --> 00:52:43.500
Yeah, absolutely.

00:52:43.500 --> 00:52:44.500
All right, Julian.

00:52:44.500 --> 00:52:46.500
Obviously, on the command line, it's going to be Vim.

00:52:46.500 --> 00:52:47.500
And Bob, don't hate me, okay?

00:52:47.500 --> 00:52:48.500
Please don't hate me.

00:52:48.500 --> 00:52:51.500
On Windows, I actually use Notepad++.

00:52:51.500 --> 00:52:52.500
And I love it.

00:52:52.500 --> 00:52:53.500
I know.

00:52:53.500 --> 00:52:54.500
It's crazy.

00:52:54.500 --> 00:52:56.500
I've known some people that love Notepad++ as well.

00:52:56.500 --> 00:52:57.500
Very cool.

00:52:57.500 --> 00:52:58.500
And notable PyPI package.

00:52:58.500 --> 00:53:00.500
Okay, so I'm going to just say two.

00:53:00.500 --> 00:53:01.500
Obviously, Flask.

00:53:01.500 --> 00:53:02.500
Well, okay, that's not PyPI.

00:53:02.500 --> 00:53:03.500
All right.

00:53:03.500 --> 00:53:04.500
Yeah, yeah, it's on there.

00:53:04.500 --> 00:53:05.500
It's on there.

00:53:05.500 --> 00:53:06.500
Is it?

00:53:06.500 --> 00:53:07.500
Oh, okay.

00:53:07.500 --> 00:53:08.500
Sorry, I thought you meant like a part of standard lib.

00:53:08.500 --> 00:53:09.500
No, no.

00:53:09.500 --> 00:53:10.500
Outside the standard lib.

00:53:10.500 --> 00:53:11.500
External stuff.

00:53:11.500 --> 00:53:12.500
There are probably two.

00:53:12.500 --> 00:53:13.500
I won't go into that.

00:53:13.500 --> 00:53:17.500
But actually, this is an interesting one because I'm pretty terrible at it.

00:53:17.500 --> 00:53:18.500
pytest.

00:53:18.500 --> 00:53:21.500
It was only in the past month that Bob was pushing me on this one, going, "You've got

00:53:21.500 --> 00:53:22.500
to try this," you know?

00:53:22.500 --> 00:53:24.500
And it just worked.

00:53:24.500 --> 00:53:30.500
It's so easy to just get like boring and go, "Ah, just import, you know, unit test and just

00:53:30.500 --> 00:53:31.500
use that it's right there.

00:53:31.500 --> 00:53:32.500
Like, there's nothing to it, right?"

00:53:32.500 --> 00:53:36.500
And I was not very good at testing my own code and I'm still terrible at it.

00:53:36.500 --> 00:53:39.500
But it was just this whole different way of looking at it.

00:53:39.500 --> 00:53:40.500
So definitely pytest.

00:53:40.500 --> 00:53:41.500
All right.

00:53:41.500 --> 00:53:42.500
Oh, yeah.

00:53:42.500 --> 00:53:43.500
Those are both very, very good ones.

00:53:43.500 --> 00:53:44.500
Awesome.

00:53:44.500 --> 00:53:45.500
All right, guys.

00:53:45.500 --> 00:53:46.500
People are interested in this.

00:53:46.500 --> 00:53:47.500
Like, how can they participate?

00:53:47.500 --> 00:53:52.500
Maybe can they join like your community somehow to like sort of have some support while they

00:53:52.500 --> 00:53:53.500
go through?

00:53:53.500 --> 00:53:54.500
Or what do you think?

00:53:54.500 --> 00:53:55.500
Bob, go first.

00:53:55.500 --> 00:53:56.500
Yeah.

00:53:56.500 --> 00:53:59.500
So PyBytes, video articles, co-channels, news, and projects.

00:53:59.500 --> 00:54:05.500
If you really want to practice, I really recommend to go through the list of code challenges

00:54:05.500 --> 00:54:06.500
we have.

00:54:06.500 --> 00:54:08.500
We have 44 now, up until now.

00:54:08.500 --> 00:54:15.500
And pick whatever you like and clone the repo or fork the repo and make your branch and start

00:54:15.500 --> 00:54:16.500
trying to do these challenges.

00:54:16.500 --> 00:54:18.500
We have seen people growing a lot.

00:54:18.500 --> 00:54:20.500
They thought like, "Ah, I cannot do it."

00:54:20.500 --> 00:54:21.500
Then they did it.

00:54:21.500 --> 00:54:26.500
Then they thought they would have some lame submission and they actually came up with solutions.

00:54:26.500 --> 00:54:27.500
We were like, "Wow."

00:54:27.500 --> 00:54:32.500
First off, we were like, "Wow, I'm not even sure what it is."

00:54:32.500 --> 00:54:33.500
You know?

00:54:33.500 --> 00:54:34.500
So we were learning from them as well.

00:54:34.500 --> 00:54:35.500
But it works.

00:54:35.500 --> 00:54:36.500
It's incredible.

00:54:36.500 --> 00:54:40.500
So really, people and ourselves too, we're really stretching ourselves through these code

00:54:40.500 --> 00:54:41.500
challenges.

00:54:41.500 --> 00:54:45.500
So that's really what I would recommend from our site.

00:54:45.500 --> 00:54:46.500
Yeah, that's awesome.

00:54:46.500 --> 00:54:47.500
Julian, how about you?

00:54:47.500 --> 00:54:52.500
Yeah, so from a, I guess, from the beginner standpoint, for anyone listening, just stop

00:54:52.500 --> 00:54:54.500
procrastinating and start coding.

00:54:54.500 --> 00:54:56.500
It's literally learn by doing.

00:54:56.500 --> 00:54:58.500
That's just the greatest way to do it.

00:54:58.500 --> 00:55:01.500
And again, obviously a plug, you've got to try the code challenges.

00:55:01.500 --> 00:55:04.500
They will force you to just to learn new things.

00:55:04.500 --> 00:55:08.500
And because you're getting told in the challenges what you have to do and what you have to learn,

00:55:08.500 --> 00:55:10.500
that's an even better way.

00:55:10.500 --> 00:55:12.500
So do the 100 days of code challenge.

00:55:12.500 --> 00:55:16.500
But the most important thing is to just start writing code.

00:55:16.500 --> 00:55:17.500
That's it.

00:55:17.500 --> 00:55:18.500
Awesome.

00:55:18.500 --> 00:55:22.500
And speaking of writing some code, you started working with Flask.

00:55:22.500 --> 00:55:23.500
You talked about how you fell in love with it.

00:55:23.500 --> 00:55:27.500
You have a course on Udemy for Flask, right?

00:55:27.500 --> 00:55:28.500
That's right.

00:55:28.500 --> 00:55:30.500
Yeah, quickly tell people about it before we get out of here.

00:55:30.500 --> 00:55:31.500
Yeah, just super quick.

00:55:31.500 --> 00:55:32.500
It's a beginner's Flask course.

00:55:32.500 --> 00:55:37.500
It is totally intended for beginners because, as I mentioned before, the Flask documentation,

00:55:37.500 --> 00:55:41.500
trying to find and understand everything was quite difficult to piece it all together.

00:55:41.500 --> 00:55:43.500
So I've made this course.

00:55:43.500 --> 00:55:45.500
Bob and I have worked on it.

00:55:45.500 --> 00:55:48.500
And it's just designed to really sell it in layman terms.

00:55:48.500 --> 00:55:53.500
So if you don't understand, we walk you through all the steps to write your first Flask app,

00:55:53.500 --> 00:55:54.500
get the basics down.

00:55:54.500 --> 00:55:56.500
And we will expand this later as we go.

00:55:56.500 --> 00:55:58.500
And we are working on more courses.

00:55:58.500 --> 00:56:00.500
But this one is the way to get into it.

00:56:00.500 --> 00:56:01.500
And it's actually really fun.

00:56:01.500 --> 00:56:02.500
Feedback's been great.

00:56:02.500 --> 00:56:07.500
And we've got a link for you, Mike, with a discount code for anyone listening.

00:56:07.500 --> 00:56:08.500
Yeah, I see.

00:56:08.500 --> 00:56:09.500
Right.

00:56:09.500 --> 00:56:10.500
It's got the coupon code in there.

00:56:10.500 --> 00:56:12.500
So I'll put that in the show notes and people just click it there and they get a discount

00:56:12.500 --> 00:56:15.500
and you'll know it came from the podcast, which is awesome.

00:56:15.500 --> 00:56:16.500
Cool.

00:56:16.500 --> 00:56:17.500
All right, guys.

00:56:17.500 --> 00:56:20.500
Well, thank you for doing this project and sharing all the stuff you do at PyBytes with

00:56:20.500 --> 00:56:23.500
the community and now sharing it with everyone listening to the podcast.

00:56:23.500 --> 00:56:24.500
No worries.

00:56:24.500 --> 00:56:25.500
Thanks for having us, Mike.

00:56:25.500 --> 00:56:26.500
You bet.

00:56:26.500 --> 00:56:27.500
Bye.

00:56:27.500 --> 00:56:28.500
Bye.

00:56:28.500 --> 00:56:31.500
This has been another episode of Talk Python To Me.

00:56:31.500 --> 00:56:35.500
Today's guests have been Bob Beldrbos and Julian Securia.

00:56:35.500 --> 00:56:39.500
And this episode has been brought to you by Rollbar and GoCD.

00:56:39.500 --> 00:56:41.500
Rollbar takes the pain out of errors.

00:56:41.500 --> 00:56:46.500
They give you the context and insight you need to quickly locate and fix errors that might

00:56:46.500 --> 00:56:49.500
have gone unnoticed until your users complain, of course.

00:56:49.500 --> 00:56:56.500
As Talk Python To Me listeners, track a ridiculous number of errors for free at rollbar.com/talkpythontome.

00:56:56.500 --> 00:57:01.500
GoCD is the on-premise open source continuous delivery server.

00:57:01.500 --> 00:57:05.500
Want to improve your deployment workflow, but keep your code and builds in house?

00:57:05.500 --> 00:57:11.500
Check out GoCD at talkpython.fm/gocd and take control over your process.

00:57:11.500 --> 00:57:13.500
Are you or a colleague trying to learn Python?

00:57:13.500 --> 00:57:18.500
Have you tried books and videos that just left you bored by covering topics point by point?

00:57:18.500 --> 00:57:24.500
Well, check out my online course Python Jumpstart by Building 10 Apps at talkpython.fm/course

00:57:24.500 --> 00:57:27.500
to experience a more engaging way to learn Python.

00:57:27.500 --> 00:57:31.500
And if you're looking for something a little more advanced, try my Write Pythonic Code course

00:57:31.500 --> 00:57:33.500
at talkpython.fm/pythonic.

00:57:33.500 --> 00:57:36.500
Be sure to subscribe to the show.

00:57:36.500 --> 00:57:39.500
Open your favorite podcatcher and search for Python.

00:57:39.500 --> 00:57:40.500
We should be right at the top.

00:57:40.500 --> 00:57:47.500
You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed

00:57:47.500 --> 00:57:49.500
at /rss on talkpython.fm.

00:57:49.500 --> 00:57:51.500
This is your host, Michael Kennedy.

00:57:51.500 --> 00:57:52.500
Thanks so much for listening.

00:57:52.500 --> 00:57:53.500
I really appreciate it.

00:57:53.500 --> 00:57:56.500
Now get out there and write some Python code.

00:57:56.500 --> 00:58:04.420
Thank you.

00:58:04.420 --> 00:58:34.400
Thank you.

