WEBVTT

00:00:00.001 --> 00:00:06.440
If there's one message I've been pushing across all of the Talk Python episodes, it's that programming is a superpower.

00:00:06.440 --> 00:00:15.320
Rather than all of us abandoning what we're interested in and becoming CS majors, we can take our passion or our expertise and 10x it with a little programming skill.

00:00:15.320 --> 00:00:20.120
In that case, we should be teaching kids fluency in programming at a younger age.

00:00:20.120 --> 00:00:24.520
And yet, almost every platform or example meant to do so pulls its punches.

00:00:24.520 --> 00:00:28.040
We teach kids programming concepts, but not code itself.

00:00:28.580 --> 00:00:32.780
We'll use these blocks because text-based programming, that's a bridge too far.

00:00:32.780 --> 00:00:36.140
But it's not, and that's why I'm excited about CodeCombat.

00:00:36.140 --> 00:00:43.100
It's an online coding platform that uses real Python syntax to guide your hero visually through a dungeon full of challenges.

00:00:43.100 --> 00:00:49.240
Yet the editor in customized error messages means this is approachable for kids before they can even reliably type.

00:00:49.240 --> 00:00:53.440
On this episode, you'll meet Nick Winter, one of the co-founders of CodeCombat.

00:00:53.820 --> 00:00:59.440
There's a lot of philosophy behind the tool and technology to make it kid-friendly and real Python at the same time.

00:00:59.440 --> 00:01:01.980
Oh, and it's running Python in the browser.

00:01:01.980 --> 00:01:07.500
This is Talk Python To Me, episode 278, recorded July 19th, 2020.

00:01:20.280 --> 00:01:27.040
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:01:27.040 --> 00:01:28.980
This is your host, Michael Kennedy.

00:01:28.980 --> 00:01:31.120
Follow me on Twitter where I'm @mkennedy.

00:01:31.120 --> 00:01:34.860
Keep up with the show and listen to past episodes at talkpython.fm.

00:01:34.860 --> 00:01:37.360
And follow the show on Twitter via at Talk Python.

00:01:37.760 --> 00:01:41.080
This episode is brought to you by Linode and us.

00:01:41.080 --> 00:01:44.780
Have you tried to learn Python but got stuck or lost focus?

00:01:44.780 --> 00:01:52.020
We know how it feels to try and jam fact after fact, loop construct after turn hair expression, into your head.

00:01:52.020 --> 00:01:53.440
At best, it's boring.

00:01:53.440 --> 00:01:56.140
At worst, it can turn you off programming altogether.

00:01:56.140 --> 00:02:00.160
That's why we built our course, Python Jumpstart by Building 10 Apps.

00:02:00.160 --> 00:02:03.400
This course guides you through carefully planned applications.

00:02:03.400 --> 00:02:06.940
It starts simple but progresses to quite real apps.

00:02:06.940 --> 00:02:09.840
Best of all, you won't be learning dry facts.

00:02:09.840 --> 00:02:14.440
You'll be learning like the pros do by building real applications and learning in context.

00:02:14.440 --> 00:02:20.300
If you want to start building with Python, just visit talkpython.fm/course to get started.

00:02:20.300 --> 00:02:22.720
Nick, welcome to Talk Python To Me.

00:02:22.720 --> 00:02:23.960
Oh, thanks for having me.

00:02:23.960 --> 00:02:25.320
Yeah, it's great to have you here.

00:02:25.320 --> 00:02:29.940
Your platform, Code Combat, is something I've been a fan of for a while, ever since I came across it.

00:02:29.940 --> 00:02:31.560
So I'm looking forward to talking to you about it.

00:02:31.560 --> 00:02:33.940
Before we get into that, though, let's start with your story.

00:02:33.940 --> 00:02:34.820
How did you get into programming?

00:02:34.820 --> 00:02:39.000
My dad was an engineer at IBM doing custom chip designs for a long time.

00:02:39.000 --> 00:02:45.380
And so he had the first big open source home automation project written in Perl.

00:02:45.380 --> 00:02:50.400
And he would even have neighborhood kids around mentoring them in coding and all this sort of stuff.

00:02:50.400 --> 00:02:51.440
And I never tried it.

00:02:51.440 --> 00:02:53.400
And so that's not how I got into coding.

00:02:53.400 --> 00:02:56.020
You had this chance, but you didn't take advantage of it.

00:02:56.020 --> 00:02:56.720
I don't even know.

00:02:56.720 --> 00:02:58.740
Maybe I just thought that was like a dad thing.

00:02:58.740 --> 00:02:59.400
I don't know.

00:02:59.400 --> 00:03:00.880
But like, I never tried it.

00:03:00.880 --> 00:03:02.480
I was doing all this other stuff.

00:03:02.480 --> 00:03:05.280
My mom was more on the artistic side, writer.

00:03:05.280 --> 00:03:08.880
And I was trying all the writing really terrible poetry, all that kind of stuff.

00:03:08.880 --> 00:03:11.880
And so when I got to college, I had no idea what I was going to do.

00:03:11.880 --> 00:03:13.560
And I tried everything.

00:03:13.560 --> 00:03:16.400
And chemistry class, maybe not so much fun.

00:03:16.400 --> 00:03:18.020
Poetry class, pretty fun.

00:03:18.020 --> 00:03:20.640
Tried a coding class by luck.

00:03:20.680 --> 00:03:24.580
And I was like, damn, this is so boring.

00:03:24.580 --> 00:03:28.660
And but that was like the first, you know, part of the semester, right?

00:03:28.660 --> 00:03:29.800
Because we're coding in Java.

00:03:29.800 --> 00:03:35.140
And, you know, at this year, I've had like, I've had like billions of years of advanced mathematics

00:03:35.140 --> 00:03:35.660
class.

00:03:35.660 --> 00:03:38.980
And it was like, all right, we are going to do simple arithmetic in Java.

00:03:38.980 --> 00:03:40.880
And it's going to be really hard.

00:03:40.880 --> 00:03:45.040
And I was like, why would I need to make a computer do something that I already know how

00:03:45.040 --> 00:03:46.840
to do since like 20 years ago?

00:03:46.900 --> 00:03:50.380
But like, and we got to the end of that first semester, though.

00:03:50.380 --> 00:03:54.180
And although it was kind of boring, it was really easy for me, not so for necessarily all

00:03:54.180 --> 00:03:58.780
my classmates, just the way that it was taught, typical failure rates in computer science programs.

00:03:58.780 --> 00:04:00.540
And we get to the end.

00:04:00.540 --> 00:04:01.720
And then there's this project.

00:04:01.720 --> 00:04:04.280
And the project is a rabbits and foxes simulation.

00:04:04.280 --> 00:04:07.700
And I was like, okay, got coding it up.

00:04:07.700 --> 00:04:08.220
It's kind of cool.

00:04:08.220 --> 00:04:10.320
I can say these colored squares on the screen.

00:04:10.320 --> 00:04:11.460
There's the red one.

00:04:11.460 --> 00:04:12.440
There's the, wait a minute.

00:04:12.440 --> 00:04:14.160
Could I make another one?

00:04:14.160 --> 00:04:17.240
And of course, this was a sample project, which almost everything done for you so that

00:04:17.240 --> 00:04:18.140
you get anything done.

00:04:18.140 --> 00:04:19.940
And I figured out, I was so proud.

00:04:19.940 --> 00:04:21.140
I put in zombies.

00:04:21.140 --> 00:04:23.660
And so now there's the black squares on the screen.

00:04:23.660 --> 00:04:24.980
I'm like, wait, they're infecting them.

00:04:24.980 --> 00:04:26.960
And there's undead rabbits and zombie kings.

00:04:26.960 --> 00:04:28.240
And I was like, wait a minute.

00:04:28.240 --> 00:04:31.040
You could just make stuff with code.

00:04:31.040 --> 00:04:32.600
You could just do whatever you want.

00:04:32.600 --> 00:04:33.060
It's creative.

00:04:33.060 --> 00:04:34.300
Wait, oh, this is cool.

00:04:34.300 --> 00:04:34.840
I'm into that.

00:04:34.840 --> 00:04:36.100
So then I got into it.

00:04:36.540 --> 00:04:41.120
So this college class, finally, I got lucky with like the last project of that first semester.

00:04:41.120 --> 00:04:42.360
And then I was hooked.

00:04:42.360 --> 00:04:46.460
And so we had that whole computer science undergraduate thing in Java.

00:04:46.460 --> 00:04:48.300
And I was like, man, Java is kind of terrible.

00:04:48.300 --> 00:04:49.440
We got into Scheme.

00:04:49.440 --> 00:04:50.280
We're doing a lot of that.

00:04:50.280 --> 00:04:51.180
I was like, this is great.

00:04:51.180 --> 00:04:55.040
And then we got into Python because I actually had to start writing some real software.

00:04:55.440 --> 00:05:01.040
And that was where you kind of put together a lot of the high level elegance and power

00:05:01.040 --> 00:05:03.140
that you would have from something like a Scheme.

00:05:03.140 --> 00:05:08.220
But you don't have to be a genius hacker, which at that point, I definitely wasn't to like

00:05:08.220 --> 00:05:11.700
actually write something to put some UI on the screen and get people to use it.

00:05:11.700 --> 00:05:12.540
So that's awesome.

00:05:12.540 --> 00:05:14.960
And you didn't have to have like 50 closing parentheses.

00:05:14.960 --> 00:05:22.440
There, I remember doing a lot of closing parentheses and it being real, real messy.

00:05:22.440 --> 00:05:25.200
Scheme is such a crazy language.

00:05:25.200 --> 00:05:26.000
Scheme is less.

00:05:26.000 --> 00:05:29.940
I took that as well in college as like my CS credit or whatever.

00:05:29.940 --> 00:05:31.600
And it kind of drove me crazy.

00:05:31.600 --> 00:05:38.760
But yeah, I feel like hearing your story that it's pretty common that the way programming is

00:05:38.760 --> 00:05:42.840
taught in universities, especially at the low levels, I think it's like, we're just going

00:05:42.840 --> 00:05:48.380
to teach you the facts and you have to wait four months before you can actually do anything.

00:05:48.380 --> 00:05:54.540
And you're just going to have to have this delayed gratification or you have to be motivated

00:05:54.540 --> 00:05:56.500
beyond the near term, right?

00:05:56.500 --> 00:05:58.680
Like I'm going to spend a whole week doing loops.

00:05:58.680 --> 00:06:00.980
I don't really have anything to loop over.

00:06:00.980 --> 00:06:03.060
I don't care about looping, but we're doing loops.

00:06:03.060 --> 00:06:05.800
And then the next time we're doing functions and we're doing types and then we're doing

00:06:05.800 --> 00:06:06.320
interfaces.

00:06:06.320 --> 00:06:09.740
And like it's taught is just like a series of facts.

00:06:10.140 --> 00:06:14.900
I feel like that strips out a lot of people because they don't get to have that experience

00:06:14.900 --> 00:06:17.980
you had at the end of the class until the very end.

00:06:17.980 --> 00:06:19.740
And by that time, a lot of people are like, yeah, no.

00:06:19.740 --> 00:06:20.460
Well, yeah.

00:06:20.460 --> 00:06:24.680
And it's even worse than not having anything to loop over because they do give you something

00:06:24.680 --> 00:06:25.260
to loop over.

00:06:25.260 --> 00:06:26.240
And it's math.

00:06:26.240 --> 00:06:27.960
It's like we're doing arithmetic here.

00:06:27.960 --> 00:06:30.120
Or like it's the terminal stuff.

00:06:30.200 --> 00:06:33.820
Like let's print some strings, but like the length of the string.

00:06:33.820 --> 00:06:36.140
And like that doesn't get you going.

00:06:36.140 --> 00:06:38.040
That's not what's getting most of these kids out of bed.

00:06:38.040 --> 00:06:40.400
It's not what's getting like really matters to folks.

00:06:40.400 --> 00:06:43.720
And so it's sending the message, hey, coding, computer science.

00:06:43.720 --> 00:06:45.560
This is like math, but geekier.

00:06:45.560 --> 00:06:48.400
So, you know, if you're not a math person, stay away.

00:06:48.400 --> 00:06:49.620
That is wrong to me.

00:06:49.620 --> 00:06:50.400
Yeah, I agree.

00:06:50.400 --> 00:06:52.640
Because there's a lot of creative aspects.

00:06:52.640 --> 00:06:55.060
There's a lot of amazing things that you can build.

00:06:55.440 --> 00:07:00.980
I think it's a little bit less so now with all the mobile apps and like applications

00:07:00.980 --> 00:07:05.500
have really infused society or come across like deeply.

00:07:05.500 --> 00:07:08.820
They're all over society now and they're somewhat beautiful.

00:07:08.820 --> 00:07:12.820
A lot of times 10 years ago, that wasn't even the case, right?

00:07:12.820 --> 00:07:17.360
Well, but the thing that you're starting off with is rarely going to be a beautiful mobile

00:07:17.360 --> 00:07:20.900
app that you care about, especially if you're in a formal learning environment.

00:07:20.900 --> 00:07:21.140
Right.

00:07:21.140 --> 00:07:21.780
Maybe it's worse.

00:07:21.780 --> 00:07:25.340
Maybe it's you look at Instagram, that mobile app.

00:07:25.380 --> 00:07:26.100
You're like, I want that.

00:07:26.100 --> 00:07:27.220
They're like, no.

00:07:27.220 --> 00:07:31.500
What you're going to do is you're going to implement the quick sort algorithm in scheme

00:07:31.500 --> 00:07:33.480
by hand over these numbers.

00:07:33.480 --> 00:07:35.020
Why would I do this?

00:07:35.020 --> 00:07:36.260
I would never do this.

00:07:36.260 --> 00:07:37.880
For some of us, it kind of gets you going.

00:07:37.880 --> 00:07:41.840
I liked that part of it, but, you know, I didn't know that I would like that.

00:07:41.840 --> 00:07:44.140
And I never thought like, hey, let me give this a try.

00:07:44.140 --> 00:07:47.920
Yeah, I think ultimately people who are really into it do get to where they like that.

00:07:47.920 --> 00:07:53.380
But I feel like you've got to get to the, hey, this stuff is awesome sort of place.

00:07:53.820 --> 00:07:56.100
And then you can start to appreciate and dig into those things.

00:07:56.600 --> 00:07:59.580
So if we think then what happened next.

00:07:59.580 --> 00:08:04.540
So I was in college and I was learning all this coding stuff and I was also learning math and

00:08:04.540 --> 00:08:10.560
I was learning Chinese and I was reading Paul Graham essays and Paul Graham essays have a

00:08:10.560 --> 00:08:12.660
lot of great stuff in there about your high level languages.

00:08:12.660 --> 00:08:15.900
But they also have this entrepreneurship stuff, which I had never heard of.

00:08:15.900 --> 00:08:19.040
I have been coming for like the scheme talk and the list talk.

00:08:19.780 --> 00:08:23.740
And he's like, he's got one of these where he says, oh, you know, you shouldn't have a job.

00:08:23.740 --> 00:08:24.940
You weren't meant to have a boss.

00:08:24.940 --> 00:08:27.100
You should just start your own startup and do your own thing.

00:08:27.100 --> 00:08:29.660
And smart young people should just start their own startups.

00:08:29.660 --> 00:08:32.040
And I was like, yeah, man, that sounds great.

00:08:32.040 --> 00:08:32.920
I don't want a job.

00:08:32.920 --> 00:08:34.480
I'll just start my own startup.

00:08:34.480 --> 00:08:37.760
So I went to my roommate and I was like, hey, hey, hey, we've got to start our own startups.

00:08:37.760 --> 00:08:39.620
He program says, who is the what?

00:08:39.620 --> 00:08:41.600
No, I'm doing my econometrics homework.

00:08:41.600 --> 00:08:42.980
So I get my Wall Street job.

00:08:43.640 --> 00:08:44.840
And so stop bothering me.

00:08:44.840 --> 00:08:46.680
And I'm like, no, no, no.

00:08:46.680 --> 00:08:48.460
I pestered him until he's finally fine.

00:08:48.460 --> 00:08:53.860
If you can think of something that's a good idea that like as a business, then we can maybe

00:08:53.860 --> 00:08:54.400
give it a shot.

00:08:54.400 --> 00:08:57.840
Until then, Wall Street, econometrics, go away.

00:08:57.840 --> 00:09:03.100
And so I was pondering, pondering, pondering it and had all sorts of really stupid ideas.

00:09:03.100 --> 00:09:08.260
And I went to China as I was learning Chinese for a few weeks.

00:09:09.000 --> 00:09:14.080
And I had this really crazy experience with reverse culture shock.

00:09:14.080 --> 00:09:14.980
And I was really sick.

00:09:14.980 --> 00:09:15.860
And it was like four in the morning.

00:09:15.860 --> 00:09:20.340
And I saw this other guy who was named basically the same as me.

00:09:20.340 --> 00:09:23.640
And he's the only other like Chinese and computer science student in my same year.

00:09:23.640 --> 00:09:25.320
And like randomly met him in Beijing.

00:09:25.320 --> 00:09:27.440
And I had no idea he was going to be there.

00:09:27.440 --> 00:09:28.720
Like Beijing is a city of like 20 million.

00:09:28.720 --> 00:09:29.040
Yeah.

00:09:29.040 --> 00:09:29.760
And so 4 a.m.

00:09:29.760 --> 00:09:33.000
We're getting up to go to the Chinese McDonald's on the way out to fly to the airport.

00:09:33.000 --> 00:09:34.900
I was like, what is going on?

00:09:34.900 --> 00:09:35.820
I see him.

00:09:35.820 --> 00:09:38.500
He's writing Chinese characters.

00:09:38.500 --> 00:09:42.520
On his Nintendo DS practicing it at like the stroke level.

00:09:42.520 --> 00:09:43.860
So he's got this handwriting recognition.

00:09:43.860 --> 00:09:45.500
And I'm like, man, that's so cool.

00:09:45.500 --> 00:09:47.200
I need to learn Chinese characters like that.

00:09:47.200 --> 00:09:47.680
And he's like, what?

00:09:47.680 --> 00:09:49.400
No, I'm playing trauma surgery.

00:09:49.400 --> 00:09:52.840
I'm like a Japanese surgeon in combat, like saving patients.

00:09:52.840 --> 00:09:54.840
I'm like, oh, I thought you were practicing Chinese.

00:09:54.840 --> 00:09:55.980
Oh, wait a minute.

00:09:55.980 --> 00:09:57.920
I do want to practice Chinese like that.

00:09:57.920 --> 00:10:01.980
So I, and that was the first kind of Python program, right?

00:10:01.980 --> 00:10:06.180
We got into it there because I was like, hey, I need to write some software that makes it

00:10:06.180 --> 00:10:11.880
so that you can write characters in Chinese at the stroke level and like practice that

00:10:11.880 --> 00:10:12.080
way.

00:10:12.080 --> 00:10:15.500
Because it takes a lot of learning Chinese characters to really learn Chinese.

00:10:15.500 --> 00:10:16.380
And that's like the hard part.

00:10:16.380 --> 00:10:17.160
So it's all that part.

00:10:17.160 --> 00:10:18.880
Like, hey, that's got to be a business there.

00:10:18.880 --> 00:10:19.940
People pay for that, right?

00:10:19.940 --> 00:10:21.060
I pay for that.

00:10:21.060 --> 00:10:23.260
Well, I mean, I don't have any money, but I would, I would use it.

00:10:23.380 --> 00:10:27.860
And so you can see we're thinking much more from the technology aspect at that time than

00:10:27.860 --> 00:10:28.660
the business aspect.

00:10:28.660 --> 00:10:29.740
But we say, hey, there's a problem.

00:10:29.740 --> 00:10:30.640
We can solve it.

00:10:30.640 --> 00:10:34.180
And, you know, we reach for the real practical language here.

00:10:34.180 --> 00:10:37.300
We're not pulling Lisp off the shelf where we're going into Python.

00:10:37.300 --> 00:10:38.100
And I hardly knew it.

00:10:38.100 --> 00:10:44.120
So the first Python program that I wrote basically was this character editor that would like start

00:10:44.120 --> 00:10:46.680
to form the data layer for this Chinese language learning app.

00:10:46.680 --> 00:10:51.580
And with that, I was able to convince my roommates to kind of jump and not go and work in Wall

00:10:51.580 --> 00:10:53.420
Street, which is great because that was 2008.

00:10:53.420 --> 00:10:57.080
And my roommate was actually not a terrible time to go to Wall Street.

00:10:57.080 --> 00:10:58.160
Then lost that job.

00:10:58.160 --> 00:10:58.760
Yeah.

00:10:58.760 --> 00:11:01.680
He would have had a good two month run there maybe.

00:11:01.680 --> 00:11:03.520
But yeah, yeah, yeah.

00:11:03.520 --> 00:11:03.820
Yeah.

00:11:03.820 --> 00:11:08.920
So we, then we're just some guys hacking in our house and working on this thing, see if

00:11:08.920 --> 00:11:09.460
we can get it going.

00:11:09.460 --> 00:11:15.940
And, you know, even though we were really kind of terrible coders at that time, but, you

00:11:15.940 --> 00:11:19.080
know, Python was flexible enough that we didn't get bogged down in architecture.

00:11:19.080 --> 00:11:21.560
And we wrote that we had, you know, at the time, we had, you know,

00:11:21.560 --> 00:11:22.780
at that time there was no iPhones.

00:11:22.780 --> 00:11:27.220
It was like welcome tablets and, you know, handwriting recognition, learn some Chinese,

00:11:27.220 --> 00:11:28.620
hack on some code.

00:11:28.620 --> 00:11:30.720
And, you know, that took off.

00:11:30.720 --> 00:11:36.620
So we made the, and, you know, the backend we did in Google app engine with Python and

00:11:36.620 --> 00:11:37.000
Django.

00:11:37.000 --> 00:11:38.920
And we kind of got it going.

00:11:38.920 --> 00:11:40.200
We got profitable.

00:11:40.200 --> 00:11:44.580
We made the number one app for foreigners to learn to write Chinese characters and off

00:11:44.580 --> 00:11:44.960
to the races.

00:11:45.180 --> 00:11:48.940
So the first Python program I wrote ended up, you know, pretty good, man.

00:11:48.940 --> 00:11:49.900
That's pretty awesome.

00:11:49.900 --> 00:11:51.840
That sounds like a useful app.

00:11:51.840 --> 00:11:57.480
And I think it captures a little bit of what you've done with code combat as well.

00:11:57.480 --> 00:12:03.640
in the sense of, oh, I don't want to just sit down and learn this rote memory practice type

00:12:03.640 --> 00:12:05.640
of thing, but I want to learn it in the context of play.

00:12:05.640 --> 00:12:11.120
If we think of kind of the transition from Skritter, which is the Chinese character running out to

00:12:11.120 --> 00:12:14.160
code combat, it was the same founding team.

00:12:14.160 --> 00:12:19.440
And we had, we'd been running it for five years and we said, Hey, well, you know, we've made enough

00:12:19.440 --> 00:12:21.160
money to not need to work again.

00:12:21.160 --> 00:12:21.800
Let's retire.

00:12:22.660 --> 00:12:24.700
And I made it about nine days.

00:12:24.700 --> 00:12:26.120
I was like, guys, I'm so depressed.

00:12:26.120 --> 00:12:27.380
We got to do another one.

00:12:27.380 --> 00:12:28.960
And they're like, okay, what should we do?

00:12:28.960 --> 00:12:30.800
We had some really stupid ideas on there too.

00:12:30.800 --> 00:12:32.820
We're like invisibility cloaks that actually work.

00:12:32.820 --> 00:12:33.360
Let's do it.

00:12:33.360 --> 00:12:35.380
And they were like, no, no, what do we know guys?

00:12:35.380 --> 00:12:37.260
We know how to make ed tech teach hard things.

00:12:37.260 --> 00:12:38.100
Okay.

00:12:38.100 --> 00:12:42.740
Cause we take this language learning approach to learning Chinese characters.

00:12:42.740 --> 00:12:43.300
Obvious.

00:12:43.300 --> 00:12:43.920
It's a language.

00:12:43.920 --> 00:12:44.600
You should do that.

00:12:44.600 --> 00:12:46.460
And then we thought, okay, coding.

00:12:46.460 --> 00:12:47.800
That's something we cared a lot about.

00:12:47.800 --> 00:12:50.440
Me and my other co-founder, you know, he had also learned in college.

00:12:50.440 --> 00:12:52.140
We both wished we'd learned earlier.

00:12:52.140 --> 00:12:58.000
And we're like, okay, well, yeah, those CS classes could have worked a lot better if

00:12:58.000 --> 00:13:03.500
we kind of built the fluency first, as opposed to kind of the intensive learning.

00:13:03.500 --> 00:13:07.660
We do the extensive learning where it's easy, just right at that zone of proximal development.

00:13:07.660 --> 00:13:12.140
You're going to go for hours in flow state as opposed to go for half an hour and, you know,

00:13:12.140 --> 00:13:15.980
rage kick your segfault computer out of the window or something.

00:13:16.200 --> 00:13:21.100
And so we're like, all right, well, if you can build the convert, if you can make it more

00:13:21.100 --> 00:13:24.840
like language learning than like math, where you're having a conversation with the computer,

00:13:24.840 --> 00:13:30.700
then I mean, language learning, if you have a kid and you have a native speaker and they

00:13:30.700 --> 00:13:35.420
have a one-on-one conversation and the native speaker can bring it down to the kid's level,

00:13:35.420 --> 00:13:38.420
like, obviously that kid is going to learn that language.

00:13:38.560 --> 00:13:42.840
It's not a question of if they're like a language person, like people think of themselves as math

00:13:42.840 --> 00:13:43.980
people or not math people.

00:13:43.980 --> 00:13:46.600
Like that would be absurd to think, oh, I'm not a Spanish person.

00:13:46.600 --> 00:13:47.800
I can't, I can't learn Spanish.

00:13:47.800 --> 00:13:49.000
I mean, that would mean something else, right?

00:13:49.000 --> 00:13:49.960
I'm not from Spain.

00:13:49.960 --> 00:13:54.380
But so we were thinking, okay, if you use these methodologies where you have just like native

00:13:54.380 --> 00:13:58.500
speaker conversation with the learner and you can bring it down to the learner's level,

00:13:58.500 --> 00:14:00.500
then that should work, right?

00:14:00.500 --> 00:14:05.080
If computer science, the hard part of that is actually the coding part, as opposed to

00:14:05.080 --> 00:14:09.520
the science part where you, all these other things are pretty easy to explain in lectures

00:14:09.520 --> 00:14:12.640
or there's not all that much science in what most people do with it either.

00:14:12.640 --> 00:14:15.760
It's kind of the craftsmanship and being able to express your thoughts to the computer.

00:14:15.760 --> 00:14:20.960
Well, if we have, we need a native speaker, well, who's the native speaker of coding?

00:14:20.960 --> 00:14:22.300
Well, it's the computer already.

00:14:22.300 --> 00:14:28.080
Like you don't need a human for that, but the computer only speaks computer language.

00:14:28.400 --> 00:14:32.340
So you, you, you get the beginner coming in there and they're saying, you know, they're

00:14:32.340 --> 00:14:36.840
trying to print out their hello world, but you know, they're like putting some extra spaces

00:14:36.840 --> 00:14:38.040
in there, whatever they do.

00:14:38.040 --> 00:14:39.380
Of course, they're going to make some mistakes.

00:14:39.380 --> 00:14:42.640
Normally that syntax error, unexpected token.

00:14:42.640 --> 00:14:44.680
And they're like, yeah, what does this mean?

00:14:44.680 --> 00:14:45.560
And they need someone to explain.

00:14:45.560 --> 00:14:45.780
Right.

00:14:45.780 --> 00:14:48.600
I like, I forgot the comma, but it knows what I mean, right?

00:14:48.600 --> 00:14:50.320
Like, no, it doesn't know what you mean.

00:14:50.320 --> 00:14:51.900
It has zero forgiveness.

00:14:51.900 --> 00:14:52.740
Yeah.

00:14:52.740 --> 00:14:53.540
No forgiveness.

00:14:53.540 --> 00:14:55.820
And it's because all of the code engines out there.

00:14:55.820 --> 00:14:59.440
And I mean, I love the Python interpreter, but like it, like everything else was designed

00:14:59.440 --> 00:15:04.600
for professional software engineers to use by professional software engineers who have

00:15:04.600 --> 00:15:05.640
this curse of knowledge.

00:15:05.640 --> 00:15:10.000
And they're like, oh yeah, this makes sense without ever thinking like, what if it didn't

00:15:10.000 --> 00:15:10.480
make sense?

00:15:10.480 --> 00:15:11.440
What should you say?

00:15:11.440 --> 00:15:16.860
And so not at all suitable for beginners, but that's every text-based code language engine

00:15:16.860 --> 00:15:18.220
out there that I know of, right?

00:15:18.220 --> 00:15:20.380
Error messages are quite arcane.

00:15:20.600 --> 00:15:24.000
And that's a huge problem in learning to code because you need someone to interpret.

00:15:24.000 --> 00:15:29.620
So if you did something as simple as seemingly simple as make all the error messages make

00:15:29.620 --> 00:15:34.540
sense, then that'd be a huge step towards having that conversation flow.

00:15:35.100 --> 00:15:39.740
So for example, in CodeEngine, in CodeCombat's CodeEngine, we have written a lot of codes

00:15:39.740 --> 00:15:45.020
so that, you know, no matter where in the stack the error is, whether this is a syntax error,

00:15:45.020 --> 00:15:49.580
a linting error, it's a runtime error, it's maybe not even an error, but it's just a logic

00:15:49.580 --> 00:15:53.540
error and could be valid, but we happen to know it isn't for this level that you're trying

00:15:53.540 --> 00:15:53.800
to do.

00:15:53.800 --> 00:15:56.120
Then we'll say beginner-friendly error message.

00:15:56.260 --> 00:16:01.540
So it will say, don't put a space, or that should be a capital R, not a lowercase R.

00:16:01.540 --> 00:16:06.860
Did you spell, you said dwan instead of down, you should probably fix that.

00:16:06.860 --> 00:16:07.140
Yeah.

00:16:07.140 --> 00:16:11.100
And everything else is like syntax error and expected token or, you know, undefined method.

00:16:11.100 --> 00:16:12.700
Like, those are not words.

00:16:12.700 --> 00:16:19.780
So when we came at it with this language learning perspective, then you have the native speaker,

00:16:19.780 --> 00:16:23.440
which is the computer, get it to speak the beginner's language.

00:16:23.920 --> 00:16:25.480
And then, you know, people are just off to the races.

00:16:25.480 --> 00:16:27.840
Like, every mistake they make is a teaching opportunity.

00:16:27.840 --> 00:16:31.460
They solve it in 10 seconds that it takes them to read the error message and edit the code.

00:16:31.460 --> 00:16:33.560
And that is so much faster.

00:16:33.560 --> 00:16:34.860
It's that conversation.

00:16:34.860 --> 00:16:41.880
So if our insight for teaching coding was you have that conversational mode as opposed to

00:16:41.880 --> 00:16:48.020
that intensive kind of abstract, geeky instruction kind of mode, and then you have to make it mean

00:16:48.020 --> 00:16:50.880
something like you were saying to the learner.

00:16:51.540 --> 00:16:55.000
And what do you, you know, if we're targeting kids, especially here, what do kids care about?

00:16:55.000 --> 00:16:57.320
They want to make and play games.

00:16:57.320 --> 00:16:59.260
You want to make websites and apps.

00:16:59.260 --> 00:17:00.680
And those are the things that matter.

00:17:00.680 --> 00:17:07.580
And so if you can get them learning to code and making that stuff quickly, then that has

00:17:07.580 --> 00:17:12.680
meaning not just for your geeky boy who sees themselves as, you know, a coder someday, which

00:17:12.680 --> 00:17:14.440
is a huge minority of the population.

00:17:14.440 --> 00:17:17.900
It's more like basically everyone because 97% of kids play video games.

00:17:17.900 --> 00:17:22.720
So like, what was I doing instead of learning all this coding stuff from my dad?

00:17:22.720 --> 00:17:24.280
Well, I was just playing video games the whole time.

00:17:24.280 --> 00:17:29.540
And so if I had had a video game that taught me to code, maybe we could, we could get out

00:17:29.540 --> 00:17:30.340
on that a little earlier.

00:17:30.340 --> 00:17:32.080
And same thing for co-founders, right?

00:17:32.160 --> 00:17:38.760
So we're like, can you make it so that you're just playing a game and not like gamified where

00:17:38.760 --> 00:17:39.960
you just get badges and points?

00:17:39.960 --> 00:17:44.720
Because with our first business, Skritter, you know, you would get, the users would say,

00:17:44.720 --> 00:17:45.460
hey, it's so great.

00:17:45.460 --> 00:17:46.200
It's like a game.

00:17:46.200 --> 00:17:47.760
And we're like, no, it's a hardcore learning.

00:17:47.760 --> 00:17:48.220
So what do you mean?

00:17:48.220 --> 00:17:48.980
It's not like a game at all.

00:17:48.980 --> 00:17:51.900
I'm like, well, there's, you know, you go fast, there's animations, and then you get

00:17:51.900 --> 00:17:52.220
points.

00:17:52.220 --> 00:17:53.380
So like, no, no, no, there's no points.

00:17:53.380 --> 00:17:54.060
What do you mean points?

00:17:54.060 --> 00:17:54.540
There's no points.

00:17:54.540 --> 00:17:56.660
Well, the number of characters, you know, it's kind of like points.

00:17:56.660 --> 00:17:57.140
There's a graph.

00:17:57.140 --> 00:18:00.140
A real game would have this, this, this, this.

00:18:00.140 --> 00:18:00.960
And they're like, that's great.

00:18:00.960 --> 00:18:02.100
When are we going to get those features?

00:18:02.100 --> 00:18:03.560
We said, this is a tiny market.

00:18:03.560 --> 00:18:04.240
And we're already number one.

00:18:04.240 --> 00:18:05.240
We're not going to build that.

00:18:05.240 --> 00:18:06.360
Wait a minute.

00:18:06.360 --> 00:18:09.940
We could build that for this other market, which is much more starting to learn about business

00:18:09.940 --> 00:18:10.660
and markets here.

00:18:10.660 --> 00:18:15.660
This portion of Talk Python To Me is brought to you by Linode.

00:18:15.660 --> 00:18:19.780
Whether you're working on a personal project or managing your enterprise's infrastructure,

00:18:19.780 --> 00:18:24.160
Linode has the pricing, support, and scale that you need to take your project to the

00:18:24.160 --> 00:18:24.620
next level.

00:18:25.140 --> 00:18:29.420
With 11 data centers worldwide, including their newest data center in Sydney, Australia,

00:18:29.420 --> 00:18:35.880
enterprise-grade hardware, S3-compatible storage, and the next-generation network, Linode

00:18:35.880 --> 00:18:39.280
delivers the performance that you expect at a price that you don't.

00:18:39.280 --> 00:18:45.620
Get started on Linode today with a $20 credit, and you get access to native SSD storage, a 40-gigabit

00:18:45.620 --> 00:18:51.400
network, industry-leading processors, their revamped cloud manager at cloud.linode.com, root

00:18:51.400 --> 00:18:55.120
access to your server, along with their newest API and a Python CLI.

00:18:55.120 --> 00:19:01.080
Just visit talkpython.fm/Linode when creating a new Linode account, and you'll

00:19:01.080 --> 00:19:03.380
automatically get $20 credit for your next project.

00:19:03.380 --> 00:19:04.640
Oh, and one last thing.

00:19:04.640 --> 00:19:05.440
They're hiring.

00:19:05.440 --> 00:19:08.540
Go to linode.com slash careers to find out more.

00:19:08.540 --> 00:19:09.860
Let them know that we sent you.

00:19:11.940 --> 00:19:13.560
Could you even do it?

00:19:13.560 --> 00:19:19.940
And so that's where we spent years and years in the R&D phase, building up code combat, seeing

00:19:19.940 --> 00:19:23.720
if we could get this interpreter to work, seeing if we could get the game engine to work, seeing

00:19:23.720 --> 00:19:25.400
if you could get those two things to work together.

00:19:26.480 --> 00:19:30.580
And that was just a lot of hacking and hacking and hacking, like we do, just sitting in my

00:19:30.580 --> 00:19:35.760
succession of tiny, now in the Bay Area apartments, and eventually got something going, eventually

00:19:35.760 --> 00:19:40.280
got those kids not just in JavaScript, which runs in the browser, but you have it in Python

00:19:40.280 --> 00:19:43.700
too, because the code engine supports these other front-end languages.

00:19:44.440 --> 00:19:46.940
Which is such a nice learning language.

00:19:46.940 --> 00:19:47.700
Oh, it's the best.

00:19:47.700 --> 00:19:52.720
I think Python's special in that regard, in that it's good for learning, but you can build

00:19:52.720 --> 00:19:58.460
professional things like Instagram or whatever else, right?

00:19:58.460 --> 00:19:59.560
Pinterest, you name it.

00:19:59.560 --> 00:20:03.840
It spans that spectrum, which I think is one of its superpowers.

00:20:03.840 --> 00:20:04.980
Oh, it's so fantastic.

00:20:04.980 --> 00:20:10.220
And if you look, depending on how you count, Python and JavaScript are the top two languages.

00:20:10.220 --> 00:20:12.960
Maybe some ways you count Java gets in there in the top three.

00:20:13.580 --> 00:20:19.580
But to have Python, which is so great for learning, and also so great for everything else, also

00:20:19.580 --> 00:20:23.300
be so popular to where it could be the default choice if someone doesn't have a reason that

00:20:23.300 --> 00:20:25.280
they're coming in to learn something else, like, hey, try Python.

00:20:25.280 --> 00:20:30.940
I think we haven't measured this super exhaustively, but I think it's about a grade level easier

00:20:30.940 --> 00:20:31.720
than JavaScript.

00:20:31.720 --> 00:20:35.560
And for what we're doing, Code Combat, it's all basically the same stuff.

00:20:35.560 --> 00:20:40.880
You're not doing any language-specific things in the beginning, but it's the syntax and your

00:20:40.880 --> 00:20:43.000
curly braces versus your colons and indentation.

00:20:43.200 --> 00:20:48.640
Like, you know, it's a whole year worth of, you know, kid development on average, thereabouts,

00:20:48.640 --> 00:20:51.100
easier to do it in Python.

00:20:51.100 --> 00:20:51.240
Yeah.

00:20:51.240 --> 00:20:51.580
Yeah.

00:20:51.580 --> 00:20:52.620
So you can start sooner.

00:20:52.620 --> 00:20:54.160
And yeah.

00:20:54.160 --> 00:20:58.480
So let's, I don't think we formally talked about what Code Combat is.

00:20:58.480 --> 00:21:00.520
We talked about the history, which is incredible.

00:21:00.520 --> 00:21:01.600
I had no idea about it.

00:21:01.600 --> 00:21:08.300
But you tell people what Code Combat, like, what's the experience when you go there as a learner?

00:21:08.500 --> 00:21:09.820
You talked about playing it as a game.

00:21:09.820 --> 00:21:10.660
Like, what is it?

00:21:10.660 --> 00:21:10.920
Yeah.

00:21:10.920 --> 00:21:13.580
So it's the game for learning how to code.

00:21:13.880 --> 00:21:18.840
We can qualify that a little bit to say it's aimed at kids age 8 to 18, basically as soon

00:21:18.840 --> 00:21:19.580
as they can type.

00:21:19.580 --> 00:21:21.680
Not to say that only kids play it.

00:21:21.680 --> 00:21:23.060
We have a lot of adults play it.

00:21:23.060 --> 00:21:24.820
We just aren't marketing it in that audience.

00:21:24.820 --> 00:21:27.680
Still, what are the best ways to learn to code from scratch?

00:21:28.280 --> 00:21:32.080
And so you get in there, you're playing a game, you're controlling your hero.

00:21:32.080 --> 00:21:37.740
In the beginning, you're kind of escaping from dungeons, solving mazes, killing ogres, and

00:21:37.740 --> 00:21:39.000
you're building your armies.

00:21:39.000 --> 00:21:40.720
And it progresses from there.

00:21:40.720 --> 00:21:43.380
So dungeon crawling role playing game in the beginning.

00:21:43.380 --> 00:21:48.160
And then as you learn more pieces of code, because everything you do in the game, you're

00:21:48.160 --> 00:21:48.640
coding, right?

00:21:48.640 --> 00:21:51.040
You can't even move your hero without coding some stuff.

00:21:51.660 --> 00:21:54.380
But as you go through the game, you get more items.

00:21:54.380 --> 00:21:58.480
And so this could be a new sword, a shield, a pet, whatever it is.

00:21:58.480 --> 00:22:02.100
Those things give you new APIs and new control structures.

00:22:02.100 --> 00:22:09.960
And so as you progress through this really natural game-based learning progression of loot and

00:22:09.960 --> 00:22:15.260
XP and leveling up and new challenges, it's introducing and making you use and learn and

00:22:15.260 --> 00:22:18.120
practice different coding concepts and new abilities.

00:22:18.120 --> 00:22:21.460
So you're not just leveling up your hero, you're leveling up your knowledge of coding.

00:22:22.000 --> 00:22:24.420
You can do that in Python, JavaScript.

00:22:24.420 --> 00:22:26.760
We have CoffeeScript, Lua.

00:22:26.760 --> 00:22:28.800
In China, we have C++.

00:22:28.800 --> 00:22:30.840
Java could be turned on at any point.

00:22:30.840 --> 00:22:35.020
All those things go into this code engine because what we're really trying to do is be the best

00:22:35.020 --> 00:22:35.740
way to learn to code.

00:22:35.740 --> 00:22:42.320
And so whether it is magic craziness over in the code editor, whether it's kind of deep

00:22:42.320 --> 00:22:46.820
dive into the code engine, whether it is kind of custom tuning on the game engine and

00:22:46.820 --> 00:22:50.400
the levels, whether it's just like a look at the overall pedagogy.

00:22:50.760 --> 00:22:57.220
Everything is trying to get the kids to learn coding and computer science, both more engagingly

00:22:57.220 --> 00:22:59.640
and more efficiently than otherwise they would be doing.

00:22:59.640 --> 00:23:01.820
So that is what it is.

00:23:01.820 --> 00:23:06.620
We do that for kids at home, which of course doesn't need to be kids, but it's usually kids.

00:23:06.620 --> 00:23:12.640
We'll also now, a new thing we're doing is we will give you a coding teacher on video call

00:23:12.640 --> 00:23:16.060
to help you go through this stuff as well and maybe explain a little bit more about the concepts

00:23:16.060 --> 00:23:16.940
around it.

00:23:16.940 --> 00:23:19.820
And then we also have it in the school.

00:23:19.820 --> 00:23:24.820
So the computer science curriculum, the new teacher needs to run a full coding class, full

00:23:24.820 --> 00:23:27.820
computer science class, even if they don't have any coding background.

00:23:27.820 --> 00:23:29.860
Because you have the self-paced software.

00:23:29.860 --> 00:23:34.420
I mean, each computer is kind of doing a lot of the instruction in dialogue with the student.

00:23:34.660 --> 00:23:38.600
And then we provide all the curriculum and lesson plans and resources for the teacher

00:23:38.600 --> 00:23:39.480
to run that class.

00:23:39.480 --> 00:23:44.200
And it's been doing pretty well lately just because with COVID-19 and all the school shut

00:23:44.200 --> 00:23:48.800
down, you need something that's distance learning friendly in the schools that kids might actually

00:23:48.800 --> 00:23:53.320
want to do, even if they have no better options when stuck in the classroom.

00:23:53.320 --> 00:23:55.900
Now the whole internet is right there on that same computer.

00:23:55.900 --> 00:23:57.480
So you got to engage them where they are.

00:23:57.760 --> 00:23:58.900
And I think it's super engaging.

00:23:58.900 --> 00:24:03.220
So let me try to talk a little bit about what I think the experience feels like.

00:24:03.220 --> 00:24:04.780
And it's definitely like what you said.

00:24:04.780 --> 00:24:07.380
You have these different, you call them worlds, right?

00:24:07.380 --> 00:24:07.700
Yes.

00:24:07.700 --> 00:24:11.940
In the home version, you would progress from the dungeon world to the forest world, the desert,

00:24:11.940 --> 00:24:13.380
the mountain, the glacier.

00:24:13.380 --> 00:24:17.460
And the kids really, really are excited about the volcano, which doesn't exist yet.

00:24:17.460 --> 00:24:19.580
But it's kind of like there to tease them.

00:24:19.580 --> 00:24:24.580
But if you got all the way to the glacier, like, you know, you probably all plus code the volcano

00:24:24.580 --> 00:24:25.880
because it gets pretty advanced.

00:24:26.000 --> 00:24:26.520
Yeah, for sure.

00:24:26.520 --> 00:24:34.320
So what you do is you go into these worlds and then each world has maybe 40 or so little

00:24:34.320 --> 00:24:36.780
puzzles or challenges, right?

00:24:36.780 --> 00:24:42.140
So you, if you go to like one here, if I click on it, it'll say, okay, I'm going to descend

00:24:42.140 --> 00:24:43.020
further into the dungeon.

00:24:43.020 --> 00:24:45.360
So what I need to do is use a loop to navigate.

00:24:45.360 --> 00:24:47.300
And then it talks about the lessons I'm going to learn.

00:24:47.300 --> 00:24:49.640
I'm going to get arguments, basic syntax and while loops.

00:24:49.640 --> 00:24:52.960
And then when you go in there, you get your little character.

00:24:52.960 --> 00:24:54.600
And this is like a visual thing, right?

00:24:54.620 --> 00:24:57.140
It's not like a mud or a text-based game.

00:24:57.140 --> 00:25:01.620
It's like literally the characters are there, which is super cool.

00:25:01.620 --> 00:25:05.660
And then when you go do the programming, and this is the thing that I thought was really

00:25:05.660 --> 00:25:12.120
the magic of what you guys have built is that you've got this nice code editor that's true

00:25:12.120 --> 00:25:13.320
Python, right?

00:25:13.320 --> 00:25:14.100
Or the other languages.

00:25:14.100 --> 00:25:16.160
But I think the Python one is extra special.

00:25:16.360 --> 00:25:19.360
And when you go there, you type Python code.

00:25:19.360 --> 00:25:22.760
But the editor has a special kind of autocomplete.

00:25:22.760 --> 00:25:27.840
I think you would say that is incredibly beginner friendly.

00:25:27.840 --> 00:25:30.820
So like you might have to type hero dot move, right?

00:25:30.820 --> 00:25:32.060
Parenthesis, parenthesis.

00:25:32.360 --> 00:25:39.160
And if you just type the word R or RI, it'll like autocomplete hero dot move, right?

00:25:39.160 --> 00:25:40.320
It'll complete the whole thing.

00:25:40.320 --> 00:25:42.820
So you can just type a little tiny bit of what you want.

00:25:42.820 --> 00:25:47.360
And I think that that's so special because you don't have to form it all.

00:25:47.360 --> 00:25:53.260
Like if you misspell hero and you type dot in a regular editor, you get nothing, right?

00:25:53.260 --> 00:25:53.980
Right.

00:25:54.060 --> 00:25:56.460
Or if you just type the word right, it's like, oh, what you actually have to do is

00:25:56.460 --> 00:25:57.380
hero dot move, right?

00:25:57.380 --> 00:26:04.160
So I feel like it's incredibly supportive for writing real code rather than, you know,

00:26:04.160 --> 00:26:06.060
I think there's this trade-off that people always make.

00:26:06.060 --> 00:26:09.960
Like, oh, you can do like a blocky scratch language where you drag the blocks around and

00:26:09.960 --> 00:26:14.080
you get like a looping block and you drag the blocks into the looping block.

00:26:14.080 --> 00:26:18.020
And it's like, that's maybe programming thinking, but that's far from programming.

00:26:18.020 --> 00:26:19.140
Yeah.

00:26:19.140 --> 00:26:19.760
Real code.

00:26:19.760 --> 00:26:23.920
Whereas this, I feel like it's almost as supportive, but you write

00:26:23.920 --> 00:26:27.140
real code and you see it actually do things.

00:26:27.140 --> 00:26:32.920
Well, there's definitely a lot more to writing, even in CoCombat, writing this text-based code,

00:26:32.920 --> 00:26:37.580
whether it's Python, JavaScript, whatever, than to dragging the blocks around in something

00:26:37.580 --> 00:26:39.080
like Scratch or Blockly.

00:26:39.080 --> 00:26:43.640
Those are really great introductions to computational thinking, I would say.

00:26:43.640 --> 00:26:47.040
And you can actually write a bunch of stuff in there that gets fairly advanced.

00:26:47.040 --> 00:26:52.900
The problem is you do not learn some of the key skills by doing that.

00:26:53.160 --> 00:26:57.240
So there are some things that like, yeah, this is just as good for conceptualizing how a loop

00:26:57.240 --> 00:26:59.080
works or variable or something like that.

00:26:59.080 --> 00:27:04.480
But you are not building any of the fluency with formal syntax that you're going to need

00:27:04.480 --> 00:27:05.120
eventually.

00:27:05.120 --> 00:27:08.840
And you're not building most of your facility with debugging.

00:27:09.720 --> 00:27:11.420
And, you know, a few other things there.

00:27:11.420 --> 00:27:17.660
So the problem comes when kids tend to move from those drag and drop block-based visual programming

00:27:17.660 --> 00:27:19.220
things to text-based.

00:27:19.220 --> 00:27:22.260
And they've actually learned a lot of coding, computational thinking concepts.

00:27:22.260 --> 00:27:25.600
But they start facing that blank editor page.

00:27:25.600 --> 00:27:26.600
They try to type something in.

00:27:26.600 --> 00:27:27.360
They don't know the syntax.

00:27:27.360 --> 00:27:29.300
And they feel like they've learned nothing.

00:27:29.300 --> 00:27:32.860
And a lot of times they rage quit out of coding forever at that moment.

00:27:32.940 --> 00:27:35.360
And really, they just had a few extra things to learn.

00:27:35.360 --> 00:27:38.640
And then they can go on and express those concepts they had gotten practice with.

00:27:38.640 --> 00:27:40.900
But that transfer is pretty hard to show.

00:27:40.900 --> 00:27:44.840
And people always avoid starting there because it's so complicated.

00:27:44.840 --> 00:27:50.060
The teachers will have such a hard time with like setting up Python or JavaScript and then

00:27:50.060 --> 00:27:51.100
debugging it.

00:27:51.280 --> 00:27:55.880
with this environment being so supportive in the editor, like totally geared for, I'm going

00:27:55.880 --> 00:27:59.340
to help you write that line of code from, you know, 10 options that you might potentially

00:27:59.340 --> 00:27:59.640
write.

00:27:59.640 --> 00:28:04.960
It makes it entirely doable for an entirely different level of learner.

00:28:04.960 --> 00:28:05.420
Yeah.

00:28:05.420 --> 00:28:10.840
So the, we had learned a lot from Brett Victor's learnable programming essay when we were starting

00:28:10.840 --> 00:28:11.060
out.

00:28:11.060 --> 00:28:16.480
And that we tested out a lot of his more advanced things too, like time travel, debugging, and

00:28:16.480 --> 00:28:18.120
all this showing the variable state.

00:28:18.260 --> 00:28:21.940
It turns out a lot of that stuff is not what the learner needs in the very beginning.

00:28:21.940 --> 00:28:23.920
Although really great thinking.

00:28:23.920 --> 00:28:27.540
And I'd love to get that some more of that turned back on for more advanced players someday.

00:28:27.540 --> 00:28:35.060
But the things that you really need to lower that hurdle of formal syntax are just being

00:28:35.060 --> 00:28:38.900
incredibly forgiving, but sensitive to the kinds of mistakes that people are making.

00:28:38.900 --> 00:28:43.620
And this goes way beyond what we would thought it would ever come to in terms of what you need

00:28:43.620 --> 00:28:48.540
to do in that text editor so that students aren't bleeding all over themselves and cutting

00:28:48.540 --> 00:28:49.440
themselves on sharp edges.

00:28:49.440 --> 00:28:54.620
So for example, let's say that you, like you mentioned with the autocomplete, you got to

00:28:54.620 --> 00:28:57.980
do the fuzzy ordering because they're typoing all over the place.

00:28:57.980 --> 00:29:02.320
So this fuzzy search through your options, and this would never work in a real code editor

00:29:02.320 --> 00:29:06.420
because you've got hundreds, if not thousands of things that you could autocomplete.

00:29:07.100 --> 00:29:11.120
It's not going to be a great experience if you're starting to pop up all these options.

00:29:11.120 --> 00:29:18.080
But when in CoCombat, we can start them off from a set of four APIs and progress adding one

00:29:18.080 --> 00:29:19.180
or two at a time from there.

00:29:19.180 --> 00:29:21.160
So they always have a sense of what's available.

00:29:21.160 --> 00:29:25.720
And then they learn just how many characters or digits they need to type in order to activate

00:29:25.720 --> 00:29:26.140
those.

00:29:26.140 --> 00:29:28.020
And that's that smooth progression.

00:29:28.020 --> 00:29:28.340
Okay.

00:29:28.380 --> 00:29:29.960
So we knew we were going to need something like that.

00:29:29.960 --> 00:29:36.540
What we didn't know is stuff like if someone is typing an argument, like a number or a string

00:29:36.540 --> 00:29:39.780
or something like hero to attack Brack and Brack is the name of the ogre.

00:29:39.780 --> 00:29:45.640
Every kid out there, they're going to type, you know, maybe hero dot, maybe HA, maybe ATT.

00:29:45.640 --> 00:29:47.260
They're going to select the attack.

00:29:47.260 --> 00:29:53.060
Now you, you got to highlight the inside of the quotes for them, because if they just start

00:29:53.060 --> 00:29:54.380
typing, they're not going to type the quotes.

00:29:54.380 --> 00:29:55.100
They're going to delete them.

00:29:55.100 --> 00:29:56.100
They're going to get one off.

00:29:56.660 --> 00:29:58.380
Those kind of errors are kind of hard to fix.

00:29:58.380 --> 00:30:01.500
They're going to type, replace the enemy name with Brack.

00:30:01.500 --> 00:30:02.000
Okay.

00:30:02.000 --> 00:30:03.500
They're probably going to do it with lowercase.

00:30:03.500 --> 00:30:06.600
So you have to fire a message that says, Hey, that should be an uppercase B.

00:30:06.600 --> 00:30:08.160
Leave off the quotes.

00:30:08.160 --> 00:30:12.280
Probably all those kinds of things you've got to detect, which normally parsers have a hard

00:30:12.280 --> 00:30:12.780
time.

00:30:12.780 --> 00:30:14.840
They're like, Oh, I don't know any sort of code here.

00:30:14.840 --> 00:30:17.920
Like the ending terminus of this string constant literal blah, blah, blah.

00:30:17.920 --> 00:30:20.460
Not only their message is weird, but they don't know what line it's on.

00:30:20.460 --> 00:30:24.140
Whereas like, we're like, yeah, we know we have all this data on where students make mistakes,

00:30:24.140 --> 00:30:25.920
but they need to hear even what error message work.

00:30:26.040 --> 00:30:27.260
You got to say the right thing.

00:30:27.260 --> 00:30:30.580
You got to know for that particular program that they're trying to write, which again,

00:30:30.580 --> 00:30:33.160
a general purpose IDE doesn't know what program you're trying to write.

00:30:33.160 --> 00:30:35.240
So it can't do this kind of thing, but we can.

00:30:35.240 --> 00:30:41.480
But then you have to make it so that when they type Brack and they type that K and they hit

00:30:41.480 --> 00:30:47.420
enter, they always have the cursor inside the string and the parentheses.

00:30:48.080 --> 00:30:52.620
So in any other code editor, bang, you got an ending quote and ending parentheses on the next line.

00:30:52.620 --> 00:30:54.980
Like, good luck, right?

00:30:54.980 --> 00:30:59.960
This one, we're like, you know, for a long time until they're level 30 or something like that.

00:30:59.960 --> 00:31:02.020
We don't want them to deal with that kind of mistake.

00:31:02.020 --> 00:31:04.900
So we're just going to move the cursor to the new line and run the code.

00:31:05.620 --> 00:31:11.160
And so there's a ton of little things like that that you need to do because you don't

00:31:11.160 --> 00:31:12.900
have the basic facility with text editing.

00:31:12.900 --> 00:31:17.680
Everything from that to when they're deleting, you need to do extra, extra, extra pauses when

00:31:17.680 --> 00:31:22.040
you delete to the beginning of the line before you start to go back and delete previous lines,

00:31:22.040 --> 00:31:26.380
you know, highlighting the way that the indentation works so that visually they can see like,

00:31:26.460 --> 00:31:31.400
hey, this isn't correct, like error messages that there's all sorts of things that like

00:31:31.400 --> 00:31:35.280
could technically be valid code, but we have to point out as soon as they do it, like, no,

00:31:35.280 --> 00:31:37.780
you can't have two while true loops in a program.

00:31:37.780 --> 00:31:39.940
Like that is not going to make sense.

00:31:39.940 --> 00:31:43.760
And then one thing too, like you want to have your characters in your game,

00:31:43.760 --> 00:31:46.040
like doing important, interesting stuff.

00:31:46.040 --> 00:31:50.520
The easiest way to get them to do more of that is to do an infinite loop where they do the thing.

00:31:51.020 --> 00:31:56.740
But while they're coding that loop, if they don't have a blocking action inside the loop,

00:31:56.740 --> 00:32:00.760
normally then your program grinds to a halt because time doesn't pass.

00:32:00.760 --> 00:32:06.400
And so all sorts of crazy hackery inside the engine whereby they're writing fully general

00:32:06.400 --> 00:32:10.900
purpose code, but we're digging in and saying, hey, does this frame have this or that kind of

00:32:10.900 --> 00:32:12.480
continue or break or condition?

00:32:12.480 --> 00:32:17.380
If not, we're going to add an extra like one frame blocking action to this and remove it.

00:32:17.380 --> 00:32:21.660
If once they add an action that does something like moving or attacking or saying or something

00:32:21.660 --> 00:32:27.780
like that, so that there's this magic behind the scenes that you need to do where it's technically

00:32:27.780 --> 00:32:33.200
not how the code execution would happen, but it matches their mental model much, much better.

00:32:33.200 --> 00:32:38.640
And then later when they get into conditionals, then you start to take that away and show them

00:32:38.640 --> 00:32:41.500
what happens when infinite loop, which again, isn't just crash the browser tab.

00:32:41.500 --> 00:32:43.780
It's like, hey, here's your infinite loop.

00:32:44.060 --> 00:32:46.760
I disabled your hero and then he got killed.

00:32:46.760 --> 00:32:50.220
So maybe you want to fix this by putting that here.

00:32:50.220 --> 00:32:53.860
Your hero got tired and just like ran out of water or something.

00:32:53.860 --> 00:32:56.120
A red X showed up under the one that didn't work.

00:32:56.120 --> 00:32:56.400
Yeah.

00:32:56.400 --> 00:32:58.500
So you have to do all these sort of things.

00:32:58.500 --> 00:33:03.500
So like every sort of error makes sense, not just in the context of the code editor, but

00:33:03.500 --> 00:33:05.040
also in the context of the game.

00:33:05.040 --> 00:33:09.400
And you would never be able to do that if you hadn't written and have full control over

00:33:09.400 --> 00:33:11.560
the stack and execution of your entire program.

00:33:11.560 --> 00:33:17.980
So the custom interpreter that we've written has that like, because it will run Python,

00:33:17.980 --> 00:33:23.720
JavaScript, you know, whatever language that you provide a runtime adapter to a JavaScript,

00:33:23.720 --> 00:33:25.020
a Mozilla ASD.

00:33:25.020 --> 00:33:28.340
So that abstract syntax tree gets executed by our interpreter.

00:33:28.520 --> 00:33:31.880
And then whenever it calls out to something that doesn't exist in JavaScript or needs to behave

00:33:31.880 --> 00:33:36.840
differently than in JavaScript, you know, that that we have a runtime language component that

00:33:36.840 --> 00:33:37.880
makes it behave like that.

00:33:37.880 --> 00:33:45.120
And being able to do it from, you know, top to bottom and back up lets you go in and mess

00:33:45.120 --> 00:33:47.460
around with whatever layer of execution you need to.

00:33:47.460 --> 00:33:51.360
This is where it like helps to actually have had that computer science class in college and

00:33:51.360 --> 00:33:52.940
kind of understand how the compiler works.

00:33:52.940 --> 00:33:54.400
Mess around in there.

00:33:54.600 --> 00:33:58.360
But this stuff you have to do, you're like, oh, the student is messing around with this.

00:33:58.360 --> 00:34:00.540
So we need to fuzzily check in this level.

00:34:00.540 --> 00:34:04.400
We have these kind of possible strings that could work and these ones that shouldn't work.

00:34:04.400 --> 00:34:09.180
And so over here, if they have a fuzzy match typo, we're going to adjust this error message

00:34:09.180 --> 00:34:09.660
over there.

00:34:09.660 --> 00:34:10.960
You need to do so much of that.

00:34:10.960 --> 00:34:13.280
But when you do, they don't need to ask teacher.

00:34:13.280 --> 00:34:14.500
They don't need to ask parent.

00:34:14.500 --> 00:34:16.860
They don't need to like bang their head against the wall for an hour.

00:34:16.860 --> 00:34:18.360
They just get it.

00:34:18.360 --> 00:34:21.980
And that's really key for anyone learning anything.

00:34:21.980 --> 00:34:26.920
But like, especially young kids learning something that like maybe is a little bit disconnected

00:34:26.920 --> 00:34:30.720
from what they see other kids around them doing and wanting to do.

00:34:30.720 --> 00:34:34.200
And, you know, that's that kind of thing if you want to get any kid into it.

00:34:34.200 --> 00:34:34.440
Yeah.

00:34:34.440 --> 00:34:37.960
I think you guys have done a really good job with the way you put that editor together.

00:34:37.960 --> 00:34:39.200
It's super helpful.

00:34:39.200 --> 00:34:42.620
It's clear that it's focused on helping beginners.

00:34:43.300 --> 00:34:48.680
And I think the way that you put it together, you don't even have to really be able to type

00:34:48.680 --> 00:34:54.480
in the traditional, like, you know, Cordy, don't look at the keyboard type of typing, which

00:34:54.480 --> 00:34:55.720
you kind of need for programming.

00:34:55.720 --> 00:34:58.020
You need to know, okay, where are the R and the I?

00:34:58.020 --> 00:35:02.440
I mean, you got to sort of know, but like a fifth grader could totally do that, who maybe

00:35:02.440 --> 00:35:04.480
just touch types without getting frustrated.

00:35:04.480 --> 00:35:08.900
Because really, to solve a puzzle, you're probably doing eight, nine lines of code on a long one.

00:35:08.900 --> 00:35:11.980
And you've a couple characters per line, right?

00:35:11.980 --> 00:35:15.220
It's not that much of typing, but they still get that real experience.

00:35:15.220 --> 00:35:19.360
And that's what I think is super special about what you guys have built compared to all the

00:35:19.360 --> 00:35:24.700
other stuff that looks fun, or it's very approachable, like the blocky type languages.

00:35:24.700 --> 00:35:32.400
But it has that big crossing the chasm sort of thing to go from there to like textual text-based

00:35:32.400 --> 00:35:32.780
languages.

00:35:32.780 --> 00:35:33.180
Yeah.

00:35:33.180 --> 00:35:37.340
The amount of typing that you need will increase.

00:35:37.340 --> 00:35:41.040
And the amount of difficulty of each level increases as you get further through the game.

00:35:41.620 --> 00:35:47.420
So, whereas, you know, your middle schooler can probably do most of, I don't know, we have

00:35:47.420 --> 00:35:48.620
like 600 some levels.

00:35:48.620 --> 00:35:50.200
Maybe they can get through the first 400.

00:35:50.200 --> 00:35:51.280
It really depends on them.

00:35:51.280 --> 00:35:54.900
To do the later ones, they'll probably need to work through it with a teacher or a coach

00:35:54.900 --> 00:35:57.740
just because all this stuff actually does get kind of complicated.

00:35:57.740 --> 00:35:59.440
You're implementing some graph search algorithm.

00:35:59.440 --> 00:36:01.120
Like, yeah, but you're 12.

00:36:01.120 --> 00:36:06.240
So maybe let's talk about the graph search algorithm instead of just, you know, sitting out in front of

00:36:06.240 --> 00:36:07.360
the computer and banging that out there.

00:36:07.800 --> 00:36:11.880
But the really young kids can do the easy levels that you see where you're like, let's move

00:36:11.880 --> 00:36:12.100
right.

00:36:12.100 --> 00:36:12.980
Let's move up.

00:36:12.980 --> 00:36:13.780
Let's attack the ogre.

00:36:13.780 --> 00:36:14.980
Let's use the potion.

00:36:14.980 --> 00:36:16.340
Let's do a while loop.

00:36:16.340 --> 00:36:24.420
While loops, variables, function calls, not defining function, but function calls, XY coordinates,

00:36:24.600 --> 00:36:29.920
all those things, any of these kids can get with the right kind of setup.

00:36:29.920 --> 00:36:35.920
And then when you get into if statements, then you're thinking like, okay, well, this might

00:36:35.920 --> 00:36:40.100
be a good stopping point for some five, six, seven year olds.

00:36:40.100 --> 00:36:41.600
Others can totally get it.

00:36:41.600 --> 00:36:46.240
I just saw a recorded video class that one of our teachers did with this.

00:36:46.480 --> 00:36:48.120
I think he's eight in Hong Kong.

00:36:48.120 --> 00:36:50.840
And the guy's like almost all the way through the mountain.

00:36:50.840 --> 00:36:52.460
He's like commanding his armies.

00:36:52.460 --> 00:36:55.440
He's he's doing different ways of looping over indexes.

00:36:55.440 --> 00:36:59.300
I don't think he quite got to the module arithmetic, but like, you know, some of these kids are capable

00:36:59.300 --> 00:37:02.060
of so, so, so, so much and they get super into it.

00:37:02.060 --> 00:37:06.880
Talk Python To Me is partially supported by our training courses.

00:37:06.880 --> 00:37:09.880
How does your team keep their Python skills sharp?

00:37:10.220 --> 00:37:14.020
How do you make sure new hires get started fast and learn the Pythonic way?

00:37:14.020 --> 00:37:20.040
If the answer is a series of boring videos that don't inspire or a subscription service you

00:37:20.040 --> 00:37:23.000
pay way too much for and use way too little, listen up.

00:37:23.000 --> 00:37:26.920
At Talk Python Training, we have enterprise tiers for all of our courses.

00:37:26.920 --> 00:37:32.580
Get just the one course you need for your team with full reporting and monitoring or ditch

00:37:32.580 --> 00:37:36.820
that unused subscription for our course bundles, which include all the courses and you pay about

00:37:36.820 --> 00:37:39.200
the same price as a subscription once.

00:37:39.740 --> 00:37:46.500
For details, visit training. talkpython.fm/business or just email sales at talkpython.fm.

00:37:46.500 --> 00:37:52.240
And other kids like, hey, we'll just go and do as much as you're ready for now.

00:37:52.240 --> 00:37:55.880
And maybe you come back to this in a couple of years as some of this abstract thinking gets tougher.

00:37:55.880 --> 00:38:00.220
But my three-year-old, I had him start doing it.

00:38:00.220 --> 00:38:04.180
And, you know, at that point, it's like 20 seconds to find the R key.

00:38:04.180 --> 00:38:06.300
But then he types R and he can move to the right.

00:38:06.300 --> 00:38:07.900
And actually meant to move to the left.

00:38:08.000 --> 00:38:10.380
But like, you know, two minutes later, he's fixed it.

00:38:10.380 --> 00:38:12.700
And he pressed the delete key and deleted everything.

00:38:12.700 --> 00:38:14.540
You need to be despite all our protections.

00:38:14.540 --> 00:38:16.400
But of course, I wrote the program.

00:38:16.400 --> 00:38:18.440
So I'm like, OK, let's press the reset button over here.

00:38:18.440 --> 00:38:21.360
But like he's gotten through several dozen levels.

00:38:21.360 --> 00:38:22.180
He's five now.

00:38:22.180 --> 00:38:23.620
So you can see how fast he goes through it.

00:38:23.620 --> 00:38:25.640
But he gets super into it.

00:38:25.640 --> 00:38:28.520
So it's not nearly when you're learning to code.

00:38:28.520 --> 00:38:31.640
It doesn't matter if you're 5, 15, 25, 35.

00:38:31.640 --> 00:38:33.080
Everybody's starting at the beginning.

00:38:33.080 --> 00:38:38.220
And there's so few good software pieces out there to help you with that.

00:38:38.220 --> 00:38:42.360
That it's one of the best ways, I think, to get started for anyone.

00:38:42.780 --> 00:38:48.260
So that motivation from the game-based format is extra helpful at these young ages.

00:38:48.260 --> 00:38:49.700
But it doesn't hurt anywhere.

00:38:49.700 --> 00:38:51.020
Yeah, no, it's pretty cool.

00:38:51.020 --> 00:38:53.760
Maybe we could talk through the different worlds.

00:38:53.760 --> 00:38:56.080
So I got to figure out how to get back to it.

00:38:56.080 --> 00:38:56.320
Yeah.

00:38:56.400 --> 00:38:57.840
So you start off in Kithgar Dungeon.

00:38:57.840 --> 00:39:01.820
This is the hardest piece to design because they know almost nothing.

00:39:01.820 --> 00:39:05.480
And so you have to build up every piece of it from scratch.

00:39:05.480 --> 00:39:09.920
And in a normal learning environment, that'd be pretty hard to design because it's just throwing

00:39:09.920 --> 00:39:10.480
the book at them.

00:39:10.480 --> 00:39:13.400
But in this one, we can vary the game scenario too.

00:39:13.400 --> 00:39:18.140
So even if you need to do five or six or seven levels in a row where you're going from just

00:39:18.140 --> 00:39:19.640
moving right up, down, left.

00:39:19.640 --> 00:39:24.220
So maybe you do that, but there's an optional argument for how many times to move.

00:39:24.760 --> 00:39:26.240
And then you've introduced arguments.

00:39:26.240 --> 00:39:30.240
Now you can introduce an attack method where you can then put a string in there.

00:39:30.240 --> 00:39:35.280
And you very slowly pace it out, but it keeps fresh because throughout you're getting new

00:39:35.280 --> 00:39:40.320
items, you're getting new game scenarios, you meet new enemies, and different art all the

00:39:40.320 --> 00:39:40.600
time.

00:39:40.600 --> 00:39:43.080
So they're really thinking like, hey, I'm exploring this game.

00:39:43.080 --> 00:39:47.220
And it does take a bunch of levels to get these basics in place.

00:39:47.220 --> 00:39:51.140
But you get through that in the first dungeon, which people, you know, some kids are doing

00:39:51.140 --> 00:39:52.100
this in a couple hours.

00:39:52.560 --> 00:39:59.080
They've got, they can write code like move, hero.move down, hero.move down, hero.buildxy,

00:39:59.080 --> 00:40:00.620
fence, 3420.

00:40:00.620 --> 00:40:03.780
And then they have three different coordinate pairs of where they build their fence.

00:40:03.780 --> 00:40:05.380
And they'll say, well, true, move, right.

00:40:05.380 --> 00:40:07.580
And so that moves their hero down.

00:40:07.580 --> 00:40:08.940
There's a bunch of ogres coming at them.

00:40:08.940 --> 00:40:10.720
They're building fences to block off the attack.

00:40:10.720 --> 00:40:13.160
And then they move until they get to the end of the dungeon and get the gem.

00:40:13.160 --> 00:40:15.660
And that's the last level of the dungeon.

00:40:15.660 --> 00:40:18.940
That one doesn't have a variable in it, but they also have variables in there.

00:40:18.940 --> 00:40:22.900
So they can move up enemy equals hero without find your enemy attack the enemy.

00:40:22.900 --> 00:40:24.780
They don't have any if statements yet.

00:40:24.780 --> 00:40:27.920
So as we get into the forest and it opens up and we should have done this from the beginning

00:40:27.920 --> 00:40:32.240
where the dungeon is still kind of more appealing to the boys because, yeah, let me get in this

00:40:32.240 --> 00:40:32.760
dank dungeon.

00:40:32.760 --> 00:40:33.420
It's kind of dark.

00:40:33.420 --> 00:40:34.480
Let's hack some ogres apart.

00:40:34.480 --> 00:40:38.980
It's not as violent as, you know, you would think from the name and the first setting,

00:40:38.980 --> 00:40:41.840
but we sure could have made some different design decisions there.

00:40:41.980 --> 00:40:45.380
So then you get into the forest and there's a lot of that, but there's a lot of like,

00:40:45.380 --> 00:40:47.040
okay, let's corral our horses.

00:40:47.040 --> 00:40:48.380
Let's build other things.

00:40:48.380 --> 00:40:49.380
Let's defend the village.

00:40:49.380 --> 00:40:51.120
Let's, you know, go and talk to the villagers.

00:40:51.120 --> 00:40:55.780
And so there you're introducing if statements and Boolean logic.

00:40:55.780 --> 00:40:56.820
You get your pet.

00:40:56.820 --> 00:40:58.980
You got your pet earlier, but you didn't know how to do anything with it.

00:40:58.980 --> 00:41:03.500
Now you can write event handlers and functions so that your pet can be doing stuff for you.

00:41:03.960 --> 00:41:07.180
And you're of course increasing your kind of normal fighting capabilities.

00:41:07.180 --> 00:41:12.260
You get to your first multiplayer arenas where you're writing your Python AI hero.

00:41:12.260 --> 00:41:16.820
So use all your heroes capacities that you developed and you're either trying to get more gold than

00:41:16.820 --> 00:41:19.980
the others or you're trying to just kill them or defeat them.

00:41:19.980 --> 00:41:23.560
And, you know, from there you would move on into the desert.

00:41:23.560 --> 00:41:26.920
And here we're doing more with numerical arithmetic.

00:41:26.920 --> 00:41:29.500
I mean, this whole time you've been getting into the XY coordinates.

00:41:29.500 --> 00:41:31.240
Now you can add them, subtract them.

00:41:31.240 --> 00:41:33.560
You can do break and continue statements.

00:41:33.860 --> 00:41:34.740
Arrays, for example.

00:41:34.740 --> 00:41:36.740
Arrays start to happen in there.

00:41:36.740 --> 00:41:40.700
You start to get object, a lot of it too, in the desert.

00:41:40.700 --> 00:41:45.440
Because once you start to get arrays, you can do a lot more interesting tactics.

00:41:45.440 --> 00:41:47.960
So you're, you know, arrays with this other stuff,

00:41:47.960 --> 00:41:51.860
let's see you implement algorithms of, you know, finding the closest enemy,

00:41:51.860 --> 00:41:54.480
finding the weakest enemy, finding the closest weakest enemy,

00:41:54.480 --> 00:41:57.700
finding the coins, finding only the right type of coins, finding the best ones.

00:41:57.700 --> 00:41:59.360
You're like optimizing all this stuff.

00:41:59.360 --> 00:42:03.460
And that's really interesting for when you're kind of fighting in some of these battles.

00:42:03.760 --> 00:42:10.840
Then once you get into the mountains and we're introducing while loops over indexes of the arrays and for loops over the arrays,

00:42:11.100 --> 00:42:18.040
and you're starting to summon troops and you can command them to do things, you're getting into basic graphics because you're, you know,

00:42:18.040 --> 00:42:22.060
moving in different patterns to draw the kind of the flowers that go behind you in this flower ring.

00:42:22.060 --> 00:42:31.880
There's all sorts of like all through this time, you're constantly doing a ton of if, else, else, elif kind of statements because you need to activate all the special powers of your hero.

00:42:32.560 --> 00:42:33.500
Whether that's to, you know,

00:42:33.500 --> 00:42:37.820
whether that's to use your bash ability or shield or cast your magic spells or go invisible.

00:42:37.820 --> 00:42:41.620
And the kids really love getting the new capabilities like that.

00:42:41.620 --> 00:42:41.840
Yeah.

00:42:41.840 --> 00:42:49.160
My daughter was blown away when she got a new pet and then she got two pets and she couldn't decide which pet was her favorite and what she would take with her.

00:42:49.160 --> 00:42:51.520
And it was, yeah, it was, it was great.

00:42:51.720 --> 00:42:52.360
Yeah, yeah, yeah.

00:42:52.360 --> 00:42:59.520
And so then you're, as you move on through the mountain and here's where you know the basis of all the code you need to do really,

00:42:59.520 --> 00:43:05.220
really well in some of these tournament arenas that will run, then the glacier will happen.

00:43:05.220 --> 00:43:07.660
And the glacier is kind of like, all right, let's introduce the vectors.

00:43:07.660 --> 00:43:09.840
And now you're doing vector arithmetic.

00:43:09.840 --> 00:43:14.020
So operating with these various like linear algebra transforms only to you.

00:43:14.020 --> 00:43:15.540
It's not been a linear algebra transform.

00:43:15.540 --> 00:43:17.140
It's like, okay, vector dot rotate.

00:43:17.140 --> 00:43:18.060
And let me think about it.

00:43:18.060 --> 00:43:20.080
This is where it starts to get a little tricky.

00:43:20.260 --> 00:43:28.340
We're introducing kind of the Boolean logic and, you know, counting in other bases and some of these graph search algorithms.

00:43:28.340 --> 00:43:32.260
There's one where you just have to code up your team to play soccer for you.

00:43:32.260 --> 00:43:35.680
And like, that's a lot of geometry and trigonometry there.

00:43:35.680 --> 00:43:38.660
But some kids get that far by themselves.

00:43:38.660 --> 00:43:40.980
Most of them will need to work through that with a teacher.

00:43:40.980 --> 00:43:41.900
Yeah, it's cool.

00:43:41.900 --> 00:43:47.840
And just to give people a sense, like the first engine, there's 43 puzzles, puzzle programs you got to write.

00:43:47.840 --> 00:43:49.760
The forest has 121.

00:43:49.760 --> 00:43:52.280
And the desert has 97 and so on.

00:43:52.280 --> 00:43:57.380
So there's a lot of little problems that the kids can go solve and work on.

00:43:57.380 --> 00:43:58.480
And they're pretty bite-sized.

00:43:58.480 --> 00:43:59.640
So it's quite cool.

00:43:59.640 --> 00:44:06.340
The target goes from three minutes per level in the dungeon up to like, once you get to the glacier, we're like, hey, at least you should take you like half an hour.

00:44:06.340 --> 00:44:08.860
So there's a lot of content in there.

00:44:09.000 --> 00:44:14.180
There's also a lot of hidden content that shows up if you, the system determines you might need a little bit more help.

00:44:14.180 --> 00:44:17.680
Or if you go back and then you unlock secret stuff in the earlier worlds.

00:44:18.000 --> 00:44:22.960
Because everyone is learning at different rates, they're going to need different amounts of practice on the same concepts.

00:44:23.580 --> 00:44:29.160
So if you're doing levels particularly slowly or particularly difficulty, the system might say, okay, here's the next level.

00:44:29.160 --> 00:44:30.500
But it's actually a practice level.

00:44:30.500 --> 00:44:33.460
Some other student might not have gotten that level if they didn't need it.

00:44:33.460 --> 00:44:34.020
Oh, interesting.

00:44:34.020 --> 00:44:34.800
Yeah, that's clever.

00:44:34.960 --> 00:44:37.880
So it can slow it down if you need to.

00:44:37.880 --> 00:44:39.880
We don't have a way to really speed it up.

00:44:39.880 --> 00:44:42.060
But then again, learning this thing is already going pretty fast.

00:44:42.060 --> 00:44:43.320
Yeah, for sure.

00:44:43.320 --> 00:44:44.260
Awesome.

00:44:44.260 --> 00:44:48.980
Well, I think it's a really cool world you've created for these kids and basically beginners in general.

00:44:48.980 --> 00:44:51.240
But it definitely seems like it's going to connect with the kids.

00:44:51.240 --> 00:44:52.260
I know it did with mine.

00:44:52.260 --> 00:44:55.380
So let's talk about some of the internals.

00:44:55.380 --> 00:44:56.020
Yes.

00:44:56.020 --> 00:44:57.620
You talked about the different languages.

00:44:57.620 --> 00:45:04.300
We write Python in the browser in this cool editor with a special autocomplete that we talked about.

00:45:04.520 --> 00:45:05.040
Where does it run?

00:45:05.040 --> 00:45:07.260
So it runs right there in your browser.

00:45:07.260 --> 00:45:10.320
And there's a few pieces of magic to make this happen.

00:45:10.320 --> 00:45:14.460
So the first is we use the Ace text editor.

00:45:14.460 --> 00:45:16.380
And then we've heavily customized that.

00:45:16.380 --> 00:45:21.580
But it's a really, really great, fantastic base layer for doing all sorts of crazy stuff with your code editor.

00:45:21.580 --> 00:45:31.880
So once you get the code, then we are feeding that constantly into a web worker thread that is parsing it, linting it, looking for kind of hints to give to the player.

00:45:32.300 --> 00:45:34.000
Even pre-running it in advance.

00:45:34.000 --> 00:45:38.160
So that once they hit run, the entire world is simulated in the background thread.

00:45:38.160 --> 00:45:41.980
And we just swap out the front-head state with kind of like a video-like playback.

00:45:41.980 --> 00:45:43.740
You can scrub back and forth with what happened.

00:45:43.740 --> 00:45:47.460
So that's all this custom code simulation game engine stuff.

00:45:48.200 --> 00:45:52.160
But what makes it possible are these two libraries.

00:45:52.160 --> 00:45:53.540
So one is Sculpt.

00:45:53.540 --> 00:46:00.240
And that is kind of the Python in the browser implemented JavaScript interpreter parser thing.

00:46:00.240 --> 00:46:05.180
And that is implemented so that you can actually run full Python programs as much as you can.

00:46:05.260 --> 00:46:15.580
We're just using the parser layer from that because we don't want kind of all of these other behaviors to happen that we don't have control over.

00:46:15.580 --> 00:46:17.020
And that ends up giving a crazy error message.

00:46:17.880 --> 00:46:24.240
So, you know, picking pieces of Sculpt out there and then augmenting them with our own systems.

00:46:24.240 --> 00:46:26.100
And some of this you can start to get crossovers.

00:46:26.100 --> 00:46:29.280
So a library for code linting that works for JavaScript.

00:46:29.780 --> 00:46:34.500
And we've turned the AST into a Mozilla JavaScript AST format.

00:46:34.500 --> 00:46:37.700
Then you can start to run some of these tools that were designed to work on JavaScript.

00:46:37.700 --> 00:46:39.600
But you're giving useful information for Python.

00:46:39.600 --> 00:46:41.060
So that's pretty cool.

00:46:41.060 --> 00:46:41.540
That's awesome.

00:46:41.540 --> 00:46:45.660
It is all on top of this thing that we wrote called esper.js.

00:46:45.660 --> 00:46:52.940
And esper.js is designed to be the kind of controllable, pumpable, beginner-friendly interpreter that runs in the browser.

00:46:52.940 --> 00:46:55.600
But takes multiple languages.

00:46:55.600 --> 00:46:58.680
And so there's a Python plugin for it.

00:46:58.800 --> 00:47:00.320
There's a Lua plugin for it.

00:47:00.320 --> 00:47:03.900
As much as you need to do, there's a CoffeeScript plugin for it.

00:47:03.900 --> 00:47:07.400
And then those things, it's two pieces.

00:47:07.400 --> 00:47:08.320
The parser piece.

00:47:08.320 --> 00:47:10.180
So the parser piece, we're relying a lot on Sculpt.

00:47:10.180 --> 00:47:11.580
And we'd previously written our own.

00:47:11.580 --> 00:47:13.500
And it just wasn't very good.

00:47:13.500 --> 00:47:15.400
So we moved over to Sculpt on there.

00:47:15.400 --> 00:47:19.220
And then the runtime library piece where you can take some pieces of that.

00:47:19.220 --> 00:47:27.240
But really for performance, you're implementing a lot of Python functions and modules in this kind of interpreter language

00:47:27.240 --> 00:47:30.160
where you're operating on abstract syntax tree nodes.

00:47:30.160 --> 00:47:37.120
You could just pull in that part of the Python library or write it in Python and then just run it.

00:47:37.320 --> 00:47:38.640
But it gets pretty slow.

00:47:38.640 --> 00:47:45.960
So you'll kind of bring in the hot loops and pull those in natively in Esper itself, in Esper's Python plugin.

00:47:46.600 --> 00:47:59.820
So the more Python behavior that you want, like you want to make integer division work correctly, if it's different from JavaScript, something like that, then you're just putting more and more of it into your runtime or your parser library that plugs into Esper.

00:47:59.980 --> 00:48:01.400
Esper is fully open source.

00:48:01.400 --> 00:48:03.360
So is the Python plugin.

00:48:03.360 --> 00:48:14.340
And if you have a project where you want to mess around with having more control over how the code executes, interrogating each frame, stopping it, starting it again, yielding it and putting another thread in, like all that kind of stuff.

00:48:14.340 --> 00:48:16.620
Definitely check out Esper.js on GitHub.

00:48:17.000 --> 00:48:22.140
If you just want to be able to run Python in the browser, you can just run scope straight up if you don't want to do it.

00:48:22.140 --> 00:48:22.240
Right.

00:48:22.240 --> 00:48:27.340
If you don't need to reinterpret what the instructions mean and like capture them and whatnot, right?

00:48:27.340 --> 00:48:32.300
Like you have a kind of a special use case here, I suspect, and what you're trying to do.

00:48:32.300 --> 00:48:36.720
Well, there's a lot of people that go and want something like this.

00:48:36.720 --> 00:48:38.720
So some of the projects are using Esper.

00:48:38.960 --> 00:48:53.380
I haven't kept a huge track of it, but it's definitely what you would want when you want more control, whether that's for teaching it better or it's for controlling your infinite loops a little better, whether it's for just security of your program.

00:48:53.380 --> 00:48:56.680
Because, you know, you're running this thing in your user's browser.

00:48:56.680 --> 00:48:59.720
You know, maybe you're pulling in code that someone else wrote into that.

00:48:59.720 --> 00:49:01.760
You got to make sure that it can't break out.

00:49:01.760 --> 00:49:08.900
And so just having that knowledge that it's secure and it can't touch anything and you can redefine your global variables and lock them down.

00:49:08.900 --> 00:49:10.900
Make your own copies of them, whatever you want to do.

00:49:10.900 --> 00:49:12.080
It's pretty good.

00:49:12.080 --> 00:49:13.920
Yeah, that's pretty neat.

00:49:13.920 --> 00:49:15.380
In Python or in other languages.

00:49:15.380 --> 00:49:15.840
Yeah.

00:49:15.840 --> 00:49:20.100
Did you consider something like Docker, like a server side solution as well?

00:49:20.100 --> 00:49:22.200
Or was it always we've got to do this on the front end?

00:49:22.200 --> 00:49:26.860
You know, after seeing Brett Victor's talk on learnable programming, which is fantastic.

00:49:26.860 --> 00:49:29.640
So if you haven't seen it, you know, stop listening, go check it out.

00:49:29.640 --> 00:49:33.000
I mean, no, this is probably kind of interesting, but that is so interesting.

00:49:33.000 --> 00:49:38.260
So the idea there is this kind of run it on the server and send the result back format.

00:49:38.800 --> 00:49:42.400
Is kind of old school algorithms competition kind of thing going on?

00:49:42.400 --> 00:49:42.780
Yeah.

00:49:42.780 --> 00:49:42.840
Yeah.

00:49:42.840 --> 00:49:43.640
Super secure.

00:49:43.640 --> 00:49:46.920
Take some server resources, which you can probably figure out how to get working.

00:49:46.920 --> 00:49:50.840
But it's limited in the bandwidth of what it can tell you back.

00:49:50.840 --> 00:49:58.820
So if you think of, hey, here's an algorithms program, a problem, and I'm going to write my algorithm and run on the server and see if it gets the right answer.

00:49:58.820 --> 00:50:00.500
Really, you're sending back the answer.

00:50:00.500 --> 00:50:00.820
Yeah.

00:50:00.940 --> 00:50:05.600
But what we want for a rich, immersive gameplay world is we don't want to just know the answer.

00:50:05.600 --> 00:50:09.780
We want to see everything about how this code is executing because it can touch every part of the world.

00:50:10.420 --> 00:50:16.320
So if you wanted to do that, you have to run the whole thing on the server.

00:50:16.320 --> 00:50:27.720
And now you're basically spinning up your own kind of network to multiplayer game that your servers have to run every instance of and send the entire state of the execution back.

00:50:27.820 --> 00:50:38.560
And like normally in computer graphics, you are just sending like positions of the various entities in the game, maybe their velocities, rotations, and a few status things so that you can render them.

00:50:38.560 --> 00:50:41.100
And you kind of have the same thing going on here.

00:50:41.440 --> 00:50:56.500
But we don't know in advance what you're going to need to show because instead of the, you know, C++ optimized game engine having like, okay, everything is going to be rendered, like efficiently optimized for rendering these 12 properties on this number of entities and then these types of backgrounds or whatever.

00:50:56.500 --> 00:50:57.980
Anything can happen.

00:50:57.980 --> 00:51:03.980
So you can't optimize that much, which means the amount of data that you have to send back in order to render it is fairly high.

00:51:03.980 --> 00:51:08.820
So if you sent that to the server, you'd be downloading like 15 or 20 megabytes every time you ran the code.

00:51:08.820 --> 00:51:17.540
I mean, maybe we would, if we optimize that, I'm sure we could get it down to something workable, but it's kind of going to be a little, a lot further towards that.

00:51:17.540 --> 00:51:18.580
Just tell me the answer.

00:51:18.580 --> 00:51:20.560
Then like I'm playing this here in my browser.

00:51:20.560 --> 00:51:23.240
So that's, that's why we didn't do it there.

00:51:23.240 --> 00:51:23.600
Yeah.

00:51:23.600 --> 00:51:30.960
And also you'd have to do some interception to like kind of rewrite what execution means to do the work that you're doing.

00:51:30.960 --> 00:51:31.380
Yeah.

00:51:31.380 --> 00:51:31.800
Right.

00:51:31.800 --> 00:51:33.780
So you'd have to do it on the server side anyway.

00:51:33.780 --> 00:51:36.080
It sounds like you can't just drop it in and hit it with C.

00:51:36.080 --> 00:51:43.200
Well, the advantage of doing it on the server side is that you can use actual JavaScript is the only language that you're going to be able to run in the browser there.

00:51:43.200 --> 00:51:45.000
And JavaScript, I love it.

00:51:45.000 --> 00:51:45.820
It's a great language.

00:51:45.820 --> 00:51:48.800
It's basically scheme in Java's clothes.

00:51:49.300 --> 00:51:58.640
And so you can do all this really high level crazy stuff, but you, you can shoot your foot off and there's not that many packages that want to do what we want to do there.

00:51:58.640 --> 00:52:04.660
So, you know, if you had to run this code on the server, you could do it in C, you could do it in Python, you could do it in whatever.

00:52:04.660 --> 00:52:06.080
And that would be pretty advantageous.

00:52:06.080 --> 00:52:11.140
And there's a lot of these most, we, at some point we're looking at teaching like dozens of program languages way.

00:52:11.140 --> 00:52:15.900
And you look and say, okay, who's implemented an interpreter that I can use or a parser that I can use.

00:52:15.900 --> 00:52:19.980
And it's all implemented either in the language itself or something like C or something like that.

00:52:19.980 --> 00:52:21.680
You can't use any of that in the browser.

00:52:21.680 --> 00:52:25.380
So it could have saved some work, but, you know, we really wanted it.

00:52:25.460 --> 00:52:33.540
Like, write some code, click the button, immediately see what happens and enrich detail and be able to like scroll back and forth.

00:52:33.540 --> 00:52:36.560
We want to send the entire state of the world so you don't just see it once.

00:52:36.560 --> 00:52:41.840
We want to have it render as fast as we can so you know if there's any bugs or any errors.

00:52:41.840 --> 00:52:46.020
And then we want you to be able to play back, go back and forth, time travel, debug, any of that stuff.

00:52:46.020 --> 00:52:53.140
So we kind of over-engineered it in the beginning after seeing that talk and happy with how that turned out.

00:52:53.140 --> 00:52:54.020
But, yeah, it's a lot of work.

00:52:54.180 --> 00:52:57.340
Yeah, well, it definitely helps on the scaling side of things.

00:52:57.340 --> 00:52:57.760
Oh, yeah.

00:52:57.760 --> 00:53:02.660
The other thing that you can do, because the user's browser knows how to not just run the game but their code,

00:53:02.660 --> 00:53:07.080
when you go to do the multiplayer pieces, our server doesn't do anything either except for say like,

00:53:07.080 --> 00:53:11.900
hey, peer-to-peer distributed simulation net, you simulate some games here,

00:53:11.900 --> 00:53:14.360
and then they report the answers back and we just keep a leaderboard.

00:53:14.360 --> 00:53:18.280
But, like, we'll be distributing all these other players' games to everybody who's, like,

00:53:18.280 --> 00:53:21.200
trying to play one of these multiplayer levels, and then you get this automatic, like,

00:53:21.200 --> 00:53:23.040
simulated ladder thing for no compute.

00:53:23.360 --> 00:53:23.880
It's pretty great.

00:53:23.880 --> 00:53:24.020
Yeah.

00:53:24.020 --> 00:53:25.200
Yeah, that's pretty awesome.

00:53:25.200 --> 00:53:26.080
Cool.

00:53:26.080 --> 00:53:32.140
Well, it's definitely neat to see you guys taking some of these Python in the browser initiatives

00:53:32.140 --> 00:53:38.560
that there's not a whole lot of other people doing, like, real work with, right?

00:53:38.560 --> 00:53:39.920
Like, building real tools.

00:53:39.920 --> 00:53:45.000
You know, the guys over at Anvil, they build a pretty interesting system based on Sculpt as well.

00:53:45.280 --> 00:53:47.820
A lot of cool designers and front-end tools, basically.

00:53:47.820 --> 00:53:49.400
Have you seen Anvil?

00:53:49.400 --> 00:53:50.400
I'll have to check it out.

00:53:50.400 --> 00:53:54.020
Yeah, so Anvil is a way for building, like, simple hosted web apps.

00:53:54.020 --> 00:53:55.020
Go there.

00:53:55.020 --> 00:54:00.500
And they've got, like, a component gallery of buttons and text boxes.

00:54:00.500 --> 00:54:01.400
You drag them over.

00:54:01.400 --> 00:54:03.220
And then all of those have events.

00:54:03.220 --> 00:54:05.640
You double-click it and it switches over to see the code.

00:54:05.640 --> 00:54:08.720
But that's all Python code that runs in the browser on Sculpt.

00:54:08.720 --> 00:54:10.160
Oh, that's awesome.

00:54:10.160 --> 00:54:11.620
Yeah, so it's pretty awesome.

00:54:11.780 --> 00:54:15.140
There's also Brython out there, too, for another take on it.

00:54:15.140 --> 00:54:15.460
Yep.

00:54:15.460 --> 00:54:18.500
Did you look at Brython and consider it alongside Sculpt?

00:54:18.500 --> 00:54:21.500
It wasn't as far as along when we kind of put our stuff together.

00:54:21.500 --> 00:54:25.400
But, you know, I think either of them could potentially have worked.

00:54:25.400 --> 00:54:27.120
We just needed a parser layer from it.

00:54:27.120 --> 00:54:32.460
I can't remember if Brython would use the Mozilla AST format or something else.

00:54:32.460 --> 00:54:32.780
Right.

00:54:32.780 --> 00:54:34.120
I think this is great.

00:54:34.120 --> 00:54:35.740
Well done on building it that way.

00:54:35.740 --> 00:54:39.340
So let's just talk briefly about the business side of things.

00:54:39.420 --> 00:54:43.720
I think it's always interesting to see people building businesses on Python and bringing

00:54:43.720 --> 00:54:45.220
these tools together and whatnot.

00:54:45.220 --> 00:54:45.940
Yeah.

00:54:45.940 --> 00:54:50.940
So I guess, first of all, we haven't talked about this yet for people who don't know.

00:54:50.940 --> 00:54:52.880
Like, is there something I pay for?

00:54:52.880 --> 00:54:54.000
It's Code Combat free.

00:54:54.000 --> 00:54:54.740
What's the story?

00:54:54.740 --> 00:54:55.160
Yeah.

00:54:55.160 --> 00:54:58.040
So we are an open source project.

00:54:58.500 --> 00:55:02.640
And, you know, it goes back to my roots with my dad having that Mr. House home automation

00:55:02.640 --> 00:55:05.340
project, which it just seemed like back in the day, that was like the thing you did was

00:55:05.340 --> 00:55:05.560
cool.

00:55:05.560 --> 00:55:08.780
And when we started building this business, we weren't thinking about open source, but we

00:55:08.780 --> 00:55:11.680
knew we wanted to do a for-profit business because that's how you can get the resources

00:55:11.680 --> 00:55:12.860
to really make great software.

00:55:12.860 --> 00:55:16.840
And, you know, there's obviously going to be a big market for people learning how to code.

00:55:16.840 --> 00:55:18.480
So we built this thing, built this thing.

00:55:18.480 --> 00:55:19.220
It was free for a long time.

00:55:19.220 --> 00:55:20.680
I said, hey, we're going to start charging for this thing.

00:55:20.800 --> 00:55:24.820
But that was kind of still in the mind, like there's going to be a lot of people who can't

00:55:24.820 --> 00:55:27.540
afford however much you're going to charge that still should be able to learn to code.

00:55:27.540 --> 00:55:30.560
And especially if your game is multiplayer, you kind of want those players anyway.

00:55:30.560 --> 00:55:35.660
So not just to provide network effects for playing the game, but also for sharing the game.

00:55:35.660 --> 00:55:40.460
So the initial model we did is a $10 a month subscription, but freemium.

00:55:40.460 --> 00:55:45.940
So you only have to pay for that if you want the extra levels, extra heroes, extra gems,

00:55:45.940 --> 00:55:47.900
some of this game content stuff.

00:55:48.580 --> 00:55:51.900
But it's not like you get the first 20 levels for free and then you have to pay.

00:55:51.900 --> 00:55:55.460
It's more like you get the core progression of levels from the beginning all the way to

00:55:55.460 --> 00:55:57.020
your crazy graph algorithms in the end.

00:55:57.020 --> 00:56:01.920
And then it's extra practice levels that are kind of the branches of the tree that you would

00:56:01.920 --> 00:56:02.320
pay for.

00:56:02.320 --> 00:56:06.140
So if you want more help with that, you just want more content, you want a cool hero as

00:56:06.140 --> 00:56:08.760
opposed to the basic hero, then you can subscribe.

00:56:08.760 --> 00:56:13.660
And so most players, you got a couple hundred thousand monthly active players.

00:56:13.660 --> 00:56:15.180
Most of those are just playing for free.

00:56:15.180 --> 00:56:19.760
We kind of made a mistake because when we started to take off as a business, we had all

00:56:19.760 --> 00:56:20.180
these players.

00:56:20.180 --> 00:56:23.480
We said, OK, well, the main market for this is going to be in the schools.

00:56:23.480 --> 00:56:28.360
And in the schools, you have this huge need for teachers to be able to deploy some computer

00:56:28.360 --> 00:56:32.740
science curriculum that kids will actually do, even if the teacher is not there over their

00:56:32.740 --> 00:56:33.440
shoulder all the time.

00:56:33.520 --> 00:56:37.500
And especially if the teacher is not a pro coder, which, you know, if you're a pro coder

00:56:37.500 --> 00:56:40.360
and you're working in teaching, I salute you because that's a really hard job.

00:56:40.360 --> 00:56:43.980
You probably know where you can make elsewhere and it's more than twice what you can make

00:56:43.980 --> 00:56:44.400
as a teacher.

00:56:44.400 --> 00:56:49.680
So not a lot of super experienced coders in teaching and all of these teachers getting

00:56:49.680 --> 00:56:51.560
deputized to teach computer science.

00:56:51.560 --> 00:56:53.420
The math teacher has to teach it.

00:56:53.420 --> 00:56:57.120
The English teacher, the choir teacher has to teach it like help.

00:56:57.120 --> 00:56:57.420
Right.

00:56:57.420 --> 00:56:58.340
So they reached out.

00:56:58.340 --> 00:57:01.140
We said, hey, you know, we can help you run this with your students.

00:57:01.200 --> 00:57:04.300
Let me see what we do, built the teacher dashboard and our main product is now that classroom

00:57:04.300 --> 00:57:04.660
version.

00:57:04.660 --> 00:57:10.680
And so when we made a bunch more content for that, we actually forgot to set it as paid

00:57:10.680 --> 00:57:12.260
on our on our home version.

00:57:12.260 --> 00:57:16.260
And so there's a couple of hundred free levels like you could just do so much there.

00:57:16.260 --> 00:57:19.040
And it's not the main way we make money.

00:57:19.040 --> 00:57:20.120
So I'm cool with that.

00:57:20.120 --> 00:57:24.180
We're not trying to optimize that to within an inch of its life in terms of conversion funnels

00:57:24.180 --> 00:57:25.060
or anything like that.

00:57:25.060 --> 00:57:26.080
So, yeah, it's great.

00:57:26.080 --> 00:57:30.060
We make a little bit of money from that business, but it also means you can just go play for free.

00:57:30.140 --> 00:57:31.640
You don't have to sign up, try it out.

00:57:31.640 --> 00:57:36.880
And if you wanted that extra help or extra content, you can get that.

00:57:36.880 --> 00:57:42.240
Now, the new thing is if you want extra help, you can pay for private lessons from one of

00:57:42.240 --> 00:57:43.300
our online coding teachers.

00:57:43.300 --> 00:57:47.280
You know, they'll work an hour or two hours a week with your kid or you can do group classes

00:57:47.280 --> 00:57:49.800
with up to four other students, up to four students total.

00:57:49.800 --> 00:57:52.320
And so those are some ways it works.

00:57:52.320 --> 00:57:55.660
We've got some different pricing models in China where we run our business too.

00:57:56.080 --> 00:58:01.020
But as an open source project and with this kind of community in mind, this helped us

00:58:01.020 --> 00:58:01.480
so much.

00:58:01.480 --> 00:58:04.660
Like, it's great to be able to give back and make a bunch available for free.

00:58:04.660 --> 00:58:05.080
Yeah.

00:58:05.080 --> 00:58:08.080
We wouldn't even have Python if it weren't for open source.

00:58:08.080 --> 00:58:09.680
When we launched, we only had JavaScript.

00:58:10.540 --> 00:58:15.380
And one of the first major contributions, we ran this like programming language edition

00:58:15.380 --> 00:58:16.420
like contest.

00:58:16.420 --> 00:58:18.840
I think we gave away like a MacBook and an iPad or something.

00:58:18.840 --> 00:58:21.220
And for that, we got Python and Lua and like all these parts.

00:58:21.220 --> 00:58:22.260
Even someone did Clojure.

00:58:23.120 --> 00:58:25.100
And we're like, dang, that was really efficient.

00:58:25.100 --> 00:58:26.440
And we hired two of them.

00:58:26.440 --> 00:58:30.580
And like going open source was just super interesting.

00:58:30.580 --> 00:58:34.740
But yeah, that we have this ethos where if you need to learn to code, you can use us.

00:58:34.740 --> 00:58:35.880
I'm not going to charge you.

00:58:35.880 --> 00:58:36.120
Yeah.

00:58:36.120 --> 00:58:38.580
So there's like a free path through these worlds.

00:58:38.580 --> 00:58:41.240
If you want, you can take it, but you can pay for more.

00:58:41.240 --> 00:58:41.520
Yeah.

00:58:41.520 --> 00:58:44.660
Pay for the side branches of the learning path, basically the learning tree.

00:58:44.660 --> 00:58:45.000
Yeah.

00:58:45.000 --> 00:58:45.300
Cool.

00:58:45.300 --> 00:58:48.020
Well, that seems like a pretty solid model to me as well.

00:58:49.120 --> 00:58:52.820
So maybe let's close this out with two quick questions.

00:58:52.820 --> 00:58:54.560
One, what's coming in the future?

00:58:54.560 --> 00:58:59.660
Do you guys have any like cool things that you're adding or just keep going, adding content?

00:58:59.660 --> 00:59:03.000
Well, we have in the classroom, the new thing is Ozaria.

00:59:03.000 --> 00:59:09.380
So as we put these teacher features on for based on the home product, you know, we learned a lot.

00:59:09.380 --> 00:59:11.780
We ran over 80,000 educators through this thing.

00:59:11.780 --> 00:59:16.400
And over the last two years, we've been building out an all new series of content.

00:59:16.400 --> 00:59:18.260
Now we're putting it with new brand.

00:59:18.260 --> 00:59:21.000
It's got new learning modes, got all this story.

00:59:21.000 --> 00:59:26.300
And that is going to be the primary classroom product starting in next month, basically.

00:59:26.300 --> 00:59:28.120
So that's at Ozaria.com.

00:59:28.120 --> 00:59:33.120
And you can't play that on your own really, because that's meant for the teacher experience.

00:59:33.120 --> 00:59:37.400
But, you know, if there's a school involved, then they should, they'll be using that and

00:59:37.400 --> 00:59:39.640
they'll have, it's really cool.

00:59:39.640 --> 00:59:42.020
So that's the new thing on the classroom side.

00:59:42.020 --> 00:59:46.360
The new thing on the home side is of course, we have added this online teaching and that's

00:59:46.360 --> 00:59:47.140
growing pretty well.

00:59:47.400 --> 00:59:52.320
So just kind of expanding what we're doing with that in China, getting it translated into

00:59:52.320 --> 00:59:59.160
even more languages, adding C++ and Java and kind of capitalizing on the potential of what

00:59:59.160 --> 00:59:59.520
we're doing.

00:59:59.520 --> 01:00:03.640
Like you say, there's, there's all these things you can do to optimize every error message in

01:00:03.640 --> 01:00:04.100
every level.

01:00:04.100 --> 01:00:06.260
And of course, we haven't done that with everything.

01:00:06.380 --> 01:00:09.940
So there's just so much more of the core of polish of what we want to do.

01:00:09.940 --> 01:00:10.840
Right, right.

01:00:10.840 --> 01:00:17.480
Each little challenge can have like its own special messages and sort of help support that.

01:00:17.480 --> 01:00:18.940
I'm sure that can always be polished.

01:00:18.940 --> 01:00:19.440
Oh, yeah.

01:00:19.440 --> 01:00:21.140
It's unbounded what the kids are going to mess up.

01:00:21.140 --> 01:00:21.400
Yeah.

01:00:21.400 --> 01:00:25.100
Eventually we need to hook up a machine learning system here that's really doing, I mean, something

01:00:25.100 --> 01:00:29.400
simple, like a multi-armed bandit system or something like that, where we're measuring

01:00:29.400 --> 01:00:33.340
the effectiveness of every possible intervention point, put it in there and optimizing all of

01:00:33.340 --> 01:00:37.520
that based on the data, as opposed to kind of digging into the hotspots by hand and game

01:00:37.520 --> 01:00:38.420
designers going into it.

01:00:38.420 --> 01:00:42.820
But that's what's up for us, just getting better and better and better at teaching coding and

01:00:42.820 --> 01:00:45.780
into more context, more people, more languages.

01:00:46.180 --> 01:00:46.420
Yeah.

01:00:46.420 --> 01:00:46.940
We're up to.

01:00:46.940 --> 01:00:47.260
Yeah.

01:00:47.260 --> 01:00:48.440
Cool, cool.

01:00:48.440 --> 01:00:53.260
And last question, COVID completely changed education.

01:00:53.260 --> 01:00:54.240
Yeah.

01:00:54.240 --> 01:00:57.860
It's probably going to change it in the fall for at least in the United States and some

01:00:57.860 --> 01:00:58.420
other places.

01:00:58.420 --> 01:01:04.680
This has got to be a boon for you guys to say, look, we have this opportunity to reach

01:01:04.680 --> 01:01:09.160
out to many more people who need education and maybe, like you said, more remote friendly

01:01:09.160 --> 01:01:09.660
education.

01:01:09.660 --> 01:01:10.220
Oh, yeah.

01:01:10.220 --> 01:01:14.400
It was originally, you know, we have our team in China and China got shut down.

01:01:14.480 --> 01:01:17.920
And a lot of the stuff we were selling in China was offline training centers after school.

01:01:17.920 --> 01:01:19.260
So we took a hit.

01:01:19.260 --> 01:01:20.480
We saw it coming.

01:01:20.480 --> 01:01:24.420
And we even hired an epidemiologist in late February to say, hey, what's going to happen?

01:01:24.420 --> 01:01:25.660
So she saw everything coming.

01:01:25.660 --> 01:01:27.400
And we're like, hey, sound the alarm, guys.

01:01:27.400 --> 01:01:29.500
This is bad, but we can help.

01:01:29.500 --> 01:01:37.240
And so just as awful as it's been in most dimensions for our business, like it's relatively good.

01:01:37.240 --> 01:01:42.200
The intersection of online learning and online gaming for us, it's just this big opportunity

01:01:42.200 --> 01:01:43.620
to help out in these trying times.

01:01:43.780 --> 01:01:46.580
So like my kids, my five-year-old will be going to kindergarten.

01:01:46.580 --> 01:01:47.620
Oh, that's off.

01:01:47.620 --> 01:01:51.240
You have kids that like, you know, maybe you're not going to be in as much school as you'd hope,

01:01:51.240 --> 01:01:53.360
but you want something for them to do at home.

01:01:53.360 --> 01:01:55.140
Have them check out Code Combat.

01:01:55.140 --> 01:02:00.480
If you really want them to have some structure, get one of our teachers for that or share it

01:02:00.480 --> 01:02:01.840
with your school and we can help out.

01:02:01.840 --> 01:02:07.600
So that is, you know, as long as this thing looks like it's going to be with us, we'll be

01:02:07.600 --> 01:02:10.520
adding more and more of this stuff that makes it even easier to do it from a distance.

01:02:10.860 --> 01:02:10.940
Yeah.

01:02:10.940 --> 01:02:16.780
Well, fingers crossed that it doesn't stay with us for too long, but what you guys have

01:02:16.780 --> 01:02:18.940
built will definitely, you know, help fill the void, I think.

01:02:18.940 --> 01:02:19.640
Yeah, thank you.

01:02:19.640 --> 01:02:20.300
Yeah, sure.

01:02:20.300 --> 01:02:21.280
All right.

01:02:21.280 --> 01:02:27.560
Well, before we get out of here, let me ask you one of the two questions I'll ask at the

01:02:27.560 --> 01:02:27.740
end.

01:02:27.740 --> 01:02:32.080
So if you're going to write some code and, you know, we were talking right before we hit

01:02:32.080 --> 01:02:38.360
record that working on this for Python, this is really mostly a JavaScript project, much

01:02:38.360 --> 01:02:42.280
like working on the visualization tools for say like Jupyter Notebooks, right?

01:02:42.280 --> 01:02:47.300
Even though it's for Python in some sense, like the creating of it is in a JavaScript.

01:02:47.300 --> 01:02:51.820
So what tools do you guys use to write your code to work on this?

01:02:51.900 --> 01:02:52.080
Yeah.

01:02:52.080 --> 01:02:55.020
So our engineering team is all over the place on editors.

01:02:55.020 --> 01:03:01.600
When you have your kind of JetBrains stuff, you have your Visual Studio, your VS Code, you

01:03:01.600 --> 01:03:03.340
have some LimeTags.

01:03:03.780 --> 01:03:06.660
I started this with Emacs and I'm still on Emacs.

01:03:06.660 --> 01:03:10.820
I'll be on Emacs forever because I'm like arcane techno amoeba of Emacs that nobody can

01:03:10.820 --> 01:03:11.240
understand.

01:03:11.240 --> 01:03:14.420
So you're sticking to your scheme roots, your Lisp roots?

01:03:14.420 --> 01:03:15.120
Oh, yeah.

01:03:15.120 --> 01:03:19.520
I'm not that great in Emacs Lisp Packer, but I got a few macros here and there.

01:03:19.520 --> 01:03:21.500
Probably for my cold dead hands.

01:03:21.500 --> 01:03:22.420
Yeah, right on.

01:03:22.420 --> 01:03:22.840
Awesome.

01:03:22.840 --> 01:03:23.660
All right.

01:03:23.660 --> 01:03:24.660
Now, final call to action.

01:03:24.660 --> 01:03:27.220
People are excited about this.

01:03:27.220 --> 01:03:27.980
They want to try it.

01:03:27.980 --> 01:03:28.960
Maybe want to try it with their kids.

01:03:28.960 --> 01:03:29.360
Yeah.

01:03:29.360 --> 01:03:29.660
What do you say?

01:03:29.660 --> 01:03:31.720
CodeCombat.com /play.

01:03:31.720 --> 01:03:32.980
No sign up.

01:03:33.080 --> 01:03:34.380
Just pop it in front of them.

01:03:34.380 --> 01:03:35.000
See how they do.

01:03:35.000 --> 01:03:40.640
And if there's a teacher in your life or a school, that would be the Ozaria product.

01:03:40.640 --> 01:03:41.480
Ozaria.com.

01:03:41.480 --> 01:03:44.180
Send it to them and see if we can get their school hooked up.

01:03:44.180 --> 01:03:45.580
There's a bunch of free stuff there too.

01:03:45.580 --> 01:03:48.160
And a lot of people are looking for this.

01:03:48.160 --> 01:03:49.180
So, yeah.

01:03:49.180 --> 01:03:49.420
Awesome.

01:03:49.420 --> 01:03:49.980
Thanks for the time.

01:03:49.980 --> 01:03:50.720
This has been really fun.

01:03:50.720 --> 01:03:51.000
Yeah.

01:03:51.000 --> 01:03:51.980
It's been great to talk to you about it.

01:03:51.980 --> 01:03:52.920
And congrats on the project.

01:03:52.920 --> 01:03:58.400
I think it's really opened up like proper coding for a whole nother level.

01:03:58.400 --> 01:03:59.860
And I'm really happy to see it.

01:03:59.860 --> 01:04:00.100
Yeah.

01:04:00.100 --> 01:04:00.420
Yeah.

01:04:00.420 --> 01:04:00.720
Yeah.

01:04:00.720 --> 01:04:01.280
All right.

01:04:01.280 --> 01:04:01.760
Take it easy.

01:04:01.760 --> 01:04:02.120
All right.

01:04:02.120 --> 01:04:02.300
Bye.

01:04:02.300 --> 01:04:02.400
Bye.

01:04:02.400 --> 01:04:06.100
This has been another episode of Talk Python To Me.

01:04:06.100 --> 01:04:08.200
Our guest on this episode was Nick Winter.

01:04:08.200 --> 01:04:11.620
And it's been brought to you by Linode and us over at Talk Python Training.

01:04:11.620 --> 01:04:16.480
Start your next Python project on Linode's state-of-the-art cloud service.

01:04:16.480 --> 01:04:19.260
Just visit talkpython.fm/Linode.

01:04:19.260 --> 01:04:20.780
L-I-N-O-D-E.

01:04:20.780 --> 01:04:24.100
You'll automatically get a $20 credit when you create a new account.

01:04:24.100 --> 01:04:26.180
Want to level up your Python?

01:04:26.540 --> 01:04:31.020
If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

01:04:31.020 --> 01:04:36.120
Or if you're looking for something more advanced, check out our new Async course that digs into

01:04:36.120 --> 01:04:39.180
all the different types of Async programming you can do in Python.

01:04:39.180 --> 01:04:43.140
And of course, if you're interested in more than one of these, be sure to check out our

01:04:43.140 --> 01:04:43.860
Everything Bundle.

01:04:43.860 --> 01:04:45.740
It's like a subscription that never expires.

01:04:45.740 --> 01:04:47.880
Be sure to subscribe to the show.

01:04:47.880 --> 01:04:50.380
Open your favorite podcatcher and search for Python.

01:04:50.380 --> 01:04:51.520
We should be right at the top.

01:04:51.920 --> 01:04:56.340
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

01:04:56.340 --> 01:05:00.500
and the direct RSS feed at /rss on talkpython.fm.

01:05:00.500 --> 01:05:02.580
This is your host, Michael Kennedy.

01:05:02.580 --> 01:05:04.080
Thanks so much for listening.

01:05:04.080 --> 01:05:05.120
I really appreciate it.

01:05:05.120 --> 01:05:06.900
Now get out there and write some Python code.

01:05:06.900 --> 01:05:27.680
I really appreciate it.

