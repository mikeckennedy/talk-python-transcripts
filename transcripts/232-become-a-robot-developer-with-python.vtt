WEBVTT

00:00:00.001 --> 00:00:03.320
When you think about the types of jobs you can get as a Python developer,

00:00:03.320 --> 00:00:07.320
you probably weigh the differences between data science and web development.

00:00:07.320 --> 00:00:12.700
But did you consider programming robots in Python? And not just toys, but serious productive

00:00:12.700 --> 00:00:17.380
machines. It turns out there's a gap in the industry where we could use more Python developers

00:00:17.380 --> 00:00:22.460
in robotics. That's why I'm happy to have Ricardo Telles here to give us an overview of the software

00:00:22.460 --> 00:00:28.620
development side of robotics programming with Python. This is Talk Python To Me, episode 232,

00:00:28.620 --> 00:00:31.020
recorded September 11th, 2019.

00:00:31.020 --> 00:00:49.460
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem,

00:00:49.460 --> 00:00:54.560
and the personalities. This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy.

00:00:54.560 --> 00:00:58.320
Keep up with the show and listen to past episodes at talkpython.fm.

00:00:58.440 --> 00:01:00.800
And follow the show on Twitter via at talkpython.

00:01:00.800 --> 00:01:05.640
This episode is brought to you by Linode and Tidelift. Please check out what they're offering

00:01:05.640 --> 00:01:07.840
during their segments. It really helps support the show.

00:01:07.840 --> 00:01:09.820
Ricardo, welcome to Talk Python To Me.

00:01:09.820 --> 00:01:11.400
Thank you very much. It's my pleasure.

00:01:11.400 --> 00:01:16.960
Yeah, it's great to have you here. It has been way too long since we've talked about robotics

00:01:16.960 --> 00:01:23.700
and Python on the podcast. We were just talking, and I think it's been at least four years since the

00:01:23.700 --> 00:01:30.500
last time we've talked about this. And the world is, of course, changing so much in technology and

00:01:30.500 --> 00:01:34.160
Python and robotics as well. So I'm really excited to have you on the show to talk about that.

00:01:34.160 --> 00:01:39.580
Yeah, it's my pleasure. I think that is, was the time to start, to continue talking about robotics

00:01:39.580 --> 00:01:40.500
in Python. Yeah.

00:01:40.600 --> 00:01:45.360
Absolutely. Absolutely. Now, before we get to that, let's start with your personal story. How'd you get

00:01:45.360 --> 00:01:46.240
into programming in Python?

00:01:46.240 --> 00:01:53.260
Well, I started programming in Python when I was doing my PhD, but there was just kind of,

00:01:53.260 --> 00:01:58.780
you know, for only for making this small experiment work. So it was actually, it was not programming

00:01:58.780 --> 00:02:00.540
Python, just copy pasting.

00:02:00.540 --> 00:02:02.160
And what was your PhD in?

00:02:02.160 --> 00:02:06.500
It's in artificial intelligence. I was using neural networks to move robots,

00:02:06.500 --> 00:02:09.620
to make them learn how to move and so on.

00:02:09.620 --> 00:02:10.700
Super cool. Okay.

00:02:10.700 --> 00:02:15.680
That was just the beginning. But then after that, then I started working to a company that

00:02:15.680 --> 00:02:22.580
is called Power Robotics about, we were building their humanoid robots. And then there is where I

00:02:22.580 --> 00:02:30.380
started to program more things in Python, especially when we started to use ROS, the robot operating

00:02:30.380 --> 00:02:35.720
system. So at that point in time, because ROS provides you this interface with Python,

00:02:35.720 --> 00:02:39.880
and it was quite useful. So that's when I really started to program in Python.

00:02:39.880 --> 00:02:43.180
Sure. What were you programming before you started using Python significantly?

00:02:43.180 --> 00:02:44.060
Oh, and C++.

00:02:44.060 --> 00:02:44.800
C++.

00:02:44.800 --> 00:02:46.280
Basically C++, yeah.

00:02:46.280 --> 00:02:53.480
It's for the company in robotics. C++ is very important because usually you need to have

00:02:53.480 --> 00:03:00.500
very fast products. So, I mean, your robot has to deliver very fast, for example, let's say,

00:03:00.500 --> 00:03:06.740
face recognition, a speech recognition, control of the movement. So that requires as much as

00:03:06.740 --> 00:03:09.240
possible. And for that, then it's C++.

00:03:09.240 --> 00:03:13.500
Yeah, absolutely. You think about the performance of Python, and I think it's a really interesting

00:03:13.500 --> 00:03:19.900
story because pure Python, the performance is not amazing. But a lot of times what you're doing

00:03:19.900 --> 00:03:25.660
with Python is either you're talking to some package that has like a lot of the behaviors

00:03:25.660 --> 00:03:32.480
in C or C++, or you're talking to other systems that themselves are running in C or some other

00:03:32.480 --> 00:03:37.840
language like that, like a database or whatever. All right. So I do think it's really interesting.

00:03:37.840 --> 00:03:43.340
Do you see people mixing Python and C++ or even things like Cython?

00:03:43.340 --> 00:03:43.860
In robotics?

00:03:43.860 --> 00:03:44.880
Yeah, yeah. In robotics.

00:03:44.880 --> 00:03:51.580
Definitely. Especially if you are using ROS. So with ROS, that is perfectly created. This

00:03:51.580 --> 00:03:59.740
integration, you can have slow nodes, for example, that are like a kind of behavior changing nodes

00:03:59.740 --> 00:04:06.260
or changing the behavior of the robot based on some pattern recognition or something. So the pattern

00:04:06.260 --> 00:04:13.780
recognition system will run in C++ because it needs to move very fast. But this behavior system

00:04:13.780 --> 00:04:19.600
doesn't need to be to go to the millisecond, you know, it could be half a second in order to change

00:04:19.600 --> 00:04:26.020
the behavior. So that could be running in Python. And then it simplifies a lot your work and your

00:04:26.020 --> 00:04:27.240
maintenance of the code.

00:04:27.240 --> 00:04:32.240
Absolutely. And even controlling stuff, probably, right? Like if I'm going to orchestrate,

00:04:32.240 --> 00:04:39.940
hey, C++ layer, get this image, tell me whether you recognize a thing, and then let me decide in Python

00:04:39.940 --> 00:04:44.240
what to do and kind of orchestrate the lower levels. I think that might also be common. Yeah,

00:04:44.240 --> 00:04:49.980
exactly. That's exactly the case. That what you mentioned is exactly the case. And by using ROS,

00:04:49.980 --> 00:04:57.800
you don't actually care what one program is written in another, they can talk transparently. So they don't

00:04:57.800 --> 00:05:02.720
know if the other one is written, and they interchange the information transparently.

00:05:03.420 --> 00:05:09.800
Yeah, that sounds really cool. We're going to dig into more of that for sure. But let's just really quickly tell folks what you do

00:05:09.800 --> 00:05:13.640
day to day so they know your perspective, where you're coming from, your experience.

00:05:13.640 --> 00:05:20.000
Okay, so I was working on that company, Park Robotics, for building the humanoid robots. But then I decided to build my own

00:05:20.000 --> 00:05:27.560
startup. It's about developing programs for robots based on ROS. So we have a platform online

00:05:27.560 --> 00:05:33.980
where you can develop those programs, create your programs in ROS, either C++ or Python,

00:05:33.980 --> 00:05:42.520
and then you test on the same platform by using simulations of the actual real robots. So you've

00:05:42.520 --> 00:05:47.420
already provided this, so the integration is very, very simple. You don't need to install anything in

00:05:47.420 --> 00:05:53.020
your computer and you operate directly with the web browser. You create the programs there with the

00:05:53.020 --> 00:05:58.360
environment that we provide and you test it on the simulation. And once you have this running,

00:05:58.360 --> 00:06:05.540
then you can switch the code into, you can deploy the code into the real robot. Actually, you can test,

00:06:05.540 --> 00:06:12.000
you can switch your code running from the simulation and then now let's click and switch to the real

00:06:12.000 --> 00:06:14.500
robot until everything works perfectly.

00:06:14.500 --> 00:06:19.900
That sounds like a really fun job actually to be working on. What's the name of the company? How

00:06:19.900 --> 00:06:21.000
do people find this place?

00:06:21.000 --> 00:06:29.740
Okay. Well, our company is called The Construct. So many people ask us, why is this name? So

00:06:29.740 --> 00:06:38.360
basically, The Construct, we wanted to build this place where robots can learn because there is a

00:06:39.000 --> 00:06:45.940
simulated world where they can play and they can try and so on. And then that's a construct concept that is

00:06:45.940 --> 00:06:52.340
in the movie of The Matrix. You know, The Matrix, when they get in, the world is built by the construct.

00:06:52.340 --> 00:07:00.900
And actually, our logo is one of the sofas of the chairs where Morpheus is explaining to the Neo that,

00:07:00.900 --> 00:07:02.920
hey, that's the construct and so on.

00:07:02.920 --> 00:07:05.160
The famous red pill, blue pill scene.

00:07:05.160 --> 00:07:07.820
Yeah, that chair. Exactly.

00:07:07.820 --> 00:07:13.760
Oh, cool. Yeah. I see it now. And it's the constructsim.com. I'll be sure to link to it in the show notes for

00:07:13.760 --> 00:07:18.260
people. That's really cool. Yeah. So that sounds like a really fun project to be working on. And I

00:07:18.260 --> 00:07:24.420
think this idea of having a simulation definitely has to democratize robotics, right?

00:07:24.900 --> 00:07:29.020
It's one thing to be able to write a little code, to look at an image and do something. It's a whole

00:07:29.020 --> 00:07:33.100
nother to put a humanoid creature together and do that.

00:07:33.100 --> 00:07:40.040
Yes, exactly. And that's a problem for the people who want to be a developer. Most of the audience of

00:07:40.040 --> 00:07:46.240
your podcast are developers. They're people that they are interested in developing programs. But what I

00:07:46.240 --> 00:07:53.260
found is that they usually are not interested in hardware issues. Usually. That's why they decided to

00:07:53.260 --> 00:07:59.080
become software developers in the first place. So that makes perfect sense. But there is a lack,

00:07:59.080 --> 00:08:05.960
there is a huge lack of developers in robotics. So at present, it's just us, the roboticists,

00:08:05.960 --> 00:08:13.180
that we are creating the programs. But I mean, the quality of that, I think it could be hugely

00:08:13.180 --> 00:08:20.980
improved if we have the help of real developers. And then the problem is this hardware thing,

00:08:20.980 --> 00:08:29.220
you know, and interacting. So with the simulations, we can provide this environment where the developers

00:08:29.220 --> 00:08:35.520
don't have to deal with the hardware. They test the programs, the simulation in the same way as

00:08:35.520 --> 00:08:40.840
developing applications for an iPhone. You can use those simulators, you know?

00:08:40.840 --> 00:08:45.000
So you said I could go to my web browser and like actually code up a simulation there.

00:08:45.220 --> 00:08:49.560
Is that in Python? Or is that in C++? And what's the experience like?

00:08:49.560 --> 00:08:57.360
Okay, so you have a typical IDE, so an integrated development environment, and typical that you have

00:08:57.360 --> 00:09:05.120
autocomplete and so on. And then you can program. So you create the control programs, the programs that

00:09:05.120 --> 00:09:10.180
make the robot understand the sentences or decide which direction to move or actually move the robot.

00:09:10.220 --> 00:09:17.060
Everything that could be written in Python or C++. But then there's the simulation itself,

00:09:17.060 --> 00:09:21.500
the simulation itself. In case that you don't want to use the ones that we provide,

00:09:21.500 --> 00:09:27.100
you can create your own. Of course, we use a program, an engine for simulation that is called

00:09:27.100 --> 00:09:34.280
gazebo. That is open source. So anybody can download it also. And then you have to create a simulation for

00:09:34.280 --> 00:09:41.500
that engine. And that is created by using format that is called URDF. That is basically an XML file.

00:09:41.500 --> 00:09:45.480
Cool. So you can create your own little world. What kind of simulations do you provide? Like,

00:09:45.480 --> 00:09:50.800
what kind of robots could I make? Could I do self-driving cars, humanoid things, delivery robots?

00:09:50.800 --> 00:09:56.680
You have all types of robots. We have even humanoid robots, human-sized humanoid robots,

00:09:57.120 --> 00:10:03.000
including the controllers for walking. So you don't have to make that robot work because it's already

00:10:03.000 --> 00:10:09.600
provided, all the controllers. You have drones, you have cars. In order to make self-driving,

00:10:09.600 --> 00:10:18.140
you have to build a program. Okay. And then we have what is called mobile manipulators. The mobile

00:10:18.140 --> 00:10:26.960
manipulators are robots that are intended to be in the warehouses, for example. And let's imagine,

00:10:26.960 --> 00:10:34.080
an Amazon warehouse. And then this robot has to be able to move on that warehouse to go to the

00:10:34.080 --> 00:10:40.560
shelf that is where is the product and then grab the product. So that's a mobile because it moves,

00:10:40.560 --> 00:10:45.260
a manipulator because it can manipulate the objects. Right. It's got an arm or something. Yeah.

00:10:45.260 --> 00:10:53.440
They do exist, the robots, but the problem is the software. Again, so the problem is the software. So

00:10:53.440 --> 00:10:59.680
the hardware is there. You can buy these kinds of robots, but they are not able to grab the thing.

00:10:59.680 --> 00:11:01.280
And it's a problem of software.

00:11:01.280 --> 00:11:06.360
Yeah. Well, it sounds like you're solving a really interesting problem. Now, before we get into the

00:11:06.360 --> 00:11:12.200
topic more broadly, I just want to talk about really quickly, you also have a podcast that people might be

00:11:12.200 --> 00:11:16.840
familiar with called the Ross Developers Podcast. And I'll link to that as well. You know, I just tell

00:11:16.840 --> 00:11:22.820
people who maybe want to listen to a whole bunch of stuff about Ross as well after this show about your

00:11:22.820 --> 00:11:28.440
podcast. Yes, yes, definitely. So in this podcast, what we do is to interview people that are experts

00:11:28.440 --> 00:11:36.280
in Ross and especially about how to program robots with Ross. And then they explain to us how you can do

00:11:36.280 --> 00:11:42.540
this, how they have done to create, make a robot, create a map. So they teach which packages they

00:11:42.540 --> 00:11:48.720
have used, where to download the code already there. And we try to have fun also there.

00:11:48.720 --> 00:11:54.500
Yeah. It sounds like a good show. I enjoyed listening to an episode or two. Now let's just talk real

00:11:54.500 --> 00:12:02.080
broadly. When I think about the Python developer space, at least, maybe I have this wrong, but I see it

00:12:02.080 --> 00:12:07.760
broken up into a couple of areas. I see there's a big chunk of web developers writing Flask, Django,

00:12:07.760 --> 00:12:12.920
Pyramid apps, talking to databases, worrying about scalability, uptime, Docker, et cetera.

00:12:12.920 --> 00:12:22.180
There's another significant group doing data science with NumPy, Pandas, Jupyter, Lab, et cetera. And

00:12:22.180 --> 00:12:28.880
they're doing their thing. And then I see the world is kind of like other. And that other is super,

00:12:28.880 --> 00:12:35.140
super diverse, right? It could be physicists, it could be biologists, it could be financial folk,

00:12:35.140 --> 00:12:40.500
right? DevOps. There's just so many things. So I guess one of the areas that, you know,

00:12:40.500 --> 00:12:49.520
seems really interesting is this area of becoming a robotics developer. So is this like a growing area

00:12:49.520 --> 00:12:55.460
that people might look into? Is this a popular area for Python? It sounds like it is. What's the story

00:12:55.460 --> 00:13:02.520
around there? Yes, definitely. So I think that becoming a robotics developer is now the moment

00:13:02.520 --> 00:13:09.740
to start thinking about it. It's I think of robotics developers, like when we were thinking about data

00:13:09.740 --> 00:13:17.160
scientists, some years ago, let's say 10 years ago. Yeah, like 2011, 2012, 2013, when they were all sort of

00:13:17.160 --> 00:13:22.720
switching to into Python and more programming oriented stuff rather than say, or something that's more

00:13:23.060 --> 00:13:29.220
statistical based, right? Yes, or deep learning. Also, in deep learning, 10 years ago, there were

00:13:29.220 --> 00:13:36.480
just a few of them. And now it's completely full. It's feel, sorry, it's completely filled of people,

00:13:36.480 --> 00:13:42.900
everybody's doing data scientists. And then now the situation for becoming a robotics developer is a very

00:13:42.900 --> 00:13:49.400
good one. Because as I mentioned, there are just a few people. And also, mainly, we are roboticists,

00:13:49.400 --> 00:13:56.680
mainly of the people is just roboticists, or very hardware oriented people. And then if you are a

00:13:56.680 --> 00:14:02.900
developer, you have a chance there. Because you know the skills better than anyone. And that is

00:14:02.900 --> 00:14:08.140
programming. And the tools sound like they're tools that people would maybe already be familiar with,

00:14:08.140 --> 00:14:14.320
or very similar to stuff they've already done. And it's probably not a huge field, you know, millions and

00:14:14.320 --> 00:14:20.000
millions of people building robots necessarily in terms of developers. But it's probably good jobs,

00:14:20.000 --> 00:14:25.240
interesting jobs, you know, you probably get to move around and do cool stuff and not just sit in a

00:14:25.240 --> 00:14:29.080
cubicle, right? And work on like optimizing marketing conversions or whatever.

00:14:29.080 --> 00:14:35.380
The thing is that this robotics market is exploding. And actually, I have here some provision,

00:14:35.740 --> 00:14:45.820
some forecasting for 2024, for example, is now a present, specifically only for development with Ross,

00:14:45.820 --> 00:14:55.980
it's the market is about 312 millions, 312 millions, but it is expected in 2024 to be about 500

00:14:55.980 --> 00:15:02.940
millions, the market. So it's almost doubling, almost doubling, yeah, yeah. And then I can tell you,

00:15:03.020 --> 00:15:10.200
for example, that recently, Amazon has entered last year, Amazon entered into the game, and they have

00:15:10.200 --> 00:15:18.360
the robotics division. And NVIDIA also entered into the game some years ago, and Google is going to

00:15:18.360 --> 00:15:26.200
enter this year. And Microsoft also, Microsoft has entered last year, also presenting their own Ross

00:15:26.200 --> 00:15:32.860
version in Windows. So very, very big players are getting into there. And you know that big players,

00:15:32.860 --> 00:15:38.920
they don't go there just because they are bored, it's because they are feeling that there is

00:15:38.920 --> 00:15:40.040
something there to get.

00:15:40.040 --> 00:15:41.700
All right, they want to ride the wave.

00:15:41.700 --> 00:15:42.400
Yes.

00:15:42.400 --> 00:15:42.680
Yeah.

00:15:42.680 --> 00:15:48.200
That's why I think it's a very good possibility. Also, there is a very famous conference, it's called

00:15:48.200 --> 00:15:55.380
the RossCon, is the Ross Conference official. And it's actually, it's in two months, it's going to be

00:15:55.380 --> 00:16:01.200
the next edition. And there, all the companies that show, we are hiring, we are hiring, we are hiring,

00:16:01.200 --> 00:16:05.740
we are hiring. There is a demand for software developers in robotics.

00:16:06.380 --> 00:16:11.920
This portion of Talk Python To Me is brought to you by Linode. Are you looking for hosting

00:16:11.920 --> 00:16:16.720
that's fast, simple, and incredibly affordable? Well, look past that bookstore and check out

00:16:16.720 --> 00:16:23.600
Linode at talkpython.fm/Linode. That's L-I-N-O-D-E. Plans start at just $5 a month for

00:16:23.600 --> 00:16:28.420
a dedicated server with a gig of RAM. They have 10 data centers across the globe. So no matter

00:16:28.420 --> 00:16:32.600
where you are or where your users are, there's a data center for you. Whether you want to run

00:16:32.600 --> 00:16:37.740
a Python web app, host a private Git server, or just a file server, you'll get native SSDs

00:16:37.740 --> 00:16:43.740
on all the machines, a newly upgraded 200 gigabit network, 24 seven friendly support, even on

00:16:43.740 --> 00:16:47.700
holidays, and a seven day money back guarantee. Need a little help with your infrastructure?

00:16:47.700 --> 00:16:52.420
They even offer professional services to help you with architecture, migrations and more.

00:16:52.420 --> 00:16:57.460
Do you want a dedicated server for free for the next four months? Just visit talkpython.fm

00:16:57.460 --> 00:17:04.680
slash Linode. I think a lot of people grew up dreaming of working with robots and all these

00:17:04.680 --> 00:17:12.160
things. And then, you know, you, you realize that it's hard. The hardware is tricky. And, you know,

00:17:12.160 --> 00:17:16.660
maybe the jobs aren't there, but it's, it sounds like maybe that's becoming a reality. That's cool.

00:17:16.660 --> 00:17:24.300
Yes, definitely. And the main problem that they can face maybe is about dealing with the hardware.

00:17:24.800 --> 00:17:30.720
But as I mentioned before, then dealing with hardware can be kind of substitute by using

00:17:30.720 --> 00:17:36.140
the simulation. So you can replace a lot of work with hardware by using the simulation. And then

00:17:36.140 --> 00:17:40.240
also by using ROS API. That's the combination of the both things.

00:17:40.240 --> 00:17:45.800
Yeah. So tell us a little bit more about that. I mean, your company has this virtual world sort of

00:17:45.800 --> 00:17:52.860
integrated online space for doing these. Does ROS itself have like capabilities for running in a

00:17:52.860 --> 00:17:59.160
simulation mode or something like that? Yes. Together with ROS, when you install ROS, it's open source.

00:17:59.160 --> 00:18:05.680
So anybody, listeners there, you can download right now if you want. And together with ROS,

00:18:05.680 --> 00:18:11.940
you are installing the official simulator that is called Gazebo, like a Gazebo. Yeah.

00:18:12.780 --> 00:18:18.500
And then this allows you to simulate your robot. Actually, there are a lot of simulations already there.

00:18:18.500 --> 00:18:26.620
And then you can download also in your computer and execute. Then having said that, good luck.

00:18:26.620 --> 00:18:33.460
Okay. Because well, so you download, you know what happens. You download that then it shows this effect

00:18:33.460 --> 00:18:37.900
that I call it works on my machine, you know? Yeah. Have you seen the certification program?

00:18:38.380 --> 00:18:44.600
There's an official, it works on my machine. Okay. No.

00:18:44.600 --> 00:18:51.200
It's really hilarious. I'll definitely put a link in the show. So there's somebody made a joke about this

00:18:51.200 --> 00:18:58.700
at some point and did a blog post. And so let's see, to officially become certified is you compile

00:18:58.700 --> 00:19:04.120
your application, assuming it's a compile language. Getting the latest from recent code changes out of

00:19:04.120 --> 00:19:09.920
source control is totally optional. You launch the application or website. You cause one code path

00:19:09.920 --> 00:19:16.160
to be executed. The preferred way to do this is with ad hoc testing. admitting the step is fine.

00:19:16.160 --> 00:19:22.260
If, five lines have changed and then you check in your code and now you're, you're certified to get

00:19:22.260 --> 00:19:23.460
the badge. I'll open it. Certified.

00:19:24.520 --> 00:19:29.140
Isn't that great. You get it, the simulation set up on your machine and then, you know, it's,

00:19:29.140 --> 00:19:32.540
it's tricky to, to deploy this or share it. Is that what you're saying?

00:19:32.540 --> 00:19:38.380
Yes. It's tricky because there are a lot of versions. The versions are changing constantly.

00:19:38.380 --> 00:19:44.920
And also there are a lot of requirements from other libraries that they are changing also again.

00:19:45.280 --> 00:19:51.740
So you get this effect, you know, that multiplies. And of course, I'm not telling that developers,

00:19:51.740 --> 00:19:57.000
the listeners of the podcast, they cannot do it. No, I'm not telling this. Okay. I'm talking about

00:19:57.000 --> 00:20:03.460
efficiency. So many of the people we talk to about our product, they say, no, so why would I pay you

00:20:03.460 --> 00:20:09.000
if I can do it? And it's completely fair because they can do it. But most of our clients, they can

00:20:09.000 --> 00:20:14.020
also do it. It's not that they cannot, but they don't want to. Yeah. That's the, yeah, it's,

00:20:14.020 --> 00:20:19.420
they want to focus on the core problem they're trying to solve and not all the stuff around it.

00:20:19.420 --> 00:20:20.760
Right. Exactly. Okay, cool.

00:20:20.760 --> 00:20:28.880
It's another point here is about working into teams or, or for example, where system is very useful and

00:20:28.880 --> 00:20:36.400
used actually by, for example, by universities, because the teacher can create a demonstration,

00:20:36.900 --> 00:20:44.060
simulation with a code that makes the robot grasp something. And then it can share with the older

00:20:44.060 --> 00:20:52.320
students, 200, 300, 1000, whatever. It will work in the exact, exact same way as for the teacher. So

00:20:52.320 --> 00:20:56.780
the teacher knows that this is going to work for this guy and they don't have to prepare anything.

00:20:56.780 --> 00:21:02.220
Yeah. It's not like, well, you've got an old version of macOS and it has the wrong dependency here.

00:21:02.220 --> 00:21:06.440
So it won't work or you don't have the right permissions or all that stuff. I mean,

00:21:06.440 --> 00:21:11.520
it sounds a little bit like the problem that Jupyter Notebooks solve for teaching data science and other

00:21:11.520 --> 00:21:17.880
types of courses where you can just say, here's a URL. You just go use this and it's all set up just the

00:21:17.880 --> 00:21:23.000
way we need it to be. Right. Exactly. Actually in our product, we use Jupyter Notebooks for the

00:21:23.000 --> 00:21:31.220
documentation and demonstration. I will send you one example. When we call a ROSJ. The ROSJ is a ROS project,

00:21:31.220 --> 00:21:36.300
which contains everything. It contains the simulation, the code, the documentation and

00:21:36.300 --> 00:21:42.340
data sets. And so it's a simple link. And then I will send you one example to you so you can have a

00:21:42.340 --> 00:21:45.060
look and maybe share with the audience. Yeah. Yeah. I'll put it in the show notes.

00:21:45.060 --> 00:21:50.300
You will see that it opens the Jupyter Notebook and then it says the Jupyter Notebook, oh, do this. And

00:21:50.300 --> 00:21:54.920
then the robot will do that. And then you can see that it actually works. That sounds really fun. Yeah.

00:21:54.920 --> 00:21:59.900
Definitely share that with everyone. That'll be fun to play with. Now let's talk a little bit about the

00:21:59.900 --> 00:22:06.080
different types of robots. So I have a robot in my house and it looks about the size of a plate and it

00:22:06.080 --> 00:22:11.560
drives around and it gets stuck in my furniture. When it's not stuck in my furniture, it's trying to vacuum up

00:22:11.560 --> 00:22:17.200
stuff around the house. Okay. So we have vacuums and actually those are pretty cool. Even some of

00:22:17.200 --> 00:22:21.220
those like Roomba and stuff, there's some that are programmable, right? Many things to say about

00:22:21.220 --> 00:22:28.020
this. You can stop me anytime, okay? Because I have a lot of things to say. So first thing I would like

00:22:28.020 --> 00:22:38.040
to say is vacuums is, I would say that is the only real robotics business that has been successful.

00:22:38.840 --> 00:22:44.880
I think, I don't know the numbers, okay, of all the robotics companies, but I mean in the case of

00:22:44.880 --> 00:22:51.120
service robots. So the vacuum cleaner is called a service robot. Consumer level robots, right? Yeah.

00:22:51.120 --> 00:22:56.420
Exactly. So those are robots that are working. They are doing their work in environments where there is

00:22:56.420 --> 00:23:02.980
people around. They have to figure out how to manage changes in the environment, not industrial robots.

00:23:02.980 --> 00:23:07.360
Okay. I'm not talking about those, but about service robots. I think that the vacuum cleaners,

00:23:07.360 --> 00:23:14.980
the iRobot or any other brand, those are the only ones, robotic companies that have been successful and

00:23:14.980 --> 00:23:22.660
made a business. The rest of the ones, they are living on investment, you know, on rounds of VCs and so on.

00:23:22.660 --> 00:23:26.800
Yeah. It's all future valuation and VC money and hope.

00:23:26.900 --> 00:23:31.280
Yeah. And hope. Exactly. So that's the first thing I wanted to say about the vacuum cleaners,

00:23:31.280 --> 00:23:34.360
because they deserve all the respect.

00:23:34.360 --> 00:23:37.120
They actually are a success story, right? In a sense.

00:23:37.120 --> 00:23:41.780
Exactly. A success story. And then the other thing you mentioned about programming,

00:23:41.780 --> 00:23:49.300
the version of iRobot is called Roomba. There is a version, I don't remember exactly its name,

00:23:49.300 --> 00:23:57.060
but it's programmable. So you can programmable. Then some of the guys of the developers of the

00:23:57.060 --> 00:24:05.200
ROS, some of the guys decided to use it as the base for creating a simple robot that all the ROS

00:24:05.200 --> 00:24:11.500
students, they can use it and they can buy for a low amount of time and then start performing tests

00:24:11.500 --> 00:24:17.180
with ROS and so on. It's called the Tartelbot. So the Tartelbot in the inside has a Roomba,

00:24:17.180 --> 00:24:23.200
a programmable Roomba that is called, oh yeah, I remember. It's called Kabuki. Kabuki.

00:24:23.200 --> 00:24:28.340
Yeah. Kabuki. Okay. That's pretty awesome. They should just leave it vacuuming just so wherever

00:24:28.340 --> 00:24:34.560
the robot works, it's just super clean. I had no idea they did that. That's really interesting.

00:24:34.560 --> 00:24:40.920
I knew you could program. I didn't know that it was being like repurposed for this, these other areas.

00:24:40.920 --> 00:24:47.440
Another area where I think robotics, I don't even, you tell me if this is the right word,

00:24:47.440 --> 00:24:55.260
but certainly machines operating autonomously in the world seems to have taken hold somewhat,

00:24:55.260 --> 00:25:00.720
maybe not mainstream commercial success, but kind of crazy success for how complicated it is,

00:25:00.720 --> 00:25:09.860
is cars, right? Like Tesla, even just the Teslas are unbelievable in how that they can interact with

00:25:09.860 --> 00:25:14.880
their environment. And then you've got cruise automation, you've got Google, you've got NVIDIA,

00:25:14.880 --> 00:25:20.700
Uber actually building truly autonomous cars. But, you know, even going for a ride in a Tesla on a city

00:25:20.700 --> 00:25:22.520
street is a very weird experience.

00:25:22.660 --> 00:25:29.300
It's amazing, but they still haven't reached the level five of autonomy. So it means that they can't go by the,

00:25:29.300 --> 00:25:36.760
yeah, not yet, not yet. And it's going to be very difficult to reach that. They are expected to release very,

00:25:36.760 --> 00:25:42.840
very soon this system. But personally, I don't believe it that it's going to be very soon because it's very,

00:25:42.840 --> 00:25:45.040
very complex. It's very complex here.

00:25:45.440 --> 00:25:52.560
The edge cases seem so hard, right? You get 95% perfect, but the consequence of failure is so high.

00:25:52.560 --> 00:25:53.120
Yeah.

00:25:53.120 --> 00:25:57.100
If you run over a person one every hundred thousand times, that's still a really big problem.

00:25:57.100 --> 00:26:04.300
Exactly. That is a point. That is a point. For the main thing, it works. It works. So I have been

00:26:04.300 --> 00:26:10.140
with some people from other companies that they are building this and they gave me a ride and the

00:26:10.140 --> 00:26:15.480
experience is amazing. So it's in a very good condition, but for all the conditions,

00:26:15.480 --> 00:26:21.820
for all the types of people, the types of clothes, the types of materials, that's not working. It's not

00:26:21.820 --> 00:26:22.840
not working yet.

00:26:22.840 --> 00:26:30.240
Yeah. Yeah. Yeah. Not yet. I'll share a really quick story with folks. We rented for four or five days,

00:26:30.240 --> 00:26:35.840
a model three Tesla, and we were driving and my wife was, I rented it for my wife to try it out. And

00:26:35.840 --> 00:26:39.920
we were driving down the street and she really wanted to try the self-driving. So she turned it

00:26:39.920 --> 00:26:46.040
on and it was fine, but it got to a place where the stripes on the road were faded or it's the Tesla

00:26:46.040 --> 00:26:51.660
became uncertain of the environment. And it told her to put her hands on the wheel and take control of it

00:26:51.660 --> 00:26:56.980
because it needed her to be ready because it was getting into this uncertainty zone. And she puts her

00:26:56.980 --> 00:27:02.220
hands near it, but not physically touching the wheel. So it didn't know she was holding on or ready to

00:27:02.220 --> 00:27:07.660
hold on. And it got really mad. It told her to do it again. And then after a couple of times of saying,

00:27:07.660 --> 00:27:12.160
do this now, it's just said no more self-driving for you. And it pulled over and stopped.

00:27:12.160 --> 00:27:16.740
It just said, if you're not going to take the wheel, we're done self-driving, no more self-driving

00:27:16.740 --> 00:27:20.720
this entire drive until you shut the car off for a while, then you can self-drive again.

00:27:20.720 --> 00:27:22.040
No way.

00:27:22.040 --> 00:27:24.200
Isn't that funny? She's like,

00:27:24.200 --> 00:27:28.660
it got mad to me and we won't drive anymore. I'm like, we said to hang on. She's like,

00:27:28.680 --> 00:27:31.380
I was hanging on. Like you were almost hanging on. It didn't know.

00:27:31.380 --> 00:27:36.560
So now we are going to have fights with a partner and with a car.

00:27:36.560 --> 00:27:42.180
Exactly. The car got mad at me. So I, you know, I mean, these are the ways they can deal with it

00:27:42.180 --> 00:27:48.520
now, but it's going to be real. I do think though, that cars have come surprisingly far in robotics.

00:27:48.520 --> 00:27:52.740
As far as I thought, I thought this problem is just too hard for cars. They were actually quite

00:27:52.740 --> 00:27:57.760
close to this level five. They're not there for the problems we already talked about, but they're way

00:27:57.760 --> 00:27:59.500
farther than I would have guessed 10 years ago.

00:27:59.500 --> 00:28:04.980
Yeah. Yeah. Yes. That's right. That also was a surprise for all of us. So it was like,

00:28:04.980 --> 00:28:11.060
there was nothing. And then suddenly, boom, then it started the development. I think that it was,

00:28:11.060 --> 00:28:17.080
everything started with the DARPA challenge. I don't remember exactly the name. That was one of the

00:28:17.080 --> 00:28:24.980
first. They have to cross a desert. And then the first edition, there was nobody. And the second

00:28:24.980 --> 00:28:32.280
edition, there was the team from Sebastian Thrun, who is the founder of Udacity. Sebastian Thrun.

00:28:32.280 --> 00:28:51.380
And then he made it. And then on the next one, there's so many other cars. They did it. But that's when it started. Then from that point, that's it. Then they created a company. This company was bought by Google. And then when Google started to do that, then it's kind of like it explode. It explode.

00:28:51.880 --> 00:28:57.880
So now there's companies, drivers, driverless cars, companies, many, many around the world.

00:28:57.880 --> 00:29:05.140
It's really amazing. There's a super good documentary by Nova, which is this like public broadcasting

00:29:05.140 --> 00:29:12.420
organization in the US or series called The Great Robot Race. And I'll link to it. And it takes you,

00:29:12.420 --> 00:29:19.180
it's like an hour and a half deep techie dive into this DARPA challenge that you talked about. And it's really amazing.

00:29:19.180 --> 00:29:21.220
Okay. Taking note to watch it.

00:29:21.220 --> 00:29:23.640
It's super cool. I'll put a link in the show notes.

00:29:25.320 --> 00:29:31.540
This portion of Talk Python To Me is brought to you by Tidelift. Tidelift is the first managed open source subscription,

00:29:31.540 --> 00:29:37.740
giving you commercial support and maintenance for the open source dependencies you use to build your applications.

00:29:37.740 --> 00:29:44.220
And with Tidelift, you not only get more dependable software, but you pay the maintainers of the exact packages you're using,

00:29:44.220 --> 00:29:50.020
which means your software will keep getting better. The Tidelift subscription covers millions of open source projects

00:29:50.020 --> 00:29:53.720
across Python, JavaScript, Java, PHP, Ruby, .NET, and more.

00:29:53.720 --> 00:29:58.840
And the subscription includes security updates, licensing, verification, and indemnification,

00:29:58.840 --> 00:30:03.920
maintenance and code improvements, package selection and version guidance, roadmap input,

00:30:03.920 --> 00:30:09.880
and tooling and cloud integration. The bottom line is you get the capabilities you'd expect and require

00:30:09.880 --> 00:30:14.920
from commercial software. But now for all the key open source software you depend upon,

00:30:14.920 --> 00:30:19.460
just visit talkpython.fm/Tidelift to get started today.

00:30:19.460 --> 00:30:23.620
So let's bring it back to Python a little bit. Now you talked earlier,

00:30:23.620 --> 00:30:31.900
about this back and forth between Python and C++. And sometimes maybe you prototype in Python and then write in C++,

00:30:31.900 --> 00:30:35.800
or maybe there's an orchestration or something. I don't know, where would you get started?

00:30:35.800 --> 00:30:39.680
If I wanted to get started as a developer in robotics, would I start with Python?

00:30:39.680 --> 00:30:43.320
Would I be limited by doing that? What's the story there?

00:30:43.340 --> 00:30:49.060
This is my personal opinion based on my experience.

00:30:49.060 --> 00:30:55.180
So besides this development environment, we teach people about how to become a robotics developer.

00:30:55.180 --> 00:31:01.000
In our academy, that is also an online academy, uses the same engine as the development system.

00:31:01.120 --> 00:31:04.880
So it's everything online, you see simulations of robots, and then you learn.

00:31:04.880 --> 00:31:12.500
So what we teach there is that if you don't know anything about C++ or Python,

00:31:12.500 --> 00:31:15.100
then you should start with Python.

00:31:15.540 --> 00:31:21.320
So you start learning Python, and then you start learning ROS with Python.

00:31:21.320 --> 00:31:23.820
So how to program in ROS by using Python.

00:31:23.820 --> 00:31:30.180
If you know Python already, then okay, then still start by learning ROS with Python.

00:31:30.620 --> 00:31:38.420
And the only option for starting with C++ is because, I don't know, it's your only option for getting a job.

00:31:38.420 --> 00:31:42.580
You are very, very stressed, and that's the only option that you have to leave.

00:31:42.580 --> 00:31:47.960
But if you want to optimize your path, then start always by learning Python.

00:31:47.960 --> 00:31:49.660
Then ROS with Python.

00:31:49.660 --> 00:31:53.460
And once you know the basics of ROS with Python,

00:31:53.460 --> 00:31:59.980
then you can decide whether to go back and learn ROS with C++.

00:31:59.980 --> 00:32:02.760
Again, and why is that?

00:32:02.760 --> 00:32:08.540
Because ROS with Python is hiding, not many, but a bunch of details.

00:32:08.540 --> 00:32:09.860
Important details, yeah.

00:32:09.860 --> 00:32:14.440
Yeah, very complex to understand when you are new there.

00:32:14.440 --> 00:32:18.060
So it's easier for you to understand really how ROS works

00:32:18.060 --> 00:32:24.220
and how you make a robot based on ROS to do a task, to finish a task.

00:32:24.220 --> 00:32:27.900
So you can master that with Python a lot faster.

00:32:28.400 --> 00:32:32.860
Then in order to go back and relearn with C++, you have to reconsider

00:32:32.860 --> 00:32:39.020
if you are going to dedicate yourself for working, programming robots for industry, for companies,

00:32:39.020 --> 00:32:42.980
or you are going to dedicate to program robots for research.

00:32:42.980 --> 00:32:47.540
That is also a big space where developers can dedicate.

00:32:47.540 --> 00:32:52.000
It's a big space where you are going to be able to do a job.

00:32:52.000 --> 00:32:54.900
So you have to learn new things or discover new things with robotics.

00:32:54.900 --> 00:33:04.640
In that case, Python is a lot better because in this case, what is vital is to present the results as fast as possible.

00:33:05.280 --> 00:33:07.620
And for that, I mean, Python is the winner.

00:33:07.620 --> 00:33:09.400
It's always the winner in that case.

00:33:09.400 --> 00:33:16.440
So even if execution is slower, it's good enough to record the video and present the paper.

00:33:17.260 --> 00:33:19.040
And that's what is required in research.

00:33:19.040 --> 00:33:19.800
Yeah, absolutely.

00:33:19.800 --> 00:33:20.920
That's really interesting.

00:33:20.920 --> 00:33:27.640
When you think about performance between Python and C++, if you're going to run some code just a couple of times or something,

00:33:27.640 --> 00:33:31.760
and you factor in from the time I start working on the idea until I have the answer,

00:33:31.760 --> 00:33:34.380
maybe C++ runs five times faster.

00:33:34.380 --> 00:33:37.960
But it takes you a day in Python and a week in C++, right?

00:33:37.960 --> 00:33:39.480
Which language is faster, right?

00:33:39.480 --> 00:33:41.260
Like that's an interesting question as well.

00:33:41.440 --> 00:33:41.840
Exactly.

00:33:41.840 --> 00:33:42.360
Yeah.

00:33:42.360 --> 00:33:43.720
Python, definitely.

00:33:43.720 --> 00:33:44.640
Yeah, for sure.

00:33:44.640 --> 00:33:54.000
So one of the dramas, challenges, I guess, success stories coming up, but it's been a long journey these days,

00:33:54.000 --> 00:33:58.740
is legacy Python versus modern Python or Python 2 versus Python 3, right?

00:33:58.740 --> 00:34:02.300
What's the Python 2, 3 story around robotics?

00:34:02.300 --> 00:34:03.360
It's a pain.

00:34:03.360 --> 00:34:07.860
It's a pain.

00:34:07.860 --> 00:34:08.540
It's a pain.

00:34:08.540 --> 00:34:13.760
I mean, so I'm talking here always about programming robots with ROS.

00:34:13.760 --> 00:34:16.220
Okay, so what's the problem with ROS?

00:34:16.220 --> 00:34:20.180
That ROS works with Python 2.7.

00:34:20.180 --> 00:34:26.780
Up to now, the latest version of ROS still works with 2.7.

00:34:26.780 --> 00:34:32.320
Then ROS has started 10 years ago.

00:34:32.320 --> 00:34:35.160
And so now it has matured for 10 years.

00:34:35.160 --> 00:34:45.460
But it became clear that this structure of the current ROS was not going to be sufficient for real robot applications,

00:34:45.460 --> 00:34:50.360
for companies to adopt ROS into their products massively.

00:34:50.900 --> 00:35:01.340
Because of that, they decided, the organizing committee of ROS decided to create a new version of ROS that is called ROS 2.

00:35:01.340 --> 00:35:08.080
And then when they decided this, they started like three or four years ago to develop, to start development,

00:35:08.080 --> 00:35:11.160
and they decided to do it in Python 3.7.

00:35:11.500 --> 00:35:18.980
So if you are going to jump into ROS now, then if you are going to jump into ROS 2, then you are saved.

00:35:18.980 --> 00:35:21.420
Okay, because you are going to learn Python.

00:35:21.420 --> 00:35:23.380
You are going to use Python 3.7.

00:35:23.380 --> 00:35:24.660
So it's a future.

00:35:24.660 --> 00:35:25.600
It's everything.

00:35:25.600 --> 00:35:26.520
Well, yeah.

00:35:26.520 --> 00:35:31.740
You can use all the new libraries, TensorFlow, NumPy, whatever, the latest version of all the good things.

00:35:31.740 --> 00:35:38.340
Even there are other libraries that we use in robotics, like the ones created by OpenAI.

00:35:38.340 --> 00:35:41.540
OpenAI, you know about that company?

00:35:41.540 --> 00:35:42.320
Yeah, tell us about it.

00:35:42.320 --> 00:35:42.720
Okay.

00:35:42.720 --> 00:35:48.060
It actually was founded by Elon Musk, the founder of Tesla.

00:35:48.060 --> 00:35:49.580
So the CEO of Tesla.

00:35:50.120 --> 00:35:56.100
And they are concentrated on creating very good reinforcement learning algorithms using Python.

00:35:56.100 --> 00:35:57.280
They use Python only.

00:35:57.280 --> 00:35:59.400
And they use Python 3, of course.

00:35:59.400 --> 00:36:03.400
So that's very cool because we use those.

00:36:03.400 --> 00:36:05.200
Then you can use it in ROS 2.

00:36:05.200 --> 00:36:09.760
But if you are going to jump into ROS 1 because it's the current standard,

00:36:09.760 --> 00:36:14.200
so most of the places you are going to use ROS 1 yet,

00:36:14.200 --> 00:36:18.980
then that's based on 2.7, Python 2.7.

00:36:18.980 --> 00:36:20.760
And you're kind of stuck in that world, right?

00:36:20.760 --> 00:36:21.660
Yes.

00:36:21.660 --> 00:36:28.360
Well, the next version, the next distribution of ROS 1 that is going to appear in 2020,

00:36:28.360 --> 00:36:31.960
it's going to be based on Python 3 already.

00:36:31.960 --> 00:36:32.280
Okay.

00:36:32.280 --> 00:36:33.460
Well, that's a pretty positive story.

00:36:33.460 --> 00:36:35.300
That's going to be a festival.

00:36:35.300 --> 00:36:41.700
I mean, it's going to be a big party among everyone because imagine everyone already changing their code

00:36:41.700 --> 00:36:43.320
into that other version.

00:36:43.320 --> 00:36:45.060
So it's going to be crazy.

00:36:45.060 --> 00:36:47.540
Yeah, that'll be wild.

00:36:47.540 --> 00:36:48.820
No, but that's really good.

00:36:49.380 --> 00:36:51.160
Now, maybe there is some code.

00:36:51.160 --> 00:36:56.880
I've prototyped in Python and it's working well, but I need to move it into production.

00:36:56.880 --> 00:36:59.040
I want to put it onto a real robot.

00:36:59.040 --> 00:37:02.000
Maybe that robot has limited computation power or whatever.

00:37:02.000 --> 00:37:04.220
And I want to make it go faster.

00:37:04.220 --> 00:37:05.780
What steps do I need to take?

00:37:05.780 --> 00:37:08.600
Do I rewrite part of that code in C++?

00:37:09.200 --> 00:37:16.360
Have people use Cython on parts of their Python code to make it go faster or other things like that?

00:37:16.360 --> 00:37:19.580
What's the productizing my robot story?

00:37:19.580 --> 00:37:21.180
I don't know about this Cy...

00:37:21.180 --> 00:37:22.460
How do you call it?

00:37:22.460 --> 00:37:23.080
Cython?

00:37:23.080 --> 00:37:24.980
It's like CPython without the P.

00:37:24.980 --> 00:37:30.820
So what you get to do is you get to take a small portion of Python, put type annotations on it,

00:37:30.820 --> 00:37:34.300
and then compile it to native code as if it were C, through a C compiler.

00:37:34.300 --> 00:37:37.080
And it goes many, many times faster.

00:37:37.080 --> 00:37:46.280
So if you've got a Python program and there's some tight loop or some one module that's 200 lines long or something,

00:37:46.280 --> 00:37:47.400
you need that to go fast.

00:37:47.780 --> 00:37:51.120
You could hit that with Cython, rename it to...

00:37:51.120 --> 00:37:52.200
I think it's CPY.

00:37:52.200 --> 00:37:53.200
I forgot the extension.

00:37:53.200 --> 00:37:54.400
But rename it.

00:37:54.400 --> 00:37:55.640
I don't think that's right.

00:37:55.640 --> 00:37:58.800
But anyway, you rename it to a different file and you hit it with CPython.

00:37:58.800 --> 00:38:02.780
And then it just becomes like a C module that gets imported by your other Python code.

00:38:02.780 --> 00:38:03.320
Okay.

00:38:03.320 --> 00:38:06.320
So that's the first time that I heard about that.

00:38:06.320 --> 00:38:09.680
So I cannot tell you what is the difference between that.

00:38:09.680 --> 00:38:18.180
But usually what we do in those situations, in those situations is usually is first one, rewriting C++.

00:38:18.180 --> 00:38:22.100
So that's the, I mean, that's a straight, rewriting C++.

00:38:22.100 --> 00:38:26.700
Or another thing that is done is also to put a bigger computer.

00:38:26.700 --> 00:38:30.860
So you put a more powerful computer in the robot and that's it.

00:38:30.860 --> 00:38:39.400
If you cannot do that, also you can run in an external computer because ROS is how it is built.

00:38:39.960 --> 00:38:45.460
It doesn't care in which computer you are running the different programs in ROS.

00:38:45.460 --> 00:38:49.220
And they can communicate and transfer information transparently.

00:38:49.220 --> 00:38:53.080
For them, it's like if they were in a single big computer.

00:38:53.080 --> 00:38:54.720
So that's another option.

00:38:54.720 --> 00:38:57.980
Like kind of a distributed computing environment type of thing.

00:38:57.980 --> 00:38:58.680
Okay.

00:38:58.680 --> 00:39:04.880
Is it common to have kind of microservice architecture where I've got a robot and it's doing stuff,

00:39:04.940 --> 00:39:11.420
rather than it's making calls over the network to get more information or resolve information, things like this?

00:39:11.420 --> 00:39:13.160
It's actually for products.

00:39:13.160 --> 00:39:16.540
For robotics products, it's very, very common.

00:39:16.940 --> 00:39:20.920
Because they want to ship into the hardware as less as possible.

00:39:20.920 --> 00:39:28.400
And also they want to make you kind of trapped into their system.

00:39:28.400 --> 00:39:29.500
So you need that.

00:39:29.500 --> 00:39:32.380
But there is a very famous case.

00:39:32.380 --> 00:39:36.640
Pay the $4.99 for the continuous service monthly, right?

00:39:36.640 --> 00:39:38.200
Or whatever the price is.

00:39:38.200 --> 00:39:38.720
Exactly.

00:39:38.720 --> 00:39:43.460
There's a very famous case that just died a couple of months ago.

00:39:43.460 --> 00:39:45.200
It's called Cosmo.

00:39:45.200 --> 00:39:46.380
Cosmo Robot.

00:39:46.380 --> 00:39:47.660
You know that robot?

00:39:47.660 --> 00:39:48.660
No, I don't know this robot.

00:39:48.660 --> 00:39:50.860
A small robot that you can have on your desktop.

00:39:50.860 --> 00:39:52.360
It was amazing.

00:39:52.440 --> 00:39:58.140
It looked like, you know, this movie about the robot of Disney.

00:39:58.140 --> 00:39:58.760
Yes.

00:39:58.760 --> 00:40:01.680
The kind of big, fluffy, rounded white.

00:40:01.680 --> 00:40:01.960
Yeah.

00:40:01.960 --> 00:40:02.280
Yeah.

00:40:02.280 --> 00:40:02.820
Yeah.

00:40:02.820 --> 00:40:03.060
I know.

00:40:03.060 --> 00:40:03.580
Oh, man.

00:40:03.580 --> 00:40:04.140
I forgot to.

00:40:04.140 --> 00:40:05.380
That was a great show.

00:40:05.380 --> 00:40:07.680
Hero 5 or something like this?

00:40:07.680 --> 00:40:08.140
No, no.

00:40:08.140 --> 00:40:09.020
No, I'm talking about that.

00:40:09.020 --> 00:40:13.120
About this other movie that is a robot that stays on the planet.

00:40:13.120 --> 00:40:14.500
It's cleaning all the mess.

00:40:14.500 --> 00:40:15.300
Oh, yeah.

00:40:15.300 --> 00:40:15.820
WALL-E.

00:40:15.820 --> 00:40:16.620
WALL-E.

00:40:16.620 --> 00:40:17.080
Exactly.

00:40:17.080 --> 00:40:17.520
WALL-E.

00:40:17.520 --> 00:40:18.080
Exactly.

00:40:18.080 --> 00:40:19.440
Also a great movie.

00:40:19.440 --> 00:40:21.060
That one's a sad movie, actually.

00:40:21.060 --> 00:40:21.600
Yeah.

00:40:21.600 --> 00:40:22.040
Yeah.

00:40:22.040 --> 00:40:22.560
Anyway, sorry.

00:40:22.560 --> 00:40:22.900
Go ahead.

00:40:22.900 --> 00:40:24.120
So it looked like WALL-E?

00:40:24.120 --> 00:40:25.400
No, like the other one.

00:40:25.400 --> 00:40:26.200
The character.

00:40:26.200 --> 00:40:28.040
The female robot.

00:40:28.040 --> 00:40:28.760
White.

00:40:28.760 --> 00:40:37.880
So the face of this Cosmo, it was engineered by using graphic designers and developers of cartoons in this sense.

00:40:37.880 --> 00:40:40.520
So it was a super cool robot.

00:40:40.520 --> 00:40:41.040
It was.

00:40:41.040 --> 00:40:46.520
But, unfortunately, it was not a success in business terms.

00:40:46.520 --> 00:40:48.640
So they have to close the company.

00:40:48.640 --> 00:40:51.720
And now this robot is useless.

00:40:51.720 --> 00:40:58.600
So you cannot even use it because it requires the network in order to understand your vocal commands.

00:40:58.600 --> 00:40:59.660
Oh, I see.

00:40:59.660 --> 00:41:00.300
That's a problem.

00:41:00.500 --> 00:41:00.940
Yeah.

00:41:00.940 --> 00:41:04.440
Because once the company goes out, then the services die.

00:41:04.440 --> 00:41:08.460
And if they lean on the services too much, then it becomes a useless chunk.

00:41:08.460 --> 00:41:09.020
Exactly.

00:41:09.020 --> 00:41:09.580
Yeah.

00:41:09.580 --> 00:41:10.220
Yeah.

00:41:10.220 --> 00:41:10.720
That's a bummer.

00:41:10.840 --> 00:41:14.360
There is a famous, even more famous example that is called Jibo.

00:41:14.360 --> 00:41:15.780
Do you know Jibo?

00:41:15.780 --> 00:41:17.040
Did you hear about Jibo?

00:41:17.040 --> 00:41:18.020
No.

00:41:18.020 --> 00:41:21.560
That was first site of the Time magazine.

00:41:22.380 --> 00:41:24.420
This robot was there.

00:41:24.420 --> 00:41:27.540
And it was closed last year, the company.

00:41:27.540 --> 00:41:30.560
And then it was also the same problem.

00:41:30.560 --> 00:41:34.560
It was the same problem because it was not successful in terms of business.

00:41:34.560 --> 00:41:36.660
And so they couldn't maintain.

00:41:36.660 --> 00:41:41.940
And so everybody that bought this, they can just throw it out because it's useless now.

00:41:42.080 --> 00:41:42.640
Oh, no.

00:41:42.640 --> 00:41:43.860
That's such a bummer.

00:41:43.860 --> 00:41:44.520
Yeah.

00:41:44.520 --> 00:41:45.700
I've had that happen.

00:41:45.700 --> 00:41:47.400
I had a Pebble smartwatch.

00:41:47.400 --> 00:41:47.980
It was beautiful.

00:41:47.980 --> 00:41:49.040
But they went out of business.

00:41:49.040 --> 00:41:51.720
And, you know, like almost everything about it.

00:41:51.720 --> 00:41:55.020
It's still kind of cool, but it's way less than it was because the services are gone.

00:41:55.020 --> 00:42:03.100
So we're talking about putting some sort of computation unit on these little robots.

00:42:03.100 --> 00:42:08.940
Maybe talk about what those computers look like, what those operating systems look like.

00:42:08.940 --> 00:42:12.660
Because we could have a very small little robot, you know, the size of your hand.

00:42:12.660 --> 00:42:16.640
And maybe it has MicroPython on a $5 chip in it.

00:42:16.640 --> 00:42:22.540
Maybe we have a robot that's like a vacuum and it's got, I don't know, a Raspberry Pi running Linux.

00:42:22.540 --> 00:42:32.540
Or maybe we have a car that's got, you know, a core i9 CPU that's like, you know, the top of the line Intel CPU or something like.

00:42:32.800 --> 00:42:39.100
What's the spectrum of computing you put into these robots and operating systems and all that?

00:42:39.100 --> 00:42:40.520
Yeah, exactly what you mentioned.

00:42:40.520 --> 00:42:45.620
So we can do a small robot that only require maybe even an Arduino.

00:42:45.620 --> 00:42:48.820
Only with Arduino, you can make it work.

00:42:48.820 --> 00:42:51.920
You can make the robot perform the task that you wanted.

00:42:51.920 --> 00:42:55.500
Then you have a Raspberry Pi and the like.

00:42:55.860 --> 00:43:00.740
Then you have also the computer, the typical PC computer.

00:43:00.740 --> 00:43:04.740
For example, there was one very famous that is called the Intel NUC.

00:43:04.740 --> 00:43:08.940
That is a square, like a cube is small like this.

00:43:08.940 --> 00:43:17.920
Now the ones that are getting a lot of traction and a very big success are the Jetson from NVIDIA.

00:43:18.180 --> 00:43:25.960
Because they include some GPUs and then they allow you to do some deep learning inside the boards already there.

00:43:25.960 --> 00:43:26.500
Right.

00:43:26.500 --> 00:43:31.060
So in case that you want to use the data from a point cloud device.

00:43:31.060 --> 00:43:34.400
A point cloud is, for example, a Kinect device.

00:43:34.400 --> 00:43:37.820
So you can recognize objects or people.

00:43:37.820 --> 00:43:39.280
I hadn't heard of this Jetson thing.

00:43:39.280 --> 00:43:40.160
This is really cool.

00:43:40.160 --> 00:43:40.900
And it's...

00:43:40.900 --> 00:43:41.120
Yeah.

00:43:41.120 --> 00:43:42.400
NVIDIA Jetson.

00:43:42.400 --> 00:43:45.340
They're very small and they look like they don't even have fans.

00:43:45.340 --> 00:43:46.980
They just have really big heat sinks.

00:43:46.980 --> 00:43:47.920
I don't know.

00:43:47.920 --> 00:43:48.300
Yes.

00:43:48.300 --> 00:43:48.980
How big...

00:43:48.980 --> 00:43:49.520
What is it?

00:43:49.520 --> 00:43:51.520
Like 10 centimeters by 10 centimeters?

00:43:51.520 --> 00:43:52.360
Something like that?

00:43:52.360 --> 00:43:52.860
Maybe?

00:43:52.860 --> 00:43:53.640
Yeah, yeah, yeah.

00:43:53.640 --> 00:43:54.840
So it's very, very small.

00:43:54.840 --> 00:43:55.080
Yeah.

00:43:55.080 --> 00:43:55.300
Yeah.

00:43:55.300 --> 00:43:56.780
A hundred dollars for Jetson Nano.

00:43:56.780 --> 00:43:57.700
That's pretty awesome.

00:43:57.700 --> 00:43:58.260
Yes.

00:43:58.260 --> 00:44:00.520
And the power that they have is very cool.

00:44:00.520 --> 00:44:02.080
There is the Jetson Nano.

00:44:02.080 --> 00:44:03.640
And then there is another version.

00:44:03.640 --> 00:44:05.340
It's the Jetson whatever.

00:44:05.340 --> 00:44:07.540
And then there is another one that is more powerful.

00:44:07.540 --> 00:44:09.120
That is called the Xavier.

00:44:09.120 --> 00:44:09.600
Yeah.

00:44:09.600 --> 00:44:10.040
Xavier.

00:44:10.040 --> 00:44:11.120
And...

00:44:11.120 --> 00:44:12.360
And it's even more powerful.

00:44:12.360 --> 00:44:13.280
These are pretty...

00:44:13.280 --> 00:44:14.460
These are pretty intense.

00:44:14.540 --> 00:44:15.680
They've got some really cool ones.

00:44:15.680 --> 00:44:16.080
Yeah.

00:44:16.080 --> 00:44:20.120
And some of you have the GPU looking things.

00:44:20.120 --> 00:44:20.380
Yes.

00:44:20.380 --> 00:44:22.180
So that's another thing.

00:44:22.180 --> 00:44:24.780
Maybe if you need more power, if you have...

00:44:24.780 --> 00:44:26.000
Maybe you want to...

00:44:26.000 --> 00:44:27.880
You talked about some of the machine learning stuff.

00:44:27.880 --> 00:44:30.560
And of course, your background is in this area as well.

00:44:30.560 --> 00:44:34.580
GPUs probably play an important role for certain types of robots, I would guess.

00:44:34.580 --> 00:44:35.380
Yes, exactly.

00:44:35.880 --> 00:44:39.660
Especially, for example, it makes sense in the image recognition.

00:44:39.660 --> 00:44:48.740
Whenever you need your robot to recognize where it is, the location or the people or the objects by using a camera, then that's one of the cases.

00:44:48.740 --> 00:44:50.400
Also in the speech recognition.

00:44:50.400 --> 00:44:51.560
Also.

00:44:51.560 --> 00:45:02.900
And then also, they use a lot the GPU for training, for launching reinforcement learning algorithms that make the robot learn.

00:45:03.120 --> 00:45:05.400
But those usually are used in the simulation.

00:45:05.400 --> 00:45:06.120
Okay.

00:45:06.120 --> 00:45:10.200
Because in the real robot, it's very difficult to train the robot.

00:45:10.200 --> 00:45:17.480
Because in order to train a robot, you need to put it into certain conditions, then make them take some actions.

00:45:17.480 --> 00:45:19.620
And when they fail, you say, hey, wrong.

00:45:19.620 --> 00:45:21.760
And then you have to put it back.

00:45:21.760 --> 00:45:22.620
Yes.

00:45:22.620 --> 00:45:23.100
Yes.

00:45:23.100 --> 00:45:25.340
It's like teaching a kid or something.

00:45:25.340 --> 00:45:25.640
Yeah.

00:45:25.640 --> 00:45:26.540
Teaching a child.

00:45:26.540 --> 00:45:26.880
Yeah.

00:45:26.880 --> 00:45:27.260
I see.

00:45:27.260 --> 00:45:27.780
A child.

00:45:27.780 --> 00:45:28.160
Exactly.

00:45:28.380 --> 00:45:30.060
And then you say, yeah, very good.

00:45:30.060 --> 00:45:30.480
Very good.

00:45:30.480 --> 00:45:31.820
And then the robot gets excited.

00:45:31.820 --> 00:45:32.440
Oh, yeah.

00:45:32.440 --> 00:45:32.960
Super cool.

00:45:32.960 --> 00:45:37.100
And then you have to have somebody to put it back to the original position.

00:45:37.100 --> 00:45:40.240
And also, all the environment get started.

00:45:40.240 --> 00:45:43.920
So, that's not a good approach to do it with a real robot.

00:45:43.920 --> 00:45:45.680
And usually, this is done in the simulator.

00:45:45.680 --> 00:45:51.820
And once you are in the realm of the simulator, you have the cloud computers that they have whatever you want.

00:45:52.160 --> 00:46:00.140
Related to the operating systems that we use there, usually, we install Linux, Ubuntu specifically.

00:46:00.140 --> 00:46:03.600
And then on top of that is where we install ROS.

00:46:03.600 --> 00:46:10.140
Because ROS, even if it stands for robot operating system, it's not an operating system.

00:46:10.140 --> 00:46:14.700
It's a framework for programming inside an Ubuntu system.

00:46:14.700 --> 00:46:15.100
I see.

00:46:15.100 --> 00:46:21.180
So, maybe it's an operating system for the robot, but it needs its own computational operating system, which is Linux.

00:46:21.180 --> 00:46:21.440
Yeah?

00:46:22.040 --> 00:46:22.640
Exactly.

00:46:22.640 --> 00:46:23.360
That's it.

00:46:23.360 --> 00:46:23.780
Okay.

00:46:23.780 --> 00:46:24.160
That's it.

00:46:24.160 --> 00:46:30.400
And now, Microsoft has started to create a version of ROS for Windows also.

00:46:30.400 --> 00:46:34.060
So, you can install Windows instead of Ubuntu.

00:46:34.060 --> 00:46:36.060
But it's still not finished.

00:46:36.060 --> 00:46:37.600
So, it's still very early stage.

00:46:37.600 --> 00:46:37.940
Yeah.

00:46:37.940 --> 00:46:40.580
That'll probably bring in a lot more developers as well, though.

00:46:40.580 --> 00:46:45.500
You know, Windows is still a big platform that people develop on in a lot of places.

00:46:45.500 --> 00:46:47.700
So, having ROS there sounds like a good idea.

00:46:47.700 --> 00:46:48.100
Yeah.

00:46:48.100 --> 00:46:50.480
They are putting a lot of effort into that.

00:46:50.480 --> 00:46:50.780
Cool.

00:46:50.780 --> 00:46:51.060
Yes.

00:46:51.060 --> 00:46:57.740
I see robotics as an interesting way to bring young people into programming as well, right?

00:46:57.740 --> 00:47:01.220
Like, as you get older, you're willing to just plow through the things.

00:47:01.220 --> 00:47:01.500
Okay.

00:47:01.500 --> 00:47:02.640
I have to learn the for loop.

00:47:02.640 --> 00:47:03.740
And then I learn the class.

00:47:03.740 --> 00:47:04.600
And I learn the functions.

00:47:04.600 --> 00:47:06.140
And eventually, I'll do something interesting.

00:47:06.140 --> 00:47:07.220
But kids, they don't care.

00:47:07.220 --> 00:47:08.060
They're like, this is boring.

00:47:08.060 --> 00:47:09.480
I'm out of here after five minutes, right?

00:47:09.480 --> 00:47:11.040
But if they could see a robot.

00:47:11.040 --> 00:47:14.400
You know, my daughter is in sixth grade, my youngest one.

00:47:14.400 --> 00:47:17.900
And she had one of her electives in the morning is robotics.

00:47:18.080 --> 00:47:19.620
Actually, she just started this week.

00:47:19.620 --> 00:47:20.700
I'm not really sure what they're doing.

00:47:20.700 --> 00:47:24.420
But, you know, that's, it's really, I think, a good way to teach kids.

00:47:24.420 --> 00:47:27.440
And I think that might be the Microsoft angle as well, to some degree.

00:47:27.440 --> 00:47:27.820
Okay.

00:47:27.880 --> 00:47:29.100
That's strange for me.

00:47:29.100 --> 00:47:35.600
From my point of view of a roboticist, for me, I mean, it's very clear to use Linux.

00:47:35.600 --> 00:47:38.560
I mean, I would never go to Windows to program robots.

00:47:38.560 --> 00:47:40.160
For me, it's like, what?

00:47:40.160 --> 00:47:40.620
Yeah, of course.

00:47:40.620 --> 00:47:48.240
I mean, all this big thing that you don't need, that you don't need, because you only need to have the terminal and the commands there.

00:47:48.240 --> 00:47:50.120
And then everything works.

00:47:50.120 --> 00:47:52.360
You have full control of everything.

00:47:52.360 --> 00:47:58.780
Well, I just, I think there's these environments where, you know, kids are already sitting in front of a Windows PC, and they're going to use it.

00:47:58.780 --> 00:48:02.980
Or, you know, they're also, Microsoft's also working on, like, Edge IoT computing stuff.

00:48:02.980 --> 00:48:05.020
And I think it kind of fits into that realm.

00:48:05.020 --> 00:48:10.660
And I think that even they have some embedded Linux stuff that they're doing over there, which is kind of ironic and funny.

00:48:10.660 --> 00:48:11.100
Okay.

00:48:11.100 --> 00:48:12.180
I didn't know about that.

00:48:12.180 --> 00:48:12.980
Can't remember exactly.

00:48:12.980 --> 00:48:16.280
I think, I can't remember what, it's like, something sphere.

00:48:16.280 --> 00:48:19.200
It's at the edge of my knowledge.

00:48:19.200 --> 00:48:20.280
I should stop talking about it.

00:48:20.300 --> 00:48:23.680
But I do believe they had some embedded Linux somewhere.

00:48:23.680 --> 00:48:26.140
If I find it, I'll put a link in the show notes afterwards.

00:48:26.140 --> 00:48:27.580
Oh, you mean Red Hat?

00:48:27.580 --> 00:48:28.860
No, no, not Red Hat.

00:48:28.860 --> 00:48:30.180
There's something from...

00:48:30.180 --> 00:48:30.540
Red Hat?

00:48:30.540 --> 00:48:33.600
They bought the Red Hat version, isn't it?

00:48:33.600 --> 00:48:34.480
Didn't they?

00:48:34.480 --> 00:48:36.060
It's called Azure Sphere.

00:48:36.060 --> 00:48:36.960
That's what it is.

00:48:36.960 --> 00:48:37.600
Yeah.

00:48:37.600 --> 00:48:38.920
So it's Azure Sphere.

00:48:39.440 --> 00:48:42.820
And it's basically a hardened...

00:48:42.820 --> 00:48:44.540
I think it's Linux.

00:48:44.540 --> 00:48:45.280
Let me see.

00:48:45.280 --> 00:48:46.220
I'm not sure.

00:48:46.220 --> 00:48:55.860
But it's a hardened IoT device that basically has automatic over-the-air updates and a whole bunch of various security stuff and so on.

00:48:55.860 --> 00:48:57.960
But yeah, I got to look into it to make sure that it's Linux.

00:48:57.960 --> 00:48:58.560
But I think so.

00:48:58.680 --> 00:49:00.920
Anyway, the world is getting confusing, right?

00:49:00.920 --> 00:49:02.200
Like, it didn't used to look like that.

00:49:02.200 --> 00:49:04.200
Yes.

00:49:04.200 --> 00:49:06.500
It's getting confused.

00:49:06.500 --> 00:49:10.780
And related to what you mentioned about for the kids, yes, definitely.

00:49:10.780 --> 00:49:12.600
The more graphical, the better.

00:49:12.600 --> 00:49:14.600
So there is this...

00:49:14.600 --> 00:49:16.600
That is called...

00:49:16.600 --> 00:49:20.160
With programming for robots using blocks.

00:49:20.160 --> 00:49:21.600
That is called Blockly.

00:49:21.600 --> 00:49:22.840
Yeah.

00:49:22.840 --> 00:49:23.080
Okay.

00:49:23.080 --> 00:49:24.400
Blockly is one of them.

00:49:24.400 --> 00:49:28.020
But this is based on another one made by MIT.

00:49:28.020 --> 00:49:29.600
Basically, it's programming robots...

00:49:29.600 --> 00:49:30.740
Scratch, maybe?

00:49:30.740 --> 00:49:31.440
Blocks.

00:49:31.440 --> 00:49:32.440
Scratch.

00:49:32.440 --> 00:49:32.820
Scratch.

00:49:32.820 --> 00:49:33.540
Yeah, that's it.

00:49:33.540 --> 00:49:34.120
Scratch.

00:49:34.120 --> 00:49:34.640
Okay.

00:49:34.640 --> 00:49:35.200
Okay.

00:49:35.200 --> 00:49:39.360
So there exists also a version of Scratch in ROS.

00:49:39.360 --> 00:49:41.320
So actually, you can...

00:49:41.320 --> 00:49:42.540
If you are interested, Andrin.

00:49:42.540 --> 00:49:43.240
Oh, okay.

00:49:43.240 --> 00:49:45.280
So you could get started really early.

00:49:45.280 --> 00:49:45.760
I see.

00:49:45.760 --> 00:49:46.320
Okay.

00:49:46.320 --> 00:49:47.140
That's super cool.

00:49:47.140 --> 00:49:47.760
Exactly.

00:49:47.760 --> 00:49:56.160
So for that, in that case, for kids and for people with lower level of knowledge in terms

00:49:56.160 --> 00:49:57.640
of mathematics, physics...

00:49:57.640 --> 00:50:00.020
Maybe they're not typing really well yet or something like that.

00:50:00.020 --> 00:50:00.200
Yeah.

00:50:00.200 --> 00:50:01.440
Or programming a skill.

00:50:01.440 --> 00:50:02.020
Yeah, exactly.

00:50:02.020 --> 00:50:04.100
So that makes sense.

00:50:04.100 --> 00:50:04.640
Yeah, very cool.

00:50:04.640 --> 00:50:04.840
All right.

00:50:04.840 --> 00:50:06.320
Just to wrap up this Linux thing.

00:50:06.320 --> 00:50:11.280
Azure Sphere is a Linux-based operating system created by Microsoft for the Internet of Things

00:50:11.280 --> 00:50:11.780
applications.

00:50:11.780 --> 00:50:15.700
It's the first time Microsoft has publicly released an operating system running the Linux

00:50:15.700 --> 00:50:15.980
kernel.

00:50:15.980 --> 00:50:17.220
All right.

00:50:17.220 --> 00:50:18.900
So very interesting.

00:50:18.900 --> 00:50:21.040
The world is confusing and very mixed.

00:50:21.040 --> 00:50:21.260
Yeah.

00:50:21.260 --> 00:50:22.240
It's a fun time.

00:50:22.240 --> 00:50:22.740
All right.

00:50:22.740 --> 00:50:29.640
So let's wrap up this conversation, Ricardo, by talking about how people can learn ROS and

00:50:29.640 --> 00:50:31.040
programming robots with Python.

00:50:31.040 --> 00:50:34.300
We kicked it off by saying it's a good time to be a robot developer.

00:50:34.300 --> 00:50:36.060
Python's a good language to do it.

00:50:36.060 --> 00:50:37.360
What do people want to get into it?

00:50:37.360 --> 00:50:37.800
What do they do?

00:50:37.800 --> 00:50:40.300
In that case, there are several ways of learning.

00:50:40.300 --> 00:50:41.420
And then that depends.

00:50:41.420 --> 00:50:42.560
It's always the same.

00:50:42.560 --> 00:50:46.160
You want to invest more time or more money.

00:50:46.160 --> 00:50:47.820
So that's the situation.

00:50:47.820 --> 00:50:51.300
So let me give you the options that I usually provide.

00:50:51.300 --> 00:50:55.180
The one is going to the official wiki of ROS.

00:50:55.440 --> 00:51:01.700
So ROS is a present being created and developed by now is a company.

00:51:01.700 --> 00:51:04.260
It's called Open Robotics.

00:51:04.260 --> 00:51:06.580
And they release it for free.

00:51:06.580 --> 00:51:07.480
It's open source.

00:51:07.480 --> 00:51:09.020
You can do whatever you want with it.

00:51:09.220 --> 00:51:14.720
And then at the same time, they are releasing a wiki with some tutorials with a lot of information

00:51:14.720 --> 00:51:17.320
there about how to learn ROS.

00:51:17.320 --> 00:51:20.140
So that's the official wiki of ROS.

00:51:20.140 --> 00:51:21.620
That would be the first place.

00:51:21.620 --> 00:51:23.460
It's a little bit dry.

00:51:23.460 --> 00:51:26.040
As a first step, it's a little bit dry.

00:51:26.040 --> 00:51:28.160
But I learned by using this.

00:51:28.160 --> 00:51:32.160
So I learned using this because there was nothing else at that time.

00:51:32.480 --> 00:51:36.800
Then the other option, yeah, so we begin very early.

00:51:36.800 --> 00:51:39.880
Coming early, you got to just go through the docs and figure it out.

00:51:39.880 --> 00:51:44.660
But I have to say that for the time, those documents were amazing.

00:51:44.660 --> 00:51:50.300
The documentation, they put a lot of effort into the documentation because they knew that

00:51:50.300 --> 00:51:52.760
that was a very good point to attract people.

00:51:52.760 --> 00:51:56.560
So at that time, that was like, wow, that's amazing.

00:51:56.560 --> 00:51:58.480
I mean, it's dry, but it's amazing.

00:51:58.860 --> 00:52:05.000
Now, some years afterwards, so it's a little bit more complicated.

00:52:05.000 --> 00:52:06.400
But you have other options.

00:52:06.400 --> 00:52:07.380
For example, books.

00:52:07.380 --> 00:52:08.400
There are a lot of books.

00:52:08.400 --> 00:52:11.500
In Amazon, if you go, you will see a lot of books.

00:52:11.500 --> 00:52:17.140
We have our own series of books that teach the basics of ROS or how to use it for navigation.

00:52:17.140 --> 00:52:20.340
But there are many, many other books already available.

00:52:20.340 --> 00:52:21.300
Use the books.

00:52:21.300 --> 00:52:22.720
They're very nice.

00:52:22.720 --> 00:52:26.820
Then another way is to use the YouTube videos.

00:52:26.820 --> 00:52:29.800
So in YouTube, you will find a lot of videos.

00:52:29.800 --> 00:52:30.860
A lot of videos.

00:52:30.860 --> 00:52:35.480
We also provide these videos in our channel of our company.

00:52:35.480 --> 00:52:44.720
And actually, we do a ROS live class on YouTube every Tuesday at 6 CET.

00:52:44.720 --> 00:52:45.340
Oh, cool.

00:52:45.340 --> 00:52:47.540
Yeah, you just cover some.

00:52:47.540 --> 00:52:48.520
It's like a live stream.

00:52:48.520 --> 00:52:50.220
You just cover something different each time.

00:52:50.220 --> 00:52:51.540
And people can just drop in.

00:52:51.700 --> 00:52:53.600
Yes, it's a different subject.

00:52:53.600 --> 00:52:56.980
It's a different particular, very concrete problem.

00:52:56.980 --> 00:52:58.620
Something you can do in an hour, right?

00:52:58.620 --> 00:52:59.000
Exactly.

00:52:59.000 --> 00:52:59.840
What did you do last time?

00:52:59.840 --> 00:53:00.120
Yeah.

00:53:00.120 --> 00:53:06.940
So what is interesting is that the participants that connect, they are programming at the same

00:53:06.940 --> 00:53:08.260
time with me.

00:53:08.380 --> 00:53:15.500
So I provide to them on this live class with a ROSJECT that they get directly into the

00:53:15.500 --> 00:53:15.760
class.

00:53:15.760 --> 00:53:20.660
And then they start automatically into the browser with all the environment, the simulations

00:53:20.660 --> 00:53:21.680
and the instructions.

00:53:21.680 --> 00:53:24.080
So we are doing together.

00:53:24.080 --> 00:53:25.400
So I'm explaining, do this.

00:53:25.400 --> 00:53:27.120
You see here, do that.

00:53:27.120 --> 00:53:27.480
Do that.

00:53:27.520 --> 00:53:31.560
And then the guys, they are doing and then asking questions and so on.

00:53:31.560 --> 00:53:40.640
So and then last time, what we did was about making several robots create a map of an environment.

00:53:40.640 --> 00:53:46.140
So several robots, not only one robot, but several, they were moving around and creating the map.

00:53:46.140 --> 00:53:47.780
That's a concept in robotics.

00:53:47.780 --> 00:53:48.720
Yeah, that's super cool.

00:53:48.840 --> 00:53:53.440
Well, that is another of the options using the YouTube videos.

00:53:53.440 --> 00:53:56.660
And I'm telling you about those.

00:53:56.660 --> 00:53:59.720
Of course, I would say, I will tell you that you go to our academy.

00:53:59.720 --> 00:54:03.360
It's the Robot Ignite Academy, but that's a paying one.

00:54:03.360 --> 00:54:06.100
So the previous one, the official wiki is for free.

00:54:06.100 --> 00:54:08.100
The books is the price of the books.

00:54:08.100 --> 00:54:09.720
The YouTube videos are for free.

00:54:09.720 --> 00:54:11.280
So everything is free.

00:54:11.280 --> 00:54:13.800
You've got to watch an ad maybe, but other than that, it's free.

00:54:13.800 --> 00:54:15.220
Oh, yeah.

00:54:15.220 --> 00:54:15.860
Because of YouTube, right?

00:54:15.860 --> 00:54:16.300
Right, exactly.

00:54:16.300 --> 00:54:17.160
That's just YouTube itself.

00:54:17.160 --> 00:54:18.640
Yeah, yeah, exactly.

00:54:18.640 --> 00:54:19.440
That is right.

00:54:19.440 --> 00:54:19.980
That is right.

00:54:19.980 --> 00:54:21.140
Yeah, then you have your academy.

00:54:21.140 --> 00:54:25.580
Yeah, the academy is online and then it's not based on videos.

00:54:25.580 --> 00:54:27.000
It's based on practice.

00:54:27.000 --> 00:54:36.220
So you have to practice and do the things because whatever you read there, if you don't practice, it's not useful at all.

00:54:36.220 --> 00:54:41.200
And especially in RAWs, you need to see when you do this, what the robot does.

00:54:41.200 --> 00:54:46.840
And this is the system that we have implemented in our platform, in our academy.

00:54:47.240 --> 00:54:49.520
It's a system that where you get the instruction.

00:54:49.520 --> 00:54:53.120
So now you are learning this, then very quickly do this exercise.

00:54:53.120 --> 00:54:55.220
So you practice and you do this.

00:54:55.220 --> 00:54:59.300
So that's more practice focus, but it has a cost.

00:54:59.300 --> 00:55:00.660
It has a cost.

00:55:01.020 --> 00:55:06.300
And I think that those are the main options that they have for this.

00:55:06.300 --> 00:55:08.020
Of course, you have conferences.

00:55:08.020 --> 00:55:08.940
Sure.

00:55:08.940 --> 00:55:09.220
Yeah.

00:55:09.220 --> 00:55:09.900
Around the world.

00:55:09.900 --> 00:55:10.680
Summer schools.

00:55:10.680 --> 00:55:11.000
Yeah.

00:55:11.000 --> 00:55:11.680
Podcasts.

00:55:11.680 --> 00:55:15.960
Now, that's more awareness, I would say, not total straight on learning.

00:55:15.960 --> 00:55:22.580
It sounds like you can use the simulators, either your online one or the Gazebo one or something like that.

00:55:22.580 --> 00:55:24.660
And you don't necessarily have to start with hardware.

00:55:24.660 --> 00:55:25.080
Is that right?

00:55:25.080 --> 00:55:25.560
Exactly.

00:55:25.560 --> 00:55:26.420
That is right.

00:55:26.680 --> 00:55:29.200
Actually, our online simulator is Gazebo.

00:55:29.200 --> 00:55:32.800
So we have created a version of Gazebo.

00:55:32.800 --> 00:55:35.400
In the inside, in our server, is Gazebo running?

00:55:35.400 --> 00:55:39.600
And then we have a front end in web development for that.

00:55:39.680 --> 00:55:42.940
So it's exactly the same thing that you will run in your own computer.

00:55:42.940 --> 00:55:47.120
And then that makes you be separated from the hardware.

00:55:47.120 --> 00:55:47.980
That's a great way to learn.

00:55:47.980 --> 00:55:48.200
Okay.

00:55:48.200 --> 00:55:52.300
A lot of options, it sounds like, and a lot of interesting possibilities out there.

00:55:52.300 --> 00:55:53.040
So cool.

00:55:53.040 --> 00:55:54.160
Well, thanks for sharing that.

00:55:54.160 --> 00:55:57.000
Now, before you get out of here, I have to ask you the final two questions.

00:55:57.000 --> 00:56:01.060
If you're going to write some robotics code in Python, what editors do you use?

00:56:01.060 --> 00:56:04.000
What I used to use before it was Sublime.

00:56:04.000 --> 00:56:05.820
Sublime was very good.

00:56:05.820 --> 00:56:08.640
Also, I used Qt Creator.

00:56:08.880 --> 00:56:12.760
But Qt Creator was more for C++.

00:56:12.760 --> 00:56:16.880
And then I was doing kind of a hack for Python.

00:56:16.880 --> 00:56:18.760
But then Sublime was the best.

00:56:18.760 --> 00:56:25.700
And now at present, I'm using a web editor IDE, which is called Taya or Taya.

00:56:25.700 --> 00:56:26.880
I don't know how to pronounce it.

00:56:26.880 --> 00:56:27.740
Yeah, something like that.

00:56:27.740 --> 00:56:29.180
And that's the one that I'm using.

00:56:29.180 --> 00:56:29.960
Very, very cool.

00:56:29.960 --> 00:56:31.260
It has also complete.

00:56:31.260 --> 00:56:33.420
You can jump into the functions.

00:56:33.420 --> 00:56:35.420
You can see the documentation.

00:56:35.420 --> 00:56:37.260
And so it's very cool.

00:56:37.260 --> 00:56:38.040
Oh, very interesting.

00:56:38.180 --> 00:56:38.360
All right.

00:56:38.360 --> 00:56:40.860
I'll put that in the show notes so people can check that out.

00:56:40.860 --> 00:56:41.620
That's interesting.

00:56:41.620 --> 00:56:42.680
It's open source.

00:56:42.680 --> 00:56:43.840
It's open source.

00:56:43.840 --> 00:56:50.220
You can download, install in your computer or in your web server and program into a server.

00:56:50.220 --> 00:56:51.020
It's very cool.

00:56:51.020 --> 00:56:51.300
Nice.

00:56:51.620 --> 00:56:53.580
And then notable PyPI packages.

00:56:53.580 --> 00:56:57.680
You know, what's the important stuff that people should know in this world?

00:56:57.680 --> 00:57:02.400
I mentioned already, the open AI reinforcement learning algorithms.

00:57:02.400 --> 00:57:03.780
That's very cool.

00:57:03.780 --> 00:57:16.340
The gym system is a gym system for learning about reinforcement learning, not only for robotics, but for making, for example, programs play Atari games.

00:57:16.740 --> 00:57:17.240
That's cool.

00:57:17.240 --> 00:57:18.740
Use games as their world.

00:57:18.740 --> 00:57:19.320
Exactly.

00:57:19.320 --> 00:57:19.660
Exactly.

00:57:19.660 --> 00:57:21.900
And then they learn to play those games.

00:57:21.900 --> 00:57:23.660
The Pac-Man, the Tetris.

00:57:24.280 --> 00:57:27.440
So that's OpenAI gym.

00:57:27.440 --> 00:57:28.420
Okay.

00:57:28.420 --> 00:57:29.120
OpenAI gym.

00:57:29.120 --> 00:57:29.180
Nice.

00:57:29.180 --> 00:57:33.840
And then another one that I like very much is Scikit.

00:57:33.840 --> 00:57:46.600
Scikit is a set of Python libraries for many, many, many different techniques of artificial intelligence, not only for reinforcement learning, but many others.

00:57:46.600 --> 00:57:52.360
And supervised learning, supervised learning, and even genetic algorithm.

00:57:52.360 --> 00:58:05.800
So I will recommend you those and some other two that are very commonly used in robotics are OpenCV, that probably all the people already know, and TensorFlow, of course, for deep learning.

00:58:05.800 --> 00:58:06.180
Very cool.

00:58:06.180 --> 00:58:06.780
Those are great.

00:58:06.780 --> 00:58:08.380
OpenAI gym looks awesome.

00:58:08.380 --> 00:58:09.800
I put a link to that as well.

00:58:09.800 --> 00:58:11.620
That's a really nice option.

00:58:11.620 --> 00:58:12.800
All right.

00:58:12.800 --> 00:58:14.480
Ricardo, final call to action.

00:58:14.480 --> 00:58:16.760
People want to become robotics developers.

00:58:16.760 --> 00:58:17.460
What do you tell them?

00:58:17.460 --> 00:58:22.720
So we need you because, I mean, we need programmers that can program really, really well.

00:58:22.720 --> 00:58:26.540
And the robotics field is lacking this.

00:58:26.540 --> 00:58:30.640
Actually, there is a very cool video.

00:58:30.640 --> 00:58:32.520
It's a super cool video.

00:58:32.520 --> 00:58:40.240
It's a video where a person is showing how a robot is an ARM-based robot is a mobile manipulator.

00:58:40.240 --> 00:58:44.660
This robot is cleaning a room from all the mess.

00:58:44.660 --> 00:58:56.660
So you can see that the robot is grasping all the books, putting there on the place, then taking all the clothes from the ground, putting it into a basket, taking the basket, bringing it there.

00:58:56.660 --> 00:59:00.700
So you can see this speed plus 20 or something.

00:59:00.700 --> 00:59:00.960
Okay.

00:59:00.960 --> 00:59:01.480
Very slow.

00:59:01.480 --> 00:59:03.200
But it can do everything, everything.

00:59:03.200 --> 00:59:09.760
Then at the end, the guy of the video says, yeah, so I've shown you that this robot can do that.

00:59:09.760 --> 00:59:14.000
But the thing that I didn't show you is that I was controlling the robot.

00:59:14.240 --> 00:59:14.520
Ah.

00:59:14.520 --> 00:59:16.900
So it was teleoperating the robot.

00:59:16.900 --> 00:59:18.820
But what's the conclusion here?

00:59:18.820 --> 00:59:26.780
The conclusion here is that the hardware is already there in order to have a robot that can clean the mess of a room.

00:59:26.780 --> 00:59:30.960
The only important part that is missing is the software.

00:59:30.960 --> 00:59:34.520
It's the head of the robot that makes it.

00:59:34.520 --> 00:59:38.900
So that's why we need developers that can build those programs.

00:59:38.900 --> 00:59:39.300
Awesome.

00:59:39.460 --> 00:59:39.920
That's a problem.

00:59:39.920 --> 00:59:40.200
Yeah.

00:59:40.200 --> 00:59:43.860
Well, it sounds like a lot of interesting stuff to work on.

00:59:43.860 --> 00:59:47.320
Thanks for sharing the story and giving us a look inside the robotics world.

00:59:47.320 --> 00:59:48.080
My pleasure.

00:59:48.080 --> 00:59:48.440
Really.

00:59:48.440 --> 00:59:49.300
It was very fun.

00:59:49.300 --> 00:59:53.400
As I mentioned to you, that's the first time that somebody has interviewed me on a podcast.

00:59:53.400 --> 00:59:55.240
And it was an amazing experience.

00:59:55.240 --> 00:59:56.560
Thank you very much, Michael.

00:59:56.760 --> 00:59:57.160
You're welcome.

00:59:57.160 --> 00:59:57.940
Thanks for being on the show.

00:59:57.940 --> 01:00:01.720
This has been another episode of Talk Python To Me.

01:00:01.720 --> 01:00:04.540
Our guest on this episode was Ricardo Telles.

01:00:04.540 --> 01:00:07.200
And it's been brought to you by Linode and Tidelift.

01:00:07.200 --> 01:00:11.200
Linode is your go-to hosting for whatever you're building with Python.

01:00:11.200 --> 01:00:14.740
Get four months free at talkpython.fm/linode.

01:00:14.740 --> 01:00:16.620
That's L-I-N-O-D-E.

01:00:17.620 --> 01:00:22.580
If you run an open source project, Tidelift wants to help you get paid for keeping it going strong.

01:00:22.580 --> 01:00:28.200
Just visit talkpython.fm/Tidelift, search for your package, and get started today.

01:00:28.200 --> 01:00:30.540
Want to level up your Python?

01:00:30.540 --> 01:00:35.400
If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

01:00:35.400 --> 01:00:43.580
Or if you're looking for something more advanced, check out our new async course that digs into all the different types of async programming you can do in Python.

01:00:43.580 --> 01:00:48.220
And of course, if you're interested in more than one of these, be sure to check out our Everything Bundle.

01:00:48.220 --> 01:00:50.100
It's like a subscription that never expires.

01:00:50.100 --> 01:00:52.400
Be sure to subscribe to the show.

01:00:52.400 --> 01:00:54.820
Open your favorite podcatcher and search for Python.

01:00:54.820 --> 01:00:56.040
We should be right at the top.

01:00:56.040 --> 01:01:05.040
You can also find the iTunes feed at /itunes, the Google Play feed at /play, and the direct RSS feed at /rss on talkpython.fm.

01:01:05.040 --> 01:01:07.120
This is your host, Michael Kennedy.

01:01:07.120 --> 01:01:08.620
Thanks so much for listening.

01:01:08.620 --> 01:01:09.680
I really appreciate it.

01:01:09.680 --> 01:01:11.460
Now get out there and write some Python code.

01:01:11.460 --> 01:01:41.440
I'll see you next time.

