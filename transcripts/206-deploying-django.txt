00:00:00 Let's talk about running Django in production.

00:00:01 On this episode, you'll meet Michael Herman, who used to work on realpython.com,

00:00:05 and today is running testdriven.io.

00:00:07 We'll cover some of the trade-offs between a set of microservices and a monolith,

00:00:12 and a round-trip journey between them as well.

00:00:14 This is Talk Python To Me, episode 206, recorded February 19th, 2019.

00:00:19 Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:00:38 This is your host, Michael Kennedy.

00:00:40 Follow me on Twitter, where I'm @mkennedy.

00:00:42 Keep up with the show and listen to past episodes at talkpython.fm, and follow the show on Twitter via at Talk Python.

00:00:49 Michael, welcome to Talk Python.

00:00:51 Thank you.

00:00:51 It's great to have you here.

00:00:52 You've been doing so many cool things in the community and creating all these community projects

00:00:57 and really helping a lot of people learn Python and programming.

00:01:01 So I'm excited to have you on the show and dig into all of those things and more.

00:01:04 But before we do, before we get to them, let's start with your story.

00:01:07 How did you get into programming in Python?

00:01:09 Sure, yeah.

00:01:09 So I started programming back in, say, seventh grade.

00:01:12 I think that was like 96, 97.

00:01:14 And it was really to compete with my best friend, Derek, who started a very popular PlayStation website called PlayStation Fan.

00:01:22 Started out in GeoCities and then eventually moved to a domain name.

00:01:27 But yeah, just started off with HTML and CSS and a bit of JavaScript.

00:01:31 Wow.

00:01:31 That's really interesting.

00:01:32 GeoCities.

00:01:33 That's something I haven't thought about for a while.

00:01:36 But for younger people, like that was the WordPress of the day, the WordPress.com of the day or whatever.

00:01:41 You could just go and click a button and make your site.

00:01:43 They were often quite cheesy, right?

00:01:45 Yeah.

00:01:45 Yeah, definitely.

00:01:46 Yeah, I started with a PlayStation website as well, PlayStation Extreme, and then moved on to Final Fantasy.

00:01:54 Got really big into Final Fantasy VII and then started a Final Fantasy VIII enthusiast website,

00:02:00 the FIFOF8.org, and sort of paid the bills around that with ModChip advertising.

00:02:06 I don't know if you remember ModChips, but it basically allowed you to...

00:02:09 No, I don't know that at all.

00:02:10 No.

00:02:10 Yeah.

00:02:11 You solder them onto your PlayStation.

00:02:12 You can play or you could play games that were outside the U.S.

00:02:18 Oh, interesting.

00:02:18 So a little bit of a side loading, like get around the restrictions of the PlayStation there.

00:02:23 So did they get pretty popular or were they just sort of hobby things?

00:02:26 They did get pretty popular.

00:02:28 I had a lot of companies like SendMeGames.

00:02:30 They wanted me to review.

00:02:31 And I think sort of with the Final Fantasy VIII website, I had like an early bootleg copy of it.

00:02:38 Of course, it was in Japanese and being an RPG, couldn't really do much with it.

00:02:42 But yeah, I did get a lot of early copies of games and whatnot to review.

00:02:46 Wow, that's really cool.

00:02:46 So maybe if that was today, you would be doing a Twitch channel at that age or something like that.

00:02:51 But back then it was the website.

00:02:54 Yeah.

00:02:54 Yeah.

00:02:55 Yeah.

00:02:55 Interesting.

00:02:56 So there's not a whole lot of programming there per se, though, is there?

00:02:59 I mean, that's like kind of getting you started in the web world.

00:03:02 But where'd you really get like into programming for real?

00:03:05 So then I learned a bit of the LAMP stack, mostly the M and the P.

00:03:10 And then I really started looking at VBulletin and sort of the message forums of the day.

00:03:17 And got really good into adding just like tweaks and hacks to them.

00:03:23 In high school, I took a basic in Pascal and then a C++ class.

00:03:30 And that was sort of my sophomore year of high school or freshman and sophomore year.

00:03:35 And then my junior and senior year, I actually went half days at high school and half days at a vocational tech program.

00:03:42 And with the hardware side, got A-plus certified.

00:03:45 And that was back in the day with desktops.

00:03:49 So I don't think it means anything these days.

00:03:52 You don't get too many recruiters reaching out to you for that?

00:03:55 No, no.

00:03:56 No, that's a super cool thing that you can do at high school, though, right?

00:04:00 I mean, there's so many classes you take that are kind of fluffy.

00:04:04 Just you got to do something for the day at high school.

00:04:07 That sounds really constructive and useful.

00:04:09 Did you enjoy it?

00:04:09 Yeah.

00:04:10 Yeah, it was very practical.

00:04:11 Gave me a lot of skills and learned quite a bit about the hardware side of things.

00:04:16 Also got a Cisco certified.

00:04:19 I think it was the CCNA network administrator.

00:04:22 That might mean something a little bit more now, but not sure.

00:04:25 Yeah, still, it sounds like a really cool project, especially for when you're in high school.

00:04:31 Yeah.

00:04:31 Would you get a CS degree from there?

00:04:32 No.

00:04:33 So in college, I ended up starting in computer science.

00:04:37 I took a philosophy class that steered me into philosophy.

00:04:40 My dad was subsidizing most of my education, so I ended up with a practical business degree.

00:04:45 Yeah, that's cool.

00:04:46 He's like, look, you can take these philosophy classes, but you can't live on philosophy very

00:04:50 easily, so go get a regular degree.

00:04:52 Right.

00:04:52 Basically, unless you're going to law school, you're going to do something different.

00:04:55 Yeah, that makes a lot of sense.

00:04:58 Philosophy is really fun, but it's a hard job to have, I think, unless you just want to be

00:05:03 a teacher.

00:05:03 Yeah.

00:05:04 Yeah, for sure.

00:05:04 Okay, so a lot of interesting background there.

00:05:07 How did you get to Python?

00:05:08 So after my undergrad, I ended up moving to New York and was working in a sort of a sales

00:05:14 support, sales operation type role for Yahoo, and sort of got back into coding there.

00:05:21 I was doing a lot of Excel, doing a lot of VBA, writing little macros here and there.

00:05:27 And eventually, that led me to San Francisco and started working at startups, started wearing

00:05:31 multiple hats.

00:05:32 And so sort of my finance and Excel experience led to a Python because I found I could do things

00:05:39 a lot quicker and do things a lot more efficient with Python and having that control Excel over

00:05:45 VBA.

00:05:46 Yeah, that makes a lot of sense.

00:05:47 And that sort of debate and functionality is still raging today.

00:05:51 We've got that user voice issue where everyone's trying to get Python into Excel and Microsoft

00:05:57 has kind of put their head in the sand and ignored it.

00:05:59 But every couple of days, there's a new person who goes, what a great idea.

00:06:02 Like thousands and thousands of votes.

00:06:04 But yeah, we'll see.

00:06:05 I think a lot of people go on that path.

00:06:07 So when you got to San Francisco, was this like the dot-com heyday or was it after that?

00:06:11 It was after that.

00:06:12 This was 2008, 2009.

00:06:15 Yeah.

00:06:16 I would have been wild to be there, 98, 99.

00:06:18 Yeah.

00:06:19 At that time, it would have been crazy.

00:06:21 But I wasn't there either.

00:06:22 So all right.

00:06:24 So that was your history.

00:06:25 How about today?

00:06:26 What are you doing day to day?

00:06:27 So these days, I'm spending about 50% on a startup that I started called TestDriven.io.

00:06:33 So we're developing the platform, doing content marketing, course development, and then 50%

00:06:38 on freelance.

00:06:39 Okay.

00:06:40 That sounds really fun.

00:06:41 You know, you get to control quite a bit of what you do and always building.

00:06:46 These new platforms, these new products.

00:06:48 It's so exciting, right?

00:06:49 Yeah.

00:06:49 So I went back to freelance, let's say, a couple weeks ago.

00:06:52 So I've been free from a day job for about two weeks.

00:06:58 Yeah.

00:06:59 Are you having like cubicle withdrawal or anything like that?

00:07:01 Are you okay?

00:07:01 I'm fine.

00:07:02 I'm fine.

00:07:02 I'm fine.

00:07:02 Yeah.

00:07:02 Nice.

00:07:05 Yeah.

00:07:06 How's it going?

00:07:06 Are you enjoying it?

00:07:07 Yeah.

00:07:07 The commute is a lot better.

00:07:08 Yeah.

00:07:08 So we get up, roll out of bed right there.

00:07:11 Yeah.

00:07:11 That sounds great.

00:07:11 We're definitely going to talk a lot about TestDriven.

00:07:14 And I feel like TestDriven is, it's got a lot of parallels to what you did before.

00:07:19 Even going back to your story that you already told, you know, about starting like the Final

00:07:24 Fantasy and the PlayStation sites, and then moving on to something that you're pretty well

00:07:29 known for is starting real Python, right?

00:07:31 This is like the next generation of that maybe?

00:07:34 Yeah.

00:07:34 So I've definitely been drawn towards tech education and teaching in general.

00:07:38 I taught at a bootcamp for a number of years.

00:07:41 I was full stack JavaScript, so we won't talk about that.

00:07:43 But I've definitely, I'm a programmer first and I'm a teacher second.

00:07:48 So that's why I'm not teaching right now.

00:07:50 But yeah, there's definitely a lot of parallels between real Python and TestDriven.

00:07:55 I would say that TestDriven, targeting a little different audience, starting in the intermediate

00:07:59 to advanced level web developers, whereas Python was all targeting just the basics.

00:08:04 Yeah, I'm sure that makes a lot of sense.

00:08:05 You know, I feel like you said you're a little bit more of a developer than a teacher, but

00:08:11 also a teacher.

00:08:12 And I feel like really to be a proper teacher who teaches developers, you have to have your,

00:08:20 you have to get your hands dirty, right?

00:08:21 You have to write this code.

00:08:22 Like, it's not enough to just know it works this way.

00:08:25 You have to know, actually, I tried it that way.

00:08:28 And that seemed like it was going to work.

00:08:30 But in practice, it was really painful.

00:08:32 And it's other like, you need to have those scars to like help people along, I think.

00:08:36 Right.

00:08:36 And that's one of the things that the boot camp that I worked for struggled with how to

00:08:40 continually scratch that itch for those developers first that really wanted to get back into the

00:08:46 field.

00:08:46 And I don't really think there's a correct or right answer there for that.

00:08:51 But it was definitely something that they struggled with.

00:08:53 It's definitely something I struggle with as well.

00:08:55 But yeah, I enjoy working freelance jobs.

00:08:58 And I also enjoy working on the test driven platform.

00:09:01 That's one of the reasons why I decided to build a platform was so actually I had something

00:09:05 there, something that can actually work on something I can actually scale on whatnot.

00:09:09 Yeah.

00:09:09 I'll be interested to hear your thoughts on this.

00:09:11 But for me, a lot of times when I look out there and I'm like, I need something to solve

00:09:16 some kind of problem.

00:09:17 And I could grab something off the shelf and use it or I could build it myself.

00:09:21 There's always that.

00:09:22 Does it make sense for me to put that time and effort into it versus just grab something

00:09:26 and it won't be quite the perfect fit, but it'll be good enough.

00:09:29 But for me, another thing I've always got going in the back of my mind is if I did have to or

00:09:35 went down the path of building this myself, would it give me something really interesting to

00:09:39 learn and teach other people?

00:09:42 Maybe I could just get some teaching platform, but if I built my own, hey, maybe I could use

00:09:48 the lessons learned from there to actually create courses or create interviews and things like

00:09:51 that.

00:09:52 Do you think about stuff that way as well?

00:09:54 Yeah, definitely the build versus buy type thing.

00:09:56 I think a lot of educators out there that are on the internet, they use a lot of the existing

00:10:01 platforms and maybe they're more teachers, maybe they're more into building content and whatnot.

00:10:06 I'm a doer, I'm a hacker.

00:10:08 And so, yeah, I definitely like having that platform there.

00:10:12 Somebody is like, hey, I will promote your courses.

00:10:14 If you have this little tweak in there, I can go in there and just add that little tweak.

00:10:19 Whereas if I'm using some other platform, then I'm at the whim of the developers there.

00:10:23 Yeah, it's usually more painful up front, but often in the end, you're like, I'm so glad

00:10:26 I get to completely control this experience, right?

00:10:29 Right.

00:10:29 Yeah.

00:10:29 So a bit of a time shift.

00:10:31 By the time this episode comes out, I will have released a show with Ned Batchelder and a

00:10:36 couple of other folks called Beginners and Experts.

00:10:39 But that hasn't been released yet, so you have no chance to have heard it.

00:10:41 So I'll just tell you real quick.

00:10:43 We talked about a lot of the challenges that beginners and experts had.

00:10:48 And it seemed like, you know, the syntax people could learn pretty well and other things they

00:10:53 could follow along.

00:10:53 But the real challenge is looking at a problem and going, this is how I break down that problem.

00:11:00 These are the steps.

00:11:01 Like, okay, this needs this type of database.

00:11:03 Like, that's better as a web app versus as a command line app.

00:11:06 Like, just these quick analyses that you do with experience that when you're new, you're

00:11:11 like, I don't even know what tools to bring to bear.

00:11:13 Like, once I knew that, I could probably do it pretty well.

00:11:15 But I don't know what to start with.

00:11:18 And that comes back to this sort of the scars and the boot camp story you're telling me.

00:11:22 Like, you know, how do you think that people can at least speed up that learning process to

00:11:29 sort of get that experience?

00:11:30 Do you have any shortcuts?

00:11:31 We didn't have any great options, honestly.

00:11:33 I mean, maybe reading other people's code and stuff.

00:11:36 But really, like, how do I decide how to attack a problem?

00:11:40 Do you have any advice there?

00:11:40 I don't have any real advice in terms of speeding things up.

00:11:44 I think that just, you know, takes time.

00:11:45 And yeah, I mean, it is about being able to break a problem up into manageable pieces.

00:11:50 I think really focusing on information retrieval skills.

00:11:52 I think that was one thing that I always, like, told my classes is the one thing that differentiates

00:11:57 myself from you all is, like, I'm a better, way better Googler.

00:12:01 I can find Stack Overflow questions or answers to Stack Overflow questions, that sort of thing

00:12:07 within the first three or four pages or whatever, like, when I Google something.

00:12:11 And I'd always tell them, if you're, like, on that, like, end of the second page, end of

00:12:15 the third page of, like, your Google results, you probably need to recraft your query.

00:12:19 Yeah.

00:12:20 And part of that is, like, filtering it out, going, no, irrelevant, irrelevant, irrelevant.

00:12:24 This is the one, right?

00:12:25 But when you're new, it's hard to go, these are irrelevant, right?

00:12:29 Yeah.

00:12:29 I think that's part of the challenge as well.

00:12:31 Yeah, I do have a Master's of Science in Information Science.

00:12:34 And for a bit there, I was thinking about going the librarian route.

00:12:37 And I see a lot of parallels between web developers and librarians.

00:12:43 Whereas librarians are not subject matter experts.

00:12:46 They're just able to connect with information quickly.

00:12:50 And I think a lot of web developers, sort of the jack of all trades, master of none, have

00:12:54 that same sort of philosophy that they can pick up things really fast.

00:12:58 They might not be an expert in any one particular area, but they can wear many hats and go up and

00:13:03 down the stack.

00:13:03 Yeah, especially if you're a JavaScript developer, because whatever you know is out of date five,

00:13:08 you know, six months later, right?

00:13:09 Right.

00:13:10 The new framework is not the one.

00:13:11 Yeah.

00:13:12 The new shiny comes along really quick in that space.

00:13:14 Definitely.

00:13:15 So since we're on the topic of boot camps, let me ask you just a couple of questions about

00:13:19 that.

00:13:19 Like, do you, putting aside whether it's JavaScript or Python or whatever the subject is being taught

00:13:27 at the boot camp, do you think they're a good value?

00:13:28 Do you see people getting like lots of success, maybe relative to a CS degree or relative to

00:13:33 just like, hey, I bought some books and took an online course?

00:13:36 Do you think it's worth a while?

00:13:37 They're pretty expensive, but you know, maybe it's worth it.

00:13:40 I definitely think it's worth it.

00:13:41 A lot of times it depends on the type of jobs that you're looking for.

00:13:44 If you're looking to build an Angular type framework, you probably need a CS degree.

00:13:50 If you're looking to leverage Angular to build your own type of products, then you're probably

00:13:56 fine with just going to a boot camp.

00:13:58 I definitely agree with that.

00:13:59 Like, there's a lot of times you're in a CS degree and those more formal programs, you're

00:14:04 taught way more theory and like deeper level stuff than you probably need to know.

00:14:09 You probably have to take differential equations as a CS degree.

00:14:13 You probably have to like learn how to like create an operating system and those kinds.

00:14:18 And like all that stuff is good to know, but you could be a completely competent functional

00:14:22 web developer or whatever kind of developer, unless, you know, you really are building an

00:14:27 OS or something.

00:14:28 Just knowing like the APIs and a little bit of a little bit of theory, which seems like a

00:14:32 lot of that you could get at a boot camp.

00:14:34 Right.

00:14:34 Yeah, definitely.

00:14:35 Yeah.

00:14:35 Cool.

00:14:36 Were you there helping people get jobs afterwards?

00:14:39 Like what was that side of the thing?

00:14:41 Was that, that was probably like a big celebration, like somebody who just got a job who recently

00:14:44 graduated or something like that.

00:14:45 Yeah.

00:14:46 The placement rates of the program were pretty high.

00:14:47 I mean, they were in the nineties, which you think of, you know, college and you think

00:14:52 of some of those degrees, like, do you, like that's why they don't post the placement rates.

00:14:56 But yeah, I was, even though I wasn't like a formally part of sort of that transition to the job

00:15:02 market, it was like, you know, I had that double edged sword where it was like, I think I cared a

00:15:06 little bit too much.

00:15:07 And so, you know, I was like all in and kind of like lost myself a little bit in teaching.

00:15:12 But yeah, I was definitely there, you know, helping students interview, connecting students

00:15:16 with people I knew in the community and whatnot.

00:15:18 Yeah.

00:15:18 Cool.

00:15:19 Real quick, single piece of advice for people trying to get a job coming out of a boot camp.

00:15:23 What would you tell them?

00:15:23 Ooh, yeah.

00:15:24 So, so many.

00:15:26 Keep coding, I guess, you know, there's just too many.

00:15:31 Keep coding, go to meetups, keep connecting with people.

00:15:34 It's difficult.

00:15:35 I don't think there is a single piece of advice, but definitely keep coding, go to meetups, connect

00:15:39 with people.

00:15:39 Awesome.

00:15:40 Yeah.

00:15:40 Sounds good.

00:15:40 All right.

00:15:41 So let's bring it back to a little bit more of what we were going to talk about originally.

00:15:45 Sure.

00:15:45 I want to definitely talk about testdriven.io and what you're doing there and some of the lessons

00:15:49 you've learned.

00:15:50 But let's start at the beginning on that side of the thing.

00:15:53 So as I said before, you founded realpython.com.

00:15:57 And did you do it alone or did you do it with some other folks?

00:16:00 Yeah.

00:16:00 So there were two other co-founders.

00:16:02 So Fletcher, the original co-founder or the original founder founded it in, I want to say

00:16:09 2010.

00:16:09 And he did the original Kickstarter for the first real Python course.

00:16:14 And I actually wasn't involved in it then.

00:16:16 Okay.

00:16:17 I came after that and I can't remember who contacted who, but we were talking about, hey,

00:16:21 how can we take sort of the philosophy of real Python, the learning by doing and apply it to

00:16:28 web development?

00:16:29 Yeah.

00:16:29 That's really cool.

00:16:30 So it was started as a Kickstarter, huh?

00:16:33 Started as a Kickstarter.

00:16:34 Each of the courses were Kickstarted.

00:16:36 I was heavily involved in the second and the third Kickstarters.

00:16:40 But we really started it because there were just no beginner courses out there.

00:16:45 And now it's like kind of a dime a dozen, which sort of leads to testdriven.io.

00:16:49 But yeah, we started it because there was just nothing really practical out there.

00:16:53 Yeah.

00:16:54 It's super interesting.

00:16:55 I don't think I saw the original Kickstarter.

00:16:57 I probably saw your last Kickstarter that you did, that you all did.

00:17:02 And I was really impressed.

00:17:04 I mean, you guys, you ran it well.

00:17:06 It was super successful.

00:17:08 I was, it was actually a big inspiration to me as I was thinking about starting my own teaching

00:17:13 platform, right?

00:17:14 Training.talkpython.fm.

00:17:15 And I was sort of exploring the, like, how am I going to get the word out about this?

00:17:21 What is the right way?

00:17:22 Should I just talk about the podcast or, you know, what should I do?

00:17:25 Right.

00:17:25 And I came across your Kickstarter thinking like, wow, there's actually like a real need

00:17:31 here.

00:17:31 People seem to be really into this.

00:17:33 And it was, it was well done.

00:17:35 Good job.

00:17:35 Yeah.

00:17:35 Thank you.

00:17:36 I actually wrote a blog post.

00:17:38 I don't remember if it was after the second or the third Kickstarter, but it's on segment.com

00:17:42 or something like that.

00:17:43 But it's on how to use Kickstarter to model sort of like the lean philosophy.

00:17:49 So how can you get something out there real quick just to see if you can get product market

00:17:53 fit?

00:17:53 And I was really into the lean philosophy at the time and still am.

00:17:56 So I think you can use Kickstarter for that.

00:17:59 I do too.

00:17:59 I think Kickstarter is a little bit of a challenge because you have to have a little bit of an

00:18:04 audience or you've got to have a really good marketing team or you have to be lucky.

00:18:09 Right.

00:18:09 Right.

00:18:09 Like you already had maybe a little bit of an audience around the real Python stuff.

00:18:13 So it was enough to get it rolling, right?

00:18:16 Yeah.

00:18:16 You really want to get to your hundred percent level really within the first couple of days

00:18:21 because it's really the popularity bias.

00:18:23 Kickstarter will start promoting it.

00:18:24 People want to invest and be part in something that's popular.

00:18:28 So really getting to that hundred percent of your goal within the first couple of days.

00:18:33 And that was really what I really focused on at first.

00:18:36 So like if you need $5,000, maybe actually put it at $2,000 so that way you get up there

00:18:42 much quicker.

00:18:42 I absolutely agree.

00:18:44 And anyone who is out there thinking about having a Kickstarter, it's absolutely about

00:18:48 getting to your goal as quick as possible, even if that's not your real goal.

00:18:53 Right.

00:18:53 Because like you said, the way Kickstarter, I launched my first course on Kickstarter as

00:18:59 well, and it was funded in 12 hours.

00:19:01 And then it spent like three weeks, the number one Kickstarter on software on Kickstarter.

00:19:07 Yeah.

00:19:08 And it's, I could have put $20,000 for it and may, I probably would have funded maybe, but

00:19:15 I put like, I don't remember what I put like three or something silly, like something small

00:19:19 because I was going to do it anyway.

00:19:21 I was going to write the course anyway.

00:19:23 So it's, it's not like it was hardware and I would have to invest in like a bunch of CNC

00:19:27 machines and dyes and like, I'm going to do it anyway.

00:19:31 And I don't exactly need the money to pay to do it.

00:19:34 All the money would really help basically take the edge off of the nervousness of like quitting

00:19:39 your job and doing that.

00:19:40 Right.

00:19:40 Right.

00:19:41 But it's, yeah, it's, it's super important to get it funded quick.

00:19:44 Yeah.

00:19:44 Yeah.

00:19:45 I mean, we would have done it anyway too.

00:19:46 It was just, you know, an extra way to bring in a little bit of revenue.

00:19:50 And then, yeah, it was just also sort of the popularity around that.

00:19:54 We got our name out a little bit more with Kickstarter.

00:19:56 Yeah, absolutely.

00:19:57 You know, one thing that was really surprising to me was I thought like the vast majority of

00:20:01 the funders of the Kickstarter would be people that I would somehow tell about either on social

00:20:06 media or on the podcast or some other way.

00:20:09 Right.

00:20:10 And 40% came just from Kickstarter, not from me.

00:20:14 Yeah.

00:20:14 It was really surprising.

00:20:15 So I think that was quite a good deal.

00:20:17 Yeah.

00:20:20 This portion of Talk Python To Me is brought to you by Linode.

00:20:22 Are you looking for hosting that's fast, simple, and incredibly affordable?

00:20:26 Well, look past that bookstore and check out Linode at talkpython.fm/Linode.

00:20:31 That's L-I-N-O-D-E.

00:20:33 Plans start at just $5 a month for a dedicated server with a gig of RAM.

00:20:38 They have 10 data centers across the globe.

00:20:40 So no matter where you are or where your users are, there's a data center for you.

00:20:44 Whether you want to run a Python web app, host a private Git server, or just a file server,

00:20:48 you'll get native SSDs on all the machines, a newly upgraded 200 gigabit network, 24-7 friendly

00:20:55 support even on holidays, and a seven-day money-back guarantee.

00:20:58 Need a little help with your infrastructure?

00:21:00 They even offer professional services to help you with architecture, migrations, and more.

00:21:04 Do you want a dedicated server for free for the next four months?

00:21:08 Just visit talkpython.fm/Linode.

00:21:10 So you had these three courses originally.

00:21:14 Do you remember what they were, the names?

00:21:15 So it was real, I mean, it was basically real Python 1, 2, and 3.

00:21:19 We didn't really have like, you know, names for it, but real, you know, the first real Python

00:21:24 course was just the Python fundamentals.

00:21:26 The second one was web development and I guess unofficially Flask.

00:21:30 And then the third one was just more of a little bit more of an advanced course.

00:21:34 And that was all Django based.

00:21:35 Yeah, that's really cool.

00:21:36 How long did it take for you to write the courses?

00:21:40 So I'm the author of the second course and I want to say six months.

00:21:45 Yeah.

00:21:46 Sounds about right.

00:21:47 How long is it for the students to take the course?

00:21:49 Oh gosh, there is so much content there.

00:21:52 There's way, way too much content.

00:21:55 Yeah, I would probably say it's like six or 700, you know, pages of content there.

00:22:00 And it goes into web fundamentals, you know, it goes into HTTP, goes into web scraping.

00:22:05 And then you sort of build a CGI based framework.

00:22:09 And then you go into Flask.

00:22:11 And then I do a little bit of Web 2 Pie.

00:22:13 Oh, and then actually at the end of the course, there is a bit of Django that sort of leads

00:22:17 into the last course.

00:22:19 Yeah, that's a lot of content.

00:22:20 You got to get yourself in the right mindset to work on something that's going to be six

00:22:25 months out before you know whether it's successful.

00:22:27 And, you know, just work on something that long before you figure out whether it was a good

00:22:33 idea.

00:22:33 Yeah, it takes a lot of planning, a lot of discipline, a lot of pain, a lot of lonely

00:22:39 nights.

00:22:40 But it's rewarding in the end, right?

00:22:42 Yes, yes.

00:22:42 I think so.

00:22:44 Although I would say like, if you actually want to make money, don't write a book.

00:22:47 But I keep writing books.

00:22:49 So I should probably actually listen to my own advice here.

00:22:52 Yeah, someday maybe, right?

00:22:53 Right.

00:22:54 That's funny.

00:22:55 Another life.

00:22:56 Yeah, for sure.

00:22:56 So RealPython now, realpython.com now has more than just those three courses, right?

00:23:02 There's like a ton of content.

00:23:03 And when I throw it into the various analytics systems, that'll tell me like the amount of

00:23:08 traffic going to realpython.com and stuff.

00:23:10 It's pretty seriously impressive.

00:23:12 You guys show up or that site that you built rather shows up quite high on a lot of Google

00:23:19 searches for anything to do with Python.

00:23:20 Yeah, it's pretty, pretty incredible.

00:23:22 I don't own RealPython anymore.

00:23:24 Dan Bader actually took that over.

00:23:26 But yeah, he has done an amazing job of really kind of creating a sort of like New Yorker-esque

00:23:32 type magazine for Python.

00:23:34 He hired somebody to do all the graphic design.

00:23:38 And each individual article has its own like unique sort of graphic to it.

00:23:43 And then, yeah, there's more courses on there now.

00:23:45 So it's really incredible just to see what he has done.

00:23:48 Yeah, I'm super impressed with what Dan has done.

00:23:50 And he's really turned the knob up a little bit more.

00:23:53 And he's got a lot of people participating.

00:23:56 And whenever there's an article on there, it's not just one of these, you know, like three

00:24:00 paragraph and then a bunch of like weird, unrelated other articles at the bottom.

00:24:05 Those are like little mini books almost, right?

00:24:08 Like those are serious articles that Dan's putting together.

00:24:11 Yeah, his articles focus a little more on the Python basics or fundamentals.

00:24:15 So they'll probably stand the test of time a little bit more.

00:24:17 I like I enjoyed the website.

00:24:19 And so I focused a little bit more on like the practical sort of tutorials.

00:24:23 And those are out of date within, you know, could be within hours, you know, depending on

00:24:27 what happens.

00:24:28 But yeah, I mean, they definitely don't stand the test of time quite as well as the fundamentals.

00:24:34 Yeah, that's definitely a challenge for sure.

00:24:36 So I think Dan is doing a super job with RealPython, but why did you guys sell it?

00:24:41 Well, I mean, different opportunities came our way.

00:24:42 We wanted to focus on other things.

00:24:45 The original founder, Fletcher Heisler, he was getting into security and he actually started

00:24:51 a company called Hunter 2.

00:24:53 And he went through Y Combinator and I believe he's still working on that.

00:24:58 Jeremy ended up, he had a software testing business.

00:25:02 He lived abroad in Malaysia for a number of years.

00:25:06 He moved his wife and his family to Cambridge and got a job at Harvard.

00:25:10 And yeah, I wanted to focus a little bit more on teaching.

00:25:14 And also I wanted to focus on sort of teaching more intermediate to advanced level developers,

00:25:20 just those that could already build sort of a crud up.

00:25:23 And so that transitions us into test revenue.

00:25:26 Yeah, absolutely.

00:25:27 That sounds totally normal, right?

00:25:29 Like you have a couple of people working on stuff and they just kind of start to drift

00:25:33 in different directions.

00:25:34 And working on something like RealPython.com, it takes a lot of not just effort, but like

00:25:40 enthusiasm, right?

00:25:41 You're like, okay, you know, you have to wake up and go, okay, there's this great new topic

00:25:45 I want to write this article about.

00:25:47 And if you're just distracted with other things that are more, you know, seem more valuable

00:25:51 to you at the moment, then it's hard to do that, right?

00:25:53 Yeah.

00:25:54 Do you think it would have been different if just one person ran it?

00:25:57 Like let's say if it was just you running it by yourself?

00:26:00 I think I would have burned out quicker.

00:26:01 I think I would have moved on quicker.

00:26:03 Interesting.

00:26:04 Yeah.

00:26:04 I don't know.

00:26:06 That's difficult to say.

00:26:07 But yeah, I think if it may have just been my baby, I may have like stuck with it and,

00:26:11 you know, seen it through.

00:26:12 But since it was, you know, all three of ours, we just kind of were both at a point or all

00:26:19 of us were at a point where it's like, hey, this is a good time to transition.

00:26:22 Yeah, that makes sense.

00:26:22 I couldn't guess really whether it would mean like you'd be done with it sooner or with you

00:26:27 would have like, you know, had a little more like, I'm just going to guide it my way.

00:26:31 Yeah.

00:26:31 Interesting.

00:26:31 All right.

00:26:32 So yeah, you mentioned test driven.

00:26:34 Let's talk about test driven.

00:26:36 So your current project is test driven.io and it looks somewhat similar to the way you

00:26:43 described the origin of real Python itself.

00:26:45 Yeah.

00:26:45 So test driven really came from a similar origin as real Python.

00:26:50 Whereas real Python, there are no beginner courses on the market.

00:26:53 Test driven came about because there were basically too many beginner courses on the market and

00:26:58 there are not enough intermediate to advanced level courses.

00:27:00 And also I was sort of transitioning from, I'd say, application development more towards

00:27:07 infrastructure platform development.

00:27:08 I kind of wanted to write a little bit more about that.

00:27:11 Microservices, Docker, Kubernetes, you know, all the latest buzzwords these days.

00:27:16 Yeah.

00:27:17 Yeah.

00:27:17 We'll definitely talk about that a little bit.

00:27:19 It sounds to me a little bit like some of these courses are coming from your experience

00:27:24 of running things like real Python and other consulting projects that you're doing.

00:27:28 kind of like I mentioned before, the build versus buy story.

00:27:31 Yeah.

00:27:31 Yeah.

00:27:32 They definitely come from a real world experience.

00:27:34 Just at my last couple of, you know, full-time gigs, just moving a little bit more towards

00:27:40 DevOps side of things or platform, you know, developments and helping companies transition

00:27:45 into more of like a DevOps-y type mindset.

00:27:47 Yeah.

00:27:47 Yeah.

00:27:48 That's really cool.

00:27:49 So right now it looks like you have microservices with Docker, Flask and React and real-time apps

00:27:54 with Django channels and Angular.

00:27:55 And they definitely have this flavor of Python on the back end and rich JavaScript front-end

00:28:02 frameworks like React or Angular.

00:28:04 Yeah.

00:28:05 Is that kind of your vibe these days?

00:28:06 How you like to build web apps?

00:28:08 Yeah.

00:28:08 Yeah.

00:28:08 The stacks that I work on are usually Django or Flask on the back end.

00:28:13 And then, you know, some sort of single-page application type framework like React, Angular

00:28:19 Vue on the client side.

00:28:20 Nice.

00:28:21 I've been doing some stuff with Vue lately and I'm really enjoying it.

00:28:24 What's your favorite front-end framework these days?

00:28:26 I like Vue too.

00:28:27 You can move a little bit faster with Vue.

00:28:29 You do get the two-way binding with Vue that you don't get from Angular and React.

00:28:33 So just spinning up forms is so much easier.

00:28:36 I don't know as much about Vue at scale, though.

00:28:39 I don't know if you can lock down two-way binding back down to one-way binding.

00:28:42 But I definitely like the Vue way of doing things.

00:28:46 Yeah, I do too.

00:28:46 It's quite nice.

00:28:48 testdriven.io itself, is this built on Python?

00:28:51 Like, how are you running that site?

00:28:52 So yeah, it's a Django back end.

00:28:54 I am using server-side templating because I don't think single-page applications are for

00:28:59 everything, especially when you're a single-person development team.

00:29:02 So I can move a little bit faster with server-side templating.

00:29:05 And then I just use just vanilla JavaScript on the client.

00:29:09 That's always an interesting tension, isn't it?

00:29:11 Of having just a full-on JavaScript front-end type of app versus, you know, like you said,

00:29:16 a server-side app.

00:29:17 Yeah.

00:29:18 I don't know.

00:29:18 I'm still a little bit partial to the server-side stuff.

00:29:20 I feel like the SEO is a little simpler a lot of times.

00:29:23 There's less compatibility to worry about.

00:29:25 Like, if I send the HTML, I know that's the HTML they got, not like what kind of JavaScript

00:29:29 platform are they running, like some crappy old browser or something like that.

00:29:33 Right.

00:29:33 Yeah.

00:29:34 If you're using a single-page application, then yeah, you have to actually guide the search

00:29:38 engine to crawl through the, kind of trick the search engine almost to like crawl all

00:29:43 the pages.

00:29:44 So you get SEI out of the box with server-side templating.

00:29:46 Also, I'm not maintaining a lot of state between views on the client side, so it just made sense

00:29:51 to keep, to stick with server-side templating.

00:29:53 Yeah.

00:29:53 Right.

00:29:54 If you're going to pull down a bunch of data and continually work with it, like Gmail or Google

00:29:58 Maps or something like that, right?

00:30:00 Then like all of a sudden it makes a lot more sense perhaps.

00:30:02 Yeah.

00:30:02 Okay.

00:30:03 Cool.

00:30:03 So people can check that out.

00:30:04 That's definitely a nice project.

00:30:06 And I think maybe let's dig into some of the philosophies or steps that kind of got you to running

00:30:12 that on Django.

00:30:13 Originally, were you working with Flask and then got converted over to Django?

00:30:18 Is that right?

00:30:19 Yeah.

00:30:19 So, I mean, we fast or we go back, you know, five or six years, something like that.

00:30:24 And I was entirely Django.

00:30:26 Well, and somewhere along the way, it was like, oh, Flask is really cool.

00:30:30 So let's work with Flask.

00:30:32 I can sort of rebuild Django in the way that I see fit for that particular application.

00:30:38 And then I was talking to my friend William Vincent over the summer.

00:30:42 And he's a big Django guy.

00:30:44 He wrote a couple of Django courses or Django books, Django for Beginners and API development

00:30:50 one for Django.

00:30:51 The name is escaping me right now.

00:30:53 Yeah.

00:30:53 I just had him on the show, actually.

00:30:54 Yeah.

00:30:55 And he convinced me to move to Django and he wanted to hack on the application as well.

00:31:01 And so it was an opportunity to look back at Django and pick that up.

00:31:05 So just ran with it.

00:31:06 Yeah, it's cool.

00:31:07 It feels like Django is definitely still going strong, right?

00:31:09 They just did their 2.0 release and dropped Legacy Python support and are talking about

00:31:14 the async future as whatever that might be.

00:31:17 But it seems like things are going well there.

00:31:19 Yeah.

00:31:19 Yeah.

00:31:20 I'm really impressed.

00:31:21 Django 2.2 is coming out here soon.

00:31:22 That's the next LTS release.

00:31:24 And then Django 3 at the end of the year should have a bunch of async madness in it.

00:31:28 Yeah.

00:31:29 Actually, that'll be really fun.

00:31:30 I think async is interesting because it's something that most people don't really need, but it's often

00:31:36 something that people feel like, oh, I can't use Python for this because it doesn't have this amazing async support on the server or whatever.

00:31:43 In practice, most of the time, people don't actually have the problem that they feel like they're trying to avoid or get out of.

00:31:50 I mean, sometimes they do, but it will be great to have async on the server.

00:31:53 And there are some already, right?

00:31:55 Like we have court.

00:31:56 We have Sanic.

00:31:57 We have responder from Kenneth Wrights.

00:31:59 There's certainly some options, but it'll be cool to have these more mainstream, really popular frameworks.

00:32:06 Just get this feature, right?

00:32:08 Yeah.

00:32:09 I see actually async.io more and more in code bases these days.

00:32:13 Just little things here and there.

00:32:15 But yeah, it will be exciting to have that full potential, the full async capabilities in the Django views.

00:32:22 Yeah, absolutely.

00:32:23 All right.

00:32:23 So another thing that I think was interesting is this whole monolith versus microservices debate, right?

00:32:31 Like you can have a little bit more complicated, big monolith application where everything works together and fits together.

00:32:37 And the complexity is kind of in the code.

00:32:38 Or you can say, let's break it into a bunch of little pieces or a bunch of little simple services that work together.

00:32:44 And then the complexity kind of shifts to the infrastructure a little bit, right?

00:32:48 I got to keep them all running and like talking and like what happens if one goes down and the other is not and all that.

00:32:53 And I think it's a really great way of looking at it.

00:32:55 You're sort of shifting the complexity around so it's not so much in the application like code base.

00:33:02 And then it's more on sort of the infrastructure or the DevOps sort of people.

00:33:06 So you should, in theory, have smaller code bases.

00:33:09 Smaller code bases, you should have less bugs in them.

00:33:12 You can throw juniors on them easier.

00:33:14 Exactly, yeah.

00:33:14 You should be able to move a little bit faster.

00:33:16 Yeah, which is interesting because if you're like a big company and you've got some big site, you can break in little pieces.

00:33:21 And like you said, you can throw some junior folks to maintain this part, this little microservice.

00:33:26 And that you don't have to understand the whole giant thing, right?

00:33:30 So you can sort of have each person divvy up the work in a more clear, simple way.

00:33:35 And if you have a lot of people working on it, that's great.

00:33:37 But, you know, I feel like a lot of folks want to say, well, I need to have all these microservices.

00:33:42 But really, they're just like one or two devs on that project.

00:33:46 You know, it's like, well, does that really help?

00:33:50 You know, is that really a good idea?

00:33:51 What do you think?

00:33:51 Definitely not a great idea.

00:33:53 I think with microservices, I think too many folks tend to focus on sort of the technology side.

00:33:59 So learning Kubernetes or learning Docker, you know, learning whatever it is.

00:34:04 It's always fun to learn these things, right?

00:34:05 You're like, oh, this will be my chance to like learn this way.

00:34:08 And then microservices, then on pods, and we're just going to scale it and it'll be beautiful, right?

00:34:12 Right.

00:34:12 But I think it's more of a culture shift.

00:34:13 I think you have to focus more on top-down culture shift where you can't just take your normal like siloed teams.

00:34:20 So maybe a back-end team, front-end team, QA, operations, and sort of introduce microservices in an environment where each team is siloed and just tossing artifacts over the fence to the next team.

00:34:32 So you sort of have to look at the culture, maybe introduce feature teams, but start bringing in folks, bringing in teams that can start product inception all the way to delivery and introduce that type of change in your organization before introducing microservices.

00:34:48 Yeah.

00:34:52 Well, also, I think, you know, it makes a lot of sense to play to your strengths, right?

00:34:56 If your strengths are running the infrastructure and Kubernetes and all of these things, microservices are probably the right way to go because you can balance that really well.

00:35:06 But if you just learn Django and you're thinking, well, I need to get my app out there, you're probably better off focusing on just like, well, let's just push it to Heroku or something like that.

00:35:15 Yeah, exactly.

00:35:15 Interesting.

00:35:16 So on Python Bytes, other podcasts, we spoke about this a while ago about how you're not Google, you're not Facebook, you're not LinkedIn.

00:35:23 And a lot of engineers will see the really cool stuff, like let's say Instagram is doing with Django.

00:35:30 And they're like, well, that's how you do it, right?

00:35:32 I want my app to be good and professional.

00:35:34 So it's going to be like that, right?

00:35:36 But their app gets, you know, 100 or 1,000 or 10,000 visitors a day, not per second, right?

00:35:45 And so there's not 20, 30, 50 people working on it.

00:35:47 And so I think in the industry, there's a lot of sort of admiration of the big successful applications and then trying to model that.

00:35:57 Right.

00:35:57 And a lot of times I think that can be, it's like a little bit like the code level equivalent of premature optimization where you're like, oh, this has got to be super fast.

00:36:06 You're like, you know what, make it right.

00:36:07 We're not making it fast when it matters, right?

00:36:09 What do you think?

00:36:10 Well, yeah, you definitely have to pick and choose your battles.

00:36:12 You can't do everything.

00:36:14 So if you're a single person team or, you know, you have two or three developers, you probably want to focus a little bit more on the application rather than the infrastructure, unless the infrastructure is sort of your bread and butter.

00:36:26 But yeah, you just really need to think from a product standpoint, you know, what is differentiating my product from the market?

00:36:33 Is it the actual, you know, what's in the application or is it something to do with the infrastructure?

00:36:41 This portion of Talk Python To Me is brought to you by StellarS, the AI-powered talent agent for top tech talent.

00:36:47 Hate your job or feeling just kind of meh about it?

00:36:50 StellarS will help you find a new job you'll actually be excited to go to.

00:36:55 StellarS knows that a job is much more than just how it sounds in a job description.

00:36:59 So they built their AI-powered talent agent to help you find the ideal job.

00:37:03 StellarS does all the work and screening for you, scouting out the best companies and roles

00:37:08 and introducing you to opportunities outside your network that you wouldn't have otherwise found.

00:37:13 Combining deep AI matching with human support, StellarS pairs things down to a maximum of five opportunities

00:37:19 that tightly match your goals, like compensation, work-life balance, working on products you're passionate about, and team chemistry.

00:37:26 They then facilitate warm intros, and there's never any pressure, just opportunities to explore what's out there.

00:37:33 To get started and find a job that's just right for you, visit talkpython.fm/StellarS.

00:37:38 That's talkpython.fm/S-T-E-L-L-A-R-E-S.

00:37:44 Or just click the link in your show notes in your podcast player.

00:37:48 Generally, the rule probably should be, if whatever the thing is, the part you're talking about, is not your core business, like, outsource that, get a package that does that, or, like, find some easy way to just make that get solved, you know?

00:38:02 And focus on what's really important, right?

00:38:03 What makes you special.

00:38:04 Right.

00:38:04 You don't have to reinvent the wheel for everything.

00:38:06 Yeah, yeah.

00:38:07 There's always an awesome Python you can go look up and find.

00:38:09 Probably something right there.

00:38:11 Yeah.

00:38:12 Yeah.

00:38:12 So how are you deploying testdriven.io?

00:38:15 Are you, how's it running?

00:38:16 Is it a monolith?

00:38:16 Is it a microservice?

00:38:17 Does it, where does it run?

00:38:18 So it's a monolith, and yeah, I just did the easy thing.

00:38:21 I just deployed it right directly to Heroku.

00:38:23 Okay, nice.

00:38:24 Yeah, I don't have that much experience with Heroku.

00:38:26 More work with the virtual machines and stuff.

00:38:29 But the people who I know who do use it, they seem to really like it.

00:38:33 Like, what do you like about Heroku?

00:38:34 Well, I guess first off, yeah, I am using a monolith and I am using Heroku.

00:38:37 So it feels, it feels a little bit old school, even though these tools and technologies, you

00:38:42 know, they're not that old, like 2005 or, you know, something like that.

00:38:45 But it does feel dirty saying like, yeah, test driven is a monolith.

00:38:49 Well, I think that just speaks to like some of this culture that I was talking about, right?

00:38:53 Like, it's so easy to look and go, well, this is the way, you know, these big web apps

00:38:59 are run and yours didn't like that.

00:39:01 So it must be wrong.

00:39:02 It's like, no, it's like, it's totally a different calculation when one or two or three

00:39:06 people work on something versus a whole group or whole sets of teams, right?

00:39:10 Yeah, definitely.

00:39:11 Yeah.

00:39:12 Interesting.

00:39:12 So what features over at Heroku are you using?

00:39:15 Like, are you using Postgres?

00:39:17 What else?

00:39:17 Tell me about it.

00:39:18 Yeah, I think the powerful thing about Heroku is the add-on system.

00:39:21 Okay.

00:39:22 So instead of, you know, having to build a number of different tools and services and

00:39:27 link them all together, you really just, you know, pop G Unicorn on there, pop Django on

00:39:31 there.

00:39:32 And then you can focus on using the Heroku add-on system for sort of like your remainder

00:39:37 of tools that you need.

00:39:39 So yeah, I use Postgres, Redis, use SendGrid, use Sentry, use Log Entries as my log aggregator.

00:39:48 And then I use New Relic.

00:39:49 And those are all just, they all come from the add-on system.

00:39:52 So it takes minutes to basically set up.

00:39:54 So now I can just focus, you know, 100% of my time on the actual application.

00:39:59 Yeah.

00:39:59 That's kind of the opposite of focusing on the microservices and juggling the infrastructure.

00:40:03 That's like, just let them handle all that.

00:40:06 Here's my code.

00:40:07 Make it go.

00:40:08 Yeah.

00:40:09 And I mean, again, it depends on what you want to focus your time on.

00:40:12 And yeah, I love tinkering with infrastructure and whatnot, but I did not want to do that for

00:40:17 testdriven.io because I just wanted to get it up out the door.

00:40:22 And yeah, maybe I'll start scaling out some bits and pieces of it.

00:40:24 Like there's a separate service in there, or there's a couple of separate services that

00:40:28 I want to actually break out or a couple of separate pieces of the app that I want to break

00:40:32 out into separate services.

00:40:33 So maybe I'll look in doing that here soon.

00:40:36 But you know, the backlog is just full of bugs and features and stuff that I need to tackle

00:40:41 first before I start looking at the fun stuff.

00:40:43 It's more important to just like get content out there.

00:40:46 Yeah.

00:40:46 Once you have something working, then it is to like get some cool feature refactored.

00:40:50 Yeah.

00:40:50 Whatever.

00:40:51 Interesting.

00:40:52 Okay.

00:40:52 Well, it sounds like that's working out really well for you.

00:40:54 And like I said, people I've talked to also said the same thing.

00:40:57 That's cool.

00:40:58 Now, another thing that you have going on that I want to make sure we get a chance to talk

00:41:02 about before we run out of time is Pi Colorado.

00:41:04 Yeah, sure.

00:41:05 Yeah.

00:41:06 So what's the story?

00:41:07 This is one of the local regional PyCons, right?

00:41:10 In Colorado, I would guess, given the name there.

00:41:12 Yeah.

00:41:13 So basically, Pi Colorado.

00:41:14 Yeah.

00:41:15 It's going to be a regional PyCon.

00:41:17 It's going to be the 6th, 7th, 8th, and 9th of September of 2019.

00:41:23 And it really just came about because Denver seems to get overlooked right now in terms of

00:41:30 tech conferences and whatnot.

00:41:31 And there's really a lot happening here.

00:41:34 There's a lot of Python developers.

00:41:35 There's a lot of JavaScript developers.

00:41:36 I run a meetup in the area.

00:41:38 I've ran it since 2013.

00:41:40 But there's really a lot going on here.

00:41:41 You also have the Boulder market here, too.

00:41:43 So a lot of tech companies are moving their second headquarters here.

00:41:46 Slack just moved their second headquarters.

00:41:48 A couple, Quizlet as well, a couple other companies.

00:41:51 But yeah, there's a lot going on here.

00:41:53 And so we just felt like we needed some Python representation.

00:41:56 That's nice.

00:41:56 So you're involved with this, right?

00:41:58 And so basically, it's one of these stories of, well, why isn't there this conference here?

00:42:03 Like, well, maybe you just have to be the change you want to see in the world, right?

00:42:06 Right.

00:42:06 Yeah.

00:42:06 Yeah.

00:42:07 So I'm on the education side of things.

00:42:09 So I'm going to be putting workshops together.

00:42:11 So I think I'm officially the education chair of Pi Colorado.

00:42:15 Okay.

00:42:15 Nice.

00:42:16 How, I know the tickets are not even on sale yet.

00:42:19 So that's, no, maybe they are at the time of the release.

00:42:21 But at the time of the recording, they're not yet on sale.

00:42:23 So how big are you aiming for in terms of number of people?

00:42:28 What are you expecting and things like that?

00:42:31 I think it's somewhere between three and 400 people are what we're shooting for.

00:42:36 And that includes like volunteers and whatnot, but three to 400 people.

00:42:40 And so, yeah, tickets will be going on sale on March 4th, which, but yes, by the time that

00:42:45 this airs, they will already be on sale.

00:42:47 So the call for proposal and ticket sales do open March 4th.

00:42:50 And then the CFP and ticket sales close on May 9th.

00:42:54 Yeah.

00:42:54 So if you're anywhere near Colorado or you want to go to Colorado, because, you know,

00:43:00 Denver and Boulder, those are some of my favorite cities.

00:43:02 Those are really nice places.

00:43:03 Yeah.

00:43:03 We'll probably put together like some like hikes and, you know, whatnot the, you know, days

00:43:08 before, you know, days after a lot of breweries out here.

00:43:11 It's just a lot of like cool, you know, type things that are happening right now in Colorado.

00:43:15 Yeah.

00:43:15 That's awesome.

00:43:16 Yeah.

00:43:17 So people could check that out.

00:43:18 Is there a website they can go to?

00:43:19 Yes.

00:43:20 PyColorado.org.

00:43:21 All right.

00:43:21 Perfect.

00:43:21 I'll put that in the show notes as well.

00:43:23 But yeah.

00:43:24 So if people want to speak there, a call for proposal should be open now by the time due

00:43:29 to the magic of time shifting and podcasting that, that this releases.

00:43:32 So they can check that out.

00:43:34 If not, it should be like any day.

00:43:35 Yeah.

00:43:35 Yeah.

00:43:35 Cool.

00:43:36 So you said you're the education chair and I've been to the education summit at the main

00:43:42 PyCon in North America.

00:43:45 And I felt it was a little interesting.

00:43:46 So like, I feel like I'm in education more or less in the Python space, right?

00:43:51 With the podcasts and with the training courses and so on.

00:43:53 And that feels like education to me, but I didn't feel exactly like that's what the focus

00:43:58 of the education summit at PyCon was.

00:44:01 It felt that was more a little bit towards like teachers at regular like high schools or

00:44:06 working on projects with students that live in that space.

00:44:09 Like what's the focus here?

00:44:11 Yeah.

00:44:11 So really the education chair, what I'm supposed to say, I'm like still like forming, you know,

00:44:16 what it means, but it's really just going to be workshops.

00:44:18 So we're going to have three different tracks for workshops.

00:44:21 We're going to have Python, web development, and then data science.

00:44:26 And the Python one is just going to be generic Python.

00:44:28 And then from that, we'll have a beginner track and then have an intermediate to advanced level

00:44:32 tracks where I am modeling it sort of after the PyCon workshops where they're a little bit

00:44:38 longer.

00:44:38 They are on a separate day.

00:44:40 Some of the regional Python conferences, they do workshops, but they kind of stick them into

00:44:44 like the other like talks.

00:44:46 So I did a tutorial slash workshop at a regional conference.

00:44:50 And I would say 90% of the people that came to it didn't even realize it was a workshop.

00:44:55 So I'm just trying to do a good job of differentiating between, hey, this is a workshop and these are

00:45:01 actually talks.

00:45:02 Right.

00:45:02 Like you should probably bring your laptop and prepare to be participating in a way, right?

00:45:07 Yeah.

00:45:07 So it sounds to me like your plan is this is like education for people to learn stuff

00:45:12 about Python more than it is a separate segment for educators of Python.

00:45:19 Is that right?

00:45:19 Yeah.

00:45:19 And we have been talking about maybe doing some sort of education summit similar to PyCon,

00:45:24 maybe a little bit different, not targeting so much like high school and university type

00:45:29 teachers, maybe targeting more people like yourself.

00:45:31 But for right now, I am focusing most of my time on the workshop aspect of it.

00:45:36 Oh, that's cool.

00:45:36 Well, it sounds like it's going to be a great conference.

00:45:39 I'm sure you're going to be worn out by the time September 10th arrives.

00:45:43 Oh, I'm already worn out.

00:45:44 It's a lot of work.

00:45:47 It has.

00:45:48 Yeah.

00:45:48 Yeah.

00:45:48 That's cool.

00:45:48 I'm sure people will love it, but it's, there's so much stuff that happens behind the scenes

00:45:53 and like not glorious stuff.

00:45:55 Right.

00:45:55 And not necessarily that you're doing, but like, who's going to make sure there are napkins?

00:45:58 Who's going to make sure that there's food and proper food choices?

00:46:01 And like, just, you know, what happens if this hotel sells out, right?

00:46:04 There's just so much logistics, right?

00:46:06 Yeah.

00:46:06 We do have a napkin chair.

00:46:07 Nice.

00:46:09 Joking, joking.

00:46:09 There is a chair just about for everything else though, but.

00:46:13 Yeah.

00:46:14 That's funny.

00:46:16 Cool.

00:46:17 All right.

00:46:17 Well, it's like I said, it sounds like a cool conference and, you know, maybe I'll see if

00:46:21 I can get out to Colorado as well.

00:46:23 I don't know yet.

00:46:23 It's a ways out, but it definitely sounds fun.

00:46:25 I'm so glad you're doing that.

00:46:26 It's cool.

00:46:27 All right.

00:46:27 Well, Michael, I think we should probably leave it there for all the main topics because

00:46:32 we're getting short on time.

00:46:34 But let me ask you the final two questions before we call it a day.

00:46:38 If you're going to write some Python code or other code, even what editor do you use?

00:46:43 I like VS Code.

00:46:44 I typically, you know, go back and forth between front end JavaScript and back in Python.

00:46:49 So VS Code provides a nice balance for me.

00:46:53 Yeah.

00:46:53 Visual Studio Code's pretty nice these days.

00:46:55 And I hear when I started this podcast, there was a lot of them sort of answers and then a

00:47:01 sprinkling of other.

00:47:01 And I would say VS Code is probably the most popular choice these days.

00:47:05 It's pretty impressive.

00:47:06 Yeah.

00:47:07 Yeah.

00:47:07 I moved away from them when I started teaching because I wanted to use an editor that sort

00:47:13 of students understood when they saw me like coding in front of them.

00:47:16 And so I moved to move back to Sublime, moved to Atom.

00:47:20 And now I am on VS Code.

00:47:22 Yeah.

00:47:22 Do you think it's interesting that Microsoft made Visual Studio Code?

00:47:27 Do you feel like they had to like overcome a little bit of resistance?

00:47:30 People going, oh, I don't want to use this thing from Microsoft.

00:47:32 Like, what are they up to?

00:47:33 Or do you think it was per se that way?

00:47:34 Microsoft is like a different company today than it was five years ago.

00:47:38 So, I mean, they have, it seems like they're, they got, you know, GitHub, they got VS Code,

00:47:43 probably a number of other tools and technologies I can't think of now.

00:47:47 That's right.

00:47:47 They're just a very different company.

00:47:49 I mean, I think pretty soon they're probably going to have the developer, you know, ecosystem.

00:47:53 Yeah.

00:47:53 It seems like what they're definitely going for.

00:47:55 And, you know, I think that's kind of the heart of the company.

00:47:57 So it's not that surprising, right?

00:47:59 Yeah.

00:48:00 All right.

00:48:00 So notable PyPI packages, maybe not the most popular, but something you're like,

00:48:04 people should know about this.

00:48:05 I saw it the other day.

00:48:06 It was awesome.

00:48:06 So I use a lot of Django RQ.

00:48:08 So that's Django flavor of Redis Q.

00:48:12 Just allows you to use Redis Q a little bit easier inside of Django.

00:48:16 That's cool.

00:48:16 Is that to like kick off background work or for caching or what is it?

00:48:21 Yeah.

00:48:22 It's for kicking off.

00:48:23 Yeah.

00:48:23 Yeah.

00:48:23 It's a task queue.

00:48:25 So just kicking off background work.

00:48:26 So it's like, it's an alternative to Celery.

00:48:28 It's a little bit easier to use than Celery.

00:48:29 Yeah.

00:48:30 I get the sense that Redis might be a little simpler than Celery.

00:48:32 Okay, cool.

00:48:33 Got any more?

00:48:34 Or you have a couple here on this list that you were sharing?

00:48:36 Oh, yeah.

00:48:37 I use Flake 8 a lot.

00:48:38 I mean, every single day.

00:48:40 I mean, that's running in the background.

00:48:41 So that's just a linter.

00:48:43 And then Hypothesis, which I use for hypothesis testing.

00:48:47 Hypothesis testing is interesting.

00:48:49 Or property-based testing is quite interesting, right?

00:48:51 Like, you know, we'd covered that on the show quite a long time ago.

00:48:54 I had the founder or the creator of that on.

00:48:58 And it was, it's an interesting way to do tests, right?

00:49:01 It's like, well, it takes a number and a string and just go make some numbers and strings and

00:49:06 figure out what the right ones to put in here are, right?

00:49:09 Yeah.

00:49:09 I mean, if you're really focusing on testing that contract between functions, between,

00:49:13 you know, modules, you know, whatever it is, Hypothesis definitely really, it works

00:49:18 really, really well for that.

00:49:20 Yeah, it's cool.

00:49:20 Definitely a cool project.

00:49:21 All right.

00:49:22 So final call to action.

00:49:24 People are excited about what you're doing over Test Driven or maybe the conference.

00:49:27 What do you say to folks?

00:49:29 Yeah, definitely check out testdriven.io and also check out PyColorado.

00:49:32 So two call to actions there.

00:49:34 But yeah, I really appreciate you having me on the show.

00:49:37 Yeah, it's great to have you on the show and get a chance to catch up with you.

00:49:40 So thanks for being here and sharing the history of real Python, what you're doing today and some of your other thoughts as well.

00:49:45 Yeah, likewise.

00:49:46 Thank you.

00:49:46 You bet.

00:49:46 Bye.

00:49:47 Bye.

00:49:48 This has been another episode of Talk Python To Me.

00:49:50 Our guest on this episode was Michael Herman, and it's been brought to you by Linode and Stellaris.

00:49:55 Linode is your go-to hosting for whatever you're building with Python.

00:49:59 Get four months free at talkpython.fm/Linode.

00:50:02 That's L-I-N-O-D-E.

00:50:05 Find the right job for you with Stellaris, the AI-powered talent agent for the top tech talent.

00:50:10 Visit talkpython.fm/Stellaris to get started.

00:50:14 That's talkpython.fm/S-T-E-L-L-A-R-E-S.

00:50:19 Stellaris.

00:50:20 Want to level up your Python?

00:50:22 If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

00:50:27 Or if you're looking for something more advanced, check out our new async course that digs into all the different types of async programming you can do in Python.

00:50:35 And of course, if you're interested in more than one of these, be sure to check out our Everything Bundle.

00:50:40 It's like a subscription that never expires.

00:50:42 Be sure to subscribe to the show.

00:50:44 Open your favorite podcatcher and search for Python.

00:50:46 We should be right at the top.

00:50:48 You can also find the iTunes feed at /itunes, the Google Play feed at /play, and the direct RSS feed at /rss on talkpython.fm.

00:50:57 This is your host, Michael Kennedy.

00:50:59 Thanks so much for listening.

00:51:00 I really appreciate it.

00:51:01 Now get out there and write some Python code.

00:51:03 I'll see you next time.

00:51:24 Thank you.

