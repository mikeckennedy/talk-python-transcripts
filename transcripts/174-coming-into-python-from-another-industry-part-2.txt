00:00:00 Not everyone comes to software development and Python through four-year computer science programs

00:00:04 at universities. This episode highlights one alternative journey into Python. Over the course

00:00:10 of two episodes, you will meet people who started in other industries and specializations and now

00:00:15 make Python part of their daily experience. Some of them have used programming to power up their

00:00:21 specialization. Others decided they'd rather just be doing programming full-time and made that switch

00:00:26 over. This is part two of the two-part series. Our guests this time are Giuseppe Consolo, Brian Skin,

00:00:32 and Teresa Borkusch. This is Talk Python to Me, episode 174, recorded July 15th, 2018.

00:00:53 Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries, the ecosystem,

00:00:58 and the personalities. This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy.

00:01:04 Keep up with the show and listen to past episodes at talkpython.fm and follow the show on Twitter

00:01:09 via at Talk Python. This episode is brought to you by Vetteri and Rollbar. Please check out what

00:01:15 they're both offering during their segments. It really helps support the show. Giuseppe, Brian,

00:01:20 Teresa, welcome to Talk Python. Thanks for having us. Yeah, it's really great to have you all here,

00:01:25 and I'm really excited to share your story with everyone. So many people come into programming,

00:01:30 either use it to amplify their skills or actually move into programming, and they haven't gone through

00:01:37 a four-year computer science degree, and that pretty much covers you all as well. So I'm really excited to

00:01:43 dig into what the motivation was, how that's affected you, and just what your experience was. So that's

00:01:49 going to be great. I think probably the first place to start is, what industry did you come from? And I guess we'll

00:01:56 just go down our list. Giuseppe, you started in somewhere that probably most people don't think of as hotbeds of

00:02:02 programming. No, it's a completely different industry. So right now, my current job is a DevOps engineer. But until

00:02:11 five years ago, I was in medical school, although I was not progressing, I was kind of stuck. I've been

00:02:19 stuck for a few years. And there was an ambulance paramedic and member of a rescue team. I think

00:02:25 rescue inside a chemical plant or something like that. So completely different industry to what I'm doing

00:02:32 right now. Yeah. So you used to drive around racing to emergencies and ambulances and stuff like that,

00:02:38 right? Yes, that's correct. Just got to be such a crazy job. And you must have some wild stories. It's

00:02:44 very different than sitting behind a keyboard all day, I'm sure. A lot different. Although there's some

00:02:48 similarity in the way, you know, in this is happening world, everything is on fire. And you have to,

00:02:54 you know, be quick and do something very quickly do kind of diagnose on be very quick at finding what's

00:03:01 wrong and fix it. So in a way, it's kind of similar. The web server is down. It's a little bit similar.

00:03:07 All right, Brian Skin, how about you? My background is chemical engineering. I have a bachelor's and PhD

00:03:13 there. And I really have not moved out of chemical engineering. I sort of changed subdisciplines,

00:03:19 so to speak. What I'm working on now isn't at all directly related to what I got my doctorate,

00:03:24 what I did for my doctorate, but it is still engineering, chemical engineering, sort of a

00:03:29 thing. So my day to day, most of it is working on developing new processes for things like

00:03:35 electroplating and electropolishing. For anybody who knows what electrochemistry is,

00:03:39 if it's under that field, then we've probably played with it.

00:03:41 Okay, that sounds really interesting. I suspect there's, you know, that's much closer to the sort

00:03:47 of computational stuff. So probably less far away than say ambulances in medicine. But still,

00:03:55 it's not a lot of programming, right?

00:03:57 Not in the nominal job description. No.

00:03:59 Yeah, sure. Cool. And Teresa?

00:04:01 Currently, I'm a data scientist. But up until, I don't know, about two years ago, I had been

00:04:07 a biologist. And I was a grad student. And I spent a lot of time studying animal behavior,

00:04:13 really. So a lot of time abroad, observing dolphins and primates and stuff. So very little

00:04:18 programming there.

00:04:19 Yeah, a little bit disconnected. It sounds really fascinating, though.

00:04:23 Yeah, super cool, but not a lot of time. Well, sometime behind a computer, but not programming.

00:04:27 Yeah, more data analysis and vlogging what you've seen, right?

00:04:31 Yeah, yeah. A lot of like looking at photos. And I did like some caveman level R for some stats

00:04:38 classes. But that was as far as it went.

00:04:40 Yeah, interesting. I like the description. So I guess the one of the first questions everyone's

00:04:45 probably wondering to hear is, you know, why did you get into programming? Like, the chemical

00:04:52 engineering is somewhat close to the computational stuff, but other ones, not so much, I guess. So

00:04:57 Teresa, maybe we'll start with you. Like, what was the motivation to get into programming in Python?

00:05:01 It sort of taps into, I liked, even though I was programming like a caveman in R, I did really like

00:05:07 doing the sorts of statistical analyses and wanted to take it further and sort of wanted to make a

00:05:11 career out of it. And thought that learning Python and sort of getting involved in data science would

00:05:16 be the way to do that. So that was, yeah, that was my motivation. I found the tool set I had to

00:05:22 answer sort of scientific questions wasn't really sufficient. And it was just looking for something

00:05:26 bigger and more powerful.

00:05:27 In the beginning, were you considering like, I'm going to get these skills so that I can

00:05:33 do my biology work better? Or were you pretty sure you're like, I kind of want to move beyond this and

00:05:38 like get into the straight data science programming side of things?

00:05:41 I was moving out of biology. I think I was more interested in like, I really want to get into

00:05:45 data science. That seems like a really great career path.

00:05:48 Yeah, I think it is. And probably a lot of the skills you learned in biology about data collection and

00:05:52 things like that. And the little bit of our experience as well helped.

00:05:56 Yeah, totally. There's a certain way of thinking, you know, generating hypotheses and testing them

00:06:01 that is continuous throughout both fields. So it seems like they're totally disconnected. But the

00:06:05 how you think about questions and go about answering them is sort of useful in both.

00:06:10 Yeah, that's cool. Brian, how about you? Why'd you get into programming?

00:06:13 Programming sort of grabbed me from the beginning. I, my first programs were on my TI-82 calculator in high

00:06:20 school. And, you know, just kind of continued from there, TI-82, TI-89. My one actual formal programming

00:06:27 class was a required intro C++ class, freshman year of college. And then other than that, it was all kind

00:06:34 of somewhat self-directed, somewhat externally motivated. I did an internship in college that

00:06:38 turned into the company I was working for had this, it was actually data science. But more than I look back

00:06:44 at it, they had this gigantic table of data from the processes they were running. And my job over this

00:06:51 eight month internship was to develop an application for suggesting improved programs for their equipment.

00:06:59 And at the time, what was at hand was Excel VBA. So I got really, really good at Excel VBA, GUIs and,

00:07:05 you know, the document object model and everything. And so that really established that. And then from there,

00:07:11 I dabbled in Java a bit in mid grad school, but then came to Python about four years ago.

00:07:18 Oh, yeah, I suspect many people's first programming, you know, in quotes, experience is Excel,

00:07:25 right? Like I have these pieces of data. And can I show or hide or change the color of this

00:07:30 based on whether it's positive or negative, or, you know, something like that, right?

00:07:35 Yeah, I mean, you know, the multiple times on the podcast, you've had people say,

00:07:38 in industry, in the corporate world, the most prevalent database is Excel. The same thing is true

00:07:44 that the for the corporate world, in a lot of cases, unless there's a specific reason to use,

00:07:49 you know, something else, Excel is probably also the one of the most prevalent development

00:07:54 environments in the corporate world, just because it's, it's anybody who has window has office,

00:07:59 has VBA for better or for worse.

00:08:02 Yeah, that's pretty funny. And probably a lot of the programming happens in that one little cell

00:08:06 editing text area right at the top, right?

00:08:09 Yeah, the formulas too. I mean, that's, it's like these different paradigms going on,

00:08:13 colliding and, you know, crashing into one another.

00:08:15 I'm sure, I'm sure. Giuseppe, how about you? You took a pretty hard turn, I guess,

00:08:21 suspect it probably wasn't something day to day that you were experiencing, or maybe it was, tell us.

00:08:27 No, it wasn't. I have to go back to something like five years ago, I decided I wanted to change my life.

00:08:34 And I left medical school, I moved to another country to England, and followed my other passion, which is Linux.

00:08:43 And along the way, so I started to take support and then into a sysadmin job.

00:08:48 And along the way, I picked up a genuine passion for Python.

00:08:53 And, you know, the reason is very, it comes to a simple reason.

00:08:57 It's easy to understand.

00:08:58 So, even though I didn't have a that specific background, I could understand Python.

00:09:05 So, I offered some of my friends from my hometown Linux user group, they've been doing stuff in Python for some time, and I was kind of, you know, exposed to Python.

00:09:17 I was curious.

00:09:18 So, that's how I got started, really.

00:09:21 And then I found that it made my life a lot easier.

00:09:24 So, my day-to-day job was a lot easier because of Python, because the new skills.

00:09:28 And that was really the moment where, yes, I love this programming language.

00:09:34 I love Python.

00:09:35 Yeah, you can do some stuff in Bash and Shell scripts, but it's not the same as a real programming language.

00:09:40 Yes, absolutely.

00:09:41 And I had the first time experience about that.

00:09:46 My previous job, my old job, I wrote a script in Python to resolve a day-to-day problem that was nearly impossible to do in Bash.

00:09:55 Python, easy.

00:09:56 I mean, it took me a bit of time to get to that point, but I learned a lot along the way.

00:10:02 Yeah, absolutely.

00:10:03 That sounds really interesting.

00:10:04 Was it scary or nerve-wracking to, you know, leave medical school and then also leave Italy and just completely rearrange your life like that?

00:10:14 Like, were you like, what am I doing?

00:10:16 I'm almost a doctor.

00:10:17 This is crazy.

00:10:18 It is.

00:10:19 It is.

00:10:19 Between all of these single things, moving to a new country, changing my life, I don't know what was more scary, but here I am.

00:10:30 Yeah, it sounds like it's working out pretty well for you.

00:10:33 It's really interesting.

00:10:34 I have two of my neighbors.

00:10:35 They're both doctors at a nice hospital, research hospital here.

00:10:40 And I talk to them about, you know, have a good day.

00:10:43 How is everything going?

00:10:43 And they're like, I wish I would have just gone into computers or started a podcast or something.

00:10:50 It seems like, I'm like, really?

00:10:52 And they're like, yeah.

00:10:53 It's just, you know, your life looks easy and smooth and mine is stressful and all this bureaucracy and stuff.

00:10:59 So you probably made a good choice there, Giuseppe.

00:11:01 Giuseppe, sorry.

00:11:02 I think so, yeah.

00:11:03 Now I'm working, you know, a desk job.

00:11:06 So I'm not outside.

00:11:08 And people don't throw stuff at me.

00:11:11 How boring.

00:11:13 Maybe one of those little office dart things, like a little office toy, right?

00:11:17 Yeah.

00:11:18 Nerf guns, yeah.

00:11:20 Yeah.

00:11:20 How funny.

00:11:21 Okay.

00:11:22 So one thing I wanted to start this conversation with is I feel like there's a lot of talk about people becoming programmers because computers are important.

00:11:31 So programmers, that's what you should do.

00:11:32 So programmers, that's what you should do.

00:11:33 But I think there's a large value in having another skill like biology or chemistry or medicine or something like that.

00:11:41 And sort of supercharging that with programming or Python.

00:11:45 Now, I know some of you kind of moved on to do more specific programming.

00:11:50 But, you know, you come from this background.

00:11:52 So you're totally in a good place to talk about it.

00:11:54 Maybe just let me know what you think about, like, people who are not going to become programmers but are doing stuff and, say, in your field that you came from, you know, how it might help them.

00:12:03 So, Giuseppe, start with you.

00:12:04 The new thing that comes to my mind is when I was doing the ambulance, the paramedic stuff, sometimes we had some kind of problems with the keeping track of vehicles, ambulances, and calls.

00:12:18 And that was at some point I was considering, oh, it would be so much easier if someone who is inside, who does this on a daily basis, could write a single program that just do what you need to do.

00:12:32 Just keep track of the ambulances, keep track of the calls.

00:12:36 Unfortunately, in Italy, well, at least where I was working, we didn't have any of that.

00:12:41 Some custom proprietary software, but not nearly close to what we needed.

00:12:46 And for some time I kind of dreamed of, oh, if only I could pick up very quickly some programming skills, I could do that.

00:12:55 Yeah, imagine just like a cheap Raspberry Pi with a cellular connection or something like that, right?

00:13:01 Yes, absolutely.

00:13:01 Imagine how much you can do and how much you can do processing data with Pi.

00:13:07 A lot of data, like the call time, the average time the ambulance needs to get to some place.

00:13:15 And how much you can improve the system having access to this data.

00:13:19 I'm sure somewhere someone is doing something like this.

00:13:23 But I guess I was in the wrong place and I had the wrong kind of skill set at the time.

00:13:30 At the time, yeah.

00:13:31 If I could go back now and, well, not now, I don't consider myself skilled enough, but say in 10 years with the skills that I, the skills I would like to have in 10 years, go back in time and do that thing.

00:13:46 That would be my dream.

00:13:48 Yeah, it sounds like a really cool use of the IoT stuff.

00:13:51 And these days, it's got to be almost easy.

00:13:54 So, Brian, what do you think about it?

00:13:56 You're still doing chemical engineering.

00:13:58 What do you think about this power-up, Python power-up idea?

00:14:02 I think the analogy that I would draw is actually it's kind of a reflection of the technical management conundrum.

00:14:09 Where in order for someone to make better, at least, high-level vision choices for a technical effort, if you don't know at least something about the, if you don't have some expertise in the technical thing, then it's hard to have the perspective to make those kind of bigger visionary decisions.

00:14:28 It can still work, but it can be harder.

00:14:29 I would draw the same sort of parallel to the programming skill set.

00:14:34 A lot of the things that we work on involves equipment and tanks and pumps and things that you can't really, there's no IoT for the simple pumps we work with, for example.

00:14:43 But in terms of data analysis and driving some of the data acquisition hardware or some controller hardware, having the ability to just toss together a script or to dig into a command line or a serial prompt or something.

00:14:57 And even if it's not the prettiest code or the most efficient, effective, fastest, whatever, it's still so many orders of magnitude more capable than it would if there were not any programming expertise around to bring to it.

00:15:14 And so it's not critical exactly, but it can help so much that it almost is, I would say it's near critical in a lot of cases.

00:15:24 It basically opens up new possible questions you can answer and stuff because where there used to be too much data, now it's, you know, it runs for three seconds.

00:15:34 Manageable.

00:15:34 And you can also, you know, being able to handle things faster means you can handle more things, which is really valuable.

00:15:40 So.

00:15:41 Teresa, how about you?

00:15:42 Do you see those kinds of opportunities in the biology space?

00:15:44 Totally.

00:15:45 I think it's helpful, I think, to think of programming as something that'll save you time.

00:15:49 You know, looking back on the way I used to handle data or the way we used to store data and the amount of time I spent, like, scrolling through Excel sheets looking for things when, like, you know, the database, a database might have been the right solution.

00:16:00 Or, you know, manually cleaning things in Excel when, if I had just put something into, say, like, a Pandas data frame, yeah, it would have saved me hours.

00:16:07 So I like to think that its main benefit would have been just freeing up brain space to think about, like, the actual biological problems or the actual questions of interest and kind of automate away a lot of those pain points.

00:16:20 Yeah, and it seems to me like that kind of work is the least fun.

00:16:23 You know, like, cleaning up data by hand in Excel or something like that.

00:16:28 Yeah.

00:16:29 That doesn't sound fun.

00:16:30 It's the least fun, but you can never make it go away.

00:16:32 You can just make it take.

00:16:34 No, you have to do it.

00:16:35 Yeah, it'll take a tenth of the time, though, with the right tools for the job.

00:16:38 Yeah, yeah, that's cool.

00:16:39 I have a very low tolerance for boring, repetitive tasks now.

00:16:42 It's like, okay, I'm automating this right now.

00:16:45 Yeah, exactly.

00:16:46 I've had the same experiences in some of my stuff where I'm like, you know, for the third day, I spend an hour doing something.

00:16:52 I'm like, why do I not just take half an hour, write a program that solves this problem, and it'll be fixed forever, not just for today.

00:16:59 Yeah, but you kind of need to hit that threshold, right, where it's like, I know I'm doing this enough, and it's painful enough, and so on, until you decide, like, that's it.

00:17:08 I'm writing a program.

00:17:09 I guess maybe, like, a lot of the real opportunity for people to see programming as relevant to them when they're not programmers is kind of this automate the boring stuff type of angle, like that Al Swigert talks about in his book and stuff, which is they're really just, you know, you could do that in 10 lines of Python if you just knew the 10 lines in the right packages.

00:17:29 Yeah.

00:17:32 This portion of Talk Python is brought to you by Vetteri.

00:17:35 Vetteri is an online hiring marketplace that connects highly qualified job seekers with thousands of inspiring companies.

00:17:41 They specialize in positions in the tech space, including software development, data science, and project managers.

00:17:47 Vetteri is not only free for job seekers, you'll actually get paid to get a job through them.

00:17:52 They're offering a $500 bonus if you accept a job through Vetteri.

00:17:56 Whether you're looking for a job at a tech startup or a major corporation, visit talkpython.fm/Vetteri, that's V-E-T-T-E-R-Y, and get that $500 bonus.

00:18:06 Brian, I guess I'll ask you this one first, because it's maybe most relevant to you, is how has learning programming sort of changed how you do chemical engineering?

00:18:19 Like you said, you now have this super low threshold for boring repetitive work, which is obvious.

00:18:24 What else?

00:18:25 So the programming shows up, it's really scattered all over.

00:18:30 I mean, the title, the automated boring stuff, is a really great philosophy, I think, for how it helps me.

00:18:37 My day-to-day spans the whole range of engineering research, writing proposals, doing experiments, directing them, doing some modeling sometimes, consoles, that sort of thing.

00:18:48 Writing stuff up, writing talks, writing papers.

00:18:50 And for the most part, programming kind of sits in the gaps.

00:18:54 It's scattered all over.

00:18:56 And this is where the VBA is actually really helpful, has been really helpful, because I have a library of scripts that are bound to ribbon buttons or keyboard shortcuts or whatever.

00:19:06 So I can file labeling, categorizing, filing emails, popping attachments off the server, cleaning up data in Excel, chart, some chart automation stuff, keyboard shortcuts in Word to switch highlighting around or various things.

00:19:22 I can work large single-digit integer times faster because of all of the automation I have tied into my workflow start to finish in just lots of small little ways that are customized to me and they work really well.

00:19:37 So it's a productivity enhancer to the max.

00:19:39 Yeah.

00:19:39 I'm really impressed at how many different apps it sounds like you've plugged this stuff into.

00:19:45 It's not just like, well, I'll go do it in Python now, but like Word and Excel and all sorts of stuff.

00:19:50 Well, that's the thing.

00:19:51 I'm the only, I think it's safe to say I'm the only programmer in my office.

00:19:55 I work in a small business that's 10 technical staff.

00:19:59 I'm the only one with any programming background at all.

00:20:02 And some of what I've written, I've handed off to other people, and the only way they're realistically going to use it is if it can be bound to a keyboard shortcut or a button.

00:20:10 Yeah, that makes sense.

00:20:11 Obviously, the command line and a pip install this, and yeah, that's not going to work.

00:20:15 Yeah, there are some data analysis tasks, and I've done a very little bit of probably very low-quality machine learning for a project.

00:20:22 And so for that, Python was the only thing that made sense of what I knew.

00:20:26 But for the day-to-day, it's all VA.

00:20:28 That's really interesting.

00:20:29 Are you known as the person who can solve the programming problems and people come to you with data problems, like process this for me?

00:20:37 Not so much.

00:20:38 I could be, but...

00:20:39 You dodged that bullet.

00:20:40 It's more that in order to know, it goes back to that pain point problem.

00:20:44 In order to help somebody out with a data analysis or data processing automation, I have to understand what the data is and what I need to do, what needs to be done with it.

00:20:52 And that knowledge transfer adds significantly to that cost of an automation step.

00:21:00 Right.

00:21:00 It has happened, but a lot of the time, it's not enough pain for them to cross that threshold of making it worth the extra communication time and then the automation.

00:21:10 It's happened a couple of times, but it actually doesn't happen very often.

00:21:12 Yeah, they probably don't realize the amount of pain they could avoid.

00:21:15 They probably just see that as a fact of their job.

00:21:17 I agree.

00:21:18 I think it's very likely that's the case.

00:21:19 Like you have a lower tolerance now.

00:21:21 So, Teresa, let me ask you about you.

00:21:24 So, you've fully switched into doing data science.

00:21:27 What kind of problems are you studying now?

00:21:29 What sorts of problems?

00:21:30 Yeah, like what area of data science are you doing?

00:21:32 I work for iRobot.

00:21:33 So, a lot of analysis on data that would explain how people are using a robot.

00:21:38 So, some things that are sort of consumer-based analytics, like looking at use patterns, things like that.

00:21:43 I like to use the analogy that it's not that different from studying, say, like a population of dolphins out in the ocean that you can't really see what they're doing.

00:21:50 You just get like glimpses or a few signals.

00:21:53 I don't really know what all the people are doing with their products, but I get glimpses and signals, and it's somewhat analogous.

00:21:59 That's really interesting.

00:22:00 So, iRobot, that's the company that makes like Roomba, the automated vacuums, and things like that.

00:22:06 Yeah, that's right.

00:22:06 Small, like home cleaning personal robots.

00:22:09 Yeah, I have one in my kitchen right now.

00:22:11 It's not going, but it's hanging out there.

00:22:13 To you, it was more of a sort of career transition.

00:22:16 I guess, like how do you, are you happy that you've learned programming and took this transition?

00:22:21 Is it working out well?

00:22:22 Like what was the experience?

00:22:23 Oh, totally.

00:22:24 It's, I love how, you know, I was trained as a scientist using probably not all the tools that I could have to really work in that field in academia.

00:22:33 But now I still get to use sort of my science content knowledge, but with this whole new, way more powerful skill set.

00:22:40 So I think back a lot to like problems that I've solved now in my current job.

00:22:43 And they're somewhat similar to questions that might have been asked before, but they were such a struggle.

00:22:47 I had no idea how to process this much data or, you know, how to make up a graph that would answer this question easily.

00:22:53 And now knowing Python and being plugged into all the really great tools like Pandas or scikit-learn, all these things for machine learning, it's a breeze to do this sort of stuff.

00:23:01 And I always look back and say, if I had the skills I have now, I was still doing that job, what I could have done.

00:23:06 But it's overall been just amazing.

00:23:10 That sounds really awesome.

00:23:11 Is it interesting to come from an academic space and then into industry, as they say, and sort of look back and go, just see the differences?

00:23:19 Yeah, totally.

00:23:20 I think the contrast is really interesting.

00:23:22 I think the pace at which things move has been a huge shocker in a way.

00:23:27 Like academia is much slower, you know, as opposed to, you know, if a question needs to be answered, they need the answer within a week or a few weeks, as opposed to, oh, spend a few months like thinking about it.

00:23:38 Or, you know, maybe you'll publish a paper in a year.

00:23:40 Exactly.

00:23:41 Well, yeah.

00:23:42 And then they'll come out in a journal six months after that, right?

00:23:45 Exactly.

00:23:45 Right.

00:23:46 And two people will read it instead of, you know, this very fast turnaround, kind of not necessarily high profile, but work that has impact, like immediate impact.

00:23:54 Yeah.

00:23:54 It is interesting how narrow the academic exposure is.

00:24:00 I mean, it's really important, but it's, there's like 10 people that might read a paper and it will influence their thinking in the world, right?

00:24:08 Which is crazy compared to like all the people that have a Roomba.

00:24:12 Exactly.

00:24:12 Yeah.

00:24:14 Much broader audience.

00:24:15 Yeah.

00:24:16 Maybe a little more shallow effect on their life, but more broad.

00:24:19 Yeah.

00:24:21 Who knows which one has more volume.

00:24:23 Okay.

00:24:24 Giuseppe, how about you?

00:24:25 Like this move from studying medicine and doing, you know, the ambulance emergency stuff into DevOps.

00:24:32 Like, how's that transition been?

00:24:33 I'm trying to get rid of the old habits of jumping into problems, you know, heads on and putting out fires.

00:24:42 I'm trying to get new habits on, think about the problem, break it in single little problems that you can then fix to apply some automation to that.

00:24:54 So these days I'm mostly working on this part and automation of provisioning virtual machine servers and I'm using Python to do that.

00:25:04 So it's not an easy transition from the old world, the old life, the old habits, but I'm getting there.

00:25:12 I'm getting there and I'm enjoying a lot Python along the way.

00:25:16 It's really fun for me.

00:25:19 It makes it feel easier in my day-to-day work life.

00:25:24 Yeah, that's really cool.

00:25:24 What kind of stuff do you do around DevOps that you talked about?

00:25:28 For example, the need to automate the provision, the creation of a series of server in environment.

00:25:35 And so far, it's not much automated.

00:25:39 So my project currently is to make that completely, fully automated.

00:25:44 And when I was interviewed for this position a few months ago, I asked, can I use Python?

00:25:50 The answer was yes.

00:25:51 And I was, yes, I want this job.

00:25:54 It's funny.

00:25:56 But, you know, working in a technology day-to-day-to-day, like some technologies are more fun than others.

00:26:01 And if you get to choose, it really can make a difference on how happy and joyful what you're doing.

00:26:07 Yeah, absolutely.

00:26:09 So come the first week, the second week at this job, and I have to get information from a hypervisor about all the VMs running, something in the range of 120 VMs.

00:26:23 And the specs, the information about the disks, the RAM CPU, that kind of boring stuff that you think, why don't I automate that once and reuse multiple times every time I need to gather information again.

00:26:38 And I did that in Python.

00:26:40 And there's a wonderful SDK.

00:26:43 It's called Over Engine SDK Python, which is really a great library.

00:26:50 But for some reason, it didn't play well with the version of the hypervisor we are currently using.

00:26:57 So I ended up writing a simple skeleton script using requests to pull information using the APIs from the hypervisor, getting this information, parse what I need, and put everything in a well-organized CSV file.

00:27:15 That's really cool.

00:27:16 That was the fun part of my first, second week at the new job.

00:27:20 I thought, this is what I really wanted to do, and gave me another motivation to keep doing more Python, give me more confidence in doing more in the future.

00:27:32 Yeah, that's a great story.

00:27:33 I feel like those little solutions add up, right?

00:27:36 You come to a company, you get hired there or something, and people just do stuff in this sort of painful manual way because that's the way they've always done it.

00:27:45 And you come with fresh eyes.

00:27:47 You're like, why?

00:27:47 Why is this not automatic, right?

00:27:50 And then slowly, these things sort of get piled on until everything gets easier.

00:27:54 It's great.

00:27:54 Especially if you're coming from a different background.

00:27:57 So it's not really – I still feel I'm misplaced.

00:28:01 I'm not in the right place.

00:28:02 I still have to think, is it really me doing this stuff?

00:28:06 I couldn't think of myself doing Python five years ago.

00:28:10 It's a complete drastic change.

00:28:14 Yeah, it's like an identity shift, right?

00:28:16 Yes.

00:28:17 It sounds like a good one, though.

00:28:18 Yes, that makes me so happy.

00:28:20 So it's definitely a good one.

00:28:21 That's awesome.

00:28:22 Yeah, that's really, really great.

00:28:24 So one thing I'd like to do is maybe go around and see which – sort of what technologies you're all using these days.

00:28:31 It's probably a little bit different as you're solving different types of problems.

00:28:34 So, Teresa, what does yours look like?

00:28:37 Is it Jupyter and those kinds of things?

00:28:39 What are you using these days?

00:28:41 Yeah, definitely.

00:28:41 Yeah, definitely.

00:28:41 I'm in Jupyter notebooks pretty much all day.

00:28:44 I really like Jupyter notebooks.

00:28:45 Other people on my team are sort of – have mixed feelings.

00:28:47 But for me, it's really convenient.

00:28:50 And it just really works well for me.

00:28:52 In terms of which specific libraries I like, Pandas and NumPy are sort of essentials.

00:28:59 I find myself dipping into like SciPy or like stats models or something for more statistics-relevant things.

00:29:06 And I guess – actually, a major part of my job is making like visualizations to summarize findings and things like that that are –

00:29:13 Sure.

00:29:14 You know, it could be shared around the company.

00:29:15 And I found that Plotly is a really great library for that sort of easy to use and makes pretty nice looking graphs.

00:29:22 Yeah, can recommend.

00:29:23 Yeah, cool.

00:29:24 Plotly is really nice.

00:29:25 Some of those – some of the graphing capabilities there are really coming along.

00:29:28 Are you thinking of switching to a JupyterLab?

00:29:31 I don't know.

00:29:32 Probably not.

00:29:32 I think I'm pretty happy with my setup.

00:29:34 But I might be able to be convinced.

00:29:36 Yeah, yeah.

00:29:37 It's a little bit different.

00:29:38 So, the people that aren't using Jupyter that you're working with, what else are they using?

00:29:42 What's their alternative if they don't totally love it?

00:29:45 PyCharm, I think, is the other contender.

00:29:47 As well as just like – I guess like just writing scripts in Atom and then running it, you know, from the command line or something like that.

00:29:52 Yeah, so more like traditional computer science type programming stuff.

00:29:57 Yeah.

00:29:57 Okay, yeah.

00:29:58 That makes a lot of sense.

00:29:59 Brian, how about you?

00:30:00 Platform?

00:30:01 So, at work, I am strictly Windows.

00:30:04 I do use Git Bash for everything.

00:30:06 Source controlling it.

00:30:07 Mostly, I'm in Jupyter Notebook.

00:30:09 A lot of H5Py, NumPy, SciPy, SciKits.

00:30:12 It's Matplotlib sort of a thing.

00:30:14 Side projects.

00:30:15 I work both Linux and Windows and go broader to Sphinx documentation, Tox for testing, Travis.

00:30:23 I have packages on PyPI, so I've messed with the setup.py, Twine, and all that kit.

00:30:28 And I'm a big fan of adders for basically everything I'm doing.

00:30:32 Yeah, adders is a good way to get some quick classes in place.

00:30:35 The wrapper, the Dunder wrapper and Dunder string that it auto-generates, that's so annoying.

00:30:40 Creating those by hand and just having a nice representation by default is so nice.

00:30:45 Yeah, I really like outputs.

00:30:47 I'll go and write those almost primarily for debugging.

00:30:49 If I want to print one out or I can pause in a debugger at a breakpoint, you see the variables windows.

00:30:55 Instead of just seeing this object at this memory address, you can see really useful stuff there.

00:31:00 It's great.

00:31:00 And adders just does that automatically, right?

00:31:02 Yep, it definitely does.

00:31:03 Nice.

00:31:03 Giuseppe, how about you?

00:31:05 Linux all the way.

00:31:06 I'm in Linux 7.

00:31:07 All right, which distribution?

00:31:09 Well, I'm partial to Ubuntu.

00:31:11 Yeah, I like Ubuntu as well.

00:31:13 Although I have to say I started some, well, a long time ago with Gintu.

00:31:21 Yeah, nice.

00:31:22 Which probably not everyone knows.

00:31:24 But I'm using CentOS and Red Hat, they're better at work.

00:31:29 But I use Ubuntu at home.

00:31:31 Nice.

00:31:32 And for Python, what are some of the libraries and stuff you're using for interacting with VMs over the network and the kind of work you're doing?

00:31:39 I try to keep it simple.

00:31:41 I'm using mostly requests and Beautiful Soup.

00:31:45 And I don't know if you want to count this as a...

00:31:49 They come with any Linux distribution, any Python in a Linux distribution that I've used so far.

00:31:56 My best friends are Subprocess and ArgParse.

00:32:00 Yeah, of course.

00:32:01 There's a lot of automation stuff there.

00:32:03 That's great.

00:32:04 Yeah.

00:32:04 Do you use things like Paramico and stuff for remote interactions?

00:32:07 When I can, yeah.

00:32:08 But sometimes I had to just use Subprocess and call SSH with Subprocess just to make it the Python script portable.

00:32:16 So you could use it everywhere on any machine, even if you don't have Paramico on that machine.

00:32:22 Because, you know, you have to install Paramico.

00:32:25 Right.

00:32:25 Sometimes, you know, trying to keep it simple so it can be used anywhere.

00:32:30 That was the best strategy for me in some occasions so far.

00:32:37 Yeah.

00:32:37 Yeah.

00:32:37 It sounds like it's working well.

00:32:38 That's great.

00:32:41 This portion of Talk Python To Me has been brought to you by Rollbar.

00:32:44 One of the frustrating things about being a developer is dealing with errors.

00:32:48 Relying on users to report errors, digging through log files, trying to debug issues, or getting millions of alerts just flooding your inbox and ruining your day.

00:32:57 With Rollbar's full stack error monitoring, you get the context, insight, and control you need to find and fix bugs faster.

00:33:04 Adding Rollbar to your Python app is as easy as pip install Rollbar.

00:33:07 You can start tracking production errors and deployments in eight minutes or less.

00:33:12 Are you considering self-hosting tools for security or compliance reasons?

00:33:16 Then you should really check out Rollbar's compliant SaaS option.

00:33:19 Get advanced security features and meet compliance without the hassle of self-hosting, including HIPAA, ISO 27001, Privacy Shield, and more.

00:33:29 They'd love to give you a demo.

00:33:30 Give Rollbar a try today.

00:33:32 Go to talkpython.fm/Rollbar and check them out.

00:33:36 Giuseppe and Teresa, think of biology and medicine and stuff.

00:33:41 I want to ask you this question.

00:33:42 Back to the people, the place you were before, Brian.

00:33:46 I'm still where you are.

00:33:47 If you're talking to someone who is in your industry or was in the industry you came from, and they had no background in programming,

00:33:54 what advice would you give to them about maybe learning it or how it might help them push their career forward?

00:34:00 Teresa, go first.

00:34:01 I think I left my field maybe about two years ago, but it really did seem to me that there was a certain sparsity of biologists who were competent in or, I mean, both interested and able to program and just like utilize the power that this, you know, that Python could unleash for you.

00:34:18 And I would say do it because it'll set you apart.

00:34:21 It'll both make your life easier and make you sort of a rarity in the field.

00:34:24 So I think the field as a whole could really benefit from more people who have these skills.

00:34:29 And, you know, if you want to be like a competitive job prospect within the field, if you have the ability to, say, set up a database for a project you're trying to work on, that's really going to put you head and shoulders above a lot of the other candidates out there.

00:34:40 Yeah, that's cool.

00:34:41 And if you decide for some reason that academia is not for you, you could always go work for a cool robot company, right?

00:34:46 Yeah, exactly.

00:34:47 Just jump ship.

00:34:48 It's okay.

00:34:48 All right.

00:34:50 Giuseppe, how about you?

00:34:52 I would say don't be afraid.

00:34:54 For a long time, really a long time, I was curious about Python, but too afraid to start doing anything, even to, you know, start opening a book about Python because of my lack of programming background.

00:35:07 So don't be afraid.

00:35:09 Try a little script.

00:35:10 Try something just for fun and practice.

00:35:13 That's something that in medicine, it's everything about practice, practice, practice.

00:35:18 Do something until you can do it blindfold or you can do it without looking.

00:35:24 You can do it on a different patient every day and still you can do that something.

00:35:28 So in the same way, if you keep practicing and doing a little bit every day, that's a good way to get rid of the fear of not having a programming background.

00:35:41 And this is where the 100 days of code is perfect for anyone from a different, I believe, from anyone from a different background that wants to get started with Python.

00:35:53 That is a good resource.

00:35:55 And it's not that much of a commitment.

00:35:57 It's an hour a day for a little over three months.

00:35:59 It's not too bad.

00:36:00 Brian, how about you?

00:36:01 So I keep coming back to the automate the boring stuff theme.

00:36:05 For somebody in engineering who isn't looking to become a full-time dev, think about what you do during the day.

00:36:11 Think about the tasks that you have to address and then identify the ones that drive you nuts because it's the same thing over and over and over again.

00:36:19 And start small.

00:36:20 Find a little thing.

00:36:21 It can be hard to know what's going to be big or small going into it.

00:36:24 But pick something that seems like it's small and then identify a relevant programming language.

00:36:29 So a lot of the proprietary software has its own internal scripting languages or whatnot.

00:36:33 But if you're in Excel, if you're in Word, it gets slammed a lot, kicked around.

00:36:39 But VBA is actually a pretty good choice because if somebody else needs to use what you end up making, it will transfer.

00:36:45 And then, of course, I would definitely recommend Python for anything general because it's great for that.

00:36:50 And then look around.

00:36:52 Find a book, a Learn to Program book in that language.

00:36:55 O'Reilly has stuff for Excel that has some VBA in it.

00:36:58 There's a VBA for dummies.

00:36:59 There are a plethora of Python books that you can find.

00:37:03 Search the web.

00:37:04 Hit up Stack Overflow.

00:37:06 And just search until you find something that seems relevant to solve what you're trying to solve to automate this problem, to solve this problem.

00:37:14 Try it.

00:37:15 Code it.

00:37:16 If it doesn't work, keep tinkering at it until this first small thing, you can get it to work.

00:37:21 And then pick the next thing.

00:37:22 And learn what you need to do to make it work.

00:37:24 And just step by step, eventually you'll accumulate enough of an understanding of the way the computer thinks, the way the computer works, that you can start telling it what to do without having to figure anything out.

00:37:37 And then you're unstoppable.

00:37:38 Oh, that's great advice.

00:37:39 And I feel like these can really quickly add up in ways that are hard to foresee.

00:37:43 If you can do this little thing to process a CSV file, maybe convert it to an Excel file, and then you're going to do some other little trick, get some other little trick.

00:37:53 All of a sudden, you could sort of chain those together and process a thousand files all at once.

00:37:58 Whereas before, you're like, oh, boy, I've got to go through all of this.

00:38:02 They add up in non-obvious ways.

00:38:05 Yeah.

00:38:06 It is definitely a super linear capability curve.

00:38:10 If you know how to do n things, you have n to the x, where x is large, total things you can do with those bits of knowledge.

00:38:18 Yeah.

00:38:18 I think actually part of the secret of programming that people who are not programmers don't actually get to see is it's really about building these little building blocks and then clicking them together to build larger building blocks.

00:38:30 And in the end, you're clicking big pieces together, not small pieces often.

00:38:34 Yes.

00:38:34 Absolutely.

00:38:35 I agree.

00:38:35 And also the ability to see the problem and break the problem in single units.

00:38:40 That's another something that, from my point of view, helps to, it's something to get in front of a big problem, it's something to see the big problem, be able to split it in single units.

00:38:51 And, okay, now I do this unit, now I do this, fix this problem, do this little action, little operation, and then after a while, bam, your big problem is gone.

00:39:00 Yeah.

00:39:01 It's definitely an important part of the skill set, but it's something I don't, that's not something that somebody coming, new coming into programming should expect to be able to do in an effect efficient or natural way with no experience whatsoever.

00:39:13 I, I would be surprised if most people coming in fresh to programming would have an instinct for how to break problems down that way.

00:39:20 It's sort of, that sense develops along with the facility in programming generally.

00:39:25 Yeah.

00:39:25 It's definitely powerful once you get it, but it's hard to just, it's hard to see that it's being useful in the early days.

00:39:31 early, early stages.

00:39:32 All right, we're getting sort of near the end of our time here.

00:39:36 So I do want to ask you all sort of forward looking question on this.

00:39:40 So obviously programming is changing stuff for all of you, but it's also, I think, dramatically changing everyone's roles in these industries.

00:39:50 So I guess, where do you see programming and technology pushing your industry or the one you came from over say the next 10 years in the next reasonably predictable amount of time?

00:40:01 Brian, you want to go first?

00:40:02 Sure.

00:40:02 10 years.

00:40:03 I have to imagine that programming will still be a non-critical skill.

00:40:07 You can thrive and do well without it.

00:40:09 But as the scope of data and the automatability, automability of proprietary tools and the growth of open source stuff like Python and R and others,

00:40:20 the productivity and capability advantage that's going to come from being a programmer, that differential is only going to increase.

00:40:26 Things may get to the point where a lack of a programming ability just is too much of an efficiency drag on an engineer in general.

00:40:36 You're thinking it's like almost like saying, well, I can't type or I can't use Word.

00:40:42 Right.

00:40:42 I just take notes on my legal pad.

00:40:44 Like, you know what?

00:40:45 Thanks, but no thanks.

00:40:46 We're going to find a different candidate.

00:40:48 Exactly that sort of thing.

00:40:49 It won't be fatal, but it will be more and more important.

00:40:52 And ultimately, no matter how far things go, I think it will continue to be a skill that differentiates between just a solid competence versus being a magician of sorts in terms of being able to churn through, chew through data and tasks.

00:41:08 Yeah.

00:41:09 You should be able to address questions or problems that others just can't.

00:41:12 Yes, exactly.

00:41:13 Yeah.

00:41:13 Interesting.

00:41:14 Teresa?

00:41:14 Yeah, I agree with that idea that it'll be sort of a, the baseline will raise.

00:41:19 You know what I mean?

00:41:20 Like you'll, there'll be a certain expectation that you will know how to store larger amounts of data or like a task, you know, the expectation that cleaning your data set might take you two weeks, like sort of an expectation that it might take you a couple hours because you can do it programmatically.

00:41:34 I think things have to go that way.

00:41:35 It seems almost inevitable.

00:41:37 And I guess something that I would hope would come with it, and I don't really know if it's headed this way, is sort of a change in how we think about sharing code or sharing information of that type in academia.

00:41:49 I know that like, you know, if you, now at my work, if someone were conducting an analysis and we really wanted to comb into it and reproduce it, you'd want to see the code for how they set things up.

00:41:58 And I don't think that standard is there in academia.

00:42:00 It's sort of hand-wavy.

00:42:01 Like we did this model with these things, but you don't see it written out.

00:42:05 So I don't know that things will go that way, but I think that would really be a benefit.

00:42:09 There are definitely people pushing that way and infrastructure getting to the point where, you know, they're still figuring out how to manage it, how in the world to set everything up.

00:42:18 But there's definitely attention being paid to it.

00:42:19 Right.

00:42:20 Because there is sort of attention you want to protect your work and, you know, your original ideas and things like that.

00:42:24 But it does, you know, science is sort of built on sharing the ideas among different teams.

00:42:28 So sharing that code would really go a long way, I think.

00:42:31 I wonder if there's going to be a shift where, you know, right now it's like you get credit for writing the paper and getting the result.

00:42:39 But it's maybe, you know, more is like, well, we collected the data and then here you can see we wrote the software.

00:42:44 And here's the GitHub repository that shows all the commit history.

00:42:49 And, yeah, somebody took it and drew a picture and made a conclusion.

00:42:52 But that's not the work.

00:42:53 You know what I mean?

00:42:54 Yeah, exactly.

00:42:55 Yeah, one thing I know of where they're doing that, you can actually assign a DOI to a GitHub repo and possibly even a specific release.

00:43:04 CERN, I think, is where it's out of.

00:43:06 There's a site called Zenodo, Z-E-N-O-D-O.

00:43:09 That's right.

00:43:09 Yeah.

00:43:10 And that might have come up previously on the podcast.

00:43:12 But they're definitely getting infrastructure to site data, code, and all those sorts of things as individual units to tie into this research documentation process.

00:43:22 Yeah.

00:43:22 It lets you sort of claim or make a permanent link back to the software in an exact state, the digital object identifier.

00:43:30 Yeah.

00:43:31 They're doing some really cool stuff with reproducible science there.

00:43:33 But also, you could see it for attribution, right?

00:43:35 Interesting.

00:43:36 Yeah, that's really cool.

00:43:37 Yeah.

00:43:37 Giuseppe, let me ask you the same question.

00:43:40 Where do you see, like, programming and software pushing medicine in the next 10 years?

00:43:44 That's an interesting question.

00:43:46 Maybe in the direction of collecting information, storing information, and parsing information on a higher level, on a region, city, region, general population level.

00:43:59 Which is, there must be some work being done about that.

00:44:04 Yeah.

00:44:04 That privacy always gets in the way.

00:44:06 You know?

00:44:06 The privacy just makes it so hard to write that software.

00:44:09 It's all for the greater good.

00:44:11 But on a personal level, maybe, do you remember what was done with Watson, the IBM software, but taking the history of a patient and making a diagnosis of the patient in an automated way?

00:44:25 So maybe that's a possibility using AI or machine learning in a way that the processor, I wouldn't say less prone to error, but maybe it could be, you know, a safeguard or a backup for the doctor, for example.

00:44:41 Yeah, that's a really good point.

00:44:42 Something that verify the information and say, okay, the probability this being the illness is this much or could be this other problem, this other.

00:44:52 Yeah, when I was young, thinking about careers, you know, people always said, oh, you could become a doctor and you're always going to have a good job.

00:44:58 And it's always going to, you know, that is a stable, reliable job.

00:45:02 There are always going to be people and they're always going to need health care.

00:45:05 And if you want to be safe, you become a doctor or, you know, of course, if you're under a resident as well.

00:45:09 But that was a part of the message, I thought.

00:45:11 And I don't know that that's necessarily true anymore.

00:45:13 There is a physical part that is not going to go away.

00:45:16 It's not going away, not today, not in 10 years, 15 years.

00:45:21 But there's another part of the whole process that could be, I would say, improved by technology.

00:45:28 Yeah, for sure.

00:45:29 I mean, we saw some projects where they took mammogram pictures.

00:45:34 And the AIs were doing better than the radiologists on predicting cancer.

00:45:38 There's some stuff they took on doctor's notes and then figured out the readmission rates.

00:45:44 And actually, the AI was doing better on that.

00:45:46 And I can see a world where, like, a doctor is a skilled scientist who understands the body, but is also largely acting as a, like, a very knowledgeable counselor to help understand what the machines are saying.

00:46:01 It's going to be interesting.

00:46:01 Yeah.

00:46:02 Yeah.

00:46:02 There'll always be a place for doctors, but I think it's going to shift a little.

00:46:05 It'll be interesting.

00:46:06 All right.

00:46:07 Well, I guess we're going to probably leave it there just for the sake of time.

00:46:10 So it's all very interesting.

00:46:11 But we've got to ask you all the last final two questions, of course.

00:46:15 So just quickly go through both these.

00:46:17 We won't have a lot of time.

00:46:18 So, Giuseppe, I'll start with you.

00:46:20 Favorite editor or what you use day to day?

00:46:23 And then notable PyPI package.

00:46:25 I use Sublime Text with Anaconda, and I love it.

00:46:29 And that Anaconda is a plugin that makes Python editing better, not Anaconda, the distribution that distributes scientific packages.

00:46:36 That's correct.

00:46:37 Pretty clear for everyone, yeah?

00:46:40 And favorite package, I guess, I'll go with the request just because it saved my day in so many different occasions.

00:46:49 It is special.

00:46:50 Brian?

00:46:51 I'm a polyglot when it comes to editors.

00:46:53 I work most of it's in Jupyter for side projects.

00:46:56 Depending on how big the project is, if it's smaller, I'll just use Vim on Linux or Notepad, Wordpads, lightweight text editors on Windows.

00:47:05 Or if I do want a full IDE on Linux, I think it's pronounced Genie, G-E-A-N-Y.

00:47:09 Okay.

00:47:10 And then I'll pull up PyCharm on Windows.

00:47:12 And as for a package, I'm going to go kind of far from the usual fold, I think, here.

00:47:18 For one of my side projects where there's a technical program that runs some calculations, but it just spits data to the terminal.

00:47:26 But I want to run it async, and I've used a package called Sarge.

00:47:30 Sarge, okay.

00:47:31 Yeah, like Sargent and all.

00:47:33 Yeah.

00:47:33 To run it.

00:47:34 It's a wrapper around subprocess, I guess.

00:47:36 But it handles all of the pipes, the standard in, standard out, standard error, so that you don't get lockups from buffers filling up.

00:47:45 Oh, wow.

00:47:45 Okay.

00:47:46 Continuously flushes them and makes them available as capture objects that then you can pull and parse and spit back to the console if you want.

00:47:55 And it's like a version 0.1.5 or something, so it's still not only early development, but for what I've needed it for, it's worked really well.

00:48:03 That's cool.

00:48:04 So that's like that building block idea, right?

00:48:06 So now you can take these other processes and really easily click them together.

00:48:10 Mm-hmm.

00:48:10 Nice.

00:48:11 I love it.

00:48:11 Teresa?

00:48:12 As far as editors, I'm a big Jupyter fan, but also I just use Atom.

00:48:17 Nothing too crazy there.

00:48:18 And package-wise, I'll say one that's not necessarily my all-time favorite, but it saved me a ton of time recently.

00:48:25 So I'll give a little shout-out to OpenPyExcel, which is just a really convenient way to work with Excel sheets, especially if people want to save data in multiple tabs.

00:48:33 It's really very, very helpful.

00:48:35 Oh, that's cool.

00:48:36 Yeah, I've played just a little bit with that, and that is great.

00:48:38 And I think it's really relevant to the audience who would be interested in this particular show, right?

00:48:43 Like, very likely they've got some data in Excel and they want to just interact with it.

00:48:47 Well, here's a nice way to automate that from Python.

00:48:50 It's cool.

00:48:50 Yeah.

00:48:51 I haven't used it yet, but I'm planning on it.

00:48:52 Yeah, it's really good.

00:48:54 It'll let you just, like, tab through all the tabs that you might not be able to get if you just saved as a CSV and really very, very intuitive, I think.

00:49:01 You could even do formatting, I think, like colors and formulas and stuff like that.

00:49:05 It's pretty sweet.

00:49:06 Yeah, I think so.

00:49:07 I haven't gotten too much into that aspect, but I think that you can.

00:49:09 I think so, too.

00:49:10 I've just never needed to, like, programmatically set a color, but I could see how you might someday.

00:49:14 All right.

00:49:16 Well, thank you all for being on the show.

00:49:17 It's been really great to hear your stories and thanks for coming on and sharing them with everyone.

00:49:21 Thank you.

00:49:21 Thank you very much for the opportunity.

00:49:23 Really appreciate it.

00:49:24 Yeah, you bet.

00:49:24 Bye, everyone.

00:49:27 This has been another episode of Talk Python to Me.

00:49:29 Guests on this episode have been Giuseppe Consolo, Brian Skin, and Teresa Borkush.

00:49:34 It's been brought to you by Vetteri and Rollbar.

00:49:37 Vetteri will connect job seekers with thousands of great companies.

00:49:42 Make Monday something to celebrate.

00:49:44 Visit talkpython.fm/Vetteri.

00:49:46 That's V-E-T-T-E-R-Y.

00:49:48 And get a $500 bonus if you accept a job through them.

00:49:51 Rollbar takes the pain out of errors.

00:49:54 They give you the context and insight you need to quickly locate and fix errors that might have gone unnoticed until your users complain, of course.

00:50:02 As Talk Python to Me listeners, track a ridiculous number of errors for free at rollbar.com slash talkpythontome.

00:50:09 Want to level up your Python?

00:50:11 If you're just getting started, try my Python jumpstart by building 10 apps or our brand new 100 days of code in Python.

00:50:17 And if you're interested in more than one course, be sure to check out the Everything Bundle.

00:50:21 It's like a subscription that never expires.

00:50:23 Be sure to subscribe to the show.

00:50:26 Open your favorite podcatcher and search for Python.

00:50:28 We should be right at the top.

00:50:29 You can also find the iTunes feed at /itunes, Google Play feed at /play, and direct RSS feed at /rss on talkpython.fm.

00:50:38 This is your host, Michael Kennedy.

00:50:40 Thanks so much for listening.

00:50:42 I really appreciate it.

00:50:43 Now, get out there and write some Python code.

00:50:45 Thank you.

00:50:45 Thank you.

00:50:45 Thank you.

00:50:45 Thank you.

00:50:45 Thank you.

00:50:45 Thank you.

00:50:46 Thank you.

00:50:46 Thank you.

00:50:46 Thank you.

00:50:47 Thank you.

00:50:47 Thank you.

00:50:47 Thank you.

00:50:47 Thank you.

00:50:48 Thank you.

00:50:49 Thank you.

00:50:49 Thank you.

00:50:50 Thank you.

00:50:50 Thank you.

00:50:50 Thank you.

00:50:51 Thank you.

00:50:51 Thank you.

00:50:52 Thank you.

00:50:52 Thank you.

00:50:53 Thank you.

00:50:53 Thank you.

00:50:53 Thank you.

00:50:53 Thank you.

00:50:54 Thank you.

00:50:54 Thank you.

00:50:55 Thank you.

00:50:55 Thank you.

00:50:56 Thank you.

00:50:57 Thank you.

00:50:57 Thank you.

00:50:58 Thank you.

00:50:59 Thank you.

00:50:59 Thank you.

00:50:59 Thank you.

00:51:01 Thank you.

00:51:01 you you you Thank you.

00:51:05 Thank you.

