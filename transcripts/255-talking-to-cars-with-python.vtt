WEBVTT

00:00:00.060 --> 00:00:06.040
Modern cars have become mobile computer systems with many small computers running millions of lines of code.

00:00:06.040 --> 00:00:10.420
On this episode, we plug a little Python into those data streams.

00:00:10.420 --> 00:00:17.980
You'll meet Shea Newton, who is a Python developer and who has worked on autonomous cars and is currently at ActiveState.

00:00:17.980 --> 00:00:23.960
This is Talk Python To Me, episode 255, recorded February 25th, 2020.

00:00:23.960 --> 00:00:43.840
Welcome to Talk Python To Me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities.

00:00:43.840 --> 00:00:47.920
This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy.

00:00:47.920 --> 00:00:51.660
Keep up with the show and listen to past episodes at talkpython.fm.

00:00:52.060 --> 00:00:54.060
And follow the show on Twitter via at Talk Python.

00:00:54.060 --> 00:00:57.580
This episode is sponsored by Datadog and Clubhouse.

00:00:57.580 --> 00:01:01.200
Please check out what they're offering during their segments. It really helps support the show.

00:01:01.200 --> 00:01:03.100
Shea, welcome to Talk Python To Me.

00:01:03.100 --> 00:01:04.400
Hi, thank you for having me.

00:01:04.400 --> 00:01:09.180
It's great to have you here. And by have you here, I mean literally have you here.

00:01:09.180 --> 00:01:15.540
I've done a few recordings on location in Portland, but this is live from the Talk Python studio, right?

00:01:15.540 --> 00:01:18.400
Yeah, great setup. I'm happy to be here.

00:01:18.400 --> 00:01:20.000
Yeah, thanks. I'm really happy to have you here as well.

00:01:20.080 --> 00:01:22.060
It's going to be a lot of fun to talk about cars.

00:01:22.060 --> 00:01:27.580
When I grew up, cars were these like dirty, greasy things.

00:01:27.580 --> 00:01:29.480
I hated work on cars.

00:01:29.480 --> 00:01:33.760
Like probably I would have done different stuff with my life if I didn't hate working on cars so much.

00:01:33.760 --> 00:01:38.640
I actually used to race motorcycles and we would rebuild engines and we would take them apart.

00:01:38.640 --> 00:01:39.800
And it was ridiculous.

00:01:39.800 --> 00:01:43.280
Those things had to be rebuilt like every month the way they worked.

00:01:43.280 --> 00:01:45.240
Luckily, it was not very expensive, the parts.

00:01:45.740 --> 00:01:48.960
So I didn't really hate mechanics, but I don't know, I always just would bang my hand.

00:01:48.960 --> 00:01:49.480
Yeah, yeah.

00:01:49.480 --> 00:01:54.180
I just didn't like working on cars. I always admired people who could, but I was really good at computers.

00:01:54.180 --> 00:01:56.360
And now cars are computers?

00:01:56.360 --> 00:01:57.020
Yeah, yeah.

00:01:57.020 --> 00:01:57.680
Is that how it is?

00:01:57.680 --> 00:02:02.980
Yeah, I think people are out there hacking in the grease and in the computer of their car too.

00:02:02.980 --> 00:02:03.340
Yeah.

00:02:03.340 --> 00:02:04.040
Yeah, yeah.

00:02:04.040 --> 00:02:04.640
Super cool.

00:02:04.800 --> 00:02:05.500
Yeah, absolutely.

00:02:05.500 --> 00:02:12.260
So that's the topic for the show today is to talk about talking to your car with Python, which I think is going to be real fun actually.

00:02:12.260 --> 00:02:12.660
Yeah, yeah.

00:02:12.660 --> 00:02:13.060
Nice.

00:02:13.060 --> 00:02:15.880
Now, before we get to that, of course, let's start with your story.

00:02:15.880 --> 00:02:17.100
How did you get into programming in Python?

00:02:17.100 --> 00:02:21.420
Yeah, I went to the University of Idaho for a computer science degree.

00:02:21.420 --> 00:02:26.420
It was just something that was itching the back of my brain that I wanted to learn how to do.

00:02:26.780 --> 00:02:28.380
And yeah, I jumped straight into it.

00:02:28.380 --> 00:02:37.640
Today, I work for ActiveState as a developer advocate, and I'm actually just kind of out spreading the word a little bit about what cool things that they're working on.

00:02:37.640 --> 00:02:40.820
Yeah, well, tell us what a developer advocate does.

00:02:40.820 --> 00:02:42.820
Yeah, good question.

00:02:42.820 --> 00:02:54.220
Yeah, so some of the day-to-day for me is reaching out to open source communities, maintainers, just about ways that ActiveState can work with them, about the cool things that they're doing.

00:02:54.640 --> 00:02:59.200
Developer advocate, reach out, talk to the community, talk to open source maintainers.

00:02:59.200 --> 00:03:07.100
My impression is that there's like these different roles that developer advocates play, and they can vary really dramatically.

00:03:07.100 --> 00:03:10.840
Sometimes that's giving speeches at like conferences or user groups.

00:03:10.840 --> 00:03:21.840
Maybe it's like, I'm going to travel on site to a customer site, and they're trying to adopt some technology, and I'm going to sit with them, almost be like a drop-in consultant expert.

00:03:22.300 --> 00:03:28.780
There's also the ones who maybe write blog posts or whatever, like all of the above.

00:03:28.780 --> 00:03:30.120
I don't know what you're doing.

00:03:30.120 --> 00:03:31.260
Yeah, a little bit of all that.

00:03:31.260 --> 00:03:32.460
There's some blog post writing.

00:03:32.460 --> 00:03:35.600
I was just at the Developer Week 2020 conference in Oakland.

00:03:35.600 --> 00:03:38.980
I'll be at Interop in Austin later this year.

00:03:38.980 --> 00:03:43.500
Yeah, just kind of toes in a lot of the communication sides of the work.

00:03:43.580 --> 00:03:46.820
Yeah, it's not the main topic, but what do you think the qualifications are?

00:03:46.820 --> 00:04:00.280
And also, I should maybe just throw out there, back in episode numbers, escaping my mind, I did an episode with Paul Everett, Matt McKay, Cecil Phillip, about being a developer advocate for their different companies.

00:04:00.360 --> 00:04:03.220
So if people really want to dive into it, they can go check that out.

00:04:03.220 --> 00:04:04.860
But what do you think the qualifications are?

00:04:04.860 --> 00:04:11.140
How do you go from, yeah, I can get this code to compile, or I can write a website in Blask.

00:04:11.860 --> 00:04:14.680
Now I'm representing the company as like an expert.

00:04:14.680 --> 00:04:15.540
Yeah, yeah.

00:04:15.540 --> 00:04:16.380
In a public forum.

00:04:16.380 --> 00:04:17.820
In a public way.

00:04:17.820 --> 00:04:20.780
I think part of it is an empathy for the developer.

00:04:20.780 --> 00:04:26.800
I think there's the technical know-how, but there's two sides of like what even developer advocate might mean.

00:04:26.800 --> 00:04:31.860
So there's advocating to the developer from the company, but there's also advocating for the developer internally.

00:04:31.860 --> 00:04:35.200
Almost being a channel from the community back to the team.

00:04:35.200 --> 00:04:36.880
Yeah, and saying this is the kind of thing that's important.

00:04:36.880 --> 00:04:42.820
This is the kind of thing that people are actually needing to use it for, the problems that they've come up against.

00:04:42.820 --> 00:04:46.340
And I think that that's something that I like to bring to the job.

00:04:46.340 --> 00:04:47.960
Well, it sounds like a really fun job.

00:04:47.960 --> 00:04:49.020
Thanks, yeah.

00:04:49.020 --> 00:04:54.140
Now, you told us you got into programming at Idaho, University of Idaho.

00:04:54.140 --> 00:04:55.140
What, University?

00:04:55.140 --> 00:04:56.260
Yeah, University of Idaho.

00:04:56.260 --> 00:04:57.040
University of Idaho.

00:04:57.040 --> 00:04:57.580
Okay, cool.

00:04:57.580 --> 00:04:59.040
And how about Python?

00:04:59.040 --> 00:04:59.880
How'd you come to that?

00:04:59.880 --> 00:05:05.240
So even kind of in the earliest days, so that curriculum was kind of based on C and C++.

00:05:05.640 --> 00:05:11.140
But as I moved through the program, Python just showed up as the glue that held things together along the way.

00:05:11.140 --> 00:05:17.920
And quick scripts, rapid development for things that we were working on outside of class, independent projects.

00:05:17.920 --> 00:05:25.220
And the longer I was in the world of programming, the more Python showed up as this glue between things.

00:05:25.220 --> 00:05:28.360
And sometimes I was able to devote a whole project to it.

00:05:28.360 --> 00:05:32.000
And sometimes it was just one-off things that I learned as I went.

00:05:32.000 --> 00:05:33.140
This is an interesting take.

00:05:33.240 --> 00:05:41.860
I definitely think that Python is much more applicable because it can consume or glue together these other things, right?

00:05:41.860 --> 00:05:42.200
Yeah.

00:05:42.200 --> 00:05:52.460
I was just talking to somebody and they were talking about, it's really cool that we can take Python and we can then hide away really old Fortran code for linear algebra.

00:05:52.460 --> 00:05:55.920
Or we can hide away the C library that nobody really wants to work with.

00:05:55.920 --> 00:06:00.340
But we can use the C API to create a package around it and no one has to know.

00:06:00.340 --> 00:06:05.140
But it's like 50-year-old tested code that nobody can get to work, but it doesn't matter.

00:06:05.140 --> 00:06:06.500
I think that's so powerful.

00:06:06.960 --> 00:06:07.280
Yeah.

00:06:07.280 --> 00:06:25.160
I think that another thing that's interesting is, well, my sort of hypothesis is that companies that say that they develop in maybe Go or C or some other language, if you ask them if they are also using Python, I'm almost certain that they'll all say, oh yeah, Python 2.

00:06:25.160 --> 00:06:25.640
You know?

00:06:25.640 --> 00:06:26.340
Right.

00:06:26.340 --> 00:06:26.700
Yeah.

00:06:26.700 --> 00:06:27.420
It's just there.

00:06:27.420 --> 00:06:29.380
It's just so ubiquitous.

00:06:29.640 --> 00:06:29.860
Nice.

00:06:29.860 --> 00:06:30.200
Yeah.

00:06:30.200 --> 00:06:30.380
Yeah.

00:06:30.380 --> 00:06:30.880
It's very cool.

00:06:30.880 --> 00:06:32.900
So you just saw it showing up everywhere.

00:06:32.900 --> 00:06:34.640
You're like, I probably need to know this.

00:06:34.640 --> 00:06:34.920
Yeah.

00:06:34.920 --> 00:06:36.620
I need to get much better.

00:06:36.620 --> 00:06:36.900
Yeah.

00:06:36.900 --> 00:06:37.280
Yeah.

00:06:37.280 --> 00:06:40.680
A little bit like you have to know JavaScript if you're going to work on the web.

00:06:40.680 --> 00:06:41.000
Yes.

00:06:41.000 --> 00:06:41.340
Yeah.

00:06:41.340 --> 00:06:41.740
Yeah.

00:06:41.740 --> 00:06:42.300
Absolutely.

00:06:42.300 --> 00:06:43.360
Super cool.

00:06:43.360 --> 00:06:43.720
Okay.

00:06:43.720 --> 00:06:45.620
So that's a little bit about you.

00:06:45.620 --> 00:06:52.320
There's a couple of angles I want to take here all around talking to cars with Python.

00:06:52.320 --> 00:06:55.860
First, let's start with science fiction.

00:06:55.860 --> 00:06:56.600
Yeah.

00:06:56.600 --> 00:06:58.060
That's kind of not science fiction.

00:06:58.060 --> 00:06:58.260
Sure.

00:06:59.100 --> 00:07:00.640
I mean, it feels like science fiction.

00:07:00.640 --> 00:07:05.940
So to me, when I was in school, when I was in college, you know, I took just a couple of

00:07:05.940 --> 00:07:11.640
programming classes for some requirements, not a CS degree, but to me, it felt like artificial

00:07:11.640 --> 00:07:12.220
intelligence.

00:07:12.220 --> 00:07:16.700
It was people working in Lisp and they were trying to pass the Turing test.

00:07:16.700 --> 00:07:22.360
Like if you have a chat, literally a text chat with my program and you are tricked into

00:07:22.360 --> 00:07:25.440
thinking it's a real human, well, then it must be real.

00:07:25.440 --> 00:07:25.800
Right.

00:07:25.800 --> 00:07:26.200
Yeah.

00:07:26.200 --> 00:07:29.280
And that, you know, never really worked very well.

00:07:29.280 --> 00:07:29.880
One.

00:07:29.880 --> 00:07:31.800
Two, it was not very impressive.

00:07:31.800 --> 00:07:32.440
Right.

00:07:32.440 --> 00:07:37.300
And then, you know, it felt like AI was never really going anywhere.

00:07:37.300 --> 00:07:42.920
And then all of a sudden, you know, we rented a Tesla, not too long, just for a few days.

00:07:43.460 --> 00:07:46.540
And it was just driving around on its own in traffic.

00:07:46.540 --> 00:07:48.220
Like that is really far from.

00:07:48.220 --> 00:07:48.480
Yeah.

00:07:48.480 --> 00:07:49.060
It's incredible.

00:07:49.060 --> 00:07:50.120
I can have a text chat.

00:07:50.120 --> 00:07:51.420
That kind of works.

00:07:51.420 --> 00:07:51.720
Yeah.

00:07:51.720 --> 00:07:52.200
Right.

00:07:52.200 --> 00:07:56.940
It's so that's why I say science fiction, because I feel like, you know, that part of science

00:07:56.940 --> 00:07:58.860
fiction is kind of arrived.

00:07:59.020 --> 00:07:59.220
Yeah.

00:07:59.220 --> 00:08:01.440
We're seeing a lot of incredible advances.

00:08:01.440 --> 00:08:06.020
And I think that machine learning and artificial intelligence is accelerating that.

00:08:06.020 --> 00:08:06.620
Absolutely.

00:08:06.620 --> 00:08:07.000
Yeah.

00:08:07.000 --> 00:08:08.420
And you think Python is.

00:08:08.420 --> 00:08:11.540
It's the de facto way to go about that for sure.

00:08:11.540 --> 00:08:11.780
Really?

00:08:11.780 --> 00:08:12.100
Yeah.

00:08:12.100 --> 00:08:12.680
In my mind.

00:08:12.680 --> 00:08:13.060
Yeah.

00:08:13.060 --> 00:08:14.100
For yeah.

00:08:14.180 --> 00:08:16.000
handling data for machine learning.

00:08:16.000 --> 00:08:17.520
I mean, the libraries are out there.

00:08:17.520 --> 00:08:19.460
It's just super powerful tool for that.

00:08:19.460 --> 00:08:22.080
Now, you did a little bit of work around this kind of stuff.

00:08:22.080 --> 00:08:25.840
Can you give us a sense of just like what kind of libraries might be involved or like what

00:08:25.840 --> 00:08:28.660
kind of even just what kind of code do we better write?

00:08:28.660 --> 00:08:29.820
What kind of sensors are there?

00:08:29.820 --> 00:08:31.860
Like what's that world look like as a developer?

00:08:31.860 --> 00:08:32.100
Oh, yeah.

00:08:32.100 --> 00:08:33.560
For cars specifically.

00:08:33.560 --> 00:08:41.180
For Python, there's a layer on top of Ross called Rosspy, which is an incredible platform

00:08:41.180 --> 00:08:45.080
for talking to sensors and collecting data.

00:08:45.080 --> 00:08:52.100
So sensor data, get a view of the world around you or actuating controls on a robot that Python

00:08:52.100 --> 00:08:52.340
has.

00:08:52.340 --> 00:08:54.420
So Ross is the robot operating system.

00:08:54.420 --> 00:08:54.780
Yeah.

00:08:54.780 --> 00:08:55.260
Yeah.

00:08:55.260 --> 00:08:59.520
And Rosspy is the Python API for talking to Ross.

00:08:59.520 --> 00:08:59.980
Yes.

00:08:59.980 --> 00:09:05.780
So part of the way this might work is you just treat the car like a robot.

00:09:05.780 --> 00:09:06.680
Yeah, absolutely.

00:09:06.680 --> 00:09:11.780
I think that we can, as our cars, like you said, get more and more like computers.

00:09:11.780 --> 00:09:15.860
And as we want computers to drive them, they're just robots.

00:09:15.860 --> 00:09:16.180
Yeah.

00:09:16.180 --> 00:09:16.500
Yeah.

00:09:16.500 --> 00:09:21.520
Well, you know, jumping just a little bit ahead to some of the stuff, we'll come back to this

00:09:21.520 --> 00:09:22.880
self-driving a bit more maybe.

00:09:22.880 --> 00:09:30.040
But we were talking earlier about just can we quantify how much this is true or not true

00:09:30.040 --> 00:09:31.960
about whether cars are like computers.

00:09:32.600 --> 00:09:36.540
And if you go by lines of code, it's definitely in the realm of computers.

00:09:36.540 --> 00:09:37.180
Absolutely.

00:09:37.180 --> 00:09:38.780
Lots and lots of lines of code.

00:09:38.780 --> 00:09:40.920
Random modern car, what would you say?

00:09:40.920 --> 00:09:42.720
Yeah.

00:09:42.720 --> 00:09:43.660
Too many to count.

00:09:43.660 --> 00:09:45.340
Too many for one person to manage.

00:09:45.340 --> 00:09:47.620
So I did a quick search earlier.

00:09:47.620 --> 00:09:51.960
And I, you know, according to Google, I'm not sure exactly what it's basing this on.

00:09:52.220 --> 00:09:58.620
But it says that the modern car with their infotainment and their cloud stuff and all

00:09:58.620 --> 00:10:03.040
that sort of thing, it says uses basically a hundred million lines of code.

00:10:03.040 --> 00:10:03.840
That's boggling.

00:10:03.840 --> 00:10:04.120
Yeah.

00:10:04.120 --> 00:10:04.480
Yeah.

00:10:04.480 --> 00:10:06.500
So that apparently comes from Wired.

00:10:06.500 --> 00:10:14.380
So to give you a sense, that's 5% as much code as all of Google as a company, like all

00:10:14.380 --> 00:10:15.220
of their services.

00:10:15.220 --> 00:10:15.700
Yeah.

00:10:15.700 --> 00:10:16.740
That's wild.

00:10:17.140 --> 00:10:23.440
We also looked, and if you look at Windows 10, Windows is not typically accused of being

00:10:23.440 --> 00:10:27.120
like a thin, bloat-free operating system.

00:10:27.120 --> 00:10:29.760
I mean, neither is macOS either, really.

00:10:29.760 --> 00:10:35.480
But it's definitely not considered like a lightweight, like mini operating system, right?

00:10:35.480 --> 00:10:35.640
Yeah.

00:10:35.640 --> 00:10:35.920
Yeah.

00:10:35.920 --> 00:10:37.040
It's the real deal.

00:10:37.040 --> 00:10:40.000
Well, Windows 10 has 50 million lines of code.

00:10:40.000 --> 00:10:44.240
So the modern car, we're not talking self-driving Tesla or nothing.

00:10:44.240 --> 00:10:46.200
We're talking like Kia or something, right?

00:10:46.200 --> 00:10:46.920
Yeah, absolutely.

00:10:46.960 --> 00:10:47.940
A hundred million lines of code.

00:10:47.940 --> 00:10:50.080
That's a serious bit of programming.

00:10:50.080 --> 00:10:50.660
Yeah.

00:10:50.660 --> 00:10:51.880
It's the, yeah.

00:10:51.880 --> 00:10:54.240
Incredible effort of decades.

00:10:54.240 --> 00:10:54.740
Yeah.

00:10:54.740 --> 00:10:59.160
So it's pretty interesting just to think of how much computation is going on.

00:10:59.160 --> 00:11:04.140
Also, I think I heard somewhere that there's not just like a central computer, but there's

00:11:04.140 --> 00:11:08.020
a bunch of little micro computers and they need to interact with each other, right?

00:11:08.020 --> 00:11:08.900
Yeah, absolutely.

00:11:08.900 --> 00:11:09.020
Absolutely.

00:11:09.020 --> 00:11:15.860
Little computers all over the car that are talking to each other in their own sort of protocol

00:11:15.860 --> 00:11:18.380
or the CAN protocol, which is the premise for that.

00:11:18.380 --> 00:11:21.800
I wonder if car technology had been adopted later.

00:11:21.800 --> 00:11:25.300
You know, how much would this just look like microservices with discovery?

00:11:25.300 --> 00:11:25.720
Yeah.

00:11:25.720 --> 00:11:26.080
Yeah.

00:11:26.080 --> 00:11:27.220
Great, great question.

00:11:27.220 --> 00:11:27.540
Right.

00:11:27.540 --> 00:11:30.660
Because it's not JSON buzzing around the wire, is it?

00:11:30.780 --> 00:11:31.320
No, no.

00:11:31.320 --> 00:11:32.580
No, it's just raw bytes.

00:11:32.580 --> 00:11:33.340
Yeah.

00:11:33.340 --> 00:11:38.880
Which is fine for performance and stuff, but I have no idea what the connectivity, like the

00:11:38.880 --> 00:11:41.540
network cabling between these little micro computers are.

00:11:41.540 --> 00:11:44.000
But there's a ton of computation going on in these cars, right?

00:11:44.000 --> 00:11:44.740
Yeah, absolutely.

00:11:44.740 --> 00:11:50.680
Every, I mean, from the big stuff, like pushing the brake pedal to the little stuff, like turning

00:11:50.680 --> 00:11:56.060
on an overhead light, everything is in a modern car is letting it so, the car's aware of it

00:11:56.060 --> 00:11:58.280
in many places when you do things like that.

00:11:58.280 --> 00:11:58.500
Right.

00:11:58.500 --> 00:12:03.260
I mean, traditionally, older cars, maybe there's some little micro controllers in like an eight

00:12:03.260 --> 00:12:06.040
set, eight track cassette player or something.

00:12:06.140 --> 00:12:10.200
But when you push on the brake, that pushed directly on a lever, which pushed on some hydraulics,

00:12:10.200 --> 00:12:13.420
which then pushed on a cap, the brake cap, whatever they're called.

00:12:13.420 --> 00:12:15.120
See, I don't work on cars.

00:12:15.120 --> 00:12:16.300
And it makes it stop, right?

00:12:16.300 --> 00:12:18.280
Creates friction, heat goes in the air, car stops.

00:12:18.280 --> 00:12:21.220
But now, not so much.

00:12:21.220 --> 00:12:27.780
I mean, it's like all the stuff that you do, turning on windshield wipers, like my car is

00:12:27.780 --> 00:12:29.000
fly by wire, right?

00:12:29.000 --> 00:12:29.220
Yeah.

00:12:29.220 --> 00:12:34.140
Like I push on the brake, I push on the gas, and it interprets what that should mean for

00:12:34.140 --> 00:12:34.740
it to go.

00:12:34.740 --> 00:12:35.660
Yeah, absolutely.

00:12:36.000 --> 00:12:36.260
It does.

00:12:36.260 --> 00:12:39.360
So there's a lot of data zooming around, right?

00:12:39.360 --> 00:12:39.900
Oh, yeah.

00:12:39.900 --> 00:12:40.480
Yeah.

00:12:40.480 --> 00:12:40.840
Yeah.

00:12:40.840 --> 00:12:46.460
So you gave a talk on this at Portland PDX Python meetup, right?

00:12:46.460 --> 00:12:47.060
Yeah, yeah.

00:12:47.060 --> 00:12:47.980
Yeah, that's cool.

00:12:47.980 --> 00:12:51.620
And I'll definitely link to the video that was recorded there.

00:12:51.620 --> 00:12:52.960
And I'll link to that video there.

00:12:52.960 --> 00:12:59.260
But you had this graph of like all the data going along as just a Kia, some kind of Kia

00:12:59.260 --> 00:12:59.960
Nero or something.

00:12:59.960 --> 00:13:01.060
It was accelerating, right?

00:13:01.060 --> 00:13:01.680
Yep, yep.

00:13:01.680 --> 00:13:05.420
Just the data that you have to, the noise you have to filter through.

00:13:05.860 --> 00:13:09.540
And just what the bytes look like as you're looking at activity grow.

00:13:09.540 --> 00:13:10.060
Yeah.

00:13:10.060 --> 00:13:10.400
Right.

00:13:10.400 --> 00:13:10.700
Yeah.

00:13:10.700 --> 00:13:11.400
Super cool.

00:13:11.400 --> 00:13:12.860
Let's talk about that for a while.

00:13:12.860 --> 00:13:15.320
Let's talk about talking to cars.

00:13:15.320 --> 00:13:16.820
Surprising, not surprising?

00:13:16.820 --> 00:13:17.220
I don't know.

00:13:17.220 --> 00:13:18.980
It's a little surprising to me, I guess.

00:13:19.060 --> 00:13:25.800
But cars generally have the same architecture for like their communication protocols and their

00:13:25.800 --> 00:13:26.660
hardware and stuff, right?

00:13:26.660 --> 00:13:33.980
My understanding is that cars at least have to have an interface for this OBD2 port, whether

00:13:33.980 --> 00:13:36.940
that's an international or a federal standard, I can't remember.

00:13:36.940 --> 00:13:43.900
But a way for things like emissions tests to plug in and pull the vehicle for data, very

00:13:43.900 --> 00:13:44.580
specific data.

00:13:44.580 --> 00:13:45.840
So there's that.

00:13:45.840 --> 00:13:49.600
And most cars are still using this CAN protocol and this CAN bus.

00:13:49.600 --> 00:13:52.540
I think that that's pretty much the standard over these things.

00:13:52.540 --> 00:13:53.320
Right, right, right.

00:13:53.420 --> 00:13:58.020
And I suspect that's largely due to the suppliers and the OEMs.

00:13:58.020 --> 00:14:01.700
If you're going to make a car, you don't make the brakes from scratch necessarily.

00:14:01.700 --> 00:14:04.240
Maybe you buy them from Bosch or you buy them somewhere else.

00:14:04.240 --> 00:14:06.600
And those things will have to be interoperable.

00:14:06.600 --> 00:14:07.440
And they do.

00:14:07.440 --> 00:14:11.080
And there's also a history of things already having safety qualifications.

00:14:11.080 --> 00:14:15.580
So the work that's involved in having a new technology brought into a car is incredible.

00:14:16.080 --> 00:14:23.260
And so if something already exists that has the safety rating for it, it can be very cost

00:14:23.260 --> 00:14:24.720
effective to just maintain.

00:14:24.720 --> 00:14:25.200
Right.

00:14:25.200 --> 00:14:26.640
It's almost like medical, right?

00:14:26.640 --> 00:14:32.360
It's like once this thing's approved, it's a huge barrier to dethrone it or whatever because

00:14:32.360 --> 00:14:33.980
you've got to take anything new.

00:14:33.980 --> 00:14:35.460
I can imagine that.

00:14:35.460 --> 00:14:42.460
So OBD, onboard diagnostics, if you get your registration renewed in a lot of places in Oregon,

00:14:42.640 --> 00:14:48.780
where we are in California and probably places in Europe, you've got to yearly, every couple

00:14:48.780 --> 00:14:52.380
of years, have your car evaluated to see how well it's doing.

00:14:52.380 --> 00:14:52.720
Yeah.

00:14:52.720 --> 00:14:57.820
So those places, when I had a car that burned fuel, I don't know anymore, but I did.

00:14:57.820 --> 00:15:01.320
We would go there and they would plug it in and they would put me in this little closet

00:15:01.320 --> 00:15:03.160
thing and say, wait, wait for five minutes.

00:15:03.160 --> 00:15:05.080
So the car would like run and stuff would happen.

00:15:05.080 --> 00:15:08.320
And then they would unplug it and they would say, okay, you can go or you can't.

00:15:08.320 --> 00:15:10.900
You know, you got to go get this thing fixed or whatever.

00:15:11.840 --> 00:15:15.140
So that's kind of some of the stuff that we're talking about, right?

00:15:15.140 --> 00:15:17.540
They're plugging into the same thing that we could talk to you with Python.

00:15:17.540 --> 00:15:18.420
Yeah, absolutely.

00:15:18.420 --> 00:15:25.520
So the talk that you mentioned was specifically about using that OBD port to pull your vehicle

00:15:25.520 --> 00:15:28.400
for information, unpack and get a better look at it.

00:15:28.400 --> 00:15:33.820
Things like your emissions tester is plugging into that port using the accessible data.

00:15:33.820 --> 00:15:38.980
There's also, I think the insurance companies are doing some driver monitoring.

00:15:38.980 --> 00:15:39.680
Yeah, absolutely.

00:15:39.820 --> 00:15:41.400
My daughter recently went through this.

00:15:41.400 --> 00:15:42.940
She's going to be 20.

00:15:42.940 --> 00:15:43.900
She's 19 now.

00:15:43.900 --> 00:15:49.700
And she bought her own car and her insurance was surprisingly expensive for her.

00:15:49.700 --> 00:15:52.280
She's like, whoa, this is pricey.

00:15:52.280 --> 00:15:55.760
But her insurance company did offer like, we will send you this dongle thing.

00:15:55.760 --> 00:16:00.080
You can plug into your car and it will monitor all sorts of things.

00:16:00.080 --> 00:16:04.680
It'll monitor your braking rate, your acceleration rate, your turning and like all these things.

00:16:04.680 --> 00:16:08.760
And then we'll give you a price based on analytics.

00:16:08.760 --> 00:16:09.440
Yeah.

00:16:09.440 --> 00:16:10.800
How well do they think you drive?

00:16:10.800 --> 00:16:12.940
To me, I was like, there's no way that's going in my car.

00:16:12.940 --> 00:16:13.160
Yeah.

00:16:13.160 --> 00:16:14.300
Like, forget this.

00:16:14.300 --> 00:16:15.460
Like, I'm an adult.

00:16:15.460 --> 00:16:16.220
I don't need that thing.

00:16:16.220 --> 00:16:18.880
But it turns out it was only there for two months.

00:16:18.880 --> 00:16:21.000
And then they said, okay, we've got enough information.

00:16:21.000 --> 00:16:23.120
You can return it now.

00:16:23.120 --> 00:16:23.520
Okay.

00:16:23.520 --> 00:16:24.880
So it's like a-

00:16:24.880 --> 00:16:25.580
Evaluation or something.

00:16:25.580 --> 00:16:26.320
An evaluation period.

00:16:26.460 --> 00:16:29.960
It's not like you permanently, at least for her company, you didn't permanently install it.

00:16:29.960 --> 00:16:33.280
But yeah, they were plugging, I guess, into the same data.

00:16:33.280 --> 00:16:33.620
Yeah.

00:16:33.620 --> 00:16:34.460
That's my impression.

00:16:34.460 --> 00:16:37.340
There's a lot of applications for it.

00:16:37.340 --> 00:16:42.580
I think just looking at the Wikipedia page or something, it's a little, makes my eyes glaze

00:16:42.580 --> 00:16:46.560
over a little bit because it's so specific and particular.

00:16:46.560 --> 00:16:52.760
But there's also companies, there's one that I remember called Kama AI, I think that gives

00:16:52.760 --> 00:16:58.220
you a tool to plug in there and it helps visualize and represent that data in a little less eye

00:16:58.220 --> 00:16:59.060
glaze over way.

00:16:59.060 --> 00:16:59.340
Yeah.

00:16:59.340 --> 00:16:59.600
Okay.

00:16:59.600 --> 00:17:00.040
Yeah.

00:17:00.040 --> 00:17:00.520
Super cool.

00:17:00.520 --> 00:17:05.500
This portion of Talk Python To Me is brought to you by Datadog.

00:17:05.500 --> 00:17:07.100
Let me ask you a question.

00:17:07.100 --> 00:17:10.200
Do you have an app in production that's slower than you'd like?

00:17:10.200 --> 00:17:12.520
Is its performance all over the place?

00:17:12.520 --> 00:17:14.160
Sometimes fast, sometimes slow?

00:17:14.160 --> 00:17:16.300
Now here's the important question.

00:17:16.300 --> 00:17:17.600
Do you know why?

00:17:17.600 --> 00:17:19.400
With Datadog, you will.

00:17:19.400 --> 00:17:23.380
You can troubleshoot your app's performance with Datadog's end-to-end tracing.

00:17:23.380 --> 00:17:28.800
Use the detailed flame graphs to identify bottlenecks and latency in that finicky app of yours.

00:17:28.800 --> 00:17:32.420
Be the hero that got that app back on track at your company.

00:17:32.420 --> 00:17:36.640
Get started today with a free trial at talkpython.fm/Datadog.

00:17:38.520 --> 00:17:45.280
If we're going to talk to it, it's one thing to get a package, a little IoT thing from whatever insurance company.

00:17:45.280 --> 00:17:47.680
They say, find the hole that looks like this and jam it in.

00:17:47.680 --> 00:17:49.260
It would do crazy things.

00:17:49.260 --> 00:17:52.980
It would beep at you if it detected a bad driving experience.

00:17:52.980 --> 00:17:54.360
You're like, beep, beep, beep.

00:17:54.360 --> 00:17:55.020
Oh, no.

00:17:55.020 --> 00:17:57.020
There goes money permanently.

00:17:57.860 --> 00:18:09.440
Anyway, instead of that, if we want to talk to it, when I'm thinking OBD2 or CAN bus, I'm not thinking USB-C or Bluetooth or wireless as the plugin.

00:18:09.440 --> 00:18:13.340
So how do I plug in something that talks Python into this?

00:18:13.340 --> 00:18:13.720
Yeah.

00:18:13.980 --> 00:18:20.180
So basically with the right cables, you can set it up to just go from the USB on your computer.

00:18:20.180 --> 00:18:24.520
When I developed this program, it was just using Ubuntu 18 Linux machine.

00:18:24.520 --> 00:18:28.740
Plugs to, what is it, RS-232, something like that.

00:18:28.740 --> 00:18:30.040
Like the serial port equivalent.

00:18:30.040 --> 00:18:30.620
Yes.

00:18:30.620 --> 00:18:33.560
And then that converts to the specific OBD2 port.

00:18:33.560 --> 00:18:42.160
And from there, my kind of half joke is that talking to the car with Python is as easy as any other IO.

00:18:42.480 --> 00:18:51.540
Like if you've ever written to a file, opened a file and written to it and read from it, that's the equivalent of what you have to know how to do for communicating with your car.

00:18:51.540 --> 00:18:51.920
Okay.

00:18:51.920 --> 00:18:53.960
Once you get that all connected, that sounds pretty easy.

00:18:53.960 --> 00:18:57.640
You just open up something different to talk to the port that it's on or something.

00:18:57.640 --> 00:18:57.920
Exactly.

00:18:57.920 --> 00:18:58.340
Yeah.

00:18:58.340 --> 00:19:02.060
So in Python, the way you talk to files, create a with block.

00:19:02.060 --> 00:19:04.360
Open, you give it the file name.

00:19:04.360 --> 00:19:05.900
What is it, like with car?

00:19:05.900 --> 00:19:06.860
Or like, how do you do it?

00:19:06.860 --> 00:19:08.260
Yeah.

00:19:08.260 --> 00:19:10.560
What's the libraries for talking to the car?

00:19:10.560 --> 00:19:10.840
Yeah.

00:19:10.920 --> 00:19:17.240
So talking to the car, there's just a library called Python Can that's made to interface with Can Networks.

00:19:17.240 --> 00:19:19.720
And you just call open on it.

00:19:19.720 --> 00:19:19.960
Yeah.

00:19:19.960 --> 00:19:20.280
Okay.

00:19:20.280 --> 00:19:20.640
Awesome.

00:19:20.640 --> 00:19:21.960
So it really is kind of similar.

00:19:21.960 --> 00:19:22.160
Open, right.

00:19:22.160 --> 00:19:22.580
Yeah.

00:19:22.840 --> 00:19:23.080
Yeah.

00:19:23.080 --> 00:19:25.220
And then is it kind of like streaming data?

00:19:25.220 --> 00:19:28.340
You just say I'm reading from it and as soon as it sees a byte, it just kicks it out?

00:19:28.340 --> 00:19:29.900
Or how does it work?

00:19:29.900 --> 00:19:30.980
Something like that?

00:19:31.160 --> 00:19:37.240
You can pull for specific information or you can listen to streaming data and grab, I think it's called a PID.

00:19:37.240 --> 00:19:40.180
I'm not sure if that's the same process ID or not.

00:19:40.180 --> 00:19:44.180
But yeah, you can ask it for information and you can listen for information.

00:19:44.180 --> 00:19:51.400
So the example program that I'd written up asks for the standard, the version number of the standard that you're looking at in your vehicle.

00:19:51.400 --> 00:19:51.920
I see.

00:19:51.920 --> 00:19:52.360
Yeah.

00:19:52.360 --> 00:19:55.480
So you got to figure out what the communication protocol version is.

00:19:55.480 --> 00:19:55.740
Yes.

00:19:55.740 --> 00:19:56.440
So you know what the message is.

00:19:56.440 --> 00:19:57.260
Because things change.

00:19:57.260 --> 00:19:58.220
Yeah, for sure.

00:19:58.320 --> 00:20:07.300
And when you're dealing with the low real estate of bytes packed on the wire, things are subject to change in ways that break the math to unpack them.

00:20:07.300 --> 00:20:08.520
So you have to be careful.

00:20:08.520 --> 00:20:08.820
Okay.

00:20:08.820 --> 00:20:09.580
Yeah.

00:20:09.580 --> 00:20:13.520
So a lot of what's exchanged are hand data frames.

00:20:13.520 --> 00:20:14.260
Is that what they're called?

00:20:14.260 --> 00:20:14.640
Yeah.

00:20:14.640 --> 00:20:19.360
So these are like eight byte packets and you just have to figure out what they mean?

00:20:19.360 --> 00:20:19.820
Yeah.

00:20:19.820 --> 00:20:23.220
That's where kind of the standard comes in handy.

00:20:23.220 --> 00:20:36.020
So typically it will say you have these eight bytes and in order to do what you need to get out a floating point number, there's a bit shift operation and a division and some scalar to multiply it by.

00:20:36.020 --> 00:20:39.060
The first two bits indicate the message type.

00:20:39.060 --> 00:20:39.340
Yeah.

00:20:39.340 --> 00:20:42.720
The second two bits indicate like where it's or something like that.

00:20:42.720 --> 00:20:43.180
Yeah, totally.

00:20:43.180 --> 00:20:45.300
Where you got to go and like it's ultra packed.

00:20:45.300 --> 00:20:45.600
Yeah.

00:20:45.600 --> 00:20:45.920
Yeah.

00:20:45.920 --> 00:20:46.320
Yeah.

00:20:46.320 --> 00:20:46.540
Okay.

00:20:46.540 --> 00:20:50.360
I'm telling you, if this was created today, this would just be Jason.

00:20:50.360 --> 00:20:50.880
Yeah.

00:20:50.880 --> 00:20:51.520
Yeah.

00:20:52.520 --> 00:20:53.940
But it's built in a time.

00:20:53.940 --> 00:20:57.820
I don't know when this first came out, but it's got to be like 80s.

00:20:57.820 --> 00:21:00.320
Oh, I think it goes back further than that.

00:21:00.320 --> 00:21:00.740
You think so?

00:21:00.740 --> 00:21:01.300
Okay.

00:21:01.300 --> 00:21:02.420
Yeah.

00:21:02.420 --> 00:21:06.520
The computing power, they probably like, you know, we can't send the name over.

00:21:06.520 --> 00:21:07.500
We can send a bit.

00:21:07.500 --> 00:21:07.760
Yeah.

00:21:07.760 --> 00:21:08.780
That's where we're going to set the bit.

00:21:08.780 --> 00:21:09.680
Interesting.

00:21:09.680 --> 00:21:16.500
So there's probably some higher level APIs and packages as well that given one of those frames or information.

00:21:16.500 --> 00:21:17.320
There are.

00:21:17.320 --> 00:21:22.140
My example was just the program I'd written was just a hands-on go do it yourself.

00:21:22.140 --> 00:21:24.600
Hack on your car or listen to what your car is saying.

00:21:24.600 --> 00:21:30.360
Python does have an OBD package for doing this stuff specifically.

00:21:30.360 --> 00:21:35.580
If you want to level up and start collecting that data or writing your own applications for it.

00:21:35.580 --> 00:21:36.240
Right, right, right, right.

00:21:36.240 --> 00:21:38.480
Well, that sounds pretty awesome.

00:21:38.480 --> 00:21:40.960
I can imagine a bunch of fun use cases.

00:21:41.660 --> 00:21:55.100
Now, you said that maybe Tesla doesn't work with this format because some of the, at least it maybe doesn't have one of these ports, for example, potentially, because the purpose is gather like emissions data.

00:21:55.100 --> 00:21:55.520
Yeah.

00:21:55.520 --> 00:21:57.000
If you don't have emissions, you're like, well.

00:21:57.000 --> 00:22:05.340
I remember some press coming out a while ago about at least one model of Tesla that people noticed that there wasn't an OBD2 port for.

00:22:05.340 --> 00:22:10.260
And yeah, from what I could understand is that they didn't have to pass emission standards.

00:22:10.260 --> 00:22:12.600
So there was no reason to enforce it.

00:22:12.600 --> 00:22:12.860
Right.

00:22:12.860 --> 00:22:14.600
That they had that where other cars do.

00:22:14.600 --> 00:22:18.320
But I think recent Teslas, they've decided to incorporate it back.

00:22:18.320 --> 00:22:18.580
I see.

00:22:18.580 --> 00:22:19.980
Just to have some compatibility.

00:22:20.860 --> 00:22:25.580
I'm sure the native internals in Tesla are probably much more modern.

00:22:25.580 --> 00:22:26.040
Yeah.

00:22:26.040 --> 00:22:26.540
Yeah.

00:22:26.540 --> 00:22:32.940
There was some company, I think Japan, did like a teardown of a Model 3.

00:22:32.940 --> 00:22:35.620
It was like a car OEM manufacturer.

00:22:35.620 --> 00:22:37.560
Like they made transmissions or brakes or something.

00:22:37.560 --> 00:22:46.660
And they realized that for Tesla cars, there were many, many more parts that were from Tesla rather than third party parts.

00:22:46.660 --> 00:22:47.080
Interesting.

00:22:47.460 --> 00:22:52.900
And basically their self-driving technology was all like Tesla chips and whatnot.

00:22:52.900 --> 00:23:02.340
And they were basically concluding like Tesla is like six to seven years ahead because instead of waiting for all these OEMs to come along, there's like, no, they're just building it.

00:23:02.340 --> 00:23:04.020
And there's nobody they depend upon.

00:23:04.020 --> 00:23:09.260
That's why we are built like on this house of cards type of thing for all of our suppliers.

00:23:09.260 --> 00:23:10.680
So yeah, yeah.

00:23:10.680 --> 00:23:11.400
Pretty interesting.

00:23:11.400 --> 00:23:14.280
I'm sure there's different ways you can talk to Tesla as well.

00:23:14.280 --> 00:23:16.780
But these car companies, they don't like you to talk to their software.

00:23:16.780 --> 00:23:19.280
So some are pretty protective.

00:23:19.280 --> 00:23:23.680
There's the public CAN bus that's easy to tap into that has the OBD2 port.

00:23:23.680 --> 00:23:27.560
And then there's private CAN networks that are a little more invasive to get into.

00:23:27.560 --> 00:23:27.940
Okay.

00:23:27.940 --> 00:23:32.220
They're not publishing in easy to find places how to unpack those bites.

00:23:32.220 --> 00:23:40.340
But there are cars like I think Lincoln has a car called the MKZ that you can buy a kit for.

00:23:40.340 --> 00:23:44.980
And I think it's actually like supported by Lincoln or they, yeah.

00:23:44.980 --> 00:23:46.760
Endorsed somewhat.

00:23:46.760 --> 00:23:47.520
Endorsed somewhat.

00:23:47.520 --> 00:23:49.400
And it's for by wire control.

00:23:49.400 --> 00:23:52.160
It's for just hooking it up for autonomous vehicle testing.

00:23:52.320 --> 00:23:56.700
So at least Lincoln has seemed to have opened the door to this kind of stuff.

00:23:56.700 --> 00:23:57.000
Wow.

00:23:57.000 --> 00:23:57.880
That's pretty interesting.

00:23:57.880 --> 00:24:02.040
I guess you have to have something that will actually do the steering on the steering wheel.

00:24:02.040 --> 00:24:05.060
Like it's got to have a little bit of like lane assist or something.

00:24:05.060 --> 00:24:05.860
Yeah.

00:24:05.860 --> 00:24:06.280
Yeah.

00:24:06.280 --> 00:24:07.160
That's an interesting thing.

00:24:07.160 --> 00:24:09.220
Or how else are you going to make it like turn the wheel and press the brakes?

00:24:09.600 --> 00:24:17.660
There's one of the two organizations in Europe is doing, or last time I checked, was doing testing with actual robots in the car.

00:24:17.660 --> 00:24:21.780
So like an actual kind of humanoid shaped thing that would turn the.

00:24:21.780 --> 00:24:22.500
It pushes its leg.

00:24:22.500 --> 00:24:22.740
Yeah.

00:24:22.740 --> 00:24:23.700
It pushes the gas.

00:24:23.700 --> 00:24:23.940
Yeah.

00:24:23.940 --> 00:24:24.340
Yeah.

00:24:24.340 --> 00:24:27.700
It rotates the arm where there's a rotating front thing.

00:24:27.700 --> 00:24:29.020
Yeah.

00:24:29.020 --> 00:24:30.680
There's a lot of approaches to it.

00:24:30.680 --> 00:24:38.400
I think a lot of people are getting creative on how to do it, especially in cars where they don't necessarily have permission by the manufacturer to do it.

00:24:38.400 --> 00:24:39.400
They're like, you know.

00:24:39.400 --> 00:24:41.300
We don't need to get some of those expensive cars.

00:24:41.300 --> 00:24:44.160
We're going to get used, whatever, and just put the robot in it.

00:24:44.160 --> 00:24:44.460
Yeah.

00:24:44.460 --> 00:24:45.940
And it'll be fine.

00:24:45.940 --> 00:24:51.140
Well, it sounds kind of crazy, but at the same time, right, that cars are meant to be operated that way.

00:24:51.140 --> 00:24:51.440
Yeah.

00:24:51.440 --> 00:24:53.900
And so pretty high fidelity for driving.

00:24:53.900 --> 00:24:55.440
Interesting.

00:24:55.440 --> 00:24:55.660
Yeah.

00:24:55.660 --> 00:25:05.640
Well, I remember when I bought my car, we had to sign that we would not affect or modify or attempt to circumvent any bit of the software.

00:25:05.640 --> 00:25:06.080
Yeah.

00:25:06.260 --> 00:25:09.960
So if you change this, one, your warranty is voided.

00:25:09.960 --> 00:25:12.100
Two, we're going to be real angry.

00:25:12.100 --> 00:25:12.420
Yeah.

00:25:12.420 --> 00:25:12.780
Yeah.

00:25:12.780 --> 00:25:18.260
The anti-lock brakes, the lane assist, the airbags, all that stuff.

00:25:18.260 --> 00:25:19.600
They're like, stay away.

00:25:19.600 --> 00:25:20.060
Oh, yeah.

00:25:20.060 --> 00:25:23.320
It's a big, big do not try at home kind of situation.

00:25:23.320 --> 00:25:24.760
Like, the stakes are very high.

00:25:24.760 --> 00:25:25.180
Yeah.

00:25:25.380 --> 00:25:30.040
But there's some stuff, like, definitely reading the data, it seems like it's kind of okay.

00:25:30.040 --> 00:25:30.700
Oh, yeah.

00:25:30.700 --> 00:25:43.160
So as far as do not try at home, trying to affect a change in your car or, you know, cutting a cord and tapping into the private canvas or something like that's something I wouldn't recommend as an at-home thing, right?

00:25:43.160 --> 00:25:48.660
But, yeah, the data from the OBD2 port is just public access.

00:25:48.660 --> 00:25:52.180
It's just read data or request something specific.

00:25:52.180 --> 00:25:53.660
But, yeah, it's your data.

00:25:53.660 --> 00:25:57.940
It's something that they're doing, that they're obligated to do.

00:25:57.940 --> 00:25:58.240
Yeah.

00:25:58.240 --> 00:25:59.560
And it's yours to take.

00:25:59.620 --> 00:26:02.860
Yeah, I mean, obviously, the insurance companies are doing it without real permission.

00:26:02.860 --> 00:26:06.620
So what kind of use cases do you see here?

00:26:06.620 --> 00:26:09.880
Like, there's the diagnostic side of things.

00:26:09.880 --> 00:26:11.500
There's the insurance side of things.

00:26:11.500 --> 00:26:15.520
But I feel like there's probably some fun data science that you could do there.

00:26:15.520 --> 00:26:16.520
Yeah, it's got to be.

00:26:16.520 --> 00:26:21.340
Yeah, it does seem like for the data curious, there's a lot of interesting data to collect.

00:26:21.340 --> 00:26:24.740
About your own driving patterns, about the fuel efficiency of your car.

00:26:24.860 --> 00:26:32.100
I just learned about some communities of people that are just trying to maximize their car for fuel efficiency with interesting fins and that kind of thing.

00:26:32.100 --> 00:26:40.720
And probably the data around how your car is behaving from something like this port would give you a little more insight into optimizing for things like that.

00:26:40.720 --> 00:26:41.580
Yeah, I would think so.

00:26:41.580 --> 00:26:48.700
I mean, that's definitely one of the first use cases I imagined was, well, maybe we could create our own little dongle that would create that data.

00:26:48.700 --> 00:27:00.440
Then we'd throw it into pandas and we'd start answering interesting questions and maybe even some ML models to say, people who drive like this, like, this is the most important thing for fuel efficiency.

00:27:00.440 --> 00:27:00.920
Yeah.

00:27:00.920 --> 00:27:03.900
Besides not just stomping on the gas, stomping on the brakes, right?

00:27:03.900 --> 00:27:09.120
But, like, maybe there's something that people are not totally clear about for certain vehicles.

00:27:09.120 --> 00:27:11.680
Or, I don't know, it just seems like a fun little research project.

00:27:11.680 --> 00:27:12.680
Yeah, I agree.

00:27:12.800 --> 00:27:16.960
I'd be fascinated to see where that stuff, where a project like that would go.

00:27:16.960 --> 00:27:23.400
It seems like often when you set machine learning to a task, the things that it finds for you are wild and surprising.

00:27:23.400 --> 00:27:25.200
Yeah, they can be totally surprising.

00:27:25.200 --> 00:27:28.360
So, yeah, I think it'd be fun to do some data science.

00:27:28.360 --> 00:27:30.520
What do you think about IoT type stuff?

00:27:30.520 --> 00:27:34.940
Like, what kind of devices could we build and then stick on that port, right?

00:27:34.940 --> 00:27:36.520
Like, Raspberry Pi, maybe?

00:27:36.520 --> 00:27:40.760
Well, with the right cables, you can hook up a Raspberry Pi for sure.

00:27:41.060 --> 00:27:43.540
I mean, like I said, that Linux computer I had, you can...

00:27:43.540 --> 00:27:51.300
You have power in the car, so you just wire that, like, to your, you know, maybe to a fuse or over to just, like, plug it into the cigarette lighter.

00:27:51.300 --> 00:27:51.860
Yeah, yeah.

00:27:51.860 --> 00:27:52.780
Who uses those anymore.

00:27:52.780 --> 00:27:57.560
One of the incredible things about Python is that basically it just works everywhere, right?

00:27:57.560 --> 00:28:03.960
I mean, it's the community and the development of the language has been awesome, and it's multi-platform.

00:28:03.960 --> 00:28:06.980
And so, if Python can run on it, you can listen to what your car is doing.

00:28:06.980 --> 00:28:09.900
I wonder if you could get MicroPython or CircuitPython to work.

00:28:10.460 --> 00:28:12.220
That's a whole other level of small.

00:28:12.220 --> 00:28:14.840
That goes from Raspberry Pi to $5 microcontroller.

00:28:14.840 --> 00:28:26.220
It seems to me like one obvious requirement, which I honestly haven't done enough with, but I think it would work, is if you just had USB support for that adapter, right?

00:28:26.220 --> 00:28:26.580
Yeah.

00:28:26.580 --> 00:28:35.640
And, you know, I have a CircuitPython, I don't know, it's laying right here somewhere, and it has a little micro USB to, like, communicate with the computer and, like, to, like, write code on it and stuff.

00:28:35.800 --> 00:28:36.840
So, potentially.

00:28:36.840 --> 00:28:37.700
Yeah, yeah.

00:28:37.700 --> 00:28:38.360
Potentially.

00:28:38.360 --> 00:28:40.420
Yeah, something to collect on.

00:28:40.420 --> 00:28:40.800
Yeah.

00:28:40.920 --> 00:28:41.240
Okay.

00:28:41.240 --> 00:28:43.580
Well, yeah, I think it would be super fun.

00:28:43.580 --> 00:28:54.280
I'm not sure I want to mess with my car or not, but it definitely sounds like if I was looking for a cool little IoT project, you know, this is something that it might be really cool to plug into.

00:28:54.520 --> 00:28:55.260
Yeah, yeah.

00:28:55.260 --> 00:29:01.340
I think just listening, getting a feel for what the data looks like, just at that level, is kind of fascinating to me.

00:29:01.340 --> 00:29:05.580
But then starting to unpack and look at the way your vehicle talks.

00:29:05.580 --> 00:29:11.240
But, yeah, then taking it to an application would be, yeah, could be a great direction.

00:29:11.240 --> 00:29:14.140
You know, if people are looking for, like, a science fair project.

00:29:14.140 --> 00:29:14.680
Oh, yeah.

00:29:14.680 --> 00:29:19.720
Or something, like, all right, well, we're going to ask, you know, some of the parents to install this on their car.

00:29:19.840 --> 00:29:22.580
Well, so you don't have to install anything.

00:29:22.580 --> 00:29:24.440
So you don't have to put software on your car.

00:29:24.440 --> 00:29:26.480
No, I mean, like, just plug in the thing into the port.

00:29:26.480 --> 00:29:26.840
Oh, gotcha.

00:29:26.840 --> 00:29:27.780
Yeah, yeah, yeah.

00:29:27.780 --> 00:29:30.360
Just that on its own is a little spooky, like, yeah.

00:29:30.360 --> 00:29:30.740
Yeah.

00:29:30.740 --> 00:29:32.780
You're like, I don't really want to put that in my car.

00:29:32.780 --> 00:29:34.100
I'm sure there's some parents, though.

00:29:34.100 --> 00:29:36.400
They're like, but my kid wants to do data science.

00:29:36.400 --> 00:29:36.960
Yeah.

00:29:36.960 --> 00:29:39.480
We'll plug this into the car and see what happens.

00:29:39.480 --> 00:29:44.880
I heard something a while ago that it might be spookier to plug a USB into your car sometimes.

00:29:45.060 --> 00:29:50.780
I don't remember what vehicle it was, but somebody installed Doom to play on their little console.

00:29:50.780 --> 00:29:52.380
On their little infotainment console?

00:29:52.380 --> 00:29:56.720
Yeah, because you could just put something that said runmecar.exe or something.

00:29:56.720 --> 00:29:57.600
Yeah.

00:29:57.600 --> 00:30:02.360
Yeah, it must be like a specific infotainment center or a specific car.

00:30:02.360 --> 00:30:02.640
Yeah.

00:30:02.640 --> 00:30:05.300
That was some easy, quick way.

00:30:05.300 --> 00:30:05.820
Yeah.

00:30:05.980 --> 00:30:10.180
So just plugging in anywhere in your car has some, your car's listening and it's trying

00:30:10.180 --> 00:30:12.280
to decide if it's something it needs to do something about.

00:30:12.280 --> 00:30:16.360
A lot of times it figures out, is it like some sort of audio device it can play and put

00:30:16.360 --> 00:30:17.520
up on the screen or whatever?

00:30:17.520 --> 00:30:22.840
And if it has a runme.exe and it's going to run it, that's a little confusing.

00:30:22.840 --> 00:30:23.900
Yeah.

00:30:23.900 --> 00:30:29.700
I bring that up just because I think that plugging in and listening to the port for your diagnostics

00:30:29.700 --> 00:30:33.080
is like no more invasive than it would be to...

00:30:33.080 --> 00:30:34.540
I would suspect it's less, right?

00:30:34.540 --> 00:30:36.540
If that port is read-only.

00:30:36.540 --> 00:30:36.920
Yeah.

00:30:36.920 --> 00:30:37.460
Right?

00:30:37.460 --> 00:30:39.160
As opposed to...

00:30:39.160 --> 00:30:40.020
It's a really good point.

00:30:40.020 --> 00:30:45.600
I mean, it's definitely a little nerve-wracking to plug any USB thing into anything else.

00:30:45.600 --> 00:30:46.160
Yeah.

00:30:46.160 --> 00:30:46.700
Yeah.

00:30:46.700 --> 00:30:48.280
Because you don't know, right?

00:30:48.280 --> 00:30:53.780
It could have, you know, Windows has that, like, it'll try to like boot up certain types

00:30:53.780 --> 00:30:56.800
of things if it's in there and probably Mac does as well.

00:30:56.800 --> 00:30:59.600
And yeah, you don't want to put that in untrusted places.

00:30:59.600 --> 00:31:00.460
Super cool.

00:31:00.460 --> 00:31:04.300
So let's maybe dive into a little bit more about the RossPi stuff.

00:31:04.520 --> 00:31:10.260
So with the diagnostics thing, you can definitely, you know, see what's happening, right?

00:31:10.260 --> 00:31:14.060
The brakes were applied, the car did this or that and so on.

00:31:14.060 --> 00:31:18.260
With RossPi, it's more like, like we said, like kind of like a robot, right?

00:31:18.260 --> 00:31:18.780
Yeah.

00:31:18.780 --> 00:31:19.100
Yeah.

00:31:19.160 --> 00:31:24.180
So I think a lot of companies that are doing research and development or maybe even just

00:31:24.180 --> 00:31:29.040
development for autonomous vehicles and robots are using Ross.

00:31:29.040 --> 00:31:31.840
It is really powerful for data collection.

00:31:31.840 --> 00:31:36.580
So what we've been talking about so far really is just about collecting and analyzing and visualizing

00:31:36.580 --> 00:31:39.440
and drawing inferences from data, right?

00:31:39.440 --> 00:31:39.800
Yeah.

00:31:39.800 --> 00:31:42.380
But RossPi probably could also take actions.

00:31:42.380 --> 00:31:43.000
For sure.

00:31:43.000 --> 00:31:43.560
For sure.

00:31:43.560 --> 00:31:44.060
It could.

00:31:44.460 --> 00:31:51.800
And I think the power of like RossPi over just Ross is the ability to kind of rapidly

00:31:51.800 --> 00:31:58.080
develop in much shorter amount of code and also to hook into these like super powerful

00:31:58.080 --> 00:32:00.320
machine learning and data analytics libraries.

00:32:00.320 --> 00:32:06.420
I could write this from scratch and see, or I could pip install Terrace plus this and then

00:32:06.420 --> 00:32:07.360
we're off to the races.

00:32:07.360 --> 00:32:07.800
Yeah.

00:32:07.800 --> 00:32:14.780
Do you think a lot of people out there are using like RossPi plus OpenCV, like computer

00:32:14.780 --> 00:32:16.240
vision stuff or things like that?

00:32:16.240 --> 00:32:18.760
Or is it got to have some sort of sensor, right?

00:32:18.760 --> 00:32:20.900
And vision seems like some of the options.

00:32:20.900 --> 00:32:21.380
Oh yeah.

00:32:21.380 --> 00:32:21.820
Yeah.

00:32:21.820 --> 00:32:28.060
I think because Ross is open source, there's a lot of people developing for specific sensors.

00:32:28.060 --> 00:32:32.880
And so a lot of times when a new sensor is out or some new form of vision, you'll see

00:32:32.880 --> 00:32:35.800
development and incorporating into the Ross ecosystem.

00:32:35.800 --> 00:32:37.240
I see like LIDAR or something like that.

00:32:37.240 --> 00:32:37.680
Yeah, for sure.

00:32:37.680 --> 00:32:38.140
Okay.

00:32:38.140 --> 00:32:38.720
Yeah.

00:32:38.720 --> 00:32:40.040
Did you ever get to play LIDAR?

00:32:40.040 --> 00:32:40.520
Yeah.

00:32:40.520 --> 00:32:42.220
I've played with some LIDAR.

00:32:42.220 --> 00:32:43.160
It's kind of fun.

00:32:43.160 --> 00:32:44.560
Maybe tell people what that is.

00:32:44.560 --> 00:32:45.680
I don't know.

00:32:45.680 --> 00:32:45.840
Yeah.

00:32:45.840 --> 00:32:46.620
That's a great question.

00:32:46.620 --> 00:32:47.500
What does it stand for?

00:32:47.500 --> 00:32:50.180
Why does it not just blind everybody around him, right?

00:32:50.180 --> 00:32:50.700
If it's lasers?

00:32:50.700 --> 00:32:51.640
Yeah.

00:32:51.640 --> 00:32:52.000
Yeah.

00:32:52.000 --> 00:32:53.780
That's funny.

00:32:53.780 --> 00:32:58.460
I've had LIDARs on my desk and I've hacked around and watched myself on the visualization,

00:32:58.460 --> 00:33:00.220
but I don't know a lot about them.

00:33:00.220 --> 00:33:01.260
I think that it's...

00:33:01.260 --> 00:33:06.400
So it's like basically, if I understand it, it shoots out like a spanning beam of lasers

00:33:06.400 --> 00:33:11.280
and then it looks at the reflections on what lights up and can tell like distance and sort

00:33:11.280 --> 00:33:12.100
of 3D sensing.

00:33:12.100 --> 00:33:12.640
Yeah.

00:33:12.640 --> 00:33:12.960
Yeah.

00:33:12.960 --> 00:33:17.900
So the sophisticated LIDAR sensors do have multiple layers and they spin 360 degrees

00:33:17.900 --> 00:33:21.060
and you can get these beautiful renderings of the environment.

00:33:21.060 --> 00:33:23.940
But there's simpler ones that are more of a 2D thing.

00:33:23.940 --> 00:33:24.140
Okay.

00:33:24.140 --> 00:33:28.040
Or just a particular field of view that are just getting obstacle distance.

00:33:28.040 --> 00:33:30.260
It's like 20 degrees left.

00:33:30.260 --> 00:33:31.360
There's a thing here.

00:33:31.360 --> 00:33:31.860
Exactly.

00:33:31.860 --> 00:33:36.700
There's a gap for this distance, which might be all you need if you're like trying to develop

00:33:36.700 --> 00:33:38.740
a little, like a Roomba or something.

00:33:38.740 --> 00:33:39.700
A Roomba doesn't care.

00:33:39.700 --> 00:33:40.180
Yeah.

00:33:40.180 --> 00:33:42.220
Up, down or whatever, perspective or hills.

00:33:42.220 --> 00:33:44.140
It's just like, I'm stuck on a cliff.

00:33:44.140 --> 00:33:44.820
Like, no, you're not.

00:33:44.820 --> 00:33:46.660
You're on a shoe, but also a hump yard.

00:33:46.660 --> 00:33:48.880
It doesn't really distinguish a whole lot.

00:33:48.880 --> 00:33:49.180
Yeah.

00:33:49.180 --> 00:33:49.520
Yeah.

00:33:49.520 --> 00:33:54.620
And I think that some of those sensors, LIDAR is one that can be prohibitively expensive

00:33:54.620 --> 00:33:59.760
when you really get all the bells and whistles, but like a simple field of view sensor might

00:33:59.760 --> 00:34:00.800
be a lot less expensive.

00:34:00.800 --> 00:34:03.880
And so you can put it into a consumer electronics like a Roomba.

00:34:03.880 --> 00:34:04.820
Right, right, right.

00:34:04.820 --> 00:34:05.440
Yeah.

00:34:05.440 --> 00:34:10.800
So if you wanted to, I guess, so if people wanted to play more with the self-driving aspect or

00:34:10.800 --> 00:34:14.800
they don't really want to just hook this to a car and understand what the car is willing

00:34:14.800 --> 00:34:19.140
to tell them, but they want to put on all these sensors, maybe there's smaller devices that

00:34:19.140 --> 00:34:19.820
they could play with.

00:34:19.820 --> 00:34:22.460
And they could probably skip the OBD altogether.

00:34:22.460 --> 00:34:23.140
Yeah.

00:34:23.260 --> 00:34:24.340
use straight RossPi.

00:34:24.340 --> 00:34:24.960
For sure.

00:34:24.960 --> 00:34:30.080
RossPi is one of their first kind of example projects, just gives you a list of the hardware

00:34:30.080 --> 00:34:36.800
you need and some recommendations for soldering iron and a couple sensors that are affordable

00:34:36.800 --> 00:34:41.120
to make your own self-driving kind of cardboard box with a phone in it, you know.

00:34:41.120 --> 00:34:41.880
That's cool.

00:34:41.880 --> 00:34:43.100
It's totally cool.

00:34:43.100 --> 00:34:45.020
It's a pretty expensive self-driving box for cardboard.

00:34:45.020 --> 00:34:46.040
Yeah.

00:34:46.040 --> 00:34:47.380
The phone's the expensive part.

00:34:47.380 --> 00:34:47.700
Exactly.

00:34:48.820 --> 00:34:50.700
But no, it's amazing what you're able to do.

00:34:50.700 --> 00:34:55.500
And so hacking into these other systems or creating your own like that, like that RossPi

00:34:55.500 --> 00:34:58.800
example, you can experiment with pathfinding algorithms.

00:34:58.800 --> 00:35:00.780
You can experiment with computer vision.

00:35:00.780 --> 00:35:01.360
Yeah.

00:35:01.360 --> 00:35:06.980
There's lots of fantastic stuff built in to Ross and accessible with RossPi.

00:35:08.980 --> 00:35:11.880
This portion of Talk Python To Me is sponsored by Clubhouse.

00:35:11.880 --> 00:35:16.980
Clubhouse is a fast and enjoyable project management platform that breaks down silos and brings teams

00:35:16.980 --> 00:35:18.920
together to ship value, not features.

00:35:18.920 --> 00:35:23.660
Great teams choose Clubhouse because they get flexible workflows where they can easily customize

00:35:23.660 --> 00:35:29.240
workflow state for teams or projects of any size, advanced filtering, quickly filtering

00:35:29.240 --> 00:35:34.140
by project or team to see how everything is progressing, and effective sprint planning,

00:35:34.140 --> 00:35:38.340
setting their weekly priorities with iterations and then letting Clubhouse run the schedule.

00:35:38.540 --> 00:35:42.840
All of the core features are completely free for teams with up to 10 users.

00:35:42.840 --> 00:35:48.220
And as Talk Python listeners, you'll get two free months on any paid plan with unlimited users

00:35:48.220 --> 00:35:49.860
and access to the premium features.

00:35:49.860 --> 00:35:51.040
So get started today.

00:35:51.040 --> 00:35:55.260
Just click the Clubhouse link in your podcast player show notes or on the episode page.

00:35:55.260 --> 00:36:01.280
So there's two projects maybe that are worth like giving a shout out to.

00:36:01.280 --> 00:36:04.380
One that I recently learned about, I think it's pretty new.

00:36:04.380 --> 00:36:05.760
It's called Donkey Car.

00:36:05.760 --> 00:36:07.420
Oh yeah, that's a cool one.

00:36:07.420 --> 00:36:13.460
Yeah, so it's an open source DIY self-driving platform specifically for small cars, like

00:36:13.460 --> 00:36:17.600
little remote control cars you could pick up with your hand or even holding your hand.

00:36:17.600 --> 00:36:21.600
So it's an RC car plus a Raspberry Pi plus Python.

00:36:21.600 --> 00:36:26.440
In the Python side, that's Tornado, Keras, TensorFlow, and OpenCV.

00:36:26.440 --> 00:36:27.340
Oh wow.

00:36:27.540 --> 00:36:28.820
That looks really cool, doesn't it?

00:36:28.820 --> 00:36:29.900
Yeah.

00:36:29.900 --> 00:36:34.380
So if people are out there thinking of, oh, like maybe I'll try something, like that comes

00:36:34.380 --> 00:36:35.500
with a really simple API.

00:36:35.500 --> 00:36:41.560
And it says you can do things like make your own car that'll drive itself or drive a car

00:36:41.560 --> 00:36:46.260
with your phone or laptop or record images or train a neural net to drive a car on different

00:36:46.260 --> 00:36:46.600
tracks.

00:36:46.600 --> 00:36:49.460
Like maybe you drive it, then you say, see, do that.

00:36:49.460 --> 00:36:49.940
Yeah.

00:36:50.460 --> 00:36:51.880
Yeah, I think that that's fantastic.

00:36:51.880 --> 00:36:56.280
And the fact that it's kind of a nice out of box experience and you don't have to worry

00:36:56.280 --> 00:36:58.220
about getting something wrong and wiring it yourself.

00:36:58.220 --> 00:36:59.700
Yeah, they have a bunch of cool examples.

00:36:59.700 --> 00:37:04.460
You know, if I was like an engineering professor or something, I'd be super excited about all

00:37:04.460 --> 00:37:05.680
the stuff they got going on there.

00:37:05.680 --> 00:37:07.820
So the API is pretty simple.

00:37:07.820 --> 00:37:08.560
I looked at it.

00:37:08.560 --> 00:37:10.980
You just import Donkey.

00:37:12.420 --> 00:37:16.220
And then you create a vehicle and then you just like grab the camera and you tell it

00:37:16.220 --> 00:37:17.060
to do things and stuff.

00:37:17.060 --> 00:37:18.620
It's a really nice API.

00:37:18.620 --> 00:37:19.080
Wow.

00:37:19.080 --> 00:37:26.220
Another one that you brought up as we were talking before we hit record was this idea of programming

00:37:26.220 --> 00:37:26.920
a Roomba.

00:37:26.920 --> 00:37:27.300
Yeah.

00:37:27.300 --> 00:37:27.580
Right.

00:37:27.580 --> 00:37:30.180
I'm not sure everyone listening knows what a Roomba is.

00:37:30.180 --> 00:37:35.900
Like a Roomba is one of these little self-driving, self-navigating, self-vacuuming, vacuum driving.

00:37:35.900 --> 00:37:36.340
I think they're driving.

00:37:36.340 --> 00:37:36.800
Yeah.

00:37:36.800 --> 00:37:38.600
I mean as much as a vacuum drives.

00:37:38.600 --> 00:37:38.920
Yeah.

00:37:38.920 --> 00:37:39.780
We have one of those.

00:37:39.780 --> 00:37:41.400
My wife loves it periodically.

00:37:41.400 --> 00:37:42.400
It'll get stuck on stuff.

00:37:42.400 --> 00:37:45.860
She'll ask me to like dig it out, dig it back to its home so it's okay.

00:37:45.860 --> 00:37:50.520
But those are getting pretty sophisticated and you can control those and program them right

00:37:50.520 --> 00:37:50.900
now?

00:37:50.900 --> 00:37:51.340
Yeah.

00:37:51.340 --> 00:37:55.860
I mean this is another good question of what's officially endorsed by the company but I've

00:37:55.860 --> 00:37:56.620
had some friends.

00:37:56.620 --> 00:37:59.580
Don't want to return it after this maybe.

00:37:59.580 --> 00:38:00.080
Yeah.

00:38:00.080 --> 00:38:01.360
That have hacked on it.

00:38:01.360 --> 00:38:05.000
And it's cool because you have this baseline of performance that you're able to see with

00:38:05.000 --> 00:38:08.940
your vacuum and how it handles the obstacles in your house.

00:38:08.940 --> 00:38:14.460
But then you can also try out different pathfinding approaches and just see how it works.

00:38:14.460 --> 00:38:14.880
Right.

00:38:14.880 --> 00:38:19.600
It would be cool to put, I don't know how much of a, like a sensor array that that thing

00:38:19.600 --> 00:38:20.260
has on it.

00:38:20.260 --> 00:38:25.280
It feels like, I know the old ones, it was kind of a blind thing feeling its way through

00:38:25.280 --> 00:38:25.620
the room.

00:38:25.620 --> 00:38:27.780
It had like, it would go bonk, bonk into the wall.

00:38:27.780 --> 00:38:28.980
Like, okay, I guess that's a chair.

00:38:28.980 --> 00:38:30.600
We'll just like work our way.

00:38:31.060 --> 00:38:35.920
I think the newer ones are a little more advanced because we'll get like a map of where it cleaned.

00:38:35.920 --> 00:38:36.660
Oh, wow.

00:38:36.660 --> 00:38:37.120
Yeah.

00:38:37.120 --> 00:38:38.560
Like a 3D top down.

00:38:38.560 --> 00:38:43.440
It's like, oh, here's the top down view of where it thought the table was, you know?

00:38:43.440 --> 00:38:44.000
Oh, cool.

00:38:44.000 --> 00:38:45.040
It's much more advanced.

00:38:45.040 --> 00:38:48.420
So maybe you can get into those as well and get access to that information.

00:38:48.420 --> 00:38:48.960
Oh, yeah.

00:38:49.080 --> 00:38:51.620
I think that that, that'd be a great project.

00:38:51.620 --> 00:38:51.900
Yeah.

00:38:51.900 --> 00:38:54.480
Seeing where the Roombas have come, what sensors are there.

00:38:54.480 --> 00:38:54.940
Yeah.

00:38:54.940 --> 00:38:55.720
That'd be super fun.

00:38:55.720 --> 00:38:57.520
So I'll link both the donkey car.

00:38:57.520 --> 00:38:59.860
Well, that's easy, donkey car.com, but I'll link to it anyway.

00:38:59.860 --> 00:39:02.640
And then this Roomba Python API.

00:39:02.640 --> 00:39:06.000
So not only do you get a program it, you get a program it in Python.

00:39:06.000 --> 00:39:06.340
Yeah.

00:39:06.340 --> 00:39:08.200
Yeah.

00:39:08.200 --> 00:39:09.200
That's, that's pretty cool.

00:39:09.200 --> 00:39:14.980
When you think about the self-driving cars, like how computationally intensive do you have

00:39:14.980 --> 00:39:17.060
to be just to do those types of things?

00:39:17.060 --> 00:39:19.060
Can you have like a really, they said Raspberry Pi safe.

00:39:19.060 --> 00:39:22.040
or a donkey car, but maybe you have to only run simple algorithms.

00:39:22.040 --> 00:39:22.600
I don't know.

00:39:22.600 --> 00:39:24.380
You know, do you need GPUs?

00:39:24.380 --> 00:39:26.760
I know Nvidia is working on a self-driving car.

00:39:26.760 --> 00:39:27.320
Yeah.

00:39:27.320 --> 00:39:28.620
I mean, I heard that at some point.

00:39:28.620 --> 00:39:32.280
I think it's just as much as they're able to fit.

00:39:32.280 --> 00:39:35.200
I think that whatever's available, they'll use.

00:39:35.200 --> 00:39:40.460
And I think that a lot of the argument for using low-level languages is trying to get as

00:39:40.460 --> 00:39:41.740
much speed as possible.

00:39:41.740 --> 00:39:42.180
Right.

00:39:42.180 --> 00:39:47.620
Because if you could take a higher res image, then that means a lot for figuring out what's

00:39:47.620 --> 00:39:47.980
out there.

00:39:47.980 --> 00:39:48.500
Absolutely.

00:39:48.820 --> 00:39:48.980
Yeah.

00:39:48.980 --> 00:39:49.400
Cool.

00:39:49.400 --> 00:39:50.240
All right.

00:39:50.240 --> 00:39:51.260
Well, I don't know.

00:39:51.260 --> 00:39:52.840
I'm, I'm inspired to work on something.

00:39:52.840 --> 00:39:55.660
I'm not sure I'm going to go hack my Roomba button.

00:39:55.660 --> 00:39:56.480
Maybe.

00:39:56.480 --> 00:39:58.840
Maybe.

00:39:58.840 --> 00:39:59.060
Yeah.

00:39:59.060 --> 00:39:59.740
It sounds really fun.

00:39:59.740 --> 00:40:02.060
And also now I want to know if my car has one of those ports.

00:40:02.060 --> 00:40:02.620
Yeah.

00:40:02.620 --> 00:40:04.720
I'll have to go check it out and see.

00:40:04.720 --> 00:40:05.460
All right.

00:40:05.460 --> 00:40:08.480
Well, this is really fun to talk about these things and we'll link to some of the stuff

00:40:08.480 --> 00:40:08.920
out there.

00:40:08.920 --> 00:40:09.720
I'll link to your talk.

00:40:09.720 --> 00:40:13.800
Maybe just give us a quick catch up on ActiveState while you're here as well.

00:40:13.800 --> 00:40:14.140
You know?

00:40:14.140 --> 00:40:15.000
Yeah.

00:40:15.160 --> 00:40:20.280
I've had a, I think it was Pete on to talk about machine learning libraries and stuff

00:40:20.280 --> 00:40:22.640
a while ago, but I haven't talked about ActiveState for a while.

00:40:22.640 --> 00:40:26.920
So we hear a lot about Anaconda and those types of distributions.

00:40:26.920 --> 00:40:30.480
It feels to me like ActiveState plays kind of in that realm.

00:40:30.700 --> 00:40:30.980
Yeah.

00:40:30.980 --> 00:40:38.440
And traditionally, ActiveState has been distributions in the same kind of vein as Anaconda, right?

00:40:38.440 --> 00:40:38.620
Okay.

00:40:38.620 --> 00:40:44.060
Just a big collection of popular packages that you don't have to worry about pip installing

00:40:44.060 --> 00:40:44.960
and that kind of thing.

00:40:44.960 --> 00:40:45.220
Okay.

00:40:45.220 --> 00:40:47.680
For Python and for Perl also.

00:40:47.680 --> 00:40:52.600
But now we're putting together a self-serve version of that.

00:40:52.600 --> 00:40:59.560
So you might think, oh, the ActivePython distribution has a lot of the great stuff I need, but there's

00:40:59.560 --> 00:41:02.000
500 packages in it and I only need 40.

00:41:02.000 --> 00:41:02.260
Right.

00:41:02.260 --> 00:41:02.560
Okay.

00:41:02.560 --> 00:41:07.940
So you can go in to the platform and say, these are my 40 packages that I'm interested in,

00:41:07.940 --> 00:41:12.180
pre-build it, test it for these OS and architectures.

00:41:12.180 --> 00:41:16.900
And then anybody who wants to use my project can pull it down and just have everything good

00:41:16.900 --> 00:41:17.260
to go.

00:41:17.260 --> 00:41:17.860
Okay, cool.

00:41:17.860 --> 00:41:23.600
And you can pick like different versions of Python or can you even configure how say Python

00:41:23.600 --> 00:41:25.660
is compiled or like what level?

00:41:25.660 --> 00:41:26.440
Yeah.

00:41:26.440 --> 00:41:26.720
Yeah.

00:41:26.720 --> 00:41:30.080
So there's multiple versions of Python.

00:41:30.080 --> 00:41:34.660
I think we're up to 3.8 or 3.9 now, like up to date with modern Python.

00:41:34.660 --> 00:41:37.200
Thousands of packages available.

00:41:37.200 --> 00:41:38.560
We're still in beta.

00:41:38.560 --> 00:41:44.180
So there's some flux in what builds and the information about the combinations of builds

00:41:44.180 --> 00:41:48.000
that you're trying is valuable to us and will make things better.

00:41:48.000 --> 00:41:48.320
Okay.

00:41:48.320 --> 00:41:48.700
Yeah.

00:41:48.700 --> 00:41:49.960
It sounds like a good project.

00:41:49.960 --> 00:41:54.300
And you're working on some ROS things there as well.

00:41:54.300 --> 00:41:57.820
It sounds like a village install isolated things.

00:41:57.820 --> 00:42:02.860
ROS is something that I think is one of the powerful things about the future of this platform

00:42:02.860 --> 00:42:03.500
that we're doing.

00:42:03.680 --> 00:42:08.660
ROS is a project that's notoriously difficult to install and difficult to update.

00:42:08.660 --> 00:42:12.960
I've spent multiple days getting ROS configured the way I need it.

00:42:12.960 --> 00:42:19.120
And so the vision behind what ActiveState is doing is that configuration is done on this

00:42:19.120 --> 00:42:21.380
builder of the ActiveState platform.

00:42:21.380 --> 00:42:22.380
You just pull it down.

00:42:22.380 --> 00:42:24.420
It's set up already for you.

00:42:24.420 --> 00:42:26.380
The same way a distribution would.

00:42:26.380 --> 00:42:26.680
Yeah.

00:42:26.680 --> 00:42:27.700
It's a little bit like Docker.

00:42:27.900 --> 00:42:31.200
I think of it as more of a pip amp than a full-on Docker.

00:42:31.200 --> 00:42:31.720
Okay.

00:42:31.720 --> 00:42:32.960
There is some runtime isolation.

00:42:32.960 --> 00:42:33.380
Yeah.

00:42:33.380 --> 00:42:36.500
I was thinking more of the, it comes in a way that you know that it's going to be set up

00:42:36.500 --> 00:42:36.920
to work.

00:42:36.920 --> 00:42:37.280
Yeah.

00:42:37.280 --> 00:42:38.920
Not so much the isolation side of Docker.

00:42:38.920 --> 00:42:39.200
Gotcha.

00:42:39.200 --> 00:42:39.740
Yeah.

00:42:39.740 --> 00:42:40.120
It is.

00:42:40.120 --> 00:42:46.620
So the power for, some of the power behind it for ROS, I think, is the same that applies

00:42:46.620 --> 00:42:51.120
to current things that we currently support like SciPy and NumPy that have C dependencies

00:42:51.120 --> 00:42:53.880
that you can get tangled trying to build them on your machine.

00:42:54.480 --> 00:43:01.120
So the builder on the platform tests and builds and gives it to you for your specific platform

00:43:01.120 --> 00:43:02.600
so that you don't have to untangle that.

00:43:02.600 --> 00:43:08.320
And the future of what the platform will be able to do is things like ROS, where it's just

00:43:08.320 --> 00:43:09.880
a pull it down.

00:43:09.880 --> 00:43:12.860
It works for you rather than having to do any of that yourself.

00:43:12.860 --> 00:43:13.720
Well, that sounds nice.

00:43:13.720 --> 00:43:14.300
Yeah.

00:43:14.300 --> 00:43:17.640
I mean, it's the fun part of programming, not the unfun part.

00:43:17.640 --> 00:43:18.220
It's funny.

00:43:18.220 --> 00:43:24.240
Like we have this expectation that when we install things like Spotify, it just works for us,

00:43:24.260 --> 00:43:24.380
right?

00:43:24.380 --> 00:43:25.640
That's pre-bundled, pre-built.

00:43:25.640 --> 00:43:30.440
But when it comes to like our developer environment, we still have to build everything from scratch.

00:43:30.440 --> 00:43:35.140
Like there's still this funny thing where developers are just going, okay, I have to build my new

00:43:35.140 --> 00:43:35.700
thing, right?

00:43:35.700 --> 00:43:41.000
So I think the idea is we get to a place where your dependencies are, you can install as easily

00:43:41.000 --> 00:43:42.160
as you could your browser.

00:43:42.160 --> 00:43:42.600
Yeah.

00:43:42.600 --> 00:43:43.640
Well, that's pretty cool.

00:43:43.640 --> 00:43:44.260
When is that coming?

00:43:44.260 --> 00:43:45.400
Or like...

00:43:45.400 --> 00:43:52.480
Oh, so the platform's live now and we're building up our catalog of Python and Perl for macOS,

00:43:52.480 --> 00:43:53.640
Windows and Linux.

00:43:53.640 --> 00:43:58.980
And the package list is growing and the potential for the language list to grow too.

00:43:58.980 --> 00:43:59.340
Yeah.

00:43:59.340 --> 00:43:59.700
Yeah.

00:43:59.700 --> 00:43:59.900
Yeah.

00:43:59.900 --> 00:44:00.180
Cool.

00:44:00.180 --> 00:44:00.660
All right.

00:44:00.660 --> 00:44:04.660
Well, let me just close this out with a couple of high-level questions about cars real quick

00:44:04.660 --> 00:44:04.960
here.

00:44:04.960 --> 00:44:12.220
So I opened the whole conversation as in science fiction is like here is now just science or

00:44:12.220 --> 00:44:15.020
engineering in some regards of self-driving cars.

00:44:15.160 --> 00:44:19.380
But we're still not out there where just self-driving cars are cruising around.

00:44:19.380 --> 00:44:25.400
Like I just read this morning, somebody had projected like a human onto the asphalt in the

00:44:25.400 --> 00:44:25.600
salt.

00:44:25.600 --> 00:44:27.360
And like Teslas were stopping that.

00:44:27.360 --> 00:44:27.560
Yeah.

00:44:27.560 --> 00:44:27.880
Yeah.

00:44:27.880 --> 00:44:28.720
Like we're always...

00:44:28.720 --> 00:44:31.560
There was a great article about salt circles around cars.

00:44:31.560 --> 00:44:31.980
Yes.

00:44:31.980 --> 00:44:32.380
Yes.

00:44:32.380 --> 00:44:35.220
I've seen like a car painted in it and it didn't get out.

00:44:35.220 --> 00:44:36.520
I can't cross the line.

00:44:36.520 --> 00:44:37.380
So yeah.

00:44:37.380 --> 00:44:37.540
Yeah.

00:44:37.540 --> 00:44:41.020
It's like the elephant that's tied down with a little tiny stake, right?

00:44:41.020 --> 00:44:42.780
But that's where the car version...

00:44:42.780 --> 00:44:46.760
Anyway, so having more experience than many people, what are your thoughts on this?

00:44:46.760 --> 00:44:49.200
Like, are you just amazed at where it is?

00:44:49.200 --> 00:44:53.140
Do you think we're going to get to the science fiction level of it or...

00:44:53.140 --> 00:44:54.220
Yeah.

00:44:54.220 --> 00:44:59.540
I think that I am amazed by what we're capable of with this technology.

00:44:59.540 --> 00:45:05.240
I think for me, aside from what we're capable of in our technology, I think because this is

00:45:05.240 --> 00:45:09.340
all so new and because there are things like 100,000 lines of code and we're coming from

00:45:09.340 --> 00:45:15.520
a system that has a foundation in building on safety assurances, there's a question that's

00:45:15.520 --> 00:45:20.180
still, I don't think, fully answered, which is how safe is safe enough for this new stuff?

00:45:20.180 --> 00:45:23.840
I think that some of the auto manufacturers are concerned about that.

00:45:23.840 --> 00:45:26.560
Certainly state and local governments are concerned about that.

00:45:26.560 --> 00:45:27.480
Like what...

00:45:27.480 --> 00:45:30.760
How safe is safe enough for it to be on the roads of our city, right?

00:45:30.760 --> 00:45:31.820
And I think that those...

00:45:31.820 --> 00:45:37.440
Right now, in my mind, that's one of the most significant challenges to AV technology.

00:45:37.480 --> 00:45:37.960
Yeah.

00:45:37.960 --> 00:45:41.040
And I think we might have to just get used to a different kind of safe.

00:45:41.040 --> 00:45:41.480
Yeah.

00:45:41.480 --> 00:45:50.120
So what I'm thinking is, if there's a person who is videoed being just run over by a self-driving

00:45:50.120 --> 00:45:57.580
car in some horrific way, even if there are 10% fewer wrecks and 100,000 people are not hurt,

00:45:57.580 --> 00:46:00.720
if there's a graphic example, right?

00:46:00.720 --> 00:46:02.240
That's going to stick in people's mind.

00:46:02.240 --> 00:46:04.620
That's going to run on news and people are going to go, cars are unsafe.

00:46:04.680 --> 00:46:05.480
We can't have this.

00:46:05.480 --> 00:46:11.520
And like, maybe they are unsafe somewhat, but they're less unsafe than like people driving

00:46:11.520 --> 00:46:11.860
cars.

00:46:11.860 --> 00:46:12.500
Potentially.

00:46:12.500 --> 00:46:17.000
I don't know if that's true, but it just might take us a different type of...

00:46:17.000 --> 00:46:19.960
We might have to all get used to it differently, right?

00:46:19.960 --> 00:46:21.480
That's a really interesting point.

00:46:21.480 --> 00:46:25.720
And I think that at the beginning, especially like when people are still trying to decide whether

00:46:25.720 --> 00:46:29.320
or not they are willing to trust this technology.

00:46:29.320 --> 00:46:31.140
Will you get in the car?

00:46:31.140 --> 00:46:31.520
Yeah.

00:46:31.520 --> 00:46:32.920
Like in that Uber that no one's in?

00:46:32.920 --> 00:46:38.860
It's really important for the community of people developing this technology not to violate

00:46:38.860 --> 00:46:40.180
the public's trust.

00:46:40.180 --> 00:46:46.040
And I think that really catering or just really keeping the public in mind is an important part

00:46:46.040 --> 00:46:47.680
of how the industry moves forward.

00:46:47.680 --> 00:46:52.040
I think if they're going to maintain the trust of the people that they'd like to be in these

00:46:52.040 --> 00:46:52.320
cars.

00:46:52.540 --> 00:46:52.620
Yeah.

00:46:52.620 --> 00:46:58.400
I also think it's a huge challenge to have a heterogeneous world, right?

00:46:58.400 --> 00:47:02.580
It's one thing to imagine a world with really clear painted lines and tons of self-driving

00:47:02.580 --> 00:47:04.900
cars that all communicate like, hey, I'm over here.

00:47:04.900 --> 00:47:06.960
I'm intending to turn or whatever.

00:47:06.960 --> 00:47:13.520
But if there's grumpy drivers at rush hour in there with them, like that's a whole different

00:47:13.520 --> 00:47:14.500
level of complexity.

00:47:14.500 --> 00:47:20.720
I like to think that each of the auto manufacturers with their own sort of machine learning decision

00:47:20.720 --> 00:47:26.000
making, there's going to be like different attitudes of Fords versus, you know, GMs or

00:47:26.000 --> 00:47:26.520
something, right?

00:47:26.520 --> 00:47:27.880
Like the Fords are grumpy on the freeway.

00:47:27.880 --> 00:47:29.820
The Cadillacs are super aggressive.

00:47:29.820 --> 00:47:30.160
Yeah.

00:47:30.160 --> 00:47:32.680
You can never merge when there's a Cadillac.

00:47:32.680 --> 00:47:33.240
Yeah.

00:47:33.240 --> 00:47:34.280
How interesting.

00:47:34.280 --> 00:47:35.080
Yeah.

00:47:35.080 --> 00:47:36.200
You know, it's probably true, right?

00:47:36.200 --> 00:47:39.280
Like if they have different models running, they're going to make different decisions.

00:47:39.280 --> 00:47:39.700
Yeah.

00:47:39.700 --> 00:47:40.320
Absolutely.

00:47:40.320 --> 00:47:40.920
Interesting.

00:47:40.920 --> 00:47:42.200
Well, we'll see if they learn.

00:47:44.060 --> 00:47:44.560
All right.

00:47:44.560 --> 00:47:47.760
Well, I guess, you know, probably that's a good place to leave it for the conversation.

00:47:47.760 --> 00:47:51.200
But I'm both somewhat hopeful for this technology.

00:47:51.200 --> 00:47:53.840
I'm mostly just really, really impressed with it.

00:47:53.840 --> 00:47:57.440
Although I'm not one of those people like I can't wait for self-driving cars to come because

00:47:57.440 --> 00:47:58.000
I hate driving.

00:47:58.000 --> 00:47:58.860
I like driving.

00:47:58.860 --> 00:47:59.500
I don't mind it.

00:47:59.500 --> 00:48:00.960
I actually don't have to commute that much.

00:48:00.960 --> 00:48:03.160
So it's no big, I guess maybe that's why I don't hate it.

00:48:03.160 --> 00:48:03.500
Yeah.

00:48:03.620 --> 00:48:07.720
But I do think it's interesting technology and it really blows my mind coming from the

00:48:07.720 --> 00:48:09.680
Turing test chat bot thing.

00:48:09.680 --> 00:48:10.100
Oh, yeah.

00:48:10.100 --> 00:48:10.860
Yeah.

00:48:10.860 --> 00:48:14.560
I was just learning a little bit about Eliza when I, like, I think it was written in the

00:48:14.560 --> 00:48:15.060
60s.

00:48:15.060 --> 00:48:15.280
Yeah.

00:48:15.280 --> 00:48:15.380
Yeah.

00:48:15.380 --> 00:48:18.040
That's like, I think that was one of the ones I was thinking of.

00:48:18.040 --> 00:48:18.240
Sure.

00:48:18.240 --> 00:48:19.180
Nice.

00:48:19.180 --> 00:48:20.220
All right.

00:48:20.220 --> 00:48:23.040
Now, Shay, before you get out of here, you got the two final questions.

00:48:23.040 --> 00:48:23.320
Yeah.

00:48:23.320 --> 00:48:25.600
If you're going to write some Python code, what editor do you use?

00:48:25.600 --> 00:48:26.000
Yeah.

00:48:26.240 --> 00:48:33.820
So I'm a VS Code person and I have had great experiences with both Vim and Emacs.

00:48:33.820 --> 00:48:36.320
And those were kind of driven by pair programming.

00:48:36.320 --> 00:48:38.120
I like to be able to jump in and pair.

00:48:38.120 --> 00:48:40.700
And so I've learned for the people that I was typically pairing for.

00:48:40.700 --> 00:48:46.520
And something that is a little easier barrier to entry like VS Code makes it much easier for

00:48:46.520 --> 00:48:49.240
me to pair regardless of preference usually.

00:48:49.240 --> 00:48:49.640
Right.

00:48:49.640 --> 00:48:50.140
And the tooling for Python.

00:48:50.140 --> 00:48:53.300
It's tough to jump in on Vim or whatever if you're not familiar with it.

00:48:53.300 --> 00:48:53.640
Yeah.

00:48:53.640 --> 00:48:55.480
I mean, just go like, all right, now exit.

00:48:56.020 --> 00:48:56.680
Yeah, exactly.

00:48:56.680 --> 00:48:57.440
Exactly.

00:48:57.440 --> 00:48:57.500
Yeah.

00:48:57.500 --> 00:48:59.300
And the tooling for Python for VS Code is solid.

00:48:59.300 --> 00:48:59.660
Yeah.

00:48:59.660 --> 00:49:01.440
I've never had a complaint there.

00:49:01.440 --> 00:49:02.100
Cool.

00:49:02.100 --> 00:49:02.580
All right.

00:49:02.580 --> 00:49:02.960
Good one.

00:49:02.960 --> 00:49:04.440
And then notable PyPI package?

00:49:04.440 --> 00:49:04.940
Yeah.

00:49:04.940 --> 00:49:08.980
So notable in a couple of ways for me is the DocOpt package.

00:49:08.980 --> 00:49:15.800
So it's for sure my most used library just because it takes scripts that I write and programs

00:49:15.800 --> 00:49:18.640
that I write up to the next level of usability on the command line.

00:49:18.640 --> 00:49:23.340
But the other thing that's incredibly notable to me is that it's like maybe a project that's

00:49:23.340 --> 00:49:24.060
reached enlightenment.

00:49:24.300 --> 00:49:27.060
It's been quiet for two plus years or something.

00:49:27.060 --> 00:49:27.280
Yeah.

00:49:27.280 --> 00:49:28.140
Like it's just stable.

00:49:28.140 --> 00:49:29.440
But it's okay that that's happened?

00:49:29.440 --> 00:49:30.280
Yeah, for sure.

00:49:30.280 --> 00:49:30.540
Yeah.

00:49:30.540 --> 00:49:34.760
Like there's like warnings out there that you shouldn't use a package if it's been quiet

00:49:34.760 --> 00:49:36.800
for a certain amount of time, if there's not enough activity.

00:49:36.800 --> 00:49:40.460
But I think there are some rare ones out there that are just stable.

00:49:40.460 --> 00:49:40.920
Right.

00:49:41.080 --> 00:49:41.760
It's done.

00:49:41.760 --> 00:49:42.120
Yeah.

00:49:42.120 --> 00:49:45.780
It's rare in the software world and it's kind of done.

00:49:45.780 --> 00:49:46.080
Yeah.

00:49:46.080 --> 00:49:46.540
Awesome.

00:49:46.540 --> 00:49:47.920
Well, that's a very good one.

00:49:47.920 --> 00:49:48.820
Cool.

00:49:48.820 --> 00:49:50.780
Well, you know, thanks for being on the show.

00:49:50.780 --> 00:49:52.140
People are excited about this.

00:49:52.140 --> 00:49:55.940
Maybe they want to go get some diagnostics information in a car or they want to try out

00:49:55.940 --> 00:49:58.300
some of the self-driving AI magic.

00:49:58.300 --> 00:49:59.040
What do you say?

00:49:59.040 --> 00:49:59.500
Yeah.

00:49:59.600 --> 00:50:00.780
I say jump in.

00:50:00.780 --> 00:50:02.360
Ross is a great place to start.

00:50:02.360 --> 00:50:06.660
Talking to a robot, talking to a car isn't harder than file IO.

00:50:06.660 --> 00:50:09.020
If you can do that, you can talk to robots.

00:50:09.020 --> 00:50:10.280
That's pretty impressive.

00:50:10.280 --> 00:50:10.660
Awesome.

00:50:10.660 --> 00:50:10.960
All right.

00:50:10.960 --> 00:50:12.360
Well, thank you for being here.

00:50:12.360 --> 00:50:13.060
Thanks for being on the show.

00:50:13.060 --> 00:50:13.500
Absolutely.

00:50:13.500 --> 00:50:14.240
Thanks for having me.

00:50:14.240 --> 00:50:14.500
You bet.

00:50:14.500 --> 00:50:14.700
Bye.

00:50:14.700 --> 00:50:14.940
Bye.

00:50:16.320 --> 00:50:19.060
This has been another episode of Talk Python To Me.

00:50:19.060 --> 00:50:24.360
Our guest on this episode was Shay Newton, and it's been brought to you by Datadog and Clubhouse.

00:50:24.360 --> 00:50:28.360
Datadog gives you visibility into the whole system running your code.

00:50:28.360 --> 00:50:32.240
Visit talkpython.fm/datadog and see what you've been missing.

00:50:32.240 --> 00:50:33.680
Feel throwing a free t-shirt.

00:50:33.680 --> 00:50:39.440
Clubhouse is a fast and enjoyable project management platform that breaks down silos and brings teams

00:50:39.440 --> 00:50:41.240
together to ship value, not features.

00:50:41.240 --> 00:50:42.980
Fall in love with project planning.

00:50:42.980 --> 00:50:46.060
Visit talkpython.fm/clubhouse.

00:50:46.060 --> 00:50:48.720
Want to level up your Python?

00:50:48.720 --> 00:50:53.540
If you're just getting started, try my Python Jumpstart by Building 10 Apps course.

00:50:53.540 --> 00:50:58.620
Or if you're looking for something more advanced, check out our new async course that digs into

00:50:58.620 --> 00:51:01.680
all the different types of async programming you can do in Python.

00:51:01.680 --> 00:51:05.640
And of course, if you're interested in more than one of these, be sure to check out our

00:51:05.640 --> 00:51:06.360
Everything Bundle.

00:51:06.360 --> 00:51:08.240
It's like a subscription that never expires.

00:51:08.240 --> 00:51:10.380
Be sure to subscribe to the show.

00:51:10.380 --> 00:51:12.880
Open your favorite podcatcher and search for Python.

00:51:12.880 --> 00:51:14.020
We should be right at the top.

00:51:14.420 --> 00:51:18.860
You can also find the iTunes feed at /itunes, the Google Play feed at /play,

00:51:18.860 --> 00:51:23.020
and the direct RSS feed at /rss on talkpython.fm.

00:51:23.020 --> 00:51:25.100
This is your host, Michael Kennedy.

00:51:25.100 --> 00:51:26.600
Thanks so much for listening.

00:51:26.600 --> 00:51:27.640
I really appreciate it.

00:51:27.900 --> 00:51:29.420
Now get out there and write some Python code.

00:51:29.420 --> 00:51:29.960
I'll see you next time.

00:51:29.960 --> 00:51:30.360
Bye.

00:51:30.360 --> 00:51:30.620
Bye.

00:51:30.620 --> 00:51:30.660
Bye.

00:51:30.660 --> 00:51:31.160
Bye.

00:51:31.160 --> 00:51:31.800
Bye.

00:51:31.800 --> 00:52:01.780
Thank you.

