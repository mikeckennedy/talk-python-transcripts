WEBVTT

00:00:00.000 --> 00:00:02.600
That's what I expected.

00:00:02.600 --> 00:00:04.240
>>Hello, hello.

00:00:04.240 --> 00:00:05.320
Hey, Charlie.

00:00:05.320 --> 00:00:07.720
>>Hey.

00:00:07.720 --> 00:00:08.440
>>Welcome.

00:00:08.440 --> 00:00:10.880
Welcome to the YouTube stream for the moment.

00:00:10.880 --> 00:00:15.800
And happy to have everyone here who is live and just

00:00:15.800 --> 00:00:17.160
in a second on the podcast.

00:00:17.160 --> 00:00:18.640
Excited to be back together.

00:00:18.640 --> 00:00:20.880
>>Yeah, thanks so much for having me back on the show.

00:00:20.880 --> 00:00:22.400
I really appreciate it.

00:00:22.400 --> 00:00:25.560
>>Yes, it's really great to have you back on the show.

00:00:25.560 --> 00:00:28.720
You and your team are doing awesome work these days.

00:00:28.720 --> 00:00:30.840
And you're making a big dent in Python.

00:00:30.840 --> 00:00:31.760
>>Thank you.

00:00:31.760 --> 00:00:32.440
Thank you.

00:00:32.440 --> 00:00:35.400
Hopefully a good dent, I guess.

00:00:35.400 --> 00:00:38.200
>>Yeah, I guess you could make a good dent or a bad dent.

00:00:38.200 --> 00:00:39.840
But no, I meant that in a good way.

00:00:39.840 --> 00:00:41.320
Definitely in a good way.

00:00:41.320 --> 00:00:42.600
>>I appreciate it.

00:00:42.600 --> 00:00:43.160
>>Yeah.

00:00:43.160 --> 00:00:44.520
Yeah, I think excellent work.

00:00:44.520 --> 00:00:48.080
It's really-- it's kind of surprising

00:00:48.080 --> 00:00:52.080
how some of these tools just come in and just catch fire

00:00:52.080 --> 00:00:53.040
in a way.

00:00:53.040 --> 00:00:54.520
I don't know how you felt about it,

00:00:54.520 --> 00:00:57.560
but it seemed more than I would have expected.

00:00:57.560 --> 00:01:00.280
I mean, I did not expect your things to be popular,

00:01:00.280 --> 00:01:04.480
but they became really popular really quickly.

00:01:04.480 --> 00:01:05.160
>>Yeah.

00:01:05.160 --> 00:01:09.080
Yeah, I mean, it was different with Ruff and with uv.

00:01:09.080 --> 00:01:13.240
The sort of context around it has been pretty different.

00:01:13.240 --> 00:01:16.920
Because with Ruff, when I started working on Ruff,

00:01:16.920 --> 00:01:18.880
no one knew who I was or had any reason

00:01:18.880 --> 00:01:20.760
to care about what I was doing.

00:01:20.760 --> 00:01:24.600
And the project just grew over time.

00:01:24.600 --> 00:01:27.960
And then I knew that when we were working on UV,

00:01:27.960 --> 00:01:29.960
there would just be a lot more of an expectation

00:01:29.960 --> 00:01:31.800
around anything we build.

00:01:31.800 --> 00:01:33.880
>>Yeah, the spotlight was already shining, right?

00:01:33.880 --> 00:01:35.520
>>A little bit, yeah.

00:01:35.520 --> 00:01:38.320
And that's awesome, because it means our stuff gets traction.

00:01:38.320 --> 00:01:40.440
Also, it comes with a lot of responsibility.

00:01:40.440 --> 00:01:43.080
It means anything we release, we're

00:01:43.080 --> 00:01:44.760
kind of committed to maintaining.

00:01:44.760 --> 00:01:51.760
So it's been very interesting, this kind of release cadence

00:01:51.760 --> 00:01:54.080
versus what happened with Ruff.

00:01:54.080 --> 00:01:56.600
>>Well, you have more people behind the scenes

00:01:56.600 --> 00:01:57.720
helping you out, right?

00:01:57.720 --> 00:01:59.080
>>I do, yeah, thankfully.

00:01:59.080 --> 00:01:59.600
That's another--

00:01:59.600 --> 00:02:03.440
>>Yeah, tell us-- maybe that's a good place to just kick off

00:02:03.440 --> 00:02:05.680
our conversation is--

00:02:05.680 --> 00:02:08.720
we're going to talk a bit about Ruff for everyone.

00:02:08.720 --> 00:02:12.440
And Ruff was the thing that really launched all of this.

00:02:12.440 --> 00:02:16.000
But you started a company, Astral.

00:02:16.000 --> 00:02:20.040
You've got some funding behind it, building awesome tools.

00:02:20.040 --> 00:02:23.160
Yeah, just give people the broad view of your world these days.

00:02:23.160 --> 00:02:23.880
>>Yeah, totally.

00:02:23.880 --> 00:02:30.160
So yeah, this all started when I released Ruff probably

00:02:30.160 --> 00:02:33.840
like a year and a half ago maybe at this point.

00:02:33.840 --> 00:02:39.160
And at that point, it was really not just a side project for me,

00:02:39.160 --> 00:02:41.240
but very much an exploratory project.

00:02:41.240 --> 00:02:46.960
Like I was kind of curious about building faster Python tooling

00:02:46.960 --> 00:02:49.080
really, and curious about getting better at Rust

00:02:49.080 --> 00:02:50.720
and all this stuff.

00:02:50.720 --> 00:02:55.760
And Ruff, when I released it, it was a linter--

00:02:55.760 --> 00:02:57.280
or it is a linter.

00:02:57.280 --> 00:02:59.680
But it kind of brings a lot of different tools together.

00:02:59.680 --> 00:03:06.120
So if you're familiar with Flake 8 or Pylint, but also Black,

00:03:06.120 --> 00:03:08.440
Ruff is designed to kind of bundle all those tools

00:03:08.440 --> 00:03:09.560
together.

00:03:09.560 --> 00:03:11.440
So it can detect problems with your code.

00:03:11.440 --> 00:03:13.760
It can fix them automatically.

00:03:13.760 --> 00:03:15.840
It can reformat your code.

00:03:15.840 --> 00:03:18.520
So often when we see people adopting Ruff,

00:03:18.520 --> 00:03:22.200
they're replacing like 20 or 30 tools with Ruff.

00:03:22.200 --> 00:03:25.440
And there's a bunch of nice things about it.

00:03:25.440 --> 00:03:28.240
But ultimately, it's very, very fast, and hopefully

00:03:28.240 --> 00:03:30.880
a lot simpler for users.

00:03:30.880 --> 00:03:32.560
But-- go ahead.

00:03:32.560 --> 00:03:34.240
>>I was going to say, it's really nice

00:03:34.240 --> 00:03:37.920
that it's just one tool that brings that all together.

00:03:37.920 --> 00:03:39.120
It's not a patchwork.

00:03:39.120 --> 00:03:40.560
Here's how we use isort.

00:03:40.560 --> 00:03:41.960
And here's how we use Flake 8.

00:03:41.960 --> 00:03:42.920
And here's how we use this.

00:03:42.920 --> 00:03:44.560
And here's how we use that.

00:03:44.560 --> 00:03:46.520
>>Right, I think isort's a really good example.

00:03:46.520 --> 00:03:48.720
Because instead of having a-- and isort's a great tool.

00:03:48.720 --> 00:03:51.480
But instead of having a separate tool to do your import sorting,

00:03:51.480 --> 00:03:55.040
Ruff frames import sorting as just a lint rule.

00:03:55.040 --> 00:03:57.520
And so you don't have to learn a bunch of different tools

00:03:57.520 --> 00:04:00.520
and figure out how to merge them together.

00:04:00.520 --> 00:04:05.960
And Ruff, again, when I released it, it was just a side project.

00:04:05.960 --> 00:04:08.920
And it sort of took off.

00:04:08.920 --> 00:04:13.480
There were-- it was originally--

00:04:13.480 --> 00:04:16.080
I released it in part because I had this thesis

00:04:16.080 --> 00:04:18.280
that Python tooling could be much faster.

00:04:18.280 --> 00:04:20.800
And Ruff was meant to evidence that.

00:04:20.800 --> 00:04:23.600
It was meant to be an example of what I saw as this potential

00:04:23.600 --> 00:04:27.200
to build really different Python tooling.

00:04:27.200 --> 00:04:33.880
And took off a couple big projects, like FastAPI and such,

00:04:33.880 --> 00:04:35.240
were kind of early adopters.

00:04:35.240 --> 00:04:37.720
And it just grew and grew and grew from there.

00:04:37.720 --> 00:04:41.960
And I started a company, Astral, shortly after,

00:04:41.960 --> 00:04:43.360
based on a lot of these ideas.

00:04:43.360 --> 00:04:47.680
So again, Ruff, in this context, was meant to be--

00:04:47.680 --> 00:04:50.000
the goal wasn't necessarily to start a company just

00:04:50.000 --> 00:04:51.320
based around Ruff.

00:04:51.320 --> 00:04:55.280
The goal was to start a company based around the ideas

00:04:55.280 --> 00:04:59.640
behind Ruff, which is, can we build really different Python

00:04:59.640 --> 00:05:02.640
tooling by--

00:05:02.640 --> 00:05:05.160
well, it's all written in Rust.

00:05:05.160 --> 00:05:06.760
It's sort of an implementation detail.

00:05:06.760 --> 00:05:08.420
But ultimately, what we're trying to do

00:05:08.420 --> 00:05:10.800
is build really high-performance Python tooling,

00:05:10.800 --> 00:05:13.080
but also tooling that works together really well

00:05:13.080 --> 00:05:14.200
and simplifies things.

00:05:14.200 --> 00:05:16.560
So tackle-- it's not just about performance.

00:05:16.560 --> 00:05:19.240
It's also about tackling a lot of, I guess,

00:05:19.240 --> 00:05:23.200
what I see as the complexity in Python tooling today.

00:05:23.200 --> 00:05:26.480
And really trying to, I guess, challenge certain status

00:05:26.480 --> 00:05:31.040
quos and respect others, but challenge some status

00:05:31.040 --> 00:05:36.000
quos in what it feels like to work with and use Python.

00:05:36.000 --> 00:05:40.240
And so our focus as a company--

00:05:40.240 --> 00:05:44.120
right now, we're very, very focused on our open-source

00:05:44.120 --> 00:05:46.520
roadmap and our open-source tooling.

00:05:46.520 --> 00:05:50.960
So that's Ruff, now UV, which we'll talk about in a bit.

00:05:50.960 --> 00:05:56.480
And these are MIT-licensed, fully open-source tools

00:05:56.480 --> 00:05:58.160
that we build.

00:05:58.160 --> 00:06:01.680
And ultimately, our goal is to build and sell

00:06:01.680 --> 00:06:04.400
paid services that integrate really well with the tooling

00:06:04.400 --> 00:06:06.660
and are kind of the natural next thing you need when

00:06:06.660 --> 00:06:08.020
you're building with Python.

00:06:08.020 --> 00:06:11.960
So we'll never charge money for the tools themselves,

00:06:11.960 --> 00:06:14.040
those remain free, permissively licensed.

00:06:14.040 --> 00:06:16.360
But our goal is to kind of build--

00:06:16.360 --> 00:06:17.900
imagine you're building with Python,

00:06:17.900 --> 00:06:19.200
you need to deploy a web server.

00:06:19.200 --> 00:06:21.760
There's a lot of things that you need naturally to do that.

00:06:21.760 --> 00:06:23.800
So for people who are already using our tools,

00:06:23.800 --> 00:06:25.600
what are the natural next things they need?

00:06:25.600 --> 00:06:27.640
And how can we build really good services

00:06:27.640 --> 00:06:30.360
on top of the tooling that just integrate with it really well?

00:06:30.360 --> 00:06:32.240
So that's kind of the premise of the company.

00:06:32.240 --> 00:06:34.780
There's really two focuses to the roadmap.

00:06:34.780 --> 00:06:37.320
It's the open-source and the commercial.

00:06:37.320 --> 00:06:40.440
And our goal is to have an incentive structure where

00:06:40.440 --> 00:06:42.440
we're just continuously aligned to invest

00:06:42.440 --> 00:06:44.960
a ton in the open-source and grow it as much as possible

00:06:44.960 --> 00:06:47.840
in a really natural way.

00:06:47.840 --> 00:06:51.720
So you're not going to do per line fix pricing.

00:06:51.720 --> 00:06:54.480
You get a million line fixes a month free, and then--

00:06:54.480 --> 00:06:55.360
no, I'm just kidding.

00:06:55.360 --> 00:06:57.640
I think it's an awesome model.

00:06:57.640 --> 00:07:04.880
And open-source, 10 years ago, it really

00:07:04.880 --> 00:07:11.280
looked-- it was already super vibrant and super--

00:07:11.280 --> 00:07:15.120
making huge dents in the space, right?

00:07:15.120 --> 00:07:17.360
Really, a lot of people adopting it.

00:07:17.360 --> 00:07:20.880
But I think there was kind of a funding side

00:07:20.880 --> 00:07:22.080
that was a little bit missing.

00:07:22.080 --> 00:07:25.360
I still remember, like, buy me a coffee type of links.

00:07:25.360 --> 00:07:29.320
Like, send me $10 if you like this.

00:07:29.320 --> 00:07:31.960
And that's just-- that's not a job.

00:07:31.960 --> 00:07:35.960
That's hardly a hobby type of thing to get stuff done.

00:07:35.960 --> 00:07:39.000
You can't have a team of people focused on it.

00:07:39.000 --> 00:07:42.720
And it had traditionally really been around kind

00:07:42.720 --> 00:07:45.440
of a beneficial--

00:07:45.440 --> 00:07:48.040
I need to find a big tech company that's

00:07:48.040 --> 00:07:50.320
willing to give me sufficient amount of time

00:07:50.320 --> 00:07:54.800
to work on this project to sort of fund its existence.

00:07:54.800 --> 00:07:58.000
Or maybe I'm a consultant, and I create Flask,

00:07:58.000 --> 00:08:01.280
but I consult on Flask, that type of thing, right?

00:08:01.280 --> 00:08:05.680
And I think it's just super positive to see

00:08:05.680 --> 00:08:09.320
more direct ways people are making

00:08:09.320 --> 00:08:11.600
open-source successful.

00:08:11.600 --> 00:08:12.800
Yeah, I appreciate that.

00:08:12.800 --> 00:08:13.320
I wish--

00:08:13.320 --> 00:08:15.160
Yeah, I think--

00:08:15.160 --> 00:08:19.280
I wish-- I sort of wish that there were more good examples

00:08:19.280 --> 00:08:20.240
of that working.

00:08:20.240 --> 00:08:22.800
There are some, for sure.

00:08:22.800 --> 00:08:24.400
For me, it was pretty clear--

00:08:24.400 --> 00:08:25.880
like, it was immediately clear to me

00:08:25.880 --> 00:08:28.120
I needed to be working on Ruff full-time if I wanted

00:08:28.120 --> 00:08:30.080
the project to succeed.

00:08:30.080 --> 00:08:33.160
And that's kind of a microcosm of the bigger challenge, which

00:08:33.160 --> 00:08:34.880
is we wanted to build--

00:08:34.880 --> 00:08:37.360
we really wanted to professionalize

00:08:37.360 --> 00:08:40.400
the building of the work on this project

00:08:40.400 --> 00:08:42.160
and bring in more people to help build it.

00:08:42.160 --> 00:08:46.640
And so ultimately, it's not-- obviously, it's not charity.

00:08:46.640 --> 00:08:47.720
It is venture funding.

00:08:47.720 --> 00:08:52.160
And ultimately, we need to build a business around the tooling

00:08:52.160 --> 00:08:55.960
to make it sustainable.

00:08:55.960 --> 00:08:59.680
But again, for me, I want the incentive structure

00:08:59.680 --> 00:09:03.800
to be such that the open-source is obviously free,

00:09:03.800 --> 00:09:06.760
open-source extremely permissively licensed,

00:09:06.760 --> 00:09:10.120
and truly open-source.

00:09:10.120 --> 00:09:12.040
We have tons and tons of contributors.

00:09:12.040 --> 00:09:14.800
We have a huge community around it.

00:09:14.800 --> 00:09:17.440
And I'm just glad that we've been

00:09:17.440 --> 00:09:20.720
able to bring in more people to kind of supercharge

00:09:20.720 --> 00:09:22.400
the development of it all.

00:09:22.400 --> 00:09:24.920
So yeah, so I guess you touched on this before,

00:09:24.920 --> 00:09:29.240
but we're now eight people.

00:09:29.240 --> 00:09:32.480
So we've grown.

00:09:32.480 --> 00:09:35.680
I guess a year ago, it was just me in March.

00:09:35.680 --> 00:09:38.080
So over the past--

00:09:38.080 --> 00:09:40.680
our first two team members joined actually

00:09:40.680 --> 00:09:43.760
in March of last year, so almost exactly a year.

00:09:43.760 --> 00:09:46.280
And yeah, we're completely distributed.

00:09:46.280 --> 00:09:52.880
So we have people in US Pacific time all the way to Bangalore.

00:09:52.880 --> 00:09:57.400
So we're just around the like open-source.

00:09:57.400 --> 00:10:02.000
We're kind of all over the world and just building all this stuff

00:10:02.000 --> 00:10:03.080
out in the open.

00:10:03.080 --> 00:10:06.000
It's such a good fit to be a distributed company

00:10:06.000 --> 00:10:08.680
as an open-source, with open-source roots,

00:10:08.680 --> 00:10:12.120
because the tools of open-source,

00:10:12.120 --> 00:10:13.840
in some degree for software in general,

00:10:13.840 --> 00:10:18.800
but especially for open-source, is asynchronous,

00:10:18.800 --> 00:10:21.320
semi-connected, kind of the zen of Git,

00:10:21.320 --> 00:10:23.360
but for the way you work, right?

00:10:23.360 --> 00:10:27.200
And it makes it super easy to hire just the most engaged

00:10:27.200 --> 00:10:29.560
people, regardless of where they are,

00:10:29.560 --> 00:10:32.360
rather than the people who are willing to commute to my office

00:10:32.360 --> 00:10:33.840
in the office park.

00:10:33.840 --> 00:10:40.320
Yeah, I would be pretty surprised

00:10:40.320 --> 00:10:42.880
if a single person I've hired would have been willing to move

00:10:42.880 --> 00:10:46.160
to New York, which is where I'm based.

00:10:46.160 --> 00:10:50.000
So from that perspective, it was a no-brainer, which is--

00:10:50.000 --> 00:10:53.360
and actually, multiple people we've hired,

00:10:53.360 --> 00:10:56.720
our relationship with them started on the repo.

00:10:56.720 --> 00:10:57.240
Yeah.

00:10:57.240 --> 00:10:59.320
In Ruff itself.

00:10:59.320 --> 00:11:01.600
And then almost everyone we've hired,

00:11:01.600 --> 00:11:06.360
we discovered through open-source in some way

00:11:06.360 --> 00:11:09.200
or had some relationship through open-source in some way.

00:11:09.200 --> 00:11:10.280
Yeah.

00:11:10.280 --> 00:11:12.160
So yeah, it's been a really--

00:11:12.160 --> 00:11:17.720
it's also very much in the DNA of the company, which is--

00:11:17.720 --> 00:11:19.200
we actually also intentionally try

00:11:19.200 --> 00:11:20.920
to hire people who have been maintainers

00:11:20.920 --> 00:11:22.760
and have a lot of experience with that, too.

00:11:22.760 --> 00:11:25.120
We view that as a really important skill.

00:11:25.120 --> 00:11:26.680
Yeah, that's excellent.

00:11:26.680 --> 00:11:32.640
So we talked about Ruff.

00:11:32.640 --> 00:11:35.000
One thing I do want to give a bit of a shout-out to

00:11:35.000 --> 00:11:36.240
is--

00:11:36.240 --> 00:11:37.320
I don't remember.

00:11:37.320 --> 00:11:38.880
I think I found this on Mastodon.

00:11:38.880 --> 00:11:41.480
I can't remember where somebody talked about it.

00:11:41.480 --> 00:11:44.960
But one of the things that Ruff does--

00:11:44.960 --> 00:11:47.200
one, it changes code, which is awesome.

00:11:47.200 --> 00:11:49.080
I love your Ruff format story.

00:11:49.080 --> 00:11:51.920
But it also just tells you, hey, this could be better.

00:11:51.920 --> 00:11:52.920
You're violating PEP 8.

00:11:52.920 --> 00:11:56.200
You're violating this other convention or even

00:11:56.200 --> 00:11:58.880
a security thing, right?

00:11:58.880 --> 00:12:03.080
But the why of that I think requires

00:12:03.080 --> 00:12:04.160
a little bit of experience.

00:12:04.160 --> 00:12:07.160
Why should I use this kind of loop

00:12:07.160 --> 00:12:11.960
or that kind of comprehension over another?

00:12:11.960 --> 00:12:13.920
People told me that who are much better

00:12:13.920 --> 00:12:16.040
and have been doing this longer, I shouldn't do it.

00:12:16.040 --> 00:12:17.440
Why?

00:12:17.440 --> 00:12:20.480
When you have 700 rules, there's a lot of why.

00:12:20.480 --> 00:12:24.960
And so you guys came up with this thing at docs.ashrull.sh/ruff/rules.

00:12:24.960 --> 00:12:26.440
Put it in links.

00:12:26.440 --> 00:12:29.160
That literally, for each one of these,

00:12:29.160 --> 00:12:33.880
has a little example in what is good and what is bad

00:12:33.880 --> 00:12:35.760
and when you should use it and so on.

00:12:35.760 --> 00:12:37.760
You want to just tell people about this a bit?

00:12:37.760 --> 00:12:38.320
I think it's a matter of--

00:12:38.320 --> 00:12:39.120
Yeah, totally.

00:12:39.120 --> 00:12:40.080
So we didn't have--

00:12:40.080 --> 00:12:41.640
I mean, we obviously didn't have this

00:12:41.640 --> 00:12:43.200
when we started the project.

00:12:43.200 --> 00:12:48.440
And then we accumulated a lot of rules.

00:12:48.440 --> 00:12:50.440
When we decided to add this, I think we already

00:12:50.440 --> 00:12:52.000
had hundreds of rules.

00:12:52.000 --> 00:12:54.440
And the motivation for the format

00:12:54.440 --> 00:13:01.440
really comes from Clippy, which is the linter used in Rust.

00:13:01.440 --> 00:13:02.320
And they have really--

00:13:02.320 --> 00:13:05.080
Rust, in general, has a really good documentation culture.

00:13:05.080 --> 00:13:07.920
And Clippy has this nice format, very similar to ours.

00:13:07.920 --> 00:13:11.000
We've made some adjustments, but it's pretty similar around

00:13:11.000 --> 00:13:13.480
how you document lint rules, like what's the motivation

00:13:13.480 --> 00:13:16.320
and giving examples.

00:13:16.320 --> 00:13:18.400
So we were like, all right, we want to do this.

00:13:18.400 --> 00:13:20.800
And we just, over a very long period of time,

00:13:20.800 --> 00:13:22.800
and a lot of contributors contributed

00:13:22.800 --> 00:13:24.280
on this documentation.

00:13:24.280 --> 00:13:27.480
But it took like six months or something, probably,

00:13:27.480 --> 00:13:28.240
to document it all.

00:13:28.240 --> 00:13:31.280
And now we require it for all rules,

00:13:31.280 --> 00:13:33.280
so it's much easier to add going forward.

00:13:33.280 --> 00:13:35.560
But it was a huge effort to add this.

00:13:35.560 --> 00:13:38.640
And some of the explanations, too,

00:13:38.640 --> 00:13:42.520
are very extensive and detailed with lots of references.

00:13:42.520 --> 00:13:44.000
Yeah.

00:13:44.000 --> 00:13:47.720
Yeah, I pulled one up for isort, unsorted imports,

00:13:47.720 --> 00:13:51.440
which is error I001.

00:13:51.440 --> 00:13:56.720
And it also talks about whether it can automatically fix it,

00:13:56.720 --> 00:13:58.600
what this does, why is it bad.

00:13:58.600 --> 00:14:00.800
So it says things like, consistency is good.

00:14:00.800 --> 00:14:02.400
Use a common convention for imports

00:14:02.400 --> 00:14:05.960
to make your code more readable in idiomatic or Pythonic.

00:14:05.960 --> 00:14:08.800
And it just gives an example of bad, good.

00:14:08.800 --> 00:14:09.760
Right, right.

00:14:09.760 --> 00:14:11.240
I think that's nice.

00:14:11.240 --> 00:14:14.200
Yeah, and we've started to put more stuff in here over time,

00:14:14.200 --> 00:14:15.360
too.

00:14:15.360 --> 00:14:20.800
Like in some cases, we let users apply automatic fixes that

00:14:20.800 --> 00:14:24.480
aren't completely safe by opting in.

00:14:24.480 --> 00:14:26.200
Like it might change the meaning of your code,

00:14:26.200 --> 00:14:27.360
and you kind of need to be careful.

00:14:27.360 --> 00:14:29.880
And so over time, we've started to document that here, too,

00:14:29.880 --> 00:14:32.240
like rules that have unsafe fixes, why.

00:14:32.240 --> 00:14:34.040
Like in what case might it break your code,

00:14:34.040 --> 00:14:35.680
and what should you look out for.

00:14:35.680 --> 00:14:39.000
So yeah, we want it to be a tool with really good--

00:14:39.000 --> 00:14:44.680
like we're kind of inspired by Rust in this way,

00:14:44.680 --> 00:14:47.240
because Rust has a really good documentation culture.

00:14:47.240 --> 00:14:49.440
And also the Rust compiler itself

00:14:49.440 --> 00:14:51.640
has really good error messages.

00:14:51.640 --> 00:14:52.920
It's sort of famous for that.

00:14:52.920 --> 00:14:54.280
Like when your code doesn't work,

00:14:54.280 --> 00:14:56.560
it's really good at telling you why.

00:14:56.560 --> 00:14:58.200
I mean, it doesn't always get it right,

00:14:58.200 --> 00:15:00.400
but it has famously good error messages.

00:15:00.400 --> 00:15:02.440
And that's something that we try and channel to,

00:15:02.440 --> 00:15:05.280
like when we make changes to configuration,

00:15:05.280 --> 00:15:07.120
like just putting extra effort into trying

00:15:07.120 --> 00:15:11.040
to make those error messages and those hints helpful.

00:15:11.040 --> 00:15:12.240
But yeah, it's a lot of work.

00:15:12.240 --> 00:15:15.400
I appreciate that you called it out.

00:15:15.400 --> 00:15:17.120
I'm sure it looks like a lot of work,

00:15:17.120 --> 00:15:20.800
but it's one of those things that's--

00:15:20.800 --> 00:15:23.040
where else are you going to get this knowledge, right?

00:15:23.040 --> 00:15:25.880
I mean, I know you can go search for one at a time,

00:15:25.880 --> 00:15:27.680
but in this aggregate, this is really good.

00:15:27.680 --> 00:15:30.480
Right, right, right.

00:15:30.480 --> 00:15:33.240
So Ruff will fix a lot of these things for you.

00:15:33.240 --> 00:15:35.720
And one of the things that I like to do

00:15:35.720 --> 00:15:39.520
is I just have it integrated into my editor these days.

00:15:39.520 --> 00:15:43.120
So both with PyCharm and with VS Code,

00:15:43.120 --> 00:15:48.280
if I just say format this document, that's Ruff format.

00:15:48.280 --> 00:15:49.520
Nice.

00:15:49.520 --> 00:15:50.160
Yeah, yeah.

00:15:50.160 --> 00:15:56.960
So we have a VS Code extension, and it supports formatting,

00:15:56.960 --> 00:16:00.640
auto fixing, all that kind of stuff.

00:16:00.640 --> 00:16:01.240
And--

00:16:01.240 --> 00:16:02.320
The PyCharm one's a--

00:16:02.320 --> 00:16:04.360
the JetBrains one's a third party one, right?

00:16:04.360 --> 00:16:05.760
Someone else decided to make that?

00:16:05.760 --> 00:16:10.280
Yeah, the JetBrains one is by Udai.

00:16:10.280 --> 00:16:14.920
And it's-- yeah, that's a community extension.

00:16:14.920 --> 00:16:17.280
We're considering doing our own at some point

00:16:17.280 --> 00:16:19.960
because there's a lot of demand for--

00:16:19.960 --> 00:16:22.800
obviously, we have a lot of users who use the JetBrains

00:16:22.800 --> 00:16:23.520
stuff.

00:16:23.520 --> 00:16:24.560
I mean, I use it.

00:16:24.560 --> 00:16:26.400
So we may do it and do our own at some point,

00:16:26.400 --> 00:16:28.440
but there's a community maintained one right now.

00:16:28.440 --> 00:16:30.800
And that's based on--

00:16:30.800 --> 00:16:33.360
we have a language server.

00:16:33.360 --> 00:16:36.120
So there's kind of an underlying piece of technology

00:16:36.120 --> 00:16:39.160
that wraps Ruff that powers all of these editor integrations.

00:16:39.160 --> 00:16:44.280
So you can also use that from NeoVim or Sublime Text or Emacs.

00:16:44.280 --> 00:16:47.880
All of those editors support the LSP.

00:16:47.880 --> 00:16:50.720
And so you can actually-- it's the same thing that

00:16:50.720 --> 00:16:52.440
powers the VS Code extension.

00:16:52.440 --> 00:16:55.000
That's wrapped in some VS Code specific stuff,

00:16:55.000 --> 00:16:57.520
but it's the same piece of technology.

00:16:57.520 --> 00:17:02.280
And we're actually rewriting that right now

00:17:02.280 --> 00:17:04.680
to make it more natively integrated

00:17:04.680 --> 00:17:06.720
into Ruff, which will let us do some cool things.

00:17:06.720 --> 00:17:09.800
So it should get actually significantly better,

00:17:09.800 --> 00:17:11.380
I think, over the course of this year,

00:17:11.380 --> 00:17:15.080
because it's becoming more and more of a priority for us.

00:17:15.080 --> 00:17:16.160
Yeah, cool.

00:17:16.160 --> 00:17:18.120
The whole LSP thing is pretty interesting.

00:17:18.120 --> 00:17:21.600
I think it's really opened up a lot of editors being better.

00:17:21.600 --> 00:17:25.160
Yeah, it has.

00:17:25.160 --> 00:17:28.000
And it made it-- from our perspective,

00:17:28.000 --> 00:17:31.240
it made it way easier to build editor integrations

00:17:31.240 --> 00:17:32.960
because we just built an LSP.

00:17:32.960 --> 00:17:37.800
And then it works for everyone, almost.

00:17:37.800 --> 00:17:44.840
The JetBrains stuff, it does support the LSP,

00:17:44.840 --> 00:17:46.440
but I think only in the paid version,

00:17:46.440 --> 00:17:47.680
not in the community version.

00:17:47.680 --> 00:17:49.760
So there's some limitations around it.

00:17:49.760 --> 00:17:52.560
But in general, if you support the LSP,

00:17:52.560 --> 00:17:54.680
it's actually very easy to build editor integrations that

00:17:54.680 --> 00:17:57.800
work with everyone, which is super, super useful.

00:17:57.800 --> 00:18:00.520
Yeah, instead of rebuilding your own integration

00:18:00.520 --> 00:18:03.560
for every single thing, which is not fun.

00:18:03.560 --> 00:18:06.840
Yeah, it's a lot.

00:18:06.840 --> 00:18:12.600
All right, well, let's talk about the main project here.

00:18:12.600 --> 00:18:16.880
The main reason for being here today is uv.

00:18:16.880 --> 00:18:17.800
Tell people what uv is.

00:18:17.800 --> 00:18:21.480
This is your next big project, next big tool.

00:18:21.480 --> 00:18:23.280
Yes, yeah.

00:18:23.280 --> 00:18:30.280
We released uv a little under a month ago.

00:18:30.280 --> 00:18:32.840
And this is something that I've wanted to do--

00:18:32.840 --> 00:18:38.360
basically, since we started the company, I wanted to start--

00:18:38.360 --> 00:18:39.800
I thought there was an opportunity

00:18:39.800 --> 00:18:44.960
to build some really interesting tooling in Python packaging.

00:18:44.960 --> 00:18:47.760
And uv is kind of the first milestone in that.

00:18:47.760 --> 00:18:53.240
So UV, in its current form, it's designed

00:18:53.240 --> 00:18:59.920
as a sort of drop-in alternative to pip, pip-tools.

00:18:59.920 --> 00:19:03.480
If you use pip compile, pip sync, and virtual M.

00:19:03.480 --> 00:19:05.560
So it takes those three tools and tries

00:19:05.560 --> 00:19:08.520
to bundle them into one.

00:19:08.520 --> 00:19:12.360
And so it can do things like, given a set of input

00:19:12.360 --> 00:19:16.960
requirements, generate a requirements.txt file,

00:19:16.960 --> 00:19:20.960
similar to what you'd get from pip compile.

00:19:20.960 --> 00:19:24.760
You can do uv pip install-r requirements.txt,

00:19:24.760 --> 00:19:27.320
UV pip install black.

00:19:27.320 --> 00:19:33.080
So it's really intended right now to be a sort of--

00:19:33.080 --> 00:19:37.080
it won't always-- we don't support absolutely 100%

00:19:37.080 --> 00:19:41.040
of what pip does, but we try to be pretty close.

00:19:41.040 --> 00:19:43.080
And so in many cases, the intention

00:19:43.080 --> 00:19:47.120
is that people can basically drop in uv in their project

00:19:47.120 --> 00:19:52.600
that uses pip today and get, in many cases,

00:19:52.600 --> 00:19:55.600
very, very significant performance improvements.

00:19:55.600 --> 00:19:58.080
So similar to Ref, some of the goals

00:19:58.080 --> 00:20:00.080
we had for this project were, one,

00:20:00.080 --> 00:20:04.600
it should be very, very fast.

00:20:04.600 --> 00:20:07.440
And UV, it's really fast.

00:20:07.440 --> 00:20:13.080
In particular, there's a benchmarks.md in here,

00:20:13.080 --> 00:20:16.760
actually, if you want to click on that.

00:20:16.760 --> 00:20:18.000
Now scroll up.

00:20:18.000 --> 00:20:18.500
Like--

00:20:18.500 --> 00:20:19.000
- Does that do it?

00:20:19.000 --> 00:20:19.500
- Oh, yeah.

00:20:19.500 --> 00:20:20.560
That works too, I guess.

00:20:20.560 --> 00:20:21.960
That was smart of me.

00:20:21.960 --> 00:20:26.280
Yeah, so it's really, really fast,

00:20:26.280 --> 00:20:32.720
especially if you have things cached, which is pretty common.

00:20:32.720 --> 00:20:36.680
So often on your machine, when you're doing pip install-r,

00:20:36.680 --> 00:20:39.320
whatever, a lot of those packages,

00:20:39.320 --> 00:20:41.840
you've probably installed them at least once before

00:20:41.840 --> 00:20:44.280
on your machine.

00:20:44.280 --> 00:20:46.160
Or maybe you deleted your virtual environment,

00:20:46.160 --> 00:20:48.800
and you're recreating it with the exact same dependencies

00:20:48.800 --> 00:20:50.080
or something like that.

00:20:50.080 --> 00:20:55.000
UV is very, very well optimized for that case.

00:20:55.000 --> 00:20:57.400
So if you have a package that you're

00:20:57.400 --> 00:20:59.400
installing multiple times, the installation

00:20:59.400 --> 00:21:01.720
is effectively free.

00:21:01.720 --> 00:21:05.200
And it's also a lot more disk space efficient.

00:21:05.200 --> 00:21:07.840
We store all of them in one place

00:21:07.840 --> 00:21:09.920
and copy them into your virtual environment

00:21:09.920 --> 00:21:12.000
so that you don't have many, many different copies

00:21:12.000 --> 00:21:14.240
of the package too.

00:21:14.240 --> 00:21:19.000
So this was all taking techniques and inspiration

00:21:19.000 --> 00:21:21.640
from other ecosystems and other package managers

00:21:21.640 --> 00:21:26.600
and kind of molding them to fit Python's model for how

00:21:26.600 --> 00:21:31.200
packaging and dependencies work and all the specifications.

00:21:31.200 --> 00:21:35.160
And so again, the end result is installing

00:21:35.160 --> 00:21:36.700
into a virtual environment, a package

00:21:36.700 --> 00:21:39.600
that you've already installed before is basically free.

00:21:39.600 --> 00:21:45.640
And yeah, a lot of these things are just way, way, way faster.

00:21:45.640 --> 00:21:46.640
Similar to Ruff--

00:21:46.640 --> 00:21:48.440
Dramatically faster, yeah.

00:21:48.440 --> 00:21:49.520
Yeah, and similar to Ruff.

00:21:49.520 --> 00:21:50.480
It's good dramatically.

00:21:50.480 --> 00:21:56.680
And I think it's worth pointing out that on one hand,

00:21:56.680 --> 00:21:59.320
we all have an extra 10 seconds, right?

00:21:59.320 --> 00:22:02.320
Or whatever.

00:22:02.320 --> 00:22:04.280
But in the aggregate, all of these things

00:22:04.280 --> 00:22:07.880
are just like little paper cuts over your day.

00:22:07.880 --> 00:22:10.520
And so yeah, sure, I can format the code.

00:22:10.520 --> 00:22:14.040
And I could use something nice and sure if it takes 20 seconds,

00:22:14.040 --> 00:22:14.840
OK.

00:22:14.840 --> 00:22:17.300
But then you stop running it because it's kind of a hassle

00:22:17.300 --> 00:22:19.560
and you're in your flow.

00:22:19.560 --> 00:22:21.120
And this is kind of the same way.

00:22:21.120 --> 00:22:22.840
It's like, oh, I want to maybe see

00:22:22.840 --> 00:22:26.240
if there's some new packages for this project

00:22:26.240 --> 00:22:27.560
as I'm sitting down to work on it.

00:22:27.560 --> 00:22:31.800
Like, OK, well, sit, wait for a pip compile to run.

00:22:31.800 --> 00:22:33.000
And you wait, and you wait.

00:22:33.000 --> 00:22:36.800
And then like, OK, now it's done onto the development version.

00:22:36.800 --> 00:22:38.040
And you wait, and you wait.

00:22:38.040 --> 00:22:42.000
And it's just some of these things that are instant.

00:22:42.000 --> 00:22:44.520
You just ask the question more, and it just

00:22:44.520 --> 00:22:46.680
doesn't break your train of thought.

00:22:46.680 --> 00:22:47.780
Totally.

00:22:47.780 --> 00:22:51.000
I think there's maybe three different things that

00:22:51.000 --> 00:22:53.780
come to mind here when we think about performance.

00:22:53.780 --> 00:22:57.200
Yeah, OK, in this case, it may not

00:22:57.200 --> 00:22:59.580
seem to change your life if you're going from one second

00:22:59.580 --> 00:23:02.280
to 50 milliseconds.

00:23:02.280 --> 00:23:04.140
But I think three things come to mind.

00:23:04.140 --> 00:23:08.700
So one, for companies and large projects,

00:23:08.700 --> 00:23:12.100
this can actually be a really big difference.

00:23:12.100 --> 00:23:14.740
And so if you're at a company and you

00:23:14.740 --> 00:23:17.680
have a big monorepo with a bunch of different subprojects

00:23:17.680 --> 00:23:19.380
that all have requirements files and you

00:23:19.380 --> 00:23:22.960
want to bump a dependency, at that point,

00:23:22.960 --> 00:23:27.140
you're talking like 15-plus minutes for a command.

00:23:27.140 --> 00:23:29.780
And so the larger the project gets,

00:23:29.780 --> 00:23:32.900
obviously, the more performance matters and the more it

00:23:32.900 --> 00:23:33.420
helps out.

00:23:33.420 --> 00:23:34.780
And we're trying to build tooling

00:23:34.780 --> 00:23:36.320
that can basically scale, I don't

00:23:36.320 --> 00:23:38.220
know about to arbitrarily large projects,

00:23:38.220 --> 00:23:43.140
but to large projects and useful for companies too.

00:23:43.140 --> 00:23:45.500
The other thing I'd say is I think there's

00:23:45.500 --> 00:23:47.460
something that happens.

00:23:47.460 --> 00:23:51.300
When tools-- when you make something way faster,

00:23:51.300 --> 00:23:53.220
it just changes a lot of the ergonomics

00:23:53.220 --> 00:23:55.740
around what it's like to do things.

00:23:55.740 --> 00:24:00.980
And so in this case, OK, so installing

00:24:00.980 --> 00:24:03.320
into a virtual environment, a package that you've already

00:24:03.320 --> 00:24:05.980
installed before, is free now.

00:24:05.980 --> 00:24:07.660
And so how does that change things?

00:24:07.660 --> 00:24:08.700
It's nearly instant.

00:24:08.700 --> 00:24:09.980
So how does that change things?

00:24:09.980 --> 00:24:12.500
So that means if you mess up your virtual environment

00:24:12.500 --> 00:24:14.500
and have to delete it and recreate it,

00:24:14.500 --> 00:24:15.900
it doesn't cost you anything.

00:24:15.900 --> 00:24:17.660
It's totally ephemeral.

00:24:17.660 --> 00:24:19.660
You can throw it away and recreate it any time.

00:24:19.660 --> 00:24:21.460
And that's just a different--

00:24:21.460 --> 00:24:23.780
it sounds small, but that's a different relationship

00:24:23.780 --> 00:24:25.260
to virtual environments than before,

00:24:25.260 --> 00:24:27.620
where it's like, OK, I created the virtual environment now.

00:24:27.620 --> 00:24:29.180
Oh, no, my virtual environment's messed up.

00:24:29.180 --> 00:24:30.300
I've got to recreate it.

00:24:30.300 --> 00:24:32.140
We want to just change a lot of the dynamics

00:24:32.140 --> 00:24:34.860
around some of those abstractions.

00:24:34.860 --> 00:24:37.740
And then the other thing is, this performance budget--

00:24:37.740 --> 00:24:40.180
or if you think of performance like a budget,

00:24:40.180 --> 00:24:43.020
this buys us a lot of room.

00:24:43.020 --> 00:24:47.180
And so the fact that we are so fast on some of these things

00:24:47.180 --> 00:24:49.540
means that we can do things that otherwise

00:24:49.540 --> 00:24:51.660
might be prohibitively slow.

00:24:51.660 --> 00:24:54.620
And this is more forward-looking and for the future.

00:24:54.620 --> 00:24:56.780
One thing that we're thinking about a lot right now

00:24:56.780 --> 00:25:02.180
is this idea of resolving Python dependencies for many platforms

00:25:02.180 --> 00:25:04.060
because--

00:25:04.060 --> 00:25:09.140
it's a little bit complicated, but pip compile and pip and UV,

00:25:09.140 --> 00:25:12.460
they're really designed to only work on the current Python

00:25:12.460 --> 00:25:14.980
platform and the current Python that you're using.

00:25:14.980 --> 00:25:19.460
So if you're on macOS and you run pip compile or uv pip

00:25:19.460 --> 00:25:21.740
compile, it will give you dependencies

00:25:21.740 --> 00:25:26.020
that are correct for macOS and your current Python version.

00:25:26.020 --> 00:25:30.380
But they might be wrong on Windows because in Python,

00:25:30.380 --> 00:25:32.660
you can have dependencies that vary based on things

00:25:32.660 --> 00:25:35.940
like the current Python version or the current operating

00:25:35.940 --> 00:25:37.540
system.

00:25:37.540 --> 00:25:41.740
So one example would be uv loop for people

00:25:41.740 --> 00:25:42.820
trying to speed up their--

00:25:42.820 --> 00:25:43.940
I think it doesn't work on Windows.

00:25:43.940 --> 00:25:45.540
It doesn't work at all on Windows.

00:25:45.540 --> 00:25:46.500
That's right.

00:25:46.500 --> 00:25:49.820
Yeah, so that's a very common one.

00:25:49.820 --> 00:25:52.900
And it is, I think, very common that this is a very common

00:25:52.900 --> 00:25:56.020
thing.

00:25:56.020 --> 00:25:57.660
Lots of really, really popular packages

00:25:57.660 --> 00:25:58.860
have these kinds of markers.

00:25:58.860 --> 00:26:01.300
These are called markers, which basically

00:26:01.300 --> 00:26:03.180
makes the dependencies conditional

00:26:03.180 --> 00:26:05.500
based on the current Python.

00:26:05.500 --> 00:26:08.620
And so again, like in pip and pip-tools,

00:26:08.620 --> 00:26:13.220
UV right now just locks for the current Python.

00:26:13.220 --> 00:26:17.740
Poetry and I think PDM, but Poetry for sure

00:26:17.740 --> 00:26:20.780
does this very interesting thing where they actually

00:26:20.780 --> 00:26:22.660
try to lock--

00:26:22.660 --> 00:26:26.980
they try to resolve for all possible platforms.

00:26:26.980 --> 00:26:29.860
And that's something-- it's really convenient

00:26:29.860 --> 00:26:32.440
because it means that you do one lock,

00:26:32.440 --> 00:26:35.060
and then any user anywhere can use that.

00:26:35.060 --> 00:26:36.740
And it works.

00:26:36.740 --> 00:26:41.260
And it's guaranteed to be right as opposed to maybe it

00:26:41.260 --> 00:26:43.020
doesn't work on Windows or whatever else.

00:26:43.020 --> 00:26:47.220
And so we're pretty interested in that, adding that behavior.

00:26:47.220 --> 00:26:49.580
And that's going to be more expensive.

00:26:49.580 --> 00:26:52.980
And so if we have something that's really fast right now,

00:26:52.980 --> 00:26:55.640
it opens up a design space of interesting things

00:26:55.640 --> 00:27:01.060
we can do to solve that problem while still being very fast.

00:27:01.060 --> 00:27:04.180
So that's how I think about performance.

00:27:04.180 --> 00:27:09.380
I think people a little bit underrate

00:27:09.380 --> 00:27:10.700
how much of an impact it can have

00:27:10.700 --> 00:27:12.100
on even small interactions.

00:27:12.100 --> 00:27:14.180
Because once you try something that's much faster,

00:27:14.180 --> 00:27:18.260
it's often hard to go back to the other thing.

00:27:18.260 --> 00:27:21.020
But I'm glad you've had that experience at least.

00:27:21.020 --> 00:27:22.180
Yeah, absolutely.

00:27:22.180 --> 00:27:25.300
A couple of interesting comments.

00:27:25.300 --> 00:27:27.220
Danny says, if it takes 10 seconds,

00:27:27.220 --> 00:27:29.060
I go to triage that issue on GitHub

00:27:29.060 --> 00:27:30.980
and come back five minutes later.

00:27:30.980 --> 00:27:33.100
That's where I was getting at with the flow stuff.

00:27:33.100 --> 00:27:35.740
Like, OK, I'm ready to--

00:27:35.740 --> 00:27:39.860
mind wanders and you're starting over.

00:27:39.860 --> 00:27:42.260
And then Henry out in the audience also says--

00:27:42.260 --> 00:27:47.580
hey, Henry-- it also, doing things so quickly,

00:27:47.580 --> 00:27:49.340
it encourages good environment usage.

00:27:49.340 --> 00:27:51.620
Because if doing things the right way is just as easy

00:27:51.620 --> 00:27:53.500
and as fast as doing it the wrong way,

00:27:53.500 --> 00:27:55.180
you might as well do it the right way.

00:27:55.180 --> 00:27:56.060
That's a nice thought.

00:27:56.060 --> 00:27:58.340
Yeah.

00:27:58.340 --> 00:27:58.840
It is.

00:27:58.840 --> 00:28:02.940
Yeah, I mean, I think there are certain things,

00:28:02.940 --> 00:28:08.060
though, where we aren't any faster.

00:28:08.060 --> 00:28:11.580
And I am interested in thinking about those

00:28:11.580 --> 00:28:14.420
and what we can do about them.

00:28:14.420 --> 00:28:17.740
The most obvious one is, in Python,

00:28:17.740 --> 00:28:21.820
sometimes when you install a dependency,

00:28:21.820 --> 00:28:24.340
you might have to build it from source.

00:28:24.340 --> 00:28:28.980
And in Python, you often are installing things like NumPy,

00:28:28.980 --> 00:28:31.900
which includes some native code.

00:28:31.900 --> 00:28:33.980
And so actually turning that into something

00:28:33.980 --> 00:28:37.180
that your system can run is kind of expensive.

00:28:37.180 --> 00:28:41.020
And you typically don't have to think about this with NumPy

00:28:41.020 --> 00:28:43.860
because they ship what are called wheels, which are

00:28:43.860 --> 00:28:47.380
like these pre-compiled artifacts.

00:28:47.380 --> 00:28:51.300
But not all packages ship wheels.

00:28:51.300 --> 00:28:53.500
You could be on a platform that doesn't have a wheel.

00:28:53.500 --> 00:28:56.620
For a variety of reasons, you might get the raw NumPy source

00:28:56.620 --> 00:28:58.260
code and then have to--

00:28:58.260 --> 00:29:03.500
you get the raw NumPy source code

00:29:03.500 --> 00:29:06.740
and then have to compile it down into a build distribution.

00:29:06.740 --> 00:29:11.100
And for us, if we get into that situation,

00:29:11.100 --> 00:29:14.780
it's not going to be any faster because we still

00:29:14.780 --> 00:29:16.980
have to build the thing from source, just like--

00:29:16.980 --> 00:29:18.900
That's the slowest part of the whole process.

00:29:18.900 --> 00:29:23.100
Yeah, and so there are some cases and some bottlenecks

00:29:23.100 --> 00:29:26.060
where I'm kind of thinking about how could we

00:29:26.060 --> 00:29:26.940
do even better there?

00:29:26.940 --> 00:29:27.740
And there are actually things that

00:29:27.740 --> 00:29:29.180
are changing in the standards that

00:29:29.180 --> 00:29:31.340
have made this a little easier.

00:29:31.340 --> 00:29:34.100
There's this new thing called metadata 2.2.

00:29:34.100 --> 00:29:37.100
It sounds cool, I know.

00:29:37.100 --> 00:29:39.220
It basically lets you read the metadata.

00:29:39.220 --> 00:29:41.020
You like metadata 2.1.

00:29:41.020 --> 00:29:46.660
Yeah, I'm on-- yeah, we're actually on 2.3 now.

00:29:46.660 --> 00:29:47.380
I'm just kidding.

00:29:47.380 --> 00:29:52.020
But the point of that is it's a standard that

00:29:52.020 --> 00:29:55.020
makes it so you don't have to build the thing as often.

00:29:55.020 --> 00:29:58.820
If you just want to know the metadata of NumPy, for example,

00:29:58.820 --> 00:30:01.300
you may no longer need to build it, and before you did.

00:30:01.300 --> 00:30:04.020
And so the standards are moving in a helpful direction here.

00:30:04.020 --> 00:30:05.540
But I just thought I'd call it out

00:30:05.540 --> 00:30:08.180
because the source distribution-- there

00:30:08.180 --> 00:30:10.140
are cases where it won't be faster.

00:30:10.140 --> 00:30:11.820
And I'm pretty interested in those.

00:30:11.820 --> 00:30:13.700
But people should know that they also exist.

00:30:13.700 --> 00:30:18.180
It's not just time.

00:30:18.180 --> 00:30:20.700
There's also security issues around that, right?

00:30:20.700 --> 00:30:26.220
If things are still based on building source from source

00:30:26.220 --> 00:30:29.460
and then running the setup py to see what the metadata is,

00:30:29.460 --> 00:30:31.420
it's both slow and also potentially

00:30:31.420 --> 00:30:34.660
running arbitrary code just to install a thing, which

00:30:34.660 --> 00:30:35.620
can make you--

00:30:35.620 --> 00:30:37.780
I mean, I don't know.

00:30:37.780 --> 00:30:40.500
Rarely has anything gone wrong with just installing and running

00:30:40.500 --> 00:30:41.820
arbitrary code off the internet.

00:30:41.820 --> 00:30:44.260
But sometimes it could go wrong.

00:30:44.260 --> 00:30:46.740
Yeah, it would be nice to get to a world

00:30:46.740 --> 00:30:53.060
where that's not required, at least for dependency resolution.

00:30:53.060 --> 00:30:55.380
And the standards are moving in that direction.

00:30:55.380 --> 00:30:56.020
Yeah, exactly.

00:30:56.020 --> 00:30:57.300
I mean, you might-- if you're going to use it,

00:30:57.300 --> 00:30:58.600
you're going to have to get it.

00:30:58.600 --> 00:30:59.980
But if you just want to know, well,

00:30:59.980 --> 00:31:02.260
what versions do I need to put these two things together,

00:31:02.260 --> 00:31:02.900
you shouldn't have to do that.

00:31:02.900 --> 00:31:03.780
Yeah, exactly.

00:31:03.780 --> 00:31:05.980
Because today, for NumPy, for example,

00:31:05.980 --> 00:31:07.660
if you didn't have a wheel, you would

00:31:07.660 --> 00:31:11.140
have to run some arbitrary code to ask it for its dependencies.

00:31:11.140 --> 00:31:13.540
Yeah, exactly.

00:31:13.620 --> 00:31:17.300
Well, let's talk about some of the usages here.

00:31:17.300 --> 00:31:20.140
I see some more interesting comments in the chat.

00:31:20.140 --> 00:31:21.060
I'll get back to them.

00:31:21.060 --> 00:31:29.340
First of all, is it like "Highlander," the movie?

00:31:29.340 --> 00:31:31.540
Should there just be one?

00:31:31.540 --> 00:31:35.060
Is uv a thing that I put into, say, my requirements file

00:31:35.060 --> 00:31:36.340
if I want to use it?

00:31:36.340 --> 00:31:38.980
Or do I install it just once for my machine?

00:31:38.980 --> 00:31:42.420
What's the scale of UV?

00:31:42.420 --> 00:31:43.860
So there's a lot of different ways.

00:31:43.860 --> 00:31:46.180
You can-- there's a lot of different ways to install it.

00:31:46.180 --> 00:31:49.100
You definitely can install it into a virtual environment.

00:31:49.100 --> 00:31:50.620
My general recommendation would be

00:31:50.620 --> 00:31:53.340
to install it on your machine once.

00:31:53.340 --> 00:31:55.940
Because an interesting thing about UV

00:31:55.940 --> 00:32:00.780
is you don't need Python to install it.

00:32:00.780 --> 00:32:02.860
And it doesn't have--

00:32:02.860 --> 00:32:04.700
you need to have Python on your machine,

00:32:04.700 --> 00:32:07.420
because we need to be able to, for example,

00:32:07.420 --> 00:32:09.420
build source distributions or know

00:32:09.420 --> 00:32:10.940
where to install the thing.

00:32:10.940 --> 00:32:15.220
We have to install into a virtual environment somewhere.

00:32:15.220 --> 00:32:17.780
And so you have to have Python installed on your machine,

00:32:17.780 --> 00:32:19.660
but uv does not depend on Python.

00:32:19.660 --> 00:32:22.940
So it can install into arbitrary virtual environments

00:32:22.940 --> 00:32:26.340
or into arbitrary other Python interpreters.

00:32:26.340 --> 00:32:30.140
So that's why we generally recommend

00:32:30.140 --> 00:32:32.260
using these standalone installers

00:32:32.260 --> 00:32:34.580
that we have at the top of the snippet on the screen.

00:32:34.580 --> 00:32:38.180
So they're like the curl and the PowerShell invocations.

00:32:38.180 --> 00:32:41.780
Those will install a single binary

00:32:41.780 --> 00:32:44.300
on your machine that's uv.

00:32:44.300 --> 00:32:47.580
And from there, you can use uv to install

00:32:47.580 --> 00:32:50.980
into virtual environments that it creates,

00:32:50.980 --> 00:32:54.460
to install into your system Python, to do whatever.

00:32:54.460 --> 00:32:59.140
So I would say most people, based on the statistics,

00:32:59.140 --> 00:33:01.740
based on our download statistics,

00:33:01.740 --> 00:33:04.500
most people still install uv with pip, which makes sense,

00:33:04.500 --> 00:33:07.340
which is not that surprising to me.

00:33:07.340 --> 00:33:10.180
But I would generally recommend having one UV

00:33:10.180 --> 00:33:11.260
install on your machine.

00:33:11.260 --> 00:33:13.460
Although if you do install into a virtual environment,

00:33:13.460 --> 00:33:14.700
that's also totally fine.

00:33:14.700 --> 00:33:16.540
Nothing's going to go wrong.

00:33:16.540 --> 00:33:18.380
It's just not completely necessary

00:33:18.380 --> 00:33:20.260
because a single uv can already install

00:33:20.260 --> 00:33:22.220
into that virtual environment.

00:33:22.220 --> 00:33:22.860
Right.

00:33:22.860 --> 00:33:26.180
You're never going to import uv.

00:33:26.180 --> 00:33:26.700
No.

00:33:26.700 --> 00:33:30.340
You might, but in general, people are not going to.

00:33:30.340 --> 00:33:31.660
I think you can.

00:33:31.660 --> 00:33:34.940
I'm trying to think what would happen.

00:33:34.940 --> 00:33:40.020
It's not like-- things like pytest and other things,

00:33:40.020 --> 00:33:43.100
a lot of times there could be just one of those.

00:33:43.100 --> 00:33:44.620
But then you want to use fixtures,

00:33:44.620 --> 00:33:46.260
and you need to import something out.

00:33:46.260 --> 00:33:48.620
So then it really needs to be in the virtual environment

00:33:48.620 --> 00:33:50.460
and accessible, like a library.

00:33:50.460 --> 00:33:52.500
But this is just something you run maybe even

00:33:52.500 --> 00:33:55.940
before your virtual environment exists.

00:33:55.940 --> 00:34:00.260
It really does ideally exist outside of it, I think.

00:34:00.260 --> 00:34:01.900
Yeah, ideally it exists outside of it.

00:34:01.900 --> 00:34:03.100
And there are some cases where you'd

00:34:03.100 --> 00:34:04.900
want to install it within the virtual environment,

00:34:04.900 --> 00:34:07.260
but ideally it exists outside of it.

00:34:07.260 --> 00:34:08.840
The other thing that's nice about using

00:34:08.840 --> 00:34:11.060
the standalone installers at the top here

00:34:11.060 --> 00:34:15.500
is soon we're going to ship a self-update command.

00:34:15.500 --> 00:34:19.500
So you can do uv self-update, and it will update UV

00:34:19.500 --> 00:34:20.820
to the latest version.

00:34:20.820 --> 00:34:23.620
And we can't really support that if you install it

00:34:23.620 --> 00:34:26.220
with a different package manager like pip or brew.

00:34:26.220 --> 00:34:28.300
Those have their own upgrade commands, obviously.

00:34:28.300 --> 00:34:31.020
But if you install it with our installer,

00:34:31.020 --> 00:34:34.060
then we can control the upgrades and stuff like that

00:34:34.060 --> 00:34:36.780
and provide some other features.

00:34:36.780 --> 00:34:38.540
So that's generally what we recommend.

00:34:38.540 --> 00:34:39.940
But obviously, we're always going

00:34:39.940 --> 00:34:42.860
to support installing with pip and stuff too.

00:34:42.860 --> 00:34:45.900
Yeah, I'm all about pipx these days.

00:34:45.900 --> 00:34:46.820
I really like--

00:34:46.820 --> 00:34:47.620
Yeah, we're pipx.

00:34:47.620 --> 00:34:48.780
That's mine.

00:34:48.780 --> 00:34:51.620
Yeah, yeah, pipx really--

00:34:51.620 --> 00:34:53.780
you can just say, kind of like brew,

00:34:53.780 --> 00:34:56.700
you can say upgrade all my Python CLI tools.

00:34:56.700 --> 00:34:59.100
pipx upgrade all.

00:34:59.100 --> 00:35:02.780
Basically, I find rough and uv is just--

00:35:02.780 --> 00:35:05.700
you guys are moving super fast, and there's frequently

00:35:05.700 --> 00:35:07.180
an update.

00:35:07.180 --> 00:35:11.020
There are often updates, yeah.

00:35:11.020 --> 00:35:14.260
Yeah, and then the uv interface, it's

00:35:14.260 --> 00:35:16.540
meant to be pretty familiar to-- or it's meant to be,

00:35:16.540 --> 00:35:20.980
I guess, hopefully very familiar to people who have used--

00:35:20.980 --> 00:35:23.820
who are already using pip and other tools.

00:35:23.860 --> 00:35:30.220
And so UVVM creates a virtual environment.

00:35:30.220 --> 00:35:32.900
And then we have this pip subcommand,

00:35:32.900 --> 00:35:36.140
so uv pip install flask.

00:35:36.140 --> 00:35:39.140
And that doesn't call or use pip in any way.

00:35:39.140 --> 00:35:42.020
We're just using pip here to convey

00:35:42.020 --> 00:35:44.300
what the interface looks like.

00:35:44.300 --> 00:35:46.620
And part of the motivation there is, at some point

00:35:46.620 --> 00:35:52.420
in the future, we probably want to add a new interface to UV

00:35:52.420 --> 00:35:57.620
that's a little bit more high level.

00:35:57.620 --> 00:36:00.940
So you could think of something like Poetry,

00:36:00.940 --> 00:36:04.260
where they have Poetry install.

00:36:04.260 --> 00:36:06.420
They have this sort of higher level interface

00:36:06.420 --> 00:36:08.300
for interfacing with packages.

00:36:08.300 --> 00:36:11.140
We want to do something like that.

00:36:11.140 --> 00:36:14.540
And so that's why we left the top level of the interface

00:36:14.540 --> 00:36:18.500
clear, because we might kind of like integrate and--

00:36:18.500 --> 00:36:21.300
sorry, innovate and ship a bunch of stuff that would otherwise

00:36:21.300 --> 00:36:22.660
break this interface.

00:36:22.660 --> 00:36:24.900
So by putting this stuff under pip,

00:36:24.900 --> 00:36:27.220
we basically created this isolated space

00:36:27.220 --> 00:36:29.700
where we can make sure that those commands keep

00:36:29.700 --> 00:36:33.860
working no matter what we choose to change in the future.

00:36:33.860 --> 00:36:36.340
And it's very similar to pip's interface.

00:36:36.340 --> 00:36:37.180
It's pip install.

00:36:37.180 --> 00:36:38.680
And then it could be a package name.

00:36:38.680 --> 00:36:40.820
It could be a -r requirements file.

00:36:40.820 --> 00:36:42.820
We support editable installs.

00:36:42.820 --> 00:36:46.620
We support URL dependencies, get dependencies,

00:36:46.620 --> 00:36:47.940
all that kind of stuff.

00:36:48.460 --> 00:36:50.380
All the stuff you might normally do,

00:36:50.380 --> 00:36:53.860
pip install something, for the most part, that's the same.

00:36:53.860 --> 00:36:55.100
Yep, yeah, exactly.

00:36:55.100 --> 00:36:56.940
And we support a lot of the same flags, too,

00:36:56.940 --> 00:36:57.980
that pip supports.

00:36:57.980 --> 00:37:01.420
So like --index URL, --extra index URL,

00:37:01.420 --> 00:37:05.500
like --null binary, all that stuff.

00:37:05.500 --> 00:37:09.020
We don't support every flag, but we've

00:37:09.020 --> 00:37:11.100
put a lot of effort into supporting a lot of them.

00:37:11.100 --> 00:37:12.660
And we've added more over time.

00:37:12.660 --> 00:37:16.020
Now we support --null build isolation and stuff

00:37:16.020 --> 00:37:18.700
like that that maybe most listeners have never even

00:37:18.700 --> 00:37:19.860
had to look at.

00:37:19.860 --> 00:37:23.060
But these things matter in some circumstances.

00:37:23.060 --> 00:37:27.580
And so over time, our goal is to add more of the interface.

00:37:27.580 --> 00:37:33.100
But I would say for common use cases,

00:37:33.100 --> 00:37:35.020
I would expect that it just works.

00:37:35.020 --> 00:37:38.900
Just adding uv up front, it should just work.

00:37:38.900 --> 00:37:41.460
Now as you become more complex, it won't.

00:37:41.460 --> 00:37:43.180
And you'll run into some--

00:37:43.180 --> 00:37:46.620
we have a whole document of subtle ways that we deviate.

00:37:46.620 --> 00:37:47.500
Some are intentional.

00:37:47.500 --> 00:37:51.140
Some I consider bugs, like some we want to fix over time.

00:37:51.140 --> 00:37:53.060
But the intention is that for most people,

00:37:53.060 --> 00:37:56.260
we want it to just work.

00:37:56.260 --> 00:37:58.980
Once we fix the first round of bugs following the release,

00:37:58.980 --> 00:37:59.500
of course.

00:37:59.500 --> 00:38:01.940
Yeah, yeah, sure.

00:38:01.940 --> 00:38:07.260
So you've got a UVVENV, VEMP, for Creative Virtual

00:38:07.260 --> 00:38:08.340
Environment.

00:38:08.340 --> 00:38:11.860
And it has a lot of the flags that Python-MVENV would have,

00:38:11.860 --> 00:38:17.500
where you can say, bring along pip, or upgrade things,

00:38:17.500 --> 00:38:20.140
or set the prompt name, that kind of stuff, right?

00:38:20.140 --> 00:38:21.260
Yep, yeah, exactly.

00:38:21.260 --> 00:38:21.760
Yep.

00:38:21.760 --> 00:38:24.660
Similar for UV, pip, and then stuff.

00:38:24.660 --> 00:38:26.940
What I find I do for most of my work,

00:38:26.940 --> 00:38:30.100
at least if I'm not trying to teach or do a presentation,

00:38:30.100 --> 00:38:32.100
where people are like, what did you just do?

00:38:32.100 --> 00:38:33.900
Is I'll have kind of aliases, right?

00:38:33.900 --> 00:38:37.460
Like UV, pip, install-r requirements on TXT

00:38:37.460 --> 00:38:39.860
is just PIR, pip install requirements.

00:38:39.860 --> 00:38:40.900
Things like that, right?

00:38:40.900 --> 00:38:41.660
Yeah, yeah, yeah.

00:38:41.660 --> 00:38:44.820
And so I try to just take the common stuff.

00:38:44.820 --> 00:38:50.020
And it doesn't matter if it's pip or uv really backing it

00:38:50.020 --> 00:38:53.980
from my CLI ergonomics, right?

00:38:53.980 --> 00:38:55.220
I use my alias.

00:38:55.220 --> 00:38:58.500
And if I want to change that, I just go and edit it.

00:38:58.500 --> 00:39:02.900
So for me, it was super easy to switch to adopt these things,

00:39:02.900 --> 00:39:07.540
because I'm like, I edit my ZSH RC file once,

00:39:07.540 --> 00:39:09.580
and now I just do the same stuff.

00:39:09.580 --> 00:39:12.340
And it works, but the new way, way faster.

00:39:12.340 --> 00:39:15.980
Yeah, and the goal of pip compatibility

00:39:15.980 --> 00:39:19.980
has been interesting, because there are actually

00:39:19.980 --> 00:39:21.660
some things that we very intentionally

00:39:21.660 --> 00:39:23.060
want to do differently.

00:39:23.060 --> 00:39:27.580
And I won't speak for the pip maintainers,

00:39:27.580 --> 00:39:29.660
but I think in some cases, there are probably things

00:39:29.660 --> 00:39:31.820
that they would do differently too, if they could.

00:39:31.820 --> 00:39:33.380
I think so too, yeah.

00:39:33.380 --> 00:39:38.220
Yeah, because pip, I mean, pip is extremely important.

00:39:38.220 --> 00:39:43.780
And its number one goal is it needs to be robust, right?

00:39:43.780 --> 00:39:45.660
It needs to keep working.

00:39:45.660 --> 00:39:49.020
And it needs to be compatible, because it's truly

00:39:49.020 --> 00:39:52.700
the cornerstone of a lot of the Python ecosystem.

00:39:52.700 --> 00:39:56.820
And so pip, it's harder for them to change things, especially

00:39:56.820 --> 00:39:57.540
in a breaking way.

00:39:57.540 --> 00:39:59.180
And they have to be really thoughtful

00:39:59.180 --> 00:40:01.580
and do that over a long period of time.

00:40:01.580 --> 00:40:04.020
And so we're in kind of a privileged position, honestly,

00:40:04.020 --> 00:40:06.340
because we come in with a new tool.

00:40:06.340 --> 00:40:09.740
We can actually choose to do things differently.

00:40:09.740 --> 00:40:11.340
And some people get upset about it,

00:40:11.340 --> 00:40:13.580
obviously, because they're like, this

00:40:13.580 --> 00:40:15.380
isn't exactly how pip does it.

00:40:15.380 --> 00:40:17.300
I'm trying to hold firm on some of those things

00:40:17.300 --> 00:40:19.140
and also be open-minded on others, right?

00:40:19.140 --> 00:40:24.060
But one thing that we do that's different, that's--

00:40:24.060 --> 00:40:26.860
I guess maybe it's not evident from this screen exactly.

00:40:26.860 --> 00:40:27.860
Or I guess it sort of is.

00:40:27.860 --> 00:40:32.140
So when you do uvvmv, we default to the name .vmv.

00:40:32.140 --> 00:40:35.580
So if you don't provide a name, we just default to .vmv.

00:40:35.580 --> 00:40:38.380
And there was a PEP to make that a standard that

00:40:38.380 --> 00:40:39.980
got pulled back.

00:40:39.980 --> 00:40:42.580
But it's not like we're trying to make it a standard.

00:40:42.580 --> 00:40:44.380
But I just think it's a good default.

00:40:44.380 --> 00:40:46.100
We want to abstract away some of this stuff.

00:40:46.100 --> 00:40:47.660
And so you can just have a virtual--

00:40:47.660 --> 00:40:50.300
you can obviously pass a name if you want, but we default to .vmv.

00:40:50.300 --> 00:40:51.700
That's different from other tools.

00:40:51.700 --> 00:40:55.860
And then the other thing is, when you do uvpip install,

00:40:55.860 --> 00:41:00.060
by default, we require a virtual environment.

00:41:00.060 --> 00:41:02.100
And so if you do uvpip install flask

00:41:02.100 --> 00:41:06.180
and there's no virtual environment, we'll error.

00:41:06.180 --> 00:41:07.780
And it doesn't have to be active.

00:41:07.780 --> 00:41:09.580
We'll look for it in the current directory,

00:41:09.580 --> 00:41:10.620
even if it's not active.

00:41:10.620 --> 00:41:14.700
So if you do uvvm, then uvpip install flask, it will work.

00:41:14.700 --> 00:41:16.700
And in my opinion, it will do the intuitive thing,

00:41:16.700 --> 00:41:18.580
which is it will install into the environment

00:41:18.580 --> 00:41:19.660
in the current directory.

00:41:19.660 --> 00:41:20.820
So it's trying to provide--

00:41:20.820 --> 00:41:21.780
[INTERPOSING VOICES]

00:41:21.780 --> 00:41:24.780
Like if I'm a little farther down, it'll go and say, oh,

00:41:24.780 --> 00:41:25.340
just--

00:41:25.340 --> 00:41:26.420
oh, that's amazing.

00:41:26.420 --> 00:41:26.900
Exactly.

00:41:26.900 --> 00:41:28.460
So it'll find the virtual environment

00:41:28.460 --> 00:41:30.620
in the current directory or any parent directory.

00:41:30.620 --> 00:41:34.940
So for me, that's just a nice default workflow

00:41:34.940 --> 00:41:39.060
that encourages virtual environments

00:41:39.060 --> 00:41:40.820
and doesn't get in your way about it.

00:41:40.820 --> 00:41:42.580
And we do have a flag for installing

00:41:42.580 --> 00:41:43.820
outside virtual environments.

00:41:43.820 --> 00:41:45.820
But the difference is, in UV, you

00:41:45.820 --> 00:41:48.700
have to opt in if you want to do something like install

00:41:48.700 --> 00:41:51.860
into the system Python.

00:41:51.860 --> 00:41:53.400
It's a very virtual environment first

00:41:53.400 --> 00:41:55.180
while abstracting away a lot of the details

00:41:55.180 --> 00:41:56.540
of virtual environments.

00:41:56.540 --> 00:41:59.100
So there are things like that where we need attention

00:41:59.100 --> 00:41:59.620
decisions.

00:41:59.620 --> 00:42:00.620
[LAUGHTER]

00:42:00.620 --> 00:42:01.660
In my opinion, yeah.

00:42:01.660 --> 00:42:03.380
[LAUGHTER]

00:42:03.380 --> 00:42:04.020
Yeah.

00:42:04.020 --> 00:42:06.260
And I think-- and it's nice because we

00:42:06.260 --> 00:42:07.900
can start with that behavior.

00:42:07.900 --> 00:42:11.580
And we're in a privileged position

00:42:11.580 --> 00:42:14.340
because we can start with different defaults.

00:42:14.340 --> 00:42:15.420
Yeah, for sure.

00:42:15.420 --> 00:42:29.060
So if I do a UVVNV for a virtual environment,

00:42:29.060 --> 00:42:33.700
then maybe I uv pip install something.

00:42:33.700 --> 00:42:38.620
But then I forget and I pip install something else.

00:42:38.620 --> 00:42:39.380
Does it break?

00:42:39.380 --> 00:42:41.580
Is it OK?

00:42:41.580 --> 00:42:44.420
As in the third time there's no UV?

00:42:44.420 --> 00:42:45.620
Well, yeah, exactly.

00:42:45.620 --> 00:42:49.420
So I'm in uv pip install something, uv pip install that.

00:42:49.420 --> 00:42:50.920
And I just, oh, I forgot this thing.

00:42:50.920 --> 00:42:51.780
I just pip install.

00:42:51.780 --> 00:42:53.780
Oh, I forgot the uv.

00:42:53.780 --> 00:42:54.500
So it's--

00:42:54.500 --> 00:42:56.460
No, it shouldn't break.

00:42:56.460 --> 00:42:59.540
So let's say you activate the virtual environment.

00:42:59.540 --> 00:43:00.740
Yeah, it's already activated.

00:43:00.740 --> 00:43:01.240
OK, cool.

00:43:01.240 --> 00:43:03.740
So you do UVVNV, you activate the virtual environment,

00:43:03.740 --> 00:43:05.620
you do uv pip install flask, and then you

00:43:05.620 --> 00:43:08.060
do pip install black or whatever.

00:43:08.060 --> 00:43:09.180
Yeah, something, yeah.

00:43:09.180 --> 00:43:12.220
That should work just fine because the thing

00:43:12.220 --> 00:43:15.340
that we ultimately create in the virtual environment,

00:43:15.340 --> 00:43:16.820
that's all based on standards.

00:43:16.820 --> 00:43:20.300
So the stuff that we do in the virtual environment

00:43:20.300 --> 00:43:24.500
to install packages, it should look roughly indistinguishable

00:43:24.500 --> 00:43:25.580
from what pip would do.

00:43:25.580 --> 00:43:27.820
And it's totally interoperable with pip.

00:43:27.820 --> 00:43:31.980
So similarly, if you did pip install and then pip install

00:43:31.980 --> 00:43:35.620
flask and then uv pip uninstall flask,

00:43:35.620 --> 00:43:36.900
that would work correctly.

00:43:36.900 --> 00:43:38.740
Pip would install flask and we would remove it.

00:43:38.740 --> 00:43:40.540
Because everything that pip and UV

00:43:40.540 --> 00:43:42.220
are doing in the virtual environment

00:43:42.220 --> 00:43:44.500
is based on standards.

00:43:44.500 --> 00:43:46.420
So the way that we add and remove packages,

00:43:46.420 --> 00:43:48.760
all that kind of stuff, it should be totally interoperable

00:43:48.760 --> 00:43:50.100
with other tools.

00:43:50.100 --> 00:43:52.220
OK, cool.

00:43:52.220 --> 00:43:55.580
PyPI is pretty good at having analytics

00:43:55.580 --> 00:43:59.340
around what packages are being downloaded, what's popular,

00:43:59.340 --> 00:44:01.380
what platforms.

00:44:01.380 --> 00:44:04.580
Do you do anything like send a user agent or something

00:44:04.580 --> 00:44:07.220
so that people could answer the question, well,

00:44:07.220 --> 00:44:09.220
how many people are using straight pip

00:44:09.220 --> 00:44:12.460
and how many people are using uv in a year?

00:44:12.460 --> 00:44:15.260
Yeah, we sent a uv user agent.

00:44:15.260 --> 00:44:18.860
And right now, it's just uv in the uv version.

00:44:18.860 --> 00:44:22.180
There's an open issue in the repo

00:44:22.180 --> 00:44:26.380
from Pradyan, who works on pip, that

00:44:26.380 --> 00:44:30.020
outlines all this stuff that pip includes in its own user

00:44:30.020 --> 00:44:32.320
agent, which we want to add.

00:44:32.320 --> 00:44:33.500
Which is pretty interesting.

00:44:33.500 --> 00:44:35.100
I actually didn't know this.

00:44:35.100 --> 00:44:38.180
So pip and its user agent includes a lot of things

00:44:38.180 --> 00:44:39.700
about the current Python platform.

00:44:39.700 --> 00:44:47.380
Data that they use in PyPI basically to inform decisions.

00:44:47.380 --> 00:44:49.380
Like, oh, no one's using--

00:44:49.380 --> 00:44:51.300
I don't think this is actually how it's used,

00:44:51.300 --> 00:44:52.420
but just an example.

00:44:52.420 --> 00:44:54.780
Oh, no one's using Python 3.7 anymore.

00:44:54.780 --> 00:44:57.220
Let's lower priority on that because no one's

00:44:57.220 --> 00:45:00.620
installing Python with Python 3.7.

00:45:00.620 --> 00:45:02.820
And so we want to add-- we don't have that right now.

00:45:02.820 --> 00:45:05.020
We're planning to add it.

00:45:05.020 --> 00:45:08.500
But yeah, it will be interesting to see.

00:45:08.500 --> 00:45:11.340
We can get statistics over time, too, on uv and pip

00:45:11.340 --> 00:45:14.540
and how common they are in different dimensions.

00:45:14.540 --> 00:45:16.180
Yeah.

00:45:16.180 --> 00:45:20.460
One thing that would be kind of fun to have is--

00:45:20.460 --> 00:45:23.060
I'm not sure if it's at all interesting to you,

00:45:23.060 --> 00:45:29.020
but to have some kind of cron job or background thing,

00:45:29.020 --> 00:45:31.260
if you just interact with UV, if it kind of kicked off

00:45:31.260 --> 00:45:33.380
sort of a background process that did its thing.

00:45:33.380 --> 00:45:39.300
But take the history of maybe the top 500 packages

00:45:39.300 --> 00:45:43.300
plus the ones you've used and just kind of keep a cache

00:45:43.300 --> 00:45:44.460
up to date on your system.

00:45:44.460 --> 00:45:47.900
So if you're on an airplane or you're in a coffee shop

00:45:47.900 --> 00:45:51.940
or for some reason the internet's not great,

00:45:51.940 --> 00:45:55.220
it's kind of pre-filled the cache and everything's there.

00:45:55.220 --> 00:45:55.980
And then kind of--

00:45:55.980 --> 00:45:56.820
[INTERPOSING VOICES]

00:45:56.820 --> 00:45:59.380
That might be fun.

00:45:59.380 --> 00:46:02.300
Yeah, we do have a dash offline flag, which will--

00:46:02.300 --> 00:46:07.780
it forbids network requests, obviously.

00:46:07.780 --> 00:46:10.860
But it'll try and do the full install

00:46:10.860 --> 00:46:12.660
without accessing the network.

00:46:12.660 --> 00:46:13.420
Yeah, that's cool.

00:46:13.420 --> 00:46:15.700
It would be cool to pre-fill the cache.

00:46:15.700 --> 00:46:18.220
Yeah, it's just like if you're a uv user

00:46:18.220 --> 00:46:20.460
and you sit down on your computer and for some reason

00:46:20.460 --> 00:46:22.900
the internet's out, I'm at a conference, I'm doing a talk,

00:46:22.900 --> 00:46:25.220
and it's got the dreaded, terrible conference Wi-Fi.

00:46:25.220 --> 00:46:26.460
It's not the end of your demo.

00:46:26.460 --> 00:46:28.260
It's just like, yeah, see how fast this is?

00:46:28.260 --> 00:46:30.380
It's amazing.

00:46:30.380 --> 00:46:33.420
Yeah, it's actually funny because the benchmarking,

00:46:33.420 --> 00:46:38.420
like when we do benchmarks, benchmarks

00:46:38.420 --> 00:46:42.820
can just vary so dramatically based on internet connectivity.

00:46:42.820 --> 00:46:44.020
That is often the bottleneck.

00:46:44.020 --> 00:46:47.340
I mean, it's clearly not always the bottleneck

00:46:47.340 --> 00:46:51.260
because we're able to be faster than other tools.

00:46:51.260 --> 00:46:53.340
So if it was always the bottleneck,

00:46:53.340 --> 00:46:55.220
I don't think that wouldn't really be true.

00:46:55.220 --> 00:46:56.340
But it matters a lot.

00:46:56.340 --> 00:46:58.540
And so sometimes I'll throw on macOS,

00:46:58.540 --> 00:47:01.860
they have a tool called Network Link Conditioner.

00:47:01.860 --> 00:47:04.100
So you can actually force--

00:47:04.100 --> 00:47:05.860
Like drag your network down.

00:47:05.860 --> 00:47:07.500
Yeah, you can force it down.

00:47:07.500 --> 00:47:10.220
And the categories are like--

00:47:10.220 --> 00:47:13.460
it's not literally called bad mobile phone or something,

00:47:13.460 --> 00:47:15.100
but that's basically what it is.

00:47:15.100 --> 00:47:17.900
Yeah, it's like very lossy edge network.

00:47:17.900 --> 00:47:19.700
Like those are the pre-built--

00:47:19.700 --> 00:47:21.740
it's pretty funny, but it is actually--

00:47:21.740 --> 00:47:23.980
that's a very helpful thing for benchmarking.

00:47:23.980 --> 00:47:26.220
Sometimes actually, if you have a really good network

00:47:26.220 --> 00:47:28.780
connection, sometimes it's actually helpful to set that

00:47:28.780 --> 00:47:33.940
anyway to a pretty good level because then at least it

00:47:33.940 --> 00:47:36.900
will be very consistent across your executions.

00:47:36.900 --> 00:47:39.260
Anyway, it's something I've learned over time.

00:47:39.260 --> 00:47:42.700
Yeah, that is super interesting.

00:47:42.700 --> 00:47:46.460
So one of the things I think is interesting to consider here

00:47:46.460 --> 00:47:50.740
is obviously this is way faster.

00:47:50.740 --> 00:47:54.100
I saw some of the announcements and some of the discussion

00:47:54.100 --> 00:47:59.060
around the announcements, and the people

00:47:59.060 --> 00:48:01.140
were really surprised how fast this is.

00:48:01.140 --> 00:48:04.820
And I don't think Rust is the full answer.

00:48:04.820 --> 00:48:05.860
You tell me if I'm wrong.

00:48:05.860 --> 00:48:11.580
But one part, obviously, making the code run ultra fast,

00:48:11.580 --> 00:48:13.380
that is an important part of it.

00:48:13.380 --> 00:48:16.620
But it also seems like you all have rethought

00:48:16.620 --> 00:48:19.700
some of the internal algorithms and some of the caching

00:48:19.700 --> 00:48:21.140
and some of the ways things work,

00:48:21.140 --> 00:48:23.980
maybe with a fresh take on it, where you're not constrained

00:48:23.980 --> 00:48:26.660
by the way it's been done for many, many years.

00:48:26.660 --> 00:48:31.300
So what elements are at play to make it as fast as it is?

00:48:31.300 --> 00:48:33.700
Is it just Rust, or is it something else?

00:48:33.700 --> 00:48:35.820
So Rust is important.

00:48:35.820 --> 00:48:39.540
But the way I typically frame it is

00:48:39.540 --> 00:48:42.700
that Rust is kind of like an enabler to writing

00:48:42.700 --> 00:48:44.660
really fast programs.

00:48:44.660 --> 00:48:53.020
It forces you to slash lets you care about certain things that

00:48:53.020 --> 00:48:56.900
matter a lot for performance that, in Python,

00:48:56.900 --> 00:48:59.940
there's actually just no way to care about them.

00:48:59.940 --> 00:49:02.500
I'm talking specifically here about memory allocation.

00:49:02.500 --> 00:49:05.100
In Python, that all just kind of happens.

00:49:05.100 --> 00:49:06.820
In Rust, you're forced to think about,

00:49:06.820 --> 00:49:08.580
am I going to allocate memory here or not?

00:49:08.580 --> 00:49:10.580
And when is it going to be deallocated

00:49:10.580 --> 00:49:11.740
and all that kind of stuff?

00:49:11.740 --> 00:49:16.780
And so that unlocks the ability to care and be really careful

00:49:16.780 --> 00:49:18.860
in how you manage it.

00:49:18.860 --> 00:49:20.740
So Rust is a really important-- Rust

00:49:20.740 --> 00:49:23.140
is an important part of the success story here.

00:49:23.140 --> 00:49:25.700
But I think it's really--

00:49:25.700 --> 00:49:29.340
I think it would be really very incorrect to say

00:49:29.340 --> 00:49:30.980
that it's all about Rust.

00:49:30.980 --> 00:49:33.340
And it's not a Rust versus Python thing.

00:49:33.340 --> 00:49:33.860
Right.

00:49:33.860 --> 00:49:37.620
If we could just recompile pip with--

00:49:37.620 --> 00:49:38.580
Yeah, so if you took--

00:49:38.580 --> 00:49:41.420
--with Cython or something, boom, it would just be--

00:49:41.420 --> 00:49:44.060
no, it wouldn't be as big of a deal, right?

00:49:44.060 --> 00:49:47.020
If you took pip and just rewrote it line by line as close

00:49:47.020 --> 00:49:50.820
as you could in Rust, it would probably be faster than pip.

00:49:50.820 --> 00:49:53.740
But it would not be nearly as fast as uv.

00:49:53.740 --> 00:49:55.700
We just do a lot of things differently.

00:49:55.700 --> 00:49:58.780
And part of, I guess, evidence for this,

00:49:58.780 --> 00:50:01.420
too, is throughout the development of UV,

00:50:01.420 --> 00:50:03.340
there were multiple pull requests

00:50:03.340 --> 00:50:07.180
that sped up uv as a whole by 30% to 50%.

00:50:07.180 --> 00:50:08.100
So what does that say?

00:50:08.100 --> 00:50:10.540
That says that there's lots of different--

00:50:10.540 --> 00:50:12.420
those were all Rust programs.

00:50:12.420 --> 00:50:15.900
So we were able to write the same Rust program many times,

00:50:15.900 --> 00:50:18.500
optimizing it more and more and more.

00:50:18.500 --> 00:50:21.140
And so there's so much engineering

00:50:21.140 --> 00:50:23.420
that went into making it fast.

00:50:23.420 --> 00:50:25.300
Some of it's how the cache is designed.

00:50:25.300 --> 00:50:27.220
That was a really important piece.

00:50:27.220 --> 00:50:31.060
And that's actually something that pip could also do.

00:50:31.060 --> 00:50:36.540
And I think it's possible a good outcome here, actually,

00:50:36.540 --> 00:50:39.020
is that pip is able to take some of these changes

00:50:39.020 --> 00:50:41.100
and incorporate them over time.

00:50:41.100 --> 00:50:46.220
And we are kind of the guinea pig for that.

00:50:46.220 --> 00:50:48.380
We're going to change user expectations a little bit

00:50:48.380 --> 00:50:50.260
about how the cache is set up.

00:50:50.260 --> 00:50:55.340
We're going to run into bugs about platform compatibility.

00:50:55.340 --> 00:50:57.580
We're going to run into bugs based on this cache design.

00:50:57.580 --> 00:50:59.300
And hopefully, that could, at some point,

00:50:59.300 --> 00:51:02.100
help inform pip if they choose to redesign their cache this

00:51:02.100 --> 00:51:02.820
way.

00:51:02.820 --> 00:51:04.780
The cache design is a really big thing.

00:51:04.780 --> 00:51:10.780
And then just a lot of profiling the program,

00:51:10.780 --> 00:51:12.420
figuring out what the bottleneck is,

00:51:12.420 --> 00:51:15.340
and then solving the bottleneck, and just

00:51:15.340 --> 00:51:17.420
really intense engineering work that was not me,

00:51:17.420 --> 00:51:19.900
but was other people on the team to optimize some of that.

00:51:19.900 --> 00:51:23.100
A good example is--

00:51:23.100 --> 00:51:24.440
it's OK, it sounds silly.

00:51:24.440 --> 00:51:26.740
But we found that a bottleneck--

00:51:26.740 --> 00:51:28.380
when all the data is cached and you're

00:51:28.380 --> 00:51:31.060
trying to do a resolution, so there's no network requests,

00:51:31.060 --> 00:51:33.820
everything's local, one of the bottlenecks

00:51:33.820 --> 00:51:37.940
that we kept running into was parsing and comparing

00:51:37.940 --> 00:51:40.300
versions, version specifiers.

00:51:40.300 --> 00:51:43.700
So in Python, when you have a requirements file,

00:51:43.700 --> 00:51:49.420
you have FastAPI is greater than version 1 or whatever.

00:51:49.420 --> 00:51:50.980
And then in the FastAPI file, you

00:51:50.980 --> 00:51:54.080
have FastAPI version 1.0.0, blah, blah, blah.

00:51:54.080 --> 00:51:59.540
So parsing those, and then we were comparing those,

00:51:59.540 --> 00:52:04.140
we were doing comparisons between version markers

00:52:04.140 --> 00:52:06.740
so many times, because it was just a constant thing

00:52:06.740 --> 00:52:07.740
in dependency resolution.

00:52:07.740 --> 00:52:09.300
It's like, can I use this dependency?

00:52:09.300 --> 00:52:11.820
Well, does it fit to this range?

00:52:11.820 --> 00:52:19.420
So Andrew Gallant from our team rewrote that parser

00:52:19.420 --> 00:52:21.260
in the version comparison specifier.

00:52:21.260 --> 00:52:23.580
And it's one of the most incredible pull requests

00:52:23.580 --> 00:52:25.480
I've ever seen.

00:52:25.480 --> 00:52:27.840
Every commitment is so interesting.

00:52:27.840 --> 00:52:31.040
And he optimized it so massively that it was like,

00:52:31.040 --> 00:52:36.760
he's basically representing the version in the end by a 64-bit--

00:52:36.760 --> 00:52:38.680
like a U64 integer.

00:52:38.680 --> 00:52:40.960
Comparisons is just like, compare the two integers.

00:52:40.960 --> 00:52:43.360
And there was just so much engineering that went into it.

00:52:43.360 --> 00:52:45.600
And it sped up the cache case by 30%.

00:52:45.600 --> 00:52:51.060
And so there's just a lot of engineering that went into it.

00:52:51.060 --> 00:52:55.360
And again, it's harder for pip to do some of those things,

00:52:55.360 --> 00:53:02.200
because the codebases, they have actual users to support.

00:53:02.200 --> 00:53:05.440
We were able to do this before we launched publicly.

00:53:05.440 --> 00:53:06.640
We could break things.

00:53:06.640 --> 00:53:08.040
We can do things.

00:53:08.040 --> 00:53:10.400
We can make massive changes to the codebase

00:53:10.400 --> 00:53:11.560
in short periods of time.

00:53:11.560 --> 00:53:13.920
So we're in kind of a privileged position

00:53:13.920 --> 00:53:16.240
to be able to really optimize the performance like that.

00:53:16.240 --> 00:53:20.320
But it's a big part, culturally, of what we wanted to do, too.

00:53:21.140 --> 00:53:23.980
It's like, we're going to make this thing extremely fast.

00:53:23.980 --> 00:53:29.220
>>Yeah, I'm seeing also interesting secondary effects.

00:53:29.220 --> 00:53:31.220
Talks and not-- nots?

00:53:31.220 --> 00:53:32.260
I think that's talks.

00:53:32.260 --> 00:53:34.940
Talking about using it, making it faster.

00:53:34.940 --> 00:53:38.380
Just now, I hear Henry says, build 1.1 is faster

00:53:38.380 --> 00:53:39.420
from looking at uv.

00:53:39.420 --> 00:53:42.300
And the next version will also add uv as an installer choice,

00:53:42.300 --> 00:53:44.220
which is pretty impressive.

00:53:44.220 --> 00:53:45.540
>>Yeah.

00:53:45.540 --> 00:53:47.220
That's been a really cool--

00:53:47.220 --> 00:53:49.420
that's actually something I didn't really anticipate.

00:53:49.420 --> 00:53:51.720
And I'm really glad has happened,

00:53:51.720 --> 00:53:54.720
which is that there's a little bit of--

00:53:54.720 --> 00:53:57.000
we ended up building something pretty modular.

00:53:57.000 --> 00:53:59.680
And so there's been a little bit of--

00:53:59.680 --> 00:54:04.240
or a lot of integrations with uv that people have been building.

00:54:04.240 --> 00:54:09.120
Bernat had the talks uv thing that was out within a week,

00:54:09.120 --> 00:54:14.520
I think, which was use uv to power talks in different ways.

00:54:14.520 --> 00:54:17.160
Yeah, Knox, I think, supports it, build, type a/build.

00:54:17.160 --> 00:54:25.120
I've talked to the Hatch maintainer.

00:54:25.120 --> 00:54:28.480
He's pretty interested in making UV

00:54:28.480 --> 00:54:30.360
like an optional back end for Hatch.

00:54:30.360 --> 00:54:33.360
So that's really cool to me, because it's all just

00:54:33.360 --> 00:54:35.480
magnifying the impact.

00:54:35.480 --> 00:54:41.080
And again, I don't know how much of that I anticipated.

00:54:41.080 --> 00:54:43.160
But it's really cool to see that you could plug it

00:54:43.160 --> 00:54:48.120
into these other tools, and they can just get much faster.

00:54:48.120 --> 00:54:49.040
So I don't know.

00:54:49.040 --> 00:54:50.960
I mean, that's actually been a big highlight

00:54:50.960 --> 00:54:53.040
from the release, honestly, has been the reception

00:54:53.040 --> 00:54:55.240
from other maintainers of other tools

00:54:55.240 --> 00:54:57.800
who have been excited to integrate it in different ways.

00:54:57.800 --> 00:54:58.960
Because it's just not--

00:54:58.960 --> 00:55:00.400
that just didn't happen.

00:55:00.400 --> 00:55:04.680
Rough wasn't nearly as much of a fit for that kind of thing.

00:55:04.680 --> 00:55:06.600
There just aren't as nearly-- there are some,

00:55:06.600 --> 00:55:08.880
but it's just not as natural to have integrations

00:55:08.880 --> 00:55:10.600
with Rough in that way.

00:55:10.600 --> 00:55:12.120
But for UV, it makes a lot of sense.

00:55:12.120 --> 00:55:14.480
And it's been really cool to see.

00:55:14.480 --> 00:55:17.720
>>Yeah, UV's more of a building block than Rough is.

00:55:17.720 --> 00:55:21.760
Rough fits in editors and CI and stuff.

00:55:21.760 --> 00:55:22.280
Yeah, OK.

00:55:22.280 --> 00:55:23.680
>>Yeah, and there were other tools.

00:55:23.680 --> 00:55:28.320
But yeah, it's mostly an end user thing and not a library,

00:55:28.320 --> 00:55:28.840
I think.

00:55:28.840 --> 00:55:30.400
>>Right.

00:55:30.400 --> 00:55:32.520
All right, so a couple of interesting things

00:55:32.520 --> 00:55:33.400
out in the audience.

00:55:33.400 --> 00:55:34.520
Let's knock them out.

00:55:34.520 --> 00:55:37.160
OK, so Tushar asks--

00:55:37.160 --> 00:55:40.520
this is, I think, a big tension that's

00:55:40.520 --> 00:55:43.800
building in the Python packaging space is,

00:55:43.800 --> 00:55:47.640
do packaging tools use Python to do stuff?

00:55:47.640 --> 00:55:50.480
Or do the packaging tools control the Python?

00:55:50.480 --> 00:55:53.640
Who is controlling whom here?

00:55:53.640 --> 00:55:57.200
So Tushar asks, will uv also install Python sometime soon?

00:55:57.200 --> 00:56:00.640
Can I just express, hey, I want to use 3.12 on this

00:56:00.640 --> 00:56:02.240
and these dependencies?

00:56:02.240 --> 00:56:07.320
>>Yeah, we almost certainly want to do this.

00:56:07.320 --> 00:56:09.560
I don't think it will be-- it won't be required.

00:56:09.560 --> 00:56:11.280
You can still use your own Python.

00:56:11.280 --> 00:56:15.280
But we almost certainly want to add Python bootstrapping.

00:56:15.280 --> 00:56:19.920
So that's another reason why the dream workflow is you

00:56:19.920 --> 00:56:22.160
use the standalone uv installer.

00:56:22.160 --> 00:56:25.120
Because then it's like it will actually

00:56:25.120 --> 00:56:26.520
install Python for you, too.

00:56:26.520 --> 00:56:28.360
And so the reason--

00:56:28.360 --> 00:56:31.680
so then it's like you don't have to have Python on your machine

00:56:31.680 --> 00:56:34.720
basically to start being productive with uv.

00:56:34.720 --> 00:56:36.640
It can just bootstrap the environment for you.

00:56:36.640 --> 00:56:37.720
And we can also do--

00:56:37.720 --> 00:56:44.520
yeah, it would just be nice if you did pip compile,

00:56:44.520 --> 00:56:49.520
like uv pip compile, --Python 3.13 or something.

00:56:49.520 --> 00:56:51.920
And then we just bootstrapped Python 3.13

00:56:51.920 --> 00:56:53.680
and did the resolution on your machine.

00:56:53.680 --> 00:56:56.280
That's kind of the workflow that we're trying to build towards.

00:56:56.280 --> 00:56:58.160
>>Since you're so UV-centric as well,

00:56:58.160 --> 00:57:02.560
it could be UV, VNV, --version.

00:57:02.560 --> 00:57:03.440
>>Yeah, 100%.

00:57:03.440 --> 00:57:04.200
>>3.12 or whatever.

00:57:04.200 --> 00:57:05.120
>>And we bootstrap that.

00:57:05.120 --> 00:57:05.680
Yeah.

00:57:05.680 --> 00:57:07.760
If you've got it cached, you just give it.

00:57:07.760 --> 00:57:09.760
And if you don't, then you get it on the machine.

00:57:09.760 --> 00:57:10.920
>>Exactly.

00:57:10.920 --> 00:57:11.520
>>Yeah.

00:57:11.520 --> 00:57:13.800
>>Yeah, so we'll definitely do this.

00:57:13.800 --> 00:57:16.400
Again, I do think it's important that it's not required

00:57:16.400 --> 00:57:20.320
to use the uv Pythons.

00:57:20.320 --> 00:57:23.960
We actually kind of had to do a minimal version of this

00:57:23.960 --> 00:57:29.520
for our CI and testing.

00:57:29.520 --> 00:57:31.400
But it was a Bath script, and then I

00:57:31.400 --> 00:57:32.760
think it became a Python script.

00:57:32.760 --> 00:57:34.880
But eventually, it would be built into uv.

00:57:34.880 --> 00:57:35.400
>>Yeah.

00:57:35.400 --> 00:57:36.320
>>Yeah, yeah.

00:57:36.320 --> 00:57:38.040
I think that would be really--

00:57:38.040 --> 00:57:38.960
>>Yeah, I think it'll be super cool.

00:57:38.960 --> 00:57:39.880
>>--really quite awesome.

00:57:39.880 --> 00:57:41.160
>>Yeah, I think it will be too.

00:57:41.160 --> 00:57:45.960
Let's see.

00:57:45.960 --> 00:57:55.640
Tushar also says, loves that the --require VNV.

00:57:55.640 --> 00:57:56.160
>>Yep.

00:57:56.160 --> 00:57:57.960
>>As a thing.

00:57:57.960 --> 00:58:00.320
He thinks it'll become the default, and also points out,

00:58:00.320 --> 00:58:03.160
for those who don't UV, that pip require

00:58:03.160 --> 00:58:06.560
virtual V as an environment flag is in your RC files.

00:58:06.560 --> 00:58:07.280
It's pretty nice.

00:58:07.280 --> 00:58:08.720
I need to do that just the other day.

00:58:08.720 --> 00:58:09.440
>>Yeah, you can--

00:58:09.440 --> 00:58:10.520
>>You can configure that.

00:58:10.520 --> 00:58:13.160
>>No, I spelled that to the wrong spot.

00:58:13.160 --> 00:58:16.480
>>Yeah, so pip can be configured to require virtual ends.

00:58:16.480 --> 00:58:16.840
>>Yes.

00:58:16.840 --> 00:58:18.160
>>Yeah, I did something weird.

00:58:18.160 --> 00:58:19.620
I'm actually looking at my terminal

00:58:19.620 --> 00:58:23.000
behind our shared screen, our meeting here.

00:58:23.000 --> 00:58:25.520
And my prompt says global VNV.

00:58:25.520 --> 00:58:28.640
And so one of the things that I do is I have a--

00:58:28.640 --> 00:58:30.680
just if I log it, if I open up my terminal,

00:58:30.680 --> 00:58:32.960
it already has an activated virtual environment that's

00:58:32.960 --> 00:58:33.920
in my system.

00:58:33.920 --> 00:58:36.800
So I can just say, hey, I'm going to create a virtual environment

00:58:36.800 --> 00:58:37.720
that's in my system.

00:58:37.720 --> 00:58:40.480
And I can just say, hey, I'm going to create a virtual environment

00:58:40.480 --> 00:58:41.400
that's in my system.

00:58:41.400 --> 00:58:43.960
And I can just say, hey, I'm going to create a virtual environment

00:58:43.960 --> 00:58:44.880
that's in my system.

00:58:44.880 --> 00:58:47.480
And I can just say, hey, I'm going to create a virtual environment

00:58:47.480 --> 00:58:48.360
that's in my system.

00:58:48.360 --> 00:58:50.880
And I can just say, hey, I'm going to create a virtual environment

00:58:50.880 --> 00:58:51.760
that's in my system.

00:58:51.760 --> 00:58:54.320
And I can just say, hey, I'm going to create a virtual environment

00:58:54.320 --> 00:58:55.240
that's in my system.

00:58:55.240 --> 00:58:57.800
And I can just say, hey, I'm going to create a virtual environment

00:58:57.800 --> 00:58:58.720
that's in my system.

00:58:58.720 --> 00:59:01.360
And I can just say, hey, I'm going to create a virtual environment

00:59:01.360 --> 00:59:02.320
that's in my system.

00:59:02.320 --> 00:59:05.080
And I can just say, hey, I'm going to create a virtual environment

00:59:05.080 --> 00:59:05.960
that's in my system.

00:59:05.960 --> 00:59:08.720
And I can just say, hey, I'm going to create a virtual environment

00:59:08.720 --> 00:59:09.600
that's in my system.

00:59:09.600 --> 00:59:12.360
And I can just say, hey, I'm going to create a virtual environment

00:59:12.360 --> 00:59:13.280
that's in my system.

00:59:13.280 --> 00:59:16.040
And I can just say, hey, I'm going to create a virtual environment

00:59:16.040 --> 00:59:16.960
that's in my system.

00:59:16.960 --> 00:59:19.760
And I can just say, hey, I'm going to create a virtual environment

00:59:19.760 --> 00:59:20.680
that's in my system.

00:59:20.680 --> 00:59:23.400
And I can just say, hey, I'm going to create a virtual environment

00:59:23.400 --> 00:59:24.320
that's in my system.

00:59:24.320 --> 00:59:27.080
And I can just say, hey, I'm going to create a virtual environment

00:59:27.080 --> 00:59:28.000
that's in my system.

00:59:28.000 --> 00:59:30.640
And I can just say, hey, I'm going to create a virtual environment

00:59:30.640 --> 00:59:31.480
that's in my system.

00:59:31.480 --> 00:59:34.160
And I can just say, hey, I'm going to create a virtual environment

00:59:34.160 --> 00:59:35.080
that's in my system.

00:59:35.080 --> 00:59:37.720
And I can just say, hey, I'm going to create a virtual environment

00:59:37.720 --> 00:59:38.680
that's in my system.

00:59:38.680 --> 00:59:41.400
And I can just say, hey, I'm going to create a virtual environment

00:59:41.400 --> 00:59:42.320
that's in my system.

00:59:42.320 --> 00:59:45.000
And I can just say, hey, I'm going to create a virtual environment

00:59:45.000 --> 00:59:45.880
that's in my system.

00:59:45.880 --> 00:59:48.560
And I can just say, hey, I'm going to create a virtual environment

00:59:48.560 --> 00:59:49.480
that's in my system.

00:59:49.480 --> 00:59:52.000
And I can just say, hey, I'm going to create a virtual environment

00:59:52.000 --> 00:59:52.920
that's in my system.

00:59:52.920 --> 00:59:55.480
And I can just say, hey, I'm going to create a virtual environment

00:59:55.480 --> 00:59:56.400
that's in my system.

00:59:56.400 --> 00:59:59.040
And I can just say, hey, I'm going to create a virtual environment

00:59:59.040 --> 01:00:00.000
that's in my system.

01:00:00.000 --> 01:00:02.760
And I can just say, hey, I'm going to create a virtual environment

01:00:02.760 --> 01:00:03.640
that's in my system.

01:00:03.640 --> 01:00:06.400
And I can just say, hey, I'm going to create a virtual environment

01:00:06.400 --> 01:00:07.320
that's in my system.

01:00:07.320 --> 01:00:10.040
And I can just say, hey, I'm going to create a virtual environment

01:00:10.040 --> 01:00:10.960
that's in my system.

01:00:10.960 --> 01:00:13.720
And I can just say, hey, I'm going to create a virtual environment

01:00:13.720 --> 01:00:14.640
that's in my system.

01:00:14.640 --> 01:00:17.440
And I can just say, hey, I'm going to create a virtual environment

01:00:17.440 --> 01:00:18.360
that's in my system.

01:00:18.360 --> 01:00:21.080
And I can just say, hey, I'm going to create a virtual environment

01:00:21.080 --> 01:00:22.000
that's in my system.

01:00:22.000 --> 01:00:24.800
And I can just say, hey, I'm going to create a virtual environment

01:00:24.800 --> 01:00:25.760
that's in my system.

01:00:25.760 --> 01:00:28.560
And I can just say, hey, I'm going to create a virtual environment

01:00:28.560 --> 01:00:29.480
that's in my system.

01:00:29.480 --> 01:00:32.280
And I can just say, hey, I'm going to create a virtual environment

01:00:32.280 --> 01:00:33.160
that's in my system.

01:00:33.160 --> 01:00:36.080
And I can just say, hey, I'm going to create a virtual environment

01:00:36.080 --> 01:00:37.000
that's in my system.

01:00:37.000 --> 01:00:39.800
And I can just say, hey, I'm going to create a virtual environment

01:00:39.800 --> 01:00:40.720
that's in my system.

01:00:40.720 --> 01:00:43.400
And I can just say, hey, I'm going to create a virtual environment

01:00:43.400 --> 01:00:44.320
that's in my system.

01:00:44.320 --> 01:00:47.160
And I can just say, hey, I'm going to create a virtual environment

01:00:47.160 --> 01:00:48.080
that's in my system.

01:00:48.080 --> 01:00:50.720
And I can just say, hey, I'm going to create a virtual environment

01:00:50.720 --> 01:00:51.640
that's in my system.

01:00:51.640 --> 01:00:54.400
And I can just say, hey, I'm going to create a virtual environment

01:00:54.400 --> 01:00:55.320
that's in my system.

01:00:55.320 --> 01:00:58.000
And I can just say, hey, I'm going to create a virtual environment

01:00:58.000 --> 01:00:58.880
that's in my system.

01:00:58.880 --> 01:01:01.720
And I can just say, hey, I'm going to create a virtual environment

01:01:01.720 --> 01:01:02.600
that's in my system.

01:01:02.600 --> 01:01:05.520
And I can just say, hey, I'm going to create a virtual environment

01:01:05.520 --> 01:01:06.440
that's in my system.

01:01:06.440 --> 01:01:09.240
And I can just say, hey, I'm going to create a virtual environment

01:01:09.240 --> 01:01:10.160
that's in my system.

01:01:10.160 --> 01:01:12.840
And I can just say, hey, I'm going to create a virtual environment

01:01:12.840 --> 01:01:13.720
that's in my system.

01:01:13.720 --> 01:01:16.600
And I can just say, hey, I'm going to create a virtual environment

01:01:16.600 --> 01:01:17.520
that's in my system.

01:01:17.520 --> 01:01:20.200
And I can just say, hey, I'm going to create a virtual environment

01:01:20.200 --> 01:01:21.120
that's in my system.

01:01:21.120 --> 01:01:23.840
And I can just say, hey, I'm going to create a virtual environment

01:01:23.840 --> 01:01:24.800
that's in my system.

01:01:24.800 --> 01:01:27.600
And I can just say, hey, I'm going to create a virtual environment

01:01:27.600 --> 01:01:28.480
that's in my system.

01:01:28.480 --> 01:01:31.320
And I can just say, hey, I'm going to create a virtual environment

01:01:31.320 --> 01:01:32.160
that's in my system.

01:01:32.160 --> 01:01:34.960
And I can just say, hey, I'm going to create a virtual environment

01:01:34.960 --> 01:01:35.840
that's in my system.

01:01:35.840 --> 01:01:38.600
And I can just say, hey, I'm going to create a virtual environment

01:01:38.600 --> 01:01:39.480
that's in my system.

01:01:39.480 --> 01:01:42.440
And I can just say, hey, I'm going to create a virtual environment

01:01:42.440 --> 01:01:43.360
that's in my system.

01:01:43.360 --> 01:01:46.200
And I can just say, hey, I'm going to create a virtual environment

01:01:46.200 --> 01:01:47.120
that's in my system.

01:01:47.120 --> 01:01:49.760
And I can just say, hey, I'm going to create a virtual environment

01:01:49.760 --> 01:01:50.680
that's in my system.

01:01:50.680 --> 01:01:53.440
And I can just say, hey, I'm going to create a virtual environment

01:01:53.440 --> 01:01:54.360
that's in my system.

01:01:54.360 --> 01:01:57.040
And I can just say, hey, I'm going to create a virtual environment

01:01:57.040 --> 01:01:57.960
that's in my system.

01:01:57.960 --> 01:02:00.760
And I can just say, hey, I'm going to create a virtual environment

01:02:00.760 --> 01:02:01.600
that's in my system.

01:02:01.600 --> 01:02:04.400
And I can just say, hey, I'm going to create a virtual environment

01:02:04.400 --> 01:02:05.280
that's in my system.

01:02:05.280 --> 01:02:08.040
And I can just say, hey, I'm going to create a virtual environment

01:02:08.040 --> 01:02:08.920
that's in my system.

01:02:08.920 --> 01:02:11.720
And I can just say, hey, I'm going to create a virtual environment

01:02:11.720 --> 01:02:12.600
that's in my system.

01:02:12.600 --> 01:02:15.440
And I can just say, hey, I'm going to create a virtual environment

01:02:15.440 --> 01:02:16.360
that's in my system.

01:02:16.360 --> 01:02:19.080
And I can just say, hey, I'm going to create a virtual environment

01:02:19.080 --> 01:02:20.000
that's in my system.

01:02:20.000 --> 01:02:22.800
And I can just say, hey, I'm going to create a virtual environment

01:02:22.800 --> 01:02:23.760
that's in my system.

01:02:23.760 --> 01:02:26.480
And I can just say, hey, I'm going to create a virtual environment

01:02:26.480 --> 01:02:27.320
that's in my system.

01:02:27.320 --> 01:02:30.200
And I can just say, hey, I'm going to create a virtual environment

01:02:30.200 --> 01:02:31.080
that's in my system.

01:02:31.080 --> 01:02:34.000
And I can just say, hey, I'm going to create a virtual environment

01:02:34.000 --> 01:02:34.880
that's in my system.

01:02:34.880 --> 01:02:37.800
And I can just say, hey, I'm going to create a virtual environment

01:02:37.800 --> 01:02:38.680
that's in my system.

01:02:38.680 --> 01:02:41.640
And I can just say, hey, I'm going to create a virtual environment

01:02:41.640 --> 01:02:42.520
that's in my system.

01:02:42.520 --> 01:02:45.440
And I can just say, hey, I'm going to create a virtual environment

01:02:45.440 --> 01:02:46.320
that's in my system.

01:02:46.320 --> 01:02:49.160
And I can just say, hey, I'm going to create a virtual environment

01:02:49.160 --> 01:02:50.080
that's in my system.

01:02:50.080 --> 01:02:52.880
And I can just say, hey, I'm going to create a virtual environment

01:02:52.880 --> 01:02:53.760
that's in my system.

01:02:53.760 --> 01:02:56.440
And I can just say, hey, I'm going to create a virtual environment

01:02:56.440 --> 01:02:57.360
that's in my system.

01:02:57.360 --> 01:03:00.360
And I can just say, hey, I'm going to create a virtual environment

01:03:00.360 --> 01:03:01.240
that's in my system.

01:03:01.240 --> 01:03:04.240
And I can just say, hey, I'm going to create a virtual environment

01:03:04.240 --> 01:03:05.120
that's in my system.

01:03:05.120 --> 01:03:08.040
And I can just say, hey, I'm going to create a virtual environment

01:03:08.040 --> 01:03:08.920
that's in my system.

01:03:08.920 --> 01:03:11.920
And I can just say, hey, I'm going to create a virtual environment

01:03:11.920 --> 01:03:12.800
that's in my system.

01:03:12.800 --> 01:03:15.880
And I can just say, hey, I'm going to create a virtual environment

01:03:15.880 --> 01:03:16.800
that's in my system.

01:03:16.800 --> 01:03:19.800
And I can just say, hey, I'm going to create a virtual environment

01:03:19.800 --> 01:03:20.720
that's in my system.

01:03:20.720 --> 01:03:23.640
And I can just say, hey, I'm going to create a virtual environment

01:03:23.640 --> 01:03:24.520
that's in my system.

01:03:24.520 --> 01:03:27.520
And I can just say, hey, I'm going to create a virtual environment

01:03:27.520 --> 01:03:28.440
that's in my system.

01:03:28.440 --> 01:03:31.440
And I can just say, hey, I'm going to create a virtual environment

01:03:31.440 --> 01:03:32.400
that's in my system.

01:03:32.400 --> 01:03:35.400
And I can just say, hey, I'm going to create a virtual environment

01:03:35.400 --> 01:03:36.280
that's in my system.

01:03:36.280 --> 01:03:39.360
And I can just say, hey, I'm going to create a virtual environment

01:03:39.360 --> 01:03:40.280
that's in my system.

01:03:40.280 --> 01:03:43.360
And I can just say, hey, I'm going to create a virtual environment

01:03:43.360 --> 01:03:44.280
that's in my system.

01:03:44.280 --> 01:03:47.320
And I can just say, hey, I'm going to create a virtual environment

01:03:47.320 --> 01:03:48.240
that's in my system.

01:03:48.240 --> 01:03:51.240
And I can just say, hey, I'm going to create a virtual environment

01:03:51.240 --> 01:03:52.160
that's in my system.

01:03:52.160 --> 01:03:54.480
And I can just say, hey, I'm going to create a virtual environment

01:03:54.480 --> 01:03:55.440
that's in my system.

01:03:55.440 --> 01:03:58.400
And I can just say, hey, I'm going to create a virtual environment

01:03:58.400 --> 01:03:59.280
that's in my system.

01:03:59.280 --> 01:04:02.280
And I can just say, hey, I'm going to create a virtual environment

01:04:02.280 --> 01:04:03.200
that's in my system.

01:04:03.200 --> 01:04:06.280
And I can just say, hey, I'm going to create a virtual environment

01:04:06.280 --> 01:04:07.200
that's in my system.

01:04:07.200 --> 01:04:10.280
And I can just say, hey, I'm going to create a virtual environment

01:04:10.280 --> 01:04:11.200
that's in my system.

01:04:11.200 --> 01:04:14.280
And I can just say, hey, I'm going to create a virtual environment

01:04:14.280 --> 01:04:15.200
that's in my system.

01:04:15.200 --> 01:04:18.280
And I can just say, hey, I'm going to create a virtual environment

01:04:18.280 --> 01:04:19.280
that's in my system.

01:04:19.280 --> 01:04:22.280
And I can just say, hey, I'm going to create a virtual environment

01:04:22.280 --> 01:04:23.200
that's in my system.

01:04:23.200 --> 01:04:26.200
And I can just say, hey, I'm going to create a virtual environment

01:04:26.200 --> 01:04:27.080
that's in my system.

01:04:27.080 --> 01:04:30.080
And I can just say, hey, I'm going to create a virtual environment

01:04:30.080 --> 01:04:31.080
that's in my system.

01:04:31.080 --> 01:04:34.080
And I can just say, hey, I'm going to create a virtual environment

01:04:34.080 --> 01:04:35.080
that's in my system.

01:04:35.080 --> 01:04:38.080
And I can just say, hey, I'm going to create a virtual environment

01:04:38.080 --> 01:04:39.080
that's in my system.

01:04:39.080 --> 01:04:42.080
And I can just say, hey, I'm going to create a virtual environment

01:04:42.080 --> 01:04:43.080
that's in my system.

01:04:43.080 --> 01:04:46.080
And I can just say, hey, I'm going to create a virtual environment

01:04:46.080 --> 01:04:47.080
that's in my system.

01:04:47.080 --> 01:04:50.080
And I can just say, hey, I'm going to create a virtual environment

01:04:50.080 --> 01:04:51.080
that's in my system.

01:04:51.080 --> 01:04:54.080
And I can just say, hey, I'm going to create a virtual environment

01:04:54.080 --> 01:04:55.080
that's in my system.

01:04:55.080 --> 01:04:58.080
And I can just say, hey, I'm going to create a virtual environment

01:04:58.080 --> 01:04:59.080
that's in my system.

01:04:59.080 --> 01:05:02.080
And I can just say, hey, I'm going to create a virtual environment

01:05:02.080 --> 01:05:03.080
that's in my system.

01:05:03.080 --> 01:05:06.080
And I can just say, hey, I'm going to create a virtual environment

01:05:06.080 --> 01:05:07.080
that's in my system.

01:05:07.080 --> 01:05:10.080
And I can just say, hey, I'm going to create a virtual environment

01:05:10.080 --> 01:05:11.080
that's in my system.

01:05:11.080 --> 01:05:14.080
And I can just say, hey, I'm going to create a virtual environment

01:05:14.080 --> 01:05:15.080
that's in my system.

01:05:15.080 --> 01:05:18.080
And I can just say, hey, I'm going to create a virtual environment

01:05:18.080 --> 01:05:19.080
that's in my system.

01:05:19.080 --> 01:05:22.080
And I can just say, hey, I'm going to create a virtual environment

01:05:22.080 --> 01:05:23.080
that's in my system.

01:05:23.080 --> 01:05:26.080
And I can just say, hey, I'm going to create a virtual environment

01:05:26.080 --> 01:05:27.080
that's in my system.

01:05:27.080 --> 01:05:30.080
And I can just say, hey, I'm going to create a virtual environment

01:05:30.080 --> 01:05:31.080
that's in my system.

01:05:31.080 --> 01:05:34.080
And I can just say, hey, I'm going to create a virtual environment

01:05:34.080 --> 01:05:35.080
that's in my system.

01:05:35.080 --> 01:05:38.080
And I can just say, hey, I'm going to create a virtual environment

01:05:38.080 --> 01:05:39.080
that's in my system.

01:05:39.080 --> 01:05:42.080
And I can just say, hey, I'm going to create a virtual environment

01:05:42.080 --> 01:05:43.080
that's in my system.

01:05:43.080 --> 01:05:46.080
And I can just say, hey, I'm going to create a virtual environment

01:05:46.080 --> 01:05:47.080
that's in my system.

01:05:47.080 --> 01:05:50.080
And I can just say, hey, I'm going to create a virtual environment

01:05:50.080 --> 01:05:51.080
that's in my system.

01:05:51.080 --> 01:05:54.080
And I can just say, hey, I'm going to create a virtual environment

01:05:54.080 --> 01:05:55.080
that's in my system.

01:05:55.080 --> 01:05:58.080
And I can just say, hey, I'm going to create a virtual environment

01:05:58.080 --> 01:05:59.080
that's in my system.

01:05:59.080 --> 01:06:02.080
And I can just say, hey, I'm going to create a virtual environment

01:06:02.080 --> 01:06:03.080
that's in my system.

01:06:03.080 --> 01:06:06.080
And I can just say, hey, I'm going to create a virtual environment

01:06:06.080 --> 01:06:07.080
that's in my system.

01:06:07.080 --> 01:06:10.080
And I can just say, hey, I'm going to create a virtual environment

01:06:10.080 --> 01:06:11.080
that's in my system.

01:06:11.080 --> 01:06:14.080
And I can just say, hey, I'm going to create a virtual environment

01:06:14.080 --> 01:06:15.080
that's in my system.

01:06:15.080 --> 01:06:18.080
And I can just say, hey, I'm going to create a virtual environment

01:06:18.080 --> 01:06:19.080
that's in my system.

01:06:19.080 --> 01:06:22.080
And I can just say, hey, I'm going to create a virtual environment

01:06:22.080 --> 01:06:23.080
that's in my system.

01:06:23.080 --> 01:06:26.080
And I can just say, hey, I'm going to create a virtual environment

01:06:26.080 --> 01:06:27.080
that's in my system.

01:06:27.080 --> 01:06:30.080
And I can just say, hey, I'm going to create a virtual environment

01:06:30.080 --> 01:06:31.080
that's in my system.

01:06:31.080 --> 01:06:34.080
And I can just say, hey, I'm going to create a virtual environment

01:06:34.080 --> 01:06:35.080
that's in my system.

01:06:35.080 --> 01:06:38.080
And I can just say, hey, I'm going to create a virtual environment

01:06:38.080 --> 01:06:39.080
that's in my system.

01:06:39.080 --> 01:06:42.080
And I can just say, hey, I'm going to create a virtual environment

01:06:42.080 --> 01:06:43.080
that's in my system.

01:06:43.080 --> 01:06:46.080
And I can just say, hey, I'm going to create a virtual environment

01:06:46.080 --> 01:06:47.080
that's in my system.

01:06:47.080 --> 01:06:50.080
And I can just say, hey, I'm going to create a virtual environment

01:06:50.080 --> 01:06:51.080
that's in my system.

01:06:51.080 --> 01:06:54.080
And I can just say, hey, I'm going to create a virtual environment

01:06:54.080 --> 01:06:55.080
that's in my system.

01:06:55.080 --> 01:06:58.080
And I can just say, hey, I'm going to create a virtual environment

01:06:58.080 --> 01:06:59.080
that's in my system.

01:06:59.080 --> 01:07:02.080
And I can just say, hey, I'm going to create a virtual environment

01:07:02.080 --> 01:07:03.080
that's in my system.

01:07:03.080 --> 01:07:06.080
And I can just say, hey, I'm going to create a virtual environment

01:07:06.080 --> 01:07:07.080
that's in my system.

01:07:07.080 --> 01:07:10.080
And I can just say, hey, I'm going to create a virtual environment

01:07:10.080 --> 01:07:11.080
that's in my system.

01:07:11.080 --> 01:07:14.080
And I can just say, hey, I'm going to create a virtual environment

01:07:14.080 --> 01:07:15.080
that's in my system.

01:07:15.080 --> 01:07:18.080
And I can just say, hey, I'm going to create a virtual environment

01:07:18.080 --> 01:07:19.080
that's in my system.

01:07:19.080 --> 01:07:22.080
And I can just say, hey, I'm going to create a virtual environment

01:07:22.080 --> 01:07:23.080
that's in my system.

01:07:23.080 --> 01:07:26.080
And I can just say, hey, I'm going to create a virtual environment

01:07:26.080 --> 01:07:27.080
that's in my system.

01:07:27.080 --> 01:07:30.080
And I can just say, hey, I'm going to create a virtual environment

01:07:30.080 --> 01:07:31.080
that's in my system.

01:07:31.080 --> 01:07:34.080
And I can just say, hey, I'm going to create a virtual environment

01:07:34.080 --> 01:07:35.080
that's in my system.

01:07:35.080 --> 01:07:38.080
And I can just say, hey, I'm going to create a virtual environment

01:07:38.080 --> 01:07:39.080
that's in my system.

01:07:39.080 --> 01:07:42.080
And I can just say, hey, I'm going to create a virtual environment

01:07:42.080 --> 01:07:43.080
that's in my system.

01:07:43.080 --> 01:07:46.080
And I can just say, hey, I'm going to create a virtual environment

01:07:46.080 --> 01:07:47.080
that's in my system.

01:07:47.080 --> 01:07:50.080
And I can just say, hey, I'm going to create a virtual environment

01:07:50.080 --> 01:07:51.080
that's in my system.

01:07:51.080 --> 01:07:54.080
And I can just say, hey, I'm going to create a virtual environment

01:07:54.080 --> 01:07:55.080
that's in my system.

01:07:55.080 --> 01:07:58.080
And I can just say, hey, I'm going to create a virtual environment

01:07:58.080 --> 01:07:59.080
that's in my system.

01:07:59.080 --> 01:08:02.080
And I can just say, hey, I'm going to create a virtual environment

01:08:02.080 --> 01:08:03.080
that's in my system.

01:08:03.080 --> 01:08:06.080
And I can just say, hey, I'm going to create a virtual environment

01:08:06.080 --> 01:08:07.080
that's in my system.

01:08:07.080 --> 01:08:10.080
And I can just say, hey, I'm going to create a virtual environment

01:08:10.080 --> 01:08:11.080
that's in my system.

01:08:11.080 --> 01:08:14.080
And I can just say, hey, I'm going to create a virtual environment

01:08:14.080 --> 01:08:15.080
that's in my system.

01:08:15.080 --> 01:08:18.080
And I can just say, hey, I'm going to create a virtual environment

01:08:18.080 --> 01:08:19.080
that's in my system.

01:08:19.080 --> 01:08:22.080
And I can just say, hey, I'm going to create a virtual environment

01:08:22.080 --> 01:08:23.080
that's in my system.

01:08:23.080 --> 01:08:26.080
And I can just say, hey, I'm going to create a virtual environment

01:08:26.080 --> 01:08:27.080
that's in my system.

01:08:27.080 --> 01:08:30.080
And I can just say, hey, I'm going to create a virtual environment

01:08:30.080 --> 01:08:31.080
that's in my system.

01:08:31.080 --> 01:08:34.080
And I can just say, hey, I'm going to create a virtual environment

01:08:34.080 --> 01:08:35.080
that's in my system.

01:08:35.080 --> 01:08:38.080
And I can just say, hey, I'm going to create a virtual environment

01:08:38.080 --> 01:08:39.080
that's in my system.

01:08:39.080 --> 01:08:42.080
And I can just say, hey, I'm going to create a virtual environment

01:08:42.080 --> 01:08:43.080
that's in my system.

01:08:43.080 --> 01:08:46.080
And I can just say, hey, I'm going to create a virtual environment

01:08:46.080 --> 01:08:47.080
that's in my system.

01:08:47.080 --> 01:08:50.080
And I can just say, hey, I'm going to create a virtual environment

01:08:50.080 --> 01:08:51.080
that's in my system.

01:08:51.080 --> 01:08:54.080
And I can just say, hey, I'm going to create a virtual environment

01:08:54.080 --> 01:08:55.080
that's in my system.

01:08:55.080 --> 01:08:58.080
And I can just say, hey, I'm going to create a virtual environment

01:08:58.080 --> 01:08:59.080
that's in my system.

01:08:59.080 --> 01:09:02.080
And I can just say, hey, I'm going to create a virtual environment

01:09:02.080 --> 01:09:03.080
that's in my system.

01:09:03.080 --> 01:09:06.080
And I can just say, hey, I'm going to create a virtual environment

01:09:06.080 --> 01:09:07.080
that's in my system.

01:09:07.080 --> 01:09:10.080
And I can just say, hey, I'm going to create a virtual environment

01:09:10.080 --> 01:09:11.080
that's in my system.

01:09:11.080 --> 01:09:14.080
And I can just say, hey, I'm going to create a virtual environment

01:09:14.080 --> 01:09:15.080
that's in my system.

01:09:15.080 --> 01:09:18.080
And I can just say, hey, I'm going to create a virtual environment

01:09:18.080 --> 01:09:19.080
that's in my system.

01:09:19.080 --> 01:09:22.080
And I can just say, hey, I'm going to create a virtual environment

01:09:22.080 --> 01:09:23.080
that's in my system.

01:09:23.080 --> 01:09:26.080
And I can just say, hey, I'm going to create a virtual environment

01:09:26.080 --> 01:09:27.080
that's in my system.

01:09:27.080 --> 01:09:30.080
And I can just say, hey, I'm going to create a virtual environment

01:09:30.080 --> 01:09:31.080
that's in my system.

01:09:31.080 --> 01:09:34.080
And I can just say, hey, I'm going to create a virtual environment

01:09:34.080 --> 01:09:35.080
that's in my system.

01:09:35.080 --> 01:09:38.080
And I can just say, hey, I'm going to create a virtual environment

01:09:38.080 --> 01:09:39.080
that's in my system.

01:09:39.080 --> 01:09:42.080
And I can just say, hey, I'm going to create a virtual environment

01:09:42.080 --> 01:09:43.080
that's in my system.

01:09:43.080 --> 01:09:46.080
And I can just say, hey, I'm going to create a virtual environment

01:09:46.080 --> 01:09:47.080
that's in my system.

01:09:47.080 --> 01:09:50.080
And I can just say, hey, I'm going to create a virtual environment

01:09:50.080 --> 01:09:51.080
that's in my system.

01:09:51.080 --> 01:09:54.080
And I can just say, hey, I'm going to create a virtual environment

01:09:54.080 --> 01:09:55.080
that's in my system.

01:09:55.080 --> 01:09:58.080
And I can just say, hey, I'm going to create a virtual environment

01:09:58.080 --> 01:09:59.080
that's in my system.

01:09:59.080 --> 01:10:02.080
And I can just say, hey, I'm going to create a virtual environment

01:10:02.080 --> 01:10:03.080
that's in my system.

01:10:03.080 --> 01:10:06.080
And I can just say, hey, I'm going to create a virtual environment

01:10:06.080 --> 01:10:07.080
that's in my system.

01:10:07.080 --> 01:10:10.080
And I can just say, hey, I'm going to create a virtual environment

01:10:10.080 --> 01:10:11.080
that's in my system.

01:10:11.080 --> 01:10:14.080
And I can just say, hey, I'm going to create a virtual environment

01:10:14.080 --> 01:10:15.080
that's in my system.

01:10:15.080 --> 01:10:18.080
And I can just say, hey, I'm going to create a virtual environment

01:10:18.080 --> 01:10:19.080
that's in my system.

01:10:19.080 --> 01:10:22.080
And I can just say, hey, I'm going to create a virtual environment

01:10:22.080 --> 01:10:23.080
that's in my system.

01:10:23.080 --> 01:10:26.080
And I can just say, hey, I'm going to create a virtual environment

01:10:26.080 --> 01:10:27.080
that's in my system.

01:10:27.080 --> 01:10:32.080
>> Yeah, there was an amazing-- it's not a joke,

01:10:32.080 --> 01:10:39.080
but it's, I guess, something that's a prank that somebody came up with.

01:10:39.080 --> 01:10:40.080
Here, I'll put it on the screen.

01:10:40.080 --> 01:10:43.080
It's called "When Everything Becomes Too Much,"

01:10:43.080 --> 01:10:47.080
the NPM package chaos of 2024.

01:10:47.080 --> 01:10:49.080
And I was just-- as you were talking about Node modules,

01:10:49.080 --> 01:10:50.080
this is more of a--

01:10:50.080 --> 01:10:51.080
>> Oh, my gosh.

01:10:51.080 --> 01:10:52.080
I haven't seen this.

01:10:52.080 --> 01:10:53.080
>> It's amazing.

01:10:53.080 --> 01:10:58.080
So it's more of a statement of, well, how super interdependent

01:10:58.080 --> 01:11:02.080
or how many combinatorial or transitive dependencies

01:11:02.080 --> 01:11:04.080
does a couple of NPM things have?

01:11:04.080 --> 01:11:09.080
Like, for example, I used Tailwind, but there was maybe 50 things

01:11:09.080 --> 01:11:13.080
in my Node module for just using Tailwind in my project, right?

01:11:13.080 --> 01:11:18.080
So anyway, this one is-- an NPM user named PatrickJS

01:11:18.080 --> 01:11:21.080
launched a troll campaign where a package called "Everything,"

01:11:21.080 --> 01:11:24.080
it depended on every other NPM package.

01:11:24.080 --> 01:11:27.080
So if you NPM install everything,

01:11:27.080 --> 01:11:30.080
then it literally tried to download the repository.

01:11:30.080 --> 01:11:32.080
>> Yeah, that's kind of amazing.

01:11:32.080 --> 01:11:33.080
Wow.

01:11:33.080 --> 01:11:34.080
>> I know.

01:11:34.080 --> 01:11:39.080
It's devious, but it's also kind of like, okay, that's something else.

01:11:39.080 --> 01:11:45.080
>> Yeah, Python dependency trees tend to be much shorter, I guess,

01:11:45.080 --> 01:11:46.080
and smaller.

01:11:46.080 --> 01:11:49.080
You tend to have way fewer dependencies.

01:11:49.080 --> 01:11:52.080
They are sometimes heavier, I guess, because in Python,

01:11:52.080 --> 01:11:55.080
it's very common to have lots of native code.

01:11:55.080 --> 01:12:01.080
And I don't know, like PyTorch, the PyTorch wheels that you download

01:12:01.080 --> 01:12:06.080
when they're zipped are between 100 and 200 megabytes.

01:12:06.080 --> 01:12:08.080
>> Wow, okay.

01:12:08.080 --> 01:12:11.080
>> Yeah, yeah, all the ML stuff and all the native stuff,

01:12:11.080 --> 01:12:17.080
those are big, but the number of dependencies tends to be a lot smaller.

01:12:17.080 --> 01:12:19.080
>> Yeah, I totally agree.

01:12:19.080 --> 01:12:21.080
>> It's also very common to ship foundational packages

01:12:21.080 --> 01:12:24.080
with no dependencies or very few dependencies,

01:12:24.080 --> 01:12:27.080
which is very hard to do in JavaScript.

01:12:27.080 --> 01:12:29.080
>> Yeah, it is.

01:12:29.080 --> 01:12:31.080
It definitely is.

01:12:31.080 --> 01:12:33.080
All right, I think we're getting short on time here.

01:12:33.080 --> 01:12:38.080
I think I probably should let you go back and knock out another release of uv.

01:12:38.080 --> 01:12:39.080
>> I do have a new release today.

01:12:39.080 --> 01:12:40.080
Okay, thank you.

01:12:40.080 --> 01:12:41.080
>> Awesome.

01:12:41.080 --> 01:12:42.080
Cool.

01:12:42.080 --> 01:12:45.080
So Tony, the audience, has been using uv in production for a couple weeks now.

01:12:45.080 --> 01:12:47.080
Awesome, seems very excited about it.

01:12:47.080 --> 01:12:49.080
And also, I have too.

01:12:49.080 --> 01:12:51.080
It's an absolute delight.

01:12:51.080 --> 01:12:52.080
It hasn't--

01:12:52.080 --> 01:12:53.080
>> Oh, thank you so much.

01:12:53.080 --> 01:12:57.080
>> Yeah, I know there are certain things that it didn't do right away,

01:12:57.080 --> 01:13:02.080
but then it came out and you added it quickly.

01:13:02.080 --> 01:13:06.080
I know there was some criticism for you all for developing this in private

01:13:06.080 --> 01:13:10.080
and then releasing it, and I just want to say, like, you know,

01:13:10.080 --> 01:13:11.080
thanks for doing that.

01:13:11.080 --> 01:13:13.080
And what's the alternative?

01:13:13.080 --> 01:13:17.080
Maybe start with just a blank GitHub repo and people start to--

01:13:17.080 --> 01:13:18.080
"Well, you should do this.

01:13:18.080 --> 01:13:19.080
You should be doing that."

01:13:19.080 --> 01:13:20.080
Like, "We have a vision.

01:13:20.080 --> 01:13:23.080
Let us just, like, get a little structure in place and then we'll open source it.

01:13:23.080 --> 01:13:25.080
Like, give us a month, you know?"

01:13:25.080 --> 01:13:26.080
So I don't know.

01:13:26.080 --> 01:13:29.080
I think it's excellent work you're doing.

01:13:29.080 --> 01:13:30.080
>> I appreciate it.

01:13:30.080 --> 01:13:31.080
I appreciate it.

01:13:31.080 --> 01:13:32.080
Yeah, yeah.

01:13:32.080 --> 01:13:40.080
You know, like I said at the start, it's different this time because anything we release, like--

01:13:40.080 --> 01:13:44.080
>> You could work on a rough for a month and nobody cares until it starts to catch some traction, right?

01:13:44.080 --> 01:13:47.080
But this is the instant that it hits GitHub.

01:13:47.080 --> 01:13:50.080
>> Yeah, we knew people would at least look at it and at least try it.

01:13:50.080 --> 01:13:53.080
And I think, you know, we wanted to make sure that whatever we released,

01:13:53.080 --> 01:13:57.080
first of all, was good, and second of all, that we were ready to maintain it.

01:13:57.080 --> 01:14:02.080
And I think with packaging, too, it's like there's just a lot of--

01:14:02.080 --> 01:14:06.080
it's just such a complex space that, like, I wanted to make sure that we had a lot of clarity

01:14:06.080 --> 01:14:11.080
in the messaging around what the tool is and what it's not and, like, what we want it to be

01:14:11.080 --> 01:14:13.080
and what it isn't yet.

01:14:13.080 --> 01:14:20.080
And so I'm really happy with how the launch went, and I've really appreciated just all the excitement,

01:14:20.080 --> 01:14:23.080
activity, engagement that we've had on the repo.

01:14:23.080 --> 01:14:25.080
It's been, like, I don't know.

01:14:25.080 --> 01:14:28.080
I mean, honestly, it's been a lot of work.

01:14:28.080 --> 01:14:31.080
But it's, like, really, really-- no, but it's awesome.

01:14:31.080 --> 01:14:34.080
It's, like, so energizing for me and for the team.

01:14:34.080 --> 01:14:38.080
And to see all the people picking it up and making it the foundation of their projects.

01:14:38.080 --> 01:14:39.080
And, yeah, it's really cool.

01:14:39.080 --> 01:14:40.080
Yeah, and it's cool.

01:14:40.080 --> 01:14:44.080
You know, I guess another-- like, one other thing that's a little different this time is, like,

01:14:44.080 --> 01:14:49.080
I just talked to more people who work on Python tooling at companies now than I did

01:14:49.080 --> 01:14:53.080
when I released Ruff, just because over the course of the past year,

01:14:53.080 --> 01:14:56.080
I've just met a lot of people, and we've just talked about how they're using Ruff,

01:14:56.080 --> 01:14:59.080
how they're not, and so just hearing some of those stories, too,

01:14:59.080 --> 01:15:02.080
of how, like, companies are starting to use it and, like, what the blockers are

01:15:02.080 --> 01:15:06.080
and, like, how much of a speedup it's providing has been pretty cool to see, too.

01:15:06.080 --> 01:15:08.080
So, yeah, I appreciate it, though.

01:15:08.080 --> 01:15:09.080
Yeah, you're welcome.

01:15:09.080 --> 01:15:11.080
All right, we'll leave with this final thought from Juan.

01:15:11.080 --> 01:15:13.080
I installed 94 libraries in around two seconds.

01:15:13.080 --> 01:15:14.080
Incredible.

01:15:14.080 --> 01:15:15.080
That's great.

01:15:15.080 --> 01:15:16.080
All right.

01:15:16.080 --> 01:15:17.080
Yeah.

01:15:17.080 --> 01:15:19.080
All right, well, I'm excited to see where things go, and, you know,

01:15:19.080 --> 01:15:25.080
we'll maybe do a follow-up when you've got some more of the ideas in place.

01:15:25.080 --> 01:15:26.080
Yeah, sounds great.

01:15:26.080 --> 01:15:27.080
No, it's always a pleasure.

01:15:27.080 --> 01:15:28.080
Thanks so much for having me on.

01:15:28.080 --> 01:15:29.080
I really appreciate it.

01:15:29.080 --> 01:15:30.080
Yeah, thanks, Charlie.

01:15:30.080 --> 01:15:31.080
See you later.

01:15:31.080 --> 01:15:32.080
Thanks, everyone, for listening.

01:15:32.080 --> 01:15:33.080
Bye.

01:15:33.080 --> 01:15:43.080
[BLANK_AUDIO]

