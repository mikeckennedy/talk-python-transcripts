WEBVTT

00:00:00.000 --> 00:00:02.400
- Yeah, thanks so much for having me again.


00:00:02.400 --> 00:00:04.200
- Yeah, it's great to have you here.


00:00:04.200 --> 00:00:06.680
You know, maybe we just remind people


00:00:06.680 --> 00:00:08.840
of the last time you were here.


00:00:08.840 --> 00:00:10.320
You wrote a really cool book,


00:00:10.320 --> 00:00:11.720
"The Power of Python."


00:00:11.720 --> 00:00:13.000
And I think it's really cool


00:00:13.000 --> 00:00:15.000
that you're here to talk about Python.


00:00:15.000 --> 00:00:16.000
And I think it's really cool


00:00:16.000 --> 00:00:18.040
that you're here to talk about Python.


00:00:18.040 --> 00:00:19.040
And I think it's really cool


00:00:19.040 --> 00:00:20.040
that you're here to talk about Python.


00:00:20.040 --> 00:00:21.040
And I think it's really cool


00:00:21.040 --> 00:00:22.040
that you're here to talk about Python.


00:00:22.040 --> 00:00:23.040
And I think it's really cool


00:00:23.040 --> 00:00:24.040
that you're here to talk about Python.


00:00:24.040 --> 00:00:25.040
And I think it's really cool


00:00:25.040 --> 00:00:26.040
that you're here to talk about Python.


00:00:26.040 --> 00:00:27.040
And I think it's really cool


00:00:27.040 --> 00:00:28.040
that you're here to talk about Python.


00:00:28.040 --> 00:00:29.040
And I think it's really cool


00:00:29.040 --> 00:00:30.640
wrote a really cool book called,


00:00:30.640 --> 00:00:31.840
I think it was Python Interviews.


00:00:31.840 --> 00:00:33.800
Is that the, do I have the title correct?


00:00:33.800 --> 00:00:35.560
- Yes, that's correct.


00:00:35.560 --> 00:00:38.840
- Yeah, and that was back in episode 156,


00:00:38.840 --> 00:00:42.520
way back in 2018, like three years ago, I guess,


00:00:42.520 --> 00:00:43.360
more than that.


00:00:43.360 --> 00:00:46.320
But it was a history book, so I was looking back, right?


00:00:46.320 --> 00:00:47.600
It's fine, it's still relevant.


00:00:47.600 --> 00:00:48.480
People can check that out.


00:00:48.480 --> 00:00:50.480
And I really love some of the stories


00:00:50.480 --> 00:00:54.000
that you told on there.


00:00:54.000 --> 00:00:56.640
I love, I think it was Alex Martelli,


00:00:56.640 --> 00:00:58.280
you interviewed him and talked about


00:00:58.280 --> 00:01:02.960
how Google Video and YouTube were sort of competing neck and neck.


00:01:02.960 --> 00:01:06.280
And that was sort of a Python versus C++ story.


00:01:06.280 --> 00:01:09.440
That's probably the one that stuck with me the most.


00:01:09.440 --> 00:01:10.920
>> Yeah, I really enjoyed that one.


00:01:10.920 --> 00:01:14.000
Although there's some good stuff in the Brett Cannon interview as well.


00:01:14.000 --> 00:01:15.840
>> Yeah, there's great stuff all over.


00:01:15.840 --> 00:01:19.680
I'm just trying to think of the one that I can remember years later, you know?


00:01:19.680 --> 00:01:20.520
>> Yeah.


00:01:20.520 --> 00:01:25.040
>> Yeah, so, yeah, well, it's been a couple years since you've been on the show.


00:01:25.040 --> 00:01:25.880
What have you been up to?


00:01:25.880 --> 00:01:26.720
- Yeah.


00:01:26.720 --> 00:01:30.920
- Well, since that book came out,


00:01:30.920 --> 00:01:33.360
I have been pretty prolific in my writing


00:01:33.360 --> 00:01:35.540
and continue to write more Python books.


00:01:35.540 --> 00:01:42.000
For example, I've written one on WX Python and Report Lab.


00:01:42.000 --> 00:01:45.440
I redid Python 101, which was my first book,


00:01:45.440 --> 00:01:46.280
and I completely--


00:01:46.280 --> 00:01:47.720
- Report Lab is, yeah, sorry,


00:01:47.720 --> 00:01:50.300
Report Lab is about like working with PDFs, right?


00:01:50.300 --> 00:01:52.920
- Yes, you can use it to create PDFs.


00:01:52.920 --> 00:01:56.100
But that book also covers how to edit,


00:01:56.100 --> 00:01:57.200
or I shouldn't say edit,


00:01:57.200 --> 00:02:00.980
how to read and get data out of an existing PDF as well.


00:02:00.980 --> 00:02:02.780
- Yeah, cool.


00:02:02.780 --> 00:02:07.780
You got a couple of 101, 201 type of books as well


00:02:07.780 --> 00:02:10.920
for learning Python.


00:02:10.920 --> 00:02:12.040
- Yep.


00:02:12.040 --> 00:02:13.360
Python 101 is for beginners


00:02:13.360 --> 00:02:15.800
and 201 is kind of intermediate advanced.


00:02:15.800 --> 00:02:18.480
- So if I was like a sophomore, I might take that.


00:02:18.480 --> 00:02:19.320
- Yes.


00:02:19.320 --> 00:02:21.980
(both laughing)


00:02:21.980 --> 00:02:23.300
- Cool, so what are you doing these days?


00:02:23.300 --> 00:02:26.020
Are you doing the independent thing


00:02:26.020 --> 00:02:28.060
with your authoring and creating?


00:02:28.060 --> 00:02:30.040
Are you doing consulting?


00:02:30.040 --> 00:02:31.260
What do you have to do?


00:02:31.260 --> 00:02:33.980
- Oh, I still would do a full-time job.


00:02:33.980 --> 00:02:35.980
I write Python code that tests


00:02:35.980 --> 00:02:38.780
an embedded C++ application with Python.


00:02:38.780 --> 00:02:39.780
- Oh, nice.


00:02:39.780 --> 00:02:41.980
- It's really neat, but I also,


00:02:41.980 --> 00:02:44.740
you know, kind of as a hobby/side job,


00:02:44.740 --> 00:02:46.980
I write for myself.


00:02:46.980 --> 00:02:48.480
I write these books,


00:02:48.480 --> 00:02:51.860
and I occasionally contribute to real Python as well.


00:02:51.860 --> 00:02:55.580
- A lot of good stuff going over at real Python.


00:02:55.580 --> 00:02:57.740
Dan and crew keeps that,


00:02:57.740 --> 00:03:00.020
the content flowing over there for sure.


00:03:00.020 --> 00:03:00.860
- Yep.


00:03:00.860 --> 00:03:02.940
- Yeah, absolutely.


00:03:02.940 --> 00:03:09.460
So we're gonna talk about building GUIs or G-U-I


00:03:09.460 --> 00:03:10.540
as some people say them.


00:03:10.540 --> 00:03:11.380
I know I'm a GUI.


00:03:11.380 --> 00:03:14.420
Are you a GUI or are you a G-U-I sort of person?


00:03:14.420 --> 00:03:16.060
- I usually call it GUI.


00:03:16.060 --> 00:03:17.060
- Yeah, me too.


00:03:17.060 --> 00:03:46.060
So we're going to talk about those for Python, which I think is interesting because there are and have been there are decent options, but it's not a place where Python has traditionally received a ton of focus and energy on building a lot of these frameworks have to do with taking another framework that's a nice cross platform framework and like making it friendly for Python, right? I'm thinking of like, yeah, like cute, or even WX Python, right?


00:03:46.060 --> 00:03:47.300
WX Python, right?


00:03:47.300 --> 00:03:51.960
- Yeah, it's usually a C++ wrapper that pre-existed Python


00:03:51.960 --> 00:03:55.340
and then it got wrapped with bindings of some sort.


00:03:55.340 --> 00:03:56.180
- Yeah, exactly.


00:03:56.180 --> 00:03:59.640
A lot of these, especially the ones that do native widgets,


00:03:59.640 --> 00:04:04.640
those are really just wrappers over the operating system


00:04:04.640 --> 00:04:06.360
when doing APIs, right?


00:04:06.360 --> 00:04:10.800
Like Win32 or what is it?


00:04:10.800 --> 00:04:15.360
Cocoa on macOS, those kinds of things, right?


00:04:15.360 --> 00:04:18.560
So it's like some thin layer, then some adaption,


00:04:18.560 --> 00:04:21.080
adapting thing for Python, right?


00:04:21.080 --> 00:04:23.200
- Yeah, I think there's only a handful


00:04:23.200 --> 00:04:26.560
that aren't wrapping something else like,


00:04:26.560 --> 00:04:32.360
bewares Toga, I don't believe is wrapping the native,


00:04:32.360 --> 00:04:33.920
I was trying to look for native,


00:04:33.920 --> 00:04:36.280
I guess it is wrapping in a way,


00:04:36.280 --> 00:04:39.480
but it's not wrapping a pre-existing framework.


00:04:39.480 --> 00:04:43.220
- Right, right, it's probably super low level.


00:04:43.220 --> 00:04:47.620
Like here is a literally create a window that is a button


00:04:47.620 --> 00:04:52.180
and that's it, like not like Qt or something, Qt-


00:04:52.180 --> 00:04:54.380
- Yeah, I think Togo is actually like,


00:04:54.380 --> 00:04:56.120
trying to render the Cocoa widgets


00:04:56.120 --> 00:04:58.780
or the Win32 widgets itself,


00:04:58.780 --> 00:05:01.900
rather than calling like Qt or WX.


00:05:01.900 --> 00:05:03.900
- Yeah, yeah, and there's some value to that.


00:05:03.900 --> 00:05:05.100
There's some value to that.


00:05:05.100 --> 00:05:07.020
So I thought the place that we could start


00:05:07.020 --> 00:05:10.780
is maybe a survey of these different libraries


00:05:10.780 --> 00:05:12.180
that we could use.


00:05:12.180 --> 00:05:13.000
- Sure.


00:05:13.000 --> 00:05:17.000
So let's start with Tinker, TK, Enter,


00:05:17.000 --> 00:05:22.000
which is really the Python interface to TCL, TK, right?


00:05:22.000 --> 00:05:24.520
- Yep.


00:05:24.520 --> 00:05:27.360
- So this one comes built in, right?


00:05:27.360 --> 00:05:31.120
I'm here on the Python 3.9.6 documentation,


00:05:31.120 --> 00:05:34.640
and I guess this is the official way


00:05:34.640 --> 00:05:37.080
to create GUIs with Python, right?


00:05:37.080 --> 00:05:39.200
I mean, in the sense that it ships with it.


00:05:39.200 --> 00:05:40.160
- It ships with it.


00:05:40.160 --> 00:05:44.960
However, on like Linux, the system Python does not come with it.


00:05:44.960 --> 00:05:47.360
Okay.


00:05:47.360 --> 00:05:50.640
And I believe, I believe Mac is the same way.


00:05:50.640 --> 00:05:53.160
You have to install it separately for its system Python too.


00:05:53.160 --> 00:05:54.120
Yeah.


00:05:54.120 --> 00:05:55.240
That wouldn't surprise me.


00:05:55.240 --> 00:05:59.960
Well, you know, the, the system Python and Mac is all sorts of outdated


00:05:59.960 --> 00:06:02.040
and, and whatnot, basically.


00:06:02.040 --> 00:06:02.240
Right.


00:06:02.240 --> 00:06:06.280
Like two seven, who knows what, right.


00:06:06.280 --> 00:06:09.440
But yeah, but it's always surprises me when I go to import Tkinter and it's


00:06:09.440 --> 00:06:10.680
it's like, oh, it's not there.


00:06:10.680 --> 00:06:12.020
Like what the?


00:06:12.020 --> 00:06:13.840
- Yeah, exactly.


00:06:13.840 --> 00:06:15.680
So, you know, tell us about this one.


00:06:15.680 --> 00:06:19.300
Like what's the good side?


00:06:19.300 --> 00:06:22.040
When would you use it or would you use it?


00:06:22.040 --> 00:06:23.280
When wouldn't you use it?


00:06:23.280 --> 00:06:29.640
- For me, I don't like it because it looks old fashioned,


00:06:29.640 --> 00:06:33.800
but mainly because it draws all its own ridges,


00:06:33.800 --> 00:06:37.200
just like some of the other GUI toolkits.


00:06:37.200 --> 00:06:40.800
So basically when you create a Tkinter GUI,


00:06:40.800 --> 00:06:43.640
you know it's a Tkinter GUI because it doesn't look native.


00:06:43.640 --> 00:06:48.520
However, you can use a Tkinter,


00:06:48.520 --> 00:06:51.500
the code can be written without classes.


00:06:51.500 --> 00:06:53.740
You could write it completely functionally


00:06:53.740 --> 00:06:55.200
and still make it work.


00:06:55.200 --> 00:06:58.560
So, you know, as a learning way to create a GUI,


00:06:58.560 --> 00:07:00.480
it might be a good first, you know,


00:07:00.480 --> 00:07:03.680
a good beginner or first GUI to create with.


00:07:03.680 --> 00:07:04.960
- Yeah, absolutely.


00:07:04.960 --> 00:07:08.400
Here I put up on the screen for us to see,


00:07:08.400 --> 00:07:11.400
there's like this TK Enter Hotel Management System.


00:07:11.400 --> 00:07:14.720
It definitely doesn't, if I didn't see the top bar,


00:07:14.720 --> 00:07:16.800
I couldn't tell you what OS that's from,


00:07:16.800 --> 00:07:19.640
'cause it doesn't look like the OS that I know, right?


00:07:19.640 --> 00:07:21.600
Although there's another example,


00:07:21.600 --> 00:07:22.940
I'll put these in the show notes.


00:07:22.940 --> 00:07:25.240
There's a pretty nice one that's hosting


00:07:25.240 --> 00:07:32.840
some kind of sort of, it's like a predates Jupyter


00:07:33.320 --> 00:07:35.800
or something like Hotes Map Plotlibs,


00:07:35.800 --> 00:07:37.000
exploration and stuff.


00:07:37.000 --> 00:07:40.760
And that one, that looks like a pretty solid app to me.


00:07:40.760 --> 00:07:44.680
- Yeah, Tkinter did add a sub-module called TTK,


00:07:44.680 --> 00:07:48.320
which does look a lot more native across platforms.


00:07:48.320 --> 00:07:50.680
So you can make it look nice actually,


00:07:50.680 --> 00:07:52.000
if you spend the time,


00:07:52.000 --> 00:07:53.720
but you're going to have trouble


00:07:53.720 --> 00:07:55.320
finding good examples online,


00:07:55.320 --> 00:07:58.880
'cause a lot of them just use the old interface.


00:07:58.880 --> 00:08:01.400
And one other thing I do want to note about Tkinter


00:08:01.400 --> 00:08:02.400
is it's themable.


00:08:02.400 --> 00:08:04.020
So if you want it to look,


00:08:04.020 --> 00:08:07.180
and you want to add themes to your GUI,


00:08:07.180 --> 00:08:09.620
you know, TKED is an option for that.


00:08:09.620 --> 00:08:10.460
- Oh, interesting.


00:08:10.460 --> 00:08:11.540
It was like, so for example,


00:08:11.540 --> 00:08:14.740
you could give it a macOS like theme


00:08:14.740 --> 00:08:17.700
that turns on in that platform in a Linux theme,


00:08:17.700 --> 00:08:21.460
maybe in a dark mode and a not dark mode.


00:08:21.460 --> 00:08:23.380
- Yeah, I was thinking of dark modes, light modes,


00:08:23.380 --> 00:08:25.260
be giving them a certain, you know, color things,


00:08:25.260 --> 00:08:27.740
kind of like a Winamp type skin.


00:08:27.740 --> 00:08:28.620
- Yeah.


00:08:28.620 --> 00:08:31.220
Oh man, remember how crazy those skins would get?


00:08:31.220 --> 00:08:33.800
they'd get like 3D with little holes cut in them.


00:08:33.800 --> 00:08:36.880
And yeah, that stuff got, that got a lot of little drawers,


00:08:36.880 --> 00:08:38.440
like an alien tongue would shoot out


00:08:38.440 --> 00:08:41.200
and that's where like the playlist would be.


00:08:41.200 --> 00:08:42.440
Don't do that people.


00:08:42.440 --> 00:08:43.540
- Yeah, don't do that.


00:08:43.540 --> 00:08:50.040
- Okay, so for the most part, Tkinter is built in-ish,


00:08:50.040 --> 00:08:52.720
at least it's sort of somewhat officially


00:08:52.720 --> 00:08:53.920
part of Python, right?


00:08:53.920 --> 00:08:55.040
- Yes, it is.


00:08:55.040 --> 00:08:57.440
- Another one, one that I think of a lot


00:08:57.440 --> 00:09:01.340
when I think of cross-platform stuff is Qt, QT.


00:09:01.340 --> 00:09:06.640
And PyQt, there's been a lot of different versions


00:09:06.640 --> 00:09:11.640
of PyQt, like a lot of stuff with licensing.


00:09:11.640 --> 00:09:14.000
So like right here on the homepage, it says licensing.


00:09:14.000 --> 00:09:16.520
PyQt is dual license on all the platforms


00:09:16.520 --> 00:09:20.960
under GPL-3 and the Riverbank commercial one.


00:09:20.960 --> 00:09:25.640
Unlike Qt, PyQt is not available under LGPL,


00:09:25.640 --> 00:09:27.040
which is I guess what you would need


00:09:27.040 --> 00:09:30.480
for like a commercial closed source app.


00:09:30.480 --> 00:09:34.360
And there's another wrapper around Qt


00:09:34.360 --> 00:09:35.800
that I think is LGPL.


00:09:35.800 --> 00:09:38.080
Like there's a lot of stuff that's just like,


00:09:38.080 --> 00:09:40.200
whoa, why is it so complicated?


00:09:40.200 --> 00:09:42.680
- Yeah, PyQt is kind of confusing


00:09:42.680 --> 00:09:44.960
when it comes to its licensing structure.


00:09:44.960 --> 00:09:46.760
- Yeah, which is crazy


00:09:46.760 --> 00:09:49.560
'cause I've had this conversation multiple times


00:09:49.560 --> 00:09:51.480
and it seems like it, I don't know,


00:09:51.480 --> 00:09:53.680
either it never resolves clearly in my mind


00:09:53.680 --> 00:09:57.600
or it's just challenging.


00:09:57.600 --> 00:10:02.600
But that said, there's really nice apps built with Qt.


00:10:02.600 --> 00:10:05.400
So for example, like one of the database tools I use


00:10:05.400 --> 00:10:08.600
for working with MongoDB is Robo3T.


00:10:08.600 --> 00:10:12.000
And if you look at Robo3T, this thing is glorious


00:10:12.000 --> 00:10:14.320
in terms of its sort of native look and feel.


00:10:14.320 --> 00:10:17.700
Like if you go to the robomongo.org,


00:10:17.700 --> 00:10:18.980
scroll down for the screenshots,


00:10:18.980 --> 00:10:21.360
there's the three OS's side by side


00:10:21.360 --> 00:10:24.520
and every one of them looks like it belongs


00:10:24.520 --> 00:10:26.240
on that platform, right?


00:10:26.240 --> 00:10:27.080
- Yeah.


00:10:27.080 --> 00:10:29.720
You can get a little bit simpler with,


00:10:29.720 --> 00:10:32.480
instead of using PyQ, you could use Qt for Python,


00:10:32.480 --> 00:10:34.760
which is the new name for PySide.


00:10:34.760 --> 00:10:35.600
- That's right.


00:10:35.600 --> 00:10:38.080
- And it has a more permissive licensing structure.


00:10:38.080 --> 00:10:41.160
- That's the one I was thinking of, yes, thank you.


00:10:41.160 --> 00:10:44.720
Yeah, they renamed that to Qt for Python, right?


00:10:44.720 --> 00:10:46.080
- I believe so.


00:10:46.080 --> 00:10:48.640
Although the import is still PySide.


00:10:48.640 --> 00:10:49.680
- Is it still PySide?


00:10:49.680 --> 00:10:50.520
How interesting.


00:10:50.520 --> 00:10:53.520
- I like PySite 6, I think, yes.


00:10:53.520 --> 00:10:55.640
- Yeah, how interesting.


00:10:55.640 --> 00:10:58.440
So this, I think, Qt's a pretty solid option.


00:10:58.440 --> 00:11:01.720
I feel like I see Qt being used in embedded systems


00:11:01.720 --> 00:11:02.880
and other types of things.


00:11:02.880 --> 00:11:04.920
Like I said, I started using RoboMongo


00:11:04.920 --> 00:11:06.480
just 'cause it seemed like a good app


00:11:06.480 --> 00:11:08.160
and like, oh, this is a Qt app.


00:11:08.160 --> 00:11:11.800
It's not a, Python is a C++ app,


00:11:11.800 --> 00:11:13.080
but it just as well could be.


00:11:13.080 --> 00:11:14.800
Like there's nothing fancy about it


00:11:14.800 --> 00:11:16.640
that it makes it have to be C++.


00:11:16.640 --> 00:11:18.720
It just happens to have been that way.


00:11:18.720 --> 00:11:20.160
- Yeah.


00:11:20.160 --> 00:11:25.360
Yeah, so what are your thoughts on this as one of the options?


00:11:25.360 --> 00:11:26.840
Oh, Qt is really powerful.


00:11:26.840 --> 00:11:28.520
You can do a ton.


00:11:28.520 --> 00:11:32.720
And while it draws all of its own widgets itself,


00:11:32.720 --> 00:11:35.880
it's not actually using the native widgets.


00:11:35.880 --> 00:11:37.400
It looks native.


00:11:37.400 --> 00:11:37.920
So again--


00:11:37.920 --> 00:11:39.400
At least they made an effort, yeah.


00:11:39.400 --> 00:11:41.880
Yeah, again, this one is also themable.


00:11:41.880 --> 00:11:44.320
If you want to do themes, you can change dark mode,


00:11:44.320 --> 00:11:49.400
light mode easily because it's all drawn itself.


00:11:49.400 --> 00:11:54.280
I think PyQt and PyQt for Python both support QML,


00:11:54.280 --> 00:11:59.120
which is kind of an XML version of the C++ library.


00:11:59.120 --> 00:12:03.220
So you can kind of write your GUIs in a markup language.


00:12:03.220 --> 00:12:07.440
The nice thing about-- - Yeah, that's right.


00:12:07.440 --> 00:12:12.440
It's a little bit like XML or XAML from the Microsoft space.


00:12:12.440 --> 00:12:13.880
Yeah, that's right.


00:12:13.880 --> 00:12:16.760
- It also has a, what you see is what you get editor,


00:12:16.760 --> 00:12:18.560
I think it's Qt Designer.


00:12:18.560 --> 00:12:22.480
It works for both C++ and Python.


00:12:22.480 --> 00:12:25.320
I believe the Python side,


00:12:25.320 --> 00:12:27.200
you have to do some special imports


00:12:27.200 --> 00:12:30.120
to actually use the UI file it generates.


00:12:30.120 --> 00:12:31.600
- Okay, interesting.


00:12:31.600 --> 00:12:34.360
Yeah, that seems like a really valuable thing to me,


00:12:34.360 --> 00:12:36.120
to visually be able to say,


00:12:36.120 --> 00:12:37.400
I want this widget to be here,


00:12:37.400 --> 00:12:40.360
I want this one to stretch like that, and so on.


00:12:40.360 --> 00:12:43.600
- Yeah, I work with a bunch of C++ Qt guys,


00:12:43.600 --> 00:12:46.160
and they use the designer,


00:12:46.160 --> 00:12:48.600
but occasionally it will do crazy things


00:12:48.600 --> 00:12:50.840
when your design gets really complex,


00:12:50.840 --> 00:12:52.960
where it's really hard to get stuff to stretch


00:12:52.960 --> 00:12:54.560
the way you want it to.


00:12:54.560 --> 00:12:56.640
Sometimes you just have to drop into the code


00:12:56.640 --> 00:12:58.600
to make it work right.


00:12:58.600 --> 00:13:02.080
- Yeah, well, I think that's probably the case


00:13:02.080 --> 00:13:03.600
with many of the frameworks, right?


00:13:03.600 --> 00:13:05.640
Not just these Python ones we're highlighting,


00:13:05.640 --> 00:13:10.160
but Xcode, .NET, whatever, right?


00:13:10.160 --> 00:13:13.640
- I think that's just a problem with auto-generated UI code.


00:13:13.640 --> 00:13:15.240
Whenever you use a designer like that,


00:13:15.240 --> 00:13:19.880
our Visual Studio, you're going to run into quirks.


00:13:19.880 --> 00:13:21.560
- Yeah, yeah, for sure.


00:13:21.560 --> 00:13:24.900
Next up on our list here is Kivy.


00:13:24.900 --> 00:13:29.280
Kivy, I heard about a lot from,


00:13:29.280 --> 00:13:34.340
I think sort of building mobile apps with Python


00:13:34.340 --> 00:13:35.260
and in the rest of the ways,


00:13:35.260 --> 00:13:36.780
it's kind of got this game,


00:13:36.780 --> 00:13:38.900
draw your own UI sort of feel to it.


00:13:38.900 --> 00:13:42.740
- Yeah, it's also cross-platform.


00:13:42.740 --> 00:13:45.160
It runs on mobile too though.


00:13:45.160 --> 00:13:51.360
So you can deploy its apps to Android and Apple OS.


00:13:51.360 --> 00:13:53.320
But yeah, a lot of the stuff on there--


00:13:53.320 --> 00:13:54.600
well, I should back up.


00:13:54.600 --> 00:13:57.240
It was originally developed for multi-touch.


00:13:57.240 --> 00:14:00.600
So like Microsoft's original Surface Table,


00:14:00.600 --> 00:14:03.680
I think is what it was originally developed for.


00:14:03.680 --> 00:14:08.360
But obviously, it also works great on multi-touch phones


00:14:08.360 --> 00:14:09.760
and whatnot.


00:14:09.760 --> 00:14:14.720
But yeah, all of its widgets are drawn by Kiwi itself.


00:14:14.720 --> 00:14:18.140
So they look like a Kivi app most of the time.


00:14:18.140 --> 00:14:20.340
- Yeah, they have a gallery over here.


00:14:20.340 --> 00:14:22.360
And in the gallery,


00:14:22.360 --> 00:14:25.500
they even have like some surface table exploration stuff,


00:14:25.500 --> 00:14:30.200
like the city of Marseille map exploration type thing.


00:14:30.200 --> 00:14:33.440
- They have a Kivi garden, I believe,


00:14:33.440 --> 00:14:36.000
that also showcases lots of custom widgets.


00:14:36.000 --> 00:14:38.080
- Yeah.


00:14:38.080 --> 00:14:39.040
So when I look at the,


00:14:39.040 --> 00:14:43.040
I'm scrolling through the gallery here,


00:14:43.040 --> 00:14:48.440
I feel like there's a lot of 2D sort of interactive things,


00:14:48.440 --> 00:14:51.800
a lot of games or stuff like that, right?


00:14:51.800 --> 00:14:57.560
So if I wanted to build an app that maybe looked like it used


00:14:57.560 --> 00:15:00.720
the Windows-rich text box and the Windows button,


00:15:00.720 --> 00:15:04.960
so it looked like a Windows 10 button on Windows 10


00:15:04.960 --> 00:15:08.560
and a Windows 11 button with curved edges,


00:15:08.560 --> 00:15:10.640
it's not that kind of framework, right?


00:15:10.640 --> 00:15:12.760
>> No, it's not.


00:15:12.760 --> 00:15:15.440
And I believe Kiwi is based on,


00:15:15.440 --> 00:15:17.520
written on top of Pygame.


00:15:17.520 --> 00:15:20.920
So it has, that's why it can do games so well.


00:15:20.920 --> 00:15:21.760
- Right.


00:15:21.760 --> 00:15:26.240
Yeah, it sounds familiar to me as well.


00:15:26.240 --> 00:15:30.600
And apparently the winner of the Python Discord Code Jam 6


00:15:30.600 --> 00:15:32.880
was Dunning Kiwi.


00:15:32.880 --> 00:15:33.920
So that's pretty cool.


00:15:33.920 --> 00:15:34.840
- That is cool.


00:15:34.840 --> 00:15:36.120
- As well as second place.


00:15:36.120 --> 00:15:41.000
So, is there a third place one down here?


00:15:41.000 --> 00:15:41.840
- Yeah, it is.


00:15:41.840 --> 00:15:45.160
They did a clean sweep of the podium with Kivy.


00:15:45.160 --> 00:15:46.880
So that's pretty impressive, actually.


00:15:46.880 --> 00:15:47.720
- Yeah.


00:15:47.720 --> 00:15:51.040
I've actually played one of their games on my phone before


00:15:51.040 --> 00:15:53.260
and they seem pretty well done.


00:15:53.260 --> 00:15:56.480
- Nice.


00:15:56.480 --> 00:15:59.720
Another one that's gotten a lot of traction


00:15:59.720 --> 00:16:03.180
and has its own opinions for how it works


00:16:03.180 --> 00:16:04.020
is PySimpleGUI.


00:16:04.020 --> 00:16:08.080
I think Mike Barnett, if I'm remembering correctly,


00:16:08.080 --> 00:16:09.360
is working on that.


00:16:09.360 --> 00:16:10.200
- Yeah.


00:16:10.200 --> 00:16:15.800
Yeah, it's the idea is to make it super simple to just get a basic UI up and running, right?


00:16:15.800 --> 00:16:22.440
Yeah. So PySimpleGUI wraps, I think, four or five other frameworks.


00:16:22.440 --> 00:16:32.840
So it wraps Tkinter, DbxPython, PyQt, Remy, which is a mobile thing,


00:16:32.840 --> 00:16:36.360
and something else. And basically gives you the same API for all of them.


00:16:36.920 --> 00:16:41.960
So that, you know, if you write your code once and then you just change the import from like import PySimpleGUI to


00:16:41.960 --> 00:16:45.560
import PySimpleGUI_cute or PySimpleGUI_wx


00:16:45.560 --> 00:16:49.800
You can get that native look and feel because you're using WX or cute


00:16:49.800 --> 00:16:58.200
Oh, that's a really cool aspect right that you can swap out the widget engine or something basically. Mm-hmm. Yep


00:16:58.200 --> 00:17:01.480
the default is key enter but


00:17:01.720 --> 00:17:07.960
Yeah, probably because it's the least dependencies and you don't have to think about which kind of license you're doing what with.


00:17:07.960 --> 00:17:09.160
Yes.


00:17:09.160 --> 00:17:21.200
Interesting. Okay, so this is a pretty cool one. If you're just trying to get a dialogue up that like has one or two buttons and an input and a progress bar, maybe this is a good option.


00:17:22.360 --> 00:17:25.620
- They can do quite a bit of complex GUIs too.


00:17:25.620 --> 00:17:27.440
There's a demo package that they have


00:17:27.440 --> 00:17:30.800
that shows how to integrate it with Matplotlib


00:17:30.800 --> 00:17:34.840
and OpenCV and lots of other things.


00:17:34.840 --> 00:17:38.080
These examples don't show the advanced stuff it can do.


00:17:38.080 --> 00:17:41.880
- Right, I'm sort of paging through the gallery,


00:17:41.880 --> 00:17:44.440
the screenshot that they have on the site there,


00:17:44.440 --> 00:17:45.440
which we'll link to.


00:17:45.440 --> 00:17:48.280
- And again, since it's using Kikenter,


00:17:48.280 --> 00:17:50.500
it also does themes natively.


00:17:52.320 --> 00:17:53.960
- At least for the Tkinter part.


00:17:53.960 --> 00:17:55.000
- Yeah, exactly.


00:17:55.000 --> 00:17:57.120
Yeah, yeah, super cool.


00:17:57.120 --> 00:17:59.360
Okay, that's another option we got out there.


00:17:59.360 --> 00:18:01.680
One that you put in the list


00:18:01.680 --> 00:18:06.120
that I haven't really done anything with is DeerPyGUI,


00:18:06.120 --> 00:18:08.720
a fast and powerful graphical user interface toolkit


00:18:08.720 --> 00:18:10.860
for Python with minimal dependencies.


00:18:10.860 --> 00:18:13.600
Tell us about this one.


00:18:13.600 --> 00:18:16.760
- This one I haven't played with very much yet,


00:18:16.760 --> 00:18:20.240
but I believe the guy who created it


00:18:20.240 --> 00:18:22.520
has been working a lot on it lately.


00:18:22.520 --> 00:18:26.500
And it has a really neat interface.


00:18:26.500 --> 00:18:28.520
I don't think it's wrapping anything,


00:18:28.520 --> 00:18:30.640
but I could be mistaken.


00:18:30.640 --> 00:18:35.600
- It looks very focused on providing animated


00:18:35.600 --> 00:18:39.880
and interactive aspects for like scientific visualization


00:18:39.880 --> 00:18:41.200
and exploration.


00:18:41.200 --> 00:18:42.880
- Yeah, I think it is.


00:18:42.880 --> 00:18:45.760
I don't believe it tries to look native necessarily either,


00:18:45.760 --> 00:18:47.740
but it has a very slick interface.


00:18:47.740 --> 00:18:49.600
- Yeah.


00:18:49.600 --> 00:18:50.440
- Yeah, it does.


00:18:50.440 --> 00:18:52.440
There's a lot of cool stuff that's going on here.


00:18:52.440 --> 00:18:56.880
Okay, so that's a neat one.


00:18:56.880 --> 00:19:00.760
And I guess one that I didn't properly cover,


00:19:00.760 --> 00:19:02.760
oh yeah, 'cause I didn't pull up in our little list here,


00:19:02.760 --> 00:19:05.120
but is a toga from B-ware,


00:19:05.120 --> 00:19:06.880
you touched on that, right?


00:19:06.880 --> 00:19:07.720
- Yeah.


00:19:07.720 --> 00:19:12.460
- So all the stuff over B-ware is super neat.


00:19:12.460 --> 00:19:15.720
There's a lot of nice things going on.


00:19:15.720 --> 00:19:19.680
definitely the native widgets feels,


00:19:19.680 --> 00:19:22.680
I just always feel like,


00:19:22.680 --> 00:19:24.680
"This thing doesn't really belong here."


00:19:24.680 --> 00:19:27.600
When I see an app, it just looks like,


00:19:27.600 --> 00:19:31.280
you're like, "This is some clearly cross-platform,


00:19:31.280 --> 00:19:34.960
not really this platform feel."


00:19:34.960 --> 00:19:35.760
>> Yes.


00:19:35.760 --> 00:19:40.160
>> I don't know. I appreciate the native widgets aspects,


00:19:40.160 --> 00:19:41.800
but it's also listed in


00:19:41.800 --> 00:19:44.160
the maturity level as early development.


00:19:44.160 --> 00:19:47.680
So I'm not sure if this is ready for you to pick up and build with yet.


00:19:47.680 --> 00:19:50.880
Yeah, not really is my understanding.


00:19:50.880 --> 00:19:55.760
And oddly enough, it's been in early development for like the last five years.


00:19:55.760 --> 00:19:59.440
So it's been really slow to develop, which I mean,


00:19:59.440 --> 00:20:02.240
they're trying to do it from the ground up and they're not wrapping anything.


00:20:02.240 --> 00:20:04.800
So it's somewhat understandable.


00:20:04.800 --> 00:20:08.720
But I think they recently added Android support.


00:20:08.720 --> 00:20:12.160
So I think that they're focusing more on the mobile stuff than,


00:20:12.800 --> 00:20:16.800
you know, like Windows and Macs, native OSes.


00:20:16.800 --> 00:20:17.800
Yeah.


00:20:17.800 --> 00:20:22.800
The last commit was a merged PR from Russell Keith-McGee four days ago.


00:20:22.800 --> 00:20:24.800
So there's still action.


00:20:24.800 --> 00:20:27.800
Yeah, they're still working on it.


00:20:27.800 --> 00:20:30.800
Nice, nice.


00:20:30.800 --> 00:20:33.800
All right, well, that brings us over to the WXPython,


00:20:33.800 --> 00:20:36.800
which is another one of these options in this space,


00:20:36.800 --> 00:20:41.800
but that's what we're going to focus on in this particular episode, right?


00:20:41.800 --> 00:20:42.800
Sure, yep.


00:20:42.800 --> 00:20:46.600
So give us the quick overview of WX Python,


00:20:46.600 --> 00:20:50.100
sort of compared to these other options we've been covering.


00:20:50.100 --> 00:20:54.600
So WX Python is again a C++ project.


00:20:54.600 --> 00:20:58.400
It wraps WX widgets, or Wix widgets, I've heard it called.


00:20:58.400 --> 00:21:02.940
It works on Windows, Mac, and Linux, and Raspberry Pi.


00:21:02.940 --> 00:21:09.100
The big thing about WX Python is that it does do native widgets


00:21:09.100 --> 00:21:11.360
wherever possible on all platforms.


00:21:11.360 --> 00:21:14.480
Yeah, that's cool.


00:21:14.480 --> 00:21:17.720
That is really cool.


00:21:17.720 --> 00:21:23.480
It also provides a lot of custom widgets in case you need them for certain purposes.


00:21:23.480 --> 00:21:28.260
Like some, I believe, I think it was Mac that didn't have a toggle widget for a long time,


00:21:28.260 --> 00:21:31.240
so they provided their own toggle widget for it.


00:21:31.240 --> 00:21:34.040
Right, it's the GUI equivalent of a polyfill.


00:21:34.040 --> 00:21:37.360
If like that feature is not supported, but you want it, well, like, all right, here's


00:21:37.360 --> 00:21:40.080
that something that'll do for now.


00:21:40.080 --> 00:21:41.720
- Yeah.


00:21:41.720 --> 00:21:42.920
- Yeah, yeah, very cool.


00:21:42.920 --> 00:21:49.200
So it looks to me like it checks a lot of the right boxes.


00:21:49.200 --> 00:21:51.320
What's the licensing story?


00:21:51.320 --> 00:21:53.740
- It's very permissive.


00:21:53.740 --> 00:21:58.240
- Let's see, I'll pull up the repo


00:21:58.240 --> 00:22:00.760
and hit their license doc and see what I can find.


00:22:00.760 --> 00:22:06.560
- I know they called it the WX Python license,


00:22:06.560 --> 00:22:07.400
but I'm trying to remember.


00:22:07.400 --> 00:22:10.520
That's right. It looks LGPL ish.


00:22:10.520 --> 00:22:13.280
Yeah. I think it is mostly LGPL.


00:22:13.280 --> 00:22:18.040
Yeah. Cool. Okay.


00:22:18.040 --> 00:22:23.160
So that's better than multi license confusing.


00:22:23.160 --> 00:22:27.560
Like the C layer has one license and the Python layer has another license,


00:22:27.560 --> 00:22:30.920
but then there's a commercial license.


00:22:30.920 --> 00:22:35.200
so it seems like it's pretty easy for you to just to decide to adopt it and use


00:22:35.200 --> 00:22:36.040
it on your project.


00:22:36.440 --> 00:22:38.540
- Yep, I would agree with that.


00:22:38.540 --> 00:22:42.540
And it's also extremely stable.


00:22:42.540 --> 00:22:46.100
They almost never break your code


00:22:46.100 --> 00:22:47.580
when they release a new version.


00:22:47.580 --> 00:22:48.780
- Okay, that's cool.


00:22:48.780 --> 00:22:50.940
I heard that it rose from the ashes.


00:22:50.940 --> 00:22:53.100
(laughing)


00:22:53.100 --> 00:22:53.940
- Yeah.


00:22:53.940 --> 00:22:56.020
- We've got the Phoenix release


00:22:56.020 --> 00:22:58.940
and then the legacy or traditional version.


00:22:58.940 --> 00:23:00.180
What's the story of that?


00:23:00.180 --> 00:23:03.540
- Okay, so Python 3 came out


00:23:03.540 --> 00:23:07.940
and a lot of people fussed about supporting it.


00:23:07.940 --> 00:23:12.940
And it was a pretty big deal to port WXPython to Python 3


00:23:12.940 --> 00:23:16.860
because WXPython has a really small group


00:23:16.860 --> 00:23:18.060
of core developers.


00:23:18.060 --> 00:23:21.100
But eventually he created,


00:23:21.100 --> 00:23:24.160
Robin Dunn is the main guy behind WXPython currently.


00:23:24.160 --> 00:23:27.140
And he decided, well, we're gonna call it Project Phoenix


00:23:27.140 --> 00:23:29.020
while I get this working.


00:23:29.020 --> 00:23:32.540
And I think he actually switched the way he binded


00:23:32.540 --> 00:23:34.540
to Wix widgets at the time,


00:23:34.540 --> 00:23:37.700
'cause he went from like Swig to, I believe SIP,


00:23:37.700 --> 00:23:39.860
which is a different type of binding.


00:23:39.860 --> 00:23:40.940
- Okay. - And that made it


00:23:40.940 --> 00:23:43.780
a lot easier to support both Python 2.7


00:23:43.780 --> 00:23:47.980
and I think it was 3.4 was the first three release


00:23:47.980 --> 00:23:50.380
for DevX Python.


00:23:50.380 --> 00:23:52.760
And that also made it pip installable.


00:23:52.760 --> 00:23:55.780
So that was super awesome when he got that working.


00:23:55.780 --> 00:23:56.620
- So if I wanna use it,


00:23:56.620 --> 00:24:00.340
I can just pip install DevX Python or Wix Python


00:24:00.340 --> 00:24:03.920
as I'm learning that I might want to say it that way.


00:24:03.920 --> 00:24:05.080
- Yes, that's correct.


00:24:05.080 --> 00:24:10.200
There's a caveat on Linux that sometimes you need


00:24:10.200 --> 00:24:13.480
to have a couple of extra Linux dependencies installed.


00:24:13.480 --> 00:24:17.440
But other than that, pip install should work.


00:24:17.440 --> 00:24:21.300
- Yeah, well, that's pretty standard, right?


00:24:21.300 --> 00:24:23.780
If you're doing gooey stuff on Linux,


00:24:23.780 --> 00:24:27.300
there's elements there you gotta add.


00:24:27.300 --> 00:24:29.060
So it doesn't seem outrageous.


00:24:29.060 --> 00:24:30.180
- No.


00:24:30.180 --> 00:24:34.060
- Yeah, so another thing that I'm a big fan of


00:24:34.060 --> 00:24:35.380
to the extent that they work,


00:24:35.380 --> 00:24:37.460
and the better that it works, the more I'm a fan of it,


00:24:37.460 --> 00:24:40.340
is the, like the GUI designer.


00:24:40.340 --> 00:24:43.100
So there's two over here, right?


00:24:43.100 --> 00:24:47.040
We've got like this Wix form builder and the Wix Glade.


00:24:47.040 --> 00:24:51.580
I think I tried the Wix form builder


00:24:51.580 --> 00:24:53.460
and it just, it kept crashing.


00:24:53.460 --> 00:24:55.420
Not like it would start and was unstable,


00:24:55.420 --> 00:24:57.940
like it would not start for me.


00:24:57.940 --> 00:24:59.100
And I don't know what the deal,


00:24:59.100 --> 00:25:02.100
maybe it was the version of macOS


00:25:02.100 --> 00:25:03.580
that was running on or something.


00:25:03.580 --> 00:25:04.420
But what's the story?


00:25:04.420 --> 00:25:06.820
Are these things that people would use?


00:25:06.820 --> 00:25:11.820
Like what's the story around the WYSIWYG side of these?


00:25:11.820 --> 00:25:14.700
- WSYWYG's Python traditionally hasn't had really


00:25:14.700 --> 00:25:18.740
a WYSIWYG editor, but people have tried to build them.


00:25:18.740 --> 00:25:21.180
So I think WSYWYG's Glade is probably the one


00:25:21.180 --> 00:25:22.820
that's been around the longest.


00:25:22.820 --> 00:25:23.660
- Okay.


00:25:23.660 --> 00:25:26.600
- And probably the best supported.


00:25:26.600 --> 00:25:33.280
I don't think it, I think it supports the core widgets of Debian X Python.


00:25:33.280 --> 00:25:37.440
If you were to pull up the Debian X Python demo app, there are like 100, I would say


00:25:37.440 --> 00:25:40.760
at least 100 widgets, maybe more, maybe 200.


00:25:40.760 --> 00:25:43.400
So the core widgets, you know, like buttons.


00:25:43.400 --> 00:25:46.280
Is that, do I find that under widgets?


00:25:46.280 --> 00:25:51.120
You would find that under, let me see, downloads.


00:25:51.120 --> 00:25:53.440
Downloads, there you go.


00:25:53.440 --> 00:25:55.480
Unfortunately, it's actually something you run locally.


00:25:55.480 --> 00:25:56.820
- Yeah, sure, sure.


00:25:56.820 --> 00:25:59.060
So you could download, I think I have run that before


00:25:59.060 --> 00:26:02.000
and you basically, it's like got all these windows


00:26:02.000 --> 00:26:03.820
that'll show you little use cases


00:26:03.820 --> 00:26:05.760
for this widget or that widget, right?


00:26:05.760 --> 00:26:07.080
- Yeah, it also shows you the code


00:26:07.080 --> 00:26:09.220
and you can edit the code live in the demo


00:26:09.220 --> 00:26:12.020
and see how it changes the widgets.


00:26:12.020 --> 00:26:18.840
But anyway, so yeah, I lost my train of thought.


00:26:18.840 --> 00:26:22.640
- That's okay, well, I was talking about,


00:26:22.640 --> 00:26:27.220
We're talking about Glade and the GUI stuff, yeah.


00:26:27.220 --> 00:26:29.780
- Yeah, I believe it does a decent enough job.


00:26:29.780 --> 00:26:34.780
I think it outputs a Python file, so that's nice.


00:26:34.780 --> 00:26:37.900
It doesn't put, you know, like Qt's designer


00:26:37.900 --> 00:26:39.620
outputs a UI file that you have to figure out


00:26:39.620 --> 00:26:41.640
how to import and then use.


00:26:41.640 --> 00:26:44.140
This one actually outputs a Python file.


00:26:44.140 --> 00:26:44.980
- Oh, that's nice.


00:26:44.980 --> 00:26:46.340
Yeah, that's really good.


00:26:46.340 --> 00:26:48.020
So I'm looking at the screen here


00:26:48.020 --> 00:26:50.420
and it looks like Audacity,


00:26:50.420 --> 00:26:55.420
the well-known audio editing app is built in DubX.


00:26:55.420 --> 00:26:57.560
I'm guessing, otherwise there's no reason


00:26:57.560 --> 00:26:58.640
they would feature it.


00:26:58.640 --> 00:26:59.880
- I believe that's true.


00:26:59.880 --> 00:27:03.040
I'm not sure if it's Wix Widgets itself.


00:27:03.040 --> 00:27:05.840
- Yeah, it's on the Wix Widgets site.


00:27:05.840 --> 00:27:09.160
I'm pretty sure it's a C sort of thing.


00:27:09.160 --> 00:27:10.900
But yeah, these are pretty good looking apps


00:27:10.900 --> 00:27:12.880
that you can like sort of page through


00:27:12.880 --> 00:27:16.240
all their screenshots on just wixwidgets.org.


00:27:18.280 --> 00:27:20.680
almost even like an auto trader looking thing


00:27:20.680 --> 00:27:22.200
and like a diff tool.


00:27:22.200 --> 00:27:26.000
File merge, yeah, Audacity.


00:27:26.000 --> 00:27:28.000
- Yeah, I believe one of the Linux diff tools


00:27:28.000 --> 00:27:29.720
is written with WX Python.


00:27:29.720 --> 00:27:33.040
And I had heard that the Dropbox UI


00:27:33.040 --> 00:27:35.360
was written with WX for a while.


00:27:35.360 --> 00:27:37.160
I don't know if it still is or not.


00:27:37.160 --> 00:27:37.980
- Yeah.


00:27:37.980 --> 00:27:40.080
Cool.


00:27:40.080 --> 00:27:46.080
So it seems like there's quite a rich library


00:27:46.080 --> 00:27:49.360
for working with these things with DevX Python or Wix Python.


00:27:49.360 --> 00:27:51.360
- Mm-hmm. Yeah. - Yeah.


00:27:51.360 --> 00:27:57.800
And I guess maybe one of the nice ways to explore this would be...


00:27:57.800 --> 00:28:01.040
Where am I going to go? I'm going to go over here a little bit.


00:28:01.040 --> 00:28:05.120
To talk about some of the things you covered in a recent book that you wrote.


00:28:05.120 --> 00:28:07.240
Not super recent, but somewhat recent.


00:28:07.240 --> 00:28:10.800
Creating GUI applications with Wix Python,


00:28:10.800 --> 00:28:12.880
which is pretty cool.


00:28:12.880 --> 00:28:15.760
And a comment from the livestream out there,


00:28:15.760 --> 00:28:18.880
Juergen says, "Congrats on the successful fundraiser


00:28:18.880 --> 00:28:21.520
for your latest book," which is not this book, but like--


00:28:21.520 --> 00:28:22.360
- No.


00:28:22.360 --> 00:28:24.840
- And what book is that that you're just working on now?


00:28:24.840 --> 00:28:29.000
- I'm working on one that talks about automating Excel


00:28:29.000 --> 00:28:31.600
with Python using OpenPyXL.


00:28:31.600 --> 00:28:33.020
- That's right, yeah.


00:28:33.020 --> 00:28:36.380
Well, that's certainly a hot topic indeed.


00:28:36.380 --> 00:28:42.120
But what's the story with this creating GUI apps


00:28:42.120 --> 00:28:44.240
with Wix Python in your book?


00:28:44.240 --> 00:28:48.120
It feels like from the extent that I got to read it,


00:28:48.120 --> 00:28:50.640
which is not all of it, but some of it,


00:28:50.640 --> 00:28:56.080
as a quick introduction of how to work with the widgets


00:28:56.080 --> 00:28:58.500
and stuff and get some stuff on the screen,


00:28:58.500 --> 00:29:00.760
understand the layout a little bit.


00:29:00.760 --> 00:29:01.920
And then it goes through and just build


00:29:01.920 --> 00:29:03.420
like a bunch of different apps,


00:29:03.420 --> 00:29:05.500
like a nice little image viewer,


00:29:05.500 --> 00:29:10.240
a database viewer tool that uses SQLAlchemy


00:29:10.240 --> 00:29:12.400
to like explore stuff there,


00:29:12.400 --> 00:29:16.360
a calculator, an archiver, mp3 tag editor,


00:29:16.360 --> 00:29:17.460
those types of things.


00:29:17.460 --> 00:29:20.760
You wanna maybe just tell us like kind of


00:29:20.760 --> 00:29:23.200
some of the key elements.


00:29:23.200 --> 00:29:25.420
Before we actually, before we get into those,


00:29:25.420 --> 00:29:28.080
let's just maybe, it's hard in code,


00:29:28.080 --> 00:29:29.940
but on audio to talk about code,


00:29:29.940 --> 00:29:33.480
but maybe just give us like a sense of what is it like


00:29:33.480 --> 00:29:35.940
to get a window and a button on the screen


00:29:35.940 --> 00:29:37.720
or something like that?


00:29:37.720 --> 00:29:38.560
- I'm sure.


00:29:38.560 --> 00:29:43.560
So, you know, Database Python, much like PyQt,


00:29:43.560 --> 00:29:45.520
they're all class-based.


00:29:45.520 --> 00:29:49.000
So you're going to be inheriting from different classes


00:29:49.000 --> 00:29:51.360
to create all the widgets online.


00:29:51.360 --> 00:29:53.680
Whereas with Tkinter, you don't have to do that.


00:29:53.680 --> 00:29:54.500
- I see.


00:29:54.500 --> 00:29:55.680
So you might make like a window class


00:29:55.680 --> 00:30:00.240
and like a layout main section class or something like that.


00:30:00.240 --> 00:30:01.680
- Kind of.


00:30:01.680 --> 00:30:04.440
Layouts usually aren't needed to be subclassed,


00:30:04.440 --> 00:30:09.240
but like you subclass a frame, which is the main window.


00:30:09.240 --> 00:30:14.240
You can subclass a panel, which is kind of like the tabs


00:30:14.240 --> 00:30:17.860
on your Firefox or Chromebook.


00:30:17.860 --> 00:30:21.300
You can create a notebook object that has multiple panels


00:30:21.300 --> 00:30:24.540
when each of those panels is a tab, basically.


00:30:24.540 --> 00:30:27.760
- I see, so it is like a multi-doc version


00:30:27.760 --> 00:30:29.740
or style that it'll support.


00:30:29.740 --> 00:30:30.620
- Correct.


00:30:30.620 --> 00:30:32.220
- Yeah, okay, cool.


00:30:32.220 --> 00:30:35.620
And then within your frame, you have your panel,


00:30:35.620 --> 00:30:37.420
and then within the panel, you have your widgets.


00:30:37.420 --> 00:30:39.020
And so those are your children widgets,


00:30:39.020 --> 00:30:42.900
like you have your buttons or your scroll bar


00:30:42.900 --> 00:30:45.860
or your check boxes or whatever.


00:30:45.860 --> 00:30:50.380
The code can get kind of unruly,


00:30:50.380 --> 00:30:52.740
but for just creating something really simple,


00:30:52.740 --> 00:30:57.060
you can do it in less than 100 lines of code most of the time.


00:30:57.060 --> 00:31:01.860
But once you start doing anything complex with Debian-X Python,


00:31:01.860 --> 00:31:04.680
you're going to start adding a lot of code.


00:31:04.680 --> 00:31:09.240
- Right, because if you're gonna have, say,


00:31:09.240 --> 00:31:11.320
three buttons and a text field,


00:31:11.320 --> 00:31:14.620
and you want to figure out how they lay out,


00:31:14.620 --> 00:31:16.600
there's a couple of things that you're gonna put


00:31:16.600 --> 00:31:18.040
just on the layout side,


00:31:18.040 --> 00:31:20.940
and then you're gonna have to hook potentially the events.


00:31:20.940 --> 00:31:25.060
- You can abstract that away a little bit,


00:31:25.060 --> 00:31:26.240
so it's not too bad.


00:31:26.240 --> 00:31:28.520
Like if all the buttons do something similar,


00:31:28.520 --> 00:31:30.900
then you can make that really short.


00:31:30.900 --> 00:31:33.420
But yeah, if all the buttons do something


00:31:33.420 --> 00:31:35.420
completely different, then you could,


00:31:35.420 --> 00:31:37.780
you know, you'd have a few different functions.


00:31:37.780 --> 00:31:41.900
I have written wrappers to make laying that stuff out


00:31:41.900 --> 00:31:44.860
simpler so I don't have to repeat the same boilerplate


00:31:44.860 --> 00:31:46.900
all the time. - Yeah, of course.


00:31:46.900 --> 00:31:48.980
Yeah, as soon as you're like, why is this so complicated?


00:31:48.980 --> 00:31:50.180
Why do I keep doing this?


00:31:50.180 --> 00:31:52.020
And maybe that's the time to think about,


00:31:52.020 --> 00:31:53.420
how do I do it just one more time


00:31:53.420 --> 00:31:56.660
with a little more polish and then never again?


00:31:56.660 --> 00:31:58.940
- Yeah. - Yeah.


00:31:58.940 --> 00:32:02.680
- So the widgets have events, right?


00:32:02.680 --> 00:32:07.680
Like on a Windows, it'd be like a WM key down,


00:32:07.680 --> 00:32:10.200
like when 32 event that is then translated


00:32:10.200 --> 00:32:14.160
to the Wix event, which then calls back into,


00:32:14.160 --> 00:32:15.240
say Python, right?


00:32:15.240 --> 00:32:19.180
And what you do is you give it just either a class level


00:32:19.180 --> 00:32:21.120
or just regular function, say,


00:32:21.120 --> 00:32:22.560
whenever somebody clicks this button,


00:32:22.560 --> 00:32:24.600
just call this function, right?


00:32:24.600 --> 00:32:27.600
- Yes, that's usually like for buttons,


00:32:27.600 --> 00:32:29.920
it's like WX.eventButton,


00:32:29.920 --> 00:32:31.960
and then you just bind it to a function.


00:32:31.960 --> 00:32:32.800
- Right.


00:32:32.800 --> 00:32:35.240
- Or you could bind it to the entire app,


00:32:35.240 --> 00:32:38.600
if you wanted to, so it captures the clicks.


00:32:38.600 --> 00:32:40.240
- Yeah, what I thought was interesting


00:32:40.240 --> 00:32:42.560
looking through the framework was,


00:32:42.560 --> 00:32:47.280
in many UI framework, like native,


00:32:47.280 --> 00:32:51.220
compiled, built-in frameworks, they don't,


00:32:51.220 --> 00:32:56.160
basically the button gets a click, or it doesn't.


00:32:56.160 --> 00:32:58.600
or somebody clicks the thing outside of it or it doesn't,


00:32:58.600 --> 00:33:00.140
but in the JavaScript,


00:33:00.140 --> 00:33:03.480
we have like bubbling events that go up and down.


00:33:03.480 --> 00:33:06.600
So if I click on a label, but the label doesn't handle it,


00:33:06.600 --> 00:33:11.260
but somewhere higher up, maybe it's in a div


00:33:11.260 --> 00:33:12.600
and the div is handling the event,


00:33:12.600 --> 00:33:13.820
like that would catch it, right?


00:33:13.820 --> 00:33:16.560
So you have this ability to say,


00:33:16.560 --> 00:33:19.360
go up until it's the right level to deal with this action.


00:33:19.360 --> 00:33:22.700
And it looks like WX Python has that as well.


00:33:22.700 --> 00:33:24.280
- Yes, it does.


00:33:24.280 --> 00:33:26.140
- Yeah, that was a little surprising


00:33:26.140 --> 00:33:30.060
that you can sort of bind the same event at different levels


00:33:30.060 --> 00:33:33.920
and then either capture it or let it keep flowing up.


00:33:33.920 --> 00:33:35.520
So they both get hit, I guess.


00:33:35.520 --> 00:33:38.380
- Yeah, you can do that and you can execute your event


00:33:38.380 --> 00:33:40.840
and then you can say, I think it's event.skip


00:33:40.840 --> 00:33:42.440
and it'll go to the next level.


00:33:42.440 --> 00:33:45.940
- Right, that's like, don't let me consume the event,


00:33:45.940 --> 00:33:49.220
let it keep going, bubble it up or something.


00:33:49.220 --> 00:33:50.060
- Yeah.


00:33:50.060 --> 00:33:52.680
- Yeah, really nice.


00:33:52.680 --> 00:33:54.480
So one thing that you talked about


00:33:54.480 --> 00:33:55.400
that I thought was interesting


00:33:55.400 --> 00:33:57.160
before we get into maybe a little more detail


00:33:57.160 --> 00:33:59.840
is you talked about, it's really nice to have


00:33:59.840 --> 00:34:05.280
a conception of what your app is going to look like,


00:34:05.280 --> 00:34:07.760
especially around layout, right?


00:34:07.760 --> 00:34:08.740
- Yes.


00:34:08.740 --> 00:34:11.440
- So you recommended, well, one is just like


00:34:11.440 --> 00:34:15.360
writing stuff out on paper, which is always good.


00:34:15.360 --> 00:34:19.080
But you also recommended using Balsamiq


00:34:19.080 --> 00:34:21.980
as something where you could potentially sketch out the UI.


00:34:21.980 --> 00:34:24.700
>> Yeah, I really like GrubBalsamic because it


00:34:24.700 --> 00:34:28.520
just makes laying stuff out a breeze.


00:34:28.520 --> 00:34:31.580
You could also use that Qt Designer


00:34:31.580 --> 00:34:32.780
because it's free and open source.


00:34:32.780 --> 00:34:35.820
You could use that to draw a layout too.


00:34:35.820 --> 00:34:38.980
>> Right. Even though your destination is not ultimately Qt.


00:34:38.980 --> 00:34:39.820
>> Correct.


00:34:39.820 --> 00:34:42.760
>> But it still lets you drag the widgets around, right?


00:34:42.760 --> 00:34:44.180
>> Yeah. So you could still get


00:34:44.180 --> 00:34:47.180
a good idea of what you want to look like using that.


00:34:47.180 --> 00:34:48.900
>> Yeah. I guess if you had


00:34:48.900 --> 00:34:51.300
a really old version of Visual Basic laying around.


00:34:51.300 --> 00:34:52.620
>> Yes, that also works.


00:34:52.620 --> 00:34:54.660
I thought about that.


00:34:54.660 --> 00:34:57.220
>> The VB6, I mean, that thing went out of support


00:34:57.220 --> 00:35:00.500
like in the '90s, but you might get it to run.


00:35:00.500 --> 00:35:02.540
But yeah, the Boltzaw Make 1, I really like this.


00:35:02.540 --> 00:35:05.660
I've used this for prototyping a couple of things.


00:35:05.660 --> 00:35:08.120
I think I used it a lot when I was building the Talk Python


00:35:08.120 --> 00:35:10.140
training platform and stuff like that.


00:35:10.140 --> 00:35:16.340
It's one of these wireframe type of tools


00:35:16.340 --> 00:35:20.740
that specifically is not meant to look native or finished.


00:35:20.740 --> 00:35:24.180
Right. It kind of looks as if you had drawn it by hand, like the web browser.


00:35:24.180 --> 00:35:29.220
It's, it's sort of wiggly lines as if you'd sketch that out.


00:35:29.220 --> 00:35:30.980
Right. I like this thing a lot.


00:35:30.980 --> 00:35:31.940
It's a good recommendation.


00:35:31.940 --> 00:35:33.500
Yeah, I really like it.


00:35:33.500 --> 00:35:36.980
It's not super expensive and it does a good job of sketching the


00:35:36.980 --> 00:35:38.300
ideas that you have in your head.


00:35:38.300 --> 00:35:40.500
Yeah, for sure.


00:35:40.500 --> 00:35:42.900
A couple of live stream comments.


00:35:42.900 --> 00:35:44.260
Just to get a quick shout out to you.


00:35:44.260 --> 00:35:45.540
Alexander says, interesting.


00:35:45.540 --> 00:35:49.020
It sounds like React in Python when we're talking about the event bubbling.


00:35:49.020 --> 00:35:49.260
Yeah.


00:35:49.260 --> 00:35:49.780
Very cool.


00:35:50.300 --> 00:35:53.860
And then David has equated you to Brian Okken.


00:35:53.860 --> 00:35:57.780
Mike is to Python GUIs as Brian Okken is to pytest, indeed.


00:35:57.780 --> 00:36:02.900
Yeah, so really cool.


00:36:02.900 --> 00:36:05.980
I guess one more general concept let's talk about a little bit


00:36:05.980 --> 00:36:08.820
before we maybe just touch on some of the lessons


00:36:08.820 --> 00:36:11.420
and whatnot from the various apps and the types of things


00:36:11.420 --> 00:36:13.380
that people could go play around with.


00:36:13.380 --> 00:36:15.860
And I'm guessing the source code for these apps


00:36:15.860 --> 00:36:17.340
is just on GitHub available.


00:36:17.340 --> 00:36:18.980
Even if people don't have the book,


00:36:18.980 --> 00:36:20.660
they could probably go dig it up.


00:36:20.660 --> 00:36:22.100
- Yes, it is.


00:36:22.100 --> 00:36:24.300
- Yeah, same for all my stuff.


00:36:24.300 --> 00:36:26.380
And the extra thing that I really wanna talk about


00:36:26.380 --> 00:36:27.500
is layout.


00:36:27.500 --> 00:36:31.620
So layout's interesting, right?


00:36:31.620 --> 00:36:36.000
You've got these different, what are they called, resizers?


00:36:36.000 --> 00:36:38.860
Resizers, not resizer, sizers.


00:36:38.860 --> 00:36:40.680
- Yes, resizers in WXPython.


00:36:40.680 --> 00:36:41.860
Just sizers, yes.


00:36:41.860 --> 00:36:46.180
- Yeah, so if you're gonna put like two buttons


00:36:46.180 --> 00:36:47.380
next to each other,


00:36:47.380 --> 00:36:50.300
and you just want them to take up 80% of the space combined


00:36:50.300 --> 00:36:53.220
and have a little bit of margin or something.


00:36:53.220 --> 00:36:55.180
If you just put them in a location,


00:36:55.180 --> 00:36:57.980
well, that might be true for their size at first,


00:36:57.980 --> 00:37:01.020
but if you move the window, obviously not so much.


00:37:01.020 --> 00:37:03.780
Right, you just stay there.


00:37:03.780 --> 00:37:06.020
They're not gonna move, they're not gonna change size.


00:37:06.020 --> 00:37:09.020
So talk about the different layout sizers


00:37:09.020 --> 00:37:10.900
and how you can combine them.


00:37:10.900 --> 00:37:15.740
How do you build like real composed UI worlds?


00:37:17.220 --> 00:37:18.980
You know, you could use absolute positioning.


00:37:18.980 --> 00:37:20.260
I don't recommend it,


00:37:20.260 --> 00:37:23.300
but if you made your frame unresizable,


00:37:23.300 --> 00:37:25.180
then you could totally do that.


00:37:25.180 --> 00:37:26.020
- Yeah.


00:37:26.020 --> 00:37:29.060
- But if you want to use sizers, I usually use box sizers.


00:37:29.060 --> 00:37:32.920
They support vertical or horizontal alignment.


00:37:32.920 --> 00:37:35.420
So if you set it, you know, for vertical,


00:37:35.420 --> 00:37:36.920
which I think is the default,


00:37:36.920 --> 00:37:39.620
it will add their widgets from left to right across,


00:37:39.620 --> 00:37:41.620
I mean, horizontal.


00:37:41.620 --> 00:37:43.380
Sorry, I'm getting myself all confused.


00:37:43.380 --> 00:37:44.780
All right, vertical is top to bottom,


00:37:44.780 --> 00:37:46.460
horizontal is left to right.


00:37:46.460 --> 00:37:50.540
So as you add them, the widgets will stack in that direction.


00:37:50.540 --> 00:37:53.220
And the nice thing is you can nest the sizers.


00:37:53.220 --> 00:37:56.020
So if I wanted to add columns, I could


00:37:56.020 --> 00:38:00.300
put three or four vertical sizers,


00:38:00.300 --> 00:38:05.300
box sizers inside of a regular horizontal sizer,


00:38:05.300 --> 00:38:08.540
or vice versa, to just create these kind of stacks


00:38:08.540 --> 00:38:10.100
of widgets on my UI.


00:38:10.100 --> 00:38:10.900
All right.


00:38:10.900 --> 00:38:11.940
So let's think about this.


00:38:11.940 --> 00:38:15.660
Imagine I want to build like a photo viewer thing.


00:38:15.660 --> 00:38:18.820
And I want on the left,


00:38:18.820 --> 00:38:23.660
I want a vertical list of all of the image names,


00:38:23.660 --> 00:38:25.740
you know, just the short image names,


00:38:25.740 --> 00:38:27.900
then maybe folders.


00:38:27.900 --> 00:38:29.660
And then I click the folder and then in the right,


00:38:29.660 --> 00:38:33.020
I get like a grid of photos.


00:38:33.020 --> 00:38:35.020
So overall, I've got the panel


00:38:35.020 --> 00:38:39.660
and then I would put a vertical sizer


00:38:39.660 --> 00:38:44.220
that has the two pieces, right?


00:38:44.220 --> 00:38:45.220
- Yes, probably.


00:38:45.220 --> 00:38:48.060
- The one on the left would be another vertical sizer


00:38:48.060 --> 00:38:51.380
that just takes a bunch of like little image name display


00:38:51.380 --> 00:38:54.740
and things, and then the right, maybe a horizontal one,


00:38:54.740 --> 00:38:56.300
or does it have to wrap?


00:38:56.300 --> 00:38:58.780
Would that wrap around,


00:38:58.780 --> 00:39:01.100
or would it just shoot off the screen to the right eventually


00:39:01.100 --> 00:39:03.340
or make them really small or something like that?


00:39:03.340 --> 00:39:07.900
- It should make them smaller if you make it too small,


00:39:07.900 --> 00:39:11.480
You can also set size hints in DebX Python that says,


00:39:11.480 --> 00:39:15.240
do not reduce this window beyond 400 by 400 pixels


00:39:15.240 --> 00:39:17.200
or whatever it is.


00:39:17.200 --> 00:39:19.160
- Like a scroll bar or something like that.


00:39:19.160 --> 00:39:21.320
- Yeah, you can tell.


00:39:21.320 --> 00:39:22.800
So that's actually a different widget.


00:39:22.800 --> 00:39:26.120
There's a scrollable panel that you could add


00:39:26.120 --> 00:39:29.000
and then the scroll bar will appear


00:39:29.000 --> 00:39:31.560
when you resize as appropriate.


00:39:31.560 --> 00:39:32.400
- Right, okay.


00:39:32.400 --> 00:39:36.080
- Another way you could do that is use a splitter window


00:39:36.080 --> 00:39:39.080
and then have some widgets on the right and some on the left.


00:39:39.080 --> 00:39:42.480
- Interesting.


00:39:42.480 --> 00:39:43.440
Okay.


00:39:43.440 --> 00:39:45.260
So you really have to probably think about


00:39:45.260 --> 00:39:47.000
how do you compose these things though?


00:39:47.000 --> 00:39:49.440
There's not like one super duper layout


00:39:49.440 --> 00:39:50.800
that's just gonna do all the stuff.


00:39:50.800 --> 00:39:54.600
You're like, here's a section, there's a section, right?


00:39:54.600 --> 00:39:57.840
- Yeah, I mean, there is a flex grid sizer and a grid sizer.


00:39:57.840 --> 00:39:59.760
So if you know your layout's gonna be kind of


00:39:59.760 --> 00:40:03.240
in a grid shape, you could use one of those grid sizers


00:40:03.240 --> 00:40:05.280
and lay them out that way.


00:40:05.280 --> 00:40:07.200
they're a little bit confusing to work with at first


00:40:07.200 --> 00:40:09.160
'cause you're trying to figure out,


00:40:09.160 --> 00:40:10.600
where does everything go?


00:40:10.600 --> 00:40:12.240
They work great for like a calculator


00:40:12.240 --> 00:40:13.800
because that's a grid.


00:40:13.800 --> 00:40:14.640
- Right, okay.


00:40:14.640 --> 00:40:16.480
And they're probably not changing.


00:40:16.480 --> 00:40:20.040
It's a fixed number of nine or whatever things


00:40:20.040 --> 00:40:21.040
are going in there.


00:40:21.040 --> 00:40:23.600
- And you could nest box sizes inside of the grids


00:40:23.600 --> 00:40:25.560
to give yourself more flexibility.


00:40:25.560 --> 00:40:29.800
- Make the return button bigger


00:40:29.800 --> 00:40:32.480
or something like that as it stretches.


00:40:32.480 --> 00:40:34.060
- I believe you can make each cell


00:40:34.060 --> 00:40:37.060
on a grid sizer stretched differently.


00:40:37.060 --> 00:40:39.660
So you don't actually need to do the nesting.


00:40:39.660 --> 00:40:42.060
I was thinking more like if you needed to like have


00:40:42.060 --> 00:40:45.860
stacks of widgets in a cell within the grid size sizer,


00:40:45.860 --> 00:40:48.760
then you might need to put a different sizer inside of it.


00:40:48.760 --> 00:40:51.140
- Yeah, okay, very neat.


00:40:51.140 --> 00:40:52.940
Quick feedback from the live stream.


00:40:52.940 --> 00:40:54.340
Matt Robin says, "In my last company,


00:40:54.340 --> 00:40:55.780
"we used a bunch of Wix Python.


00:40:55.780 --> 00:40:57.340
"Your book was an awesome resource."


00:40:57.340 --> 00:40:59.140
Super cool. - Oh, cool.


00:40:59.140 --> 00:41:00.820
Awesome. - Yeah.


00:41:00.820 --> 00:41:01.660
Yeah, very good.


00:41:01.660 --> 00:41:03.460
All right, now let's go on and talk about


00:41:03.460 --> 00:41:05.920
some of the apps in your book, because I think,


00:41:05.920 --> 00:41:07.740
you know, thinking about like,


00:41:07.740 --> 00:41:09.380
what are the kinds of apps I could build


00:41:09.380 --> 00:41:12.020
with this framework reasonably?


00:41:12.020 --> 00:41:15.100
And stuff that fits in a book usually has to fit


00:41:15.100 --> 00:41:16.260
that reasonable category.


00:41:16.260 --> 00:41:19.380
It's not like, well, we're gonna build Microsoft Word


00:41:19.380 --> 00:41:23.280
and like, you know, something that does a zillion things.


00:41:23.280 --> 00:41:28.280
So let's see, the first one that you had there was really,


00:41:28.280 --> 00:41:31.180
the first meaningful one was like an image viewer,


00:41:31.180 --> 00:41:34.500
which is a little bit like a simpler version


00:41:34.500 --> 00:41:36.560
of what I'd sort of just described, right?


00:41:36.560 --> 00:41:37.400
- Yes.


00:41:37.400 --> 00:41:40.060
Yeah, I chose the image viewer


00:41:40.060 --> 00:41:42.060
because I knew it wouldn't take a lot of code


00:41:42.060 --> 00:41:45.340
to create something that just shows you an image on screen.


00:41:45.340 --> 00:41:48.860
And because JPEGs Python uses Pillow underneath,


00:41:48.860 --> 00:41:53.860
it can support most image types natively,


00:41:53.860 --> 00:41:55.420
which is really handy.


00:41:55.420 --> 00:41:56.620
- Yeah, it supports, you know,


00:41:56.620 --> 00:42:00.100
the list is like seven or eight different formats,


00:42:00.100 --> 00:42:03.900
ping, JPEG, GIF, and on and on, right?


00:42:03.900 --> 00:42:07.440
- Which is something that Tkinter doesn't do.


00:42:07.440 --> 00:42:09.220
It only supports like two or three natively.


00:42:09.220 --> 00:42:10.060
And then you have to--


00:42:10.060 --> 00:42:11.060
- Give us a BMP and you're like,


00:42:11.060 --> 00:42:12.780
how do I get a BMP like in a tip?


00:42:12.780 --> 00:42:13.940
Like where did it?


00:42:13.940 --> 00:42:17.100
- Yeah, it gets very unhappy if you do that.


00:42:17.100 --> 00:42:18.940
- Yeah, yeah, yeah.


00:42:18.940 --> 00:42:19.780
So that's cool.


00:42:19.780 --> 00:42:22.740
And then it started out as just,


00:42:22.740 --> 00:42:25.300
you've got a button that says choose a file


00:42:25.300 --> 00:42:29.220
and then you show it on one of these image widgets,


00:42:29.220 --> 00:42:31.220
which is pretty straightforward.


00:42:31.220 --> 00:42:34.500
But I was still impressed that when you click the button,


00:42:34.500 --> 00:42:36.900
it's like a really clear way to open a dialogue


00:42:36.900 --> 00:42:38.460
that is the native dialogue.


00:42:38.460 --> 00:42:42.120
So in your case, you used your Mac file dialogue


00:42:42.120 --> 00:42:44.500
and it has like all the stuff you'd expect on the left.


00:42:44.500 --> 00:42:46.600
It's got like your favorites and your tags


00:42:46.600 --> 00:42:49.300
and whatever customizations you've done


00:42:49.300 --> 00:42:52.940
to your finder, whatever.


00:42:52.940 --> 00:42:56.740
- Yeah, because Python does their native widget.


00:42:56.740 --> 00:42:57.920
- Exactly.


00:42:57.920 --> 00:42:59.620
And it's always drove me crazy that like,


00:42:59.620 --> 00:43:01.700
"Oh, I know on the real OS,


00:43:01.700 --> 00:43:03.800
I can navigate to another folder this way,


00:43:03.800 --> 00:43:06.360
but now I'm just hitting the up arrow over and over again."


00:43:06.360 --> 00:43:09.120
And it's just those little things,


00:43:09.120 --> 00:43:14.000
it's nice to have it native.


00:43:14.000 --> 00:43:15.700
- Yes, I agree.


00:43:15.700 --> 00:43:17.160
I feel your pain, so.


00:43:17.160 --> 00:43:18.680
(both laughing)


00:43:18.680 --> 00:43:21.560
- Yeah, so to like, for example, open up file dialogue,


00:43:21.560 --> 00:43:24.320
you create a context manager and you just say with,


00:43:24.320 --> 00:43:26.480
I don't remember the exact command,


00:43:26.480 --> 00:43:31.100
but you give it basically the file description


00:43:31.100 --> 00:43:32.940
and then the file filter, and you say open,


00:43:32.940 --> 00:43:35.440
and you just check to see if they hit okay versus cancel,


00:43:35.440 --> 00:43:40.440
and then you work with it in the context.


00:43:40.440 --> 00:43:43.000
- All the DebX Python dialogues,


00:43:43.000 --> 00:43:45.120
and I think maybe even the frames


00:43:45.120 --> 00:43:47.680
support using them as a context manager


00:43:47.680 --> 00:43:49.200
to open and show them.


00:43:49.200 --> 00:43:50.880
- Yeah, it would make sense if you wanted to create


00:43:50.880 --> 00:43:53.360
some equivalent of a modal dialogue,


00:43:53.360 --> 00:43:54.920
but a custom one that you create,


00:43:54.920 --> 00:43:56.280
put that in a with block too, right?


00:43:56.280 --> 00:43:57.120
Would that work?


00:43:57.120 --> 00:44:02.320
- If you inherit from DbxDialog, I believe it will, yes.


00:44:02.320 --> 00:44:03.480
- Okay.


00:44:03.480 --> 00:44:04.960
Yeah, super neat.


00:44:04.960 --> 00:44:06.400
So I guess you probably have to learn


00:44:06.400 --> 00:44:09.120
your class hierarchy, it sounds.


00:44:09.120 --> 00:44:11.300
Like I gotta know, this one derives from frame,


00:44:11.300 --> 00:44:13.920
that one derives from dialog.


00:44:13.920 --> 00:44:17.260
- Unfortunately, there is a bit of a learning curve, yes,


00:44:17.260 --> 00:44:20.840
but once you've got the top level widgets figured out,


00:44:20.840 --> 00:44:22.840
which are frame, dialog, and window,


00:44:22.840 --> 00:44:24.440
and you almost never use window,


00:44:25.640 --> 00:44:27.200
It's not too bad.


00:44:27.200 --> 00:44:28.040
- Yeah.


00:44:28.040 --> 00:44:31.000
Yeah, very cool.


00:44:31.000 --> 00:44:32.280
All right, another one that you built


00:44:32.280 --> 00:44:35.200
was the database viewer,


00:44:35.200 --> 00:44:38.680
based on SQLAlchemy, ObjectListView, and so on.


00:44:38.680 --> 00:44:39.840
And tell us about that.


00:44:39.840 --> 00:44:44.120
- So I actually wrote this example a long time ago


00:44:44.120 --> 00:44:46.480
for my blog, and then I updated it for my book.


00:44:46.480 --> 00:44:48.940
I've always liked SQLAlchemy,


00:44:48.940 --> 00:44:53.560
and I realized that I could create a SQLAlchemy model class


00:44:53.560 --> 00:44:54.960
and use it with Databricks Python


00:44:54.960 --> 00:44:57.640
because they have a third party widget


00:44:57.640 --> 00:44:59.280
called the object list view


00:44:59.280 --> 00:45:02.120
that basically matches a model


00:45:02.120 --> 00:45:04.740
in SQLAlchemy almost exactly.


00:45:04.740 --> 00:45:06.400
So I can kind of combine the two classes


00:45:06.400 --> 00:45:09.080
and make them work together in a way.


00:45:09.080 --> 00:45:12.140
So that's kind of what I did.


00:45:12.140 --> 00:45:15.080
I just made it so they could open up a SQLite database


00:45:15.080 --> 00:45:15.920
in the book.


00:45:15.920 --> 00:45:18.360
- You basically see the tables


00:45:18.360 --> 00:45:19.920
and then click on them and get the records


00:45:19.920 --> 00:45:20.920
or something like that?


00:45:20.920 --> 00:45:22.800
- Yes, you can see the records.


00:45:22.800 --> 00:45:26.960
I think I made it so I can edit the records too.


00:45:26.960 --> 00:45:29.120
Or maybe that was just on my blog that I did that.


00:45:29.120 --> 00:45:30.380
- Yeah, what widget do you use


00:45:30.380 --> 00:45:34.000
that shows basically the Excel looking view?


00:45:34.000 --> 00:45:35.320
- That's object list view.


00:45:35.320 --> 00:45:38.280
Debugs Python has its own native widget


00:45:38.280 --> 00:45:41.040
called WRX list control.


00:45:41.040 --> 00:45:45.280
And object list view is kind of a wrapper of that widget


00:45:45.280 --> 00:45:48.100
that makes it a lot easier to work with, in my opinion.


00:45:48.100 --> 00:45:50.320
- Yeah.


00:45:50.320 --> 00:45:51.800
What about animations?


00:45:51.800 --> 00:45:53.860
I know that doesn't have anything to do with the app


00:45:53.860 --> 00:45:54.700
that we're talking about,


00:45:54.700 --> 00:45:59.700
but is there some sort of support for like changing,


00:45:59.700 --> 00:46:03.580
changing the screen,


00:46:03.580 --> 00:46:05.780
or if I'm gonna put something on the screen,


00:46:05.780 --> 00:46:11.460
like I wanna build a dashboard that is maybe looking


00:46:11.460 --> 00:46:13.020
at all the analytics on our system


00:46:13.020 --> 00:46:16.640
and it updates once a second, how easy is that to do?


00:46:16.640 --> 00:46:19.540
- So if you're talking like a graph.


00:46:20.460 --> 00:46:22.180
a graph or even if it just has numbers,


00:46:22.180 --> 00:46:25.420
like here's the current flow rate of such and such,


00:46:25.420 --> 00:46:27.220
or the number of users on the site


00:46:27.220 --> 00:46:31.960
versus like the minutes of video watched today,


00:46:31.960 --> 00:46:33.300
up to date by the second.


00:46:33.300 --> 00:46:35.540
- You have a couple, yeah, you have a couple.


00:46:35.540 --> 00:46:41.540
Debix widgets has a, I believe it's called a device context,


00:46:41.540 --> 00:46:45.100
debix.dc, it has a couple of different variants of that


00:46:45.100 --> 00:46:47.340
you can use to basically draw whatever you want.


00:46:47.340 --> 00:46:49.820
And it's the basis for creating a lot of the custom widgets


00:46:49.820 --> 00:46:52.940
that you'll see in the DAPEX Python demo.


00:46:52.940 --> 00:46:54.380
So you could use that to like draw


00:46:54.380 --> 00:46:56.580
any custom widgets you want.


00:46:56.580 --> 00:46:59.500
- I see, so you're just given like a rectangle


00:46:59.500 --> 00:47:03.740
or whatever and just go crazy with the draw commands on it.


00:47:03.740 --> 00:47:04.560
- Yes.


00:47:04.560 --> 00:47:08.860
The alternative is that DAPEX Python supports matplotlib


00:47:08.860 --> 00:47:10.700
and can embed it easily.


00:47:10.700 --> 00:47:13.020
And it also has its own pyplot library.


00:47:13.020 --> 00:47:16.460
So it can draw them without matplotlib itself.


00:47:16.460 --> 00:47:19.400
So both of those are also options.


00:47:19.400 --> 00:47:23.200
>> Yeah, very nice.


00:47:23.200 --> 00:47:31.840
What's the external super custom control world look like?


00:47:31.840 --> 00:47:33.980
So we've got the Wix widgets,


00:47:33.980 --> 00:47:37.040
but are there other third-party libraries that you get?


00:47:37.040 --> 00:47:41.860
Like, here's a really fancy editable grid type of thing,


00:47:41.860 --> 00:47:44.580
or autocomplete drop-downs,


00:47:44.580 --> 00:47:49.580
or is there an ecosystem around those types of things?


00:47:49.580 --> 00:47:52.380
I remember in Visual Basic and Windows forums,


00:47:52.380 --> 00:47:55.340
there was whole companies based around building


00:47:55.340 --> 00:47:56.880
those little extensions.


00:47:56.880 --> 00:48:00.240
- Well, I know the Object List View


00:48:00.240 --> 00:48:02.140
was a third-party one for a while,


00:48:02.140 --> 00:48:04.220
and it still is third-party,


00:48:04.220 --> 00:48:07.260
but I think the actual C++ version of it


00:48:07.260 --> 00:48:10.540
has outstripped the current wrapper for it,


00:48:10.540 --> 00:48:13.740
so the current wrapper doesn't follow it very well anymore.


00:48:13.740 --> 00:48:22.120
Besides that, there used to be a guy, Andrea Gavanna, I believe is his name.


00:48:22.120 --> 00:48:26.740
He created a ton of awesome custom widgets for DbxPython.


00:48:26.740 --> 00:48:30.020
And eventually they got wrapped into the Python framework itself.


00:48:30.020 --> 00:48:36.780
So now it's like import wx.agw and you have access to all of those custom widgets within


00:48:36.780 --> 00:48:39.060
DbxPython.


00:48:39.060 --> 00:48:45.380
But besides those, there's not a lot out there that I can think of that are like just custom


00:48:45.380 --> 00:48:46.860
ones you'd add on.


00:48:46.860 --> 00:48:47.860
Right.


00:48:47.860 --> 00:48:55.960
I was doing some quick searching for whether or not there's an awesome list, basically,


00:48:55.960 --> 00:48:56.960
for those types of things.


00:48:56.960 --> 00:48:59.140
I couldn't find it, but maybe people...


00:48:59.140 --> 00:49:02.580
Someone out there knows of one they can send it to us, and I'll put it in the show notes.


00:49:02.580 --> 00:49:03.580
Cool.


00:49:03.580 --> 00:49:04.580
Yeah.


00:49:04.580 --> 00:49:05.580
Cool.


00:49:05.580 --> 00:49:10.580
built was one that would look at basically zip files


00:49:10.580 --> 00:49:13.200
or tarball and pull those apart.


00:49:13.200 --> 00:49:16.400
And what are some of the cool takeaways from that?


00:49:16.400 --> 00:49:22.140
- Oh, for me, it was fun to dig into Python's native


00:49:22.140 --> 00:49:25.180
tar and libraries, which I haven't played with that much.


00:49:25.180 --> 00:49:28.740
And I was originally going to include the zip file,


00:49:28.740 --> 00:49:31.300
but zip files tended to be more buggy


00:49:31.300 --> 00:49:32.860
when I was playing with it.


00:49:32.860 --> 00:49:35.260
So I just stuck with tarballs to keep it simple.


00:49:35.260 --> 00:49:42.740
But my takeaway is that it works really well with Dubix Python.


00:49:42.740 --> 00:49:49.220
I try to show newer concepts like Pathlib in this book using in conjunction with the


00:49:49.220 --> 00:49:51.020
tar file library.


00:49:51.020 --> 00:49:54.260
Yeah, Pathlib is nice.


00:49:54.260 --> 00:49:55.260
Yeah.


00:49:55.260 --> 00:50:00.220
It's not entirely obvious when you first get to it that the division operator has been


00:50:00.220 --> 00:50:01.220
taken over.


00:50:01.220 --> 00:50:02.220
No, it's not.


00:50:02.220 --> 00:50:05.180
to combine elements, but at the same time,


00:50:05.180 --> 00:50:07.340
it is quite neat once you learn it.


00:50:07.340 --> 00:50:10.260
>> Yeah, the syntax always throws me when I see those examples.


00:50:10.260 --> 00:50:12.020
I'm like, "What? Oh, yeah."


00:50:12.020 --> 00:50:14.260
>> Right. That's how it works. Yeah.


00:50:14.260 --> 00:50:16.900
All same thing for date time and time deltas.


00:50:16.900 --> 00:50:23.060
>> Yes. Then you mix those with f-strings and you get a whole other world.


00:50:23.060 --> 00:50:26.640
>> Yeah, absolutely. All right.


00:50:26.640 --> 00:50:32.100
Another one that you discussed was creating an application for NASA's API.


00:50:32.100 --> 00:50:34.380
I don't know what NASA's API is, but that sounds fun.


00:50:34.380 --> 00:50:36.340
Tell us about that.


00:50:36.340 --> 00:50:38.660
So this one was actually recommended to me


00:50:38.660 --> 00:50:42.540
by the Kickstarter people that backed the book.


00:50:42.540 --> 00:50:44.980
They were like, so whenever I do a Kickstarter,


00:50:44.980 --> 00:50:48.500
I ask the backers, what ideas do you guys have?


00:50:48.500 --> 00:50:50.420
What do you think would be a good addition?


00:50:50.420 --> 00:50:54.940
And someone was like, well, NASA's API is basically


00:50:54.940 --> 00:50:55.580
open source.


00:50:55.580 --> 00:50:58.940
You can query it if you have a license API key.


00:50:58.940 --> 00:51:03.880
and you can make it show you basically any pictures


00:51:03.880 --> 00:51:06.180
that NASA has publicly available.


00:51:06.180 --> 00:51:10.020
So the NASA API will let you get photos of the moon,


00:51:10.020 --> 00:51:13.180
get photos of their launches, get photos of Mars,


00:51:13.180 --> 00:51:14.260
you know, whatever.


00:51:14.260 --> 00:51:16.260
- Nice.


00:51:16.260 --> 00:51:18.540
- They really wanted an example of how do you make


00:51:18.540 --> 00:51:21.020
Databricks Python hook up to a web API?


00:51:21.020 --> 00:51:23.620
So that's kind of what this chapter is about.


00:51:23.620 --> 00:51:27.180
- Yeah, that's a pretty cool example, right?


00:51:27.180 --> 00:51:30.020
a lot of fun stuff that you can check out there.


00:51:30.020 --> 00:51:32.140
>> Yeah. I think it was fun.


00:51:32.140 --> 00:51:34.720
>> So at api.nasa.gov,


00:51:34.720 --> 00:51:37.600
you can go over there and there's a bunch of stuff.


00:51:37.600 --> 00:51:40.320
Pad maps for the moons,


00:51:40.320 --> 00:51:43.960
two-line element data for earth orbiting,


00:51:43.960 --> 00:51:46.460
elements orbiting the earth,


00:51:46.460 --> 00:51:49.840
I guess, if you update it in real time.


00:51:49.840 --> 00:51:54.340
Nice. So what did you end up actually building?


00:51:54.340 --> 00:51:56.320
Like there's a bunch of APIs there.


00:51:56.320 --> 00:51:59.820
I think this one only like loads.


00:51:59.820 --> 00:52:02.220
It has a basically a list control widget,


00:52:02.220 --> 00:52:05.400
which I use to display the search results


00:52:05.400 --> 00:52:08.120
when you query the NASA search.


00:52:08.120 --> 00:52:12.500
And then when you click on them, it will load the image.


00:52:12.500 --> 00:52:14.240
So, you know, if I looked up like


00:52:14.240 --> 00:52:18.540
Challenger space flight or Apollo or whatever,


00:52:18.540 --> 00:52:22.120
it'll show all the public NASA images in that list box


00:52:22.120 --> 00:52:23.500
and you can click on them


00:52:23.500 --> 00:52:24.940
and it will load the picture for you.


00:52:24.940 --> 00:52:26.340
so you can view the picture.


00:52:26.340 --> 00:52:29.460
There's a ton of room for improvement,


00:52:29.460 --> 00:52:31.180
like how to download the picture,


00:52:31.180 --> 00:52:35.500
which I believe I covered how to download it with the GUI.


00:52:35.500 --> 00:52:40.500
But you could also add a tag editor


00:52:40.500 --> 00:52:44.260
so you could view the metadata in the images.


00:52:44.260 --> 00:52:45.860
- Right, and then you could browse it by,


00:52:45.860 --> 00:52:47.660
show me all the pictures of the shuttle


00:52:47.660 --> 00:52:51.260
or things from this mission or something like that.


00:52:51.260 --> 00:52:52.660
- Or from this date.


00:52:52.660 --> 00:52:53.500
- Yeah.


00:52:54.420 --> 00:52:56.580
- Cool, that seems like a really fun thing to play with


00:52:56.580 --> 00:52:59.860
and just people who are looking to have a fun API


00:52:59.860 --> 00:53:01.980
out there in the world to choose.


00:53:01.980 --> 00:53:03.700
That seems like a neat one.


00:53:03.700 --> 00:53:05.060
- Yeah, it was really neat.


00:53:05.060 --> 00:53:07.660
- Yeah, super cool.


00:53:07.660 --> 00:53:09.840
So I guess, you know, there's a bunch of other stuff


00:53:09.840 --> 00:53:11.700
that we could talk about that you wrote about,


00:53:11.700 --> 00:53:14.400
but I think one maybe final thing,


00:53:14.400 --> 00:53:19.460
one of the challenges that's not immediately obvious


00:53:19.460 --> 00:53:24.340
with Python is how do I take my Python code


00:53:24.340 --> 00:53:27.020
and give it to somebody so they can put it in their doc


00:53:27.020 --> 00:53:29.840
or their task bar as a picture and click it


00:53:29.840 --> 00:53:33.420
and see it without them, without discussing,


00:53:33.420 --> 00:53:34.880
here's how you create a virtual environment,


00:53:34.880 --> 00:53:36.440
here's how you have the right version of Python,


00:53:36.440 --> 00:53:38.060
here's how you pip install the requirements.


00:53:38.060 --> 00:53:41.380
Like, how do you distribute this as like what


00:53:41.380 --> 00:53:43.980
your normal people would perceive as an application?


00:53:43.980 --> 00:53:50.820
- Well, fortunately, the major Python GUI builder,


00:53:50.820 --> 00:53:53.460
executable builders support DebX Python.


00:53:53.460 --> 00:53:57.860
So in the book, I use PyInstaller as an example,


00:53:57.860 --> 00:54:01.660
'cause it can package up WXPython pretty easily.


00:54:01.660 --> 00:54:02.500
- Okay.


00:54:02.500 --> 00:54:05.780
- It'll basically, you have to give it


00:54:05.780 --> 00:54:08.140
a special command line argument


00:54:08.140 --> 00:54:10.820
to tell it that it's a windowed application


00:54:10.820 --> 00:54:12.940
versus a terminal application.


00:54:12.940 --> 00:54:14.800
- Right, I think maybe the default


00:54:14.800 --> 00:54:16.580
is to also have a terminal window.


00:54:16.580 --> 00:54:20.260
It would distribute it, but you have an odd terminal window


00:54:20.260 --> 00:54:21.700
just to the side of your app.


00:54:21.700 --> 00:54:24.060
- Yeah, so if you have like any debug in your application,


00:54:24.060 --> 00:54:25.340
it'd show up in the terminal window,


00:54:25.340 --> 00:54:27.540
which, you know, might not be ideal.


00:54:27.540 --> 00:54:28.740
- Yeah, no, for sure.


00:54:28.740 --> 00:54:31.100
- So I cover that in the book.


00:54:31.100 --> 00:54:34.740
The nice thing about PyInstaller is it also works


00:54:34.740 --> 00:54:39.700
for creating executables on Mac and Windows.


00:54:39.700 --> 00:54:41.340
Not all of them do that.


00:54:41.340 --> 00:54:44.300
I have used Py2XE pretty extensively over the years


00:54:44.300 --> 00:54:47.540
and it works great for Windows, but you know, again,


00:54:47.540 --> 00:54:49.940
it's not gonna work for anything else.


00:54:49.940 --> 00:54:50.780
- Right.


00:54:50.780 --> 00:54:55.460
So you found PyInstaller was pretty reliable across the platforms?


00:54:55.460 --> 00:54:58.060
Yeah, it works really well.


00:54:58.060 --> 00:55:04.660
The only problem I have is that I think if you do the all in one file, Windows Defender


00:55:04.660 --> 00:55:09.580
will mark it as malicious and delete it.


00:55:09.580 --> 00:55:11.100
Oh, that's not good.


00:55:11.100 --> 00:55:15.700
And I think it does that for, you know, whether it's a DebX Python file or not.


00:55:15.700 --> 00:55:21.060
Anytime you create the one file executable with PyInstaller, it's like, "Oh, that's a


00:55:21.060 --> 00:55:22.060
bad file.


00:55:22.060 --> 00:55:25.060
I'm going to delete it for you."


00:55:25.060 --> 00:55:26.060
Not ideal.


00:55:26.060 --> 00:55:27.060
No.


00:55:27.060 --> 00:55:32.460
Someone must have used it to try to package up a virus or something at one point, and


00:55:32.460 --> 00:55:35.140
then it got fingerprinted and that was that.


00:55:35.140 --> 00:55:39.700
Yeah, I think you can self-sign the file or something to get around that, but I didn't


00:55:39.700 --> 00:55:40.700
go into that in the book.


00:55:40.700 --> 00:55:45.140
Yeah, I think you got to register as a developer with Microsoft to get a signing certificate


00:55:45.140 --> 00:55:49.940
or something. I don't think I've ever done that. So, but there are like when you say


00:55:49.940 --> 00:55:53.700
you try to run it, you know, same thing on Mac. It could either sometimes it'll completely


00:55:53.700 --> 00:55:58.300
block it. Sometimes it'll say that came from the internet, but we kind of recognize that


00:55:58.300 --> 00:56:05.300
person or I guess if you super duper sign it, it'll just run. Yes. Yeah. And depending


00:56:05.300 --> 00:56:12.100
on, on the platform. So another thing, you know, one thing that I did is I created this


00:56:12.100 --> 00:56:15.540
this little app that runs in the Mac menu bar.


00:56:15.540 --> 00:56:17.540
And I created that with py2app.


00:56:17.540 --> 00:56:22.140
And then it just gives people a .app file,


00:56:22.140 --> 00:56:23.820
well, it's zipped up, but then you unzip it,


00:56:23.820 --> 00:56:25.420
it's a .app file.


00:56:25.420 --> 00:56:26.500
And then you can just run it.


00:56:26.500 --> 00:56:29.620
And that's worked well, but like py2exe,


00:56:29.620 --> 00:56:32.500
py2app is a Mac only thing.


00:56:32.500 --> 00:56:35.260
Like one platform.


00:56:35.260 --> 00:56:37.740
- I know py2app also works with WXPython


00:56:37.740 --> 00:56:40.380
from my experience, so.


00:56:40.380 --> 00:56:41.220
- Yeah.


00:56:41.220 --> 00:56:48.500
Cool. So these are these sort of packaging utilities. They work pretty well for the different


00:56:48.500 --> 00:56:52.980
platforms. If you're using DevEx Python. Sounds like.


00:56:52.980 --> 00:56:57.820
Yes. Yep. I haven't had any problems with them. You can get squirrelly things with other


00:56:57.820 --> 00:57:00.900
packages but not usually with WX.


00:57:00.900 --> 00:57:09.300
Yeah, very cool. All right, Mike. Well, I think about is all the time we have to talk


00:57:09.300 --> 00:57:14.300
about GUIs and stuff, at least DevEx Python.


00:57:14.300 --> 00:57:16.740
But I mean, give us your verdict.


00:57:16.740 --> 00:57:18.460
Is there something you enjoy working with,


00:57:18.460 --> 00:57:20.860
building apps that people are liking with it?


00:57:20.860 --> 00:57:24.820
- Well, I don't know about other people,


00:57:24.820 --> 00:57:27.900
but I still use it whenever I can for work.


00:57:27.900 --> 00:57:32.900
I'll create simple apps to demo whatever I need to demo


00:57:32.900 --> 00:57:35.980
to my employer or my PM.


00:57:35.980 --> 00:57:38.380
So, I mean, you can still throw together


00:57:38.380 --> 00:57:41.460
a really simple app with WXPython and only 100 lines


00:57:41.460 --> 00:57:44.660
or a couple hundred lines and still show off something


00:57:44.660 --> 00:57:46.780
that looks awesome across platforms.


00:57:46.780 --> 00:57:49.340
- Yeah, yeah, very cool.


00:57:49.340 --> 00:57:51.340
Yeah, again, I know I keep going on and on,


00:57:51.340 --> 00:57:53.480
but the native bits just make me happy.


00:57:53.480 --> 00:57:57.860
A quick couple of questions from the live stream.


00:57:57.860 --> 00:58:01.960
One is, it doesn't want to show up, there you go.


00:58:01.960 --> 00:58:05.520
If I purchased the book, WXPython Recipes,


00:58:05.520 --> 00:58:07.580
is it still relevant or outdated?


00:58:07.580 --> 00:58:09.140
I'm not familiar with this book, yeah?


00:58:09.140 --> 00:58:10.040
Is this yours?


00:58:10.040 --> 00:58:16.640
- I have a DbxPython cookbook from A-Press.


00:58:16.640 --> 00:58:18.500
I believe the examples in it still work,


00:58:18.500 --> 00:58:20.500
but they're kind of like all over the place.


00:58:20.500 --> 00:58:22.500
I tried to group them intelligently,


00:58:22.500 --> 00:58:25.300
but I mean, they're helpful,


00:58:25.300 --> 00:58:28.460
but they're not going to like help you.


00:58:28.460 --> 00:58:29.900
I don't know how to describe it,


00:58:29.900 --> 00:58:32.660
but they're more like, these are very specific things.


00:58:32.660 --> 00:58:35.420
So read the table of contents before you buy that one.


00:58:35.420 --> 00:58:37.480
If he's talking about Cody Precord's book,


00:58:37.480 --> 00:58:40.260
which is DbX Python recipes from Pact Publishing.


00:58:40.260 --> 00:58:44.060
I haven't read it in a while, so I don't remember.


00:58:44.060 --> 00:58:46.860
- Yeah, and I have no experience with it,


00:58:46.860 --> 00:58:48.540
but check out this one.


00:58:48.540 --> 00:58:51.820
This has got at least 10 good little apps in it.


00:58:51.820 --> 00:58:52.720
- For sure. - Yeah.


00:58:52.720 --> 00:58:58.060
- Okay, so I guess with that,


00:58:58.060 --> 00:59:00.260
I'll ask you the final two questions


00:59:00.260 --> 00:59:01.340
that I always ask everyone.


00:59:01.340 --> 00:59:02.580
If you're gonna write some Python code,


00:59:02.580 --> 00:59:04.460
what editor are you using these days?


00:59:05.540 --> 00:59:08.940
I'm still a big fan of wing IDE from wingware.


00:59:08.940 --> 00:59:15.100
- Cool, so I hear a lot of people


00:59:15.100 --> 00:59:18.320
on the VS Code wagon these days, like why wing?


00:59:18.320 --> 00:59:24.640
- For me, I still like that it has a source,


00:59:24.640 --> 00:59:27.580
what do you call it, a source assistant,


00:59:27.580 --> 00:59:29.360
which basically shows you the doc strings


00:59:29.360 --> 00:59:32.840
and links to the documentation live at all times


00:59:32.840 --> 00:59:35.900
for whatever line of code you're on.


00:59:35.900 --> 00:59:37.580
So, you know, if you have imported something,


00:59:37.580 --> 00:59:38.720
it'll show you all that stuff


00:59:38.720 --> 00:59:42.580
and basically help you learn new modules as you work.


00:59:42.580 --> 00:59:44.720
The other thing I really like is the debugger.


00:59:44.720 --> 00:59:46.420
The debugger on it is really good.


00:59:46.420 --> 00:59:49.040
- Yeah, fantastic.


00:59:49.040 --> 00:59:51.800
Okay, and then notable PyPI package.


00:59:51.800 --> 00:59:54.120
I mean, there's always WXPython,


00:59:54.120 --> 00:59:55.180
if you want to throw that one out there,


00:59:55.180 --> 00:59:58.160
but if you got another one in mind, what do you-


00:59:58.160 --> 01:00:01.360
- For me, it'd probably be OpenPyXL


01:00:01.360 --> 01:00:02.820
because I've been working with it a lot


01:00:02.820 --> 01:00:03.660
in the last couple of months.


01:00:03.660 --> 01:00:04.480
- Yeah.


01:00:04.480 --> 01:00:09.900
Open PyXL basically lets you read and write Excel files,


01:00:09.900 --> 01:00:11.020
the newer format, right?


01:00:11.020 --> 01:00:13.940
The Excel SX version? - Correct.


01:00:13.940 --> 01:00:15.040
Yes, it does.


01:00:15.040 --> 01:00:16.940
- And you can do formulas and formatting


01:00:16.940 --> 01:00:18.540
and everything, is that right?


01:00:18.540 --> 01:00:21.020
- My formulas are kind of iffy,


01:00:21.020 --> 01:00:23.020
but the rest of it is, it does do.


01:00:23.020 --> 01:00:25.920
- Nice.


01:00:25.920 --> 01:00:26.760
Very cool.


01:00:26.760 --> 01:00:27.940
So, so many people, I'm sure,


01:00:27.940 --> 01:00:30.260
receive Excel files all of the time,


01:00:30.260 --> 01:00:33.880
and they want to like process it with code


01:00:33.880 --> 01:00:36.900
rather than with a mouse and keyboard.


01:00:36.900 --> 01:00:37.840
So very nice. - Yes.


01:00:37.840 --> 01:00:41.700
- Awesome, awesome.


01:00:41.700 --> 01:00:44.400
All right, well, final call to action.


01:00:44.400 --> 01:00:47.040
People wanna get started with WXPython, what do they do?


01:00:47.040 --> 01:00:49.560
- I think you can check out my book


01:00:49.560 --> 01:00:51.560
or you can just go to wxpython.org


01:00:51.560 --> 01:00:54.080
and get everything you need right there.


01:00:54.080 --> 01:00:57.520
- And I'll put a link to that in the show notes.


01:00:57.520 --> 01:01:01.800
So thanks everyone for listening and Mike,


01:01:01.800 --> 01:01:04.800
thanks for all you're doing around the GUI stuff.


01:01:04.800 --> 01:01:06.760
- Oh, thank you so much for having me.


01:01:06.760 --> 01:01:08.000
- You bet, bye.


01:01:08.000 --> 01:01:08.840
- Bye.


01:01:08.840 --> 01:01:11.400
- Thanks everyone in the live stream.


01:01:11.400 --> 01:01:12.400
Catch you next time.


01:01:12.400 --> 01:01:22.400
[BLANK_AUDIO]

