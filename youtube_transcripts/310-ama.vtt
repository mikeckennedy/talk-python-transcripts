WEBVTT

00:00:00.000 --> 00:00:08.240
>> Hello, everyone out there in the live stream. Thank you for being here. We're just about


00:00:08.240 --> 00:00:13.320
to kick off the show. Please put your questions and comments in the live chat. And if we can,


00:00:13.320 --> 00:00:18.240
we'll make that part of the Ask Me Anything. That's probably the best way to do it. Kim


00:00:18.240 --> 00:00:22.280
and Patrick, you guys ready to kick this off? >> Yeah, sure.


00:00:22.280 --> 00:00:27.840
>> Right on. Kim and Patrick, welcome to Talk Python to Me.


00:00:27.840 --> 00:00:30.440
- Good, thanks for having us.


00:00:30.440 --> 00:00:33.640
- Yeah, should I say thank you for having me?


00:00:33.640 --> 00:00:34.600
It's different, right?


00:00:34.600 --> 00:00:36.160
This is a bit of a unique one.


00:00:36.160 --> 00:00:38.040
So thank you both for being here.


00:00:38.040 --> 00:00:41.240
I've selected you to represent the audience


00:00:41.240 --> 00:00:42.960
in this Ask Me Anything episode,


00:00:42.960 --> 00:00:44.000
which should be a lot of fun.


00:00:44.000 --> 00:00:46.560
So yeah, it's great to have you both here


00:00:46.560 --> 00:00:47.860
and helping out with that.


00:00:47.860 --> 00:00:51.280
- Yeah, good, looking forward to it.


00:00:51.280 --> 00:00:52.120
Should be good fun.


00:00:52.120 --> 00:00:53.160
- Definitely.


00:00:53.160 --> 00:00:54.200
- Yeah, I agree.


00:00:54.200 --> 00:00:57.060
So you were sort of guests on the show


00:00:57.060 --> 00:00:58.860
until you turn the tables, I suppose.


00:00:58.860 --> 00:01:00.320
So let's give you a quick introduction,


00:01:00.320 --> 00:01:02.480
just a little bit of background about yourself.


00:01:02.480 --> 00:01:03.980
Kim, I'll let you go first.


00:01:03.980 --> 00:01:06.460
How'd you get into programming


00:01:06.460 --> 00:01:09.460
and how'd you get over here onto this show


00:01:09.460 --> 00:01:10.300
to interview me?


00:01:10.300 --> 00:01:12.500
- Sure, in terms of programming,


00:01:12.500 --> 00:01:15.880
I've been, or I'm a electronic engineer by training


00:01:15.880 --> 00:01:17.660
and I did electronic engineering type work


00:01:17.660 --> 00:01:19.800
for 13, 14 years or so.


00:01:19.800 --> 00:01:23.880
Mainly producing television satellite decoders


00:01:23.880 --> 00:01:26.820
at a facility based in Durban in South Africa.


00:01:26.820 --> 00:01:29.080
So we made satellite decoders


00:01:29.080 --> 00:01:30.500
and I did all sorts of areas on that


00:01:30.500 --> 00:01:32.880
with C and low level embedded programming and so forth,


00:01:32.880 --> 00:01:35.380
but slowly moved my way into PC programming.


00:01:35.380 --> 00:01:36.460
And for the last couple of years,


00:01:36.460 --> 00:01:38.300
I've actually been full-time software development


00:01:38.300 --> 00:01:40.660
using Python mainly for DevOps work.


00:01:40.660 --> 00:01:43.980
Although DevOps means different things to different people.


00:01:43.980 --> 00:01:48.980
In my case, it's process automation and what's the word?


00:01:48.980 --> 00:01:51.300
Industrial is not the word I'm looking for,


00:01:51.300 --> 00:01:53.540
but process automation and infrastructure as code


00:01:53.540 --> 00:01:54.380
is the word I'm looking for.


00:01:54.380 --> 00:01:56.120
That's the kind of thing we do.


00:01:56.120 --> 00:01:59.720
So I've been probably writing Python since university days,


00:01:59.720 --> 00:02:02.520
which was not terribly far off 20 years ago.


00:02:02.520 --> 00:02:04.600
So I've been using it for quite a while.


00:02:04.600 --> 00:02:06.240
- Yeah, those are pretty early days of Python.


00:02:06.240 --> 00:02:08.760
You know, that's at least two thirds of its life, right?


00:02:08.760 --> 00:02:11.040
- It was 2.3, 2.4, something like that.


00:02:11.040 --> 00:02:11.920
Yeah.


00:02:11.920 --> 00:02:12.960
- Yeah, absolutely.


00:02:12.960 --> 00:02:13.920
Well, that sounds really fun.


00:02:13.920 --> 00:02:16.040
And were you happy to be moving away


00:02:16.040 --> 00:02:17.920
from more low level stuff or do you miss it?


00:02:17.920 --> 00:02:20.600
- Yeah, I don't miss it a great deal.


00:02:20.600 --> 00:02:21.840
I don't miss writing C.


00:02:21.840 --> 00:02:25.240
But I enjoyed it when I did it, but I don't miss,


00:02:25.240 --> 00:02:26.520
I don't know if I'd go back to it now,


00:02:26.520 --> 00:02:29.080
but yeah, I thoroughly enjoy the kind of thing I do now.


00:02:29.080 --> 00:02:30.700
- Yeah, I feel the same way.


00:02:30.700 --> 00:02:32.460
I did a bunch of C programming at the beginning


00:02:32.460 --> 00:02:34.260
and I'm really glad I had that experience.


00:02:34.260 --> 00:02:36.000
I'm also really glad I don't have to continue


00:02:36.000 --> 00:02:36.840
having that experience.


00:02:36.840 --> 00:02:37.680
- Exactly.


00:02:37.680 --> 00:02:40.620
- Awesome.


00:02:40.620 --> 00:02:43.020
All right, Patrick, how about yourself?


00:02:43.020 --> 00:02:46.060
- So I don't have the experience that you two guys have,


00:02:46.060 --> 00:02:51.060
but so my first, I think my first course in programming


00:02:51.060 --> 00:02:53.760
was during my physics studies


00:02:53.760 --> 00:02:57.020
where I had a C++ course, just basic introduction.


00:02:57.020 --> 00:03:01.060
And I didn't really, I liked the idea of programming,


00:03:01.060 --> 00:03:03.100
but I didn't like the language that much.


00:03:03.100 --> 00:03:09.440
And during my PhD, I was mostly working with Mathematica,


00:03:09.440 --> 00:03:15.460
also some C++ and old Fortran code for simulations.


00:03:15.460 --> 00:03:20.820
But after my PhD, I started as a traffic planning,


00:03:20.820 --> 00:03:23.700
in a traffic planning company as a transport modeler


00:03:23.700 --> 00:03:26.220
and data analyst.


00:03:26.220 --> 00:03:28.500
- Modeling traffic and stuff like traffic lights


00:03:28.500 --> 00:03:29.340
and traffic traffic.


00:03:29.340 --> 00:03:30.180
- Yes, traffic.


00:03:30.180 --> 00:03:31.140
- Okay.


00:03:31.140 --> 00:03:34.020
- Traffic modeling for cities and areas


00:03:34.020 --> 00:03:34.860
and stuff like that.


00:03:34.860 --> 00:03:37.300
- Keep the A4, A6, is that,


00:03:37.300 --> 00:03:40.540
what are the Autobahn names there from clogging up?


00:03:40.540 --> 00:03:42.500
- Yeah, yeah, yeah.


00:03:42.500 --> 00:03:44.980
That was also a big part, yes.


00:03:44.980 --> 00:03:46.420
Modeling that stuff.


00:03:46.420 --> 00:03:47.340
That's the most interesting


00:03:47.340 --> 00:03:51.740
for some of the economic companies there is.


00:03:51.740 --> 00:03:55.620
So yeah, I think my first task there was like converting


00:03:55.620 --> 00:03:59.900
some old VBA code to Python that transferred structural data


00:03:59.900 --> 00:04:02.260
from an Excel database to another program,


00:04:02.260 --> 00:04:03.720
which was horrible.


00:04:03.720 --> 00:04:05.740
Yeah, it was absolutely horrible.


00:04:05.740 --> 00:04:09.500
And I immediately realized that I hated VBA and loved Python


00:04:09.500 --> 00:04:13.380
and that's where I stuck.


00:04:13.380 --> 00:04:16.540
And later I joined Germany's biggest drugstore company


00:04:16.540 --> 00:04:19.840
and I'm now there a data engineer for tracking data,


00:04:19.840 --> 00:04:21.940
mostly working with Python


00:04:21.940 --> 00:04:25.360
and the Hadoop PySpark ecosystem there.


00:04:25.360 --> 00:04:26.760
- I see you live pretty solidly


00:04:26.760 --> 00:04:31.500
on the big data, data science side of Python.


00:04:31.500 --> 00:04:34.340
- Yeah, I'm more into data science,


00:04:34.340 --> 00:04:35.960
data engineering, more data engineering.


00:04:35.960 --> 00:04:39.660
So it's really a lot of software engineering.


00:04:39.660 --> 00:04:40.500
- Right. - Yeah.


00:04:40.500 --> 00:04:43.780
- You know, I recently had Tobias Macy on the show.


00:04:43.780 --> 00:04:46.780
We talked about the whole data engineering landscape.


00:04:46.780 --> 00:04:47.740
And it's really interesting.


00:04:47.740 --> 00:04:50.200
Like I kind of lost track of paying attention


00:04:50.200 --> 00:04:51.860
to the data pipeline stuff.


00:04:51.860 --> 00:04:52.940
And there's a lot of neat tools


00:04:52.940 --> 00:04:55.340
that are coming out in that area.


00:04:55.340 --> 00:04:57.140
- Yeah, there is actually,


00:04:57.140 --> 00:04:58.940
but it's always hard to migrate


00:04:58.940 --> 00:05:01.100
from an existing infrastructure to something new,


00:05:01.100 --> 00:05:02.020
but you always have to.


00:05:02.020 --> 00:05:04.360
So it's a steady flow of new stuff that's coming in


00:05:04.360 --> 00:05:05.660
where you have to adapt.


00:05:05.660 --> 00:05:06.500
Yeah.


00:05:06.500 --> 00:05:07.600
- Yeah, yeah, absolutely.


00:05:07.600 --> 00:05:09.500
All right, cool.


00:05:09.500 --> 00:05:11.020
Well, thank you both for being here.


00:05:11.020 --> 00:05:14.220
Let me just give a quick summary of this


00:05:14.220 --> 00:05:18.260
Ask Me Anything episode for people watching and listening.


00:05:18.260 --> 00:05:21.480
So people ask me questions all the time.


00:05:21.480 --> 00:05:23.380
They'll shoot me a message over email and say,


00:05:23.380 --> 00:05:24.800
"Hey, here's this thing you should check out,"


00:05:24.800 --> 00:05:26.320
or, "This is interesting, I got a quick question."


00:05:26.320 --> 00:05:29.500
"Oh, by the way, here's a question about the podcast


00:05:29.500 --> 00:05:31.480
in this way or that."


00:05:31.480 --> 00:05:34.580
Those have obviously been building up over time.


00:05:34.580 --> 00:05:38.240
So I thought it might be fun to just let you guys come on


00:05:38.240 --> 00:05:40.340
and basically ask those questions


00:05:40.340 --> 00:05:45.280
and you two get to be the audience for everyone out there.


00:05:45.280 --> 00:05:49.040
And so we collected some questions previously.


00:05:49.040 --> 00:05:51.340
I tweeted this out and maybe mentioned


00:05:51.340 --> 00:05:52.900
on one of the podcasts,


00:05:52.900 --> 00:05:56.200
let people fill out a form and ask their question,


00:05:56.200 --> 00:05:57.720
which is actually how you two got here, right?


00:05:57.720 --> 00:05:59.860
'Cause you both need to ask a question


00:05:59.860 --> 00:06:01.120
and there was a checkbox,


00:06:01.120 --> 00:06:04.360
would you like to be the interviewer of this whole thing?


00:06:04.360 --> 00:06:06.400
And so that's great.


00:06:06.400 --> 00:06:08.000
And so what we're gonna do is we're gonna start


00:06:08.000 --> 00:06:09.980
with some of those questions we collected previously,


00:06:09.980 --> 00:06:14.860
but then I could see people like Hong and Daniel and Sam


00:06:14.860 --> 00:06:17.340
all in the audience and other people coming.


00:06:17.340 --> 00:06:19.300
Maybe there's gonna be some questions from the live stream


00:06:19.300 --> 00:06:20.620
that we do on YouTube as well.


00:06:20.620 --> 00:06:23.940
So, Patrick, I guess we can kick this off


00:06:23.940 --> 00:06:27.260
and what's the first question?


00:06:27.260 --> 00:06:31.880
- So the first question is by Martin Boros.


00:06:31.880 --> 00:06:36.020
So a little bit of background.


00:06:36.020 --> 00:06:37.580
So he's listening from Germany.


00:06:37.580 --> 00:06:38.700
- Yeah, sorry, let me also add,


00:06:38.700 --> 00:06:40.460
everyone put a little tiny bit of background


00:06:40.460 --> 00:06:41.380
about themselves.


00:06:41.380 --> 00:06:43.860
And so just to kind of make them more part of the show


00:06:43.860 --> 00:06:46.020
as well, these guys will like fill that in


00:06:46.020 --> 00:06:46.940
just a tiny bit as well.


00:06:46.940 --> 00:06:47.860
Yes, go ahead, Patrick.


00:06:47.860 --> 00:06:49.500
- Yeah, so he's listening from Germany.


00:06:49.500 --> 00:06:51.640
So hello from Germany to Germany.


00:06:51.640 --> 00:06:56.340
So I think I started around 2016.


00:06:56.340 --> 00:06:59.060
I love the show's wide range of Python related topics


00:06:59.060 --> 00:07:01.260
and also the sound quality is usually very good.


00:07:01.260 --> 00:07:02.420
Yes, that's true.


00:07:02.420 --> 00:07:07.380
The question is, what's the first Python code


00:07:07.380 --> 00:07:10.460
you ever used professionally or got paid for


00:07:10.460 --> 00:07:11.960
and is it still in production?


00:07:11.960 --> 00:07:13.920
- That's a great question.


00:07:13.920 --> 00:07:18.020
So what is the first Python code that I wrote in production?


00:07:18.020 --> 00:07:21.500
Well, the first that I got paid for.


00:07:21.500 --> 00:07:25.340
So really when I started into Python,


00:07:25.340 --> 00:07:31.560
I was working as a full-time as a software trainer.


00:07:31.560 --> 00:07:34.000
So I would go around and teach courses


00:07:34.000 --> 00:07:38.600
And I used to previously do C# and .NET and C++ and stuff,


00:07:38.600 --> 00:07:41.340
and was super happy to move over to Python


00:07:41.340 --> 00:07:42.640
and do more of that.


00:07:42.640 --> 00:07:45.600
So the first things that I did around that space


00:07:45.600 --> 00:07:48.280
was really like a bunch of little example projects


00:07:48.280 --> 00:07:49.600
and things I kind of explored


00:07:49.600 --> 00:07:52.580
so that I could teach those ideas to other people.


00:07:52.580 --> 00:07:55.600
So it's, I don't know, it's possibly someone took that


00:07:55.600 --> 00:07:56.600
and put it into production,


00:07:56.600 --> 00:07:59.800
but it's not really the type of code like,


00:07:59.800 --> 00:08:02.800
oh, I deployed this one website or I built that website.


00:08:02.800 --> 00:08:06.440
And then, you know, after that, I started realizing


00:08:06.440 --> 00:08:09.780
just how neat and powerful Python was,


00:08:09.780 --> 00:08:12.840
started doing some little small projects with it.


00:08:12.840 --> 00:08:15.260
And probably the thing that's still around, honestly,


00:08:15.260 --> 00:08:20.080
is Talk Python, the site itself is the oldest piece


00:08:20.080 --> 00:08:21.220
of Python code that I've written


00:08:21.220 --> 00:08:23.400
that's still around and doing anything.


00:08:23.400 --> 00:08:26.600
- Cool.


00:08:26.600 --> 00:08:31.760
- Yeah, so I think that's probably the first one


00:08:31.760 --> 00:08:32.680
back in the day.


00:08:32.680 --> 00:08:36.040
It's tricky, I wasn't working at the time


00:08:36.040 --> 00:08:38.960
writing that much software as a software developer


00:08:38.960 --> 00:08:40.560
when I found Python, I would say.


00:08:40.560 --> 00:08:41.820
So yeah, there you go.


00:08:41.820 --> 00:08:45.440
- Yeah, I would also probably suggest


00:08:45.440 --> 00:08:46.920
quite a lot of us who write Python,


00:08:46.920 --> 00:08:49.040
a lot of our Python, if it's still in production,


00:08:49.040 --> 00:08:50.360
was only ever run once or twice


00:08:50.360 --> 00:08:52.640
'cause it was a quick script to fix some problem


00:08:52.640 --> 00:08:54.200
that the rest of the system had and so forth.


00:08:54.200 --> 00:08:55.480
So it's still around,


00:08:55.480 --> 00:08:58.000
but not necessarily ever looked at again


00:08:58.000 --> 00:08:59.920
'cause it fixed the problem and it was solved.


00:08:59.920 --> 00:09:01.160
- Exactly.


00:09:01.160 --> 00:09:05.400
I've got a huge folder of like these are the things I need to run to solve problems or get like a little report


00:09:05.400 --> 00:09:11.240
Really quick and I honestly forget if they even exist, you know, I'm like I pretty sure a couple years ago


00:09:11.240 --> 00:09:13.320
I wrote this thing that'll you know


00:09:13.320 --> 00:09:16.520
I'll put this data or summarize this for me and I could do it again


00:09:16.520 --> 00:09:20.600
But maybe I can find that script and yeah, I just I did one of those like yesterday or the day before


00:09:20.600 --> 00:09:22.680
Yeah, I think it was monday. Yeah


00:09:22.680 --> 00:09:25.400
Yeah


00:09:25.400 --> 00:09:28.200
All right


00:09:28.200 --> 00:09:29.040
Next one, yeah?


00:09:29.040 --> 00:09:30.680
- Yeah, onto the next question.


00:09:30.680 --> 00:09:31.960
It's maybe just worth noting,


00:09:31.960 --> 00:09:33.300
I think I forgot to mention up front,


00:09:33.300 --> 00:09:36.120
we very loosely grouped the questions together.


00:09:36.120 --> 00:09:37.400
So we're going through a set of kind of


00:09:37.400 --> 00:09:38.960
software related questions,


00:09:38.960 --> 00:09:40.600
and then there's a couple of the software industry,


00:09:40.600 --> 00:09:41.440
and then a couple of them,


00:09:41.440 --> 00:09:44.640
the more podcast specific itself.


00:09:44.640 --> 00:09:45.480
- Yeah, sounds good.


00:09:45.480 --> 00:09:46.320
Hey, before we do that,


00:09:46.320 --> 00:09:49.400
the follow up from the live stream, Samuel.


00:09:49.400 --> 00:09:50.240
- Yes.


00:09:50.240 --> 00:09:51.480
- How much of the original Talk Python code


00:09:51.480 --> 00:09:52.640
do you think is still remaining


00:09:52.640 --> 00:09:55.160
versus how much has been refactored over the years?


00:09:55.160 --> 00:09:55.980
Super interesting.


00:09:55.980 --> 00:10:00.260
I would say a lot of it has been additive, right?


00:10:00.260 --> 00:10:01.300
You know, people maybe think,


00:10:01.300 --> 00:10:02.380
oh, it's just a podcast site.


00:10:02.380 --> 00:10:04.540
Like it does a whole bunch of little small things


00:10:04.540 --> 00:10:06.520
behind the scenes that are not super obvious.


00:10:06.520 --> 00:10:10.780
Like just a couple months ago,


00:10:10.780 --> 00:10:12.540
I added the ability to have the site


00:10:12.540 --> 00:10:14.060
like transform during live streams.


00:10:14.060 --> 00:10:16.020
So if you pulled up talkpython.fm right now,


00:10:16.020 --> 00:10:18.180
like there's like a sort of the whole site is like lit up.


00:10:18.180 --> 00:10:19.500
Oh, we're live streaming right now.


00:10:19.500 --> 00:10:20.860
And it'll like take you over there.


00:10:20.860 --> 00:10:23.300
And right, like you don't get that with say WordPress.


00:10:23.300 --> 00:10:25.460
So there's a lot of stuff behind the scenes happening.


00:10:25.460 --> 00:10:28.180
In terms of the biggest stuff that was ripped out


00:10:28.180 --> 00:10:29.960
and refactored is it originally was written


00:10:29.960 --> 00:10:32.220
with SQLAlchemy talking to a relational database.


00:10:32.220 --> 00:10:37.220
And then after a year or two, I switched it over to MongoDB.


00:10:37.220 --> 00:10:39.180
We collect tons of data.


00:10:39.180 --> 00:10:42.120
There's like, I don't know,


00:10:42.120 --> 00:10:49.060
gigs of data in the database and millions of records.


00:10:49.060 --> 00:10:50.380
So I'm like, all right, it's gonna be better


00:10:50.380 --> 00:10:52.220
to switch this over and I like it better anyway.


00:10:52.220 --> 00:10:53.460
So switch that over.


00:10:53.460 --> 00:10:55.220
Probably it just ripped out the data layer


00:10:55.220 --> 00:10:57.460
and put in this new one, that's probably the biggest change.


00:10:57.460 --> 00:10:58.300
Yeah.


00:10:58.300 --> 00:11:01.560
Oops, uncheck that, there we go.


00:11:01.560 --> 00:11:04.300
Hey, go ahead, Kim, I just wanted to make sure


00:11:04.300 --> 00:11:05.860
we chat some that while we were still on the topic.


00:11:05.860 --> 00:11:07.540
- Yeah, no, sure, sure.


00:11:07.540 --> 00:11:10.300
The next question that was submitted is from Mahadi,


00:11:10.300 --> 00:11:12.500
who describes himself as a long-time listener,


00:11:12.500 --> 00:11:15.900
first-time caller who does automation and data science.


00:11:15.900 --> 00:11:18.700
There's two questions here, I'll ask them both


00:11:18.700 --> 00:11:20.180
at the same time, you can just tackle them,


00:11:20.180 --> 00:11:21.620
obviously, together.


00:11:21.620 --> 00:11:24.100
First question, are there any new courses


00:11:24.100 --> 00:11:26.380
or content or projects that you're currently working on


00:11:26.380 --> 00:11:28.460
that you can share to your listeners?


00:11:28.460 --> 00:11:30.900
And the second question, you've done an amazing job


00:11:30.900 --> 00:11:33.620
covering almost every major Python framework,


00:11:33.620 --> 00:11:36.040
what you love about them and what you dislike.


00:11:36.040 --> 00:11:37.740
As a professional content creator,


00:11:37.740 --> 00:11:39.580
what are the exact features that you're looking for


00:11:39.580 --> 00:11:41.220
in a Python web framework?


00:11:41.220 --> 00:11:42.540
Not including the common features,


00:11:42.540 --> 00:11:44.260
but subtleties that may just make up your mind


00:11:44.260 --> 00:11:45.980
about switching to that framework.


00:11:45.980 --> 00:11:47.700
- Okay, awesome.


00:11:47.700 --> 00:11:49.540
That sounds like three questions, right?


00:11:49.540 --> 00:11:51.260
- Well, more or less, yeah.


00:11:51.260 --> 00:11:52.780
- Yeah, yeah, yeah, yeah.


00:11:52.780 --> 00:11:53.600
Beautiful.


00:11:53.600 --> 00:11:57.040
So first one, courses and content that I'm working on.


00:11:57.040 --> 00:11:59.240
I have two main areas that we're focusing on.


00:11:59.240 --> 00:12:01.920
We have a couple of authors who are working on me.


00:12:01.920 --> 00:12:04.520
Probably the most exciting one that is just about to come out


00:12:04.520 --> 00:12:06.600
is we have a course on Dask.


00:12:06.600 --> 00:12:10.160
So Dask and scaling Dask with Coiled.


00:12:10.160 --> 00:12:14.040
That's going to be a real fun series that we're doing.


00:12:14.040 --> 00:12:17.400
I have a course on Twilio and Flask.


00:12:17.400 --> 00:12:20.120
So basically, how do I build a chat bot that will talk


00:12:20.120 --> 00:12:23.720
to like a backend and flask,


00:12:23.720 --> 00:12:25.820
and then like let people, you know,


00:12:25.820 --> 00:12:28.860
put in database, create an admin backend notifications


00:12:28.860 --> 00:12:29.700
for like a company,


00:12:29.700 --> 00:12:32.220
then they talk back to their customers over WhatsApp.


00:12:32.220 --> 00:12:33.220
So that's gonna be fun.


00:12:33.220 --> 00:12:34.980
That's coming out.


00:12:34.980 --> 00:12:38.500
More FastAPI, which kind of leads into


00:12:38.500 --> 00:12:41.540
the next one of the other questions.


00:12:41.540 --> 00:12:42.380
- Right.


00:12:42.380 --> 00:12:44.660
- And I'm thinking, I haven't quite got there,


00:12:44.660 --> 00:12:47.700
but I'm thinking of doing a year long YouTube channel


00:12:47.700 --> 00:12:49.800
of something like a five minute,


00:12:49.800 --> 00:12:53.440
here's a cool thing in Python this week thing.


00:12:53.440 --> 00:12:54.640
- Oh, right, okay.


00:12:54.640 --> 00:12:56.000
- Just like screen sharing and like,


00:12:56.000 --> 00:12:57.440
hey, let's just jump in and,


00:12:57.440 --> 00:12:59.720
oh, did you know about micro or ultra?


00:12:59.720 --> 00:13:00.560
Was it ultra?


00:13:00.560 --> 00:13:01.800
Ultra JSON, look, you can use it like this,


00:13:01.800 --> 00:13:03.760
but it's faster or something like that.


00:13:03.760 --> 00:13:04.800
- Oh, that'd be nice.


00:13:04.800 --> 00:13:09.120
- Like a single highlight out of your other podcast,


00:13:09.120 --> 00:13:09.960
basically.


00:13:09.960 --> 00:13:10.800
- Yeah, exactly.


00:13:10.800 --> 00:13:12.400
- Python bytes occasionally highlights a package


00:13:12.400 --> 00:13:14.080
we may not know about, yeah.


00:13:14.080 --> 00:13:15.360
- Exactly, like so Python bytes,


00:13:15.360 --> 00:13:16.680
but like, let's actually write some code


00:13:16.680 --> 00:13:19.360
and see it on the screen real quick sort of style.


00:13:19.360 --> 00:13:21.140
So that's in terms of content.


00:13:21.140 --> 00:13:26.280
Then you, the other one was about--


00:13:26.280 --> 00:13:27.120
- Yeah, basically--


00:13:27.120 --> 00:13:28.680
- Web frameworks, go ahead.


00:13:28.680 --> 00:13:31.120
- Yeah, about Python web frameworks effectively,


00:13:31.120 --> 00:13:33.720
what is it that you're looking for in one that you,


00:13:33.720 --> 00:13:36.040
given that you seem to have covered quite a few of them,


00:13:36.040 --> 00:13:39.320
what is it you like most about the ones you like?


00:13:39.320 --> 00:13:41.480
- I would say two things that really attract me


00:13:41.480 --> 00:13:43.120
to paying attention to those.


00:13:44.760 --> 00:13:49.760
One is the sort of modern features, modern feel, right?


00:13:49.760 --> 00:13:53.140
If it's using type hints, if it's using async,


00:13:53.140 --> 00:13:57.720
those kinds of aspects,


00:13:57.720 --> 00:14:00.480
it feels like it's leveraging what Python is now


00:14:00.480 --> 00:14:02.160
and not what Python used to be.


00:14:02.160 --> 00:14:05.200
So those aspects of it make me excited.


00:14:05.200 --> 00:14:07.600
But the other thing in terms of


00:14:07.600 --> 00:14:10.540
when would I think that it's important to pay attention to


00:14:10.540 --> 00:14:12.040
or when would I think of switching to it


00:14:12.040 --> 00:14:17.040
is I look at basically the derivative of the popularity,


00:14:17.040 --> 00:14:21.280
the number of stars, the number of people that tell me


00:14:21.280 --> 00:14:23.120
I should be covering this,


00:14:23.120 --> 00:14:24.520
the number of articles you see about it.


00:14:24.520 --> 00:14:27.300
So like how fast is it growing and how much excitement?


00:14:27.300 --> 00:14:29.600
So for example, like FastAPI, I would say


00:14:29.600 --> 00:14:33.140
is probably number one in that rate of growth category


00:14:33.140 --> 00:14:36.840
right now, and it also touches on the modern features


00:14:36.840 --> 00:14:38.280
with Pydantic and whatnot.


00:14:38.280 --> 00:14:43.280
And it's not say as popular as Django or Flask.


00:14:43.280 --> 00:14:46.440
I think it's, if you look at the adoption,


00:14:46.440 --> 00:14:49.080
I think it's one third compared to them.


00:14:49.080 --> 00:14:51.440
You look at the GitHub stars, it's 50/50,


00:14:51.440 --> 00:14:52.840
but it's only been around for two years


00:14:52.840 --> 00:14:54.700
where those other frameworks have been around 15 years.


00:14:54.700 --> 00:14:59.340
So to be almost as popular, like 50% as popular,


00:14:59.340 --> 00:15:01.520
but from, you know, in just two years,


00:15:01.520 --> 00:15:04.380
that's a pretty big indicator that people are excited


00:15:04.380 --> 00:15:06.400
about it, at least at the time.


00:15:06.400 --> 00:15:08.320
That is, yeah, I was about to say,


00:15:08.320 --> 00:15:10.480
granted if you're half as popular as Flask


00:15:10.480 --> 00:15:11.680
or a third as popular as Flask


00:15:11.680 --> 00:15:14.240
and you've been around far less, that is impressive.


00:15:14.240 --> 00:15:15.080
- Yeah, exactly.


00:15:15.080 --> 00:15:15.900
It's a big deal.


00:15:15.900 --> 00:15:18.380
And I think it's because these other frameworks,


00:15:18.380 --> 00:15:20.800
while amazing, it's hard for them to say,


00:15:20.800 --> 00:15:23.440
oh, we're gonna change how you write the code


00:15:23.440 --> 00:15:24.560
and use like type pens.


00:15:24.560 --> 00:15:26.880
And you can see both those frameworks


00:15:26.880 --> 00:15:30.440
are working on their strategy to switch to async.


00:15:30.440 --> 00:15:31.920
Whereas with FastAPI,


00:15:31.920 --> 00:15:35.320
like literally the getting started out of the box


00:15:35.320 --> 00:15:37.360
It gives you an async server,


00:15:37.360 --> 00:15:39.800
it's you can write async view methods if you want or not.


00:15:39.800 --> 00:15:43.160
And it's just, it's unencumbered in which I think


00:15:43.160 --> 00:15:45.640
is one of the things that's given an advantage


00:15:45.640 --> 00:15:46.480
over the others.


00:15:46.480 --> 00:15:50.320
- Perfect.


00:15:50.320 --> 00:15:51.140
- Yeah.


00:15:51.140 --> 00:15:51.980
- Thanks, I think that pretty much


00:15:51.980 --> 00:15:53.200
comprehensively covers that.


00:15:53.200 --> 00:15:56.160
On a side note, I do recall in previous episodes,


00:15:56.160 --> 00:16:00.120
you've made reference to building your site on a pyramid.


00:16:00.120 --> 00:16:00.960
- Wow, so is it?


00:16:00.960 --> 00:16:01.780
- Yes.


00:16:01.780 --> 00:16:02.620
- There's a pyramid.


00:16:02.620 --> 00:16:03.460
- There's a little bit of a fact there.


00:16:03.460 --> 00:16:05.240
- That's also obviously one of your favorites.


00:16:05.240 --> 00:16:07.340
- Yeah, yeah, yeah, there's a little bit of Flask


00:16:07.340 --> 00:16:10.360
in there as well for like some services that are,


00:16:10.360 --> 00:16:11.900
no one would know about or see.


00:16:11.900 --> 00:16:16.960
Maybe our search microservice type thing might be in Flask.


00:16:16.960 --> 00:16:18.960
But yeah, I'm a fan of Pyramid.


00:16:18.960 --> 00:16:19.840
I like it a lot.


00:16:19.840 --> 00:16:24.840
I think it also is in the situation where it's hard


00:16:24.840 --> 00:16:27.600
for it to make major changes to adopt


00:16:27.600 --> 00:16:29.400
some of these new features, right?


00:16:29.400 --> 00:16:32.440
One of the things that attracted me to Pyramid


00:16:32.440 --> 00:16:37.440
is it's a clean, simple, small framework that lets me go,


00:16:37.440 --> 00:16:38.880
oh, I'm gonna use relational,


00:16:38.880 --> 00:16:39.920
oh, and I'm gonna switch to Mongo,


00:16:39.920 --> 00:16:42.360
and I don't have to negotiate with the ORM


00:16:42.360 --> 00:16:43.880
and the admin integration,


00:16:43.880 --> 00:16:45.720
and I can just decide how it's gonna work.


00:16:45.720 --> 00:16:47.320
And for me, that's good,


00:16:47.320 --> 00:16:49.400
'cause I've been building web apps for a while.


00:16:49.400 --> 00:16:50.800
I don't know that's necessarily good for everyone,


00:16:50.800 --> 00:16:53.920
but for me, that was a big positive.


00:16:53.920 --> 00:16:57.800
And also, Pyramid was one of the first modern frameworks


00:16:57.800 --> 00:17:00.460
to massively embrace Python 3.


00:17:00.460 --> 00:17:03.800
I remember when I was choosing between Flask and Pyramid,


00:17:03.800 --> 00:17:05.800
Pyramid's like Python 3 straight away.


00:17:05.800 --> 00:17:07.760
This is like where we're focused.


00:17:07.760 --> 00:17:10.760
And Flask was like, figured out a statement like,


00:17:10.760 --> 00:17:12.320
yeah, it'll probably work on Python 3,


00:17:12.320 --> 00:17:13.840
but we've tested on Python 2.


00:17:13.840 --> 00:17:16.100
I'm like, if I'm starting from scratch,


00:17:16.100 --> 00:17:19.280
I don't really wanna have that as the way that I feel like


00:17:19.280 --> 00:17:21.760
I really want this to work on Python 3, right?


00:17:21.760 --> 00:17:24.480
So that was part of the thing that I think is


00:17:24.480 --> 00:17:26.700
not really relevant now, but it's part of the decision


00:17:26.700 --> 00:17:28.760
when I decided to go with it.


00:17:28.760 --> 00:17:30.400
- Yeah, that makes a lot of sense.


00:17:30.400 --> 00:17:32.560
- Yep.


00:17:32.560 --> 00:17:33.400
- Cool.


00:17:33.400 --> 00:17:37.860
- Thanks Patrick, I think that's pretty much that.


00:17:37.860 --> 00:17:41.760
Yeah, that was all of them from that question, yeah.


00:17:41.760 --> 00:17:46.040
- Okay, cool.


00:17:46.040 --> 00:17:48.120
So I'm going to ask the next question,


00:17:48.120 --> 00:17:51.800
which is from me, so I'm not going to introduce myself.


00:17:51.800 --> 00:17:53.800
- Yeah, you've already done so, yeah, perfect.


00:17:53.800 --> 00:17:57.800
- So, yeah, in my opinion,


00:17:57.800 --> 00:18:02.440
the addition of f-strings in Python 3.6 was the game changer for convincing many people


00:18:02.440 --> 00:18:10.400
to finally drop legacy Python. Many libraries today only support Python 3.6 and greater,


00:18:10.400 --> 00:18:14.800
and I know that some of them did so because they wanted to use f-strings. Do you think


00:18:14.800 --> 00:18:19.760
pattern matching in Python 3.10 could be a similar milestone, or do you think the current


00:18:19.760 --> 00:18:27.280
controversies around pattern matching will continue once Python 3.10 will be released?


00:18:27.280 --> 00:18:28.640
I've been thinking about pattern matching.


00:18:28.640 --> 00:18:29.780
It's really interesting.


00:18:29.780 --> 00:18:34.520
It's like a switch statement, but much, much more, right?


00:18:34.520 --> 00:18:37.040
And that's been approved.


00:18:37.040 --> 00:18:40.000
That's pretty recent news that that's been approved


00:18:40.000 --> 00:18:42.700
and will be in Python 3.10, as you've hinted, Patrick.


00:18:42.700 --> 00:18:46.120
I also agree that f-strings were major.


00:18:46.120 --> 00:18:48.200
And I think it's interesting to just look back


00:18:48.200 --> 00:18:49.560
on the history of Python.


00:18:49.560 --> 00:18:52.440
Like one of the biggest challenges


00:18:52.440 --> 00:18:54.720
of switching from Python 2 to 3


00:18:54.720 --> 00:18:57.740
was around the way that strings behaved


00:18:57.740 --> 00:18:59.560
in like a bytes versus strings


00:18:59.560 --> 00:19:01.600
where it used to just kind of be all the one thing.


00:19:01.600 --> 00:19:05.600
And it's kind of amazing to me that such a simple,


00:19:05.600 --> 00:19:08.360
oh, we're just changing this one data structure


00:19:08.360 --> 00:19:10.480
has so much influence, right?


00:19:10.480 --> 00:19:12.140
That you'd switch back on three, six


00:19:12.140 --> 00:19:14.800
because f-strings are awesome.


00:19:14.800 --> 00:19:16.960
Or you would be resistant to switch from two to three


00:19:16.960 --> 00:19:19.000
because the way strings works changes.


00:19:19.000 --> 00:19:20.100
But I think it's true.


00:19:20.100 --> 00:19:22.480
Yeah.


00:19:22.480 --> 00:19:26.040
- So will pattern matching be that?


00:19:26.040 --> 00:19:27.320
I don't think so.


00:19:27.320 --> 00:19:31.920
You know, it's, I think, let me rephrase that.


00:19:31.920 --> 00:19:34.880
I think for certain use cases, absolutely.


00:19:34.880 --> 00:19:37.080
And I think the way that pattern matching is set up,


00:19:37.080 --> 00:19:41.040
particularly it's really useful for things


00:19:41.040 --> 00:19:43.320
where you're kind of doing, I don't know,


00:19:43.320 --> 00:19:46.920
maybe almost a reg X type of work


00:19:46.920 --> 00:19:49.520
where it's not just this value equals that or that,


00:19:49.520 --> 00:19:52.560
like the name says, I guess, pattern matching, right?


00:19:52.560 --> 00:19:55.160
And you're writing a parser or something like that.


00:19:55.160 --> 00:19:56.960
Maybe it's really, really important.


00:19:56.960 --> 00:20:00.080
But to me, it doesn't feel like it's gonna make


00:20:00.080 --> 00:20:00.920
a major difference.


00:20:00.920 --> 00:20:03.840
I would say it's more gonna be a walrus operator


00:20:03.840 --> 00:20:04.760
than an F-string.


00:20:04.760 --> 00:20:07.920
Which is not to disparage the walrus operator.


00:20:07.920 --> 00:20:09.480
I've come to love that thing, actually.


00:20:09.480 --> 00:20:10.360
I really like it.


00:20:10.360 --> 00:20:14.640
It's like, especially I think in the data science realm


00:20:14.640 --> 00:20:18.240
where you have to do things as a single statement,


00:20:18.240 --> 00:20:25.040
single expression, like a list comprehension or something, you can really do nice things


00:20:25.040 --> 00:20:29.120
with the walrus operator, whereas you could create a variable and assign it and then test


00:20:29.120 --> 00:20:34.920
it. That's not something that's as easy to do without multiple duplication or whatever


00:20:34.920 --> 00:20:40.600
in say list comprehension. So these sort of places where you work in one line expressions,


00:20:40.600 --> 00:20:45.160
I think actually the walrus operator is really super powerful. So I think there'll be something


00:20:45.160 --> 00:20:51.200
like that where there's a slice of types of problems that you solve, like yeah, this is


00:20:51.200 --> 00:20:56.160
the answer. And 90% of the world will go like, what's pattern matching?


00:20:56.160 --> 00:21:02.120
>> Well, yes. >> I must say, just to chop onto that, in


00:21:02.120 --> 00:21:08.360
terms of the if strings, to come at it from the other side, I didn't move to Python 3


00:21:08.360 --> 00:21:12.680
because I wanted to get access to if strings. As is, I stuck with 2.7 long after there were


00:21:12.680 --> 00:21:17.000
three's available for legacy reasons and that's what the stuff I'd written was written in and


00:21:17.000 --> 00:21:20.840
for a variety of reasons but because it's what I was using for my day-to-day job it's what I was


00:21:20.840 --> 00:21:24.760
using for my personal stuff as well I hadn't bothered moving to three but having now finally


00:21:24.760 --> 00:21:29.480
done that I'm not prepared to go back without the f-strings you know the f-strings are just


00:21:29.480 --> 00:21:34.600
and it's not just f-strings but f-strings are a nice a very nice thing to point you to say


00:21:34.600 --> 00:21:38.360
this is why I'm staying with Python 3 I'm not going back I'm not giving these up.


00:21:38.360 --> 00:21:39.200
- I totally agree.


00:21:39.200 --> 00:21:40.600
You know, it's interesting.


00:21:40.600 --> 00:21:42.440
Python has many ways to format strings.


00:21:42.440 --> 00:21:44.800
You've got the percent modulo thing.


00:21:44.800 --> 00:21:46.520
You've got dot format.


00:21:46.520 --> 00:21:50.080
You could even do a plus if you had to.


00:21:50.080 --> 00:21:51.000
All those kinds of things.


00:21:51.000 --> 00:21:52.120
And now f-strings.


00:21:52.120 --> 00:22:00.480
- Yeah, I think the most underrated thing is this.


00:22:00.480 --> 00:22:03.760
When you have an F string and an expression


00:22:03.760 --> 00:22:07.360
and you say letter equals.


00:22:07.360 --> 00:22:12.360
And it brings a nice output, like letter equals letter.


00:22:12.360 --> 00:22:13.700
That's pretty nice.


00:22:13.700 --> 00:22:15.860
I think it's a 3.8 thing.


00:22:15.860 --> 00:22:16.700
- Yeah, I think that's nice. - Which is bad


00:22:16.700 --> 00:22:19.060
because we use a lot of 3.6 currently,


00:22:19.060 --> 00:22:24.060
but we hope to, hopefully we are soon switching to 3.8.


00:22:24.060 --> 00:22:25.260
- Why is this crashing?


00:22:25.260 --> 00:22:27.280
Yeah, I've definitely broken the server.


00:22:27.280 --> 00:22:30.260
I took down the website once, one of my websites,


00:22:30.260 --> 00:22:32.780
by using the walrus operator in a little side script,


00:22:32.780 --> 00:22:34.300
but it tried to parse it,


00:22:34.300 --> 00:22:36.740
and it was on 3.7 at the time.


00:22:36.740 --> 00:22:39.740
Anyway, yeah, you gotta stay back a little bit.


00:22:39.740 --> 00:22:41.300
Yeah, I think what's interesting is like,


00:22:41.300 --> 00:22:45.260
f-strings are now both faster and cleaner and shorter.


00:22:45.260 --> 00:22:46.340
There's always been these trade-offs,


00:22:46.340 --> 00:22:49.500
like, "Oh, this is faster, but this is more maintainable."


00:22:49.500 --> 00:22:50.400
Now it's just clear.


00:22:50.400 --> 00:22:53.140
So I think f-strings are actually pretty important.


00:22:53.140 --> 00:22:55.740
I, but I would put pattern, Patrick,


00:22:55.740 --> 00:22:57.220
I'd put pattern matching in with like


00:22:57.220 --> 00:23:00.420
Walrus operator level in my guesstimation here.


00:23:00.420 --> 00:23:03.220
- So it breaks your code.


00:23:03.220 --> 00:23:05.620
- Yeah.


00:23:06.500 --> 00:23:08.820
- It will, yeah, I think I run it every night on the server


00:23:08.820 --> 00:23:10.420
if I try to put it out too soon.


00:23:10.420 --> 00:23:15.580
- Can I just suggest maybe before we move on


00:23:15.580 --> 00:23:18.420
to the next question, a comment's just come on from Piotr.


00:23:18.420 --> 00:23:20.260
There've been a few previous comments to do with courses,


00:23:20.260 --> 00:23:22.260
which I think might make more sense to get to


00:23:22.260 --> 00:23:24.300
when we get down to the podcast side,


00:23:24.300 --> 00:23:27.420
but this one looks like it might fit in here quite nicely.


00:23:27.420 --> 00:23:29.060
- Yeah, very.


00:23:29.060 --> 00:23:30.940
- Basically, Piotr, and my apologies,


00:23:30.940 --> 00:23:32.900
in fact, my apologies to everyone whose name I mangled


00:23:32.900 --> 00:23:34.940
if I mangled it wrong during the podcast.


00:23:35.980 --> 00:23:38.480
basically Pyotr saying, his question,


00:23:38.480 --> 00:23:40.200
what do you find more exciting these days?


00:23:40.200 --> 00:23:42.300
Web development with Python on the backend


00:23:42.300 --> 00:23:43.800
or machine learning and AI?


00:23:43.800 --> 00:23:46.900
- That's pretty interesting.


00:23:46.900 --> 00:23:48.220
What is more exciting?


00:23:48.220 --> 00:23:51.980
I mean, I think there's philosophical exciting


00:23:51.980 --> 00:23:55.080
and then there's what am I excited to sit down and write?


00:23:55.080 --> 00:23:59.120
And for me, there's something beautiful about


00:23:59.120 --> 00:24:02.260
just sitting down and building an API


00:24:02.260 --> 00:24:05.560
that you can put out there and just builds a website


00:24:05.560 --> 00:24:06.840
that feels super smooth.


00:24:06.840 --> 00:24:09.280
Like, you know, the web is so critical to us today


00:24:09.280 --> 00:24:11.560
and you go around and so many sites are like loading,


00:24:11.560 --> 00:24:13.440
loading, maybe they're like,


00:24:13.440 --> 00:24:15.200
oh, we are gonna use a front end framework.


00:24:15.200 --> 00:24:16.700
So it seems fast and then it fills up


00:24:16.700 --> 00:24:18.360
and then it just has a bunch of spares for a while.


00:24:18.360 --> 00:24:21.120
You're like, no, that's just another way of loading slowly.


00:24:21.120 --> 00:24:24.960
You know, and having something that's just like instant,


00:24:24.960 --> 00:24:26.560
no matter where you are, it's just like,


00:24:26.560 --> 00:24:29.240
there's a, I get a great satisfaction


00:24:29.240 --> 00:24:31.080
in building things like that.


00:24:31.080 --> 00:24:35.840
And so, the day-to-day sort of,


00:24:35.840 --> 00:24:38.640
I'm gonna go with the web development in Python,


00:24:38.640 --> 00:24:40.480
but in the big picture, like,


00:24:40.480 --> 00:24:43.080
let's dream sci-fi sort of world,


00:24:43.080 --> 00:24:46.440
machine learning AI is, you know, very captivating.


00:24:46.440 --> 00:24:50.800
- Cool. - What do you guys think?


00:24:50.800 --> 00:24:53.600
- Thomas, I'm with you there entirely.


00:24:53.600 --> 00:24:55.480
I don't do any web development per se,


00:24:55.480 --> 00:24:57.320
but similarly in a day-to-day basis,


00:24:57.320 --> 00:24:59.800
if it turns out that for a lot of my workday,


00:24:59.800 --> 00:25:03.080
I wrote a script that did something relatively simple,


00:25:03.080 --> 00:25:06.240
I spoke to a couple of databases and process some numbers


00:25:06.240 --> 00:25:09.640
and maybe told us some stuff we didn't know before.


00:25:09.640 --> 00:25:11.940
And it was a script I wrote in a day


00:25:11.940 --> 00:25:14.280
and I ran it once or twice on the server


00:25:14.280 --> 00:25:15.480
and we never need to do it again.


00:25:15.480 --> 00:25:17.320
That was a good day, that was pleasing.


00:25:17.320 --> 00:25:19.680
I sat down, I wrote some Python,


00:25:19.680 --> 00:25:21.360
it did the job and it worked.


00:25:21.360 --> 00:25:23.380
It wasn't, that was exciting to me.


00:25:23.380 --> 00:25:26.040
I liked the fact that I, here's a problem to solve,


00:25:26.040 --> 00:25:27.360
I've written some Python to solve it


00:25:27.360 --> 00:25:29.180
and it's a neat self-contained thing


00:25:29.180 --> 00:25:33.060
as opposed to being big picture,


00:25:33.060 --> 00:25:35.060
let's say machine learning stuff you do for months on end,


00:25:35.060 --> 00:25:36.020
and that's also very exciting,


00:25:36.020 --> 00:25:37.380
but there is something very satisfying


00:25:37.380 --> 00:25:39.860
about solving a particular problem,


00:25:39.860 --> 00:25:43.780
you know, with some Python.


00:25:43.780 --> 00:25:44.620
- Well, yeah.


00:25:44.620 --> 00:25:46.140
- And Python makes a lot of it really simple.


00:25:46.140 --> 00:25:46.980
Exactly.


00:25:46.980 --> 00:25:48.100
- Yeah, exactly, yeah.


00:25:48.100 --> 00:25:49.700
Patrick, you live closer to the AI world


00:25:49.700 --> 00:25:51.860
than probably Kim or I do.


00:25:51.860 --> 00:25:55.460
- I actually started as a data scientist at my company,


00:25:55.460 --> 00:25:58.900
and I quickly switched to be a data engineer


00:25:58.900 --> 00:26:01.980
because I realized that that's where the hard engineering


00:26:01.980 --> 00:26:04.980
and the kind of real work was happening.


00:26:04.980 --> 00:26:07.580
And without the data engineering, data cleaning,


00:26:07.580 --> 00:26:11.100
the whole, the proper processing of data,


00:26:11.100 --> 00:26:13.940
you cannot do any machine learning or AI.


00:26:13.940 --> 00:26:16.180
You cannot even start.


00:26:16.180 --> 00:26:18.700
And that's why I'm there,


00:26:18.700 --> 00:26:21.820
to build kind of a foundation for me.


00:26:21.820 --> 00:26:25.700
To some point, I want to more go into this data science world,


00:26:25.700 --> 00:26:28.340
more machine learning, AI, which is really,


00:26:28.340 --> 00:26:33.340
I mean, it's incredible what Google puts out there


00:26:33.340 --> 00:26:38.200
with image classifiers and crazy stuff,


00:26:38.200 --> 00:26:42.260
especially with video or pictures.


00:26:42.260 --> 00:26:46.580
But I would also say it's really nice


00:26:46.580 --> 00:26:50.500
to solve a problem the right way, right?


00:26:50.500 --> 00:26:53.620
And that's more an engineering part, which I like,


00:26:53.620 --> 00:26:56.200
which is more like a web framework where it's predictable.


00:26:56.200 --> 00:26:58.760
And data science is, it's really dependent on the data


00:26:58.760 --> 00:27:00.640
and that's hard, hard problem.


00:27:00.640 --> 00:27:04.280
- There's a really cool quote that Eugene Yan mentioned


00:27:04.280 --> 00:27:06.920
on the show last time in some of his writings,


00:27:06.920 --> 00:27:09.640
maybe time before, but recently he was on the show


00:27:09.640 --> 00:27:13.480
and it was that this cleaning and wrangling of data


00:27:13.480 --> 00:27:16.760
is not the grunt work, it is the work of data science.


00:27:16.760 --> 00:27:19.800
Right, like that's, without that, you really get nowhere.


00:27:19.800 --> 00:27:21.800
- Yeah, it's like an iceberg.


00:27:21.800 --> 00:27:24.240
It's 90% below the water.


00:27:24.240 --> 00:27:28.000
- Yeah, but without it, yeah, the top thing falls under.


00:27:28.000 --> 00:27:30.000
All right, Kim, other live stream questions


00:27:30.000 --> 00:27:32.540
you wanna focus on now or wanna move on?


00:27:32.540 --> 00:27:36.360
- I think, well, actually, the other live stream question


00:27:36.360 --> 00:27:39.720
that may be useful while we're talking web frameworks,


00:27:39.720 --> 00:27:42.500
question from, I think it's Nechmat.


00:27:42.500 --> 00:27:46.240
Basically, that's the one.


00:27:46.240 --> 00:27:47.520
Basically, what are your thoughts


00:27:47.520 --> 00:27:49.720
on creating web applications using Streamlit


00:27:49.720 --> 00:27:52.000
versus Flask versus Flask API


00:27:52.000 --> 00:27:53.480
in terms of pros and cons and so forth?


00:27:53.480 --> 00:27:55.720
I know you've had whole episodes talking about these things.


00:27:55.720 --> 00:27:57.280
- Yeah, yeah, yeah, these are episodes.


00:27:57.280 --> 00:27:58.600
I have classes on some of these.


00:27:58.600 --> 00:28:02.040
Yeah, I've put a lot of thought into this, I guess.


00:28:02.040 --> 00:28:06.200
So let's put Streamlit on one side and Flask and FastAPI


00:28:06.200 --> 00:28:08.800
to the same other side in a moment.


00:28:08.800 --> 00:28:11.120
So Streamlit, if you're unaware,


00:28:11.120 --> 00:28:12.480
is really interesting for,


00:28:12.480 --> 00:28:16.680
I wanna write some code that looks like procedural code,


00:28:16.680 --> 00:28:18.960
maybe in the data science world or in a Jupyter notebook,


00:28:18.960 --> 00:28:22.000
like do this thing, then this, then this, then this.


00:28:22.000 --> 00:28:24.620
Oh, wait, actually what I want is an interactive website


00:28:24.620 --> 00:28:27.500
with like a combo box and a select list and a slider


00:28:27.500 --> 00:28:30.980
that's going to like lifetime update that on the web.


00:28:30.980 --> 00:28:34.840
To go from that script to that front end dynamic website


00:28:34.840 --> 00:28:36.300
without something like Streamlit


00:28:36.300 --> 00:28:37.580
is a tremendous amount of work.


00:28:37.580 --> 00:28:39.660
It involves like reactor view,


00:28:39.660 --> 00:28:42.020
or requires writing APIs,


00:28:42.020 --> 00:28:44.780
and it requires you understanding like


00:28:44.780 --> 00:28:45.860
visualization in the browser.


00:28:45.860 --> 00:28:47.260
Like there's a lot of pieces.


00:28:47.260 --> 00:28:48.840
So I think Streamlit is incredible


00:28:48.840 --> 00:28:53.840
from going from like zero to 80 or zero to 70% on that.


00:28:53.840 --> 00:28:56.120
I've got that script and I wanna get that up.


00:28:56.120 --> 00:29:00.520
And for many, many people, 70% is plenty fine.


00:29:00.520 --> 00:29:03.240
Like the decision makers or the team


00:29:03.240 --> 00:29:05.280
wanna have a dashboard where they can play with the data


00:29:05.280 --> 00:29:08.440
and look at it and it kind of looks like this shape


00:29:08.440 --> 00:29:10.720
and I can't do a lot of design on it maybe, but who cares?


00:29:10.720 --> 00:29:13.220
Like they just want access to this


00:29:13.220 --> 00:29:15.080
and it's better than an Excel spreadsheet.


00:29:15.080 --> 00:29:18.120
It's better than like letting them query the data directly.


00:29:18.120 --> 00:29:20.580
So I think like that's one realm.


00:29:20.580 --> 00:29:22.680
And the other realm is I wanna build


00:29:22.680 --> 00:29:26.060
like a production grade API


00:29:26.060 --> 00:29:31.060
that other things are gonna depend upon and use and so on.


00:29:31.060 --> 00:29:33.900
So that comes down to Flask versus FastAPI.


00:29:33.900 --> 00:29:37.820
I think on the both new feature neatness,


00:29:37.820 --> 00:29:41.440
you know, Pydanic types, async and await,


00:29:41.440 --> 00:29:44.140
FastAPI wins.


00:29:44.140 --> 00:29:47.380
The APIs are similar, but it's the new magic


00:29:47.380 --> 00:29:50.840
plus the derivative of like the growth rate


00:29:50.840 --> 00:29:53.400
of FastAPIs is higher.


00:29:53.400 --> 00:29:54.660
So on that regard,


00:29:54.660 --> 00:29:56.480
I think FastAPI is a really good choice.


00:29:56.480 --> 00:29:57.840
On the other hand,


00:29:57.840 --> 00:30:01.560
Flask has thousands of extensions you can add to it


00:30:01.560 --> 00:30:03.960
and just make it do things really easily.


00:30:03.960 --> 00:30:06.620
So if you would like to depend on that extension,


00:30:06.620 --> 00:30:09.500
things that people have done for you,


00:30:09.500 --> 00:30:11.400
you know, you're gonna get,


00:30:11.400 --> 00:30:13.600
and you don't wanna try to do those things yourself,


00:30:13.600 --> 00:30:15.840
you're probably better off going with Flask in that regard.


00:30:15.840 --> 00:30:18.560
So, yeah, I mean, not everything,


00:30:18.560 --> 00:30:22.000
Brian had a nice statement quite a while ago


00:30:22.000 --> 00:30:23.600
that you're not Facebook, you're not LinkedIn,


00:30:23.600 --> 00:30:24.440
you're not Google.


00:30:24.440 --> 00:30:26.360
And I know that's a false statement


00:30:26.360 --> 00:30:27.640
for a very small slice of the world,


00:30:27.640 --> 00:30:28.880
but for most people,


00:30:28.880 --> 00:30:31.160
your API doesn't have to support a thousand requests


00:30:31.160 --> 00:30:34.000
a second, five requests a second is fine.


00:30:34.000 --> 00:30:38.040
And you can do five requests a second on lots of data


00:30:38.040 --> 00:30:39.960
on a $5 server.


00:30:39.960 --> 00:30:40.800
You know what I mean?


00:30:40.800 --> 00:30:41.620
- Exactly.


00:30:41.620 --> 00:30:42.840
- With Flask, with no async.


00:30:42.840 --> 00:30:45.380
So I think like, don't go too far.


00:30:45.380 --> 00:30:47.540
And also the Flask versus FastAPI,


00:30:47.540 --> 00:30:49.460
you can switch from one to the other pretty easily.


00:30:49.460 --> 00:30:51.300
They're similar frameworks, you can switch.


00:30:51.300 --> 00:30:56.180
It's not sort of a super huge commitment.


00:30:56.180 --> 00:30:58.940
Streamlit versus those other two, that's a big deal.


00:30:58.940 --> 00:31:00.140
That's a big difference.


00:31:00.140 --> 00:31:02.220
- Cool, yeah. - Yeah.


00:31:02.220 --> 00:31:04.940
And Robert says, "I agree, Flask's a great framework


00:31:04.940 --> 00:31:06.460
for small and medium-sized web apps."


00:31:06.460 --> 00:31:08.060
Yep, I agree.


00:31:08.060 --> 00:31:11.700
- I'm reminded of probably not that many shows ago,


00:31:11.700 --> 00:31:13.520
you had some of the Django chaps on,


00:31:13.520 --> 00:31:15.300
and I recall one of the chaps saying,


00:31:15.300 --> 00:31:17.380
he basically, he ran almost everything


00:31:17.380 --> 00:31:20.820
on the baked in SQLite.


00:31:20.820 --> 00:31:21.660
- Yeah, yeah.


00:31:21.660 --> 00:31:23.820
- You can get quite far on SQLite.


00:31:23.820 --> 00:31:24.700
That was it, yeah.


00:31:24.700 --> 00:31:25.540
You can get quite far on SQLite,


00:31:25.540 --> 00:31:26.780
and that was a good point.


00:31:26.780 --> 00:31:28.500
And not everybody, not all your problems


00:31:28.500 --> 00:31:29.420
are Google scale problems.


00:31:29.420 --> 00:31:30.700
You don't need to roll out a cluster


00:31:30.700 --> 00:31:32.420
of databases up front.


00:31:32.420 --> 00:31:34.500
- Yeah, and if you write to it rarely,


00:31:34.500 --> 00:31:36.980
and you read from it frequently,


00:31:36.980 --> 00:31:38.860
you know, it may well be very good.


00:31:38.860 --> 00:31:41.860
It's the thing is, you know, it's a lot of people say,


00:31:41.860 --> 00:31:43.940
well, you gotta use Postgres if you're in relationals,


00:31:43.940 --> 00:31:45.400
is you could do all this amazing things.


00:31:45.400 --> 00:31:47.380
And that's true.


00:31:47.380 --> 00:31:50.420
But my experience is there's a lot of people out there


00:31:50.420 --> 00:31:53.580
in the world that go, I want to build my first website


00:31:53.580 --> 00:31:55.420
or API and put it on the internet.


00:31:55.420 --> 00:31:56.820
Oh, I also have to learn Linux.


00:31:56.820 --> 00:31:58.020
And that's really intimidating.


00:31:58.020 --> 00:32:00.380
Now I got to run another server in the database


00:32:00.380 --> 00:32:02.500
in production on the internet


00:32:02.500 --> 00:32:03.780
where people could hammer on it.


00:32:03.780 --> 00:32:05.860
And there's all the security and just like,


00:32:05.860 --> 00:32:07.100
they throw up their hands and they run away.


00:32:07.100 --> 00:32:08.300
They're like, this is just too much for me


00:32:08.300 --> 00:32:10.420
to connect these different servers securely


00:32:10.420 --> 00:32:11.260
and maintain them.


00:32:11.260 --> 00:32:16.860
And, you know, SQLite answer might be like, I can do this versus, ah, it's too much.


00:32:16.860 --> 00:32:17.860
Right.


00:32:17.860 --> 00:32:20.940
And I think in that case, it's a huge win.


00:32:20.940 --> 00:32:23.700
There's a strong, I think sometimes overlooked middle ground.


00:32:23.700 --> 00:32:27.500
I sometimes think we get a lot of resources for how to begin, absolute beginner.


00:32:27.500 --> 00:32:29.220
You've never done any of this Python stuff before.


00:32:29.220 --> 00:32:30.220
And all that stuff is brilliant.


00:32:30.220 --> 00:32:33.340
And you get a lot of writing on, well, this is how we do it.


00:32:33.340 --> 00:32:36.940
As you say, 1000 requests a second at huge scale and clustering.


00:32:36.940 --> 00:32:38.920
and we're running communities clusters


00:32:38.920 --> 00:32:41.160
over 15 different locations around the world


00:32:41.160 --> 00:32:43.000
and all that kind of serious complexity.


00:32:43.000 --> 00:32:44.900
But most of us aren't at either of those extremes.


00:32:44.900 --> 00:32:46.900
We're sitting in the middle where,


00:32:46.900 --> 00:32:49.880
perhaps MySQL is what your company's chosen to use,


00:32:49.880 --> 00:32:51.720
for example, and it's just fine, it works.


00:32:51.720 --> 00:32:53.520
It's not as good as Postgres, et cetera,


00:32:53.520 --> 00:32:55.600
but a lot of these tools will meet the need.


00:32:55.600 --> 00:32:58.480
The need isn't always as big as you think it will be.


00:32:58.480 --> 00:32:59.500
- Yeah, absolutely.


00:32:59.500 --> 00:33:00.960
I started out on one server, I think,


00:33:00.960 --> 00:33:03.720
and now we have eight, but I didn't start with eight.


00:33:03.720 --> 00:33:05.400
That would have been too intimidating, right?


00:33:05.400 --> 00:33:06.740
- Yeah, yeah, yeah.


00:33:06.740 --> 00:33:10.840
- Yeah, fantastic.


00:33:10.840 --> 00:33:12.240
Quick follow up from Robert.


00:33:12.240 --> 00:33:15.880
A fair number of internal apps used by 10 to 15 people


00:33:15.880 --> 00:33:16.720
running on SQLite.


00:33:16.720 --> 00:33:19.480
Easy setup, easy to move from server to server.


00:33:19.480 --> 00:33:20.320
- Exactly.


00:33:20.320 --> 00:33:22.280
- And backup, you backup the SQLite file,


00:33:22.280 --> 00:33:23.380
you got it backed up.


00:33:23.380 --> 00:33:26.040
- It's baked into your Docker container in my case,


00:33:26.040 --> 00:33:27.160
for example, and the people using it


00:33:27.160 --> 00:33:28.600
don't even know there's a database at all.


00:33:28.600 --> 00:33:29.440
It's brilliant.


00:33:29.440 --> 00:33:30.260
- Yeah, beautiful.


00:33:33.040 --> 00:33:36.480
I think, Michael, there were a couple more live comments


00:33:36.480 --> 00:33:40.760
or perhaps any of those led to you that you wanted to take


00:33:40.760 --> 00:33:44.240
or we should maybe ask one of the questions


00:33:44.240 --> 00:33:46.000
that was sent in earlier.


00:33:46.000 --> 00:33:48.200
- Yeah, Magnus had, he was in here early,


00:33:48.200 --> 00:33:52.100
so I'll give him the chance to get his thoughts in as well.


00:33:52.100 --> 00:33:54.840
So it says, "In your," great, thank you,


00:33:54.840 --> 00:33:57.680
"courses seem to be favoring starting from scratch,


00:33:57.680 --> 00:34:00.400
"creating files in order to learn step-by-step.


00:34:00.400 --> 00:34:06.240
It's not bad per se, but have you ever thought of maybe doing a TDD workflow?


00:34:06.240 --> 00:34:08.000
Would this add more value?


00:34:08.000 --> 00:34:15.940
I think there's a big difference between the right way to create things for


00:34:15.940 --> 00:34:20.020
somebody seeing it for the first time versus the right way to create things for


00:34:20.020 --> 00:34:21.180
engineering.


00:34:21.180 --> 00:34:29.140
And I would say in the engineering world, I would lean more towards having tests.


00:34:29.140 --> 00:34:35.380
I'm not sure I want to start that. I've gone through some experiences where like,


00:34:35.380 --> 00:34:38.580
"Okay, what we're going to do is we're going to build this whole project up doing TDD."


00:34:38.580 --> 00:34:42.660
And if the whole idea is not to teach testing per se, but something else,


00:34:42.660 --> 00:34:47.780
I think for a lot of people that can be distracting, even though it might be a little way to,


00:34:47.780 --> 00:34:52.580
a nice way to simplify it on the small scale. And the large scale, I think that it can be,


00:34:52.580 --> 00:34:57.540
you know, just one more thing to talk about. Like a similar thing that people say is like, "Well,


00:34:58.180 --> 00:35:02.180
wouldn't it be great to also cover Docker in your classes


00:35:02.180 --> 00:35:03.980
so that it doesn't matter what setup you're on.


00:35:03.980 --> 00:35:06.340
It's like, well, yeah, but I also have to teach people Docker


00:35:06.340 --> 00:35:10.340
and that's already its own other thing.


00:35:10.340 --> 00:35:13.700
And I end up using SQLite a lot in all my courses


00:35:13.700 --> 00:35:16.380
because I don't want you to have to fire up a server


00:35:16.380 --> 00:35:17.420
and go, why can't I connect


00:35:17.420 --> 00:35:19.460
or why can't I authenticate to this other server?


00:35:19.460 --> 00:35:21.320
Or actually even maybe worse,


00:35:21.320 --> 00:35:22.780
accidentally put data into it


00:35:22.780 --> 00:35:24.540
'cause you're playing around and then forget that,


00:35:24.540 --> 00:35:25.820
oh, that's open on the internet.


00:35:25.820 --> 00:35:26.660
Whoops.


00:35:26.660 --> 00:35:31.660
Like there's a beauty to just having like a laser focus


00:35:31.660 --> 00:35:34.000
on the thing that you're trying to do.


00:35:34.000 --> 00:35:34.840
- Exactly.


00:35:34.840 --> 00:35:36.020
- Yeah, my stuff in production,


00:35:36.020 --> 00:35:40.940
I would say it's not 100% code coverage.


00:35:40.940 --> 00:35:45.940
I find, you know, that last 30, 20%, whatever it is,


00:35:45.940 --> 00:35:49.640
like that marginal returns on that


00:35:49.640 --> 00:35:51.700
is much farther down the road


00:35:52.840 --> 00:35:57.200
then what is the essence of my thing I'm building?


00:35:57.200 --> 00:36:02.200
If I was building a trading engine for stock market,


00:36:02.200 --> 00:36:05.120
well, the core part that does the trades and pricing,


00:36:05.120 --> 00:36:06.920
that should have tests.


00:36:06.920 --> 00:36:10.120
The part that doesn't log in, probably not.


00:36:10.120 --> 00:36:10.960
- Exactly.


00:36:10.960 --> 00:36:13.120
The part that emails everybody


00:36:13.120 --> 00:36:15.040
once a month to the marketing user.


00:36:15.040 --> 00:36:16.560
- Yeah, exactly, right?


00:36:16.560 --> 00:36:19.040
Yeah, I mean, it might be great to have it,


00:36:19.040 --> 00:36:21.560
but it could be that you could be making


00:36:21.560 --> 00:36:23.120
important contributions and the other.


00:36:23.120 --> 00:36:23.960
I don't know.


00:36:23.960 --> 00:36:27.120
I feel like that if you take it too far in any direction,


00:36:27.120 --> 00:36:30.800
that like looking for 100% coverage or something like that,


00:36:30.800 --> 00:36:33.840
often you can end up spending huge amounts of time.


00:36:33.840 --> 00:36:35.120
Then you get in a situation where you're like,


00:36:35.120 --> 00:36:37.760
well, it would be really better if we refactored this.


00:36:37.760 --> 00:36:38.880
And that's not that much work,


00:36:38.880 --> 00:36:41.120
but there's like 500 tests that go with that.


00:36:41.120 --> 00:36:42.360
Now we've got to rewrite the test.


00:36:42.360 --> 00:36:43.760
And it's just like, oh gosh,


00:36:43.760 --> 00:36:46.000
well maybe we won't make that architectural shift


00:36:46.000 --> 00:36:50.080
because what was a benefit to like supporting us,


00:36:50.080 --> 00:36:50.920
getting there.


00:36:50.920 --> 00:36:53.340
all of a sudden I've got all of this baggage


00:36:53.340 --> 00:36:54.760
to take along for lack of a better word.


00:36:54.760 --> 00:36:58.600
Anyway, that's probably a larger answer than


00:36:58.600 --> 00:36:59.560
you was looking for.


00:36:59.560 --> 00:37:01.160
That's kind of my thoughts on that.


00:37:01.160 --> 00:37:02.000
- Fair enough.


00:37:02.000 --> 00:37:03.240
There were a couple of other comments


00:37:03.240 --> 00:37:04.720
that you've pretty much covered as well


00:37:04.720 --> 00:37:08.520
on the same vein of testing in your courses and so forth.


00:37:08.520 --> 00:37:09.360
- Yeah, okay.


00:37:09.360 --> 00:37:11.720
- I don't think Brian Oken would agree with you, Michael,


00:37:11.720 --> 00:37:16.720
but maybe you can have a course on test-driven development


00:37:16.720 --> 00:37:18.760
so that's fine, right?


00:37:18.760 --> 00:37:19.600
- Yeah, yeah.


00:37:19.600 --> 00:37:22.160
If we do a course, probably Brian is gonna be the one


00:37:22.160 --> 00:37:23.560
doing it, so I'll let him.


00:37:23.560 --> 00:37:26.080
You know, I just, I have a very pragmatic feel


00:37:26.080 --> 00:37:26.920
about that stuff.


00:37:26.920 --> 00:37:28.360
Like, yes, you should have tests.


00:37:28.360 --> 00:37:31.340
You should be able to say, if I push this to production,


00:37:31.340 --> 00:37:33.400
is it going to crash or not crash?


00:37:33.400 --> 00:37:35.840
Like, is it gonna do the thing that it's supposed to do?


00:37:35.840 --> 00:37:39.440
But at the same time, I think it's also really valuable


00:37:39.440 --> 00:37:43.120
to not put too much extra burden


00:37:43.120 --> 00:37:46.580
and calcify your architecture and your decisions


00:37:46.580 --> 00:37:48.080
on this package or this structure


00:37:48.080 --> 00:37:50.760
and be able to move quick when you find


00:37:50.760 --> 00:37:51.600
that there's something or anything.


00:37:51.600 --> 00:37:54.920
So anyway, that's about the tension I'm trying to balance.


00:37:54.920 --> 00:37:57.840
In my world, not to be for Ryan, right?


00:37:57.840 --> 00:38:00.200
- If I could just maybe pick up on one of the statements


00:38:00.200 --> 00:38:01.400
you were making on the way through,


00:38:01.400 --> 00:38:04.080
the other thing also to all of us really have to bear in mind


00:38:04.080 --> 00:38:06.160
is if somebody is paying you to do this,


00:38:06.160 --> 00:38:08.120
there are a number of things you could be doing


00:38:08.120 --> 00:38:10.800
in any given part of the day that would help the company,


00:38:10.800 --> 00:38:12.640
which is ultimately what you're being paid for.


00:38:12.640 --> 00:38:14.080
- Right. - It may be that writing


00:38:14.080 --> 00:38:16.900
the last 90 to 95% test coverage


00:38:16.900 --> 00:38:19.420
isn't actually nearly as useful as the next problem


00:38:19.420 --> 00:38:20.260
on the list.


00:38:20.260 --> 00:38:24.060
- Yeah, like, so you got to ask yourself,


00:38:24.060 --> 00:38:29.060
how upset will either the users or the business folks be


00:38:29.060 --> 00:38:32.420
if that part of the site stops working


00:38:32.420 --> 00:38:35.380
or if that part of the application stops working


00:38:35.380 --> 00:38:37.180
and would they be willing to accept a little bit


00:38:37.180 --> 00:38:41.380
of uncertainty there for more features or something like that?


00:38:41.380 --> 00:38:42.220
- Exactly, yeah.


00:38:43.340 --> 00:38:47.100
That said, when people would ask,


00:38:47.100 --> 00:38:48.100
oh, we need this new feature,


00:38:48.100 --> 00:38:51.180
how much is it going to cost in terms of time and energy?


00:38:51.180 --> 00:38:53.180
I wouldn't say, well, here's how much the feature costs


00:38:53.180 --> 00:38:54.860
and here's how much the test costs


00:38:54.860 --> 00:38:57.500
and here's how much the refactoring to keep things clean.


00:38:57.500 --> 00:39:00.260
I would just put that into one and go, that's the price.


00:39:00.260 --> 00:39:02.180
And then, you know,


00:39:02.180 --> 00:39:04.160
then you don't have to have that discussion of,


00:39:04.160 --> 00:39:06.080
well, yes, you can add this feature,


00:39:06.080 --> 00:39:08.940
but please don't take time to refactor the code


00:39:08.940 --> 00:39:10.820
so that it's not building up technical debt.


00:39:10.820 --> 00:39:12.820
It's like, no, no, no, that's the price.


00:39:12.820 --> 00:39:13.940
- This is all across, yeah.


00:39:13.940 --> 00:39:15.140
- Yeah, yeah.


00:39:15.140 --> 00:39:16.340
- Exactly.


00:39:16.340 --> 00:39:17.180
- Yeah.


00:39:17.180 --> 00:39:20.100
- I think maybe while we're going through


00:39:20.100 --> 00:39:21.940
some excellent comments that have come through,


00:39:21.940 --> 00:39:24.780
it might be worth, there's two more that just leapt out


00:39:24.780 --> 00:39:26.660
to me that are probably interesting discussions


00:39:26.660 --> 00:39:27.500
for most people.


00:39:27.500 --> 00:39:29.900
There's one from Daltaguse, which I can just read.


00:39:29.900 --> 00:39:32.960
It's basically PIPN versus VN versus Condor,


00:39:32.960 --> 00:39:34.700
pros and cons at scale.


00:39:34.700 --> 00:39:35.540
- Yeah.


00:39:35.540 --> 00:39:37.700
- That's an excellent question, I think, of a discussion.


00:39:37.700 --> 00:39:40.140
And then not quite, not actually related at all,


00:39:40.140 --> 00:39:43.140
but in the kind of Python vein,


00:39:43.140 --> 00:39:45.840
Pravdan has asked with all the new PIPs being merged


00:39:45.840 --> 00:39:48.260
and people calling it a bit bloated with features,


00:39:48.260 --> 00:39:49.540
what are your thoughts?


00:39:49.540 --> 00:39:51.920
- Yeah, okay, I can touch on those.


00:39:51.920 --> 00:39:55.380
I'll get both of your thoughts on this as well.


00:39:55.380 --> 00:39:58.280
So for me,


00:39:58.280 --> 00:40:04.740
I'm not using PIPenv, I'm not using Poetry,


00:40:04.740 --> 00:40:06.120
I'm not using the other things,


00:40:06.120 --> 00:40:10.200
And that's not necessarily a negative view on those.


00:40:10.200 --> 00:40:12.800
But for me, I'm just focused on using


00:40:12.800 --> 00:40:16.240
Python's virtual V and V stuff.


00:40:16.240 --> 00:40:20.440
Couple of reasons, for me, it just works.


00:40:20.440 --> 00:40:22.680
I find it simple, I don't have to make sure


00:40:22.680 --> 00:40:26.080
I have a thing installed, I don't have to alter my workflow


00:40:26.080 --> 00:40:27.500
from going through a tutorial.


00:40:27.500 --> 00:40:29.700
I don't have to go, oh, well, they said do this thing,


00:40:29.700 --> 00:40:32.320
but I'm gonna do it in this other way


00:40:32.320 --> 00:40:34.220
when I'm talking to other people


00:40:34.220 --> 00:40:36.060
or maybe making a part of a course,


00:40:36.060 --> 00:40:39.540
these things they wax and they wane.


00:40:39.540 --> 00:40:42.500
And it might be poetry this year,


00:40:42.500 --> 00:40:45.500
but next year it's PipBimp or vice versa.


00:40:45.500 --> 00:40:47.600
And you bake that flow into a course


00:40:47.600 --> 00:40:48.700
and then people are like,


00:40:48.700 --> 00:40:51.140
well, really you told me to use PipBimp,


00:40:51.140 --> 00:40:52.740
but I feel like poetry is kind of the thing.


00:40:52.740 --> 00:40:55.500
It's like, oh, yeah, well, you can't change those


00:40:55.500 --> 00:40:57.780
once they're solidified, right?


00:40:57.780 --> 00:40:59.900
And these are like months long projects.


00:40:59.900 --> 00:41:02.520
I don't know, for me, it's not ideal.


00:41:02.520 --> 00:41:03.500
What I would really like to see


00:41:03.500 --> 00:41:07.100
is the PEP that has dunder pie packages accepted


00:41:07.100 --> 00:41:10.760
and kind of like a, there's this convention of,


00:41:10.760 --> 00:41:13.060
you know, if I've got an environment


00:41:13.060 --> 00:41:15.900
and I just run Python stuff, it just finds the environment.


00:41:15.900 --> 00:41:19.940
But until something like that comes along and gets accepted,


00:41:19.940 --> 00:41:22.340
I'm gonna go with virtual environment


00:41:22.340 --> 00:41:24.680
versus the pep-pam poetry, et cetera.


00:41:24.680 --> 00:41:27.660
I think conda is a different story, right?


00:41:27.660 --> 00:41:30.760
I think that the, all these other things versus conda,


00:41:30.760 --> 00:41:38.320
is do I choose like the conda data set sort of style of supply or do I go straight with


00:41:38.320 --> 00:41:42.100
PyPI and like the raw Python things.


00:41:42.100 --> 00:41:47.640
So now I don't do conda because I'm mostly doing stuff on the web and something that


00:41:47.640 --> 00:41:55.360
really bothers me about the web is every now and then you're like, oh, you need to update


00:41:55.360 --> 00:42:00.480
random library that either your framework is your framework or your


00:42:00.480 --> 00:42:05.680
framework depends upon because there's a CVE security vulnerability and you need


00:42:05.680 --> 00:42:10.240
to update that hours from the time you know that not not days from the time you


00:42:10.240 --> 00:42:13.920
know that because if you pull up logs your website you can see it's just whack


00:42:13.920 --> 00:42:17.960
whack whack and it's constantly being hammered looking for problems and if


00:42:17.960 --> 00:42:21.080
something major comes along you want to be able to go now it like the release is


00:42:21.080 --> 00:42:27.320
put it up now, and the condescide often has a little bit of a lag because there's more,


00:42:27.320 --> 00:42:34.840
you've got to build the binaries and stuff to go along with it. So that latency that's not normally


00:42:34.840 --> 00:42:39.600
a big deal is a big deal when you are running stuff that people could be messing with and you


00:42:39.600 --> 00:42:44.720
want to make sure if anything needs to be updated, it's updated straight away. So that's another


00:42:44.720 --> 00:42:50.880
consideration. But if I was doing, say, Patrick's job, that wouldn't matter probably, right? Because


00:42:50.880 --> 00:42:52.040
it's behind the scenes.


00:42:52.040 --> 00:42:56.280
And actually, I'm using condom a computer, but mainly because I'm


00:42:56.280 --> 00:43:01.720
used to so when I worked at my first company, I had to use a


00:43:01.720 --> 00:43:04.960
Windows computer, and I did a data science stuff. So it's


00:43:04.960 --> 00:43:07.000
incredibly hard to install.


00:43:07.000 --> 00:43:08.440
Specially there. Yeah.


00:43:08.440 --> 00:43:12.560
Yeah, some packages like geo pandas. It's, it's hard to


00:43:12.560 --> 00:43:16.920
install this pit there. Now I'm using Linux most of the time and


00:43:16.920 --> 00:43:20.160
there. It works fine. So I'm just using condom for my


00:43:20.160 --> 00:43:22.200
my environments to setting them up.


00:43:22.200 --> 00:43:25.120
Just there, I have all environments in one,


00:43:25.120 --> 00:43:27.960
with one comments, something like pipenv,


00:43:27.960 --> 00:43:30.000
but then I normally install just via pip.


00:43:30.000 --> 00:43:33.120
So I'm kind of using it wrong,


00:43:33.120 --> 00:43:35.200
but I know some of my colleagues,


00:43:35.200 --> 00:43:36.480
especially data science people,


00:43:36.480 --> 00:43:40.360
they use conda for running jobs in the Spark cluster.


00:43:40.360 --> 00:43:42.640
And yeah, but we personally,


00:43:42.640 --> 00:43:44.440
also my team, we're using pex,


00:43:44.440 --> 00:43:47.480
which is something like.


00:43:47.480 --> 00:43:48.320
- Oh, right.


00:43:48.320 --> 00:43:49.160
Okay, interesting.


00:43:49.160 --> 00:43:52.220
VNs, something like this, yes.


00:43:52.220 --> 00:43:55.200
- Yeah, so PECs, that's a way to like package


00:43:55.200 --> 00:43:57.960
the things you're running up and deliver,


00:43:57.960 --> 00:43:59.920
almost like a zip file, if I remember correctly,


00:43:59.920 --> 00:44:02.120
and then like running that directly, right?


00:44:02.120 --> 00:44:03.360
Oh, interesting. - It's actually,


00:44:03.360 --> 00:44:05.680
it's something like a zipped VN, yes.


00:44:05.680 --> 00:44:07.120
You need an interpreter, by the way,


00:44:07.120 --> 00:44:11.040
so you have to have the correct interpreter on your system


00:44:11.040 --> 00:44:16.040
to then run this file, or run this PECs file.


00:44:16.040 --> 00:44:18.400
So it's kind of a nice thing.


00:44:18.400 --> 00:44:21.600
It's kind of a binary, which you can chip everywhere.


00:44:21.600 --> 00:44:23.900
That's the thing.


00:44:23.900 --> 00:44:26.840
You can test it on your CI and then deploy it,


00:44:26.840 --> 00:44:29.320
test this thing on a CI and deploy exactly that


00:44:29.320 --> 00:44:30.400
on production systems.


00:44:30.400 --> 00:44:33.880
So you don't have to install or alter that in any way


00:44:33.880 --> 00:44:37.780
from your test environment to production, which is nice.


00:44:37.780 --> 00:44:38.920
- Yeah, that's pretty interesting.


00:44:38.920 --> 00:44:42.600
It's almost like halfway to Docker, but not quite.


00:44:42.600 --> 00:44:43.640
- Yes.


00:44:43.640 --> 00:44:45.920
Yeah.


00:44:45.920 --> 00:44:47.480
- Not only that, but positive or negative way.


00:44:47.480 --> 00:44:49.680
It's just, it is like, it doesn't come


00:44:49.680 --> 00:44:52.880
with the runtime stuff of the machine,


00:44:52.880 --> 00:44:55.000
like the interpreter and other stuff


00:44:55.000 --> 00:44:56.400
that you might set up like Docker would,


00:44:56.400 --> 00:44:57.540
but it comes with everything else,


00:44:57.540 --> 00:44:59.560
like exactly as you would put it, right?


00:44:59.560 --> 00:45:00.800
Like the packages and stuff.


00:45:00.800 --> 00:45:04.120
So yeah, I think this whole packaging and deploying


00:45:04.120 --> 00:45:09.120
and moving Python applications around, it's interesting.


00:45:09.120 --> 00:45:11.560
- It's interesting, it's changing.


00:45:11.560 --> 00:45:13.120
We're also looking into poetry now


00:45:13.120 --> 00:45:15.680
and let's see how this works.


00:45:15.680 --> 00:45:17.420
- Yeah, sure.


00:45:17.420 --> 00:45:18.980
Yeah, very cool.


00:45:18.980 --> 00:45:21.700
Yeah, speaking of which, Magnus says,


00:45:21.700 --> 00:45:25.980
"I use Poetry to get into pyproject.toml.


00:45:25.980 --> 00:45:30.300
However, not be able to do editable install via pip


00:45:30.300 --> 00:45:31.180
is a big hurdle."


00:45:31.180 --> 00:45:33.500
Yeah, okay, interesting, yeah.


00:45:33.500 --> 00:45:36.500
It looks like we've lost Kim from our connection.


00:45:36.500 --> 00:45:41.180
Hopefully he will be back here, but I guess, yeah.


00:45:42.340 --> 00:45:45.740
And Pradvan is a VNV for the win as well.


00:45:45.740 --> 00:45:50.500
All right, Patrick, you wanna do a little bit more


00:45:50.500 --> 00:45:53.020
and hopefully Kim will come back and join us.


00:45:53.020 --> 00:45:55.700
- Yeah, I'm going to have the next question,


00:45:55.700 --> 00:45:57.820
which is actually Kim's question,


00:45:57.820 --> 00:45:59.940
but I'm going to do that.


00:45:59.940 --> 00:46:02.380
Two within notebook themes, yes or no?


00:46:02.380 --> 00:46:03.680
If yes, which one?


00:46:03.680 --> 00:46:06.060
- Oh, interesting.


00:46:06.060 --> 00:46:09.700
Yeah, so for me, I do some stuff in notebooks.


00:46:09.700 --> 00:46:12.420
I have like accounting and you know,


00:46:12.420 --> 00:46:15.900
what courses are popular and what are people doing there?


00:46:15.900 --> 00:46:17.700
What podcasts are popular?


00:46:17.700 --> 00:46:19.740
And so that kind of analysis and graphic,


00:46:19.740 --> 00:46:25.860
do that, excuse me, do that in notebooks,


00:46:25.860 --> 00:46:30.940
but boy, it's just the plain old JupyterLab notebooks,


00:46:30.940 --> 00:46:34.700
nothing super fancy, right?


00:46:34.700 --> 00:46:37.220
I looked at some notebook themes after this question


00:46:37.220 --> 00:46:39.540
and they look really cool.


00:46:39.540 --> 00:46:41.500
Maybe I should check it out.


00:46:41.500 --> 00:46:44.000
You probably spend more time in notebooks than I do anyway.


00:46:44.000 --> 00:46:45.500
Have you done anything with it?


00:46:45.500 --> 00:46:48.900
- I don't know if I spent more time,


00:46:48.900 --> 00:46:52.200
just some basic stuff to play around with code.


00:46:52.200 --> 00:46:55.000
I think it's superior to IPython,


00:46:55.000 --> 00:46:56.660
just the way the UI works.


00:46:56.660 --> 00:47:00.980
And I played with Jupyter themes once.


00:47:00.980 --> 00:47:04.020
I tried some, but always at some point,


00:47:04.020 --> 00:47:07.660
there was some weird thing with the CSS, in my opinion,


00:47:07.660 --> 00:47:08.820
and I didn't like it.


00:47:08.820 --> 00:47:11.460
some table formatting stuff or...


00:47:11.460 --> 00:47:14.220
- Right, that's a challenge, right?


00:47:14.220 --> 00:47:19.140
Like it's how comprehensive is that theme going to be?


00:47:19.140 --> 00:47:22.100
And once it breaks through and then like,


00:47:22.100 --> 00:47:23.020
oh, it looks good, it looks good.


00:47:23.020 --> 00:47:23.900
Oh, it looks horrible.


00:47:23.900 --> 00:47:24.740
I can't even hardly,


00:47:24.740 --> 00:47:27.420
and if it gets to the point where you can't even make sense


00:47:27.420 --> 00:47:31.540
of like some graph or something, then it's out, right?


00:47:31.540 --> 00:47:33.500
- Yeah, and also like the, for example,


00:47:33.500 --> 00:47:37.540
I played a lot with bouquet and then also


00:47:37.540 --> 00:47:40.860
It didn't really fit in that theme, right?


00:47:40.860 --> 00:47:43.460
It just like wide and everything around it is a star


00:47:43.460 --> 00:47:46.060
and it didn't just feel right.


00:47:46.060 --> 00:47:47.620
- Yeah, yeah.


00:47:47.620 --> 00:47:48.460
Hey, Kim's back.


00:47:48.460 --> 00:47:49.280
Welcome back, Kim.


00:47:49.280 --> 00:47:51.120
- Oh, sorry about that.


00:47:51.120 --> 00:47:54.380
- Yeah, no worries.


00:47:54.380 --> 00:47:55.220
- He's back.


00:47:55.220 --> 00:47:57.660
- Still a little slow, but still a little glitchy,


00:47:57.660 --> 00:48:01.140
but hopefully you can hear us okay, but no problem.


00:48:01.140 --> 00:48:02.280
We're still going.


00:48:02.280 --> 00:48:04.880
Yeah, so I don't know.


00:48:06.820 --> 00:48:07.900
I like the idea of themes.


00:48:07.900 --> 00:48:10.700
I've also, you know, say like PyCharm has like themes


00:48:10.700 --> 00:48:12.500
and stuff that I put in there.


00:48:12.500 --> 00:48:13.820
And I'm always, oh, this one is great.


00:48:13.820 --> 00:48:16.340
Then I'm like, ah, but this part, I don't know.


00:48:16.340 --> 00:48:19.180
And I don't know, I've, there's something to be said


00:48:19.180 --> 00:48:22.180
for just going back to the plain old standard.


00:48:22.180 --> 00:48:25.180
Yeah.


00:48:25.180 --> 00:48:26.900
I guess another important question, Patrick,


00:48:26.900 --> 00:48:29.340
is font ligatures or no font ligatures.


00:48:29.340 --> 00:48:30.780
Are you familiar with those?


00:48:30.780 --> 00:48:32.020
- Yes, I am.


00:48:32.020 --> 00:48:35.080
I have no feeling about that, really.


00:48:35.080 --> 00:48:36.080
- Okay, nope.


00:48:36.080 --> 00:48:38.480
- All right, all right, yeah.


00:48:38.480 --> 00:48:41.120
I kind of like them, but I know that people see them like,


00:48:41.120 --> 00:48:45.060
why does your code look weird and whatnot, so.


00:48:45.060 --> 00:48:48.700
- I also normally don't use them because I have the feeling


00:48:48.700 --> 00:48:53.700
that it's changing stuff that's not in the code, right?


00:48:53.700 --> 00:48:57.840
It's a bit weird.


00:48:57.840 --> 00:48:59.920
- It is weird, I kind of like it.


00:48:59.920 --> 00:49:02.720
I kind of feel like I live in the future when I use them.


00:49:02.720 --> 00:49:04.560
The thing that's okay with me is they've changed


00:49:04.560 --> 00:49:09.200
way it looks, but only for me. All right. They don't actually change the meaning. But


00:49:09.200 --> 00:49:14.560
yeah, they are a little bit crazy. All right. Maybe catch a live stream question from Moomten.


00:49:14.560 --> 00:49:22.600
What would be the best Python project types to do to learn some cool things you can do,


00:49:22.600 --> 00:49:29.200
things Python can do maybe? So Patrick, I want to get your thoughts on this one as well.


00:49:29.200 --> 00:49:33.400
I think it depends on where you want to go.


00:49:33.400 --> 00:49:35.560
You know, people ask me this often, it's like,


00:49:35.560 --> 00:49:36.480
well, do you want to go down?


00:49:36.480 --> 00:49:38.480
I want to build websites and web APIs and stuff.


00:49:38.480 --> 00:49:42.440
Then there's a series of things that you can do there


00:49:42.440 --> 00:49:44.600
to get you down that path.


00:49:44.600 --> 00:49:48.720
And if what you want to do is you want to go down


00:49:48.720 --> 00:49:50.360
the data science or data engineering side,


00:49:50.360 --> 00:49:52.720
there's a different set of things that you should learn


00:49:52.720 --> 00:49:53.560
to go to it.


00:49:53.560 --> 00:49:54.920
Like, so you should be playing with Jupyter


00:49:54.920 --> 00:49:57.240
and you should be playing with pandas.


00:49:57.240 --> 00:49:58.480
But if you want to go do stuff on the web,


00:49:58.480 --> 00:50:01.280
you could completely ignore those things.


00:50:01.280 --> 00:50:03.240
So I think you wanna decide in the path


00:50:03.240 --> 00:50:04.640
that you'd like to take


00:50:04.640 --> 00:50:07.520
and then start on really small stuff, right?


00:50:07.520 --> 00:50:11.800
Like, you know, what I'll give you an example


00:50:11.800 --> 00:50:12.760
of something that I have to do all the time.


00:50:12.760 --> 00:50:16.920
I've got a course folder full of MP4s


00:50:16.920 --> 00:50:20.560
and I need to turn those into what is the file name?


00:50:20.560 --> 00:50:22.320
How many seconds long is it?


00:50:22.320 --> 00:50:26.280
What is the resulting title of that going to be?


00:50:26.280 --> 00:50:28.200
And I used to just go through by hand and go,


00:50:28.200 --> 00:50:29.920
okay, we'll go to the finder.


00:50:29.920 --> 00:50:33.360
All right, this is a minute 30, so that's 90 seconds.


00:50:33.360 --> 00:50:35.200
And then the title of the file is this.


00:50:35.200 --> 00:50:37.240
And so the title is gonna be that.


00:50:37.240 --> 00:50:40.400
And you do that for 150 files,


00:50:40.400 --> 00:50:42.080
you're probably gonna make a mistake.


00:50:42.080 --> 00:50:42.960
It's not fun.


00:50:42.960 --> 00:50:46.440
So I decided instead of complaining about that


00:50:46.440 --> 00:50:47.840
week after week, I wrote a script


00:50:47.840 --> 00:50:50.520
that would read the file structure,


00:50:50.520 --> 00:50:52.160
do some stuff to figure out the time,


00:50:52.160 --> 00:50:54.080
generate the output that it needed, and boom.


00:50:54.080 --> 00:50:56.120
Like all of a sudden, now that's an instant answer


00:50:56.120 --> 00:50:59.900
instead of an hour long project that's error prone.


00:50:59.900 --> 00:51:02.300
Everybody's life is full of these little types of projects


00:51:02.300 --> 00:51:03.880
like, oh, this is super annoying


00:51:03.880 --> 00:51:05.960
not to do this all the time.


00:51:05.960 --> 00:51:07.240
Why do I have to keep doing this?


00:51:07.240 --> 00:51:08.600
I keep making the mistakes.


00:51:08.600 --> 00:51:12.400
I do it at the end of the week because I wouldn't put it off


00:51:12.400 --> 00:51:13.520
and if I do it frequently,


00:51:13.520 --> 00:51:16.940
like the repetition of it just turns up my day.


00:51:16.940 --> 00:51:19.300
And there's probably a way to do that in Python


00:51:19.300 --> 00:51:22.120
and make it run in five seconds or less.


00:51:22.120 --> 00:51:23.720
And then that just completely changes the way


00:51:23.720 --> 00:51:26.280
that you approach like that part of your life.


00:51:26.280 --> 00:51:28.360
Like, well, that's solved, that's automatic now.


00:51:28.360 --> 00:51:29.980
What else can I do?


00:51:29.980 --> 00:51:34.240
And so, Patrick and Kim as well, what do you guys think?


00:51:34.240 --> 00:51:37.440
- Kim go ahead.


00:51:37.440 --> 00:51:41.080
- Basically, sorry, I dropped out just slightly,


00:51:41.080 --> 00:51:43.120
but fair enough, the best Python project types


00:51:43.120 --> 00:51:44.980
to do cool things.


00:51:44.980 --> 00:51:46.720
I would find in all honesty,


00:51:46.720 --> 00:51:48.640
exactly what you're saying there,


00:51:48.640 --> 00:51:51.840
what I ended up doing a lot of with Python


00:51:51.840 --> 00:51:53.120
when I learned it,


00:51:53.120 --> 00:51:55.080
I didn't have any, I wasn't employed at the time,


00:51:55.080 --> 00:51:58.280
I was at university level, I wasn't using it,


00:51:58.280 --> 00:52:00.440
the master's thesis I was pretending to do.


00:52:00.440 --> 00:52:04.440
I basically, a friend of mine knew it and used it


00:52:04.440 --> 00:52:05.640
and he found it quite nifty.


00:52:05.640 --> 00:52:08.160
And when I looked at him using it,


00:52:08.160 --> 00:52:09.920
I thought, well, this could be quite a powerful tool.


00:52:09.920 --> 00:52:12.560
And ultimately I had a few small tasks to automate


00:52:12.560 --> 00:52:14.840
and I feel like I can't remember what they were now,


00:52:14.840 --> 00:52:16.660
but they made similar kinds of things.


00:52:16.660 --> 00:52:18.580
I had say a hundred files to rename,


00:52:18.580 --> 00:52:23.580
or I needed to extract the text out of 15 Excel files


00:52:23.580 --> 00:52:25.460
and join them together.


00:52:25.460 --> 00:52:27.380
Simple things like that, that you could do by hand,


00:52:27.380 --> 00:52:31.120
it would take you a couple of hours and it would be done,


00:52:31.120 --> 00:52:32.900
or it would possibly error prone,


00:52:32.900 --> 00:52:33.980
you'd make mistakes and so forth.


00:52:33.980 --> 00:52:35.940
So I turned to Python for that kind of thing.


00:52:35.940 --> 00:52:37.980
And ultimately I found before I knew it,


00:52:37.980 --> 00:52:41.020
that I had 50 Python files on my system


00:52:41.020 --> 00:52:43.900
doing one thing well once.


00:52:43.900 --> 00:52:45.380
- And you learn other little,


00:52:45.380 --> 00:52:47.460
you're like, oh, this time I got to work with Excel.


00:52:47.460 --> 00:52:49.100
Now you know how to talk to Excel files.


00:52:49.100 --> 00:52:50.500
Oh, this one's got to talk to a database.


00:52:50.500 --> 00:52:51.340
Now I know how to talk to a database.


00:52:51.340 --> 00:52:52.160
- Exactly it.


00:52:52.160 --> 00:52:53.700
- But they're not huge projects.


00:52:53.700 --> 00:52:55.380
- No, and to think of an example,


00:52:55.380 --> 00:52:58.180
I acquired some music of some form


00:52:58.180 --> 00:53:00.160
and I didn't like the way it was,


00:53:00.160 --> 00:53:02.520
the MP3 tags were done at the time.


00:53:02.520 --> 00:53:04.380
So then I had to figure out a Python library


00:53:04.380 --> 00:53:06.300
to do whatever those things are called,


00:53:06.300 --> 00:53:07.380
itags or tags or whatever.


00:53:07.380 --> 00:53:08.220
- Yeah, yeah, yeah.


00:53:08.220 --> 00:53:09.820
- I've forgotten exactly what the, ID.


00:53:09.820 --> 00:53:10.660
- Excerpt, yeah.


00:53:10.660 --> 00:53:11.940
- That's the one, yeah.


00:53:11.940 --> 00:53:12.980
So I had to figure that out.


00:53:12.980 --> 00:53:15.180
And so suddenly I know about a new module


00:53:15.180 --> 00:53:17.140
and I would suggest in all honesty


00:53:17.140 --> 00:53:19.460
that the best way to learn some Python easily


00:53:19.460 --> 00:53:21.700
is the next time you find yourself sitting down


00:53:21.700 --> 00:53:23.300
and thinking, "Well, this will take me a couple of hours


00:53:23.300 --> 00:53:26.220
to click and drag and push the buttons," whatever,


00:53:26.220 --> 00:53:29.460
think about if you can write some Python to do it instead.


00:53:29.460 --> 00:53:32.420
And keep doing that, and before you know it,


00:53:32.420 --> 00:53:33.860
anything you can't write some Python to do


00:53:33.860 --> 00:53:34.820
becomes an irritating problem


00:53:34.820 --> 00:53:36.060
because you're used to writing scripts


00:53:36.060 --> 00:53:37.420
to solve all your problems.


00:53:37.420 --> 00:53:38.620
- That's right, that's why we both said,


00:53:38.620 --> 00:53:40.700
"Oh, we have all these scripts just laying around."


00:53:40.700 --> 00:53:42.300
- Exactly, yeah.


00:53:42.300 --> 00:53:43.980
- Patrick, what do you think?


00:53:43.980 --> 00:53:45.280
- I can just agree.


00:53:45.280 --> 00:53:46.840
Automate everything.


00:53:46.840 --> 00:53:48.560
That's my answer to that.


00:53:48.560 --> 00:53:51.560
And if you want to go forward,


00:53:51.560 --> 00:53:55.720
the problem is you only come so far with that,


00:53:55.720 --> 00:53:56.860
like self-learning.


00:53:56.860 --> 00:54:00.200
At some point you have to get in touch


00:54:00.200 --> 00:54:02.680
with more experienced people.


00:54:02.680 --> 00:54:05.800
And that's my second answer to that.


00:54:05.800 --> 00:54:09.760
So at some point, go to a company


00:54:09.760 --> 00:54:12.400
or go to an open source project where you have a mentor,


00:54:12.400 --> 00:54:15.700
where you have people, where you can grow,


00:54:15.700 --> 00:54:16.920
which give you the experience


00:54:16.920 --> 00:54:19.940
which you only can get from other people.


00:54:19.940 --> 00:54:21.120
- Right, right.


00:54:21.120 --> 00:54:22.560
Yeah, you take some online courses,


00:54:22.560 --> 00:54:25.720
you can join something like Python Discord.


00:54:25.720 --> 00:54:28.620
There's a lot of options for where you can find that.


00:54:28.620 --> 00:54:31.820
But yeah, maybe even that means find a job where you can,


00:54:31.820 --> 00:54:35.600
you're not the smartest person in the room in that area.


00:54:35.600 --> 00:54:36.640
Right, it's like,


00:54:36.640 --> 00:54:38.800
'cause at that point you got no one left to ask.


00:54:38.800 --> 00:54:40.040
You're just on the internet,


00:54:40.040 --> 00:54:41.560
on Stack Overflow hunting around.


00:54:41.560 --> 00:54:43.320
And so that can be also a big help.


00:54:44.920 --> 00:54:45.760
- Yeah.


00:54:45.760 --> 00:54:47.800
- Never be the smartest person in the room.


00:54:47.800 --> 00:54:49.480
You should avoid it.


00:54:49.480 --> 00:54:50.960
- Exactly, exactly.


00:54:50.960 --> 00:54:52.960
Also says there are some good books out there


00:54:52.960 --> 00:54:54.560
like "Automate the Boring Stuff" by Al Swager.


00:54:54.560 --> 00:54:55.400
It's definitely a good book.


00:54:55.400 --> 00:54:56.240
- Yeah, that's excellent.


00:54:56.240 --> 00:54:57.120
- Yeah, I recommend that.


00:54:57.120 --> 00:54:59.840
It's in the same vein of what we've been talking about.


00:54:59.840 --> 00:55:00.920
- Yes.


00:55:00.920 --> 00:55:02.720
- I was gonna say I would have recommended


00:55:02.720 --> 00:55:04.320
Mark Pilgrim's "Dive into Python"


00:55:04.320 --> 00:55:05.960
but it's quite a few years out of date now


00:55:05.960 --> 00:55:08.480
and it does really consume you now to develop software


00:55:08.480 --> 00:55:09.320
but that's also,


00:55:09.320 --> 00:55:11.580
that was what taught me a lot of useful things.


00:55:11.580 --> 00:55:13.780
- Yeah, for sure.


00:55:14.720 --> 00:55:15.880
- For sure, for sure.


00:55:15.880 --> 00:55:16.720
Okay.


00:55:16.720 --> 00:55:20.440
Yeah, other questions, you guys?


00:55:20.440 --> 00:55:21.320
Got a few more minutes.


00:55:21.320 --> 00:55:23.600
We've got maybe five minutes and then-


00:55:23.600 --> 00:55:27.400
- So Kim, I think you can choose, right?


00:55:27.400 --> 00:55:32.400
So I already stole one of your questions.


00:55:32.400 --> 00:55:35.960
- The one about notebook themes or was it?


00:55:35.960 --> 00:55:38.960
- Yeah, I mean, SQLite and MongoDB, right?


00:55:38.960 --> 00:55:40.560
There's one which we kind of-


00:55:40.560 --> 00:55:41.440
- Okay.


00:55:41.440 --> 00:55:43.360
Well, in that case, maybe if you've got a few minutes,


00:55:43.360 --> 00:55:45.520
Michael, I'm gonna self-indulgently ask you


00:55:45.520 --> 00:55:47.320
the question I submitted if that makes sense,


00:55:47.320 --> 00:55:50.560
'cause I think there's some value there to a lot of people.


00:55:50.560 --> 00:55:52.280
What I basically asked you was more


00:55:52.280 --> 00:55:53.520
about the software industry,


00:55:53.520 --> 00:55:55.280
and what you're saying in your conversations


00:55:55.280 --> 00:55:58.580
with people over the last year or year plus, et cetera,


00:55:58.580 --> 00:55:59.720
particularly in the COVID times,


00:55:59.720 --> 00:56:01.880
have you noticed an increased appetite for employers


00:56:01.880 --> 00:56:03.780
to be willing to have the developers?


00:56:03.780 --> 00:56:12.000
- So, yes, yeah, no, I--


00:56:12.000 --> 00:56:13.560
- Absolutely, we're, yeah, we're--


00:56:13.560 --> 00:56:16.400
- I know, yeah, yeah.


00:56:16.400 --> 00:56:18.480
Has the pandemic hastened acceptance of employees


00:56:18.480 --> 00:56:21.560
from outside the employee's country?


00:56:21.560 --> 00:56:22.400
- It's so interesting.


00:56:22.400 --> 00:56:24.040
- And I also, as a South African,


00:56:24.040 --> 00:56:25.680
and there's lots of small nations like mine,


00:56:25.680 --> 00:56:27.900
we've got a small software industry, for example.


00:56:27.900 --> 00:56:30.120
But if I think of say, Lesotho and Swaziland,


00:56:30.120 --> 00:56:31.360
our two nearest neighbors,


00:56:31.360 --> 00:56:32.740
if you wanna do any kind of software work,


00:56:32.740 --> 00:56:34.680
you have to at least come to South Africa.


00:56:34.680 --> 00:56:37.540
And I'm wondering if the scope is opening


00:56:37.540 --> 00:56:39.480
for those of us from countries like ours


00:56:39.480 --> 00:56:41.220
to do more global work.


00:56:41.220 --> 00:56:46.220
Short answer, I absolutely, yeah, I definitely, definitely think so.


00:56:46.220 --> 00:56:53.220
I have worked from home in some fashion or another remotely since 2006.


00:56:53.220 --> 00:56:59.220
And that's, those are earlier days of where it was a little bit,


00:56:59.220 --> 00:57:04.220
and I ended up there in an interesting way. I worked for this company that I love working for,


00:57:04.220 --> 00:57:09.220
and they said, well, my wife got her PhD and we moved from the West Coast to the East Coast,


00:57:09.220 --> 00:57:12.420
so she could go to a university and teach there.


00:57:12.420 --> 00:57:14.180
And so I spoke to the company I worked at and I said,


00:57:14.180 --> 00:57:19.180
"Hey, I'm not gonna completely hold back my wife's career


00:57:19.180 --> 00:57:20.820
just so I can stay working.


00:57:20.820 --> 00:57:22.900
I have to move, we're moving.


00:57:22.900 --> 00:57:24.540
Would you like me to still work for you?


00:57:24.540 --> 00:57:25.900
We can figure out something remote."


00:57:25.900 --> 00:57:27.300
And they're like, "I don't think it's gonna work.


00:57:27.300 --> 00:57:29.260
I don't think we can do this remotely."


00:57:29.260 --> 00:57:30.980
All right, I'll find something else.


00:57:30.980 --> 00:57:33.140
Coincidentally, a great company reached out to me


00:57:33.140 --> 00:57:35.060
a week later, said, "Hey, we'd love to give you a job


00:57:35.060 --> 00:57:37.580
and it's like traveling around or remote, whatever."


00:57:37.580 --> 00:57:39.420
It's like, fantastic, I'll take it.


00:57:39.420 --> 00:57:40.980
(laughing)


00:57:40.980 --> 00:57:43.940
I moved away, the other company called me and said,


00:57:43.940 --> 00:57:45.780
"Well, are you gonna maybe keep working for us?"


00:57:45.780 --> 00:57:47.820
Like, no, I asked, you said no, like,


00:57:47.820 --> 00:57:49.820
I took another job, I'm gone, right?


00:57:49.820 --> 00:57:53.020
That was kind of the thing, it was like,


00:57:53.020 --> 00:57:55.300
there was, maybe we can make it work,


00:57:55.300 --> 00:57:57.380
I really like working with you, but probably not,


00:57:57.380 --> 00:58:01.140
was the way, and I think that's less so,


00:58:01.140 --> 00:58:04.540
but it still persisted up until 2019.


00:58:04.540 --> 00:58:06.220
There were many companies like,


00:58:06.220 --> 00:58:07.860
we're gonna get this huge campus,


00:58:07.860 --> 00:58:09.100
we're gonna get an amazing office.


00:58:09.100 --> 00:58:10.720
Yeah, you gotta commute for an hour and a half


00:58:10.720 --> 00:58:12.540
and be on some random bus in a bunch of traffic,


00:58:12.540 --> 00:58:15.820
but it's fine, we'll give the bus wifi.


00:58:15.820 --> 00:58:17.540
And you're gonna love it, right?


00:58:17.540 --> 00:58:21.960
And then it was, you can either go out of business


00:58:21.960 --> 00:58:23.100
or you can let people work from home.


00:58:23.100 --> 00:58:23.940
Like, oh, you know what?


00:58:23.940 --> 00:58:24.940
Work from home is good.


00:58:24.940 --> 00:58:26.020
We don't mind this at all.


00:58:26.020 --> 00:58:29.300
And I think specifically for software developers,


00:58:29.300 --> 00:58:33.940
what has happened is we built up tools and ways of working


00:58:33.940 --> 00:58:37.740
that are already perfect for this disconnected async way.


00:58:37.740 --> 00:58:41.220
We've got Git, we've got GitHub or something like it.


00:58:41.220 --> 00:58:44.740
We've got Zoom and other forms of screen sharing.


00:58:44.740 --> 00:58:46.300
We've got voiceover IP.


00:58:46.300 --> 00:58:48.060
We've got the way to say,


00:58:48.060 --> 00:58:49.900
"Hey, let's work on this project together.


00:58:49.900 --> 00:58:51.380
I'll just fire up screen sharing."


00:58:51.380 --> 00:58:53.380
And it's better than if I sit at your desk


00:58:53.380 --> 00:58:55.180
'cause we both can control the keyboard


00:58:55.180 --> 00:58:56.780
and I can see it right in front of me.


00:58:56.780 --> 00:58:59.020
I'm not like off to the side, you know?


00:58:59.020 --> 00:59:02.580
And I think there's a lot of companies


00:59:02.580 --> 00:59:05.340
that are realizing that worked.


00:59:05.340 --> 00:59:10.580
- Yeah, we're definitely privileged.


00:59:10.580 --> 00:59:12.340
- Yeah. - What was that Patrick?


00:59:12.340 --> 00:59:14.580
- Oh, we're privileged for that.


00:59:14.580 --> 00:59:16.380
- Yeah, yeah, absolutely.


00:59:16.380 --> 00:59:19.460
And so what I think is there were many companies


00:59:19.460 --> 00:59:23.900
who still believed maybe it's possible, but it's not for us.


00:59:23.900 --> 00:59:28.320
And they were forced to realize that didn't break everything


00:59:28.320 --> 00:59:32.740
So maybe we can hire the best talent around the world,


00:59:32.740 --> 00:59:35.960
not the best talent out of just Oklahoma City


00:59:35.960 --> 00:59:39.660
or out of Lisbon or whatever, right?


00:59:39.660 --> 00:59:43.940
Like we can all of a sudden really expand out


00:59:43.940 --> 00:59:45.060
and do something amazing.


00:59:45.060 --> 00:59:47.980
So not every company is gonna come along for that ride,


00:59:47.980 --> 00:59:51.660
but I think many, many more.


00:59:51.660 --> 00:59:53.220
- That's encouraging, yeah.


00:59:53.220 --> 00:59:54.740
I do agree with you there entirely.


00:59:54.740 --> 00:59:57.960
I mean, particularly in the South African context,


00:59:57.960 --> 01:00:00.440
quite a lot of employers have had to have


01:00:00.440 --> 01:00:01.680
some of the employees work from home.


01:00:01.680 --> 01:00:03.240
There was a time we all worked from home,


01:00:03.240 --> 01:00:05.320
but quite a lot of people are now back in the office,


01:00:05.320 --> 01:00:09.760
but restrictions on gatherings to kind of try to combat


01:00:09.760 --> 01:00:12.440
spread of COVID have meant you can't fill the building.


01:00:12.440 --> 01:00:14.320
So in many cases, the IT staff are the ones


01:00:14.320 --> 01:00:15.920
who are working from home because you're right,


01:00:15.920 --> 01:00:17.820
we are the best equipped to do this.


01:00:17.820 --> 01:00:19.960
Now we're using Git collaboratively, et cetera.


01:00:19.960 --> 01:00:21.240
We're mainly talking to servers


01:00:21.240 --> 01:00:23.040
that aren't our computers anyhow.


01:00:23.040 --> 01:00:23.880
- Exactly.


01:00:23.880 --> 01:00:24.720
- So you do that from-


01:00:24.720 --> 01:00:26.880
- It's not the office that will do it.


01:00:26.880 --> 01:00:29.500
- Yeah, the data center is no longer down the hall


01:00:29.500 --> 01:00:30.340
behind the VPN.


01:00:30.340 --> 01:00:35.100
The data center is out on Amazon or whatever.


01:00:35.100 --> 01:00:35.940
- Yeah, for that matter,


01:00:35.940 --> 01:00:38.040
even if it is down the hall behind the VPN,


01:00:38.040 --> 01:00:39.180
you're still talking to it remotely.


01:00:39.180 --> 01:00:40.780
You just were sitting at a desk above it


01:00:40.780 --> 01:00:43.180
instead of at home.


01:00:43.180 --> 01:00:46.820
So that I think I would like to think,


01:00:46.820 --> 01:00:48.400
and I must hasten to add,


01:00:48.400 --> 01:00:49.620
if my employer happens to be listening,


01:00:49.620 --> 01:00:50.600
I'm not looking myself,


01:00:50.600 --> 01:00:52.540
but there are lots of people in the South African


01:00:52.540 --> 01:00:53.660
otherwise environment,


01:00:53.660 --> 01:00:56.100
smaller industries like ours


01:00:56.100 --> 01:00:58.540
where there's talent there,


01:00:58.540 --> 01:01:01.380
and most people don't necessarily know,


01:01:01.380 --> 01:01:02.740
you wouldn't come looking to South Africa


01:01:02.740 --> 01:01:03.920
for a software developer, for example,


01:01:03.920 --> 01:01:06.080
if, as you say, you're not Oklahoma City.


01:01:06.080 --> 01:01:08.220
But maybe there is kind of a good sign


01:01:08.220 --> 01:01:10.460
that we'll start expanding this kind of look.


01:01:10.460 --> 01:01:13.380
- I think so.


01:01:13.380 --> 01:01:14.780
I think it's gonna be progressive,


01:01:14.780 --> 01:01:18.220
but certainly the trends are in that way.


01:01:18.220 --> 01:01:21.180
Everybody's been shocked into realizing


01:01:21.180 --> 01:01:22.240
how this is going to work.


01:01:22.240 --> 01:01:23.180
And I think, honestly,


01:01:23.180 --> 01:01:28.180
there's probably some managers and some business leaders


01:01:28.180 --> 01:01:30.020
who are like, I actually don't even wanna go back


01:01:30.020 --> 01:01:30.860
to the office.


01:01:30.860 --> 01:01:31.800
I kinda like working from home too.


01:01:31.800 --> 01:01:32.640
Like I hate the traffic.


01:01:32.640 --> 01:01:33.540
- Yeah.


01:01:33.540 --> 01:01:34.380
- Not everyone.


01:01:34.380 --> 01:01:35.760
Like, yeah, I heard Tim Cook is like,


01:01:35.760 --> 01:01:37.680
oh, I can't wait till we get back together.


01:01:37.680 --> 01:01:39.040
This is what makes us special.


01:01:39.040 --> 01:01:40.760
And I don't know, maybe it is, maybe it isn't.


01:01:40.760 --> 01:01:42.720
But I think there's still gonna be a lot of people


01:01:42.720 --> 01:01:45.460
who are like, actually, this is a pretty good way


01:01:45.460 --> 01:01:46.660
for us to work.


01:01:46.660 --> 01:01:47.940
- Exactly, yeah.


01:01:47.940 --> 01:01:49.800
I think there's a lot of people along the lines of,


01:01:49.800 --> 01:01:51.340
I'd like to see my colleagues every now and then,


01:01:51.340 --> 01:01:53.440
but keep working from home most of the time.


01:01:53.440 --> 01:01:54.280
That would be--


01:01:54.280 --> 01:01:56.780
- Yeah, so, what we did at that company


01:01:56.780 --> 01:02:01.700
that I was remote for from 2006 to 2015, I guess it was,


01:02:01.700 --> 01:02:05.520
we would have once or twice yearly retreats.


01:02:05.520 --> 01:02:09.780
We would go to some fun town and spend a week together.


01:02:09.780 --> 01:02:10.620
- Yes.


01:02:10.620 --> 01:02:12.720
- And do basically like sprints


01:02:12.720 --> 01:02:15.240
or do presentations to each other.


01:02:15.240 --> 01:02:17.580
And it was great team building, right?


01:02:18.440 --> 01:02:22.080
We'd go to Toronto, we'd go to New Orleans


01:02:22.080 --> 01:02:24.680
or go to London or something like that


01:02:24.680 --> 01:02:26.120
and spend a week together.


01:02:26.120 --> 01:02:27.640
And then we'd all go back to our remote places.


01:02:27.640 --> 01:02:30.360
But even just that one week together


01:02:30.360 --> 01:02:33.280
in that face-to-face time creates deeper relationships


01:02:33.280 --> 01:02:34.360
that when you reach you,


01:02:34.360 --> 01:02:36.440
oh, now I feel comfortable to reach out to that person


01:02:36.440 --> 01:02:40.280
on Slack and ask for help or whatever, right?


01:02:40.280 --> 01:02:41.220
- Exactly, yeah.


01:02:41.220 --> 01:02:44.360
That's the one thing that is missing.


01:02:44.360 --> 01:02:45.200
Sorry, Patrick.


01:02:46.720 --> 01:02:50.600
- I think the pandemic showed a lot of people


01:02:50.600 --> 01:02:54.080
who are a lot of deciders that there are many advantages


01:02:54.080 --> 01:02:55.440
in allowing remote work.


01:02:55.440 --> 01:02:58.720
It's like you get better people, you get more people.


01:02:58.720 --> 01:03:01.320
You don't have to pay for offices,


01:03:01.320 --> 01:03:03.920
which is like a big deal, right?


01:03:03.920 --> 01:03:07.440
And people are more willing to come to your company.


01:03:07.440 --> 01:03:08.460
It's incredible.


01:03:08.460 --> 01:03:10.880
- You might even like,


01:03:10.880 --> 01:03:12.460
don't tell all the people who are working,


01:03:12.460 --> 01:03:14.860
but you might even get more time,


01:03:14.860 --> 01:03:16.640
productive hours from people.


01:03:16.640 --> 01:03:19.640
they're less likely to get distracted walking down the hall.


01:03:19.640 --> 01:03:22.980
They're not spent commuting.


01:03:22.980 --> 01:03:24.020
If they had a long commute,


01:03:24.020 --> 01:03:26.220
they might just show up a half hour early.


01:03:26.220 --> 01:03:29.620
You could actually get more productivity out of people.


01:03:29.620 --> 01:03:31.540
Not always, I mean, there's people who watch me,


01:03:31.540 --> 01:03:33.220
but you don't necessarily wanna keep working


01:03:33.220 --> 01:03:34.120
with those people.


01:03:34.120 --> 01:03:38.700
- Well, thanks.


01:03:38.700 --> 01:03:40.780
That covers what I was asking quite well.


01:03:40.780 --> 01:03:41.780
Thank you very much.


01:03:41.780 --> 01:03:45.020
- All right, gentlemen, I think we might be out of time,


01:03:45.020 --> 01:03:48.220
even if we're not out of questions entirely.


01:03:48.220 --> 01:03:50.220
- Yeah, there's probably good another...


01:03:50.220 --> 01:04:03.160
The questions we could also suck, there's a lot of...


01:04:03.160 --> 01:04:08.740
- Yeah, absolutely.


01:04:08.740 --> 01:04:11.580
And Kim, thanks for finding a way back on the internet,


01:04:11.580 --> 01:04:14.300
even though you're...


01:04:14.300 --> 01:04:16.940
I know you're on a limited connection now.


01:04:16.940 --> 01:04:17.780
You had to go--


01:04:17.780 --> 01:04:19.580
- I'm trying to get back to this call,


01:04:19.580 --> 01:04:21.460
but here you are, awesome.


01:04:21.460 --> 01:04:23.280
- All the times they have an internet related issue,


01:04:23.280 --> 01:04:24.120
to be honest.


01:04:24.120 --> 01:04:26.840
It's fine, it's been fine for months.


01:04:26.840 --> 01:04:29.860
(laughing)


01:04:29.860 --> 01:04:31.200
- One of my first live streams,


01:04:31.200 --> 01:04:33.320
it's not common that the power goes out around here,


01:04:33.320 --> 01:04:34.160
but it does happen.


01:04:34.160 --> 01:04:35.860
We have a lot of trees at Ball & Lime.


01:04:35.860 --> 01:04:37.860
Like five minutes before it started,


01:04:37.860 --> 01:04:39.180
poof, the power in the whole house,


01:04:39.180 --> 01:04:41.340
including the router and everything went out.


01:04:41.340 --> 01:04:43.740
So I had to go, tethered up my phone.


01:04:43.740 --> 01:04:45.780
It was really dark because all my lights stopped working,


01:04:45.780 --> 01:04:48.380
but nobody said, "Why are you so dark?"


01:04:48.380 --> 01:04:52.140
Yeah, glad you're able to make it work.


01:04:52.140 --> 01:04:55.420
So I guess let's do the wrap up real quick.


01:04:55.420 --> 01:04:57.000
- I lost you guys again.


01:04:57.000 --> 01:04:58.500
- Yeah, yeah, no worries, no worries.


01:04:58.500 --> 01:05:00.000
So let's just do the wrap up real quick


01:05:00.000 --> 01:05:04.020
and just do a quick favorite editor


01:05:04.020 --> 01:05:06.260
or editor use for Python code


01:05:06.260 --> 01:05:08.520
and then notable PyPI project.


01:05:08.520 --> 01:05:10.860
Kim, if you're here, go first.


01:05:10.860 --> 01:05:15.120
- Actually, Patrick, you take it.


01:05:15.120 --> 01:05:17.540
We'll switch back to you in a second.


01:05:17.540 --> 01:05:18.960
- So I'm using this code.


01:05:18.960 --> 01:05:25.100
I like the GUI, although I like the order completion


01:05:25.100 --> 01:05:28.860
and intelligence of PyCharm more.


01:05:28.860 --> 01:05:33.580
But PyLance is making a great leap in that regard.


01:05:33.580 --> 01:05:36.620
- Yeah, you started using PyLance over just the Python add-in


01:05:36.620 --> 01:05:38.180
and you find it makes a difference.


01:05:38.180 --> 01:05:39.220
- It's pretty good.


01:05:39.220 --> 01:05:42.760
It's not PyCharm level yet, but I think it's getting there.


01:05:42.760 --> 01:05:46.820
And yeah, Kim, are you?


01:05:46.820 --> 01:05:50.840
- Yeah, I'm here, yeah, so in my case,


01:05:50.840 --> 01:05:53.220
I would love to use VS Code.


01:05:53.220 --> 01:05:54.800
I've tried to use VS Code.


01:05:54.800 --> 01:05:57.020
I know I should be using a modern tool


01:05:57.020 --> 01:05:58.820
that's under active development like VS Code


01:05:58.820 --> 01:06:01.900
'cause new things are added to it all the time,


01:06:01.900 --> 01:06:03.780
but my fingers remember Emacs,


01:06:03.780 --> 01:06:05.100
and I keep coming back to Emacs


01:06:05.100 --> 01:06:07.840
because that's how I'm most productive.


01:06:07.840 --> 01:06:09.740
it is too frustrating to try anything else.


01:06:09.740 --> 01:06:12.560
And I'm sure at some point I will just bite the bullet,


01:06:12.560 --> 01:06:14.600
sit down and work through the frustration point


01:06:14.600 --> 01:06:16.460
and just get myself into VS Code


01:06:16.460 --> 01:06:19.680
or something that actually sees development.


01:06:19.680 --> 01:06:21.280
I'm being slightly unfair to the Emacs guys,


01:06:21.280 --> 01:06:22.400
but I think nobody would disagree


01:06:22.400 --> 01:06:25.000
if VS Code sees more development than say Emacs does.


01:06:25.000 --> 01:06:25.840
- Yeah, VS Code.


01:06:25.840 --> 01:06:28.520
- Emacs is where my fingers are.


01:06:28.520 --> 01:06:31.440
It's muscle memory demands Emacs.


01:06:31.440 --> 01:06:32.640
- Yeah, and if you said Vim,


01:06:32.640 --> 01:06:36.240
like a lot of PyCharm and VS Code have Vim modes.


01:06:36.240 --> 01:06:39.520
- Yeah, there's a set of Emacs bindings for VS Code,


01:06:39.520 --> 01:06:41.320
but it's just not the same.


01:06:41.320 --> 01:06:43.560
I rely on things that only Emacs can do,


01:06:43.560 --> 01:06:45.220
things that were probably designed roughly


01:06:45.220 --> 01:06:47.360
before I was born, but I want those things,


01:06:47.360 --> 01:06:48.640
and I keep coming back to them.


01:06:48.640 --> 01:06:50.720
- Yeah, and did you just like your code to run on,


01:06:50.720 --> 01:06:52.320
your editor to run on Lisp?


01:06:52.320 --> 01:06:55.720
- Well, yes, I have actually tried to write some Lisp,


01:06:55.720 --> 01:06:58.200
but that's in its own right, terrifying.


01:06:58.200 --> 01:07:00.040
- Yeah, it definitely is.


01:07:00.040 --> 01:07:02.840
And Samuel says, yeah, you might be able


01:07:02.840 --> 01:07:04.240
to find some Emacs.


01:07:04.240 --> 01:07:05.640
- I've tried them.


01:07:05.640 --> 01:07:09.320
And they work, but there's underlying emacs behavior


01:07:09.320 --> 01:07:12.780
that I'm just so used to that I just can't get around


01:07:12.780 --> 01:07:14.280
not having basically.


01:07:14.280 --> 01:07:16.920
- The window is freaking you out, the hat window.


01:07:16.920 --> 01:07:19.080
- Exactly, it's basically I boiled down to being kind of old


01:07:19.080 --> 01:07:21.640
and stuck in my ways is what I'm politely saying.


01:07:21.640 --> 01:07:22.480
- Yeah, got it.


01:07:22.480 --> 01:07:25.340
All right, then you guys quick notable PyPI package.


01:07:25.340 --> 01:07:27.760
- Kim, you wanna start?


01:07:27.760 --> 01:07:31.240
- Sure, I actually was going to suggest,


01:07:31.240 --> 01:07:34.520
I was going to highlight two Python packages


01:07:34.520 --> 01:07:36.200
that I don't think see a lot of attention


01:07:36.200 --> 01:07:39.200
and they are fairly niche, but I use them a great deal,


01:07:39.200 --> 01:07:43.520
particularly when I was doing embedded type software


01:07:43.520 --> 01:07:45.120
because a lot of those devices you talk to


01:07:45.120 --> 01:07:48.760
have RS232 serial and that kind of low level stuff.


01:07:48.760 --> 01:07:50.760
And there's a project called Pi Serial


01:07:50.760 --> 01:07:52.460
and a project called Pi Visa,


01:07:52.460 --> 01:07:54.080
both of which are under active development


01:07:54.080 --> 01:07:55.840
and both of which I would recommend to anybody


01:07:55.840 --> 01:07:59.840
who is getting into RS232 Arduino type embedded work,


01:07:59.840 --> 01:08:02.920
et cetera, Pi Serial more so for that,


01:08:02.920 --> 01:08:04.640
it's brilliant at RS232 work,


01:08:04.640 --> 01:08:06.240
it can simplify a lot of things.


01:08:06.240 --> 01:08:08.280
You might be finding yourself spending a lot of time


01:08:08.280 --> 01:08:10.000
in a terminal doing this by hand.


01:08:10.000 --> 01:08:11.800
So, PySerial can really help


01:08:11.800 --> 01:08:13.920
with a lot of this kind of automation.


01:08:13.920 --> 01:08:15.840
And then PyVisa is very niche,


01:08:15.840 --> 01:08:17.080
but I just wanted to give it a shout out


01:08:17.080 --> 01:08:18.640
'cause I don't think anybody ever does,


01:08:18.640 --> 01:08:21.360
and it's helped me a lot for years.


01:08:21.360 --> 01:08:23.280
Visa is the protocol effectively


01:08:23.280 --> 01:08:24.860
that controls industrial automation.


01:08:24.860 --> 01:08:29.860
So, things like industrial power supplies and multimeters


01:08:29.860 --> 01:08:32.460
and the kind of things you find scattered around factories


01:08:32.460 --> 01:08:34.460
that turns on and moves things around.


01:08:34.460 --> 01:08:35.780
- Python is a perfect way to automate that kind of stuff.


01:08:35.780 --> 01:08:36.620
- Exactly.


01:08:36.620 --> 01:08:38.580
Python does it very well.


01:08:38.580 --> 01:08:42.060
I mean, National Instruments has built LabVIEW


01:08:42.060 --> 01:08:43.780
to be exactly the tool for this.


01:08:43.780 --> 01:08:47.060
But if you're tired of LabVIEW and if you're into Python,


01:08:47.060 --> 01:08:48.740
I would hesitate to guess to say LabVIEW


01:08:48.740 --> 01:08:51.420
maybe annoys you like it annoyed me.


01:08:51.420 --> 01:08:52.940
Something like PyVisa is a great way


01:08:52.940 --> 01:08:54.340
to get away from LabVIEW for everything


01:08:54.340 --> 01:08:56.340
and Python can do a lot of this kind


01:08:56.340 --> 01:08:57.980
of automation work instead.


01:08:57.980 --> 01:08:58.820
- Yeah, fantastic.


01:08:58.820 --> 01:09:00.780
Patrick, package?


01:09:00.780 --> 01:09:03.180
So I wanna mention Click,


01:09:03.180 --> 01:09:07.020
which is a package for building CLI applications.


01:09:07.020 --> 01:09:08.780
I don't know, I think you already mentioned it


01:09:08.780 --> 01:09:11.020
at some point, but I just love it.


01:09:11.020 --> 01:09:12.460
- Yeah, oh, awesome.


01:09:12.460 --> 01:09:17.300
So instead of using like argparse or just like sys.args,


01:09:17.300 --> 01:09:18.140
like you get-


01:09:18.140 --> 01:09:21.620
- It has some flask wipe with decorators.


01:09:21.620 --> 01:09:23.540
It's because the creator of Flask


01:09:23.540 --> 01:09:26.500
also created Click, I think.


01:09:26.500 --> 01:09:27.340
- Yeah, it's interesting.


01:09:27.340 --> 01:09:30.420
There's these CLI frameworks and these web frameworks,


01:09:30.420 --> 01:09:31.860
And it seems like multiple times


01:09:31.860 --> 01:09:33.500
the people that make the web stuff


01:09:33.500 --> 01:09:34.980
also create a CLI framework.


01:09:34.980 --> 01:09:37.500
I guess there must be something going on there.


01:09:37.500 --> 01:09:38.340
- Yeah. - But yeah,


01:09:38.340 --> 01:09:39.180
that's cool.


01:09:39.180 --> 01:09:40.820
Yeah, click is quite popular and neat.


01:09:40.820 --> 01:09:42.700
- Yeah, there's also typer,


01:09:42.700 --> 01:09:44.140
which is built on click,


01:09:44.140 --> 01:09:46.980
which is even like even easier


01:09:46.980 --> 01:09:49.940
and then uses type hints if you're interested, Michael.


01:09:49.940 --> 01:09:51.740
- Yeah, that's cool.


01:09:51.740 --> 01:09:52.580
That's nifty.


01:09:52.580 --> 01:09:53.820
- Yeah.


01:09:53.820 --> 01:09:55.180
- It's maybe just worth pointing out


01:09:55.180 --> 01:09:58.300
that you mentioned sys.org and org-pos.


01:09:58.300 --> 01:10:01.860
since Ogg Boss is bundled into the Python library,


01:10:01.860 --> 01:10:03.100
if you are still using sys.ogg,


01:10:03.100 --> 01:10:04.340
Ogg Boss might be worth a look.


01:10:04.340 --> 01:10:05.740
You know, if you don't want to install


01:10:05.740 --> 01:10:07.780
any third party applications,


01:10:07.780 --> 01:10:09.900
you can now get your hands on at least Ogg Boss.


01:10:09.900 --> 01:10:11.900
- Yeah, there's some-- - Closer to--


01:10:11.900 --> 01:10:13.660
- Yeah, cool, good advice.


01:10:13.660 --> 01:10:15.000
There's definitely something to be said


01:10:15.000 --> 01:10:17.620
for you don't have to pip install anything.


01:10:17.620 --> 01:10:19.220
You don't have to create a virtual environment.


01:10:19.220 --> 01:10:20.220
You can just run it.


01:10:20.220 --> 01:10:23.580
And so if using Click would push you into that boundary,


01:10:23.580 --> 01:10:25.140
maybe it's worth sticking with this, right?


01:10:25.140 --> 01:10:26.020
- Yes. - Yeah.


01:10:26.020 --> 01:10:27.660
- We also have it in our production system


01:10:27.660 --> 01:10:29.940
because at some point we weren't able


01:10:29.940 --> 01:10:33.300
to use a personal VM.


01:10:33.300 --> 01:10:34.420
Now we can with PECS,


01:10:34.420 --> 01:10:36.940
but before we had to use what was there,


01:10:36.940 --> 01:10:38.540
which was basically nothing.


01:10:38.540 --> 01:10:39.860
- Interesting, okay.


01:10:39.860 --> 01:10:40.700
Yeah, yeah.


01:10:40.700 --> 01:10:42.900
That's part of the advantage of PECS.


01:10:42.900 --> 01:10:44.220
All right, Patrick, Kim,


01:10:44.220 --> 01:10:45.940
thank you for hosting this.


01:10:45.940 --> 01:10:47.460
This has been great.


01:10:47.460 --> 01:10:48.500
- No, thank you, Michael.


01:10:48.500 --> 01:10:50.100
My apologies that I wasn't here for some of it.


01:10:50.100 --> 01:10:51.600
I hope I didn't miss too much.


01:10:51.600 --> 01:10:54.060
- It was great.


01:10:54.060 --> 01:10:55.380
- The bulk of it that I was here for,


01:10:55.380 --> 01:10:56.220
I thoroughly enjoyed.


01:10:56.220 --> 01:10:58.060
- Thank you, that was very good.


01:10:58.060 --> 01:10:59.580
- Thank you for having us.


01:10:59.580 --> 01:11:01.380
- Yeah, thanks guys.


01:11:01.380 --> 01:11:02.220
See you later.


01:11:02.220 --> 01:11:03.040
- Bye.


01:11:03.040 --> 01:11:03.880
- Thank you very much.


01:11:03.880 --> 01:11:04.720
Cheers guys.


01:11:04.720 --> 01:11:05.540
- Cheers.


01:11:05.540 --> 01:11:06.380
Thanks everyone out there on the live stream


01:11:06.380 --> 01:11:07.340
for being here and all the questions.


01:11:07.340 --> 01:11:08.180
See you next time.


01:11:08.180 --> 01:11:18.180
[BLANK_AUDIO]

