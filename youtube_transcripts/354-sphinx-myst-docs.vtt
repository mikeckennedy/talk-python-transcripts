WEBVTT

00:00:00.000 --> 00:00:06.680
>> Everyone, welcome to the YouTube live stream, the podcast. And yeah, we'll kick it off.


00:00:06.680 --> 00:00:09.820
Everyone out there in the audience, thanks for being here. Fantastic to have you. Please


00:00:09.820 --> 00:00:13.820
ask questions and participate if you feel like it.


00:00:13.820 --> 00:00:21.240
Pedya and Paul, Chris H. and Chris S., welcome to Talk Python to Me. It's great to have you


00:00:21.240 --> 00:00:24.080
all here. >> Good to be here.


00:00:24.080 --> 00:00:29.700
>> Thanks for joining us, Michael. >> Yeah, absolutely. Happy to be doing it.


00:00:29.700 --> 00:00:36.460
I think talking about documentation and all the static site stuff and book generation


00:00:36.460 --> 00:00:39.740
stuff that we're going to talk about is going to be super fun.


00:00:39.740 --> 00:00:45.140
You all are at the center of various fulcrums of that throughout the ecosystem.


00:00:45.140 --> 00:00:46.980
So it's great to have you here.


00:00:46.980 --> 00:00:48.940
Great to be talking about that stuff.


00:00:48.940 --> 00:00:54.700
So let's just start really quick with a quick introduction and then what you're up to these


00:00:54.700 --> 00:00:55.700
days.


00:00:55.700 --> 00:00:58.700
Paul, you're a regular here, so you want to go first?


00:00:58.700 --> 00:01:01.900
Sure, i'm paul everett. I'm a jet brains developer advocate


00:01:01.900 --> 00:01:03.660
uh


00:01:03.660 --> 00:01:05.660
big fan of the show


00:01:05.660 --> 00:01:13.100
A big fan total fanboy of the other three people here. I've got all kinds of stories about


00:01:13.100 --> 00:01:17.580
where I was when I found out about mist and the parser and


00:01:17.580 --> 00:01:19.560
and uh


00:01:19.560 --> 00:01:24.300
Desperately wishing I could join prattian and all the things that he's doing and I will add


00:01:25.020 --> 00:01:29.580
big, big fan of Carol Willing. When I grew up, I wanted to be Carol Willing.


00:01:29.580 --> 00:01:34.220
- Fantastic. And you're still with JetBrains? - Still with JetBrains, yeah.


00:01:34.220 --> 00:01:39.100
- Right on. Keeping the PyCharm flowing. Right on. Prajyan, how about you?


00:01:39.100 --> 00:01:45.740
- I work at Bloomberg, although not what I'm going to talk about today is related to work.


00:01:45.740 --> 00:01:53.180
Software engineer there. Work on the Python infrastructure team. I am a maintainer on pip.


00:01:54.460 --> 00:01:57.900
I have written a Sphinx theme or two,


00:01:57.900 --> 00:02:00.860
depending on how you count the second one.


00:02:00.860 --> 00:02:04.220
I'm involved in a bunch of


00:02:04.220 --> 00:02:08.260
various efforts around Sphinx at this point.


00:02:08.260 --> 00:02:11.580
I've made myself comfortable in


00:02:11.580 --> 00:02:13.860
these spaces and made my way into


00:02:13.860 --> 00:02:17.020
the various discussion forums, I guess.


00:02:17.020 --> 00:02:18.260
>> Yeah, fantastic.


00:02:18.260 --> 00:02:20.740
>> With me, I guess, in this topic.


00:02:20.740 --> 00:02:21.340
>> Awesome.


00:02:21.340 --> 00:02:23.620
>> You seem to be the emergency maintainer of


00:02:23.620 --> 00:02:26.260
many open source projects like live reload.


00:02:26.260 --> 00:02:32.400
- Yeah, I have a mild issue of not knowing when to stop.


00:02:32.400 --> 00:02:38.320
- That's good, all right, Chris H.


00:02:38.320 --> 00:02:42.660
- Yeah, so my name is Chris Holgref.


00:02:42.660 --> 00:02:44.780
I'm the director of the International Interactive


00:02:44.780 --> 00:02:47.160
Computing Collaboration or 2i2c,


00:02:47.160 --> 00:02:50.120
which is a nonprofit that runs cloud infrastructure


00:02:50.120 --> 00:02:52.720
for interactive computing and the Jupyter ecosystem


00:02:52.720 --> 00:02:56.720
and the surrounding ecosystem alongside of it


00:02:56.720 --> 00:02:58.880
for our research and education communities.


00:02:58.880 --> 00:03:03.240
My background is largely in the Jupyter ecosystem.


00:03:03.240 --> 00:03:05.040
I've worked a lot on JupyterHub,


00:03:05.040 --> 00:03:06.880
which serves multiple Jupyter sessions


00:03:06.880 --> 00:03:09.420
via some kind of centralized cloud infrastructure.


00:03:09.420 --> 00:03:12.000
I also work a lot on the Binder project,


00:03:12.000 --> 00:03:15.600
which focuses on more scientific reproducibility


00:03:15.600 --> 00:03:18.080
and shareable computing environments


00:03:18.080 --> 00:03:21.960
in a cloud agnostic and pretty flexible manner.


00:03:21.960 --> 00:03:22.800
- Yeah, that's fantastic.


00:03:22.800 --> 00:03:24.320
For people who don't know about Minder,


00:03:24.320 --> 00:03:27.520
that's basically if you were on a GitHub repo


00:03:27.520 --> 00:03:30.020
or some published notebook that's not interactive,


00:03:30.020 --> 00:03:32.340
you can click that and it'll fire up a little environment


00:03:32.340 --> 00:03:35.960
where you can go and explore the notebook for real, right?


00:03:35.960 --> 00:03:37.320
- Yep, yeah, exactly.


00:03:37.320 --> 00:03:40.200
And so a lot of these things are kind of surrounding


00:03:40.200 --> 00:03:43.560
this general topic of scientific communication,


00:03:43.560 --> 00:03:45.160
scientific reproducibility,


00:03:45.160 --> 00:03:48.180
bringing those kind of data workflows


00:03:48.180 --> 00:03:51.160
and facilitating them with software development,


00:03:51.160 --> 00:03:52.320
which is related to a lot of the stuff


00:03:52.320 --> 00:03:54.080
we're talking about today as well.


00:03:54.080 --> 00:03:55.760
- Yeah, fantastic.


00:03:55.760 --> 00:03:58.960
You also have worked on the Mist project, right?


00:03:58.960 --> 00:04:00.880
- Yes, yeah, and one of the projects


00:04:00.880 --> 00:04:02.120
that I'm focusing on right now,


00:04:02.120 --> 00:04:04.880
along with Chris S. and a few other collaborators


00:04:04.880 --> 00:04:06.920
is called the Executable Books Project.


00:04:06.920 --> 00:04:09.120
And this is basically an attempt


00:04:09.120 --> 00:04:12.480
at improving the state of open source


00:04:12.480 --> 00:04:15.480
kind of community-driven tools in the Python ecosystem


00:04:15.480 --> 00:04:17.960
around scientific communication


00:04:17.960 --> 00:04:20.840
and building a lot on top of the Sphinx ecosystem


00:04:20.840 --> 00:04:24.000
because there's a lot of good material there to work with


00:04:24.000 --> 00:04:25.920
and a lot of improvements that can be made


00:04:25.920 --> 00:04:28.440
that'll benefit the broader Python community as well.


00:04:28.440 --> 00:04:29.280
- Yeah, yeah, very cool.


00:04:29.280 --> 00:04:31.880
Looking forward to talking about JupyterBook as well.


00:04:31.880 --> 00:04:33.640
That'll be fun.


00:04:33.640 --> 00:04:35.680
Chris Sewell, you're back.


00:04:35.680 --> 00:04:36.680
Tell us about yourself.


00:04:36.680 --> 00:04:40.040
- Yes, sorry, I was hearing double of everything


00:04:40.040 --> 00:04:40.880
(laughs)


00:04:40.880 --> 00:04:42.440
and I was like, "What the heck is going on?"


00:04:42.440 --> 00:04:44.920
And then I realized I had the YouTube tab open


00:04:44.920 --> 00:04:47.280
as well in the background.


00:04:47.280 --> 00:04:48.360
So I was hearing-- - You were your own


00:04:48.360 --> 00:04:49.200
audience member.


00:04:49.200 --> 00:04:50.560
Yes, this is not a good feeling.


00:04:50.560 --> 00:04:53.200
Yeah, exactly, I was like, what is going on here?


00:04:53.200 --> 00:04:56.000
Okay, anyway, let's not travel over.


00:04:56.000 --> 00:05:00.720
So yeah, so I work in the executive of books.


00:05:00.720 --> 00:05:04.120
I guess, essentially, my kind of focus


00:05:04.120 --> 00:05:08.920
is on providing, making the best tools for scientists


00:05:08.920 --> 00:05:11.940
to make open, reproducible science.


00:05:11.940 --> 00:05:16.940
So I work 50% of the time here in Switzerland at EPFL


00:05:17.160 --> 00:05:22.160
on a package called ANL, which is a Python workflow engine


00:05:22.160 --> 00:05:26.280
for running simulations, orchestrating simulations.


00:05:26.280 --> 00:05:28.620
And then I work the other 50% of the time


00:05:28.620 --> 00:05:32.880
in executable books on Mist and JupyterBook.


00:05:32.880 --> 00:05:34.520
- Yeah, oh, that's really fantastic.


00:05:34.520 --> 00:05:36.240
Is any of your work in Switzerland,


00:05:36.240 --> 00:05:38.600
does it have to do with CERN or other projects?


00:05:38.600 --> 00:05:41.600
- No, not to do with CERN.


00:05:41.600 --> 00:05:46.600
It's at EPFL in a group on materials discovery.


00:05:46.600 --> 00:05:48.040
- Yeah, fantastic.


00:05:48.040 --> 00:05:54.180
Quick pause, your mic is Bluetooth, right?


00:05:54.180 --> 00:05:55.560
It sounds like it's getting a lot of appearance.


00:05:55.560 --> 00:05:57.320
Could you just like turn the Bluetooth off


00:05:57.320 --> 00:06:00.040
and turn it back on and then just we'll keep going?


00:06:00.040 --> 00:06:02.920
I think that'll probably clear it up.


00:06:02.920 --> 00:06:07.920
All right, well, let's start by talking about Sphinx,


00:06:07.920 --> 00:06:08.880
I think.


00:06:08.880 --> 00:06:11.800
So when I think about Sphinx,


00:06:11.800 --> 00:06:14.200
I think about Python documentation.


00:06:14.200 --> 00:06:18.580
So who wants to sort of set the stage for Sphinx?


00:06:18.580 --> 00:06:19.420
I mean, I guess it does say


00:06:19.420 --> 00:06:22.120
the Python documentation generator,


00:06:22.120 --> 00:06:24.780
but it does more than that as well, if you want it to.


00:06:24.780 --> 00:06:29.280
So guys, what is Sphinx?


00:06:29.280 --> 00:06:30.420
When do I use this?


00:06:30.420 --> 00:06:31.320
What's its value?


00:06:31.320 --> 00:06:32.820
It's been around for a long time.


00:06:32.820 --> 00:06:33.780
- Let's do a round table.


00:06:33.780 --> 00:06:36.500
I'd love to hear everyone's elevator pitch.


00:06:36.500 --> 00:06:37.340
- Yeah, exactly.


00:06:37.340 --> 00:06:38.740
What's the elevator pitch for Sphinx?


00:06:38.740 --> 00:06:43.160
- I mean, I can start with sort of how I got into Sphinx


00:06:43.160 --> 00:06:45.280
and then maybe how I use Sphinx now,


00:06:45.280 --> 00:06:46.120
which is a little bit different


00:06:46.120 --> 00:06:47.860
from how I initially used it.


00:06:47.860 --> 00:06:48.880
I think that a lot of people,


00:06:48.880 --> 00:06:50.880
so Sphinx has been around for a really long time,


00:06:50.880 --> 00:06:53.820
and it's a really powerful tool for documentation.


00:06:53.820 --> 00:06:55.360
And a lot of people use it alongside


00:06:55.360 --> 00:06:57.640
of their software projects that they work on.


00:06:57.640 --> 00:07:00.600
So my first introduction to Sphinx was via,


00:07:00.600 --> 00:07:02.760
it was actually a neuroscience analytics package


00:07:02.760 --> 00:07:04.400
called MNE Python.


00:07:04.400 --> 00:07:06.800
And we needed documentation to describe,


00:07:06.800 --> 00:07:09.080
you know, the APIs and the functions and the classes


00:07:09.080 --> 00:07:11.560
and things like use cases and examples.


00:07:11.560 --> 00:07:13.960
And so one of the really useful things about Sphinx


00:07:13.960 --> 00:07:16.760
is that it has an inherent extensibility


00:07:16.760 --> 00:07:18.120
and a lot of flexibility


00:07:18.120 --> 00:07:19.300
so that you can both generate


00:07:19.300 --> 00:07:21.240
like narrative documentation with it,


00:07:21.240 --> 00:07:24.540
but also include programmatically generated documentation,


00:07:24.540 --> 00:07:27.360
API documentation, and that kind of thing.


00:07:27.360 --> 00:07:29.480
So it lets you kind of like more seamlessly


00:07:29.480 --> 00:07:33.160
merge together code documentation


00:07:33.160 --> 00:07:34.840
or documentation embedded within code


00:07:34.840 --> 00:07:38.000
and your more kind of traditional narrative examples,


00:07:38.000 --> 00:07:39.520
tutorials, that kind of a thing.


00:07:39.520 --> 00:07:42.240
- I see, almost like a Wiki plus


00:07:42.240 --> 00:07:46.100
an API documentation generator in one.


00:07:46.100 --> 00:07:49.200
- Yeah, plus that's been around for a long time


00:07:49.200 --> 00:07:51.180
and with an inherent extensibility.


00:07:51.180 --> 00:07:53.580
So a lot of different sub communities have kind of built out


00:07:53.580 --> 00:07:57.960
their own community specific documentation


00:07:57.960 --> 00:07:59.880
that builds on top of the kind of basic


00:07:59.880 --> 00:08:01.720
Sphinx building blocks.


00:08:01.720 --> 00:08:03.320
- Sure, I bet the scientific community


00:08:03.320 --> 00:08:04.960
has got a lot of specializations.


00:08:04.960 --> 00:08:06.560
They're like, we need to be able to express stuff


00:08:06.560 --> 00:08:08.120
like this, right?


00:08:08.120 --> 00:08:10.480
Well, so that kind of gets me to the second part


00:08:10.480 --> 00:08:13.600
of what I was gonna describe, which is I think over time,


00:08:13.600 --> 00:08:15.200
and this is one of the inspirations


00:08:15.200 --> 00:08:17.440
behind JupyterBook to some degree,


00:08:17.440 --> 00:08:19.520
is the realization that like technical


00:08:19.520 --> 00:08:23.880
and API documentation is also really useful.


00:08:23.880 --> 00:08:25.840
Well, I should say the things you need to build


00:08:25.840 --> 00:08:28.440
for really good technical and API documentation


00:08:28.440 --> 00:08:31.240
are really useful for other kinds of use cases as well.


00:08:31.240 --> 00:08:36.140
And so I saw some other groups in the scientific ecosystem.


00:08:36.140 --> 00:08:41.500
really interesting one called Sympeg, which I think is just S-I-M-P-E-G dot X-Y-Z. I'm pretty


00:08:41.500 --> 00:08:46.940
sure that's what it is. And they basically built out a whole geospatial analytics tutorial and


00:08:46.940 --> 00:08:54.940
documentation resource just built on Sphinx. And so for me, seeing that, it kind of unlocked an


00:08:54.940 --> 00:09:00.300
aha moment in my head to realize that you could also use the same documentation engine for


00:09:00.300 --> 00:09:05.500
documenting lots of other things, not just software packages and things like that. Technical


00:09:05.500 --> 00:09:08.940
is quite generic and overlaps quite a lot


00:09:08.940 --> 00:09:10.640
with like scientific documentation


00:09:10.640 --> 00:09:12.760
and scholarly documentation.


00:09:12.760 --> 00:09:15.140
And so that's the space that we've been exploring


00:09:15.140 --> 00:09:17.780
over the last couple of months and years.


00:09:17.780 --> 00:09:18.620
- Yeah, fantastic.


00:09:18.620 --> 00:09:20.460
And a lot of the outputs are super flexible.


00:09:20.460 --> 00:09:23.040
It outputs HTML, which you might host on somewhere


00:09:23.040 --> 00:09:26.860
like Read the Docs or Netlify, but also LaTeX,


00:09:26.860 --> 00:09:28.640
which is really important for publications


00:09:28.640 --> 00:09:32.320
and EPUB or eBooks and whatnot.


00:09:32.320 --> 00:09:33.480
So pretty cool.


00:09:33.480 --> 00:09:35.140
Chris, what's your elevator pitch?


00:09:35.140 --> 00:09:38.980
Chris S, sorry, gotta keep disambiguating you all.


00:09:38.980 --> 00:09:41.220
(laughing)


00:09:41.220 --> 00:09:46.360
Hey Chris, I'm sorry, but your audio


00:09:46.360 --> 00:09:47.480
has gotten a lot worse.


00:09:47.480 --> 00:09:50.920
Is there maybe, maybe try to cycle it or something


00:09:50.920 --> 00:09:53.520
and I'll ask Fred and then we'll come back to you.


00:09:53.520 --> 00:09:55.800
- Sure.


00:09:55.800 --> 00:09:59.940
(indistinct)


00:10:02.940 --> 00:10:07.060
I think Sphinx is documentation generator written in Python,


00:10:07.060 --> 00:10:12.040
primarily intended for technical documentation


00:10:12.040 --> 00:10:14.340
with the ability to sort of intertwine


00:10:14.340 --> 00:10:17.780
narrative documentation with auto-generated documentation


00:10:17.780 --> 00:10:21.440
that picks up things from your code, right?


00:10:21.440 --> 00:10:25.480
And this whole thing is combined with the ability


00:10:25.480 --> 00:10:30.480
to have a variety of output formats


00:10:30.480 --> 00:10:33.500
as well as a variety of extension points


00:10:33.500 --> 00:10:38.460
within the tooling to extend basically every aspect


00:10:38.460 --> 00:10:40.120
of building that documentation.


00:10:40.120 --> 00:10:42.800
- Interesting, yeah, so for example,


00:10:42.800 --> 00:10:44.820
testing the code snippets that you might have


00:10:44.820 --> 00:10:47.980
in your documentation or doc strings


00:10:47.980 --> 00:10:49.540
or something like that maybe.


00:10:49.540 --> 00:10:53.740
- Yep, so that is doc test and that's baked into Sphinx


00:10:53.740 --> 00:10:55.300
and Python's documentation,


00:10:55.300 --> 00:10:58.100
which happens to all be written in Sphinx.


00:10:58.100 --> 00:10:58.940
- Okay, interesting.


00:10:58.940 --> 00:11:00.220
- Or written by Sphinx.


00:11:00.220 --> 00:11:05.220
So yeah, there's a lot of this,


00:11:05.220 --> 00:11:10.040
there's a lot of capability and power


00:11:10.040 --> 00:11:12.340
hidden underneath the shell of Sphinx.


00:11:12.340 --> 00:11:14.400
And as Chris was mentioning,


00:11:14.400 --> 00:11:18.920
there's really extensive customizability here


00:11:18.920 --> 00:11:21.840
that you can then take and specialize it


00:11:21.840 --> 00:11:24.360
to your specific use cases.


00:11:24.360 --> 00:11:28.160
And that's sort of both the power and,


00:11:28.160 --> 00:11:30.160
you know, there's a con to that,


00:11:30.160 --> 00:11:32.960
which is, hey, you gotta maintain this


00:11:32.960 --> 00:11:36.220
and you gotta keep this functioning and stuff.


00:11:36.220 --> 00:11:39.280
But yeah, it's a really powerful


00:11:39.280 --> 00:11:41.560
documentation generation tool


00:11:41.560 --> 00:11:44.840
that is perhaps a little too powerful for its own good.


00:11:44.840 --> 00:11:47.320
(laughing)


00:11:47.320 --> 00:11:48.620
- Very good, very good.


00:11:48.620 --> 00:11:52.840
Yeah, so docs.python.org is generated by Sphinx, huh?


00:11:52.840 --> 00:11:54.400
- Yes.


00:11:54.400 --> 00:11:55.400
- Fantastic.


00:11:55.400 --> 00:11:57.760
All right, Chris, let's go back to you.


00:11:57.760 --> 00:11:58.600
Sorry about that.


00:11:58.600 --> 00:11:59.760
- How does it sound, man?


00:11:59.760 --> 00:12:01.400
- Fantastic, yeah, you're great.


00:12:01.400 --> 00:12:03.760
- Okay, I ditched the headphones.


00:12:03.760 --> 00:12:06.400
Yeah, I think the other point that I wanted to touch on


00:12:06.400 --> 00:12:08.760
is one of the brilliant points there on the Sphinx site


00:12:08.760 --> 00:12:13.160
is the cross-referencing capability


00:12:13.160 --> 00:12:14.520
is just second to none.


00:12:14.520 --> 00:12:16.680
You know, you can reference in a page,


00:12:16.680 --> 00:12:20.360
you can reference cross-page within your own documentation,


00:12:20.360 --> 00:12:23.600
but also, and one of the things


00:12:23.600 --> 00:12:25.240
that's really helped to build on Sphinx


00:12:25.240 --> 00:12:29.000
is the read the docs community and the work they're doing


00:12:29.000 --> 00:12:32.280
so that you can reference any other site


00:12:32.280 --> 00:12:34.760
that's built on Read the Docs as well


00:12:34.760 --> 00:12:38.940
in a really nice way.


00:12:38.940 --> 00:12:42.280
- Yeah, that's something that really surprised me


00:12:42.280 --> 00:12:44.400
when I learned about Sphinx is,


00:12:44.400 --> 00:12:47.240
give a quick shout out to Paul.


00:12:47.240 --> 00:12:50.880
Paul wrote a course that we hosted over on Talkbyline,


00:12:50.880 --> 00:12:54.160
generating static sites with Sphinx and Markdown,


00:12:54.160 --> 00:12:55.520
which is really, really cool.


00:12:55.520 --> 00:12:57.200
And one of the things that surprised me


00:12:57.200 --> 00:13:00.080
is when I think about creating multiple pages,


00:13:00.080 --> 00:13:02.320
so for example, if I'm on GitHub and I wanna have


00:13:02.320 --> 00:13:05.240
this part of some readme here,


00:13:05.240 --> 00:13:07.240
point to some other readme or some other markdown,


00:13:07.240 --> 00:13:08.840
I just go in there, I type,


00:13:08.840 --> 00:13:11.680
here's the relative path over to that thing,


00:13:11.680 --> 00:13:14.280
and I come up with the text that goes there.


00:13:14.280 --> 00:13:18.760
Sphinx allows you to have kind of an index


00:13:18.760 --> 00:13:20.820
into all the sub-elements of the page,


00:13:20.820 --> 00:13:23.880
not just the pages, but parts of the pages,


00:13:23.880 --> 00:13:26.620
headers and whatnot, and you can link to them


00:13:26.620 --> 00:13:29.260
by name, right?


00:13:29.260 --> 00:13:31.780
And so if for some reason you change the title of a header,


00:13:31.780 --> 00:13:35.900
your a tag text that you are linking to will change,


00:13:35.900 --> 00:13:37.460
which is pretty awesome, right?


00:13:37.460 --> 00:13:40.020
- Exactly, yeah.


00:13:40.020 --> 00:13:44.780
- Yeah, and also intersphinx, right?


00:13:44.780 --> 00:13:49.140
Which is a way to expose those endpoints,


00:13:49.140 --> 00:13:51.820
not as endpoints, those index points


00:13:51.820 --> 00:13:54.540
across domain or across project, right?


00:13:54.540 --> 00:13:56.620
So I could reference to something on Python


00:13:56.620 --> 00:14:00.660
in my documentation, specifically by a reference point,


00:14:00.660 --> 00:14:03.100
not by a URL, which is pretty excellent.


00:14:03.100 --> 00:14:05.500
- And I think that's a big part of why Sphinx


00:14:05.500 --> 00:14:07.260
is as adopted as it is,


00:14:07.260 --> 00:14:10.340
of like the fact that InterSphinx exists


00:14:10.340 --> 00:14:14.940
and the fact that you can very easily cross-reference


00:14:14.940 --> 00:14:18.420
bits in other parts of the ecosystem,


00:14:18.420 --> 00:14:21.260
as long as that part of the ecosystem is in Sphinx,


00:14:22.300 --> 00:14:25.480
or at least as the interspinx file generator, right?


00:14:25.480 --> 00:14:27.960
In theory, other ecosystems could,


00:14:27.960 --> 00:14:30.360
or other tooling could generate it as well.


00:14:30.360 --> 00:14:34.480
But yeah, I think that is quite capable


00:14:34.480 --> 00:14:38.240
if the fact that it's in restructured text


00:14:38.240 --> 00:14:42.720
has some fun interactions


00:14:42.720 --> 00:14:46.000
with all the linking syntaxes that exist,


00:14:46.000 --> 00:14:49.260
but it's genuinely very powerful, as I said, so.


00:14:49.260 --> 00:14:52.200
- Yeah, so let's talk about that for a little bit,


00:14:52.200 --> 00:14:56.520
Because when I thought about Sphinx originally,


00:14:56.520 --> 00:14:59.800
I always thought about restructured text.


00:14:59.800 --> 00:15:03.900
And restructured text is, it's kind of funky.


00:15:03.900 --> 00:15:06.240
I don't know, I just have a hard time getting used to it.


00:15:06.240 --> 00:15:11.120
But, you know, all those formats and whatnot,


00:15:11.120 --> 00:15:14.400
it takes some getting used to, right?


00:15:14.400 --> 00:15:17.000
You've got, let me see if I can find an example


00:15:17.000 --> 00:15:18.120
and pull up here.


00:15:18.120 --> 00:15:20.840
You know, things like dot dot image, colon colon,


00:15:20.840 --> 00:15:23.000
some other thing, and then you're sort of almost


00:15:23.000 --> 00:15:24.760
like a YAML style.


00:15:24.760 --> 00:15:27.040
And to me, when I'm writing, I feel like, wow,


00:15:27.040 --> 00:15:30.760
I would just much rather write Markdown and just


00:15:30.760 --> 00:15:32.960
blaze through this and write it nice and clean.


00:15:32.960 --> 00:15:37.320
And I'm willing to give up a little formatting or something


00:15:37.320 --> 00:15:40.440
to allow me to live in a simpler world that


00:15:40.440 --> 00:15:41.920
doesn't require so much stuff.


00:15:41.920 --> 00:15:47.120
So traditionally, restructured text


00:15:47.120 --> 00:15:49.280
has been the way of the documentation through Sphinx.


00:15:49.280 --> 00:15:53.600
It's also been like the way that you put your information


00:15:53.600 --> 00:15:56.160
on PyPI and describe it there, right?


00:15:56.160 --> 00:15:59.360
But the PyPI.org version moved over


00:15:59.360 --> 00:16:01.080
to at least support Markdown


00:16:01.080 --> 00:16:04.120
and through some of the work y'all are doing,


00:16:04.120 --> 00:16:06.920
Sphinx now has an integration layer


00:16:06.920 --> 00:16:09.260
with doing everything in Markdown as well, right?


00:16:09.260 --> 00:16:10.860
You wanna talk about that maybe?


00:16:10.860 --> 00:16:13.800
- Yeah, I think so.


00:16:13.800 --> 00:16:16.040
As Prasad mentioned,


00:16:17.600 --> 00:16:20.320
Sphinx is just incredibly powerful,


00:16:20.320 --> 00:16:23.920
but it's trying to harness that power


00:16:23.920 --> 00:16:28.920
and make it not overwhelming to kind of non-technical users.


00:16:28.920 --> 00:16:32.600
For people who want it, it's brilliant,


00:16:32.600 --> 00:16:34.880
and you can do everything under the sun,


00:16:34.880 --> 00:16:39.880
but trying to sell it to the masses, as it were,


00:16:39.880 --> 00:16:44.400
and trying to make it as easy to use as possible


00:16:44.400 --> 00:16:45.740
for simple use cases,


00:16:45.740 --> 00:16:48.420
but then having that extensibility there


00:16:48.420 --> 00:16:51.820
is I guess kind of what we've been looking at


00:16:51.820 --> 00:16:53.340
in the executive books.


00:16:53.340 --> 00:16:57.040
And with this, with the markdown,


00:16:57.040 --> 00:17:00.980
most everyone now knows about markdown,


00:17:00.980 --> 00:17:02.620
common mark, how to--


00:17:02.620 --> 00:17:05.500
- Right, we've got GitHub and Stack Overflow


00:17:05.500 --> 00:17:07.740
have basically forced the software development community


00:17:07.740 --> 00:17:08.940
to understand it, right?


00:17:08.940 --> 00:17:14.140
- Exactly, for whether people love it or hate it,


00:17:14.140 --> 00:17:16.100
it's there and you know it.


00:17:16.100 --> 00:17:20.820
So being able to just copy and paste things


00:17:20.820 --> 00:17:23.500
from your GitHub or Stack Overflow


00:17:23.500 --> 00:17:27.360
or just write something that's quite intuitive to write.


00:17:27.360 --> 00:17:33.300
That's what we're really trying to get at,


00:17:33.300 --> 00:17:36.820
trying to hide almost some of the intricacies of Sphinx,


00:17:36.820 --> 00:17:40.940
making more user-friendly on the front end.


00:17:40.940 --> 00:17:41.920
- Okay, great.


00:17:43.380 --> 00:17:45.660
What do you guys got to add to this restructured text


00:17:45.660 --> 00:17:48.420
markdown duality here?


00:17:48.420 --> 00:17:50.740
- I think it's an interesting duality.


00:17:50.740 --> 00:17:55.740
And I missed my, I don't know how to say this.


00:17:55.740 --> 00:17:59.660
I find this, when I first discovered this,


00:17:59.660 --> 00:18:02.500
I was really fascinated 'cause I was like,


00:18:02.500 --> 00:18:05.340
hey, this looks cool.


00:18:05.340 --> 00:18:07.620
This looks like a really good,


00:18:07.620 --> 00:18:11.700
I found it especially amusing to see how


00:18:13.340 --> 00:18:18.340
Mist, let's pick one phrasing, I guess.


00:18:18.340 --> 00:18:21.360
I really liked how Mist ends up reconciling


00:18:21.360 --> 00:18:24.960
the complexity or power, depending on how you look at it,


00:18:24.960 --> 00:18:29.420
of Sphinx and sort of fitting that into Markdown and not,


00:18:29.420 --> 00:18:34.680
and having it still look like it belongs there, right?


00:18:34.680 --> 00:18:38.440
'Cause there's a whole bunch of, well, directives, roles,


00:18:38.440 --> 00:18:40.040
or whatever you wanna call them,


00:18:41.320 --> 00:18:44.360
that, well, you can use to manipulate the text


00:18:44.360 --> 00:18:48.160
and include things and have those extensible points.


00:18:48.160 --> 00:18:51.040
- Right, because Markdown is not nearly sophisticated


00:18:51.040 --> 00:18:53.760
enough to handle things like inter-Sphinx


00:18:53.760 --> 00:18:58.160
and these other types of constructs that's in Sphinx, right?


00:18:58.160 --> 00:19:02.400
- Yes, so like one example of this would be the ability


00:19:02.400 --> 00:19:04.220
to have the cards that you're showing


00:19:04.220 --> 00:19:05.840
on the screen at the moment, right?


00:19:05.840 --> 00:19:10.000
Like the closest thing you can do for that


00:19:10.000 --> 00:19:14.580
in Markdown would probably be embed a bunch of HTML.


00:19:14.580 --> 00:19:16.020
- Yeah, yeah, batter tables


00:19:16.020 --> 00:19:17.860
when you get basically no styling there,


00:19:17.860 --> 00:19:21.420
like it's not cards, it's all jammed together in a table.


00:19:21.420 --> 00:19:22.260
But yeah.


00:19:22.260 --> 00:19:24.260
- Yeah, and even when you have the ability


00:19:24.260 --> 00:19:27.340
to have inline sort of markup


00:19:27.340 --> 00:19:29.780
of markup that's in the same line


00:19:29.780 --> 00:19:31.820
as the paragraph that you're writing in,


00:19:31.820 --> 00:19:33.920
you have a very limited set of those, right?


00:19:33.920 --> 00:19:37.180
Like bold, italics, underlines, maybe strikes


00:19:37.180 --> 00:19:41.980
if the platform you're using supports it and stuff like that.


00:19:41.980 --> 00:19:45.940
But with Mist or Restructured Text or whatever,


00:19:45.940 --> 00:19:47.980
you have a lot more capability there.


00:19:47.980 --> 00:19:48.580
>> Yeah.


00:19:48.580 --> 00:19:50.280
>> You impart to Sphinx,


00:19:50.280 --> 00:19:55.060
you impart to DocuTools which is what implements the Restructured Text.


00:19:55.060 --> 00:19:56.340
>> Format?


00:19:56.340 --> 00:19:56.740
>> Yes.


00:19:56.740 --> 00:19:57.100
>> Yeah.


00:19:57.100 --> 00:20:00.620
>> Yeah. Markup language.


00:20:00.620 --> 00:20:07.100
>> Sure. On this particular point of the power expressing itself into Markdown,


00:20:07.100 --> 00:20:11.780
I've enjoyed watching Chris and Chris over the years iterate through this.


00:20:11.780 --> 00:20:18.340
Roll some things out, realize, wait, you know, it's better in tooling


00:20:18.340 --> 00:20:22.280
if we do a triple colon instead of a triple back tick


00:20:22.280 --> 00:20:25.880
because the body of the directive can then be rendered


00:20:25.880 --> 00:20:29.200
by some inline viewer or something.


00:20:29.200 --> 00:20:32.380
So I'd be interested in hearing Chris and Chris talk a little bit


00:20:32.380 --> 00:20:36.040
about your voyage of discovery for, you know,


00:20:36.040 --> 00:20:38.200
What's the gestalt of Markdown?


00:20:38.200 --> 00:20:43.240
- So, yeah, it's interesting.


00:20:43.240 --> 00:20:47.560
So obviously, well, with JupyterBook and things,


00:20:47.560 --> 00:20:50.080
we're very much focused on, you know,


00:20:50.080 --> 00:20:52.280
in these, in Jupyter notebooks,


00:20:52.280 --> 00:20:53.640
you have the Markdown cells,


00:20:53.640 --> 00:20:55.560
everything is written in Markdown,


00:20:55.560 --> 00:21:00.140
and that historically has a single kind of renderer


00:21:00.140 --> 00:21:01.380
that renders things.


00:21:02.720 --> 00:21:07.720
So trying to harness the simplicity of Markdown


00:21:07.720 --> 00:21:12.180
and trying to make it look nice as you're writing


00:21:12.180 --> 00:21:16.860
and it doesn't look like a complete mess


00:21:16.860 --> 00:21:19.140
within these Markdown cells,


00:21:19.140 --> 00:21:22.820
whilst still having the capabilities


00:21:22.820 --> 00:21:24.660
of like a restructured text


00:21:24.660 --> 00:21:28.060
has been an interesting challenge.


00:21:28.060 --> 00:21:30.580
So obviously we had this,


00:21:30.580 --> 00:21:35.580
we wanted to make the missed format kind of degradable


00:21:35.580 --> 00:21:40.500
to Common Mark so that it can be passed normally


00:21:40.500 --> 00:21:43.820
as with a normal markdown parser,


00:21:43.820 --> 00:21:46.820
although it wouldn't know what to do with things like notes


00:21:46.820 --> 00:21:51.140
and all these other directives and roles


00:21:51.140 --> 00:21:54.180
that you can have within Sphinx.


00:21:54.180 --> 00:21:59.060
But at the same time, yeah, have all the capabilities.


00:21:59.060 --> 00:22:03.560
So it's a hard balancing act, I'd say.


00:22:03.560 --> 00:22:06.540
I'm trying to just say,


00:22:06.540 --> 00:22:09.540
here's all of these roles and directives.


00:22:09.540 --> 00:22:10.820
- You don't want to spoil the simplicity


00:22:10.820 --> 00:22:12.180
of Markdown though, right?


00:22:12.180 --> 00:22:14.580
- It's, yeah, exactly.


00:22:14.580 --> 00:22:18.880
It's having the readability of the source text, essentially,


00:22:18.880 --> 00:22:22.780
weighing that against the flexibility


00:22:22.780 --> 00:22:26.300
of actually making these lovely HTML pages.


00:22:26.300 --> 00:22:27.620
- Right, exactly.


00:22:27.620 --> 00:22:29.540
Chris H., you want to add something to that?


00:22:29.540 --> 00:22:31.500
- Yeah, I mean, I think that the interesting thing


00:22:31.500 --> 00:22:34.580
about Markdown and probably something that we should clarify


00:22:34.580 --> 00:22:38.020
for some of the people here is that there is no one Markdown.


00:22:38.020 --> 00:22:40.580
- Yes, that surprised me, I didn't know like that.


00:22:40.580 --> 00:22:44.100
- Yeah, I mean, there's like, you know Markdown


00:22:44.100 --> 00:22:47.220
when you see it, but there is no like canonical Markdown.


00:22:47.220 --> 00:22:49.100
The closest thing to a standard that exists


00:22:49.100 --> 00:22:51.460
is common Markdown, which is like an attempted


00:22:51.460 --> 00:22:54.880
standardization across a few different communities.


00:22:54.880 --> 00:22:56.360
But over the years, what we've seen,


00:22:56.360 --> 00:22:59.160
whether it's Stack Overflow or GitHub or whatever,


00:22:59.160 --> 00:23:01.060
basically people want to extend Common Mark


00:23:01.060 --> 00:23:02.500
in a couple of ways.


00:23:02.500 --> 00:23:07.200
So they add in a new couple of syntax features to support,


00:23:07.200 --> 00:23:10.400
and they have then created a new flavor of Markdown.


00:23:10.400 --> 00:23:12.680
So people often talk about Markdown in terms of flavors,


00:23:12.680 --> 00:23:15.980
like what functionality do you want to turn on?


00:23:15.980 --> 00:23:17.780
What functionality do you want to turn off?


00:23:17.780 --> 00:23:21.320
And there are a couple of nice like renders and parsers,


00:23:21.320 --> 00:23:23.860
and for example, the JavaScript world that will let you


00:23:23.860 --> 00:23:28.760
enable extensions in Markdown to turn on and off different kinds of syntax.


00:23:28.760 --> 00:23:31.860
And so what's interesting about Mist is that


00:23:31.860 --> 00:23:36.340
it's intentionally trying to create a privileged extension point,


00:23:36.340 --> 00:23:41.040
either for block-level writing or for inline writing,


00:23:41.040 --> 00:23:44.780
in part with the goal that you don't have to create a new flavor of Markdown


00:23:44.780 --> 00:23:48.940
if you want to extend Markdown's functionality in a new direction.


00:23:48.940 --> 00:23:52.780
And I think it's going to create an interesting question of,


00:23:52.780 --> 00:23:55.140
"Okay, you've created a new extension point,


00:23:55.140 --> 00:24:00.020
but you want to have some kind of reliability or knowledge


00:24:00.020 --> 00:24:02.020
that your document's going to behave the same


00:24:02.020 --> 00:24:05.080
in one implementation of a missed render


00:24:05.080 --> 00:24:07.740
or a missed parser versus another implementation."


00:24:07.740 --> 00:24:10.420
So there's an extra sort of interesting standards question


00:24:10.420 --> 00:24:14.160
of, okay, if a directive is infinitely extensible, right?


00:24:14.160 --> 00:24:18.340
It's basically like a Python function, but in Markdown,


00:24:18.340 --> 00:24:21.500
is there some like minimal subset of directives


00:24:21.500 --> 00:24:24.300
that you want to support as a part of core mist,


00:24:24.300 --> 00:24:26.540
so that if it's a mist parser for Sphinx


00:24:26.540 --> 00:24:29.340
or a mist parser for an HTML website


00:24:29.340 --> 00:24:31.580
or for some other documentation engine,


00:24:31.580 --> 00:24:34.220
that you know that they'll behave similarly.


00:24:34.220 --> 00:24:35.300
- That is a big challenge.


00:24:35.300 --> 00:24:37.840
A quick question from the audience.


00:24:37.840 --> 00:24:40.520
Ryan asked, does GitHub use their own version


00:24:40.520 --> 00:24:42.380
or do they use Common Mark?


00:24:42.380 --> 00:24:45.980
- They use GitHub flavored markdown, G-F-M.


00:24:45.980 --> 00:24:47.900
(laughing)


00:24:47.900 --> 00:24:50.860
- Which is a super set of Common Mark?


00:24:50.860 --> 00:24:52.700
- Yes. - It is indeed, yes.


00:24:52.700 --> 00:24:56.580
It's got, it now has, I mean, I think if you can Google it,


00:24:56.580 --> 00:24:58.140
I guess, GitHub, open markdown,


00:24:58.140 --> 00:25:00.420
it has its own specification,


00:25:00.420 --> 00:25:05.100
which is built on top of the Common Mark specification.


00:25:05.100 --> 00:25:09.780
- And it's different as well.


00:25:09.780 --> 00:25:13.260
- Yeah, yeah, and it adds a few extensions,


00:25:13.260 --> 00:25:16.660
a few slightly different things, but like tables.


00:25:16.660 --> 00:25:17.500
- Right.


00:25:17.500 --> 00:25:20.340
- Funnily enough, it's not in Common Mark,


00:25:20.340 --> 00:25:22.940
which is quite a basic thing, but that is not in Common Mark.


00:25:22.940 --> 00:25:25.140
That's only in GitHub flavored markdown.


00:25:25.140 --> 00:25:26.140
- Yeah.


00:25:26.140 --> 00:25:33.420
- Yeah, Common Mark was avoiding the politics of what it got to get it to where it got.


00:25:33.420 --> 00:25:39.140
There was a decent amount of, "Oh, this has to be maximally compliant.


00:25:39.140 --> 00:25:41.940
Like, this has to be the thing that works everywhere."


00:25:41.940 --> 00:25:46.140
- A minimum functionality, the maximum reach sort of story, right?


00:25:46.140 --> 00:25:51.340
Yeah, and they sort of went, okay, what works basically everywhere?


00:25:51.340 --> 00:25:53.820
And that's sort of what ended up becoming Common Mark.


00:25:53.820 --> 00:25:57.380
So any effort to like, oh, how about we extend this


00:25:57.380 --> 00:26:00.820
has sort of not gone very well so far.


00:26:00.820 --> 00:26:02.820
Sure.


00:26:02.820 --> 00:26:08.220
So I do want to give a quick shout out to this app I came across recently


00:26:08.220 --> 00:26:10.940
called Typora for writing Markdown.


00:26:10.940 --> 00:26:14.940
And one of the things I think is interesting, the reason I'm bringing it up is it has


00:26:14.940 --> 00:26:18.780
the standard Markdown stuff, but it also has like inline bits for like


00:26:18.780 --> 00:26:25.260
mathematics and other stuff like diagrams and whatnot. And this is the kind of stuff you're


00:26:25.260 --> 00:26:31.900
talking about, Chris, right? Where you want to take the core, but there's ways to extend it in


00:26:31.900 --> 00:26:37.500
Mist, right? - Yeah, I mean, that's the beauty of Python, right? Or a lot of languages where you can


00:26:37.500 --> 00:26:43.980
define functions is that you can show a lot more creativity and add extra functionality


00:26:43.980 --> 00:26:46.540
in a very intentional, structured way, right?


00:26:46.540 --> 00:26:49.060
So that it's easier for you to replicate other people's work


00:26:49.060 --> 00:26:50.940
and build on top of it and things like that.


00:26:50.940 --> 00:26:52.320
And so in some ways,


00:26:52.320 --> 00:26:54.380
that's how I think about directives and roles


00:26:54.380 --> 00:26:56.100
is it's like bringing functions,


00:26:56.100 --> 00:26:58.620
but into a realm where you're dealing with like


00:26:58.620 --> 00:27:02.540
human written text or code that is like interpreted,


00:27:02.540 --> 00:27:03.580
but inside of, you know,


00:27:03.580 --> 00:27:05.420
these little directives and things like that,


00:27:05.420 --> 00:27:08.500
which just opens up a lot of extra room for creativity


00:27:08.500 --> 00:27:10.820
and trying out different kinds of things.


00:27:10.820 --> 00:27:13.420
- I guess because we're gonna mention this a bunch,


00:27:13.420 --> 00:27:18.420
in sort of Sphinx glossary or terminology,


00:27:18.420 --> 00:27:21.680
directives are essentially a block of text


00:27:21.680 --> 00:27:23.840
that you're all saying.


00:27:23.840 --> 00:27:26.840
It also has this characteristic associated with it.


00:27:26.840 --> 00:27:31.000
Like, hey, present this in like a notebox or whatever.


00:27:31.000 --> 00:27:33.640
Whereas a role would probably be something in line,


00:27:33.640 --> 00:27:35.320
like, hey, make this bold,


00:27:35.320 --> 00:27:39.320
or hey, this is actually a link to another thing


00:27:39.320 --> 00:27:40.460
and stuff like that.


00:27:40.460 --> 00:27:43.700
in case folks who are listening aren't familiar,


00:27:43.700 --> 00:27:44.980
this would probably be helpful.


00:27:44.980 --> 00:27:46.980
Although I wish we had said this sooner.


00:27:46.980 --> 00:27:50.300
- Yeah, coming from the front end world,


00:27:50.300 --> 00:27:54.480
I'm a kind of a refugee from Gatsby,


00:27:54.480 --> 00:28:01.340
in which Markdown is almost like a database format,


00:28:01.340 --> 00:28:02.820
large structure.


00:28:02.820 --> 00:28:07.820
But when it comes to Markdown and extension points


00:28:08.180 --> 00:28:12.420
and things like that, oh my God,


00:28:12.420 --> 00:28:14.900
the monkey business they jump through


00:28:14.900 --> 00:28:18.420
to try and get information from the document


00:28:18.420 --> 00:28:21.860
to the extension point or whatever.


00:28:21.860 --> 00:28:24.460
And they all have to invent their own little mechanism


00:28:24.460 --> 00:28:27.820
for packing stuff into the space


00:28:27.820 --> 00:28:31.580
after the code fence invocation.


00:28:31.580 --> 00:28:34.140
It's just clearly obvious that they need something


00:28:34.140 --> 00:28:39.140
like what Myst has done, which is a consistent syntax


00:28:39.140 --> 00:28:43.380
that just hands things over to restructured text directives.


00:28:43.380 --> 00:28:47.740
Right, yeah, I think that's--


00:28:47.740 --> 00:28:48.580
Yeah, go ahead.


00:28:48.580 --> 00:28:50.920
- I was just gonna say, I think that the,


00:28:50.920 --> 00:28:55.000
I think what's interesting about Sphinx and Docutils


00:28:55.000 --> 00:28:57.940
is that intermediate document model that exists,


00:28:57.940 --> 00:29:00.200
which I think is something that differentiates it


00:29:00.200 --> 00:29:03.620
from a lot of other like markdown parsers and renders


00:29:03.620 --> 00:29:04.460
that are out there.


00:29:04.460 --> 00:29:07.660
I think a lot of the, like a lot of static website generators


00:29:07.660 --> 00:29:11.540
they're effectively going from blobs of Markdown


00:29:11.540 --> 00:29:14.960
mapped onto blobs of HTML as a sort of like heuristic,


00:29:14.960 --> 00:29:17.920
like it's a very programmatic output kind of a thing.


00:29:17.920 --> 00:29:20.280
And actually the original version of JupyterBuck


00:29:20.280 --> 00:29:22.780
maybe like two and a half years old now,


00:29:22.780 --> 00:29:25.180
it was a wrapper around Jekyll,


00:29:25.180 --> 00:29:27.180
the Jekyll website generator.


00:29:27.180 --> 00:29:29.840
But because Jekyll was fundamentally just doing,


00:29:29.840 --> 00:29:33.580
you know, blobs of Markdown to blobs of HTML,


00:29:33.580 --> 00:29:36.780
there wasn't that intermediate rich document representation


00:29:36.780 --> 00:29:39.100
where you can do things like resolve cross-references


00:29:39.100 --> 00:29:41.360
and collect bibliographic entries


00:29:41.360 --> 00:29:44.760
and collect equation and figure labels


00:29:44.760 --> 00:29:47.120
so that you can refer to them elsewhere.


00:29:47.120 --> 00:29:51.300
And once you add that extra model in,


00:29:51.300 --> 00:29:53.180
it gives you a lot of extra,


00:29:53.180 --> 00:29:55.660
I think that's where a lot of that extra power


00:29:55.660 --> 00:29:58.780
and complexity comes from in the Sphinx ecosystem.


00:29:58.780 --> 00:30:01.920
And so in some ways, missed markdown is just like,


00:30:01.920 --> 00:30:04.940
it's almost like a front end on a user side.


00:30:04.940 --> 00:30:06.980
It's just giving you, at least in my opinion,


00:30:06.980 --> 00:30:11.980
a more user-friendly entry point into the Sphinx ecosystem.


00:30:11.980 --> 00:30:15.340
- Now, most times you just wanna write straight markdown,


00:30:15.340 --> 00:30:16.960
but every now and then you need something


00:30:16.960 --> 00:30:19.700
like one of these references over to another part


00:30:19.700 --> 00:30:23.140
of the site, or you need more control.


00:30:23.140 --> 00:30:26.100
And so Mist has this ability to say,


00:30:26.100 --> 00:30:29.660
kind of like run some inline restructured text here, right?


00:30:29.660 --> 00:30:34.660
that as well as the ability to just hook into the thing


00:30:34.660 --> 00:30:38.960
that restructured text would, right?


00:30:38.960 --> 00:30:40.180
So that would be the directive.


00:30:40.180 --> 00:30:43.480
So you can embed restructured text in line,


00:30:43.480 --> 00:30:47.140
but that's usually not what you need to do or want to do.


00:30:47.140 --> 00:30:50.760
Usually you're just able to directly use the thing


00:30:50.760 --> 00:30:52.020
that you wanted to use.


00:30:52.020 --> 00:30:53.380
So yeah, there you go.


00:30:53.380 --> 00:30:57.640
- Okay, so you would go and write some Python code


00:30:57.640 --> 00:30:59.800
to process one of these directives,


00:30:59.800 --> 00:31:01.680
that's pretty excellent.


00:31:01.680 --> 00:31:04.560
- Yeah, and a bunch of these directives exist already


00:31:04.560 --> 00:31:07.820
in, well, Sphinx, essentially.


00:31:07.820 --> 00:31:12.120
And you can just reuse them as you would


00:31:12.120 --> 00:31:15.720
in restructured text in Mist,


00:31:15.720 --> 00:31:18.480
except with a slightly different syntax


00:31:18.480 --> 00:31:21.520
because you're operating in a different markup language now.


00:31:21.520 --> 00:31:22.360
- Sure.


00:31:22.360 --> 00:31:25.680
- Yeah, so, sorry.


00:31:25.680 --> 00:31:30.180
So the terminology they use is interpreted text.


00:31:30.180 --> 00:31:32.560
So it's just a block of text,


00:31:32.560 --> 00:31:36.800
and here's the name of the class function


00:31:36.800 --> 00:31:38.840
that is gonna interpret this.


00:31:38.840 --> 00:31:43.840
And here's maybe some options to help it interpret it.


00:31:43.840 --> 00:31:45.860
And then it can do what it wants with it.


00:31:45.860 --> 00:31:46.700
- Nice.


00:31:46.700 --> 00:31:50.760
So does MISC come with a bunch of these extensions already


00:31:50.760 --> 00:31:54.240
that you can use like for maybe like scientific graphs


00:31:54.240 --> 00:31:56.700
or things like that that you can pull in?


00:31:56.700 --> 00:31:59.240
Or where do I find more of these


00:31:59.240 --> 00:32:01.040
if I don't wanna write them myself?


00:32:01.040 --> 00:32:05.520
- So one of the goals of the Jupyter book project


00:32:05.520 --> 00:32:07.640
is trying to bring in functionality


00:32:07.640 --> 00:32:09.400
from the Jupyter ecosystem


00:32:09.400 --> 00:32:13.160
around interactive computational document models,


00:32:13.160 --> 00:32:15.980
like IPy and the Jupyter notebook files,


00:32:15.980 --> 00:32:19.280
and also kernels that can run arbitrary,


00:32:19.280 --> 00:32:22.200
usually data centric code for visualizations


00:32:22.200 --> 00:32:29.400
analysis and things like that, where those code will generate outputs like PNG images or HTML,


00:32:29.400 --> 00:32:34.440
interactive visualizations or tables with statistical analyses in them and that sort of


00:32:34.440 --> 00:32:40.360
stuff. And so one of the goals of the executable books project is also to build sort of entry


00:32:40.360 --> 00:32:48.600
points for the Jupyter ecosystem into Sphinx and into Mist Markdown. So you can kind of get the


00:32:48.600 --> 00:32:54.040
complexity of the PyData ecosystem or the R ecosystem or the Julia ecosystem,


00:32:54.040 --> 00:33:01.480
but with the ability to embed that into a documentation narrative structure as well.


00:33:01.480 --> 00:33:06.600
So I think that's where a lot of the scientific use cases come from, is using scientific code


00:33:06.600 --> 00:33:13.320
that gets executed alongside of your documentation build in a programmatic fashion, and where those


00:33:13.320 --> 00:33:18.440
outputs of the code are then inserted into your document in a way that, from a reader's perspective,


00:33:18.440 --> 00:33:22.120
looks like it's just part of the narrative flow of everything else that was there.


00:33:22.120 --> 00:33:28.120
Right, that's fantastic. So maybe tell people a bit about the JupyterBook project itself.


00:33:28.120 --> 00:33:34.280
It's an open source project for building beautiful publication quality books and documentation,


00:33:34.280 --> 00:33:39.240
as you said, from sort of taking the code in the notebook and generating the output,


00:33:39.240 --> 00:33:45.480
like some of the graphs and whatnot, in a live way. But it sounds fascinating. Maybe,


00:33:46.680 --> 00:33:48.760
when would I use it? Tell people a bit about that.


00:33:48.760 --> 00:33:54.200
Yeah, I mean, I think that the simplest, I mean, from a technical standpoint, since we're kind of


00:33:54.200 --> 00:33:59.480
riffing off of Sphinx, JupyterBook is a distribution of Sphinx. It's basically a collection of


00:33:59.480 --> 00:34:05.240
pre-configured Sphinx extensions, some of which are developed by the executable books team and


00:34:05.240 --> 00:34:10.440
community, others of which have been developed by the broader Sphinx community and that are just


00:34:10.440 --> 00:34:18.040
reused and contributed upstream to by people in executive books. And those extensions have been


00:34:18.040 --> 00:34:24.600
chosen to sort of all feed into this use case of scientific and technical documentation. So things


00:34:24.600 --> 00:34:30.840
like Sphinx Contrib BibTeX is a bibliography and citation extension in Sphinx. And that's


00:34:30.840 --> 00:34:35.480
activated automatically with Jupyter book. - Right on. Because of course you're gonna need


00:34:35.480 --> 00:34:39.560
that. And you want something like Evernote that's gonna pull from some source that's always,


00:34:39.560 --> 00:34:41.960
like I always quote this article or something, right?


00:34:41.960 --> 00:34:47.320
Yeah, I mean, just, you know, it's like a, it's a use case that's not built into core Sphinx,


00:34:47.320 --> 00:34:51.400
like having references and citations and bibliographies. And so it pulls that


00:34:51.400 --> 00:34:57.800
workflow into Sphinx via an extension. So JupyterBook is kind of a collection of these extensions,


00:34:57.800 --> 00:35:03.400
and then wrapped in a command line interface and a configuration structure that's a little bit more


00:35:03.400 --> 00:35:06.600
user friendly. I think that's one of the things about Sphinx is that at least historically,


00:35:06.600 --> 00:35:11.880
it has tended to be both developed by and catered to the developer community,


00:35:11.880 --> 00:35:16.360
which is a little bit different from the scientific community. A lot of scientists


00:35:16.360 --> 00:35:22.280
know just enough code to be dangerous with, myself included, and are often not as familiar


00:35:22.280 --> 00:35:27.720
with traditional software development workflows. And so things like JupyterBook is configurable


00:35:27.720 --> 00:35:33.240
with a YAML file rather than with, in Sphinx, the default configuration is with a conf.py file.


00:35:35.240 --> 00:35:37.240
So a little quality of life improvements


00:35:37.240 --> 00:35:39.560
to make it a little bit easier for people to get started


00:35:39.560 --> 00:35:43.360
with this more opinionated distribution of Sphinx.


00:35:43.360 --> 00:35:45.120
- Yeah, sounds like a, yeah,


00:35:45.120 --> 00:35:47.120
what a fascinating resource for people.


00:35:47.120 --> 00:35:49.280
And I meant EndNote, not Evernote, sorry.


00:35:49.280 --> 00:35:51.580
That's the one used for references.


00:35:51.580 --> 00:35:54.820
There's some good questions in the audience


00:35:54.820 --> 00:35:56.720
I wanna ask you all, but before we do,


00:35:56.720 --> 00:35:59.680
I wanna ask about Mist just a little bit more.


00:35:59.680 --> 00:36:01.280
So Mist looks really interesting


00:36:01.280 --> 00:36:04.760
and it looks like it allows me to do much more,


00:36:04.760 --> 00:36:07.360
many more powerful things with Markdown


00:36:07.360 --> 00:36:09.440
than just straight Markdown.


00:36:09.440 --> 00:36:13.600
Right now for when I'm in my code, like say on the website,


00:36:13.600 --> 00:36:15.540
it might have to take some Markdown content


00:36:15.540 --> 00:36:17.240
and turn it into a page or something.


00:36:17.240 --> 00:36:19.520
I'm just using something like Markdown 2


00:36:19.520 --> 00:36:23.480
or one of the arbitrary just Markdown parsers.


00:36:23.480 --> 00:36:27.160
Does this make sense as something to run


00:36:27.160 --> 00:36:28.760
sort of live in your application


00:36:28.760 --> 00:36:32.920
rather than a publication generation story?


00:36:34.160 --> 00:36:36.560
Like, would it make sense to replace just using that,


00:36:36.560 --> 00:36:38.080
that one function from that library


00:36:38.080 --> 00:36:39.920
and then allow me to write like directives


00:36:39.920 --> 00:36:41.960
that do more for the site, for example?


00:36:41.960 --> 00:36:47.780
- Not exactly sure what you're asking.


00:36:47.780 --> 00:36:51.100
- Well, I think what Michael wants is the layer under Mist.


00:36:51.100 --> 00:36:53.320
- Yeah, probably.


00:36:53.320 --> 00:36:55.740
- There is a parser inspired by,


00:36:55.740 --> 00:36:59.560
I guess the JavaScript parser written by Chris and Chris.


00:36:59.560 --> 00:37:01.460
It was actually the way I found Mist


00:37:01.460 --> 00:37:04.880
when I was looking at Mistune and Mistletoe.


00:37:04.880 --> 00:37:09.140
And so, yes, there's a wonderful parser


00:37:09.140 --> 00:37:12.380
that lets you hand it strings and you get back markdown.


00:37:12.380 --> 00:37:13.540
- Yeah.


00:37:13.540 --> 00:37:16.140
You hand it markdown and you get HTML, you mean?


00:37:16.140 --> 00:37:16.980
- Sorry, yeah.


00:37:16.980 --> 00:37:17.820
- Yeah, that's what I want.


00:37:17.820 --> 00:37:19.580
- You get HTML. - Yeah, yeah, exactly.


00:37:19.580 --> 00:37:23.740
What I want is a nice way to have richer markdown


00:37:23.740 --> 00:37:27.180
in an application, in production,


00:37:27.180 --> 00:37:29.900
not just as something that I run,


00:37:29.900 --> 00:37:31.460
like a build process against?


00:37:31.460 --> 00:37:35.660
- So there's a bunch of, I guess, parsers for Mist.


00:37:35.660 --> 00:37:38.220
There's an implementation in Python.


00:37:38.220 --> 00:37:40.700
There's an implementation in JavaScript.


00:37:40.700 --> 00:37:42.740
If-- - Yeah, work in progress.


00:37:42.740 --> 00:37:44.740
- I don't know, so I take that as a yes.


00:37:44.740 --> 00:37:49.400
So yeah, there's multiple implementations of that


00:37:49.400 --> 00:37:51.780
and you can integrate that into an application


00:37:51.780 --> 00:37:53.320
if you wanted to.


00:37:53.320 --> 00:37:57.580
- So I think this is where we're working


00:37:57.580 --> 00:38:07.500
on this kind of Mist specification of what would be core Mist, as in what can we parse


00:38:07.500 --> 00:38:14.260
not just in Sphinx, but with other kinds of parsers, and you say embed it into applications.


00:38:14.260 --> 00:38:21.300
So one of the things we've been working on, say, is this JavaScript application for Mist.


00:38:21.300 --> 00:38:28.540
And one of the nice things, firstly, about how we use Mist with Sphinx in the Python


00:38:28.540 --> 00:38:36.240
world is that it uses Markdown.py, which is a Python implementation of Markdown.ip, which


00:38:36.240 --> 00:38:41.940
is a JavaScript package for passing Markdown.


00:38:41.940 --> 00:38:48.500
So on both sides, in Python and in JavaScript, we can use exactly the same, essentially,


00:38:48.500 --> 00:38:52.160
exactly the same code, pass exactly the same.


00:38:52.160 --> 00:38:53.700
So then we're working on this markdown


00:38:53.700 --> 00:38:58.580
at docuTils in JavaScript to see if we can bring


00:38:58.580 --> 00:39:02.380
as much of the functionality,


00:39:02.380 --> 00:39:04.780
probably not all of the functionality of Sphinx


00:39:04.780 --> 00:39:07.060
into also the JavaScript world,


00:39:07.060 --> 00:39:09.980
where obviously that's what you need


00:39:09.980 --> 00:39:13.260
if you wanna be able to do anything kind of live


00:39:13.260 --> 00:39:14.860
without a backend or anything.


00:39:14.860 --> 00:39:15.820
- Runtime, yeah.


00:39:16.940 --> 00:39:20.080
- Okay, exciting to hear you all are working on it.


00:39:20.080 --> 00:39:21.780
All right, let's bring this maybe back


00:39:21.780 --> 00:39:22.940
to the documentation side.


00:39:22.940 --> 00:39:24.700
Right now the audience asks,


00:39:24.700 --> 00:39:27.860
could we describe the whole process


00:39:27.860 --> 00:39:30.080
that a missed document goes through


00:39:30.080 --> 00:39:32.580
before it becomes an HTML document?


00:39:32.580 --> 00:39:36.740
Like sort of what happens to my inputs


00:39:36.740 --> 00:39:40.020
to get either the HTML or the EPUB or whatever I get?


00:39:40.020 --> 00:39:44.700
- Okay, so essentially,


00:39:44.700 --> 00:39:47.620
So you have your markdown text file.


00:39:47.620 --> 00:39:51.600
Markdown, we then pass it,


00:39:51.600 --> 00:39:54.840
as I just mentioned, with markdown in Py,


00:39:54.840 --> 00:39:58.020
which turns it into a bunch of syntax tokens.


00:39:58.020 --> 00:40:04.100
And then we take them tokens


00:40:04.100 --> 00:40:09.100
and we convert them into the docutils_ast syntax tree,


00:40:11.940 --> 00:40:15.680
which is what Sphinx works with.


00:40:15.680 --> 00:40:19.440
So, and then as we're converting that


00:40:19.440 --> 00:40:22.520
into the DocuTils AST,


00:40:22.520 --> 00:40:23.620
the Sphinx works with,


00:40:23.620 --> 00:40:27.780
we're running all of these directives and these roles,


00:40:27.780 --> 00:40:32.400
this interpreted text against all of the functions,


00:40:32.400 --> 00:40:34.360
the extensions within the,


00:40:34.360 --> 00:40:36.800
been loaded within Sphinx.


00:40:36.800 --> 00:40:41.800
And we end up with this nice syntax tree,


00:40:41.800 --> 00:40:45.480
a Python thing with nodes.


00:40:45.480 --> 00:40:52.080
And then we say to Sphinx, there you go, take it away.


00:40:52.080 --> 00:40:55.040
- Traditionally Sphinx has gone through


00:40:55.040 --> 00:40:57.880
some sort of restructured text process to generate that.


00:40:57.880 --> 00:40:59.040
And you're like, we're gonna generate that


00:40:59.040 --> 00:41:00.540
and give it to you in a different way.


00:41:00.540 --> 00:41:03.600
Now just do what you do to generate your documentation.


00:41:03.600 --> 00:41:08.600
- Exactly, so once you've passed it through this mist,


00:41:08.600 --> 00:41:10.200
or you've done restructured text,


00:41:10.200 --> 00:41:12.600
you end up with exactly the same thing.


00:41:12.600 --> 00:41:16.680
This syntax tree with nodes,


00:41:16.680 --> 00:41:18.000
and then Sphinx can go for that,


00:41:18.000 --> 00:41:23.000
and that's kind of agnostic to any kind of output format.


00:41:23.000 --> 00:41:26.820
That's just, here's a paragraph,


00:41:26.820 --> 00:41:29.040
and then within that, here's some text,


00:41:29.040 --> 00:41:31.840
and here's a bit of bold and a bit of italic.


00:41:31.840 --> 00:41:32.680
- Right, right, right.


00:41:32.680 --> 00:41:33.520
Cool.


00:41:33.520 --> 00:41:35.920
- And then, which, looping this back around


00:41:35.920 --> 00:41:37.800
to what we mentioned at the start,


00:41:37.800 --> 00:41:39.760
of like, the power of Sphinx, right?


00:41:39.760 --> 00:41:46.800
the extensibility of it is that the markup format that you're writing with is decoupled


00:41:46.800 --> 00:41:53.520
from anything else that you do with it. Not the extensions, not the directives that you use,


00:41:53.520 --> 00:41:59.920
none of that. They're all sort of a separate step from that. And that getting that separation


00:41:59.920 --> 00:42:06.160
happens through the intermediate documentary or doc tree, which if anyone's worked with Sphinx


00:42:06.160 --> 00:42:12.480
has probably seen mentions of in the build directory and stuff. So yeah, Doctry sort


00:42:12.480 --> 00:42:14.400
of acts as that separator.


00:42:14.400 --> 00:42:15.400
- Oh, fantastic.


00:42:15.400 --> 00:42:26.160
- So you go from your input text to your Doctry, then to your output formats, HTML, LaTeX,


00:42:26.160 --> 00:42:33.160
et cetera. And on the way, you mess around with all the Doctry to make sure you've got


00:42:33.160 --> 00:42:37.760
document references and all this kind of thing.


00:42:37.760 --> 00:42:41.260
- Little known fact, if you go to SourceForge


00:42:41.260 --> 00:42:45.300
and look at Docutils, you'll see that they,


00:42:45.300 --> 00:42:47.840
from the very beginning have anticipated


00:42:47.840 --> 00:42:50.920
restructured text not being the only format.


00:42:50.920 --> 00:42:53.000
Restructured text is just one,


00:42:53.000 --> 00:42:55.180
it happens to be the default parser,


00:42:55.180 --> 00:42:57.440
but it wasn't intended to be the only parser.


00:42:57.440 --> 00:43:00.880
Yeah, Bob.


00:43:00.880 --> 00:43:06.020
A lot of what we've been discussing is things that Sphinx does.


00:43:06.020 --> 00:43:14.320
Sphinx for sort of the most part is really a good wrapper around a lot of what DocuDocs


00:43:14.320 --> 00:43:16.000
provides.


00:43:16.000 --> 00:43:24.560
It's a much more friendly package in my opinion to interact with.


00:43:24.560 --> 00:43:29.920
Generally, in some senses,


00:43:29.920 --> 00:43:34.540
JupyterBooks wraps Sphinx into a nicer package to use.


00:43:34.540 --> 00:43:37.040
Sphinx does that for DocuTools.


00:43:37.040 --> 00:43:41.320
It builds upon it to give you additional functionality,


00:43:41.320 --> 00:43:43.760
it gives you additional points to hook into


00:43:43.760 --> 00:43:47.760
in the build process that you would still have with DocuTools.


00:43:47.760 --> 00:43:54.000
It's clearly not doing anything in the build process,


00:43:54.000 --> 00:43:55.480
in addition to what DocuTools would,


00:43:55.480 --> 00:43:57.880
it just gives you a better framework to do that.


00:43:57.880 --> 00:44:00.580
And a lot of what we've been talking about


00:44:00.580 --> 00:44:03.360
of like that intermediate format and stuff,


00:44:03.360 --> 00:44:04.760
those are all concepts coming up


00:44:04.760 --> 00:44:07.520
from DocuTools into Sphinx.


00:44:07.520 --> 00:44:09.080
- Yeah, very interesting.


00:44:09.080 --> 00:44:10.920
Alvaro out there asks,


00:44:10.920 --> 00:44:12.240
"Can we use the AST to translate


00:44:12.240 --> 00:44:13.480
between markup languages?"


00:44:13.480 --> 00:44:16.200
Something like Pandoc, which is a pretty neat thing.


00:44:16.200 --> 00:44:17.460
It sounds like that might already work.


00:44:17.460 --> 00:44:19.020
You've got the different output formats


00:44:19.020 --> 00:44:20.280
and stuff already, right?


00:44:21.800 --> 00:44:25.160
Yeah, so an interesting example of this actually is


00:44:25.160 --> 00:44:27.800
there's a little helper tool that Chris wrote


00:44:27.800 --> 00:44:29.400
as a part of the executable books project


00:44:29.400 --> 00:44:31.400
called RST to Mist.


00:44:31.400 --> 00:44:33.840
And essentially it's a converter


00:44:33.840 --> 00:44:35.360
if you have a bunch of documentation


00:44:35.360 --> 00:44:36.980
written in restructured text


00:44:36.980 --> 00:44:40.280
and you want to automatically convert it into Mist Markdown.


00:44:40.280 --> 00:44:42.040
Because Mist Markdown and restructured text


00:44:42.040 --> 00:44:44.280
have the same like fundamental vocabulary,


00:44:44.280 --> 00:44:45.560
they just have different syntaxes


00:44:45.560 --> 00:44:48.620
that map onto that, you know, docutils doc tree.


00:44:49.800 --> 00:44:52.700
you can go from one to the other relatively easily.


00:44:52.700 --> 00:44:55.260
And that's what the RST to Mist package does.


00:44:55.260 --> 00:44:59.600
It parses RST into these abstract tokens,


00:44:59.600 --> 00:45:04.200
and then it can render those tokens as a Mist markdown


00:45:04.200 --> 00:45:06.320
rather than restructured text.


00:45:06.320 --> 00:45:08.220
And that's because of that sort of intermediate


00:45:08.220 --> 00:45:09.680
document format that's there.


00:45:09.680 --> 00:45:13.160
I think what Pandoc has is like this huge library


00:45:13.160 --> 00:45:15.840
of rules, basically, of how do you go


00:45:15.840 --> 00:45:19.400
from these abstract tokens into like a billion


00:45:19.400 --> 00:45:22.120
different output formats.


00:45:22.120 --> 00:45:25.200
And that sort of speaks to the community of the Pandoc world


00:45:25.200 --> 00:45:26.600
that's been around for quite a long time


00:45:26.600 --> 00:45:28.840
and is doing a lot of really awesome work there too.


00:45:28.840 --> 00:45:30.000
- Yeah, indeed.


00:45:30.000 --> 00:45:32.040
All right, let's bring it back to Sphinx a little bit.


00:45:32.040 --> 00:45:35.280
I know you all wanted to give a quick shout out to Juan


00:45:35.280 --> 00:45:38.540
about some of the tutorials that he created, right?


00:45:38.540 --> 00:45:40.420
- Absolutely.


00:45:40.420 --> 00:45:44.640
- Yeah, so go ahead.


00:45:44.640 --> 00:45:47.180
- Sure, I guess I'll do it.


00:45:47.180 --> 00:45:49.040
So one of the things that Sphinx,


00:45:49.040 --> 00:45:51.040
as we've been talking about, has,


00:45:51.040 --> 00:45:55.260
it has a documentation site, right?


00:45:55.260 --> 00:45:57.940
And it is a documentation generator,


00:45:57.940 --> 00:46:01.940
but it didn't have a tutorial to get you started.


00:46:01.940 --> 00:46:05.620
So that's one of the things that Juan worked on recently.


00:46:05.620 --> 00:46:07.940
And I think a bunch of that work


00:46:07.940 --> 00:46:12.140
is actually piggybacking off of Rigdedocs


00:46:12.140 --> 00:46:16.900
getting funding from CZI, Charn Zuckerberg Initiative,


00:46:16.900 --> 00:46:19.420
as an essential open source software.


00:46:19.420 --> 00:46:22.020
I think it's under the EOSS program,


00:46:22.020 --> 00:46:23.520
but I could be wrong on that.


00:46:23.520 --> 00:46:28.980
And yeah, he worked on a tutorial for Sphinx


00:46:28.980 --> 00:46:32.420
that, well, introduces people to Sphinx essentially,


00:46:32.420 --> 00:46:34.620
and, well, tells you what your first steps


00:46:34.620 --> 00:46:37.580
to document your project using Sphinx would be.


00:46:37.580 --> 00:46:38.420
- Yeah, very cool.


00:46:38.420 --> 00:46:41.700
It sounds certainly useful to have, right?


00:46:41.700 --> 00:46:44.500
Like the API documentation is not enough


00:46:44.500 --> 00:46:46.380
to make it feel really great.


00:46:46.380 --> 00:46:48.240
All right, so the next thing I wanna talk a bit about


00:46:48.240 --> 00:46:52.580
with Sphinx is sort of the look and feel side of things.


00:46:52.580 --> 00:46:53.420
Right?


00:46:53.420 --> 00:46:56.260
(laughing)


00:46:56.260 --> 00:46:58.500
- Can I really quickly make a plug actually?


00:46:58.500 --> 00:47:00.540
- Yeah, yeah, absolutely, go for it.


00:47:00.540 --> 00:47:03.560
- I think that one of the other reasons that like one,


00:47:03.560 --> 00:47:05.980
for example, has been contributing some of the improvements


00:47:05.980 --> 00:47:08.460
to the Sphinx documentation is that like Sphinx


00:47:08.460 --> 00:47:12.440
is pretty old in computer science world and technology world.


00:47:12.440 --> 00:47:14.320
It's like an ancient technology, you know,


00:47:14.320 --> 00:47:17.400
that's like eight years old or something like that.


00:47:17.400 --> 00:47:18.240
And I think that one of--


00:47:18.240 --> 00:47:19.440
- More than that.


00:47:19.440 --> 00:47:21.600
- DocuDocs and Python.


00:47:21.600 --> 00:47:22.440
- Yeah, that's true.


00:47:22.440 --> 00:47:25.040
That's like the early, early days of Python.


00:47:25.040 --> 00:47:27.080
So anyway, my point is that I think that


00:47:27.080 --> 00:47:29.720
the documentation about Sphinx


00:47:29.720 --> 00:47:31.920
has been around for a long time,


00:47:31.920 --> 00:47:34.360
but I think that the community's understanding


00:47:34.360 --> 00:47:36.840
of like what makes for good documentation


00:47:36.840 --> 00:47:40.060
has evolved quite a lot in the last like 15 years.


00:47:40.060 --> 00:47:42.640
There's just more expectations


00:47:42.640 --> 00:47:44.820
around different kinds of documentation


00:47:44.820 --> 00:47:48.040
that you expect to find embedded in one place.


00:47:48.040 --> 00:47:49.660
I put a link in the YouTube comments


00:47:49.660 --> 00:47:51.400
for a really interesting framework


00:47:51.400 --> 00:47:52.740
that's been gaining some traction lately


00:47:52.740 --> 00:47:54.640
called the Diataxis framework.


00:47:54.640 --> 00:47:57.040
But this idea that you sort of cleanly separate out


00:47:57.040 --> 00:47:59.520
like tutorials and how-to examples


00:47:59.520 --> 00:48:02.280
and reference documentation and explanations,


00:48:02.280 --> 00:48:03.280
that's just one example.


00:48:03.280 --> 00:48:05.440
But I think that like there's,


00:48:05.440 --> 00:48:08.920
the community has sort of evolved and made more complex


00:48:08.920 --> 00:48:11.560
its own idea of what makes for good documentation


00:48:11.560 --> 00:48:17.720
in some ways faster than a lot of these Python packages that have been around for decades,


00:48:17.720 --> 00:48:20.560
in some cases, have kept up with that pace.


00:48:20.560 --> 00:48:24.360
And so I think there's a lot of low hanging fruit to improve a lot of these aspects by


00:48:24.360 --> 00:48:27.920
making contributions to Sphinx stocks and other pieces of the ecosystem.


00:48:27.920 --> 00:48:28.920
Yeah, absolutely.


00:48:28.920 --> 00:48:35.320
If I can make an addition to your addition, one of the things I think of Sphinx as is


00:48:35.320 --> 00:48:37.160
I think of it as a miracle.


00:48:37.160 --> 00:48:39.760
It's an underappreciated miracle.


00:48:39.760 --> 00:48:48.600
They crank out bug fix updates with long lists of features and bugs fix and all over and


00:48:48.600 --> 00:48:51.920
over for year after year.


00:48:51.920 --> 00:48:54.440
They don't get to go do Greenville development.


00:48:54.440 --> 00:48:58.640
They're still stuck in Python 2.3 land or something like that.


00:48:58.640 --> 00:49:03.360
They've got this main template which was written back when Mark Andreessen was still in grad


00:49:03.360 --> 00:49:06.280
school.


00:49:06.280 --> 00:49:08.380
It's just heroic what they do.


00:49:08.380 --> 00:49:13.020
- Yeah, it's amazing when software


00:49:13.020 --> 00:49:14.580
continues to live like that, right?


00:49:14.580 --> 00:49:15.420
- Yeah.


00:49:15.420 --> 00:49:21.020
- It's foundational software to the ecosystem.


00:49:21.020 --> 00:49:26.020
And yeah, there's very little greenfield development there.


00:49:26.020 --> 00:49:29.540
And there's very little sort of exciting work


00:49:29.540 --> 00:49:32.660
that sort of, it's all complicated problems


00:49:32.660 --> 00:49:35.100
with lots of complexity to deal with,


00:49:35.100 --> 00:49:37.980
both in terms of compatibility as well.


00:49:37.980 --> 00:49:40.780
Oh, not having enough visibility


00:49:40.780 --> 00:49:42.820
into how your users are using things


00:49:42.820 --> 00:49:46.740
to know for sure if a change will break them.


00:49:46.740 --> 00:49:50.060
Basically everything is a breaking change.


00:49:50.060 --> 00:49:52.060
Let's operate with that


00:49:52.060 --> 00:49:54.700
and the constraints that brings with it.


00:49:54.700 --> 00:49:57.740
- Yeah, that's a big constraint for sure.


00:49:57.740 --> 00:49:59.100
Wow.


00:49:59.100 --> 00:49:59.920
Cool, all right.


00:49:59.920 --> 00:50:01.660
So let's talk about look and feel.


00:50:01.660 --> 00:50:06.660
So there's the whole idea of Sphinx themes, right?


00:50:06.660 --> 00:50:08.020
- Yeah.


00:50:08.020 --> 00:50:11.040
- And maintained by some people we know here?


00:50:11.040 --> 00:50:14.100
- Yes, that is my user.


00:50:14.100 --> 00:50:18.040
- Kajjan, you wanna give a quick shout out to the themes


00:50:18.040 --> 00:50:19.540
and tell us a bit about it?


00:50:19.540 --> 00:50:22.600
- Sure, so one of the things that Sphinx has,


00:50:22.600 --> 00:50:24.040
as we've mentioned multiple times,


00:50:24.040 --> 00:50:26.600
is a bunch of variety of outputs, right?


00:50:26.600 --> 00:50:31.000
And even within those, even within the HTML output format,


00:50:31.000 --> 00:50:35.120
you have the ability to change how your output stylized,


00:50:35.120 --> 00:50:37.440
right, what theme you end up using.


00:50:37.440 --> 00:50:39.640
This is roughly analogous to, I guess,


00:50:39.640 --> 00:50:41.800
Jekyll themes or Hugo themes,


00:50:41.800 --> 00:50:43.840
in that you give it a bunch of templates,


00:50:43.840 --> 00:50:46.600
maybe a bit of logic, depending on what you're doing,


00:50:46.600 --> 00:50:48.520
and yeah, it renders.


00:50:48.520 --> 00:50:55.200
Sphinx has that, and what's probably on screen


00:50:55.200 --> 00:51:00.640
the moment as we've talking about this is sphinxthemes.org,


00:51:00.640 --> 00:51:03.760
which is one of the sites I helped update


00:51:03.760 --> 00:51:07.780
to be more pretty and more up-to-date


00:51:07.780 --> 00:51:11.480
and sort of a more curated set of, well,


00:51:11.480 --> 00:51:16.480
themes for Sphinx that you can and maybe should be using


00:51:16.480 --> 00:51:20.300
when you move away from the defaults, essentially.


00:51:20.300 --> 00:51:24.880
As Chris mentioned, Sphinx is fairly old.


00:51:24.880 --> 00:51:29.200
And when you look at the themes that ship with it,


00:51:29.200 --> 00:51:32.480
they bear that aesthetic with them.


00:51:32.480 --> 00:51:35.760
They don't look like they were built last week


00:51:35.760 --> 00:51:40.760
by someone who has been doing this since not too long.


00:51:40.760 --> 00:51:44.520
So yeah, Wayback Machine would be a good--


00:51:44.520 --> 00:51:46.280
- If you ever go to the Wayback Machine


00:51:46.280 --> 00:51:50.560
and you look at something that is a popular website


00:51:50.560 --> 00:51:53.680
from the early days, you know--


00:51:53.680 --> 00:51:57.120
- Yeah, I think 2004 is right around the time, yeah.


00:51:57.120 --> 00:52:01.880
It's an amazing experience to just pull up Google or Yahoo.


00:52:01.880 --> 00:52:05.680
I mean, to look at something like this and say,


00:52:05.680 --> 00:52:08.320
yeah, that's one of the biggest companies in the world.


00:52:08.320 --> 00:52:13.920
Kind of reframe your opinion.


00:52:13.920 --> 00:52:16.180
But having these themes, I think,


00:52:16.180 --> 00:52:18.840
is an important aspect.


00:52:18.840 --> 00:52:22.720
I do think having them look really good


00:52:22.720 --> 00:52:24.360
is something that, you know,


00:52:24.360 --> 00:52:26.440
is these are starting to come along, right?


00:52:26.440 --> 00:52:28.000
Like I think the furrow theme


00:52:28.000 --> 00:52:29.800
and the book theme look really nice.


00:52:29.800 --> 00:52:32.620
There's the Pydata theme.


00:52:32.620 --> 00:52:34.920
If you've done read the docs, right?


00:52:34.920 --> 00:52:36.280
Read the docs is one of the themes


00:52:36.280 --> 00:52:38.760
that people I'm sure are familiar with.


00:52:38.760 --> 00:52:41.440
- I think for a very long time,


00:52:41.440 --> 00:52:45.080
the only major good theme,


00:52:45.080 --> 00:52:47.380
or one of the two major good themes


00:52:47.380 --> 00:52:48.940
was the read the docs theme.


00:52:48.940 --> 00:52:51.040
The other one being Alabaster,


00:52:51.040 --> 00:52:52.440
which is not a default.


00:52:52.440 --> 00:52:53.880
Alabaster is not the default.


00:52:55.340 --> 00:53:00.220
And I think it's been fairly recent


00:53:00.220 --> 00:53:03.460
that these new themes have sort of come in


00:53:03.460 --> 00:53:08.260
and gained major adoption in sort of the timeline of Sphinx,


00:53:08.260 --> 00:53:09.900
I would say.


00:53:09.900 --> 00:53:11.100
And I think that's a good thing,


00:53:11.100 --> 00:53:14.100
'cause, well, I am personally motivated


00:53:14.100 --> 00:53:15.820
to do a lot of this, right?


00:53:15.820 --> 00:53:18.380
Like one of the themes you mentioned


00:53:18.380 --> 00:53:20.640
is one that I wrote from scratch.


00:53:20.640 --> 00:53:25.560
And it's been an interestingly fun experience


00:53:25.560 --> 00:53:29.460
and I can see why there's not a lot of these.


00:53:29.460 --> 00:53:32.400
- It's tricky, huh?


00:53:32.400 --> 00:53:33.240
- It is tricky.


00:53:33.240 --> 00:53:34.980
- I really would like to give you credit for this.


00:53:34.980 --> 00:53:39.500
I think Furo is the tipping point,


00:53:39.500 --> 00:53:42.680
the exemplar that made people rethink


00:53:42.680 --> 00:53:45.160
what to expect from Sphinx themes.


00:53:45.160 --> 00:53:47.480
If I was to guess the two reasons people


00:53:47.480 --> 00:53:50.360
are switching to MakeDocs, number one is Markdown.


00:53:50.360 --> 00:53:52.680
So Chris and Chris, thank you for that.


00:53:52.680 --> 00:53:55.500
And number two is it just looks a lot better.


00:53:55.500 --> 00:54:00.880
- To be honest though, part of the reason Markdown


00:54:00.880 --> 00:54:05.760
or MKDocs looks really good is because there's one theme


00:54:05.760 --> 00:54:08.600
that's really good there, MKDocs material.


00:54:08.600 --> 00:54:09.560
- Yeah, the material, yeah.


00:54:09.560 --> 00:54:11.040
- That's all it takes.


00:54:11.040 --> 00:54:14.960
- And I have not, and I've spent a decent amount


00:54:14.960 --> 00:54:16.960
of time looking as part of research


00:54:16.960 --> 00:54:18.760
for all of this work that I'm doing.


00:54:19.840 --> 00:54:21.760
Is there any other major theme there?


00:54:21.760 --> 00:54:24.120
And there isn't, there's just one.


00:54:24.120 --> 00:54:30.200
And most of the ecology there just revolves around that.


00:54:30.200 --> 00:54:33.240
That isn't to say that thing, certainly not.


00:54:33.240 --> 00:54:37.440
And that isn't to say MKDOX is just that, it's not, right?


00:54:37.440 --> 00:54:40.480
But a decent amount of the overlap there is,


00:54:40.480 --> 00:54:44.140
well, the overlap there is huge, is what I would go for.


00:54:44.140 --> 00:54:47.200
And kudos to Squid Funk,


00:54:47.200 --> 00:54:52.200
whose name is not coming to my head at the moment


00:54:52.200 --> 00:54:56.080
for the amount of work he's put into that.


00:54:56.080 --> 00:54:58.860
- Yeah, absolutely.


00:54:58.860 --> 00:55:03.720
You and Chris are working on the new chapter


00:55:03.720 --> 00:55:04.880
of this idea, right?


00:55:04.880 --> 00:55:07.840
- Which Chris?


00:55:07.840 --> 00:55:10.000
- Chris H.


00:55:10.000 --> 00:55:13.080
I believe the two of you are kind of thinking about


00:55:13.080 --> 00:55:15.980
what if we didn't have to live with the old contract?


00:55:15.980 --> 00:55:21.280
Well, I guess the, I think the way you're referring to is some of the like infrastructure


00:55:21.280 --> 00:55:24.200
improvements around developing in the Sphinx ecosystem.


00:55:24.200 --> 00:55:28.480
No, I was thinking of there's a, I thought there was a theme itself you were working


00:55:28.480 --> 00:55:36.280
on that kind of threw out the basic theme, which is the predecessor of all themes.


00:55:36.280 --> 00:55:40.120
And I thought that you had a repo where there was a new theme you were working on.


00:55:40.120 --> 00:55:41.600
There is, there's something called...


00:55:41.600 --> 00:55:43.920
Almost like an abstract theme or something.


00:55:43.920 --> 00:55:47.680
- Yeah, so the way Sphinx's theme ecosystem works


00:55:47.680 --> 00:55:49.880
is there's a basic theme.


00:55:49.880 --> 00:55:52.800
And what that basic theme has is like


00:55:52.800 --> 00:55:55.520
the JavaScript for Sphinx's search


00:55:55.520 --> 00:56:00.480
and all kinds of like fundamental things for Sphinx


00:56:00.480 --> 00:56:05.480
and a very, very, very bare bones HTML structure,


00:56:05.480 --> 00:56:10.000
essentially, I don't think any CSS even, right?


00:56:10.000 --> 00:56:12.080
So it's just a very bare bones page


00:56:12.080 --> 00:56:17.080
to just serve as a basic skeleton for you to build upon.


00:56:17.080 --> 00:56:23.140
And I think through the work that Chris and I


00:56:23.140 --> 00:56:27.160
have been doing on themes and among there's more people


00:56:27.160 --> 00:56:31.280
and that sort of the name escapes me at the moment.


00:56:31.280 --> 00:56:35.440
And one of the things we found out was,


00:56:35.440 --> 00:56:39.440
oh, there's like a lot of common work across these themes


00:56:39.440 --> 00:56:45.600
And we put into a layer on top of that and build those things there.


00:56:45.600 --> 00:56:47.840
So that it reduces the amount of duplicated work.


00:56:47.840 --> 00:56:52.920
It still gives us the bits of flexibility that we want in the individual teams to make


00:56:52.920 --> 00:56:56.040
opinionated choices, design choices and whatnot.


00:56:56.040 --> 00:57:00.120
But there's a decent chunk of, oh, we all will do the same thing.


00:57:00.120 --> 00:57:05.520
Like breadcrumbs have this HTML structure.


00:57:05.520 --> 00:57:11.440
like, that doing things like that will reduce the amount of duplicated effort and lower


00:57:11.440 --> 00:57:16.760
the barrier for entry, essentially, into writing things, which is sort of what I'm personally


00:57:16.760 --> 00:57:24.880
motivated in at the moment, having written one, is like, "Oh, this thing is the right


00:57:24.880 --> 00:57:33.280
sort of brain areas," because I, as I've mentioned, I'm a maintainer on pip. Developer workflows


00:57:33.280 --> 00:57:36.880
are a thing that I happen to be interested in.


00:57:36.880 --> 00:57:39.360
And I would say have a decent amount


00:57:39.360 --> 00:57:41.160
of experience dealing with.


00:57:41.160 --> 00:57:43.620
So I was like, hey, this looks like a great place


00:57:43.620 --> 00:57:47.720
to put in a bunch of my JavaScript, HTML, Web Tech


00:57:47.720 --> 00:57:52.320
experience combined with a bunch of Python packaging


00:57:52.320 --> 00:57:55.040
and user workflows around that


00:57:55.040 --> 00:57:56.760
and sort of put in energy there.


00:57:56.760 --> 00:58:00.520
So that led to Fink's Theme Builder, which is like--


00:58:00.520 --> 00:58:01.760
- Fantastic, yeah.


00:58:01.760 --> 00:58:02.600
- Yeah, it's been excellent.


00:58:02.600 --> 00:58:04.880
I think it's kind of just bringing in that,


00:58:04.880 --> 00:58:06.720
maybe what Sphinx has lacked in the past


00:58:06.720 --> 00:58:11.720
is that kind of expertise in web design, really.


00:58:11.720 --> 00:58:15.360
I mean, there's a lot of excellent people working,


00:58:15.360 --> 00:58:19.160
as you say, within Sphinx and DocuTools and things


00:58:19.160 --> 00:58:21.520
on the kind of back end and how that works


00:58:21.520 --> 00:58:22.920
and all the Python code.


00:58:22.920 --> 00:58:27.920
Possibly there's been less so in the past of going,


00:58:27.920 --> 00:58:31.980
Right, let's actually make all this good work


00:58:31.980 --> 00:58:36.980
and actually show it off and have these just lovely themes


00:58:36.980 --> 00:58:39.220
that actually show what you can do with it.


00:58:39.220 --> 00:58:43.420
- It was super fascinating for me


00:58:43.420 --> 00:58:45.020
'cause sort of when I jumped in,


00:58:45.020 --> 00:58:48.100
I was like, oh, recreationally, right?


00:58:48.100 --> 00:58:50.380
And to be honest, my motivation jumping


00:58:50.380 --> 00:58:53.020
into the Sphinx ecosystem was precisely this,


00:58:53.020 --> 00:58:55.580
of like, I want it to look better.


00:58:55.580 --> 00:58:56.400
- Yeah. - Like,


00:58:56.400 --> 00:58:57.240
it doesn't look good.


00:58:57.240 --> 00:58:59.080
I would like it to look better.


00:58:59.080 --> 00:59:02.560
And funnily enough, none of this would have happened


00:59:02.560 --> 00:59:04.800
if pip hadn't gotten a grant,


00:59:04.800 --> 00:59:09.000
where we had a bunch of computer experience experts


00:59:09.000 --> 00:59:11.720
sit with us and our users


00:59:11.720 --> 00:59:15.180
and sort of have that channel of feedback through them,


00:59:15.180 --> 00:59:16.440
as well as their expertise,


00:59:16.440 --> 00:59:19.320
and just having them state multiple times,


00:59:19.320 --> 00:59:21.880
like, "Hey, pip's documentation's not that great


00:59:21.880 --> 00:59:23.560
to sort of navigate and stuff."


00:59:23.560 --> 00:59:26.360
Like, there's content, they don't know how to get there.


00:59:26.360 --> 00:59:29.540
And sort of in those conversations, I was like,


00:59:29.540 --> 00:59:31.780
yeah, I don't like this site.


00:59:31.780 --> 00:59:34.380
Now that you've made me look at it a bunch of times.


00:59:34.380 --> 00:59:36.220
(laughing)


00:59:36.220 --> 00:59:38.780
- Yeah, let me put something on the screen for you all,


00:59:38.780 --> 00:59:40.820
just to put side by side here.


00:59:40.820 --> 00:59:44.260
And just think about this,


00:59:44.260 --> 00:59:47.700
and y'all can pull this up really easily who are listening.


00:59:47.700 --> 00:59:49.420
Just think about this from the perspective


00:59:49.420 --> 00:59:51.740
of someone who's choosing a programming language


00:59:51.740 --> 00:59:53.700
or new to programming and deciding,


00:59:53.700 --> 00:59:55.460
is Python the space for me?


00:59:55.460 --> 01:00:04.060
you know, if on one hand, we've got, you know, just the docs.python.org and the other, you


01:00:04.060 --> 01:00:09.180
know, something like Tailwind, where you look at it and it's just like, it just feels, you


01:00:09.180 --> 01:00:14.180
know, so fresh and welcoming.


01:00:14.180 --> 01:00:18.780
Whereas the other, it's, this is not to take away from the hard and important work of writing


01:00:18.780 --> 01:00:24.300
the documentation, but the way it feels when you land there, I think is in desperate need


01:00:24.300 --> 01:00:25.300
of...


01:00:25.300 --> 01:00:28.020
- I've seen what it looks like in a man page.


01:00:28.020 --> 01:00:31.620
- I know it probably is looking the same, right?


01:00:31.620 --> 01:00:35.320
- Those three man page users are really happy about this.


01:00:35.320 --> 01:00:38.060
- Pretty close.


01:00:38.060 --> 01:00:40.580
And that isn't to say those users aren't important


01:00:40.580 --> 01:00:42.420
to be clear, right?


01:00:42.420 --> 01:00:44.260
- I mean, it's kind of like moving


01:00:44.260 --> 01:00:46.700
from MySpace to Instagram.


01:00:46.700 --> 01:00:48.940
- It is, it is.


01:00:48.940 --> 01:00:51.080
Like I said, I'm not bashing on it.


01:00:51.080 --> 01:00:53.420
I'm just saying, this is the face


01:00:53.420 --> 01:00:56.720
that that part of Python is presenting to the world


01:00:56.720 --> 01:00:59.760
to say, we want you here, come be with us, right?


01:00:59.760 --> 01:01:04.080
And there's a different face that other places


01:01:04.080 --> 01:01:07.580
are putting on that I think probably will appeal


01:01:07.580 --> 01:01:09.540
a lot more to people who don't know better


01:01:09.540 --> 01:01:11.980
that they're getting to write in JavaScript.


01:01:11.980 --> 01:01:15.580
- And this is really an aspect that I would sort of think,


01:01:15.580 --> 01:01:17.860
I would like to put my energy into this


01:01:17.860 --> 01:01:19.500
and make these improvements.


01:01:19.500 --> 01:01:22.060
And I'm by far not the only one.


01:01:22.060 --> 01:01:25.240
there's in fact now a documentation working group


01:01:25.240 --> 01:01:31.080
being formed in the CPython core developed,


01:01:31.080 --> 01:01:33.040
like CPython development community,


01:01:33.040 --> 01:01:37.840
the folks who develop the language around improving this.


01:01:37.840 --> 01:01:40.800
And there's like a public issue tracker


01:01:40.800 --> 01:01:44.960
that hopefully gonna sort of start ramping up soon


01:01:44.960 --> 01:01:46.960
'cause I would like to be involved with that


01:01:46.960 --> 01:01:49.120
and I'm aware that Paul is as well.


01:01:50.280 --> 01:01:55.280
And yeah, this is by no means news to the folks involved.


01:01:55.280 --> 01:01:57.100
They're aware of this.


01:01:57.100 --> 01:02:00.140
And I think the first issue itself


01:02:00.140 --> 01:02:03.760
in the sort of Docs community issue tracker that they have


01:02:03.760 --> 01:02:07.620
is moving to a more modern documentation theme.


01:02:07.620 --> 01:02:13.480
It's just, as it turns out, there aren't many in Sphinx.


01:02:13.480 --> 01:02:18.400
So that's sort of been another thing I've picked up.


01:02:18.400 --> 01:02:19.880
- Yeah, so maybe one more shout out


01:02:19.880 --> 01:02:22.480
to the Sphinx theme builder that you put together, right?


01:02:22.480 --> 01:02:24.040
- Yeah, and I guess, yeah,


01:02:24.040 --> 01:02:25.960
Sphinx theme builder comes in nicely into this.


01:02:25.960 --> 01:02:29.840
So there's a bunch of Sphinx themes today, right?


01:02:29.840 --> 01:02:32.640
There's Furo, there's Sphinx book theme,


01:02:32.640 --> 01:02:36.120
there's PyData Sphinx theme, there's Alabaster,


01:02:36.120 --> 01:02:37.760
there's a bazillion of those.


01:02:37.760 --> 01:02:40.400
The first three that I mentioned, right,


01:02:40.400 --> 01:02:45.400
are the folks on this discussion are involved with those.


01:02:45.920 --> 01:02:50.480
And one of the things that came out of having worked on all of these was,


01:02:50.480 --> 01:02:55.040
it would be nicer to simplify these workflows a bit,


01:02:55.040 --> 01:02:57.680
make the interaction with JavaScript easier,


01:02:57.680 --> 01:03:00.720
reduce the amount of bootstrapping required and stuff like that.


01:03:00.720 --> 01:03:04.920
And that essentially ended up in Sphinx Team Builder,


01:03:04.920 --> 01:03:08.680
where it sort of streamlines the JavaScript and Python build processes


01:03:08.680 --> 01:03:11.840
and sort of makes the development workflow easier.


01:03:13.160 --> 01:03:14.720
- Yeah, even comes with a development server


01:03:14.720 --> 01:03:18.520
that does like refresh the browser on change, right?


01:03:18.520 --> 01:03:21.540
- Yes, and I think that's also really nice


01:03:21.540 --> 01:03:24.320
to have in Sphinx documentation authoring as well.


01:03:24.320 --> 01:03:27.080
And Paul sort of mentioned this earlier


01:03:27.080 --> 01:03:30.440
of like me taking up maintainership of too many things.


01:03:30.440 --> 01:03:34.240
I went, I like this.


01:03:34.240 --> 01:03:38.320
And the repository had maintainers needed on it.


01:03:38.320 --> 01:03:42.280
So I just went and opened an issue and said, hi, add me.


01:03:42.280 --> 01:03:44.480
And I'm more basically a de facto maintainer


01:03:44.480 --> 01:03:49.400
on like live reload as well as Sphinx auto build,


01:03:49.400 --> 01:03:52.160
which is, hi, if you don't use Sphinx auto build


01:03:52.160 --> 01:03:53.680
and write a lot of Sphinx docs,


01:03:53.680 --> 01:03:56.600
start using it 'cause it's great, I think.


01:03:56.600 --> 01:03:57.440
- Yeah, awesome.


01:03:57.440 --> 01:04:00.800
Yeah, I love those auto reload aspects.


01:04:00.800 --> 01:04:01.640
- Yeah.


01:04:01.640 --> 01:04:04.640
- All right, you guys, we are just about out of time.


01:04:04.640 --> 01:04:07.240
Maybe I'll open it up for if anyone else


01:04:07.240 --> 01:04:09.160
wants to just give a shout out to something


01:04:09.160 --> 01:04:12.140
or mention something while we're all here together.


01:04:12.140 --> 01:04:15.140
What have we not covered that we need to quickly talk about?


01:04:15.140 --> 01:04:20.620
- I mean, the main thing that I would just say


01:04:20.620 --> 01:04:23.460
is to reiterate that I think that what a lot of these,


01:04:23.460 --> 01:04:26.540
like the theme conversations and improving developer


01:04:26.540 --> 01:04:29.200
workflows around the Sphinx ecosystem,


01:04:29.200 --> 01:04:31.260
one of the reasons that they're so successful


01:04:31.260 --> 01:04:34.420
is because I think that there is a lot of low-hanging fruit


01:04:34.420 --> 01:04:38.540
in the Sphinx ecosystem to basically like signal boost


01:04:38.540 --> 01:04:40.340
all of this work that's been done


01:04:40.340 --> 01:04:44.540
over the last 14 years in Docutales and Sphinx


01:04:44.540 --> 01:04:46.200
and building this documentation engine


01:04:46.200 --> 01:04:47.480
and this whole community of people


01:04:47.480 --> 01:04:49.280
writing extensions for it.


01:04:49.280 --> 01:04:50.920
In a lot of ways, I think that there's a lot


01:04:50.920 --> 01:04:54.700
of potential energy there that hasn't been unlocked yet,


01:04:54.700 --> 01:04:56.200
in part because of some of the things


01:04:56.200 --> 01:04:59.240
around developer friction or themes that don't look


01:04:59.240 --> 01:05:02.320
kind of like modern and nice and web-developy.


01:05:02.320 --> 01:05:05.100
And I think that there's still a lot more low-hanging fruit


01:05:05.100 --> 01:05:07.100
that can be accomplished with, for example,


01:05:07.100 --> 01:05:09.980
improving documentation about Sphinx itself


01:05:09.980 --> 01:05:12.200
or the extensions or whatever.


01:05:12.200 --> 01:05:14.280
And so I think that all of the success of these projects


01:05:14.280 --> 01:05:17.200
is largely possible only because they're kind of piggybacking


01:05:17.200 --> 01:05:19.940
on top of this really well-established community


01:05:19.940 --> 01:05:21.880
where a lot of work has already been done


01:05:21.880 --> 01:05:25.200
and a lot of kudos go out to that broader community.


01:05:25.200 --> 01:05:26.840
- For sure.


01:05:26.840 --> 01:05:29.880
And one other thing that I'm sort of hoping to see


01:05:29.880 --> 01:05:33.800
coming out of this is as sort of these efforts


01:05:33.800 --> 01:05:37.640
around making it easy to present your theme nicer,


01:05:37.640 --> 01:05:41.440
making it easier to write your docs and all of these happen,


01:05:41.440 --> 01:05:44.240
the general quality of the documentation in the Python


01:05:44.240 --> 01:05:45.920
ecosystem improves.


01:05:45.920 --> 01:05:48.520
Because when you have something that looks nicer,


01:05:48.520 --> 01:05:51.280
that is easier to write, that's all of that,


01:05:51.280 --> 01:05:54.600
it also results in a better quality of documentation.


01:05:54.600 --> 01:05:58.720
Where because you're able to go, oh, actually, I


01:05:58.720 --> 01:06:01.760
can see the structure of my site more clearly.


01:06:01.760 --> 01:06:04.040
I think I would like to restructure it slightly


01:06:04.040 --> 01:06:06.320
to make it clearer what the flow is.


01:06:06.320 --> 01:06:10.380
and, oh, I'm missing this bit of content in this section,


01:06:10.380 --> 01:06:11.320
but I have it there.


01:06:11.320 --> 01:06:12.500
Maybe I should just edit it.


01:06:12.500 --> 01:06:14.960
And when these things become more obvious to you,


01:06:14.960 --> 01:06:21.040
through either clearer markup or clearer site design


01:06:21.040 --> 01:06:24.960
or whatever, it will lead to better documentation.


01:06:24.960 --> 01:06:26.240
And also you'll have more people


01:06:26.240 --> 01:06:28.480
who'd be willing to write those.


01:06:28.480 --> 01:06:31.440
'Cause it won't be like, oh, why am I writing this?


01:06:34.800 --> 01:06:37.300
- Yeah, and also moving away from Sphinx


01:06:37.300 --> 01:06:41.840
just being seen as a developer documentation tool


01:06:41.840 --> 01:06:43.800
into what JupyterBook is trying to do,


01:06:43.800 --> 01:06:47.360
make it available for scientists and things to go,


01:06:47.360 --> 01:06:52.160
"Oh, wait a minute, I can use this relatively easily,


01:06:52.160 --> 01:06:53.920
and I can share my work,


01:06:53.920 --> 01:06:56.560
or I can write tutorials on science,


01:06:56.560 --> 01:07:01.280
or share my research and things like stuff like that."


01:07:01.280 --> 01:07:03.280
- That part's really interesting to me,


01:07:03.280 --> 01:07:05.240
and it's why I did the course with Michael


01:07:05.240 --> 01:07:08.680
on static websites, not static documentation,


01:07:08.680 --> 01:07:11.220
is to think bigger than just docs.


01:07:11.220 --> 01:07:14.700
I have an interest in knowledge bases.


01:07:14.700 --> 01:07:15.760
I'm a developer advocate.


01:07:15.760 --> 01:07:18.980
We create artifacts that are rich and interconnected


01:07:18.980 --> 01:07:20.120
and richly linked.


01:07:20.120 --> 01:07:21.280
Sound like something?


01:07:21.280 --> 01:07:22.120
- No.


01:07:22.120 --> 01:07:24.720
- Sphinx has inside of it, this engine,


01:07:24.720 --> 01:07:27.400
Sphinx and Docutils has this engine inside


01:07:27.400 --> 01:07:29.780
which nothing else has.


01:07:29.780 --> 01:07:33.500
The very first contact you have with the Mist


01:07:33.500 --> 01:07:38.180
in the course that I did is just the humble link.


01:07:38.180 --> 01:07:39.880
But when you do it in Mist,


01:07:39.880 --> 01:07:43.380
it will tell you if the thing on the other side isn't there.


01:07:43.380 --> 01:07:47.420
It'll extract the title and inline it on your side.


01:07:47.420 --> 01:07:51.740
That is magic to all these other systems.


01:07:51.740 --> 01:07:54.940
And it's knowledge-based kinds of things that are valuable.


01:07:54.940 --> 01:07:59.320
And I think that we could tell the story of Sphinx


01:07:59.320 --> 01:08:03.520
in a bigger way beyond documentation


01:08:03.520 --> 01:08:06.580
and start doing all of the things


01:08:06.580 --> 01:08:10.900
that people on technical teams want to do for storytelling.


01:08:10.900 --> 01:08:16.540
- I feel like I want to interject and mention that,


01:08:16.540 --> 01:08:19.700
hey, you know, Sphinx can do blogs.


01:08:19.700 --> 01:08:22.300
- Yes, there's the A-blog extension, yeah.


01:08:22.300 --> 01:08:27.300
- Yep, and Chris H., at least, has his blog on--


01:08:27.300 --> 01:08:28.140
- Yeah, that's right.


01:08:28.140 --> 01:08:29.980
- His personal website, as far as I'm aware.


01:08:29.980 --> 01:08:32.140
- When you look inside the code of A-Blog,


01:08:32.140 --> 01:08:33.540
which I've followed for years,


01:08:33.540 --> 01:08:37.440
it shows you tapping into the equivalent of Front Matter


01:08:37.440 --> 01:08:39.740
and walking through all the Doctries


01:08:39.740 --> 01:08:44.740
and looking for structure and doing back references.


01:08:44.740 --> 01:08:47.460
People don't expect to be able to do that in Markdown.


01:08:47.460 --> 01:08:50.220
It's a document database.


01:08:50.220 --> 01:08:53.120
That's what you should think of Sphinx as.


01:08:53.120 --> 01:08:57.020
- And I think there's a lot there of like unlocking,


01:08:57.020 --> 01:09:01.300
like I really do want to reiterate what Chris said


01:09:01.300 --> 01:09:05.140
of like, there's a huge body of excellent work


01:09:05.140 --> 01:09:08.640
that has been done over more than a decade.


01:09:08.640 --> 01:09:13.100
Well, I mentioned older than me,


01:09:13.100 --> 01:09:15.700
it's like four years younger or something like that.


01:09:15.700 --> 01:09:19.940
I'm four years older than it.


01:09:19.940 --> 01:09:22.500
Okay, whatever, I was wrong there, whatever.


01:09:22.500 --> 01:09:25.460
But yeah, there's this huge body of work there


01:09:25.460 --> 01:09:30.460
and there's just, it sort of needs the little touch of,


01:09:30.460 --> 01:09:36.460
hey, paint, get it to like, look like it belongs


01:09:36.460 --> 01:09:38.940
in the sort of model and web, right?


01:09:38.940 --> 01:09:39.980
- But it also needed myths.


01:09:39.980 --> 01:09:43.420
It needed myths to come along and express that power


01:09:43.420 --> 01:09:45.460
in a human-oriented way.


01:09:45.460 --> 01:09:47.980
And there are so many things in myths that are mind blowing.


01:09:47.980 --> 01:09:52.360
people haven't scratched the surface with Mist yet.


01:09:52.360 --> 01:09:55.440
- I actually, to that point,


01:09:55.440 --> 01:09:58.600
one other quick plug that I would give is,


01:09:58.600 --> 01:10:01.600
I know we've been talking about Sphinx in this conversation,


01:10:01.600 --> 01:10:04.340
but to reiterate, I think that the goal of Mist


01:10:04.340 --> 01:10:09.340
is to be a tool or implementation agnostic specification


01:10:09.340 --> 01:10:11.220
for Markdown.


01:10:11.220 --> 01:10:15.800
And I think that there's a lot of exciting possibilities


01:10:15.800 --> 01:10:20.340
if we can sort of find the right standards to apply


01:10:20.340 --> 01:10:23.840
at the MIST directives level or roles level or whatever,


01:10:23.840 --> 01:10:26.780
and to see if you could get a flavor of Markdown


01:10:26.780 --> 01:10:29.220
that is flexible enough that it can be reused


01:10:29.220 --> 01:10:31.860
across like a few different kinds of applications,


01:10:31.860 --> 01:10:33.580
maybe some are pure web page,


01:10:33.580 --> 01:10:35.660
maybe some that are full-blown documentation,


01:10:35.660 --> 01:10:37.580
maybe Pandoc, whatever.


01:10:37.580 --> 01:10:39.600
And so I invite people who,


01:10:39.600 --> 01:10:41.460
if they can think of use cases or tools


01:10:41.460 --> 01:10:44.420
that they're working on or ecosystems that they're working in


01:10:44.420 --> 01:10:48.500
that would benefit from something like a sort of tool


01:10:48.500 --> 01:10:52.620
agnostic flavor of Markdown that has natural block


01:10:52.620 --> 01:10:55.740
and inline level extension points,


01:10:55.740 --> 01:10:57.220
then reach out and we would love to chat


01:10:57.220 --> 01:10:58.860
because I think it would be really cool


01:10:58.860 --> 01:11:01.860
to see Mist being applied in other kinds of contexts as well.


01:11:01.860 --> 01:11:05.540
- Yeah, it would just help it grow, get stronger.


01:11:05.540 --> 01:11:10.400
- Yeah, I guess on a similar sort of call to action sense,


01:11:11.540 --> 01:11:15.940
I think if there's anyone around and listening


01:11:15.940 --> 01:11:19.020
who has sort of JavaScript and web design jobs


01:11:19.020 --> 01:11:21.940
and sort of finds all of this interesting


01:11:21.940 --> 01:11:23.700
and wants to sort of contribute


01:11:23.700 --> 01:11:26.700
to making things look prettier, like reach out.


01:11:26.700 --> 01:11:30.420
Like do honestly any of us on this call.


01:11:30.420 --> 01:11:34.780
And yeah, we'd really like to have more people on board


01:11:34.780 --> 01:11:38.860
not least because it's good to have fun collaborators


01:11:38.860 --> 01:11:42.980
to collaborate with as Chris and Chris have been,


01:11:42.980 --> 01:11:47.460
but also because I think the ecosystem could use a bunch.


01:11:47.460 --> 01:11:51.340
I think Spinks itself, and even DocuTools,


01:11:51.340 --> 01:11:53.380
like the maintainership story on those


01:11:53.380 --> 01:11:55.700
and the work that those maintainers do is,


01:11:55.700 --> 01:11:58.460
well, the maintainership story is,


01:11:58.460 --> 01:12:00.180
let's leave it at interesting,


01:12:00.180 --> 01:12:03.340
and the work that the maintainers do is really amazing


01:12:03.340 --> 01:12:05.900
for the amount of resources that they have.


01:12:05.900 --> 01:12:06.980
So.


01:12:06.980 --> 01:12:08.000
- Yeah, fantastic.


01:12:08.000 --> 01:12:10.920
- Good call to action, let's leave it there.


01:12:10.920 --> 01:12:13.560
Let me ask you all one of the two final questions


01:12:13.560 --> 01:12:15.760
I typically ask before we get out of here.


01:12:15.760 --> 01:12:19.320
Reginald, I'll start with you.


01:12:19.320 --> 01:12:20.480
If you're gonna write some Python code,


01:12:20.480 --> 01:12:22.720
what editor are you using these days?


01:12:22.720 --> 01:12:24.760
- I am using Visual Studio Code.


01:12:24.760 --> 01:12:29.760
Used to use Sublime Text, but I've sort of switched over.


01:12:29.760 --> 01:12:31.540
- Yeah, I feel like that's the natural transition


01:12:31.540 --> 01:12:34.040
for Sublime users, that seems to be what it is.


01:12:37.120 --> 01:12:39.120
I'm wondering which one you might be using.


01:12:39.120 --> 01:12:44.480
No, I love PyJarm as well.


01:12:44.480 --> 01:12:46.480
The best, baby, the best.


01:12:46.480 --> 01:12:48.480
Absolutely. Right on.


01:12:48.480 --> 01:12:50.480
Chris, see you all.


01:12:50.480 --> 01:12:53.760
Mainly Visual Studio Code, I'm afraid.


01:12:53.760 --> 01:12:56.960
Right. Is there, I suspect, probably some notebooks in there as well.


01:12:56.960 --> 01:13:00.080
Sorry, what'd you say?


01:13:00.080 --> 01:13:02.080
There's probably some notebooks in there as well.


01:13:02.080 --> 01:13:03.520
Like some Jupyter.


01:13:06.240 --> 01:13:09.920
- Partly JupyterLab, but mainly Visual Studio Code.


01:13:09.920 --> 01:13:14.400
And there's also this extension for Visual Studio Code,


01:13:14.400 --> 01:13:18.680
and we're working on the extension for JupyterLab as well.


01:13:18.680 --> 01:13:19.840
- Oh, fantastic.


01:13:19.840 --> 01:13:20.680
All right, cool.


01:13:20.680 --> 01:13:22.400
Chris, H?


01:13:22.400 --> 01:13:25.520
- I kind of split 50/50 VS Code and JupyterLab.


01:13:25.520 --> 01:13:27.800
Basically, if I'm doing software development,


01:13:27.800 --> 01:13:31.040
then I do VS Code, and if I do data exploration,


01:13:31.040 --> 01:13:32.800
interactive computing, that kind of workload,


01:13:32.800 --> 01:13:35.320
I use JupyterLab. - On the notebooks.


01:13:35.320 --> 01:13:36.160
Right on.


01:13:36.160 --> 01:13:37.560
Well, thank you all for being here.


01:13:37.560 --> 01:13:38.520
It's been really fun.


01:13:38.520 --> 01:13:39.960
And thank you for all the hard work


01:13:39.960 --> 01:13:43.280
on bringing all this stuff up to 2020.


01:13:43.280 --> 01:13:45.240
- Wait, you have two questions.


01:13:45.240 --> 01:13:46.480
- I do.


01:13:46.480 --> 01:13:48.120
I know, all right, really quick then,


01:13:48.120 --> 01:13:49.600
notable PyPI package.


01:13:49.600 --> 01:13:52.040
And so I don't want to take too much of your time.


01:13:52.040 --> 01:13:56.620
- Okay, I guess for me, it'll be Pursuit Fiber, PPB.


01:13:56.620 --> 01:13:59.200
It's really cool educational game engine


01:13:59.200 --> 01:14:01.280
that's way better than what I had


01:14:01.280 --> 01:14:03.520
when I got started with PyPI.


01:14:03.520 --> 01:14:07.680
I just finished doing the Python Bytes podcast with Brian


01:14:07.680 --> 01:14:09.160
before we started this one.


01:14:09.160 --> 01:14:12.080
And ESA, the European Space Agency,


01:14:12.080 --> 01:14:16.760
just put two Raspberry Pis on the International Space


01:14:16.760 --> 01:14:19.640
Station for kids and students to program against.


01:14:19.640 --> 01:14:21.480
I'm like, that's way better than the turtle I


01:14:21.480 --> 01:14:24.280
got to drive around when I was in school.


01:14:24.280 --> 01:14:25.800
All right, Paul, really quick, what's


01:14:25.800 --> 01:14:27.800
a package or library you want to just give a quick shout out


01:14:27.800 --> 01:14:28.600
to?


01:14:28.600 --> 01:14:32.400
I have a fascination with dependency injection


01:14:32.400 --> 01:14:36.440
in a human oriented way, antidote.


01:14:36.440 --> 01:14:38.440
- Antidote, okay, very interesting.


01:14:38.440 --> 01:14:40.160
That's new to me.


01:14:40.160 --> 01:14:41.000
Chris S.


01:14:41.000 --> 01:14:46.360
Got a library you wanna give a quick shout out to?


01:14:46.360 --> 01:14:50.920
- So is that Chris S?


01:14:50.920 --> 01:14:52.080
- Yes, it was Chris S.


01:14:52.080 --> 01:14:54.660
(all laughing)


01:14:54.660 --> 01:14:58.680
- PipX.


01:14:58.680 --> 01:15:02.520
I hadn't used it until recently.


01:15:02.520 --> 01:15:06.120
And yeah, I love it, yeah.


01:15:06.120 --> 01:15:08.080
- I'm all for that.


01:15:08.080 --> 01:15:10.480
You know, people talk about how it's hard


01:15:10.480 --> 01:15:12.200
to distribute Python applications


01:15:12.200 --> 01:15:14.560
and little utilities by packaging them up


01:15:14.560 --> 01:15:16.120
'cause well, you gotta download the scripts


01:15:16.120 --> 01:15:17.720
and then set up the environment.


01:15:17.720 --> 01:15:19.960
That is the homebrew of the Python world.


01:15:19.960 --> 01:15:21.900
If you want something that I can go to the terminal


01:15:21.900 --> 01:15:24.920
and just type a command and it runs,


01:15:24.920 --> 01:15:26.600
well, if you pipx install it,


01:15:26.600 --> 01:15:28.400
it's gonna just be there and it's fantastic.


01:15:28.400 --> 01:15:29.240
I love it.


01:15:29.240 --> 01:15:32.520
People that should use it more for that use case.


01:15:32.520 --> 01:15:34.480
- Yeah, yeah, it's been excellent.


01:15:34.480 --> 01:15:38.000
And also with all the work that's been going on in pip,


01:15:38.000 --> 01:15:39.800
flip for packaging.


01:15:39.800 --> 01:15:40.900
- All right, right on.


01:15:40.900 --> 01:15:48.040
- I feel like in the name of improving UI, UX


01:15:48.040 --> 01:15:50.360
and window dressing on technology


01:15:50.360 --> 01:15:51.740
that some people think is outdated,


01:15:51.740 --> 01:15:54.120
I would shout out to Rich.


01:15:54.120 --> 01:15:57.640
The sort of like UI components, visualizations, whatever.


01:15:57.640 --> 01:16:01.400
I would love to find a way to get Rich into Jupyter book


01:16:01.400 --> 01:16:02.920
or even Sphinx or something like that.


01:16:02.920 --> 01:16:05.960
'Cause I think it makes for a really nice user experience.


01:16:05.960 --> 01:16:07.920
The only problem is that the maintainer of Rich


01:16:07.920 --> 01:16:09.900
is much better at Wordle than I am.


01:16:09.900 --> 01:16:11.640
And so he's like consistently beating me


01:16:11.640 --> 01:16:13.560
by two or three tries.


01:16:13.560 --> 01:16:14.660
- Every day.


01:16:14.660 --> 01:16:16.920
(laughing)


01:16:16.920 --> 01:16:20.640
- 'Cause this seems relevant.


01:16:20.640 --> 01:16:22.540
One of the things I've been doing through work


01:16:22.540 --> 01:16:25.660
as well as personal time is improving error messages in Pip


01:16:25.660 --> 01:16:26.940
And Rich has played a decent--


01:16:26.940 --> 01:16:27.780
- Oh.


01:16:27.780 --> 01:16:28.620
- Oh, yeah.


01:16:28.620 --> 01:16:29.580
- Fantastic.


01:16:29.580 --> 01:16:33.420
- So it's pretty likely that in the coming release or two,


01:16:33.420 --> 01:16:34.900
you'll see better error messages,


01:16:34.900 --> 01:16:37.180
partly thanks to Will's work on Rich.


01:16:37.180 --> 01:16:38.000
- Yeah, absolutely.


01:16:38.000 --> 01:16:40.700
He's got the whole trace back enhancements and everything.


01:16:40.700 --> 01:16:41.940
All right, thank you all for being here.


01:16:41.940 --> 01:16:42.780
It's been great.


01:16:42.780 --> 01:16:44.740
Chat with you later.

