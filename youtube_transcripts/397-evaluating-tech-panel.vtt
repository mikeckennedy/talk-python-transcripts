WEBVTT

00:00:00.000 --> 00:00:06.880
>> Hello, everyone out there on YouTube. Hello, crew. So awesome to have you all here. If


00:00:06.880 --> 00:00:11.520
you've got questions, comments, put them in the live chat. And with that, let's just go


00:00:11.520 --> 00:00:18.800
ahead and kick this off. Hey, all, welcome to Talk Python To Me. Gareth, Kim, Lukasz,


00:00:18.800 --> 00:00:22.840
Cecil, Emily, and Dan. I've got a bunch of you here, and I'm so excited to have you all


00:00:22.840 --> 00:00:26.360
on the show. Thanks for being here. >> Sure thing.


00:00:26.360 --> 00:00:32.040
thing. Yeah, I'm excited, man. We have a nice little party going on. Yeah, we do. We definitely


00:00:32.040 --> 00:00:38.760
do. Multicontinent. Yeah. So I'm really excited to talk about choosing technology, choosing


00:00:38.760 --> 00:00:44.120
libraries for programming, or maybe a database that we might use for a project. We have this


00:00:44.120 --> 00:00:51.400
paradox of choice type of problem, and especially in the Python space. I haven't even looked.


00:00:52.040 --> 00:00:55.080
Are we over 400,000 packages on PyPI?


00:00:55.080 --> 00:00:56.080
There's many, right?


00:00:56.080 --> 00:01:02.360
- We are over 14 terabytes of storage on PyPI, that I know.


00:01:02.360 --> 00:01:03.560
- Oh my goodness.


00:01:03.560 --> 00:01:04.400
- Yeah.


00:01:04.400 --> 00:01:05.220
- Okay.


00:01:05.220 --> 00:01:06.400
- A lot.


00:01:06.400 --> 00:01:07.240
- All right, so-


00:01:07.240 --> 00:01:08.600
- It's mostly machine learning,


00:01:08.600 --> 00:01:11.880
but you know, there's a lot of packages.


00:01:11.880 --> 00:01:14.080
- Yeah, there's definitely a lot of packages.


00:01:14.080 --> 00:01:18.080
Okay, well, how do you pick?


00:01:18.080 --> 00:01:20.560
How do you go to that list and say,


00:01:20.560 --> 00:01:22.260
I'm going to search for a web framework.


00:01:22.260 --> 00:01:24.100
And look, there's 100 results.


00:01:24.100 --> 00:01:25.260
How do I pick?


00:01:25.260 --> 00:01:27.780
Or I'm going to find a way to talk to a database.


00:01:27.780 --> 00:01:28.820
What database should it be?


00:01:28.820 --> 00:01:32.880
So that's going to be our topic for the show today.


00:01:32.880 --> 00:01:37.840
And let's just start real quick with the elevator pitch


00:01:37.840 --> 00:01:41.040
of who you are and your background.


00:01:41.040 --> 00:01:43.880
30 seconds or less, we'll go around the Brady Bunch


00:01:43.880 --> 00:01:44.580
squares here.


00:01:44.580 --> 00:01:47.060
Gareth?


00:01:47.060 --> 00:01:49.980
- Hi, I'm Gareth.


00:01:49.980 --> 00:01:53.480
I've been programming for probably 40 years, I guess, now,


00:01:53.480 --> 00:01:56.060
because I started when I was about three.


00:01:56.060 --> 00:01:57.760
I'm on a Dragon 64,


00:01:57.760 --> 00:02:01.540
but it was only recently I got into Python, really,


00:02:01.540 --> 00:02:03.580
when I took up a job as a CTO of a company


00:02:03.580 --> 00:02:06.180
that did everything in Python and haven't looked back.


00:02:06.180 --> 00:02:10.780
And now I'm doing CTO stuff all the time.


00:02:10.780 --> 00:02:11.940
- Fantastic.


00:02:11.940 --> 00:02:16.500
I think CTO positions are very much in this role.


00:02:16.500 --> 00:02:18.420
You've got to set a little bit of guidance


00:02:18.420 --> 00:02:21.360
for the company and the teams, right?


00:02:21.360 --> 00:02:23.900
- Yes, and I don't get to do code anymore,


00:02:23.900 --> 00:02:25.980
I just get to watch people write code.


00:02:25.980 --> 00:02:27.700
- You just get to make decisions for them


00:02:27.700 --> 00:02:30.620
and watch whether they enjoy it or don't enjoy it.


00:02:30.620 --> 00:02:32.740
Kim, welcome back.


00:02:32.740 --> 00:02:34.420
- Thanks, Mike.


00:02:34.420 --> 00:02:36.860
I must be roughly the same age as Gareth,


00:02:36.860 --> 00:02:39.380
but I have been writing code for probably about 25 years,


00:02:39.380 --> 00:02:41.340
'cause I didn't start when I was three.


00:02:41.340 --> 00:02:45.180
Professionally, I've been doing some Python,


00:02:45.180 --> 00:02:48.500
some C, some otherwise for 20 odd years,


00:02:48.500 --> 00:02:51.420
writing software for embedded systems, doing DevOps work,


00:02:51.420 --> 00:02:54.100
and at the moment doing dot engineering work


00:02:54.100 --> 00:02:55.900
with I guess in the American sense,


00:02:55.900 --> 00:02:58.460
you'd call a mortgage provider in South Africa.


00:02:58.460 --> 00:03:00.020
It's my current employer.


00:03:00.020 --> 00:03:01.220
- Yeah, fantastic.


00:03:01.220 --> 00:03:02.500
Lukasz, welcome back.


00:03:02.500 --> 00:03:06.680
- Hi, I'm the core developer in residence for CPython.


00:03:06.680 --> 00:03:09.340
So actually getting money from the Python Software Foundation


00:03:09.340 --> 00:03:12.140
to help develop Python.


00:03:12.140 --> 00:03:16.680
Just yesterday we released six simultaneous versions


00:03:16.680 --> 00:03:19.380
of Python at the same time, which I think is a record.


00:03:19.380 --> 00:03:21.780
So I mostly do that.


00:03:21.780 --> 00:03:23.320
I don't program for 40 years.


00:03:23.320 --> 00:03:25.900
I'm 37 at the moment.


00:03:25.900 --> 00:03:29.000
Still maintaining 37 because my birthday's March,


00:03:29.000 --> 00:03:30.400
so approaching quickly.


00:03:30.400 --> 00:03:31.240
- Hang in there.


00:03:31.240 --> 00:03:32.400
Don't let 38 get you.


00:03:32.400 --> 00:03:35.140
- Yes, I'm not almost 40, I'm 37.


00:03:35.140 --> 00:03:40.260
- Awesome, well congratulations on all the great work.


00:03:40.260 --> 00:03:43.460
I know you've done a ton of work to keep CPI--


00:03:43.460 --> 00:03:44.300
- Thank you.


00:03:44.300 --> 00:03:46.780
There seems to be more and more to do actually.


00:03:46.780 --> 00:03:50.760
So just looking at 3.11.1 that we released yesterday,


00:03:50.760 --> 00:03:55.020
it had almost 500 comments since 3.11.0,


00:03:55.020 --> 00:03:57.660
which is kind of unprecedented as a rate of change.


00:03:57.660 --> 00:04:02.660
So we have so much velocity right now


00:04:02.660 --> 00:04:06.020
that I have never seen before, so a lot of change.


00:04:06.020 --> 00:04:06.840
- Amazing.


00:04:06.840 --> 00:04:11.200
to Nidbatch Elder on another podcast that we were doing


00:04:11.200 --> 00:04:12.480
we'll come out before this one.


00:04:12.480 --> 00:04:17.480
And we looked, the change log for CPython is 175,000 words.


00:04:17.480 --> 00:04:21.320
A typical novel is 80,000.


00:04:21.320 --> 00:04:22.840
So that's a lot.


00:04:22.840 --> 00:04:23.840
That's nuts.


00:04:23.840 --> 00:04:25.720
Cecil, always good to have you on the show.


00:04:25.720 --> 00:04:26.560
Welcome back.


00:04:26.560 --> 00:04:27.600
- Sure, thanks for having me.


00:04:27.600 --> 00:04:31.460
Everyone, I'm Cecil Philip, developer advocate at Stripe.


00:04:31.460 --> 00:04:32.920
I will not tell you how old I am,


00:04:32.920 --> 00:04:35.280
but I will tell you that my programming gray beard


00:04:35.280 --> 00:04:36.500
is just starting to come in.


00:04:36.500 --> 00:04:40.380
So not fully there yet, but I'm still working on it.


00:04:40.380 --> 00:04:44.540
I primarily been doing a lot of.NET stuff,


00:04:44.540 --> 00:04:47.940
some Python stuff, recently started playing around with Go.


00:04:47.940 --> 00:04:49.820
Maybe we'll talk about that in


00:04:49.820 --> 00:04:51.820
the midst of this conversation as well.


00:04:51.820 --> 00:04:54.300
But other than that, as an advocate,


00:04:54.300 --> 00:04:55.980
I spent a lot of time doing video


00:04:55.980 --> 00:04:58.260
and going to conferences and doing demos and stuff.


00:04:58.260 --> 00:05:02.020
So I feel like my job is to learn stuff to an extent.


00:05:02.020 --> 00:05:04.180
There's a lot of that that happens and


00:05:04.180 --> 00:05:08.100
So yeah, I kind of have a lot of fun doing it both, you know, for work and, you know,


00:05:08.100 --> 00:05:09.100
outside of work.


00:05:09.100 --> 00:05:11.660
Yeah, that sounds like a great job.


00:05:11.660 --> 00:05:13.580
Emily, welcome back.


00:05:13.580 --> 00:05:15.540
Hi there.


00:05:15.540 --> 00:05:17.380
I'm Emily Morehouse.


00:05:17.380 --> 00:05:21.980
I'm the director of engineering at a company called Cuddle Soft.


00:05:21.980 --> 00:05:29.940
We are a kind of digital product consultancy focusing on, you know, user experience for


00:05:29.940 --> 00:05:34.820
full stack applications, but we also get into some of the nitty gritty stuff.


00:05:34.820 --> 00:05:40.020
So we kind of do that full spectrum DevOps, firmware, middleware development,


00:05:40.020 --> 00:05:43.820
web applications, all the way through design.


00:05:43.820 --> 00:05:47.380
So I get to touch a lot of different pieces of technology.


00:05:47.380 --> 00:05:50.540
A lot of my work is in Python, but not all of it.


00:05:50.540 --> 00:05:55.420
I write a lot of Ruby, a lot of JavaScript, kind of across the spectrum.


00:05:55.420 --> 00:06:00.420
So I get to kind of see how different ecosystems handle


00:06:00.420 --> 00:06:03.460
open source, which is really interesting


00:06:03.460 --> 00:06:05.220
because I feel like the JavaScript world


00:06:05.220 --> 00:06:06.660
is very different from the Python world


00:06:06.660 --> 00:06:08.820
than the Ruby world and kind of down that stack.


00:06:08.820 --> 00:06:11.020
So yeah, that's me.


00:06:11.020 --> 00:06:13.820
- So this topic is right down, right near Wheelhouse.


00:06:13.820 --> 00:06:16.980
And I think also the consulting side,


00:06:16.980 --> 00:06:18.700
the agency side is interesting


00:06:18.700 --> 00:06:21.620
because you work with one group


00:06:21.620 --> 00:06:23.300
and you say, "Here's what we recommend for you."


00:06:23.300 --> 00:06:29.100
Oh, another group has another company has a different set of software skills.


00:06:29.100 --> 00:06:31.580
So you might recommend something different in that case.


00:06:31.580 --> 00:06:33.380
Right. Yeah, absolutely.


00:06:33.380 --> 00:06:38.700
And our the technical expertise that our clients come with is very wide reaching.


00:06:38.700 --> 00:06:45.780
Right. So some people are completely non-technical, don't want to touch it, don't want to know anything about it to, you know, very technical teams.


00:06:45.780 --> 00:06:51.740
We're kind of coming in as a specific partner on a specific piece of their tech that they are eventually going to take over.


00:06:52.700 --> 00:06:55.660
And there's a lot more, you know,


00:06:55.660 --> 00:06:57.540
kind of risk management for this, right?


00:06:57.540 --> 00:06:59.340
Like we can't build something for a client


00:06:59.340 --> 00:07:00.940
but then we're gonna say, you know,


00:07:00.940 --> 00:07:03.820
your library isn't supported in six months.


00:07:03.820 --> 00:07:08.100
So it also gives us a chance to start fresh a lot, right?


00:07:08.100 --> 00:07:10.020
Like most of our projects are greenfield.


00:07:10.020 --> 00:07:12.140
So we do get to say, hey, look,


00:07:12.140 --> 00:07:15.020
like we've been doing our due diligence


00:07:15.020 --> 00:07:17.060
on this new framework or this new library


00:07:17.060 --> 00:07:18.660
or whatever it is.


00:07:18.660 --> 00:07:21.140
And we think that this is a really good place


00:07:21.140 --> 00:07:26.020
for you to be and get a chance to like actually build something with a new


00:07:26.020 --> 00:07:28.740
library more so than like convincing, you know,


00:07:28.740 --> 00:07:31.780
a company to rewrite their Django application in something else.


00:07:31.780 --> 00:07:37.380
Right. You also were the chair of PyCon. Is that the right title?


00:07:37.380 --> 00:07:42.580
Yeah. I forgot to mention that I'm the, I'm the recovering chair,


00:07:42.580 --> 00:07:47.220
chair, chair emeritus now. Yeah. Yeah. So I was going to ask,


00:07:48.700 --> 00:07:51.780
I'm sure there is.


00:07:51.780 --> 00:07:55.020
You're not overseeing 2023, are you?


00:07:55.020 --> 00:07:55.520
No.


00:07:55.520 --> 00:07:56.020
I'm--


00:07:56.020 --> 00:07:57.140
Just get to attend.


00:07:57.140 --> 00:07:57.980
--taking a break.


00:07:57.980 --> 00:07:58.480
Yep.


00:07:58.480 --> 00:07:59.460
Fantastic.


00:07:59.460 --> 00:08:00.820
All right, well, thanks for that.


00:08:00.820 --> 00:08:02.860
Dan, welcome to the show.


00:08:02.860 --> 00:08:03.360
Thanks.


00:08:03.360 --> 00:08:05.500
I'm Dan Gerlank.


00:08:05.500 --> 00:08:09.320
I've been doing software development professionally


00:08:09.320 --> 00:08:12.460
for about 20 years, to some degree.


00:08:12.460 --> 00:08:15.900
More in one capacity or another, I'm


00:08:15.900 --> 00:08:18.340
currently the director of engineering


00:08:18.340 --> 00:08:23.340
for the data science and ML engineering team at Ampersand,


00:08:23.340 --> 00:08:27.780
which probably the simplest way to think of it,


00:08:27.780 --> 00:08:31.380
it's kind of like a brokerage for television advertising.


00:08:31.380 --> 00:08:36.780
And prior to that, I actually ran my own consulting shop


00:08:36.780 --> 00:08:38.300
for a decent amount of time.


00:08:38.300 --> 00:08:41.120
So I've worked on that agency side a bit


00:08:41.120 --> 00:08:44.620
and also started my career in quant finance.


00:08:44.620 --> 00:08:49.780
So I've worked across a wide range of things.


00:08:49.780 --> 00:08:52.460
And I'm pretty involved with the Asara project


00:08:52.460 --> 00:08:56.060
these days on the open source side.


00:08:56.060 --> 00:08:57.980
And also do a bit of teaching on the side.


00:08:57.980 --> 00:09:02.340
I've taught on O'Reilly about pandas and different things


00:09:02.340 --> 00:09:03.380
from time to time.


00:09:03.380 --> 00:09:05.060
So I try to--


00:09:05.060 --> 00:09:06.660
>>Victor: Teaching is always a great way


00:09:06.660 --> 00:09:10.180
to learn these technologies a little bit deeper as well.


00:09:10.180 --> 00:09:10.780
>>Tom: For sure.


00:09:10.780 --> 00:09:15.080
and you definitely learn it for real


00:09:15.080 --> 00:09:17.120
when you go out to teach it.


00:09:17.120 --> 00:09:19.180
- The fear of having to stand in front of a bunch of people


00:09:19.180 --> 00:09:21.280
and not know the answer will motivate you.


00:09:21.280 --> 00:09:22.120
(laughing)


00:09:22.120 --> 00:09:22.940
- That's right.


00:09:22.940 --> 00:09:26.520
- I guess conference speaking kind of works that way,


00:09:26.520 --> 00:09:29.000
but it's not as back and forth as well.


00:09:29.000 --> 00:09:31.520
All right, so let's kick off this conversation


00:09:31.520 --> 00:09:35.160
with maybe a story from some of you.


00:09:35.160 --> 00:09:39.240
So I wanted to start with just maybe a story


00:09:39.240 --> 00:09:43.880
how you've chosen some tech stack or some database


00:09:43.880 --> 00:09:48.880
or some new framework, a lot of leeway in the scope there.


00:09:48.880 --> 00:09:53.520
But whoever wants to jump in, just give us a story


00:09:53.520 --> 00:09:56.280
of something you've sort of gone down that path recently.


00:09:56.280 --> 00:10:00.120
- Well, I'll jump in and talk a little bit about


00:10:00.120 --> 00:10:02.840
the strategy of how I choose to learn stuff.


00:10:02.840 --> 00:10:05.500
And I think it's important that you have a learning


00:10:05.500 --> 00:10:07.920
or a choice strategy, at least for me,


00:10:07.920 --> 00:10:10.560
because there's just so much stuff to play with


00:10:10.560 --> 00:10:12.000
and there's only so many hours in the day.


00:10:12.000 --> 00:10:14.760
And so you always have to be surgical with your time


00:10:14.760 --> 00:10:16.940
about what you choose to do.


00:10:16.940 --> 00:10:19.440
And so one of the things for me is,


00:10:19.440 --> 00:10:21.560
again, I don't build production applications


00:10:21.560 --> 00:10:23.720
and I think that's an important thing to note.


00:10:23.720 --> 00:10:25.960
So everyone else's perspective


00:10:25.960 --> 00:10:27.320
might be a little bit different.


00:10:27.320 --> 00:10:28.880
But most of the apps that I'm building,


00:10:28.880 --> 00:10:33.280
I'm beta testing stuff, I'm creating things for other folks,


00:10:33.280 --> 00:10:35.840
doing proof of concepts with companies and stuff like that.


00:10:35.840 --> 00:10:38.360
So now when you think about the things that I have to learn,


00:10:38.360 --> 00:10:40.200
I usually have to learn things to like,


00:10:40.200 --> 00:10:41.260
get it to work for a little bit,


00:10:41.260 --> 00:10:43.080
and then I'll walk away and I'll go do something else.


00:10:43.080 --> 00:10:43.920
Right?


00:10:43.920 --> 00:10:45.640
Like, I don't learn it with the perspective


00:10:45.640 --> 00:10:48.240
of I have to maintain it over a long period of time.


00:10:48.240 --> 00:10:50.880
Now that is not important that I do it the right way,


00:10:50.880 --> 00:10:52.000
but again, you know,


00:10:52.000 --> 00:10:54.720
the perspective is just a little bit different.


00:10:54.720 --> 00:10:58.400
So for me, one of the things that I often try to do is,


00:10:58.400 --> 00:11:00.520
you know, try to find the thing that like,


00:11:00.520 --> 00:11:02.120
I'm really interested in doing,


00:11:02.120 --> 00:11:04.600
or like the thing that'll be useful at work,


00:11:04.600 --> 00:11:06.440
and try and plug those things together, right?


00:11:06.440 --> 00:11:09.000
And try and see how we can find some symmetry there.


00:11:09.000 --> 00:11:10.840
And so an example would be like,


00:11:10.840 --> 00:11:12.440
one of the things I'm playing with right now


00:11:12.440 --> 00:11:14.240
is open telemetry, right?


00:11:14.240 --> 00:11:16.280
Now I don't work for an open telemetry company


00:11:16.280 --> 00:11:18.680
and that's not a thing that we have libraries


00:11:18.680 --> 00:11:21.760
or extensions for, but at the same time too,


00:11:21.760 --> 00:11:23.960
we think about as we're building apps,


00:11:23.960 --> 00:11:25.880
inspection is an important thing, right?


00:11:25.880 --> 00:11:28.640
And being able to give folks guidance is an important thing.


00:11:28.640 --> 00:11:31.040
And so when people come to me as an advocate


00:11:31.040 --> 00:11:34.300
and ask questions, I might not have to know everything


00:11:34.300 --> 00:11:38.140
in detail, but I try and know things enough so that I can at least have an opinion and


00:11:38.140 --> 00:11:42.140
have a conversation about it, you know, be able to speak intelligently about it, even


00:11:42.140 --> 00:11:45.780
though I might not know like all the knobs and whistles and like dials I have to turn


00:11:45.780 --> 00:11:47.100
to like get the thing to work.


00:11:47.100 --> 00:11:53.780
You know, one of the things that I think would be really important for that role is really


00:11:53.780 --> 00:11:57.740
carefully tracking where's the momentum in frameworks.


00:11:57.740 --> 00:12:03.500
Maybe it's not the most important or wide, widely used thing at the moment, but in six


00:12:03.500 --> 00:12:05.500
a little bit of the Gretzky quote,


00:12:05.500 --> 00:12:07.020
where is this thing going?


00:12:07.020 --> 00:12:09.580
And what is the advice you're gonna give to people?


00:12:09.580 --> 00:12:11.380
- Yeah, I agree with that.


00:12:11.380 --> 00:12:14.640
And that also, again, kind of goes into the strategy, right?


00:12:14.640 --> 00:12:17.940
Of like, what am I learning this thing for?


00:12:17.940 --> 00:12:18.780
You know what I mean?


00:12:18.780 --> 00:12:20.820
Like, am I learning it to, again,


00:12:20.820 --> 00:12:23.460
like am I learning it specifically to, you know,


00:12:23.460 --> 00:12:25.480
achieve like a particular personal goal?


00:12:25.480 --> 00:12:26.980
Is there something that I'm trying to fix?


00:12:26.980 --> 00:12:29.700
Am I trying to like explore technology


00:12:29.700 --> 00:12:32.060
so I could pick and choose the thing that I wanna do, right?


00:12:32.060 --> 00:12:34.560
Like, what exactly am I learning this thing?


00:12:34.560 --> 00:12:36.480
Am I learning it to teach it to someone else?


00:12:36.480 --> 00:12:39.240
Right, like, no, that's a completely different perspective


00:12:39.240 --> 00:12:40.200
as you're trying to figure out,


00:12:40.200 --> 00:12:42.120
well, how do I kind of zone into the thing


00:12:42.120 --> 00:12:43.420
that I'm trying to do?


00:12:43.420 --> 00:12:46.040
- Yeah, excellent.


00:12:46.040 --> 00:12:47.800
- Cam, I was thinking about you, man.


00:12:47.800 --> 00:12:48.860
- Yeah, I was just gonna add something


00:12:48.860 --> 00:12:50.440
to what Cecil was saying there.


00:12:50.440 --> 00:12:52.240
One of the important things that you point out


00:12:52.240 --> 00:12:54.200
that you often end up doing is maybe helping people


00:12:54.200 --> 00:12:56.440
select a framework or a piece of tech stack


00:12:56.440 --> 00:12:58.200
or something to use.


00:12:58.200 --> 00:13:00.000
And the kind of thing that always,


00:13:00.000 --> 00:13:02.200
that used to strike a lot of the teams I've worked on,


00:13:02.200 --> 00:13:04.800
and I certainly was guilty as anybody else,


00:13:04.800 --> 00:13:06.360
is spending a heck of a lot of time


00:13:06.360 --> 00:13:07.360
going back and forth thinking,


00:13:07.360 --> 00:13:09.000
well, we could use this one, or we could use this one,


00:13:09.000 --> 00:13:09.840
and let's try this one,


00:13:09.840 --> 00:13:11.440
or we'll take three days to try this one,


00:13:11.440 --> 00:13:13.760
and then next week we'll take three days to try that one.


00:13:13.760 --> 00:13:16.720
And ultimately, if somebody's paying you to write software,


00:13:16.720 --> 00:13:18.200
it's kind of an important lesson to remember


00:13:18.200 --> 00:13:19.960
that ultimately you have to pick something


00:13:19.960 --> 00:13:21.720
and it'll be good enough.


00:13:21.720 --> 00:13:23.480
Your job isn't actually to pick the right thing


00:13:23.480 --> 00:13:24.440
and spend a month on it.


00:13:24.440 --> 00:13:26.560
There are other things that are paying you to do.


00:13:26.560 --> 00:13:27.920
So one of the important things


00:13:27.920 --> 00:13:29.120
to feed into tech stack selection


00:13:29.120 --> 00:13:31.280
is basically if it's good enough, that's fine.


00:13:31.280 --> 00:13:33.360
If it's not good enough, then obviously it must go.


00:13:33.360 --> 00:13:35.240
And it's useful to have somebody like Cecil


00:13:35.240 --> 00:13:37.480
to be able to tell you if it's good enough.


00:13:37.480 --> 00:13:40.920
But we can make the mistake of seeking out kind of perfect.


00:13:40.920 --> 00:13:43.120
And you're like, is there absolutely anything wrong with us?


00:13:43.120 --> 00:13:43.960
Now we'll use this one.


00:13:43.960 --> 00:13:46.120
Let's try that one instead, or maybe it will be better.


00:13:46.120 --> 00:13:48.120
And three weeks later, and they're saying to you,


00:13:48.120 --> 00:13:49.200
why haven't you made the deadline?


00:13:49.200 --> 00:13:50.880
Ah, but we have the perfect tool.


00:13:50.880 --> 00:13:51.800
We haven't used it yet.


00:13:51.800 --> 00:13:53.040
It's taken us a month to find that,


00:13:53.040 --> 00:13:54.720
but we have the perfect tool now.


00:13:54.720 --> 00:13:59.660
- Yeah, that's an easy trap to fall into.


00:13:59.660 --> 00:14:01.920
- It is, and I think a lot of people probably fall into it


00:14:01.920 --> 00:14:05.120
and you gotta decide, is this a one-way door


00:14:05.120 --> 00:14:06.120
or a two-way door?


00:14:06.120 --> 00:14:08.520
Is it the gate at the exit of the airport?


00:14:08.520 --> 00:14:09.880
Like if I make this choice,


00:14:09.880 --> 00:14:11.880
how committed am I to this thing?


00:14:11.880 --> 00:14:14.120
Because if you try it for a week


00:14:14.120 --> 00:14:16.120
and it's not what you thought it would,


00:14:16.120 --> 00:14:17.840
you could come back and try something else.


00:14:17.840 --> 00:14:22.240
Then why spend three weeks before you even start, right?


00:14:22.240 --> 00:14:25.400
You've learned a lot in that quote, failure, right?


00:14:25.400 --> 00:14:29.920
- Well, I would even go further and say that


00:14:29.920 --> 00:14:34.100
technology choice doesn't really matter that much.


00:14:34.100 --> 00:14:38.720
The experience I had with large companies I worked for


00:14:38.720 --> 00:14:42.440
was that they often would choose technology


00:14:42.440 --> 00:14:47.440
that was utterly boring and kind of not interesting


00:14:47.440 --> 00:14:49.920
even at the time when they did choose it,


00:14:49.920 --> 00:14:52.360
what became kind of dated very quickly.


00:14:52.360 --> 00:14:53.960
And it didn't matter one bit.


00:14:53.960 --> 00:14:58.080
Like Facebook was PHP, MySQL and Linux, right?


00:14:58.080 --> 00:15:00.960
Only when they already grew, it wasn't really Linux.


00:15:00.960 --> 00:15:03.560
It wasn't really MySQL and it wasn't really PHP.


00:15:03.560 --> 00:15:08.140
But at that point you already have enough infrastructure


00:15:08.140 --> 00:15:10.640
and enough employees and everything


00:15:10.640 --> 00:15:13.800
to actually keep it going anyway.


00:15:13.800 --> 00:15:16.880
Same with like Instagram that was purchased by Facebook,


00:15:16.880 --> 00:15:17.920
but it was Django, right?


00:15:17.920 --> 00:15:19.920
and still Django, but it's not really Django.


00:15:19.920 --> 00:15:21.280
It doesn't matter.


00:15:21.280 --> 00:15:23.560
It brought them to where they are


00:15:23.560 --> 00:15:26.200
through it being an established technology


00:15:26.200 --> 00:15:29.940
and I would in fact kind of err on the side of boring


00:15:29.940 --> 00:15:34.200
because it's going to be there for you going forward.


00:15:34.200 --> 00:15:36.680
And that's important, especially if you're choosing


00:15:36.680 --> 00:15:39.680
a data store, you want to choose something that you know


00:15:39.680 --> 00:15:42.800
you're not going to have to migrate from in a year or two


00:15:42.800 --> 00:15:45.400
because that's not something that is a productive


00:15:45.400 --> 00:15:46.920
use of your time.


00:15:46.920 --> 00:15:52.760
So I'm going to kind of contradict what I'm saying now very often as part of my job and say,


00:15:52.760 --> 00:15:55.080
"You shouldn't be an early adopter."


00:15:55.080 --> 00:16:01.440
But, well, in case of CPython, you absolutely should, and you should test our alphas and test our betas.


00:16:01.440 --> 00:16:06.120
But, you know, you have your CI for that, so it's a safe environment.


00:16:06.120 --> 00:16:09.000
Like, don't run 3.12 in production right now.


00:16:09.000 --> 00:16:10.040
Do test with it, right?


00:16:10.040 --> 00:16:12.240
So this sort of thing.


00:16:12.240 --> 00:16:15.920
In Python, yeah, it's already like you can use 3.11.1 just fine.


00:16:15.920 --> 00:16:23.280
and it should be okay since we are with our annual release cycle, kind of in sync with


00:16:23.280 --> 00:16:30.280
Linux distributions, which are doing testing of a new Python version as part of their release


00:16:30.280 --> 00:16:31.600
for October.


00:16:31.600 --> 00:16:34.880
So Fedora and Ubuntu test our newest Python.


00:16:34.880 --> 00:16:38.200
So it's kind of best tested as it ever was.


00:16:38.200 --> 00:16:41.720
But when it comes to your data store, when it comes to your web framework, you know,


00:16:41.720 --> 00:16:46.820
something that is extremely new and well we're not sure if it's gonna stay


00:16:46.820 --> 00:16:52.740
forever so maybe maybe a kind of a bold choice unless it's like a 10 10x


00:16:52.740 --> 00:16:57.100
multiplier of your productivity I would just choose the boring thing.


00:16:57.100 --> 00:17:03.140
Well your advice about CPython you know 3.10 versus 3.11 it's not the same as


00:17:03.140 --> 00:17:09.260
Django versus FastAPI right it's like the evolution of the thing you could


00:17:09.260 --> 00:17:10.100
- Sure. - It always roll back


00:17:10.100 --> 00:17:11.220
a little bit, right?


00:17:11.220 --> 00:17:13.220
It's a little bit different.


00:17:13.220 --> 00:17:14.380
- Oh yes, absolutely.


00:17:14.380 --> 00:17:17.260
So it's like, I don't know, Postgres 13, 14,


00:17:17.260 --> 00:17:19.020
and so on and so on.


00:17:19.020 --> 00:17:20.980
The same time, like, you know, kind of,


00:17:20.980 --> 00:17:22.380
obviously technology changes,


00:17:22.380 --> 00:17:24.220
and even if we're not talking bugs,


00:17:24.220 --> 00:17:26.020
but just plant deprecations,


00:17:26.020 --> 00:17:27.380
there might be some disruption


00:17:27.380 --> 00:17:29.420
when whether you're, you know,


00:17:29.420 --> 00:17:31.380
upgrading to a newer Python version.


00:17:31.380 --> 00:17:34.620
Nowadays, much smoother than it was


00:17:34.620 --> 00:17:36.140
between Python 2 and Python 3,


00:17:36.140 --> 00:17:38.420
so it shouldn't be a big deal.


00:17:38.420 --> 00:17:41.920
but it might be a deal, depending on what third-party


00:17:41.920 --> 00:17:43.420
libraries you're using.


00:17:43.420 --> 00:17:45.420
So yeah, obviously there's considerations for you,


00:17:45.420 --> 00:17:48.580
which is why we would like you to test with 3.12


00:17:48.580 --> 00:17:50.580
like in your CIs and so on and so on.


00:17:50.580 --> 00:17:54.620
- It's already there, just put it as a run target.


00:17:54.620 --> 00:17:57.860
- Yes, but you know, when it comes to third-party projects,


00:17:57.860 --> 00:18:02.860
I am usually very boring and I was the last person


00:18:02.860 --> 00:18:06.300
from my friends to actually adopt VS Code


00:18:06.300 --> 00:18:08.760
and the last person to adopt fish.


00:18:08.760 --> 00:18:10.860
You know, like I was happily with Bash


00:18:10.860 --> 00:18:13.620
and then I switched to ZSH just at the time


00:18:13.620 --> 00:18:16.180
when it started being boring, you know,


00:18:16.180 --> 00:18:18.180
and I was like, come on, really?


00:18:18.180 --> 00:18:21.340
So yeah, like I kind of like my work


00:18:21.340 --> 00:18:23.860
to actually not depend on something


00:18:23.860 --> 00:18:26.140
that is extremely volatile.


00:18:26.140 --> 00:18:27.300
- Yeah, that makes sense.


00:18:27.300 --> 00:18:28.540
- Yeah, and I think it goes back


00:18:28.540 --> 00:18:30.220
to what Cecil was saying earlier


00:18:30.220 --> 00:18:32.660
about needing to have some sort of like framework


00:18:32.660 --> 00:18:34.860
for how you make these decisions.


00:18:34.860 --> 00:18:36.900
And so I think that it's important to call out


00:18:36.900 --> 00:18:41.020
that a lot of times you need a base set of criteria


00:18:41.020 --> 00:18:42.620
when you're evaluating a tool, right?


00:18:42.620 --> 00:18:45.100
Like, please like check the license,


00:18:45.100 --> 00:18:47.380
make sure that you're even allowed to use this thing


00:18:47.380 --> 00:18:48.940
for whatever you're doing.


00:18:48.940 --> 00:18:51.300
And then a lot of it kind of gets into that risk tolerance


00:18:51.300 --> 00:18:53.060
where it sounds like,


00:18:53.060 --> 00:18:56.520
Lukasz probably is on like the very stable side of it


00:18:56.520 --> 00:18:58.540
versus the leading edge side, you know?


00:18:58.540 --> 00:19:00.180
And so you've got to say,


00:19:00.180 --> 00:19:03.420
do I care about doing the new and exciting thing?


00:19:03.420 --> 00:19:05.500
or should I make the obvious choice


00:19:05.500 --> 00:19:08.340
to make sure that I have that long-term stability


00:19:08.340 --> 00:19:11.860
that you would get from choosing Django


00:19:11.860 --> 00:19:15.260
over FastAPI sort of situation.


00:19:15.260 --> 00:19:16.520
- Yeah, absolutely.


00:19:16.520 --> 00:19:18.460
Gareth, how about you?


00:19:18.460 --> 00:19:21.660
You got some examples of decisions you had to make


00:19:21.660 --> 00:19:23.540
as your CTO role?


00:19:23.540 --> 00:19:27.060
- I'm just thinking, I'm very much in Lukasz's world


00:19:27.060 --> 00:19:28.780
of boring is good.


00:19:28.780 --> 00:19:31.780
So you always want to go for the tried and tested.


00:19:31.780 --> 00:19:33.900
If it's product, there's a marked difference


00:19:33.900 --> 00:19:38.900
between working in production and working in the wider,


00:19:38.900 --> 00:19:41.860
in learning mode.


00:19:41.860 --> 00:19:44.420
So you've got Cecil's world of pulling the latest stuff,


00:19:44.420 --> 00:19:46.340
trying out new technology and playing.


00:19:46.340 --> 00:19:48.540
But if you're gonna build a web frame, build a web app,


00:19:48.540 --> 00:19:50.780
then it's gonna be hard not to choose Flask


00:19:50.780 --> 00:19:54.700
or that Django still, because it's there, it's around.


00:19:54.700 --> 00:19:59.020
And at the moment, all my current examples,


00:19:59.020 --> 00:20:01.460
so I'm currently at a company called MyEnergy,


00:20:01.460 --> 00:20:05.000
we process huge amounts of user data,


00:20:05.000 --> 00:20:07.980
and we paid a company to write a platform for us.


00:20:07.980 --> 00:20:09.700
And it feels like they just went through NPM


00:20:09.700 --> 00:20:12.200
and installed anything they ever wanted all the time.


00:20:12.200 --> 00:20:13.000
[LAUGHS]


00:20:13.000 --> 00:20:14.300
And now we're unpicking a load--


00:20:14.300 --> 00:20:16.240
>>NPM install star, let's go.


00:20:16.240 --> 00:20:19.920
>>Yeah, and it feels like they're playing a drinking game


00:20:19.920 --> 00:20:23.440
with TypeScript, and this bit's functional,


00:20:23.440 --> 00:20:25.540
and this bit's object-orientated.


00:20:25.540 --> 00:20:28.340
And so picking technologies, not just picking technologies,


00:20:28.340 --> 00:20:29.840
picking paradigms.


00:20:29.840 --> 00:20:33.260
So it's TypeScript, that's great, but is it functional?


00:20:33.260 --> 00:20:34.360
Is it object-orientated?


00:20:34.360 --> 00:20:35.240
Is it procedural?


00:20:35.240 --> 00:20:37.560
And the answer is this bit is and this bit isn't,


00:20:37.560 --> 00:20:40.280
and this bit's over here, and then we need a typo,


00:20:40.280 --> 00:20:41.400
we need an ORM.


00:20:41.400 --> 00:20:43.720
So it feels like they pull in the only ORM


00:20:43.720 --> 00:20:45.440
that they've seen in a tutorial,


00:20:45.440 --> 00:20:48.520
but somebody's written, so we've got type ORM,


00:20:48.520 --> 00:20:50.920
which doesn't do migrations, and you're stuck.


00:20:50.920 --> 00:20:54.400
And we've got a massive pile of technical debt


00:20:54.400 --> 00:20:56.840
on a brand new project, which you're having to unpick


00:20:56.840 --> 00:20:59.800
because no one consciously chose the projects.


00:20:59.800 --> 00:21:02.440
Or is it... No. In my last...


00:21:02.440 --> 00:21:04.440
[crosstalk]


00:21:04.440 --> 00:21:06.440
[crosstalk]


00:21:06.440 --> 00:21:10.280
In my last gig, we spent a lot of time


00:21:10.280 --> 00:21:12.280
because I've got horror stories about ZOPE.


00:21:12.280 --> 00:21:17.360
But we spent a lot of time choosing the right framework


00:21:17.360 --> 00:21:20.200
and having the right reasons and put a lot of effort


00:21:20.200 --> 00:21:22.200
into writing proof of concepts


00:21:22.200 --> 00:21:24.720
because we knew the traffic demands, we knew what we were doing.


00:21:24.720 --> 00:21:29.520
and we went Flask and we went certain technologies in AWS,


00:21:29.520 --> 00:21:32.720
we went Docker, we went and we just follow this route


00:21:32.720 --> 00:21:35.360
through choosing things to be stable and scalable,


00:21:35.360 --> 00:21:37.000
not necessarily the latest and greatest,


00:21:37.000 --> 00:21:38.920
not necessarily the most cutting edge.


00:21:38.920 --> 00:21:40.880
I just wanted to make sure it was,


00:21:40.880 --> 00:21:42.360
we could develop on it.


00:21:42.360 --> 00:21:44.640
And even then we chose,


00:21:44.640 --> 00:21:46.880
badly chose a library 'cause somebody followed tutorial,


00:21:46.880 --> 00:21:47.920
we didn't rethink it,


00:21:47.920 --> 00:21:52.320
ended up using a REST framework that got deprecated.


00:21:52.320 --> 00:21:56.640
So you have to put the effort into choosing the right things


00:21:56.640 --> 00:21:58.440
and be okay with going,


00:21:58.440 --> 00:22:00.400
I don't care if we're not cutting edge.


00:22:00.400 --> 00:22:01.960
We let Cecil be cutting edge


00:22:01.960 --> 00:22:04.040
and go and play in his advocate role.


00:22:04.040 --> 00:22:06.760
And then once it's in production in other places,


00:22:06.760 --> 00:22:08.360
then you use it.


00:22:08.360 --> 00:22:11.920
>> Yeah. This distinction between what do you choose


00:22:11.920 --> 00:22:13.600
in production and what you choose other places.


00:22:13.600 --> 00:22:16.480
Also, it doesn't necessarily have to be just learning, right?


00:22:16.480 --> 00:22:18.240
It could be, well, here's some tools


00:22:18.240 --> 00:22:20.160
that just pull in data and process it.


00:22:20.160 --> 00:22:24.080
But if it's not perfect, the website is not going to go down


00:22:24.080 --> 00:22:27.000
and we're not going to lose $1,000 a second


00:22:27.000 --> 00:22:29.480
until somebody fixes that type of situation.


00:22:29.480 --> 00:22:32.360
It's, oh, somebody's got to fix the ETL.


00:22:32.360 --> 00:22:34.760
Well, and I think that's another big part of it is,


00:22:34.760 --> 00:22:39.560
in most companies, your job or your function with the company


00:22:39.560 --> 00:22:41.520
is not supporting a web framework


00:22:41.520 --> 00:22:44.280
or building out features within a web framework.


00:22:44.280 --> 00:22:49.160
You're trying to implement whatever business logic


00:22:49.160 --> 00:22:51.720
you need beyond that.


00:22:51.720 --> 00:22:54.800
So going something tried and true or older


00:22:54.800 --> 00:22:56.240
is going to let you do that.


00:22:56.240 --> 00:23:00.120
And it may not exactly meet your use case.


00:23:00.120 --> 00:23:06.520
But like Lukasz was saying, if you have enough revenue


00:23:06.520 --> 00:23:09.520
that that's a problem, if you're Instagram or Facebook,


00:23:09.520 --> 00:23:11.680
well, that's a good problem to have.


00:23:11.680 --> 00:23:14.160
You can deal with it at that point.


00:23:14.160 --> 00:23:16.360
Yeah, yeah, absolutely.


00:23:16.360 --> 00:23:18.200
Well, and for you, Dan, the situation


00:23:18.200 --> 00:23:19.900
might be a little bit different as well,


00:23:19.900 --> 00:23:21.980
being more doing ML type of things.


00:23:21.980 --> 00:23:25.220
There's less tried and true, right?


00:23:25.220 --> 00:23:30.900
The ML of two years ago is laughed at by the ML of today.


00:23:30.900 --> 00:23:33.180
I mean, it's changing so fast, it's


00:23:33.180 --> 00:23:35.520
hard to say we're going to pick stable because you give up


00:23:35.520 --> 00:23:37.580
a lot by doing that.


00:23:37.580 --> 00:23:39.260
Yeah, for sure.


00:23:39.260 --> 00:23:41.180
A lot of stuff we worked on.


00:23:41.180 --> 00:23:44.700
And I think some of it is that I've


00:23:44.700 --> 00:23:47.380
spoken with folks who are building ML companies,


00:23:47.380 --> 00:23:49.380
And they're like, yeah, the scale you're operating at


00:23:49.380 --> 00:23:53.260
is like 10 times or 100 times anything


00:23:53.260 --> 00:23:57.200
we've run for something that's an ML as a service platform.


00:23:57.200 --> 00:24:00.500
So we've had to build out some things


00:24:00.500 --> 00:24:04.620
where kind of existing frameworks didn't cut it for us.


00:24:04.620 --> 00:24:07.220
But it was first, can we actually


00:24:07.220 --> 00:24:08.860
use those existing frameworks?


00:24:08.860 --> 00:24:13.860
Because we ideally, we're not an ML platform company.


00:24:13.860 --> 00:24:17.160
We want to use whatever the framework is.


00:24:17.160 --> 00:24:25.240
can because that will get us our job done. Only when we can't do that, do we really need to


00:24:25.240 --> 00:24:34.040
go custom and kind of build things out for scale. It's easy to get into thinking like my job is to


00:24:34.040 --> 00:24:39.480
put this to work and make this framework as awesome as possible or to get it going just


00:24:39.480 --> 00:24:44.360
right. And really it's to deliver functionality to a business, right? That's just a means to an end.


00:24:44.360 --> 00:24:46.560
And so, yeah, for sure.


00:24:46.560 --> 00:24:48.940
- If I could maybe just a thought on that


00:24:48.940 --> 00:24:51.520
that came to me when we were talking about boring.


00:24:51.520 --> 00:24:53.680
The other thing that kind of can be very tempting


00:24:53.680 --> 00:24:55.680
is if me or I and the team,


00:24:55.680 --> 00:24:57.480
I come across a new fantastic tool,


00:24:57.480 --> 00:24:59.560
I think this looks great, let's use this.


00:24:59.560 --> 00:25:02.040
I've spent half an hour reading a tutorial


00:25:02.040 --> 00:25:02.880
as Gareth pointed out,


00:25:02.880 --> 00:25:04.320
I know everything there is to know about it.


00:25:04.320 --> 00:25:05.520
It must be great.


00:25:05.520 --> 00:25:07.440
I'll work it into the project.


00:25:07.440 --> 00:25:09.200
We don't touch it, you know, we make it work.


00:25:09.200 --> 00:25:10.940
We don't touch it for a week after that.


00:25:10.940 --> 00:25:12.480
Then I'm on leave three weeks from now


00:25:12.480 --> 00:25:18.000
beach somewhere and it goes wrong, have I bothered to tell the rest of my team how this thing works?


00:25:18.000 --> 00:25:21.600
Because I've chosen something that isn't boring, you know, that doesn't fit in with the stuff the


00:25:21.600 --> 00:25:25.440
rest of us all know and now there's a huge problem there, so there's, you've got to give a bit of


00:25:25.440 --> 00:25:29.760
thought to that as well, you've got to be consistent with the stuff you use. Sometimes as I was


00:25:29.760 --> 00:25:33.040
saying in terms of paradigm that there might be shiny toys that don't fit in with the rest of it,


00:25:33.040 --> 00:25:37.760
then I'm afraid you've got to leave the shiny toy in behind, unless, I mean for, again we are talking


00:25:37.760 --> 00:25:42.080
in the what you're paid to do sense, obviously if it's for your own, of your own bat, shiny toy


00:25:42.080 --> 00:25:43.160
- It's a long way away.


00:25:43.160 --> 00:25:44.880
- Yeah, yeah.


00:25:44.880 --> 00:25:47.080
You gotta think about the team buy-in as well,


00:25:47.080 --> 00:25:49.280
if a group's gonna be using it, right?


00:25:49.280 --> 00:25:52.760
- So, no, sorry.


00:25:52.760 --> 00:25:56.120
We fund development sprints,


00:25:56.120 --> 00:25:58.800
and we fund hack days to play with things.


00:25:58.800 --> 00:26:01.560
So let's get, if you've got an idea for,


00:26:01.560 --> 00:26:06.140
do you fancy using FastAPI,


00:26:06.140 --> 00:26:07.560
then let's build a small thing,


00:26:07.560 --> 00:26:09.960
and we'll put a small project in,


00:26:09.960 --> 00:26:12.120
see how it works, see how it deploys,


00:26:12.120 --> 00:26:17.080
but don't bet the farm on it until you're certain about it.


00:26:17.080 --> 00:26:19.840
>> Yeah. That's a great way to do it, right?


00:26:19.840 --> 00:26:22.280
That's sort of a more structured way to experiment.


00:26:22.280 --> 00:26:27.080
So I'll share a quick story with you all here.


00:26:27.080 --> 00:26:33.120
Recently, I wanted to rekindle my blogging.


00:26:33.120 --> 00:26:35.640
I don't know. Social media and places


00:26:35.640 --> 00:26:37.080
are a little scrambled these days,


00:26:37.080 --> 00:26:38.280
so I thought it might be a good idea


00:26:38.280 --> 00:26:39.680
to have something written as well,


00:26:39.680 --> 00:26:41.160
that I can point to.


00:26:41.160 --> 00:26:42.800
So I went to make this website.


00:26:42.800 --> 00:26:45.140
I thought, just something simple, something marked down,


00:26:45.140 --> 00:26:46.320
something static.


00:26:46.320 --> 00:26:48.280
And I don't know.


00:26:48.280 --> 00:26:50.080
I haven't done that.


00:26:50.080 --> 00:26:52.360
My last blog was on WordPress.


00:26:52.360 --> 00:26:55.280
I don't want to use WordPress anymore.


00:26:55.280 --> 00:26:58.440
I don't want to have a database for my blog that


00:26:58.440 --> 00:26:59.360
seems like overkill.


00:26:59.360 --> 00:27:04.240
So I'm like, all right, well, what do I do to decide?


00:27:04.240 --> 00:27:08.040
So I went out to the community, and I asked, hey,


00:27:08.040 --> 00:27:12.280
Thinking about this static website blog thing,


00:27:12.280 --> 00:27:14.960
Python tools preferred, but I'm open for anything.


00:27:14.960 --> 00:27:17.640
And Kim, I think you even maybe weighed in on this thread.


00:27:17.640 --> 00:27:18.720
- I think I did, yeah.


00:27:18.720 --> 00:27:20.080
- Yeah, I think you did.


00:27:20.080 --> 00:27:22.280
And I got a bunch of different feedback.


00:27:22.280 --> 00:27:27.280
And so my solution to sort of exploring this place


00:27:27.280 --> 00:27:29.200
where I felt a little unqualified,


00:27:29.200 --> 00:27:31.280
I didn't have really much experience with,


00:27:31.280 --> 00:27:32.600
was to go out and ask.


00:27:32.600 --> 00:27:35.880
And the answer I got back really surprised me.


00:27:35.880 --> 00:27:37.900
I thought, well, maybe it's gonna be Pelican


00:27:37.900 --> 00:27:39.980
or ghost.


00:27:39.980 --> 00:27:42.600
But a bunch of people started saying, Hugo, Hugo,


00:27:42.600 --> 00:27:43.560
this thing is Hugo.


00:27:43.560 --> 00:27:44.980
It's amazing.


00:27:44.980 --> 00:27:48.060
Obviously, there were people saying Pelican and Sphinx


00:27:48.060 --> 00:27:49.260
and whatnot.


00:27:49.260 --> 00:27:52.020
So I ended up going with Hugo, which


00:27:52.020 --> 00:27:54.820
was a bit of a struggle for me to decide,


00:27:54.820 --> 00:27:57.700
because it's unbelievably good.


00:27:57.700 --> 00:27:59.860
Kim, are you using Hugo as well?


00:27:59.860 --> 00:28:01.420
>>Yes, yeah, for a couple of things.


00:28:01.420 --> 00:28:03.060
>>It's glorious.


00:28:03.060 --> 00:28:05.780
It's so nice for writing, but it's written in Go.


00:28:05.780 --> 00:28:08.620
And so it's like, well, can I--


00:28:08.620 --> 00:28:11.660
I can't really fix it or tweak it as easily.


00:28:11.660 --> 00:28:13.720
But in the end, I decided, you know what?


00:28:13.720 --> 00:28:15.660
It's more important to have something that works really,


00:28:15.660 --> 00:28:18.180
really good that has got a lot of popular support


00:28:18.180 --> 00:28:23.980
than having something that is in a language I'm an expert in.


00:28:23.980 --> 00:28:25.860
So I'd kind of like to hear your all's thought.


00:28:25.860 --> 00:28:30.100
If you're in that kind of situation,


00:28:30.100 --> 00:28:31.020
what's your process?


00:28:31.020 --> 00:28:33.620
How do you come to these decisions?


00:28:33.620 --> 00:28:40.620
Well, I kind of redesigned my own blog when I kind of got the new job because it's like,


00:28:40.620 --> 00:28:41.780
oh, I need to communicate.


00:28:41.780 --> 00:28:44.460
So I went through a similar process.


00:28:44.460 --> 00:28:52.820
What I ended up doing is, and you know, obviously it's a super empty pattern, but it turned out to be super successful, which is just write your own.


00:28:52.820 --> 00:28:56.540
And obviously, everybody writes their own static site generator.


00:28:56.540 --> 00:29:06.300
but I'll be honest with you, with Python in 2020 and 2021 and 2022 now, it is so simple


00:29:06.300 --> 00:29:12.340
because all the building blocks are there. You're not writing strings of HTML into a


00:29:12.340 --> 00:29:18.900
file. All of those building blocks are done for you. And just let me bring up for you


00:29:18.900 --> 00:29:25.660
how big my huge site generator is because it's super tiny, but it actually handles everything


00:29:25.660 --> 00:29:30.740
I wanted to the extent where I'm using it for a couple of sites right now.


00:29:30.740 --> 00:29:31.820
And it's like what?


00:29:31.820 --> 00:29:37.860
And it's under 2000 lines of code at the moment, like the entire thing.


00:29:37.860 --> 00:29:44.100
So it's not super big and it was growing in time when I was adding new stuff to it.


00:29:44.100 --> 00:29:48.740
For example, at first I just did not have RSS at all because I was like, "This thing


00:29:48.740 --> 00:29:49.740
is dead.


00:29:49.740 --> 00:29:51.180
Nobody needs RSS anymore."


00:29:51.180 --> 00:29:55.620
And then a bunch of people just all tell me like, "Hey, why don't you have RSS?"


00:29:55.620 --> 00:30:00.900
So I just added it like later on, you know, and it's just what like, oh, we have XML in


00:30:00.900 --> 00:30:02.500
the standard library.


00:30:02.500 --> 00:30:04.540
And there's actually like, yeah, RSS libraries too.


00:30:04.540 --> 00:30:06.020
But like, this is so simple.


00:30:06.020 --> 00:30:09.580
You just have like, you know, this one template that you need to output.


00:30:09.580 --> 00:30:11.620
So you know, kind of, I did my own thing.


00:30:11.620 --> 00:30:16.220
And I can now write on the footer of the site that was generated with Python 3.10.


00:30:16.220 --> 00:30:21.740
I should just recreate the virtual and so I'll be able to say 3.11.


00:30:21.740 --> 00:30:22.740
But you know, kind of...


00:30:22.740 --> 00:30:23.740
- Speed of a cutting edge.


00:30:23.740 --> 00:30:30.380
Yeah, but like, so, so, so, so yes, but like, the reason why I actually did this was that


00:30:30.380 --> 00:30:34.860
all the notes that you're seeing there, you know, kind of if you like click through the


00:30:34.860 --> 00:30:40.540
thing, like they are in fact, like in Markdown in my notes.


00:30:40.540 --> 00:30:42.900
So I'm kind of crazy about having notes.


00:30:42.900 --> 00:30:45.020
So like I have a lot of them, right?


00:30:45.020 --> 00:30:50.700
So I have like thousands of them and they're like all in Markdown and like in a Git repository,


00:30:50.700 --> 00:30:54.780
synchronized over to my phone and whatever. So I can always just access them in a plane


00:30:54.780 --> 00:31:01.540
or whatever. So those are just tagged #public in the Markdown text and they appear on the


00:31:01.540 --> 00:31:06.700
website and it's kind of automatic. So I don't actually have like a CMS for this. I just


00:31:06.700 --> 00:31:12.500
have my notes app that I'm using. It's FS notes, it's open source, it works on the Mac.


00:31:12.500 --> 00:31:19.500
It's glorious. And it's also on iOS and you just kind of generate HTML out of that.


00:31:19.500 --> 00:31:23.180
HTML out of that, which is pretty simple.


00:31:23.180 --> 00:31:25.940
And I can automate a bunch of stuff with this,


00:31:25.940 --> 00:31:28.940
just kind of custom made, which with Hugo,


00:31:28.940 --> 00:31:31.600
I probably could do, but I would have to learn how,


00:31:31.600 --> 00:31:32.700
and I already know Python.


00:31:32.700 --> 00:31:37.580
So it really took me no time to get this up there.


00:31:37.580 --> 00:31:40.300
And it kind of works on a phone, and it's okay.


00:31:40.300 --> 00:31:42.500
It's not gonna kind of wow you,


00:31:42.500 --> 00:31:44.600
but it's a perfectly functional website.


00:31:47.700 --> 00:31:48.780
- Yeah, the audience says,


00:31:48.780 --> 00:31:50.020
building your own static site generator


00:31:50.020 --> 00:31:51.860
is a great way to learn a lot about the language.


00:31:51.860 --> 00:31:54.340
I learned a lot for years maintaining my own.


00:31:54.340 --> 00:31:58.420
Choosing static sites is an interesting choice


00:31:58.420 --> 00:31:59.540
on its own, right?


00:31:59.540 --> 00:32:03.980
The DevOps story is incredibly nice


00:32:03.980 --> 00:32:05.500
that you don't have to worry about,


00:32:05.500 --> 00:32:06.580
will the database go down?


00:32:06.580 --> 00:32:08.460
What kind of problem is it?


00:32:08.460 --> 00:32:11.060
It's either gonna be there or it's just not there.


00:32:11.060 --> 00:32:13.380
- Not only will the database go down,


00:32:13.380 --> 00:32:17.300
the unconsidered problem until you're in the DevOps space


00:32:17.300 --> 00:32:20.940
on a non-static site is when your internal department


00:32:20.940 --> 00:32:23.780
would like a version of the site they can change the CMS on


00:32:23.780 --> 00:32:25.260
to make sure it all looks good


00:32:25.260 --> 00:32:27.020
before they rolled it to production.


00:32:27.020 --> 00:32:28.540
Now you've got to get database exports


00:32:28.540 --> 00:32:29.740
across into a different database,


00:32:29.740 --> 00:32:31.180
so you've got to get migrations going,


00:32:31.180 --> 00:32:32.340
or you've got to have,


00:32:32.340 --> 00:32:35.060
not that I would ever do a thing like this,


00:32:35.060 --> 00:32:37.100
but you might have to have two versions of Docker running


00:32:37.100 --> 00:32:40.460
in direct production so that you can do a live MySQL,


00:32:40.460 --> 00:32:42.780
copy of MySQL files from one to the other.


00:32:42.780 --> 00:32:44.540
Hypothetically speaking, you would never do that.


00:32:44.540 --> 00:32:46.460
- Of course, of course.


00:32:46.460 --> 00:32:49.160
(laughing)


00:32:49.160 --> 00:32:50.920
- But it's also unhackable.


00:32:50.920 --> 00:32:52.520
That's an interesting.


00:32:52.520 --> 00:32:53.680
- There was that, yeah.


00:32:53.680 --> 00:32:55.960
- Yeah, the worst thing that could happen


00:32:55.960 --> 00:32:57.760
is it could deface, it could get defaced.


00:32:57.760 --> 00:33:00.040
I guess somebody could put some JavaScript malware on it


00:33:00.040 --> 00:33:00.880
if they took it over,


00:33:00.880 --> 00:33:04.440
but it's not open to the little Bobby tables


00:33:04.440 --> 00:33:08.400
or denial of service to a large degree, right?


00:33:08.400 --> 00:33:09.360
That's a good point.


00:33:09.360 --> 00:33:11.640
- Hard to hack, very hard to hack, yes.


00:33:11.640 --> 00:33:12.880
(laughing)


00:33:12.880 --> 00:33:14.200
- Well, for me, the most important thing


00:33:14.200 --> 00:33:16.760
that this literally just runs on the free tier,


00:33:16.760 --> 00:33:18.880
like on Netlify and you know, it just.


00:33:18.880 --> 00:33:21.800
- Yeah, yeah, mine is on Netlify as well.


00:33:21.800 --> 00:33:25.440
And I gotta say, it's really, really,


00:33:25.440 --> 00:33:27.880
a really nice thing to do.


00:33:27.880 --> 00:33:30.320
All right, so what's the next thing I wanna ask you?


00:33:30.320 --> 00:33:31.640
All right, so the next one.


00:33:31.640 --> 00:33:33.080
- If I could just, sorry, Michael,


00:33:33.080 --> 00:33:34.520
I was just gonna one comment that we were making


00:33:34.520 --> 00:33:37.080
about picking a library, something that you pointed out


00:33:37.080 --> 00:33:39.160
and that Lukasz was saying as well,


00:33:39.160 --> 00:33:40.880
there is something to be seen for making sure


00:33:40.880 --> 00:33:42.740
you can fix it if it breaks.


00:33:42.740 --> 00:33:45.620
but I think to the large degree depends on how,


00:33:45.620 --> 00:33:47.300
or I suppose it depends on several things,


00:33:47.300 --> 00:33:48.700
how important the thing is to you,


00:33:48.700 --> 00:33:51.100
how quickly you can change it if it does break


00:33:51.100 --> 00:33:54.740
and how kind of big the thing is.


00:33:54.740 --> 00:33:57.660
It never occurred to me, for example, using Hugo,


00:33:57.660 --> 00:33:59.580
it didn't worry me too much that I don't know any Go


00:33:59.580 --> 00:34:01.420
and I can't fix it because it's a big enough tool


00:34:01.420 --> 00:34:04.140
that I can probably make it do what I want,


00:34:04.140 --> 00:34:06.220
but I've got pretty simple needs.


00:34:06.220 --> 00:34:09.380
If I was picking a very fast,


00:34:10.760 --> 00:34:13.700
something really low level in my previous sea life,


00:34:13.700 --> 00:34:16.680
for example, to talk to the flash memory as fast as I can,


00:34:16.680 --> 00:34:18.300
I'd probably want to write that because,


00:34:18.300 --> 00:34:20.920
or at least know that I can fix the thing I got


00:34:20.920 --> 00:34:23.140
because maybe I need to be able to tweak it or otherwise.


00:34:23.140 --> 00:34:25.140
So it also depends on what you need the thing for.


00:34:25.140 --> 00:34:28.280
How quickly, how much does it matter


00:34:28.280 --> 00:34:30.820
whether you can tweak it or not?


00:34:30.820 --> 00:34:32.680
So it depends largely on how important


00:34:32.680 --> 00:34:34.120
it becomes to your project.


00:34:34.120 --> 00:34:35.360
The downside of course,


00:34:35.360 --> 00:34:37.020
when you do that decision six months later


00:34:37.020 --> 00:34:39.460
and it's super important, now you're stuck.


00:34:39.460 --> 00:34:41.100
- Yeah, now you're on the hook.


00:34:41.100 --> 00:34:42.860
I'm like you, I didn't know any Go,


00:34:42.860 --> 00:34:45.620
or not really, I mean, I've read like a paragraph


00:34:45.620 --> 00:34:46.920
of sample code to know what it looks like,


00:34:46.920 --> 00:34:48.020
but that's about it.


00:34:48.020 --> 00:34:51.660
But for me, it was okay to pick Hugo, that is a Go tool,


00:34:51.660 --> 00:34:54.980
because it's not actually running


00:34:54.980 --> 00:34:57.020
while you interact with my website, right?


00:34:57.020 --> 00:35:00.600
If I was picking a Go alternative to Flask,


00:35:00.600 --> 00:35:02.840
that would be a really big consideration,


00:35:02.840 --> 00:35:05.460
'cause I'd have to kind of write code and live in it.


00:35:05.460 --> 00:35:06.920
Here's the thing, I run on the command line,


00:35:06.920 --> 00:35:09.080
and it either makes the static site or it doesn't,


00:35:09.080 --> 00:35:14.080
So it's not in the important path of interactions.


00:35:14.080 --> 00:35:16.680
- You could swap it out without your website breaking.


00:35:16.680 --> 00:35:19.000
The end result will still be up and live on the website


00:35:19.000 --> 00:35:20.880
while you're replacing Hugo with something else


00:35:20.880 --> 00:35:21.720
if you wanted to.


00:35:21.720 --> 00:35:23.760
So that was a consideration there.


00:35:23.760 --> 00:35:26.160
- Go down the Lucasroute and try to recreate


00:35:26.160 --> 00:35:27.920
the same look and feel.


00:35:27.920 --> 00:35:31.320
- Yeah, although unlikely it would break


00:35:31.320 --> 00:35:34.800
and not be affixed by more Hugo devs


00:35:34.800 --> 00:35:38.680
or like the surface of the application is...


00:35:38.680 --> 00:35:43.680
- Yeah, so that brings me to the next thing here is,


00:35:43.680 --> 00:35:48.760
when you go to an open source project


00:35:48.760 --> 00:35:50.160
and you find it on GitHub,


00:35:50.160 --> 00:35:53.600
how much does stuff like this Hugo thing,


00:35:53.600 --> 00:35:57.040
it's been forked 7,000 times and has 64,000 stars.


00:35:57.040 --> 00:35:59.980
Like, okay, if it breaks, someone else will fix it.


00:35:59.980 --> 00:36:01.040
Not my problem.


00:36:01.040 --> 00:36:03.780
If it had six stars and it breaks,


00:36:03.780 --> 00:36:05.420
it might be my problem if it breaks,


00:36:05.420 --> 00:36:07.560
even though it's not my project.


00:36:07.560 --> 00:36:11.040
How do you all think about that when you are choosing projects


00:36:11.040 --> 00:36:13.200
or, Emily or Cecil, in your cases,


00:36:13.200 --> 00:36:15.520
recommending technologies?


00:36:15.520 --> 00:36:17.960
Yeah, I think for me--


00:36:17.960 --> 00:36:20.080
and this is just my personal opinion--


00:36:20.080 --> 00:36:22.960
things like forks and stars are vanity metrics for me.


00:36:22.960 --> 00:36:25.960
I don't really care, to be honest with you.


00:36:25.960 --> 00:36:30.240
I do care if, hey, one, it solves the problem


00:36:30.240 --> 00:36:33.560
I'm trying to deal with.


00:36:33.560 --> 00:36:37.040
Can I submit an issue and get relatively,


00:36:37.040 --> 00:36:39.960
like within six months,


00:36:39.960 --> 00:36:42.080
like someone answered me fairly quickly,


00:36:42.080 --> 00:36:44.400
like I don't wanna wait for a week or so.


00:36:44.400 --> 00:36:47.800
And you know, are there commits being made?


00:36:47.800 --> 00:36:49.520
And even for that too,


00:36:49.520 --> 00:36:51.320
like when I say are there commits being made,


00:36:51.320 --> 00:36:52.440
you don't need to be making commits


00:36:52.440 --> 00:36:53.880
like every day and every hour


00:36:53.880 --> 00:36:55.800
or every week or every month.


00:36:55.800 --> 00:36:57.840
But if I see that like the last commit


00:36:57.840 --> 00:36:59.320
was like five years ago,


00:36:59.320 --> 00:37:01.520
I'm like, okay, well, if I have a problem,


00:37:01.520 --> 00:37:04.360
I don't know if this is the thing that I need to dump into


00:37:04.360 --> 00:37:05.440
because I don't know if I'm gonna be able


00:37:05.440 --> 00:37:06.680
to get the support that I need.


00:37:06.680 --> 00:37:07.820
- Well, you still might take it,


00:37:07.820 --> 00:37:09.880
but then you would have to take it on the assumption


00:37:09.880 --> 00:37:13.520
that you might have to write the fix or add the feature.


00:37:13.520 --> 00:37:16.760
- Sure, so I'm gonna use you as an example, Michael.


00:37:16.760 --> 00:37:19.400
So if you decided to go with Hugo


00:37:19.400 --> 00:37:22.080
and there was an issue with Hugo and you don't know Go


00:37:22.080 --> 00:37:24.180
and you're like, "Oh shoot, what am I gonna do?"


00:37:24.180 --> 00:37:25.600
Now you're gonna be in a position


00:37:25.600 --> 00:37:26.900
that you can either learn Go


00:37:26.900 --> 00:37:29.600
or you get to swap it out and go with something else, right?


00:37:29.600 --> 00:37:31.680
But, you know, like what do you--


00:37:31.680 --> 00:37:34.400
- I'd rather rewrite it from scratch than learn Go.


00:37:34.400 --> 00:37:35.240
- Well, see--


00:37:35.240 --> 00:37:36.860
- Not that I hate Go or anything,


00:37:36.860 --> 00:37:40.040
I just like, you know, I think thinking of just a time effort


00:37:40.040 --> 00:37:42.480
or a trade off, you know?


00:37:42.480 --> 00:37:47.640
- Yeah, so it's mainly just about like, how do we,


00:37:47.640 --> 00:37:50.520
you know, like, does it solve the thing that I wanna solve?


00:37:50.520 --> 00:37:53.400
And then can I get like some level of support,


00:37:53.400 --> 00:37:54.640
you know, like questions answered


00:37:54.640 --> 00:37:56.500
and documentation and stuff like that.


00:37:56.500 --> 00:37:58.540
- Yeah, so when I looked at this, you know, commit,


00:37:58.540 --> 00:38:00.380
last commit yesterday.


00:38:00.380 --> 00:38:03.420
There's a bunch of issues, but if you look at say,


00:38:03.420 --> 00:38:06.020
the closed ones, there were issues closed


00:38:06.020 --> 00:38:07.580
a couple hours ago.


00:38:07.580 --> 00:38:09.580
Pull requests, I suspect probably,


00:38:09.580 --> 00:38:11.100
those are linked together, right?


00:38:11.100 --> 00:38:13.740
So there's clearly the life in this project.


00:38:13.740 --> 00:38:16.180
And to me, that probably is enough.


00:38:16.180 --> 00:38:17.500
How about the rest of you?


00:38:17.500 --> 00:38:19.420
Emily, what do you think?


00:38:19.420 --> 00:38:20.420
- Yeah, I totally agree.


00:38:20.420 --> 00:38:22.980
I think these are exactly the things that I look at is,


00:38:22.980 --> 00:38:25.700
you know, are things getting updated or commits getting in?


00:38:25.700 --> 00:38:29.000
you know, if it hasn't had a commit in a year or two,


00:38:29.000 --> 00:38:31.020
sometimes that's still okay, right?


00:38:31.020 --> 00:38:32.940
Like sometimes you're looking at


00:38:32.940 --> 00:38:37.140
Django reset password library that like,


00:38:37.140 --> 00:38:41.420
yeah, it's just, it's continued to work over time


00:38:41.420 --> 00:38:43.500
and you don't necessarily need new features added


00:38:43.500 --> 00:38:44.980
to a reset password kind of thing.


00:38:44.980 --> 00:38:47.500
So knowing kind of what you're looking at


00:38:47.500 --> 00:38:49.540
and what you need out of it, I think is still important,


00:38:49.540 --> 00:38:52.700
but I totally agree, you know, forks and stars,


00:38:52.700 --> 00:38:55.160
even downloads are kind of vanity metrics.


00:38:55.160 --> 00:38:58.940
I also think that something else that I always look at is,


00:38:58.940 --> 00:39:01.160
what is the audience of the tool?


00:39:01.160 --> 00:39:04.680
Hugo is very much geared towards a community of people


00:39:04.680 --> 00:39:09.360
building for mass numbers to use it versus a tool that


00:39:09.360 --> 00:39:13.000
maybe Lukasz's static site generator is


00:39:13.000 --> 00:39:16.620
probably very tuned to the things that he needs to do with it,


00:39:16.620 --> 00:39:18.920
that he could opt to open source it,


00:39:18.920 --> 00:39:23.000
but it's not going to be a tool for the mass.


00:39:23.000 --> 00:39:25.000
We have a visual client.


00:39:25.000 --> 00:39:27.000
Just a "mmm."


00:39:27.000 --> 00:39:33.000
Knowing what you're getting out of it and knowing what that sort of feature roadmap is going to be,


00:39:33.000 --> 00:39:37.000
either it's like, it is at a stable point and it's not going to change,


00:39:37.000 --> 00:39:41.000
this is something that is going to be very opinionated for someone's specific use case,


00:39:41.000 --> 00:39:47.000
versus like, Hugo is going to continue adding functionality that would serve a broader group of people,


00:39:47.000 --> 00:39:52.000
and just using that as part of your metrics for deciding if that tool fits your needs.


00:39:52.000 --> 00:39:58.280
- Dan? - One thing that I used to do is


00:39:58.280 --> 00:40:03.280
I look if the last comment on the thing, it doesn't need to be super recent, but like,


00:40:03.280 --> 00:40:06.080
is the build red or green?


00:40:06.080 --> 00:40:13.080
And if it's red, then I'm like, I don't like seeing red in the last comment on the project I want to use.


00:40:13.080 --> 00:40:17.400
And often if that would be a critical dependency,


00:40:17.400 --> 00:40:20.160
I would in fact just clone it locally


00:40:20.160 --> 00:40:22.080
and just try to just build it


00:40:22.080 --> 00:40:24.760
and see if tests pass on my end.


00:40:24.760 --> 00:40:26.120
And if they do good,


00:40:26.120 --> 00:40:28.040
and if I cannot download some dependencies


00:40:28.040 --> 00:40:30.840
or like pytest has like 15, you know,


00:40:30.840 --> 00:40:32.020
failures or whatever else,


00:40:32.020 --> 00:40:35.600
then I'll be like kind of more skeptical now.


00:40:35.600 --> 00:40:38.360
Because obviously if you are installing a package


00:40:38.360 --> 00:40:43.360
with pip install, unlike with CPAN in the Perl universe,


00:40:43.360 --> 00:40:45.780
you run no tests, so you kind of,


00:40:45.780 --> 00:40:48.480
the only thing you know is that the files


00:40:48.480 --> 00:40:50.360
were put in the right place.


00:40:50.360 --> 00:40:51.520
But whether they're gonna work,


00:40:51.520 --> 00:40:55.360
well, you're just gonna find out at runtime, I guess.


00:40:55.360 --> 00:40:57.160
So yeah, so every now and again,


00:40:57.160 --> 00:40:58.520
I would just try to build something


00:40:58.520 --> 00:40:59.980
when I actually depend on it.


00:40:59.980 --> 00:41:04.320
But you know, that's if it's really critical,


00:41:04.320 --> 00:41:06.680
because a lot of the dependencies, yes,


00:41:06.680 --> 00:41:13.280
even downloads are a vanity metric because if push comes to shove, I can just vendor


00:41:13.280 --> 00:41:15.880
in the dependency and fix it myself.


00:41:15.880 --> 00:41:21.680
There's also a project that you have a little involvement with that's got a few downloads,


00:41:21.680 --> 00:41:22.680
right?


00:41:22.680 --> 00:41:23.680
Yeah.


00:41:23.680 --> 00:41:29.560
So when Emily said that it's a vanity metric, my heart was hit right in the middle because


00:41:29.560 --> 00:41:31.960
I live by those downloads, man.


00:41:31.960 --> 00:41:32.960
It's awesome.


00:41:32.960 --> 00:41:37.520
- No, I have never expected this to go so big.


00:41:37.520 --> 00:41:40.960
So it's still sometimes I would just sit and drink coffee


00:41:40.960 --> 00:41:43.960
and just suddenly think, how did that ever happen?


00:41:43.960 --> 00:41:45.680
It's just mind blowing.


00:41:45.680 --> 00:41:49.020
- But actually, so I didn't mention it,


00:41:49.020 --> 00:41:51.200
but I think that this is a really good example


00:41:51.200 --> 00:41:53.480
of a library that is very clear


00:41:53.480 --> 00:41:55.280
about what you're getting from it, right?


00:41:55.280 --> 00:41:58.160
Like uncompromising code format,


00:41:58.160 --> 00:42:00.800
or it's very clear that it's very opinionated


00:42:00.800 --> 00:42:03.360
and that a lot of it came from you.


00:42:03.360 --> 00:42:06.760
And the joke that I was going to make is like,


00:42:06.760 --> 00:42:11.760
you know with Black, even if you need setups.cfg support,


00:42:11.760 --> 00:42:15.360
you are not going to be able to just add it


00:42:15.360 --> 00:42:17.920
and open a PR and get it merged in.


00:42:17.920 --> 00:42:21.280
So again, knowing what you're getting into of,


00:42:21.280 --> 00:42:26.120
and I think that a lot of this opens up a conversation


00:42:26.120 --> 00:42:28.680
on the other side of this for open source maintainers


00:42:28.680 --> 00:42:32.120
of being aware and being cautious and being clear


00:42:32.120 --> 00:42:35.880
to your users of what you're putting out there to say,


00:42:35.880 --> 00:42:38.040
look, hey, I'm not gonna maintain this.


00:42:38.040 --> 00:42:39.600
This is just something that's here.


00:42:39.600 --> 00:42:42.260
If you like it, use it, great.


00:42:42.260 --> 00:42:44.840
But taking that extra step to make sure


00:42:44.840 --> 00:42:48.260
that you're telling people what you are willing


00:42:48.260 --> 00:42:50.000
to take on as a maintainer as well.


00:42:50.000 --> 00:42:55.160
- Yeah, so like for black maintenance in particular,


00:42:55.160 --> 00:42:59.560
The fun thing was that I gathered a team of people


00:42:59.560 --> 00:43:00.800
who are maintaining it now.


00:43:00.800 --> 00:43:04.200
And I do relatively little these days, honestly.


00:43:04.200 --> 00:43:09.200
There's a bunch of people who are super active


00:43:09.200 --> 00:43:12.360
and they actually kind of shook me out


00:43:12.360 --> 00:43:16.160
of this kind of psychological block to like,


00:43:16.160 --> 00:43:17.920
you know, a stable version has to be perfect.


00:43:17.920 --> 00:43:18.960
We will never get there.


00:43:18.960 --> 00:43:23.640
And over 2021, we churned out a lot of releases


00:43:23.640 --> 00:43:26.520
And now, yeah, Black Stable, it's amazing.


00:43:26.520 --> 00:43:31.000
So another kind of consideration that you might have when you're looking at a library


00:43:31.000 --> 00:43:36.080
or a tool that you might use is, is the boss factor one?


00:43:36.080 --> 00:43:40.680
Is there just one stressed guy who just tries to make it work after hours?


00:43:40.680 --> 00:43:44.320
Or are there a few people responding on the issues?


00:43:44.320 --> 00:43:46.920
Is there more than one person with the keys to the kingdom?


00:43:46.920 --> 00:43:53.880
Sometimes if you lose the keys for whatever reason, it's very disruptive.


00:43:53.880 --> 00:44:00.920
We had a bunch of libraries like that in the Python world where forks were necessary because


00:44:00.920 --> 00:44:06.440
the original maintainers lost interest or life or whatever else.


00:44:06.440 --> 00:44:07.440
Things happen.


00:44:07.440 --> 00:44:14.880
I cannot really say that I did anything like that.


00:44:14.880 --> 00:44:19.920
I planned for it, it mostly happened by accident because I just had nice contributors that


00:44:19.920 --> 00:44:26.080
I liked, so I just shared the right access with them and they ended up being very trustworthy.


00:44:26.080 --> 00:44:32.280
But a maintainer should do that at some point because you cannot just do everything by yourself,


00:44:32.280 --> 00:44:35.000
it's just impossible.


00:44:35.000 --> 00:44:36.760
The bus factor is interesting.


00:44:36.760 --> 00:44:45.640
There was this guy who had an NPM project, JavaScript project,


00:44:45.640 --> 00:44:49.920
who had done some kind of protesting thing,


00:44:49.920 --> 00:44:53.400
like swapped out his project to just print stuff infinitely.


00:44:53.400 --> 00:44:54.760
And some kind of--


00:44:54.760 --> 00:44:56.400
just really frustrated that--


00:44:56.400 --> 00:44:58.840
it was ColorJS and FakerJS.


00:44:58.840 --> 00:45:00.520
And was really frustrated that companies


00:45:00.520 --> 00:45:03.240
were using the project and not paying for it.


00:45:03.240 --> 00:45:08.460
was open source under like MIT or something, but you know, that was his take. But then


00:45:08.460 --> 00:45:14.220
had a full on breakdown and got arrested for creating bombs in Queens, New York. I mean,


00:45:14.220 --> 00:45:21.060
that's an extreme example, but it can happen. It could happen, right? Or, you know, somebody


00:45:21.060 --> 00:45:25.240
could just get actually in an accident, or they could have a health crisis, right? Like


00:45:25.240 --> 00:45:32.100
there could be a place where it stops. So considering that, well, on the topic of VASFACTOR


00:45:32.100 --> 00:45:37.100
for that matter, which I mean, I think, fairly obviously, what it means, just in case anybody


00:45:37.100 --> 00:45:40.980
needs a definition, you know, if you're, if you're the guy, if you're the only person


00:45:40.980 --> 00:45:43.700
who knows how it works, and you get hit by a bus tomorrow, and you spend four weeks in


00:45:43.700 --> 00:45:48.940
hospital in the somewhat sanitized version of the theory, can somebody pick it up after


00:45:48.940 --> 00:45:53.460
you? And I think one of the things that does feed into picking tech steps, and tech stacks


00:45:53.460 --> 00:45:58.180
and so forth is, is the best factor on the libraries and so forth is quite important.


00:45:58.180 --> 00:46:02.500
what's also important is if it's a really complicated, super hard to use library or


00:46:02.500 --> 00:46:07.460
something that you need to be an expert in and you have one of those experts, you've certainly made a


00:46:07.460 --> 00:46:11.940
bus factor issue there too because now you need that expert to know what he's doing and be around


00:46:11.940 --> 00:46:18.180
and not choose to go to another company or be hit by a bus or any of those things. So there's a


00:46:18.180 --> 00:46:23.460
consideration there for the complexity of a tool as well. Sometimes it's unavoidable, sometimes


00:46:23.460 --> 00:46:26.820
some things that you have to do are complex. But if the tools


00:46:26.820 --> 00:46:29.740
are, if you're constantly picking the hardest thing there


00:46:29.740 --> 00:46:32.500
is to have hardest, if you're picking the most challenging


00:46:32.500 --> 00:46:35.620
thing to use, because it's the most fun, you might want to be


00:46:35.620 --> 00:46:39.540
considering that as well. How simple is it for somebody else


00:46:39.540 --> 00:46:41.780
to sit down, pick up your work and keep going with the


00:46:41.780 --> 00:46:45.740
libraries you've chosen to use is a consideration. You know,


00:46:45.740 --> 00:46:47.460
you should probably be keeping in mind as well.


00:46:47.460 --> 00:46:51.180
Yeah, sounds like Garrett's projects of this, like, these


00:46:51.180 --> 00:46:56.940
hackathons or these group experimental projects might help a little bit to give a little exposure


00:46:56.940 --> 00:47:01.940
to just about the new tech rather than somebody figured it out in their corner and then just


00:47:01.940 --> 00:47:05.740
added it and everyone else is like, "Great, it works. I love it."


00:47:05.740 --> 00:47:10.660
Yeah. One of the things I think is interesting there, just talking about the bus factor,


00:47:10.660 --> 00:47:14.780
it makes me think a lot of times when we're learning stuff, we don't often think about


00:47:14.780 --> 00:47:19.300
or when we're choosing things, we don't think about the human aspect that's attached to


00:47:19.300 --> 00:47:23.260
it, right? Which as technologists is just not a thing that we do. So again, like the


00:47:23.260 --> 00:47:28.860
bus factor, right? Like something bad happens to the person and now what do we do now, right?


00:47:28.860 --> 00:47:33.820
Like what is the next step, right? Yeah. Another thing that I've noticed a lot, again,


00:47:33.820 --> 00:47:38.860
like kind of thinking about like the humanity of learning is a lot of the times people choose


00:47:38.860 --> 00:47:43.620
things because the person to their right and their left, the person, the people that are


00:47:43.620 --> 00:47:48.500
in their circle of influence are using that thing, right? So I'll give you an example.


00:47:48.500 --> 00:47:53.940
So I go to a lot of like senior design showcases at colleges and universities and so on and so forth.


00:47:53.940 --> 00:47:57.980
And when I kind of look and I say, oh, well, why did you pick this language?


00:47:57.980 --> 00:47:59.380
Or why did you pick this cloud?


00:47:59.380 --> 00:48:00.700
Or why did you pick this framework?


00:48:00.700 --> 00:48:03.740
It's usually because the people around them are doing it too.


00:48:03.740 --> 00:48:04.500
Right.


00:48:04.500 --> 00:48:14.300
And the reason that is, is now, hey, if I pick the thing that like Michael is using, or Emily is using, or Kim is using, you know what, I have people that I could go ask the question.


00:48:14.300 --> 00:48:15.460
You know what I mean?


00:48:15.540 --> 00:48:17.280
So now I'm going to choose that thing,


00:48:17.280 --> 00:48:19.680
not because of any technical reason.


00:48:19.680 --> 00:48:22.620
I mean, obviously, it has to do the thing I wanted to do.


00:48:22.620 --> 00:48:26.440
But the main reason I chose it is because, socially speaking,


00:48:26.440 --> 00:48:28.400
I have people that I could go ask the question.


00:48:28.400 --> 00:48:30.520
And so now my confidence level in that project


00:48:30.520 --> 00:48:32.920
is a little bit higher because of that reason.


00:48:32.920 --> 00:48:35.160
Yeah, that's a really good--


00:48:35.160 --> 00:48:36.680
really important factor, yeah.


00:48:36.680 --> 00:48:38.840
Yeah, I think this hits the nail on the head


00:48:38.840 --> 00:48:43.360
because even in Python, a popular programming language


00:48:43.360 --> 00:48:50.360
by all standards. We have parts of the standard library that was written by a person and that


00:48:50.360 --> 00:48:55.880
person is no longer around. Now we obviously can still, we have access to the code, we


00:48:55.880 --> 00:49:00.240
have tests that are passing, we can still maintain the code, we can still mutate it,


00:49:00.240 --> 00:49:05.720
we can still make it do different things if we need to. But the one missing piece, which


00:49:05.720 --> 00:49:12.720
is sometimes needed and we don't have it anymore, is why certain choices were made originally.


00:49:13.000 --> 00:49:18.000
that kind of informs where we should go next.


00:49:18.000 --> 00:49:21.280
If something is uncharacteristically convoluted


00:49:21.280 --> 00:49:26.720
and you see this and you're like, "Oh, I would simplify this."


00:49:26.720 --> 00:49:30.240
After a while of core development, you're like,


00:49:30.240 --> 00:49:32.240
"Every time you want this, there is a reason


00:49:32.240 --> 00:49:35.120
behind every kind of weird part that you're going to find."


00:49:35.120 --> 00:49:41.480
But if there's nobody to ask the question to,


00:49:39.760 --> 00:49:41.240
that complicates things a lot.


00:49:41.240 --> 00:49:45.080
And we have a bunch of situations like that,


00:49:45.080 --> 00:49:46.800
where there's like a stalemate


00:49:46.800 --> 00:49:49.080
between a few possible approaches


00:49:49.080 --> 00:49:51.920
because we don't really have an opinion


00:49:51.920 --> 00:49:56.320
of the original author to go by to kind of make a choice.


00:49:56.320 --> 00:49:59.680
- Yeah, that's, that is definitely a challenge.


00:49:59.680 --> 00:50:02.400
Gareth, were you trying to jump in there?


00:50:02.400 --> 00:50:04.880
- I was gonna say that often as well,


00:50:04.880 --> 00:50:08.400
we make decisions because, and it sounds cool,


00:50:08.400 --> 00:50:11.920
but actually the best decision you can make around framework or language


00:50:11.920 --> 00:50:13.840
is the one your team already knows.


00:50:13.840 --> 00:50:15.680
So your default thing should be,


00:50:15.680 --> 00:50:19.160
don't change unless there is a really good reason to change


00:50:19.160 --> 00:50:22.120
because you introduce--


00:50:22.120 --> 00:50:27.080
I've seen companies have gone, "We need to write a thing in Java,"


00:50:27.080 --> 00:50:28.920
because the industry does it in Java,


00:50:28.920 --> 00:50:32.680
but all they were was Perl and PHP devs.


00:50:32.680 --> 00:50:36.680
And so suddenly you have an entire stack that your developers can't maintain.


00:50:36.680 --> 00:50:39.340
So it might be the most perfect Java application in history,


00:50:39.340 --> 00:50:42.420
but no one you employ can actually do anything to it.


00:50:42.420 --> 00:50:44.520
- Going a bit back to Cecil's thought, right?


00:50:44.520 --> 00:50:46.720
Keep the humans who've got to deal with it in mind,


00:50:46.720 --> 00:50:48.220
not just the technology, yeah?


00:50:48.220 --> 00:50:50.000
- Yeah.


00:50:50.000 --> 00:50:51.600
- All right, I want to move on to another topic.


00:50:51.600 --> 00:50:52.860
I'm getting short on time here.


00:50:52.860 --> 00:50:54.960
So maybe I'll throw this first to you, Dan.


00:50:54.960 --> 00:51:00.260
So when we were talking about the bus factor,


00:51:00.260 --> 00:51:04.240
obviously that's a person who is a maintainer


00:51:04.240 --> 00:51:06.600
of an open source project in the context we were seeing,


00:51:06.600 --> 00:51:10.320
before or as Kim broadened that to like somebody at the company who has that


00:51:10.320 --> 00:51:17.880
expertise. But a really common and big bus factor is a company has a closed


00:51:17.880 --> 00:51:22.180
source project and they either go out of business or they get disinterested in


00:51:22.180 --> 00:51:27.920
continuing that project and you're in a bad place. So what I wanted to


00:51:27.920 --> 00:51:34.680
ask you all is how important do you see the open source side of things versus a


00:51:34.680 --> 00:51:37.680
a closed source, like let's say there's some project


00:51:37.680 --> 00:51:41.440
for databases, it's twice as good, but it's closed source.


00:51:41.440 --> 00:51:44.600
Choose it, not choose it, putting money aside.


00:51:44.600 --> 00:51:46.800
I suppose it's free.


00:51:46.800 --> 00:51:50.280
- I mean, I guess I'd generally say it's how hard is it


00:51:50.280 --> 00:51:52.960
to change out for something else?


00:51:52.960 --> 00:51:54.320
- Okay.


00:51:54.320 --> 00:51:59.320
- Like, is it Postgres, but 2x as fast Postgres or Postgres?


00:51:59.320 --> 00:52:02.920
- Right, or is it Microsoft SQL Server,


00:52:02.920 --> 00:52:04.920
but it's still relational and you probably just


00:52:04.920 --> 00:52:07.520
migrate that data to Postgres or something.


00:52:07.520 --> 00:52:12.160
- Yeah, I think the risk is really if you're using this


00:52:12.160 --> 00:52:16.080
and it goes away and then you're stuck.


00:52:16.080 --> 00:52:18.200
That is definitely a real risk


00:52:18.200 --> 00:52:21.320
and I have seen that happen with companies


00:52:21.320 --> 00:52:25.280
that actually had to rewrite their entire code base


00:52:25.280 --> 00:52:26.880
'cause they use something proprietary


00:52:26.880 --> 00:52:29.400
that then was decided.


00:52:29.400 --> 00:52:30.240
- Stalked.


00:52:30.240 --> 00:52:32.000
- There's one specifically--


00:52:32.000 --> 00:52:35.680
It's not profitable enough, so your project stops.


00:52:35.680 --> 00:52:40.080
Exactly. Yeah, this one, it was called QA Studio. It was a finance,


00:52:40.080 --> 00:52:49.520
quant finance language, actually by Palantir. And there was a hedge fund I knew that had


00:52:49.520 --> 00:52:55.680
fully adopted it. And then they actually made the reverse migration to Python after the fact.


00:52:55.680 --> 00:52:59.520
Yeah. How about the rest of you? What do you think?


00:53:01.040 --> 00:53:09.200
Well, I was reminded of a kind of somewhat horrifying experience from my own career that


00:53:09.200 --> 00:53:14.800
Dan's just reminded me of. I've seen it happen with the third-party software that the company's


00:53:14.800 --> 00:53:18.880
bought and then it's no longer available, but the other time I've seen it and it ties into what we


00:53:18.880 --> 00:53:23.520
were saying about kind of picking things that the team knows, is I've come across bits of software


00:53:23.520 --> 00:53:28.560
where somebody says, well that's the app that Bob wrote 15 years ago using Visual Basic 4


00:53:28.560 --> 00:53:33.680
or whatever it is. Nobody knows how to. It doesn't do what we need to do anymore, but we don't have


00:53:33.680 --> 00:53:37.360
the source. Even if we did have the source, we don't have a Visual Basic 4 compiler. Nobody


00:53:37.360 --> 00:53:43.360
understands it. We don't know how he built it. Bob is long gone. You need Windows 95 to build it. How


00:53:43.360 --> 00:53:49.120
do we get that? Well, exactly. All those things add up and at the time, it's not to make you


00:53:49.120 --> 00:53:53.840
sound like Bob was an idiot. Bob did what Bob knew. Bob knew Visual Basic 4 and somebody said,


00:53:53.840 --> 00:53:58.560
let's turn out a tool as fast as possible and Bob can do it for us today and Bob did and the tool


00:53:58.560 --> 00:54:03.680
works and it's fine and you don't think anything about it until you know way down the line and


00:54:03.680 --> 00:54:08.560
nobody knows how to maintain the thing so there is a there's an argument to be had for where do


00:54:08.560 --> 00:54:12.480
the libraries and so forth you pick if you're not picking things that everybody knows or at least


00:54:12.480 --> 00:54:16.960
a huge chunk of you know sooner or later you run out of people who know how to maintain these things


00:54:16.960 --> 00:54:22.240
um as I say not through maliciousness just through you know I need it done fast if you ask Bob to do


00:54:22.240 --> 00:54:25.780
Bob's going to do it in Visual Basic 4 because that's what Bob knew.


00:54:25.780 --> 00:54:26.780
And that's fine.


00:54:26.780 --> 00:54:28.780
That might have been a totally decent choice in 1995.


00:54:28.780 --> 00:54:29.780
Exactly, yeah.


00:54:29.780 --> 00:54:33.280
But it's not in 2022 or now.


00:54:33.280 --> 00:54:36.140
And code rots.


00:54:36.140 --> 00:54:37.140
It does.


00:54:37.140 --> 00:54:38.140
Over time.


00:54:38.140 --> 00:54:41.340
So it was the current compiler, but if you don't keep moving it forward,


00:54:41.340 --> 00:54:43.340
you get to a point you can't move it forward.


00:54:43.340 --> 00:54:47.040
Yeah. Even if the code would work fine in that old platform,


00:54:47.040 --> 00:54:52.040
the OS has changed, and it somehow gets a little out of line with that.


00:54:52.040 --> 00:54:54.160
>> CPU architectures change, right?


00:54:54.160 --> 00:54:56.640
So you have to rebuild at some point and so on and so on.


00:54:56.640 --> 00:54:58.520
>> Exactly. >> Yeah, absolutely.


00:54:58.520 --> 00:55:01.560
>> That only helps if you kept up with the ability to do that.


00:55:01.560 --> 00:55:02.840
You decided 10 years down the line,


00:55:02.840 --> 00:55:05.080
now we need to make it run on 64-bit.


00:55:05.080 --> 00:55:10.360
>> That's what Visual Basic runtime and WebAssembly is all about.


00:55:10.360 --> 00:55:11.960
Let's get going.


00:55:11.960 --> 00:55:17.080
What's your thought on this, open source?


00:55:17.080 --> 00:55:21.400
My tendency, obviously, is to choose it as the first choice,


00:55:21.400 --> 00:55:23.100
But where's the threshold there?


00:55:23.100 --> 00:55:26.720
- Yeah, I think that a lot of what we do very much


00:55:26.720 --> 00:55:29.880
like lives in that realm of open source.


00:55:29.880 --> 00:55:33.360
But for me, I think it really comes down to portability.


00:55:33.360 --> 00:55:36.080
If it's something that can be easily swapped out,


00:55:36.080 --> 00:55:37.100
then I'm all for it.


00:55:37.100 --> 00:55:40.320
But I see this a lot more with like system architectures.


00:55:40.320 --> 00:55:44.920
So if you're gonna decide to go with AWS RDS,


00:55:44.920 --> 00:55:47.120
like it's post-press, right?


00:55:47.120 --> 00:55:50.300
Like you can use the fancy versions and whatnot,


00:55:50.300 --> 00:55:52.740
but like under the hood, it's still Postgres


00:55:52.740 --> 00:55:55.100
and you can move that wherever you want to.


00:55:55.100 --> 00:55:57.620
Whereas like if you're gonna make the decision


00:55:57.620 --> 00:55:59.660
to go all in on serverless


00:55:59.660 --> 00:56:01.540
and you're gonna write Lambdas,


00:56:01.540 --> 00:56:04.300
that's definitely something that you can theoretically


00:56:04.300 --> 00:56:05.180
move someplace else,


00:56:05.180 --> 00:56:08.220
but that barrier to portability is a lot higher.


00:56:08.220 --> 00:56:11.860
So that's kind of where I look at it is


00:56:11.860 --> 00:56:14.980
if this thing goes away or for us,


00:56:14.980 --> 00:56:17.740
a lot of it's like looking at client budgets, right?


00:56:17.740 --> 00:56:20.860
So if this thing costs $10 a month now,


00:56:20.860 --> 00:56:22.420
but they decide to up their costs,


00:56:22.420 --> 00:56:25.300
and now it's going to cost $1,000 a month,


00:56:25.300 --> 00:56:27.060
is that something that our client


00:56:27.060 --> 00:56:28.500
is going to be willing to take on


00:56:28.500 --> 00:56:29.820
from a financial perspective?


00:56:29.820 --> 00:56:33.700
So yeah, there's a lot to it.


00:56:33.700 --> 00:56:35.780
Well, and you're also touching on--


00:56:35.780 --> 00:56:38.020
yeah, you're sort of touching on another angle that's


00:56:38.020 --> 00:56:39.060
interesting as well.


00:56:39.060 --> 00:56:41.380
We don't really have time to go into it, unfortunately.


00:56:41.380 --> 00:56:46.540
But even if you have an open source thing,


00:56:46.540 --> 00:56:49.740
maybe your code is in Python and it's talking to Postgres,


00:56:49.740 --> 00:56:53.200
you can get locked into commercial clouds, right?


00:56:53.200 --> 00:56:57.980
Like RDS or Lambda, right?


00:56:57.980 --> 00:57:00.020
While it might still be running your Python,


00:57:00.020 --> 00:57:02.080
like you said, you can't just take it


00:57:02.080 --> 00:57:04.800
and run it somewhere else without rethinking


00:57:04.800 --> 00:57:09.200
all the little roots of things it's going into


00:57:09.200 --> 00:57:11.980
to hook into the other parts of the cloud there.


00:57:11.980 --> 00:57:15.380
And that's clearly not something you can take


00:57:15.380 --> 00:57:18.260
it's an open source thing and run with it.


00:57:18.260 --> 00:57:19.980
So I'll give you the final word on this


00:57:19.980 --> 00:57:21.340
and we'll wrap it up.


00:57:21.340 --> 00:57:25.740
- Yeah, one way I kind of think about it is,


00:57:25.740 --> 00:57:27.460
you know, like there's some things that I care


00:57:27.460 --> 00:57:30.220
that they're open source and other things I just don't.


00:57:30.220 --> 00:57:35.220
Like as an example, like I use MongoDB randomly.


00:57:35.220 --> 00:57:36.460
I've never looked at the source code.


00:57:36.460 --> 00:57:38.420
I probably am never going to like,


00:57:38.420 --> 00:57:39.700
whether it's open source or not,


00:57:39.700 --> 00:57:41.780
when I could see the source code or not, like,


00:57:41.780 --> 00:57:42.860
is it important?


00:57:42.860 --> 00:57:43.980
I don't know.


00:57:43.980 --> 00:57:48.980
Is it the fact that I appreciate that there's community contributions and the discussion


00:57:48.980 --> 00:57:49.980
happening?


00:57:49.980 --> 00:57:53.740
Maybe that's the important part of the open sourceness that I do care about.


00:57:53.740 --> 00:57:54.840
You know what I mean?


00:57:54.840 --> 00:57:59.260
When I think about smaller projects, and when I mean smaller projects, I mean like utility


00:57:59.260 --> 00:58:01.540
libraries and things of that nature.


00:58:01.540 --> 00:58:05.700
A lot of the times I'll find myself like debugging and actually looking in the code because I


00:58:05.700 --> 00:58:08.860
might have seen like a weird error message and I'm like, I don't understand what this


00:58:08.860 --> 00:58:09.860
means.


00:58:09.860 --> 00:58:12.340
let me try and navigate through,


00:58:12.340 --> 00:58:14.300
let me get clone it and navigate through it


00:58:14.300 --> 00:58:15.700
and see what's happening, right?


00:58:15.700 --> 00:58:18.100
In that case, sure, I totally care that it's open source


00:58:18.100 --> 00:58:19.020
because I have a problem


00:58:19.020 --> 00:58:21.140
and I wanna try and figure it out, right?


00:58:21.140 --> 00:58:23.180
So I think it really just depends.


00:58:23.180 --> 00:58:24.540
Again, for me more so,


00:58:24.540 --> 00:58:26.940
I really appreciate when those utility libraries


00:58:26.940 --> 00:58:27.980
that I'm using are open source


00:58:27.980 --> 00:58:29.220
so I can figure out what's happening,


00:58:29.220 --> 00:58:32.500
but major things like, again, I think about Mongo


00:58:32.500 --> 00:58:35.180
or RabbitMQ or Redis or anything like that,


00:58:35.180 --> 00:58:36.520
I'm never gonna look at that source code,


00:58:36.520 --> 00:58:37.360
you know what I mean?


00:58:37.360 --> 00:58:38.980
- Yeah, I'm with you on that.


00:58:38.980 --> 00:58:40.280
I appreciate that they're open source,


00:58:40.280 --> 00:58:42.700
but I'm not gonna try to change it.


00:58:42.700 --> 00:58:44.060
I'll just probably break it.


00:58:44.060 --> 00:58:48.660
All right, well, this has been a great conversation.


00:58:48.660 --> 00:58:51.540
I'm looking at the notes that we all put together to talk


00:58:51.540 --> 00:58:52.900
and we're halfway through it.


00:58:52.900 --> 00:58:54.060
We could just keep going and going,


00:58:54.060 --> 00:58:57.500
but we don't have so much time.


00:58:57.500 --> 00:58:59.620
So what I wanna do is I wanna close out,


00:58:59.620 --> 00:59:02.780
Norma asked about editors and cool packages and stuff.


00:59:02.780 --> 00:59:04.180
I wanna close this out with a lightning round


00:59:04.180 --> 00:59:05.700
on one other thing.


00:59:05.700 --> 00:59:07.500
And this final thought is,


00:59:07.500 --> 00:59:10.260
how much does it matter that we have


00:59:10.260 --> 00:59:13.060
like really beautiful, say, like landing pages?


00:59:13.060 --> 00:59:15.180
You know, some of these open source projects


00:59:15.180 --> 00:59:17.420
like Vue.js or Tailwind,


00:59:17.420 --> 00:59:18.660
they could be, you know,


00:59:18.660 --> 00:59:20.700
a high-end marketing budget spent on them.


00:59:20.700 --> 00:59:22.580
And even, you know, Poetry in the Python space


00:59:22.580 --> 00:59:25.080
has kind of got like a cool little landing page.


00:59:25.080 --> 00:59:27.540
So we're top to bottom here.


00:59:27.540 --> 00:59:29.260
Final thought, give me a, you know,


00:59:29.260 --> 00:59:32.140
a couple of thoughts real quick on this


00:59:32.140 --> 00:59:33.940
and then we'll call it a show.


00:59:33.940 --> 00:59:34.780
Dan?


00:59:35.820 --> 00:59:44.220
I think it definitely helps in terms of getting people involved, but not necessarily a requirement.


00:59:44.220 --> 00:59:49.340
And in some cases may mask issues with the underlying library.


00:59:49.340 --> 00:59:50.340
Okay.


00:59:50.340 --> 00:59:54.860
Like, I mean, the only thing I can think of is like profit kind of, which had a lot of


00:59:54.860 --> 00:59:55.860
Facebook.


00:59:55.860 --> 01:00:02.160
It was very fancy Facebook marketing, but there's been some, I think like the Zillow


01:00:02.160 --> 01:00:06.320
stories and things like that of cases where it wasn't necessarily appropriately used but


01:00:06.320 --> 01:00:11.520
was very fancily marketed. So I think it's just can be an entree even


01:00:11.520 --> 01:00:18.640
without full evaluation. Right it might actually, maybe the efforts should just be put to the code


01:00:18.640 --> 01:00:24.880
or somewhere else. Gareth, what do you think? You've seen the Tailwind CSS site, are you ready


01:00:24.880 --> 01:00:26.880
to swap all your stuff over?


01:00:26.880 --> 01:00:31.840
All I care about is how quickly I get to a demo of it


01:00:31.840 --> 01:00:33.840
and the documentation.


01:00:33.840 --> 01:00:37.920
I'm old school, so if it's got a man page, I'm probably happier.


01:00:37.920 --> 01:00:43.040
I often find myself looking at them going, "That's great.


01:00:43.040 --> 01:00:45.040
I have no idea what it does."


01:00:45.040 --> 01:00:47.200
And I think the fancier the landing page,


01:00:47.200 --> 01:00:50.560
usually it actually puts me off a bit


01:00:50.560 --> 01:00:53.040
because I'm worried that they're putting a lot into it.


01:00:53.520 --> 01:00:56.080
Although I pay a lot more in JavaScript at the moment,


01:00:56.080 --> 01:00:58.560
they seem to have a lot more fancy landing pages.


01:00:58.560 --> 01:01:02.560
You've got to stand out when there's a new library every week.


01:01:02.560 --> 01:01:03.040
Yeah.


01:01:03.040 --> 01:01:03.540
Jim?


01:01:03.540 --> 01:01:06.880
Sure, I'm pretty much with Gareth there.


01:01:06.880 --> 01:01:10.080
I mean, it would be hypocritical of me to expect an open source project


01:01:10.080 --> 01:01:11.680
to have a pretty page before I can use it,


01:01:11.680 --> 01:01:13.280
because frankly, I can't do that.


01:01:13.280 --> 01:01:15.600
And that's not reasonable to expect other projects


01:01:15.600 --> 01:01:17.280
I might consider using to do that.


01:01:17.280 --> 01:01:20.720
The one thing I would agree with Gareth on one thing,


01:01:20.720 --> 01:01:23.440
what I want to see basically is as fast as possible,


01:01:23.440 --> 01:01:25.920
What is it and how do I use it?


01:01:25.920 --> 01:01:29.040
You know, the marketing gump and so forth is all very nice and well written,


01:01:29.040 --> 01:01:30.600
but it's less relevant to me.


01:01:30.600 --> 01:01:34.400
The only thing I would argue that turns me off immediately on a big project


01:01:34.400 --> 01:01:37.960
are ones that go very video heavy without much text.


01:01:37.960 --> 01:01:41.960
If you have angled your project towards here's a video to show you everything


01:01:41.960 --> 01:01:44.760
you need to know, that's 10 minutes I'm never going to get back


01:01:44.760 --> 01:01:47.360
if I decide I don't want to use your library.


01:01:47.360 --> 01:01:49.960
I could have read the equivalent text exactly.


01:01:49.960 --> 01:01:53.320
I could have read the equivalent text six times in the time it took me to watch your video.


01:01:53.320 --> 01:01:56.760
So maybe that's a personal click, but that's the thing I don't like.


01:01:56.760 --> 01:02:00.920
If the project's super video heavy, it doesn't work for me, I must say.


01:02:00.920 --> 01:02:05.480
Emily, you probably have clients that come with fancy landing pages that


01:02:05.480 --> 01:02:07.800
they're going to recommend that you start with.


01:02:07.800 --> 01:02:14.360
Yeah, for sure. For me, I think documentation is paramount. And I think that a lot of,


01:02:14.360 --> 01:02:19.720
especially in the Python world, there are a lot of pieces of documentation that feel a little bit


01:02:20.440 --> 01:02:26.520
antiquated at this point where it is very much generated off of, you know, maybe some doc strings


01:02:26.520 --> 01:02:31.640
or, you know, argument types and all that stuff that sometimes it's not the most user-friendly.


01:02:31.640 --> 01:02:37.480
So for me, it's like, yeah, I can look at this stuff in the code if I need to. So having something


01:02:37.480 --> 01:02:42.440
that, you know, is either a playground, quick start guide, how to use it, that sort of thing


01:02:42.440 --> 01:02:51.240
is really important. For the landing pages, I feel like it's not necessary, but I think that when


01:02:51.240 --> 01:02:58.600
a tool does a little bit of the work to show how it's differentiated, that helps me, right? So if


01:02:58.600 --> 01:03:03.400
I can look at something and go, "All right, I'm going to look at poetry," and they provide some


01:03:03.400 --> 01:03:07.640
great examples for why it's faster than this thing, why it walks better than this thing,


01:03:07.640 --> 01:03:10.280
and whatever it is, it at least gives me


01:03:10.280 --> 01:03:12.360
sort of a starting point for, you know,


01:03:12.360 --> 01:03:14.660
why would I use this tool?


01:03:14.660 --> 01:03:16.820
Obviously it's all sort of taken with a grain of salt


01:03:16.820 --> 01:03:19.360
because each tool is gonna say that, you know,


01:03:19.360 --> 01:03:20.620
here are the things that they're best at


01:03:20.620 --> 01:03:21.560
and kind of hide the things


01:03:21.560 --> 01:03:23.880
that they're maybe not best at.


01:03:23.880 --> 01:03:27.000
I also think, you know, as you're sitting here on this page


01:03:27.000 --> 01:03:28.360
and you kind of scroll down


01:03:28.360 --> 01:03:30.840
and you can see all these sponsors,


01:03:30.840 --> 01:03:32.720
I think that that is-- - That does matter, yeah.


01:03:32.720 --> 01:03:35.440
- It matters, but it's also something that kind of


01:03:36.520 --> 01:03:39.500
can make you raise an eyebrow, right?


01:03:39.500 --> 01:03:42.500
So like Vue is great because it's very diverse.


01:03:42.500 --> 01:03:45.460
It's not a single large company


01:03:45.460 --> 01:03:47.900
that is sort of powering everything.


01:03:47.900 --> 01:03:50.140
But I do think that that is something to sort of watch for


01:03:50.140 --> 01:03:55.140
is who is driving this and what is the reason why it's here?


01:03:55.140 --> 01:03:58.100
- Sure.


01:03:58.100 --> 01:03:59.900
- Yeah.


01:03:59.900 --> 01:04:00.720
- Cool.


01:04:00.720 --> 01:04:01.820
Cecil?


01:04:01.820 --> 01:04:04.320
- Yeah, I think like a lot of other folks on this panel,


01:04:04.320 --> 01:04:05.620
I am not a designer.


01:04:05.620 --> 01:04:12.660
I do appreciate the aesthetics of being able to see things clearly and read them clearly.


01:04:12.660 --> 01:04:19.940
I'm not here for all the marketing stuff and the "I'm better because" stuff. I'm usually going to


01:04:19.940 --> 01:04:24.580
come in and I'm going to look for that "getting started" button. I'm going to look for that "docs"


01:04:24.580 --> 01:04:30.180
button. I'm going to look for the little code sample that I can copy, paste into VS Code and run


01:04:30.180 --> 01:04:33.380
kind of thing for the most part.


01:04:33.380 --> 01:04:34.880
But then I also recognize the fact


01:04:34.880 --> 01:04:37.580
that really nice documentation takes time.


01:04:37.580 --> 01:04:39.780
And a lot of open source folks don't always


01:04:39.780 --> 01:04:42.340
have the time to create that, right?


01:04:42.340 --> 01:04:43.020
Is that a part--


01:04:43.020 --> 01:04:44.020
It is a signal.


01:04:44.020 --> 01:04:47.460
Yeah, but is that a metric that we judge them by?


01:04:47.460 --> 01:04:48.380
You know what I mean?


01:04:48.380 --> 01:04:48.540
Yes or no?


01:04:48.540 --> 01:04:49.420
I mean, is that fair?


01:04:49.420 --> 01:04:50.260
You know what I mean?


01:04:50.260 --> 01:04:51.780
You can have a really good project,


01:04:51.780 --> 01:04:54.360
but if you don't have the good documentation,


01:04:54.360 --> 01:04:56.700
obviously I can't use it the way it's intended to use.


01:04:56.700 --> 01:04:58.820
But does that mean that it's not a good project?


01:04:58.820 --> 01:04:59.420
I don't know.


01:04:59.420 --> 01:05:03.740
So I feel like that's obviously a good opportunity for folks


01:05:03.740 --> 01:05:07.940
to contribute and send PRs and things of that nature.


01:05:07.940 --> 01:05:11.620
But for me, I'm just going in really quickly to see,


01:05:11.620 --> 01:05:13.140
hey, how can I start the thing?


01:05:13.140 --> 01:05:16.820
How could I run it, install it, execute it, Docker


01:05:16.820 --> 01:05:21.180
compose it, whatever, and then kind of just get going.


01:05:21.180 --> 01:05:23.500
All right, Lukasz, you got the final word here.


01:05:23.500 --> 01:05:26.060
Sure, well, I don't think you can really


01:05:26.060 --> 01:05:29.220
go wrong with an ugly website for a project that


01:05:29.220 --> 01:05:33.820
is open source, it very rarely hinders the project.


01:05:33.820 --> 01:05:34.820
Just look at Python.org.


01:05:34.820 --> 01:05:41.140
I'm being unfair, but in perfect fairness, the last redesign was some 10 years ago or


01:05:41.140 --> 01:05:42.140
something.


01:05:42.140 --> 01:05:49.300
It doesn't look exactly as flashy as Tailwind or Vue or whatever, but it doesn't really


01:05:49.300 --> 01:05:51.740
matter because it does let us...


01:05:51.740 --> 01:05:53.540
Oh, PyPI is nice, like Python.org.


01:05:53.540 --> 01:05:57.540
- Yeah, and I was going to say, PyPI actually did get that treatment, though.


01:05:57.540 --> 01:05:58.540
- Yeah, exactly.


01:05:58.540 --> 01:06:00.700
- Yeah, like python.org might get updated


01:06:00.700 --> 01:06:04.220
at some point as well, but it doesn't hinder us in one bit


01:06:04.220 --> 01:06:07.140
because it's a functional Django, in fact, website.


01:06:07.140 --> 01:06:10.940
We use it every day, it's nice.


01:06:10.940 --> 01:06:14.340
I personally like if there was a designer


01:06:14.340 --> 01:06:19.340
that actually sat on the project and made the website work.


01:06:19.340 --> 01:06:23.260
There's a bunch of things that until recently


01:06:23.260 --> 01:06:26.060
nobody thought about, so all those outdated websites


01:06:26.060 --> 01:06:32.420
don't have this, where like dark mode, white mode, looking good on a phone screen or whatever,


01:06:32.420 --> 01:06:37.260
those things end up being quite useful to me now.


01:06:37.260 --> 01:06:41.660
The job I do, I work with people in different time zones, so every now and again they would


01:06:41.660 --> 01:06:44.580
catch me when I'm away from a keyboard.


01:06:44.580 --> 01:06:49.580
If I can actually go and check something on the phone, it's very helpful.


01:06:49.580 --> 01:06:56.020
It's not always possible or it's at least complicated sometimes when a white background


01:06:56.020 --> 01:07:03.260
is going to glare at you at 3 a.m. or whatever.


01:07:03.260 --> 01:07:05.700
I appreciate good design.


01:07:05.700 --> 01:07:11.580
It's obviously not something I do personally as well, just like everybody else I think


01:07:11.580 --> 01:07:12.580
here.


01:07:12.580 --> 01:07:17.940
However, there are people that are great at it and I appreciate it when people like this


01:07:17.940 --> 01:07:24.940
get contacted and those sorts of websites look good and are functionally better that


01:07:24.940 --> 01:07:25.940
way.


01:07:25.940 --> 01:07:26.940
Yeah.


01:07:26.940 --> 01:07:27.940
All right.


01:07:27.940 --> 01:07:28.940
Thank you all for being here.


01:07:28.940 --> 01:07:29.940
It's been a great conversation.


01:07:29.940 --> 01:07:32.940
Thanks for taking the time and being part of the group.


01:07:32.940 --> 01:07:33.940
Cool.


01:07:33.940 --> 01:07:34.940
Thanks.


01:07:34.940 --> 01:07:36.220
Thanks, everyone.

