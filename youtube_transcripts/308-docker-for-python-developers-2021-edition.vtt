WEBVTT

00:00:00.000 --> 00:00:02.240
(clicking)


00:00:02.240 --> 00:00:06.960
- Hello everyone out there.


00:00:06.960 --> 00:00:09.920
Thank you so much for joining us on the live stream


00:00:09.920 --> 00:00:13.080
of this Talk Python To Me podcast recording.


00:00:13.080 --> 00:00:14.300
So excited to be here with Peter.


00:00:14.300 --> 00:00:16.320
We're going to kick off the show in just a second,


00:00:16.320 --> 00:00:17.760
but I do wanna let you know,


00:00:17.760 --> 00:00:19.500
if you have questions, comments, thoughts,


00:00:19.500 --> 00:00:22.640
put them into the chat here in YouTube


00:00:22.640 --> 00:00:24.840
and we'll try to make them part of the show.


00:00:24.840 --> 00:00:27.360
With that, thanks for being here.


00:00:27.360 --> 00:00:31.040
And Peter, welcome to Talk Python To Me.


00:00:31.040 --> 00:00:32.400
- Yeah, thanks for having me.


00:00:32.400 --> 00:00:33.360
Great to be here.


00:00:33.360 --> 00:00:35.840
- Hey, it's really great to have you here as well.


00:00:35.840 --> 00:00:38.940
It's been far too long since we've talked containers


00:00:38.940 --> 00:00:40.120
and Docker and all the things.


00:00:40.120 --> 00:00:41.960
I was looking back at something like show nine


00:00:41.960 --> 00:00:42.960
or something like that.


00:00:42.960 --> 00:00:45.360
It was, I believe 2015.


00:00:45.360 --> 00:00:47.920
Has anything changed with Docker since 2015?


00:00:47.920 --> 00:00:48.760
- Shame on you.


00:00:48.760 --> 00:00:49.580
- I suspect something has.


00:00:49.580 --> 00:00:50.420
I know, I know.


00:00:50.420 --> 00:00:51.440
I suspect something has.


00:00:51.440 --> 00:00:53.040
It's gotta be.


00:00:53.040 --> 00:00:54.600
- Yeah, there's been a, it's,


00:00:54.600 --> 00:00:55.760
yeah, containers are interesting.


00:00:55.760 --> 00:00:58.360
They're moving very fast, right?


00:00:58.360 --> 00:00:59.520
Very fast.


00:00:59.520 --> 00:01:00.960
On just about all fronts,


00:01:00.960 --> 00:01:05.160
I think the whole developer, DevOps, DevSecOps,


00:01:05.160 --> 00:01:08.200
just have embraced it the past five years.


00:01:08.200 --> 00:01:10.520
- Yeah, I was thinking what you might respond to


00:01:10.520 --> 00:01:11.400
from that question.


00:01:11.400 --> 00:01:14.060
And to me, it seems like not so much


00:01:14.060 --> 00:01:16.480
how containers work and run,


00:01:16.480 --> 00:01:18.120
but just how people have embraced them


00:01:18.120 --> 00:01:19.520
and how many places they show up


00:01:19.520 --> 00:01:21.040
and how many people are saying,


00:01:21.040 --> 00:01:23.320
"Hey, hey, we have a cluster.


00:01:23.320 --> 00:01:24.780
You just run your thing over here.


00:01:24.780 --> 00:01:25.880
Just give us your container


00:01:25.880 --> 00:01:26.880
and we'll help you run it


00:01:26.880 --> 00:01:28.600
as part of our platform as a service,"


00:01:28.600 --> 00:01:31.160
or whatever it is they're cloud hosting.


00:01:31.160 --> 00:01:32.000
Yeah.


00:01:32.000 --> 00:01:32.840
- Yeah, it's very interesting.


00:01:32.840 --> 00:01:34.840
And then there's all these little micro,


00:01:34.840 --> 00:01:38.760
maybe micro is not the correct term,


00:01:38.760 --> 00:01:41.080
but all these, a lot of SaaS and startups


00:01:41.080 --> 00:01:42.200
and trying to help,


00:01:42.200 --> 00:01:45.600
and containers are at the core of a lot of that.


00:01:45.600 --> 00:01:47.380
If you get into the container, we can run it.


00:01:47.380 --> 00:01:49.680
And yeah, some really interesting SaaS


00:01:49.680 --> 00:01:50.520
as they're starting up,


00:01:50.520 --> 00:01:53.360
little niche platforms as a service type things.


00:01:53.360 --> 00:01:54.900
Yeah, 100%.


00:01:54.900 --> 00:01:55.740
- Yeah, absolutely.


00:01:55.740 --> 00:01:56.580
It's super interesting.


00:01:56.580 --> 00:01:58.100
Before we dive too deep into that though,


00:01:58.100 --> 00:02:00.140
let's get started with your story.


00:02:00.140 --> 00:02:02.100
How'd you get into programming?


00:02:02.100 --> 00:02:04.940
- Yeah, so as a kid,


00:02:04.940 --> 00:02:07.600
my dad's an accountant,


00:02:07.600 --> 00:02:09.940
but a nerd at heart,


00:02:09.940 --> 00:02:13.740
a techie, let's say.


00:02:13.740 --> 00:02:15.780
And he started out, this is interesting,


00:02:15.780 --> 00:02:16.620
at least to me,


00:02:16.620 --> 00:02:18.220
he started out with calculators before,


00:02:18.220 --> 00:02:21.180
PCs were a big thing.


00:02:21.180 --> 00:02:22.060
He had calculators,


00:02:22.080 --> 00:02:23.800
he'd be programming these calculators and stuff.


00:02:23.800 --> 00:02:25.760
And anyways, long story short,


00:02:25.760 --> 00:02:26.600
he ended up getting,


00:02:26.600 --> 00:02:27.840
I think it was Apple II


00:02:27.840 --> 00:02:29.760
was the first kind of computer we had.


00:02:29.760 --> 00:02:31.320
And I was fascinated by it,


00:02:31.320 --> 00:02:32.400
started programming on it,


00:02:32.400 --> 00:02:34.860
just learning, messing around.


00:02:34.860 --> 00:02:36.920
Fast forward after high school,


00:02:36.920 --> 00:02:38.680
I was in the Coast Guard


00:02:38.680 --> 00:02:42.140
and had gotten out and was going back to school.


00:02:42.140 --> 00:02:44.480
And I started back as an accountant.


00:02:44.480 --> 00:02:47.000
My dad said, "Hey, accounting is a good foundation,


00:02:47.000 --> 00:02:48.560
you like math and science and those types of things."


00:02:48.560 --> 00:02:50.280
And I hated it,


00:02:50.280 --> 00:02:51.960
hated it, the debits and credits,


00:02:51.960 --> 00:02:55.680
and I was just like micro macro.


00:02:55.680 --> 00:02:58.800
Now it's a lot more interesting.


00:02:58.800 --> 00:03:00.680
Back then I couldn't stand it,


00:03:00.680 --> 00:03:01.520
but then I lucked out.


00:03:01.520 --> 00:03:04.360
My father was running two steel companies


00:03:04.360 --> 00:03:06.320
and he had a consulting team


00:03:06.320 --> 00:03:09.000
that was writing software for him,


00:03:09.000 --> 00:03:09.980
very exciting stuff,


00:03:09.980 --> 00:03:11.960
like inventory management,


00:03:11.960 --> 00:03:13.560
working process tracking.


00:03:13.560 --> 00:03:16.900
- Not exciting, but it's the kind of stuff that


00:03:16.900 --> 00:03:18.960
if you looked at what people were doing before,


00:03:18.960 --> 00:03:19.800
it was dreadful, right?


00:03:19.800 --> 00:03:20.920
It's like transformative,


00:03:20.920 --> 00:03:23.040
even though it seems so boring and basic.


00:03:23.040 --> 00:03:24.320
- Yeah, yeah.


00:03:24.320 --> 00:03:26.840
And he said, "Why don't you come work for me?"


00:03:26.840 --> 00:03:28.800
And this consulting firm,


00:03:28.800 --> 00:03:32.000
the main, the owner had some life issues or whatever


00:03:32.000 --> 00:03:34.120
and had to move on.


00:03:34.120 --> 00:03:36.880
And I said, "Well, I don't know what I'm doing."


00:03:36.880 --> 00:03:38.520
He said, "Oh, you'll figure it out.


00:03:38.520 --> 00:03:39.840
There's a big Barnes and Noble


00:03:39.840 --> 00:03:41.320
at the top of the hill there, you can-"


00:03:41.320 --> 00:03:43.440
- Got a whole section on it, just go read.


00:03:43.440 --> 00:03:44.280
- Literally, yeah.


00:03:44.280 --> 00:03:45.920
And I did, and I did.


00:03:45.920 --> 00:03:48.640
And it was, I had a passion,


00:03:48.640 --> 00:03:50.320
I had a burning desire, right, to learn.


00:03:50.320 --> 00:03:51.720
It was fascinating to me.


00:03:51.720 --> 00:03:54.760
Yeah, and so I switched over to computer science degree,


00:03:54.760 --> 00:03:58.400
MIS, and, but by the time I got farther along in that,


00:03:58.400 --> 00:04:00.640
I was getting paid to program


00:04:00.640 --> 00:04:02.920
and I was learning a ton more on the job.


00:04:02.920 --> 00:04:03.760
So that kind of-


00:04:03.760 --> 00:04:06.320
- Remember your first experience of getting paid


00:04:06.320 --> 00:04:08.000
to write code, was it just like,


00:04:08.000 --> 00:04:10.600
I can't believe they're actually paying me to do this.


00:04:10.600 --> 00:04:12.040
- Absolutely, absolutely.


00:04:12.040 --> 00:04:15.400
It was, yeah, I mean, it's literally how they say,


00:04:15.400 --> 00:04:17.360
find something you love and are passionate in


00:04:17.360 --> 00:04:18.240
and the money will come.


00:04:18.240 --> 00:04:20.520
And yeah, it did, it certainly did.


00:04:20.520 --> 00:04:22.040
I was, I really enjoyed it.


00:04:22.040 --> 00:04:25.640
And yeah, I was getting paid to learn and write applications.


00:04:25.640 --> 00:04:28.000
So yeah, it was awesome.


00:04:28.000 --> 00:04:28.840
It was awesome.


00:04:28.840 --> 00:04:29.680
- Yeah, it's fantastic.


00:04:29.680 --> 00:04:30.880
I remember my first experience like that as well.


00:04:30.880 --> 00:04:32.560
I'm like, I had better figure this out


00:04:32.560 --> 00:04:35.120
before they realize I can't actually do this.


00:04:35.120 --> 00:04:36.720
Yeah, I could do the things they wanted,


00:04:36.720 --> 00:04:38.480
but I'm like, oh, any moment, they're just gonna say,


00:04:38.480 --> 00:04:40.040
no, we actually don't get to do this anymore.


00:04:40.040 --> 00:04:40.880
- Yeah.


00:04:40.880 --> 00:04:41.760
- But it was great.


00:04:41.760 --> 00:04:43.400
- Yeah, yeah, exactly.


00:04:43.400 --> 00:04:47.080
And then I went, by that time I said,


00:04:47.080 --> 00:04:48.640
I have to get on a bigger team and learn.


00:04:48.640 --> 00:04:51.320
I know I got to the point where, okay, I can write programs,


00:04:51.320 --> 00:04:53.320
but I don't know how to be an engineer.


00:04:53.320 --> 00:04:54.160
- Yeah.


00:04:54.160 --> 00:04:55.520
- And I'm not sure I could put it in those type of words,


00:04:55.520 --> 00:04:57.560
but luckily after that I got on a team


00:04:57.560 --> 00:04:59.320
and had some great mentors.


00:04:59.320 --> 00:05:03.140
So yeah, that's how I kinda got started.


00:05:03.140 --> 00:05:04.420
- Yeah, fantastic.


00:05:04.420 --> 00:05:05.800
I think that's good advice.


00:05:05.800 --> 00:05:08.960
You know, it's really cool to be on small teams


00:05:08.960 --> 00:05:10.800
because you really get to put your hand


00:05:10.800 --> 00:05:13.240
in so many areas you're not pigeonholed into.


00:05:13.240 --> 00:05:15.320
Well, I'm the one who optimizes stored procedures,


00:05:15.320 --> 00:05:16.240
so I do that.


00:05:16.240 --> 00:05:19.360
- Right, you get like a really broad experience,


00:05:19.360 --> 00:05:21.060
but at some point when it's like,


00:05:21.060 --> 00:05:25.560
there's no one I can talk to or learn from


00:05:25.560 --> 00:05:26.720
to go farther in this,


00:05:26.720 --> 00:05:29.880
then it gets to be a little bit limiting, I think.


00:05:29.880 --> 00:05:30.720
- Yeah, exactly.


00:05:30.720 --> 00:05:31.960
I'm like, well, that's how it got for me.


00:05:31.960 --> 00:05:34.080
I was like, I don't know where to go next


00:05:34.080 --> 00:05:35.120
and I don't know who, you know,


00:05:35.120 --> 00:05:37.160
I didn't have anybody there with me.


00:05:37.160 --> 00:05:39.800
Yeah, I think having a mentor either,


00:05:39.800 --> 00:05:43.560
either well-structured or kinda loosely structured


00:05:43.560 --> 00:05:46.080
or whether you look back on it five years and go,


00:05:46.080 --> 00:05:47.680
oh, that person was kind of a mentor for me


00:05:47.680 --> 00:05:49.000
is very powerful, right?


00:05:49.000 --> 00:05:50.160
It's very powerful.


00:05:50.160 --> 00:05:51.080
- Yeah, absolutely.


00:05:51.080 --> 00:05:51.920
It totally is.


00:05:51.920 --> 00:05:54.040
I remember making that transition


00:05:54.040 --> 00:05:56.520
to a really great group of people who were,


00:05:56.520 --> 00:05:58.560
every one of them I felt like was way smarter than me


00:05:58.560 --> 00:06:00.000
and it was intimidating,


00:06:00.000 --> 00:06:03.560
but absolutely was a good outcome.


00:06:03.560 --> 00:06:05.600
- Yeah, that's the place to be, right?


00:06:05.600 --> 00:06:06.440
- Yeah.


00:06:06.440 --> 00:06:08.520
- Unless, you know, of course,


00:06:08.520 --> 00:06:09.720
I think a lot of us too in tech


00:06:09.720 --> 00:06:12.120
deal with ego issues sometimes.


00:06:12.120 --> 00:06:13.000
I know I did, right?


00:06:13.000 --> 00:06:15.000
Like, hey, I'm pretty smart.


00:06:15.000 --> 00:06:15.840
I know what I'm doing.


00:06:15.840 --> 00:06:18.320
And when you're young and ambitious, right?


00:06:18.320 --> 00:06:20.320
And you run into other really smart people


00:06:20.320 --> 00:06:23.680
that like are smart and you go,


00:06:23.680 --> 00:06:24.880
okay, I'm not that smart.


00:06:24.880 --> 00:06:26.280
Yeah, it's a little humbling, but-


00:06:26.280 --> 00:06:27.120
- It can be humbling.


00:06:27.120 --> 00:06:27.960
- Yeah.


00:06:27.960 --> 00:06:29.080
- Those are probably good life lessons,


00:06:29.080 --> 00:06:31.160
but they're hard to take when you're young, I remember.


00:06:31.160 --> 00:06:32.480
- Yeah, absolutely, yeah.


00:06:32.480 --> 00:06:33.480
- Fantastic.


00:06:33.480 --> 00:06:34.860
So how about now?


00:06:34.860 --> 00:06:37.160
What are you doing day to day?


00:06:37.160 --> 00:06:40.120
- Yeah, so I head up the developer relations team at Docker


00:06:40.120 --> 00:06:43.400
and I get to do what I love.


00:06:43.400 --> 00:06:45.560
You know, I still get to play around with tech


00:06:45.560 --> 00:06:48.360
and learn new things and build stuff,


00:06:48.360 --> 00:06:50.640
but then I also get to transfer that knowledge to others


00:06:50.640 --> 00:06:51.560
or at least try.


00:06:51.560 --> 00:06:56.240
So teaching and mentoring is what I do mostly day to day,


00:06:56.240 --> 00:06:58.900
write content and workshops and those types of things.


00:06:58.900 --> 00:07:03.200
Yeah, so, and I help folks learn to use containers


00:07:03.200 --> 00:07:06.700
in Docker to help build applications, right?


00:07:06.700 --> 00:07:09.260
So yeah, it's fantastic.


00:07:09.260 --> 00:07:11.600
I love my job, truly do.


00:07:11.600 --> 00:07:12.440
- I can imagine.


00:07:12.440 --> 00:07:14.920
You know, I really have thought for a long time


00:07:14.920 --> 00:07:19.320
that this developer evangelist sort of role,


00:07:19.320 --> 00:07:21.120
it just seems so neat


00:07:21.120 --> 00:07:23.720
because you get to work with a bunch of people,


00:07:23.720 --> 00:07:24.680
you're not really there


00:07:24.680 --> 00:07:27.200
just closing boring JIRA tickets every day, right?


00:07:27.200 --> 00:07:30.440
You get to just work at like the fun level of software


00:07:30.440 --> 00:07:32.200
and really interact with a lot of different people.


00:07:32.200 --> 00:07:35.000
You get to go to conferences, maybe be on a podcast,


00:07:35.000 --> 00:07:36.080
all those kinds of things.


00:07:36.080 --> 00:07:40.520
It's a really cool space to be after you've learned enough


00:07:40.520 --> 00:07:43.200
in the industry to play that role.


00:07:43.200 --> 00:07:44.120
- Yeah, a hundred percent.


00:07:44.120 --> 00:07:46.920
I remember seeing, I had thought about the role before,


00:07:46.920 --> 00:07:51.000
but I think it was at Google's, what is it?


00:07:51.000 --> 00:07:52.920
Google Next, I think it's their conference.


00:07:52.920 --> 00:07:56.120
But yeah, and that was when I kind of,


00:07:56.120 --> 00:07:58.280
I had known about Dev Advocates and DevRel,


00:07:58.280 --> 00:07:59.880
but when I saw a couple of speakers, I was like,


00:07:59.880 --> 00:08:02.680
"Oh wait, Dev Advocates, oh, they get paid to do this.


00:08:02.680 --> 00:08:04.480
This isn't just, you know,


00:08:04.480 --> 00:08:06.480
Peter who's a software engineer then speaks, right?


00:08:06.480 --> 00:08:07.360
This is their job."


00:08:07.360 --> 00:08:09.360
And I was like, "Oh, that's pretty interesting."


00:08:09.360 --> 00:08:10.200
Yeah, yeah.


00:08:10.200 --> 00:08:12.920
- Yeah, you gotta have the right personality for it,


00:08:12.920 --> 00:08:14.160
but I think it's really fantastic.


00:08:14.160 --> 00:08:19.160
I did actually a whole episode, episode 189 on this role.


00:08:19.160 --> 00:08:21.120
And I had four or five people


00:08:21.120 --> 00:08:23.240
who were at different companies doing this.


00:08:23.240 --> 00:08:25.640
So yeah, it's really, really neat.


00:08:25.640 --> 00:08:30.640
So let's, you know, I do wanna catch up on what is new


00:08:30.640 --> 00:08:33.800
in Docker and containers and that whole space,


00:08:33.800 --> 00:08:36.080
but there are a lot of people


00:08:36.080 --> 00:08:37.520
with lots of different backgrounds.


00:08:37.520 --> 00:08:39.760
Let's, you know, listen to the show who,


00:08:39.760 --> 00:08:42.600
I'm sure everyone's heard of Docker and containers, right?


00:08:42.600 --> 00:08:44.360
It's like hearing of Linux or something,


00:08:44.360 --> 00:08:46.200
but that doesn't mean you're super familiar with it


00:08:46.200 --> 00:08:47.600
or you really understand the advantages


00:08:47.600 --> 00:08:49.040
or maybe the history.


00:08:49.040 --> 00:08:52.080
So let's actually maybe start with just like the history


00:08:52.080 --> 00:08:53.480
of containers a little bit.


00:08:53.480 --> 00:08:58.800
I know when I first saw the talk by the original,


00:08:58.800 --> 00:09:01.520
I think it was the original CEO of Docker,


00:09:01.520 --> 00:09:04.120
gave a really interesting sort of tie back


00:09:04.120 --> 00:09:06.560
to shipping containers.


00:09:06.560 --> 00:09:09.000
- Yeah, yeah.


00:09:09.000 --> 00:09:10.360
- So what's this whole idea of containers?


00:09:10.360 --> 00:09:11.600
Where's it come from?


00:09:11.600 --> 00:09:13.440
- Yeah, yeah, yeah.


00:09:13.440 --> 00:09:16.200
So yeah, Solomon Hikes when-


00:09:16.200 --> 00:09:17.080
- Yeah, that was him.


00:09:17.080 --> 00:09:19.400
- Yeah, when I first saw his,


00:09:19.400 --> 00:09:20.840
I think it was at a Pi conference,


00:09:20.840 --> 00:09:23.040
now that I think about it, actually in Europe.


00:09:23.040 --> 00:09:26.240
Yeah, he gave a quick brief kind of like,


00:09:26.240 --> 00:09:29.360
you know, what do you call lightning talk, right?


00:09:29.360 --> 00:09:31.360
And it kind of went over at the end


00:09:31.360 --> 00:09:33.120
and people like went kind of crazy.


00:09:33.120 --> 00:09:35.120
And I remember kind of seeing it and I was like,


00:09:35.120 --> 00:09:36.280
and if you ever go watch it,


00:09:36.280 --> 00:09:38.720
I recommend people go watch it


00:09:38.720 --> 00:09:40.760
and kind of look for the aha moment,


00:09:40.760 --> 00:09:43.240
at least it took me a bit, right?


00:09:43.240 --> 00:09:44.640
And you know, he did ran these commands


00:09:44.640 --> 00:09:45.480
and then, oh yeah,


00:09:45.480 --> 00:09:47.480
and then there's this process running inside of a container


00:09:47.480 --> 00:09:51.240
and super easy and I forget what he demoed,


00:09:51.240 --> 00:09:53.040
but it took me a while, right?


00:09:53.040 --> 00:09:53.880
To be honest, right?


00:09:53.880 --> 00:09:55.360
I step back and I was like, well, okay,


00:09:55.360 --> 00:09:57.800
we have VMs, what is this container thing?


00:09:57.800 --> 00:09:59.320
And it took me a little bit to figure out like,


00:09:59.320 --> 00:10:01.280
oh, wow, this is super powerful.


00:10:01.280 --> 00:10:03.400
But you know, containers,


00:10:03.400 --> 00:10:06.920
the constructs to build containers


00:10:06.920 --> 00:10:09.360
have been around for a while since the 70s, right?


00:10:09.360 --> 00:10:12.480
And been in Unix, different Unix flavors


00:10:12.480 --> 00:10:15.200
with change root and those types of things.


00:10:15.200 --> 00:10:18.760
And then I think around 2000, I believe,


00:10:18.760 --> 00:10:22.800
was when Vserve came out


00:10:22.800 --> 00:10:25.880
and then about eight years.


00:10:25.880 --> 00:10:30.880
So you had Linux Vserve and FreeBSD had some,


00:10:30.880 --> 00:10:32.960
you know, container like functionalities


00:10:32.960 --> 00:10:36.480
to isolate processes into those types of things.


00:10:36.480 --> 00:10:39.600
So Vserve was kind of like a virtual, you know,


00:10:39.600 --> 00:10:41.320
sitting on top of the core kernel


00:10:41.320 --> 00:10:43.240
and having some virtualization there.


00:10:43.240 --> 00:10:44.080
I'll put virtual--


00:10:44.080 --> 00:10:45.680
- When I first heard about Docker,


00:10:45.680 --> 00:10:48.520
I thought, oh, this is this amazing new thing.


00:10:48.520 --> 00:10:49.880
And then as I researched it more,


00:10:49.880 --> 00:10:52.920
I'm like, actually the pieces had always,


00:10:52.920 --> 00:10:54.720
not always, but they had been there for a while.


00:10:54.720 --> 00:10:56.200
Like these pieces you're talking about,


00:10:56.200 --> 00:10:57.600
they just hadn't really been


00:10:57.600 --> 00:11:00.400
sort of put into a nice little package


00:11:00.400 --> 00:11:02.080
the way Docker has, right?


00:11:02.080 --> 00:11:03.400
- Yeah, yeah, yeah.


00:11:03.400 --> 00:11:05.560
And I think that's the beauty of what Docker did


00:11:05.560 --> 00:11:07.080
and Solomon and his team, right?


00:11:07.080 --> 00:11:09.440
There was, I think there was three founders,


00:11:09.440 --> 00:11:13.040
but yeah, it was 2013, there it is on the screen.


00:11:13.040 --> 00:11:17.480
Yeah, so 2013, Docker kind of took off, right?


00:11:17.480 --> 00:11:19.440
It kind of exploded and it was just that.


00:11:19.440 --> 00:11:22.200
You know, they simplified containers,


00:11:22.200 --> 00:11:24.320
these constructs were all there, but they made it easy.


00:11:24.320 --> 00:11:26.600
They made it, the ability to deep, you know,


00:11:26.600 --> 00:11:28.680
drop back down in into the details


00:11:28.680 --> 00:11:31.480
or stay very high level and use, you know,


00:11:31.480 --> 00:11:34.000
Docker run, Docker push, you know,


00:11:34.000 --> 00:11:35.520
those Docker build, right?


00:11:35.520 --> 00:11:39.120
Those three main commands were super powerful.


00:11:39.120 --> 00:11:40.960
And I think that was the beauty of Docker.


00:11:40.960 --> 00:11:44.640
They just made it easier for the average developer or,


00:11:44.640 --> 00:11:47.680
you know, for if you had to be a Linux kernel developer


00:11:47.680 --> 00:11:50.840
to kind of really understand containers before that.


00:11:50.840 --> 00:11:52.760
- Yeah. - They simplified, yeah.


00:11:52.760 --> 00:11:55.280
- Linux admin or something like that, right?


00:11:55.280 --> 00:11:57.360
- Yeah, yeah, a hundred percent.


00:11:57.360 --> 00:11:58.880
And it's kind of like,


00:11:58.880 --> 00:12:00.720
I think Microsoft did a great job at this.


00:12:00.720 --> 00:12:02.720
I think Apple has done a great job at this.


00:12:02.720 --> 00:12:06.520
You know, Microsoft with, you know, VB, right?


00:12:06.520 --> 00:12:07.960
And I'm going to get beat up on the internets


00:12:07.960 --> 00:12:10.800
for this Visual Basic.


00:12:10.800 --> 00:12:13.840
But Visual Basic 6, I mean, kind of weird,


00:12:13.840 --> 00:12:14.960
but it was a game changer, right?


00:12:14.960 --> 00:12:17.040
You had C++, MFC, you know,


00:12:17.040 --> 00:12:19.960
writing these C++ to write desktop apps


00:12:19.960 --> 00:12:21.760
and business apps, right?


00:12:21.760 --> 00:12:23.960
And VB 6 came along and said, "Oh no, no, it's, you know,


00:12:23.960 --> 00:12:25.760
if you need a text box and some labels and a button,


00:12:25.760 --> 00:12:27.360
just drag it on there, right?"


00:12:27.360 --> 00:12:28.480
- Look, I won't beat you up for that.


00:12:28.480 --> 00:12:30.040
VB was transformative.


00:12:30.040 --> 00:12:32.520
It was magical.


00:12:32.520 --> 00:12:35.160
The problem with VB was you could go so far


00:12:35.160 --> 00:12:36.960
and then you're like, "Well, VB doesn't do that."


00:12:36.960 --> 00:12:39.400
So now you get a grownup.


00:12:39.400 --> 00:12:41.080
Now it's time to put your big boy pants on


00:12:41.080 --> 00:12:43.240
and get a grownup language and suffer the, you know,


00:12:43.240 --> 00:12:46.120
C++ huge gap.


00:12:46.120 --> 00:12:48.840
But for what a lot of people built with that,


00:12:48.840 --> 00:12:52.960
it was incredibly, to be honest,


00:12:52.960 --> 00:12:55.920
there's nothing like that today that I can think of


00:12:55.920 --> 00:12:57.880
that is so powerful for building


00:12:57.880 --> 00:13:00.880
a little distributable application I can give to you.


00:13:00.880 --> 00:13:04.320
Electron feels super complicated and hard.


00:13:04.320 --> 00:13:06.440
Python, you can build stuff, but it's always kind of like,


00:13:06.440 --> 00:13:09.040
but this is a challenge or that, you know,


00:13:09.040 --> 00:13:14.040
even the Windows stuff with WPF is,


00:13:14.040 --> 00:13:17.880
it's way more complicated than, like, it was magic, right?


00:13:17.880 --> 00:13:19.920
It's just, it's too bad that there's not sort of


00:13:19.920 --> 00:13:24.080
a semi-modern version of something that simple for people.


00:13:24.080 --> 00:13:25.600
- Yeah, yeah, yeah.


00:13:25.600 --> 00:13:29.400
And if, who knows if Visual Basic had curly braces,


00:13:29.400 --> 00:13:31.080
we might have a different story.


00:13:31.080 --> 00:13:32.960
- Yeah. - I mean, like,


00:13:32.960 --> 00:13:33.800
like truly, right?


00:13:33.800 --> 00:13:35.520
I mean, I remember having debates with,


00:13:35.520 --> 00:13:36.640
yeah, what's not a real language?


00:13:36.640 --> 00:13:38.200
It's, you know, it's basic.


00:13:38.200 --> 00:13:40.040
It's the basic programming language, right?


00:13:40.040 --> 00:13:41.360
But yeah. - Yeah, yeah.


00:13:41.360 --> 00:13:43.240
And John Sheehan out there in the live stream says,


00:13:43.240 --> 00:13:44.920
"Rad concepts seem to be coming back


00:13:44.920 --> 00:13:46.800
"as these low-code, no-code platforms."


00:13:46.800 --> 00:13:49.040
That's a really interesting tie in there.


00:13:49.040 --> 00:13:51.120
I do agree with that.


00:13:51.120 --> 00:13:53.080
I think that they've gone even lower than,


00:13:53.080 --> 00:13:55.040
or simpler than what Visual Basic was,


00:13:55.040 --> 00:13:56.600
to like really, really simple.


00:13:56.600 --> 00:13:58.760
So yeah, I'm not sure it's exactly equivalent,


00:13:58.760 --> 00:13:59.960
but it's definitely, you're right.


00:13:59.960 --> 00:14:01.880
Those things are definitely coming back.


00:14:01.880 --> 00:14:04.240
- Yeah, I think we were real complicated.


00:14:04.240 --> 00:14:07.040
Now we're going real, too simple time, right?


00:14:07.040 --> 00:14:08.680
- The pendulum swings hard, doesn't it?


00:14:08.680 --> 00:14:10.280
- Yeah, I think we'll find it.


00:14:10.280 --> 00:14:12.680
I do believe though, with technology, right,


00:14:12.680 --> 00:14:14.880
abstractions get higher and higher.


00:14:14.880 --> 00:14:16.640
And well, this will kind of roll in a little bit


00:14:16.640 --> 00:14:19.640
into where the container history went next.


00:14:19.640 --> 00:14:24.640
And, you know, to 2017, '18-ish,


00:14:24.640 --> 00:14:27.840
Kubernetes kind of dominated the orchestration, right?


00:14:28.840 --> 00:14:32.880
And still does, but it is, you know,


00:14:32.880 --> 00:14:35.520
I was gonna say horribly complex,


00:14:35.520 --> 00:14:37.240
and maybe it is, maybe I'll get beat up for that too,


00:14:37.240 --> 00:14:39.760
but it is extremely complex, right?


00:14:39.760 --> 00:14:41.200
Extremely complex.


00:14:41.200 --> 00:14:42.040
And I think-


00:14:42.040 --> 00:14:45.280
- And we're mostly talking about like running


00:14:45.280 --> 00:14:47.800
a Kubernetes cluster is complex,


00:14:47.800 --> 00:14:49.880
not necessarily like somebody's already set up for you


00:14:49.880 --> 00:14:53.920
and you give them a definition and say, "Run that."


00:14:53.920 --> 00:14:55.520
Like that part might not be so hard,


00:14:55.520 --> 00:14:57.520
but like if you're gonna do the whole stack, right?


00:14:57.520 --> 00:14:59.680
- Yeah, the whole stack from the ground up, right?


00:14:59.680 --> 00:15:01.960
Yeah, it's a bunch of moving parts,


00:15:01.960 --> 00:15:04.320
getting installed, getting everything working together.


00:15:04.320 --> 00:15:09.200
Security, networking, yeah, it's not simple, right?


00:15:09.200 --> 00:15:10.680
It's not simple at all.


00:15:10.680 --> 00:15:13.320
But yeah, I think it'll get easier and easier and easier


00:15:13.320 --> 00:15:16.080
and orchestrated run times.


00:15:16.080 --> 00:15:17.440
You know, I see a lot in tech,


00:15:17.440 --> 00:15:20.920
like the App Engine from Google with Python, right?


00:15:20.920 --> 00:15:22.600
Well, basically serverless now,


00:15:22.600 --> 00:15:24.520
but when it first came out, you're like,


00:15:24.520 --> 00:15:25.720
"What, you're gonna run my whole app?


00:15:25.720 --> 00:15:27.920
No, no, no, no, no, I need to control all that."


00:15:27.920 --> 00:15:29.600
So we did away with it, but now we're coming back,


00:15:29.600 --> 00:15:31.560
you know, serverless, we're kind of coming back to it.


00:15:31.560 --> 00:15:32.560
Same with Kubernetes, right?


00:15:32.560 --> 00:15:36.160
Oh, your ECS and ACI on, you know,


00:15:36.160 --> 00:15:38.800
"Hey, give me a container, I'll just run it and manage it."


00:15:38.800 --> 00:15:39.720
You know, we said, "No, no, no, no,


00:15:39.720 --> 00:15:41.320
I need to control all that."


00:15:41.320 --> 00:15:43.640
And then you get this massive Kubernetes


00:15:43.640 --> 00:15:45.720
and now I think we're going back, right?


00:15:45.720 --> 00:15:47.200
"Yeah, I just wanna give you my containers


00:15:47.200 --> 00:15:48.240
and run them for me, right?


00:15:48.240 --> 00:15:50.680
I don't have time to deal with all this."


00:15:50.680 --> 00:15:54.360
And Google announces autopilot


00:15:54.360 --> 00:15:56.400
and those types of things, right?


00:15:56.400 --> 00:15:57.840
So I think that's the way we're gonna go.


00:15:57.840 --> 00:15:59.760
And I think Docker as a company,


00:15:59.760 --> 00:16:04.440
about a year ago when we sold off the enterprise,


00:16:04.440 --> 00:16:06.640
a little over a year ago, sold the enterprise business off,


00:16:06.640 --> 00:16:09.840
got off kind of package software, enterprise software,


00:16:09.840 --> 00:16:12.000
moved more to SaaS, back to the web.


00:16:12.000 --> 00:16:13.560
- Yeah, well, let's dig into that for a minute


00:16:13.560 --> 00:16:17.480
because I remember seeing Docker coming along


00:16:17.480 --> 00:16:19.960
and it was like, "Oh, this is a really cool,


00:16:19.960 --> 00:16:20.800
really cool dev tool,


00:16:20.800 --> 00:16:22.400
but how are they gonna make any money out of this?"


00:16:22.400 --> 00:16:25.320
And I feel like the first big step was,


00:16:25.320 --> 00:16:26.160
"Well, what we're gonna do


00:16:26.160 --> 00:16:28.520
is we're gonna have special offerings for enterprises


00:16:28.520 --> 00:16:32.720
and help them tame their zillions


00:16:32.720 --> 00:16:35.160
of different types of software they need to run."


00:16:35.160 --> 00:16:36.000
- Right.


00:16:36.000 --> 00:16:37.160
- It sounds like that that's not the case anymore.


00:16:37.160 --> 00:16:38.680
What's that transition?


00:16:38.680 --> 00:16:40.640
What's happened with Docker around that?


00:16:40.640 --> 00:16:44.840
- Yeah, I think first the business model was,


00:16:44.840 --> 00:16:47.200
we shifted to an enterprise business model.


00:16:47.200 --> 00:16:49.880
Prior to that, Docker was just exploding, right?


00:16:49.880 --> 00:16:52.160
And building tools and every DockerCon,


00:16:52.160 --> 00:16:53.880
there was a new release and a new tool


00:16:53.880 --> 00:16:56.600
and a lot of them would fizzle out and stuff like that.


00:16:56.600 --> 00:17:00.080
And the people with the purse strings,


00:17:00.080 --> 00:17:02.480
the money said, "Hey, hey, hold on, this is great.


00:17:02.480 --> 00:17:03.440
You're doing some wonderful things,


00:17:03.440 --> 00:17:06.320
but we want our money back eventually.


00:17:06.320 --> 00:17:09.000
So can you go sell something?"


00:17:09.000 --> 00:17:11.760
And they probably, Open Source and Cumbia, we all love it,


00:17:11.760 --> 00:17:14.280
but we're investors, where's our 10X?


00:17:14.280 --> 00:17:15.480
Yeah.


00:17:15.480 --> 00:17:18.440
And yeah, so we shifted a little bit to enterprise


00:17:18.440 --> 00:17:20.800
and it was just an old business model, I think,


00:17:21.960 --> 00:17:25.920
on-prem, long licenses, three-year licenses,


00:17:25.920 --> 00:17:28.040
at least a year, if not three years,


00:17:28.040 --> 00:17:31.120
and then consulting on top of that.


00:17:31.120 --> 00:17:35.120
So paying a couple of hundred thousand dollars


00:17:35.120 --> 00:17:39.120
for the software and then twice that for consulting services.


00:17:39.120 --> 00:17:42.000
It was just a model that's a little bit outdated


00:17:42.000 --> 00:17:43.560
and it's still there, of course,


00:17:43.560 --> 00:17:46.240
but Salesforce was really the first


00:17:46.240 --> 00:17:48.760
that kind of was starting to drive the nail


00:17:48.760 --> 00:17:50.360
into the coffin, so to speak, right?


00:17:50.360 --> 00:17:53.040
- Well, it seems to me where a lot of those stories


00:17:53.040 --> 00:17:57.720
are moving are, are you moving to Azure?


00:17:57.720 --> 00:17:59.120
Are you moving to AWS?


00:17:59.120 --> 00:18:00.240
Are you moving to Linode?


00:18:00.240 --> 00:18:03.760
Like where, instead of trying to solidify


00:18:03.760 --> 00:18:06.640
and really modernize the data center inside companies,


00:18:06.640 --> 00:18:07.480
a lot of them are going,


00:18:07.480 --> 00:18:09.600
how can we just get out of the data center business?


00:18:09.600 --> 00:18:12.360
In which case, that's a totally different story, right?


00:18:12.360 --> 00:18:14.560
In terms of like how they work with you guys.


00:18:14.560 --> 00:18:16.560
- Yeah, yeah, and we tried,


00:18:16.560 --> 00:18:19.640
we did have an advantage, you know, cross-cloud.


00:18:19.640 --> 00:18:22.400
So, you know, one single pane of glass


00:18:22.400 --> 00:18:25.680
for all your containers across clouds, internal, external,


00:18:25.680 --> 00:18:27.920
but it was just, it was a day late


00:18:27.920 --> 00:18:29.920
and a dollar short with funding


00:18:29.920 --> 00:18:31.640
when we kind of tried to do that.


00:18:31.640 --> 00:18:35.640
And yeah, so sold off the enterprise business


00:18:35.640 --> 00:18:38.680
and focused back on what Docker does really well,


00:18:38.680 --> 00:18:41.600
build development tools, development experiences,


00:18:41.600 --> 00:18:45.520
making container development first, you know,


00:18:45.520 --> 00:18:47.040
really easy, right?


00:18:47.040 --> 00:18:48.840
And that's kind of what we're focused on.


00:18:48.840 --> 00:18:50.160
We call it shift left, right?


00:18:50.160 --> 00:18:52.040
Focusing back on the developer.


00:18:52.040 --> 00:18:54.360
We're still very interested in ops and DevOps


00:18:54.360 --> 00:18:58.280
and DevSecOps, but more from a developer's perspective


00:18:58.280 --> 00:19:00.480
and not that day two long-term


00:19:00.480 --> 00:19:02.840
running your production environments and stuff.


00:19:02.840 --> 00:19:08.280
And so we got small again, got focused again.


00:19:08.280 --> 00:19:12.120
You know, we have something like 10 million developers


00:19:12.120 --> 00:19:14.440
or 10 million desktop installs, you know,


00:19:14.440 --> 00:19:19.080
billions of images being pulled out of hub


00:19:19.080 --> 00:19:19.920
and kind of looked at it and said,


00:19:19.920 --> 00:19:22.000
"Hey, there's a business here, right?"


00:19:22.000 --> 00:19:26.840
Just official images on hub is a huge, huge asset for us,


00:19:26.840 --> 00:19:27.760
right?


00:19:27.760 --> 00:19:30.400
You know, with Python and packages


00:19:30.400 --> 00:19:32.480
and all the languages and runtimes, right?


00:19:32.480 --> 00:19:38.440
To get really good high quality scanned packages is hard,


00:19:38.440 --> 00:19:40.360
right?


00:19:40.360 --> 00:19:41.200
And hub does that.


00:19:41.200 --> 00:19:43.520
So you know where you're getting your Mongo database from,


00:19:43.520 --> 00:19:46.640
who's produced it, Docker kind of puts their stamp on it.


00:19:46.640 --> 00:19:49.840
- Okay, so you guys have like officially verified,


00:19:49.840 --> 00:19:54.840
certified, either direct images or Docker files


00:19:54.840 --> 00:19:57.560
that build the images out there?


00:19:57.560 --> 00:19:58.400
- Yeah, yeah.


00:19:58.400 --> 00:20:00.720
So we have official images, which we kind of say,


00:20:00.720 --> 00:20:03.880
"Hey, this is following best practices.


00:20:03.880 --> 00:20:06.520
"This is, you know, been scanned


00:20:06.520 --> 00:20:07.800
"for security vulnerabilities."


00:20:07.800 --> 00:20:09.680
That doesn't mean there's not security vulnerabilities


00:20:09.680 --> 00:20:12.280
in there if anybody works in the security space, right?


00:20:12.280 --> 00:20:15.880
That's like impossible, but yeah.


00:20:15.880 --> 00:20:17.560
- Lowers your attack surface.


00:20:17.560 --> 00:20:19.240
- This is the, we're recording this the week


00:20:19.240 --> 00:20:20.720
that we're basically hearing, you know,


00:20:20.720 --> 00:20:24.120
60,000 direct companies have been compromised


00:20:24.120 --> 00:20:27.720
by the Microsoft Exchange vulnerability.


00:20:27.720 --> 00:20:29.480
And then they're probably providing products to others,


00:20:29.480 --> 00:20:30.320
right?


00:20:30.320 --> 00:20:31.760
Like it's tough.


00:20:31.760 --> 00:20:32.840
- Yeah, yeah, it is.


00:20:32.840 --> 00:20:34.360
Yeah, and-


00:20:34.360 --> 00:20:36.560
- But at the same time, there's also a lot of news


00:20:36.560 --> 00:20:40.000
around supply chain vulnerability.


00:20:40.000 --> 00:20:42.800
And the SolarWinds thing was a supply chain vulnerability.


00:20:42.800 --> 00:20:44.680
I don't believe the, I don't know,


00:20:44.680 --> 00:20:47.440
but I don't believe the Exchange one was.


00:20:47.440 --> 00:20:49.600
But, you know, Docker is certainly part


00:20:49.600 --> 00:20:52.480
of that supply chain, either strengthening


00:20:52.480 --> 00:20:54.120
or weakness there, right?


00:20:54.120 --> 00:20:57.840
Like we hear about how PyPI and NPM and RubyGems


00:20:57.840 --> 00:21:00.560
and all of those have people have been, you know,


00:21:00.560 --> 00:21:02.640
putting renewed interest in trying to get bad things


00:21:02.640 --> 00:21:03.480
in there.


00:21:03.480 --> 00:21:05.800
I always have the same thought about Docker.


00:21:05.800 --> 00:21:10.360
If I just grab an arbitrary Docker file off the internet,


00:21:10.360 --> 00:21:12.320
because, oh, look, this configures the thing that I need.


00:21:12.320 --> 00:21:13.880
And I Docker build, Docker run.


00:21:13.880 --> 00:21:16.720
Well, it might be configuring it with extra goodies


00:21:16.720 --> 00:21:18.320
for someone else right in there, right?


00:21:18.320 --> 00:21:21.440
And so that sounds like a really good thing


00:21:21.440 --> 00:21:25.200
to at least have, you know, verified to the degree


00:21:25.200 --> 00:21:26.280
that you guys can.


00:21:26.280 --> 00:21:27.320
- Yeah, yeah.


00:21:27.320 --> 00:21:29.080
And it's bringing, you know,


00:21:29.080 --> 00:21:31.400
you used to be with security, right?


00:21:31.400 --> 00:21:34.320
It's, I remember sitting at a large


00:21:34.320 --> 00:21:37.040
computer manufacturing company here in Central Austin,


00:21:37.040 --> 00:21:38.960
Central Texas, I won't mention their name,


00:21:38.960 --> 00:21:43.280
but, you know, we're getting, oh, nice, thank you.


00:21:43.280 --> 00:21:46.560
Yeah, so we're, you know, launching a big release


00:21:46.560 --> 00:21:48.520
and we're all sitting in the go, no go meeting.


00:21:48.520 --> 00:21:51.080
And it's, you know, a couple of days before release.


00:21:51.080 --> 00:21:53.120
And of course, then that's when the security team


00:21:53.120 --> 00:21:54.200
walks in, right?


00:21:54.200 --> 00:21:57.960
And oh, you know, like literally like dropping down,


00:21:57.960 --> 00:22:00.600
hey, you didn't fill out your TPS reports.


00:22:00.600 --> 00:22:01.520
- Yeah, exactly.


00:22:01.520 --> 00:22:02.360
- You know, and-


00:22:02.360 --> 00:22:03.560
- Well, that's such the wrong time to do it


00:22:03.560 --> 00:22:05.320
because, you know, a lot of those ideas


00:22:05.320 --> 00:22:08.360
have to be built in early.


00:22:08.360 --> 00:22:10.680
You gotta, yeah, it's really tricky to layer that on


00:22:10.680 --> 00:22:12.000
at the very, very end.


00:22:12.000 --> 00:22:12.840
- 100%.


00:22:12.840 --> 00:22:15.920
And now with containers, developers are a lot more,


00:22:15.920 --> 00:22:18.720
are closer to the operating system and worrying about it.


00:22:18.720 --> 00:22:22.160
You know, before you had your VM and you had, you know,


00:22:22.160 --> 00:22:24.080
you had ops folks taking care of it,


00:22:24.080 --> 00:22:24.920
mapping them, keeping-


00:22:24.920 --> 00:22:25.840
- Here's my code.


00:22:25.840 --> 00:22:27.600
It's gonna need Nginx and micro-WSGI.


00:22:27.600 --> 00:22:28.800
You figure that out, go.


00:22:28.800 --> 00:22:29.760
- Right, yeah.


00:22:29.760 --> 00:22:31.120
Now we're throwing it in containers


00:22:31.120 --> 00:22:32.400
and devs are doing a lot of that.


00:22:32.400 --> 00:22:34.720
So shifting that security even farther left


00:22:34.720 --> 00:22:36.160
to, hey, scan your images,


00:22:36.160 --> 00:22:39.240
make, you should know what's going in your images.


00:22:39.240 --> 00:22:40.840
You know, what base images you're using,


00:22:40.840 --> 00:22:42.680
those types of things are super important.


00:22:42.680 --> 00:22:43.560
Yeah.


00:22:43.560 --> 00:22:45.280
- Yeah, okay.


00:22:45.280 --> 00:22:47.080
- And controlling that whole life, like you said,


00:22:47.080 --> 00:22:48.520
that whole life cycle, right,


00:22:48.520 --> 00:22:50.520
of when you're building your images and how,


00:22:50.520 --> 00:22:52.400
through CI/CD, right?


00:22:52.400 --> 00:22:54.400
Doing the consistency, consistently,


00:22:54.400 --> 00:22:55.760
making sure you're doing scans, right?


00:22:55.760 --> 00:22:58.480
So you can protect that whole pipeline.


00:22:58.480 --> 00:23:00.200
100%.


00:23:00.200 --> 00:23:02.200
- Yeah, we definitely need to be thinking about that


00:23:02.200 --> 00:23:03.160
as an industry.


00:23:03.160 --> 00:23:05.600
It's serious.


00:23:05.600 --> 00:23:06.440
- Yeah.


00:23:06.440 --> 00:23:08.160
Yeah, and it's, yeah.


00:23:08.160 --> 00:23:11.960
There's so many smart people out there and they move fast.


00:23:11.960 --> 00:23:12.800
They move really fast.


00:23:12.800 --> 00:23:14.720
And keeping up with the hackers is hard.


00:23:14.720 --> 00:23:16.120
(laughing)


00:23:16.120 --> 00:23:16.960
- That's for sure.


00:23:16.960 --> 00:23:18.240
That's for sure.


00:23:18.240 --> 00:23:20.920
So one of the things I thought it might be fun to touch on


00:23:20.920 --> 00:23:24.160
is just some of the areas that containers are useful,


00:23:24.160 --> 00:23:26.200
maybe some of their benefits,


00:23:26.200 --> 00:23:30.080
things like that, right?


00:23:30.080 --> 00:23:33.160
I think there's a lot of different use cases that are not,


00:23:33.160 --> 00:23:36.000
well, it makes DevOps more consistent with development,


00:23:36.000 --> 00:23:38.160
even though that may be one of the benefits.


00:23:38.160 --> 00:23:39.000
- Yeah.


00:23:39.000 --> 00:23:43.680
Yeah, I think the biggest problem that Docker solves


00:23:43.680 --> 00:23:44.520
is that packaging.


00:23:44.520 --> 00:23:45.680
It runs on my machine, right?


00:23:45.680 --> 00:23:47.840
And that's been part of our marketing since the beginning.


00:23:47.840 --> 00:23:48.880
It works for me.


00:23:48.880 --> 00:23:49.720
- Right.


00:23:49.720 --> 00:23:51.200
- There's a fantastic thing that people should Google.


00:23:51.200 --> 00:23:52.040
Maybe if I can find it.


00:23:52.040 --> 00:23:53.200
I've put it on the show before,


00:23:53.200 --> 00:23:55.400
but there's a thing called,


00:23:55.400 --> 00:23:59.640
it works on my machine certification.


00:23:59.800 --> 00:24:01.280
(laughing)


00:24:01.280 --> 00:24:03.240
You can get the official certification.


00:24:03.240 --> 00:24:07.320
This is done by Jeff Atwood and some folks.


00:24:07.320 --> 00:24:08.160
- Oh, that's great.


00:24:08.160 --> 00:24:09.000
- And another guy over there.


00:24:09.000 --> 00:24:10.160
And so you get this big banner,


00:24:10.160 --> 00:24:11.280
it says it works on my machine.


00:24:11.280 --> 00:24:13.800
And the way you get it is you compile your code


00:24:13.800 --> 00:24:16.760
and getting the latest from any version control,


00:24:16.760 --> 00:24:18.720
getting the recent from that is totally optional


00:24:18.720 --> 00:24:20.200
and up to you.


00:24:20.200 --> 00:24:22.800
You launch the application that has been compiled.


00:24:22.800 --> 00:24:24.760
You cause at least one code path


00:24:24.760 --> 00:24:29.280
that needs to be checked to be executed.


00:24:29.280 --> 00:24:32.120
The preferred way to do this is ad hoc manual testing.


00:24:32.120 --> 00:24:34.440
You may omit this step


00:24:34.440 --> 00:24:36.240
if the code change was less than five lines


00:24:36.240 --> 00:24:38.320
or in the developer's professional opinion,


00:24:38.320 --> 00:24:40.280
it couldn't possibly result there.


00:24:40.280 --> 00:24:42.200
And then you check it in the source control, right?


00:24:42.200 --> 00:24:44.040
And so, yeah, I mean, that's a joke.


00:24:44.040 --> 00:24:46.200
And the reason I bring it up is,


00:24:46.200 --> 00:24:50.080
oh, it's just so common in the industry


00:24:50.080 --> 00:24:53.160
that you run into this problem, right?


00:24:53.160 --> 00:24:55.880
That, well, we tested over here


00:24:55.880 --> 00:24:57.720
and under this environment, it works fine,


00:24:57.720 --> 00:24:59.640
but in a different environment, it doesn't.


00:24:59.640 --> 00:25:02.600
And we try to backfill that with things like CI/CD


00:25:02.600 --> 00:25:07.200
and whatnot, but it's still, it's not a perfect fit.


00:25:07.200 --> 00:25:10.120
So with Docker, you can get much closer


00:25:10.120 --> 00:25:13.240
to running on exactly the same system.


00:25:13.240 --> 00:25:16.400
- Yeah, yeah, the idea is not only package your app,


00:25:16.400 --> 00:25:17.840
but package the operating system,


00:25:17.840 --> 00:25:21.880
all of its dependencies, your app, its configuration,


00:25:21.880 --> 00:25:24.200
all the application dependencies,


00:25:24.200 --> 00:25:26.480
all in one package, right, into an image.


00:25:26.480 --> 00:25:29.040
And then pass, share that around, right?


00:25:29.040 --> 00:25:31.160
Makes it so much easier.


00:25:31.160 --> 00:25:35.840
Yeah, at my, that large computer manufacturer, right?


00:25:35.840 --> 00:25:37.200
We had two huge data centers.


00:25:37.200 --> 00:25:39.840
And I talk about this in my getting started video,


00:25:39.840 --> 00:25:44.040
50 in each center, just for the browse layer and dub, dub, dub.


00:25:44.040 --> 00:25:47.120
And if you go through and patching those machines,


00:25:47.120 --> 00:25:48.680
those 50, and you miss one,


00:25:48.680 --> 00:25:50.240
and of course we had scripts and all that,


00:25:50.240 --> 00:25:53.160
but you still had to manually,


00:25:53.160 --> 00:25:56.880
list of what servers are in and out of the data center,


00:25:56.880 --> 00:25:58.800
who's in DNS, who's not, right?


00:25:58.800 --> 00:26:00.960
You missed one, and then you get this,


00:26:00.960 --> 00:26:03.360
these random errors where I hit three good servers,


00:26:03.360 --> 00:26:05.400
the fourth one breaks, and then you hit F5


00:26:05.400 --> 00:26:08.560
and you go back to server two and you're fine, right?


00:26:08.560 --> 00:26:11.480
- Yeah, that's really tricky when it's going to,


00:26:11.480 --> 00:26:14.640
could be round robin type of balancing.


00:26:14.640 --> 00:26:16.360
And you're like, well, sometimes it's wrong,


00:26:16.360 --> 00:26:17.600
but I don't know when.


00:26:17.600 --> 00:26:18.880
- Right, right.


00:26:18.880 --> 00:26:22.480
So we used to just go and restart all the servers,


00:26:22.480 --> 00:26:24.600
one by one, some of the troubleshooting,


00:26:24.600 --> 00:26:26.240
yeah, 'cause some of the troubleshooting you get into


00:26:26.240 --> 00:26:28.360
is like, we have no idea.


00:26:28.360 --> 00:26:30.360
Yeah, so I think Docker really,


00:26:30.360 --> 00:26:32.240
really attacks that really well.


00:26:32.240 --> 00:26:35.120
But then when you, looking at developers,


00:26:35.120 --> 00:26:36.960
what I'm really excited is,


00:26:36.960 --> 00:26:39.640
moving into microservices and kind of more modern


00:26:39.640 --> 00:26:42.560
cloud first kind of development, right?


00:26:42.560 --> 00:26:45.720
Again, getting everything running on your machine,


00:26:45.720 --> 00:26:49.680
10, 15, 100 microservices that you're not gonna use,


00:26:49.680 --> 00:26:51.000
you're not gonna touch, you don't work on,


00:26:51.000 --> 00:26:52.000
but they need to be there.


00:26:52.000 --> 00:26:55.280
So, you have this mesh of microservices


00:26:55.280 --> 00:26:57.160
or even just three or four of them, right?


00:26:57.160 --> 00:26:58.240
That work together.


00:26:58.240 --> 00:27:00.600
You have to have your sign on,


00:27:00.600 --> 00:27:02.760
your single sign on, blah, blah, blah, all these things.


00:27:02.760 --> 00:27:04.640
And getting databases and queuing


00:27:04.640 --> 00:27:07.240
and everything running locally is hard, right?


00:27:07.240 --> 00:27:11.480
If I got to install Mongo and SQL server locally,


00:27:11.480 --> 00:27:13.080
and then maybe projects are using


00:27:13.080 --> 00:27:15.360
two different versions, right?


00:27:15.360 --> 00:27:17.760
So now if everything's in containers,


00:27:17.760 --> 00:27:19.280
and then if you're using Compose,


00:27:19.280 --> 00:27:23.000
which I'll use orchestration loosely here,


00:27:23.000 --> 00:27:25.680
but it orchestrates your containers locally.


00:27:25.680 --> 00:27:28.880
- Right, because Docker's all well and simple and easy


00:27:28.880 --> 00:27:31.840
when the goal is I need to fire up this Docker container


00:27:31.840 --> 00:27:33.880
and I put the thing I wanna run at the end.


00:27:33.880 --> 00:27:38.240
I say, Docker run container something.


00:27:38.240 --> 00:27:42.360
But if I wanna run multiple things


00:27:42.360 --> 00:27:44.640
and they've got to discover each other on the network,


00:27:44.640 --> 00:27:46.240
they've got to have DNS names


00:27:46.240 --> 00:27:48.840
and this one has to start before that one.


00:27:48.840 --> 00:27:52.800
And all of a sudden, it's a whole another level


00:27:52.800 --> 00:27:55.600
of manual challenges to do that by hand.


00:27:55.600 --> 00:27:58.760
So Docker Compose is basically a way to write a file


00:27:58.760 --> 00:28:01.360
that takes a bunch of Docker containers


00:28:01.360 --> 00:28:02.760
and starts them the right way


00:28:02.760 --> 00:28:04.760
with the right ports and everything, yeah?


00:28:04.760 --> 00:28:06.400
- Exactly, exactly.


00:28:06.400 --> 00:28:09.480
Why it gives you kind of built in discoverability.


00:28:09.480 --> 00:28:12.800
So DNS, you can easily plug in volumes


00:28:12.800 --> 00:28:14.920
and share volumes across your containers.


00:28:14.920 --> 00:28:16.560
Yeah, super powerful.


00:28:16.560 --> 00:28:18.560
And it's also a way to, like you said,


00:28:18.560 --> 00:28:20.200
you can bring out all these Docker run commands


00:28:20.200 --> 00:28:23.080
and then your run command is huge.


00:28:23.080 --> 00:28:26.120
You could put that all into a Compose file


00:28:26.120 --> 00:28:27.560
and then-- - Conversion control.


00:28:27.560 --> 00:28:29.120
- Conversion control. - Things like that, yeah.


00:28:29.120 --> 00:28:32.360
- Yeah, and then once I, yeah, exactly, Michael.


00:28:32.360 --> 00:28:34.720
I could set up and then setting up a new dev,


00:28:34.720 --> 00:28:39.720
hey, pull latest from GitHub and Docker Compose up


00:28:39.720 --> 00:28:41.800
and brings your application up.


00:28:41.800 --> 00:28:44.960
- Yeah, so I've got a couple of ideas here


00:28:44.960 --> 00:28:46.960
that I thought might be fun to bounce off you.


00:28:46.960 --> 00:28:48.480
And the very first one on the list


00:28:48.480 --> 00:28:50.480
is onboarding new developers.


00:28:50.480 --> 00:28:52.080
- Yeah. - Right?


00:28:52.080 --> 00:28:52.920
I mean, it's one thing to say,


00:28:52.920 --> 00:28:54.000
well, we're gonna create a new project


00:28:54.000 --> 00:28:54.840
and we're gonna work on it,


00:28:54.840 --> 00:28:58.760
but almost no one starts jobs with brand new projects.


00:28:58.760 --> 00:28:59.880
They start jobs with,


00:28:59.880 --> 00:29:01.840
here's what we've been working on for four years.


00:29:01.840 --> 00:29:04.360
It's kind of clunky, but it works.


00:29:04.360 --> 00:29:05.600
- Right. - Here we go, right?


00:29:05.600 --> 00:29:07.520
- Right, 100%, 100%.


00:29:07.520 --> 00:29:09.240
And I wrote a blog post about this,


00:29:09.240 --> 00:29:11.480
but, and then my mentees, right,


00:29:11.480 --> 00:29:12.680
a lot of them come out of bootcamps


00:29:12.680 --> 00:29:15.880
and they're used to right-click new project, right?


00:29:15.880 --> 00:29:17.720
And I'm like, that's not where you're gonna go, right?


00:29:17.720 --> 00:29:19.160
You're gonna jump into a code base


00:29:19.160 --> 00:29:22.480
that is not the latest and greatest React,


00:29:22.480 --> 00:29:24.320
you know, functional components, right?


00:29:24.320 --> 00:29:26.880
You're gonna have old stuff and you gotta be productive.


00:29:26.880 --> 00:29:30.800
It's a huge, I mean, I'm sure the audience will know,


00:29:30.800 --> 00:29:32.280
it'd be great to hear, you know,


00:29:32.280 --> 00:29:33.640
last time you joined a dev team,


00:29:33.640 --> 00:29:36.480
how long it took you to just get your computer set up


00:29:36.480 --> 00:29:39.000
and get your environment set up and get familiar, right?


00:29:39.000 --> 00:29:42.000
It's a week, at least a week, if not two weeks.


00:29:42.000 --> 00:29:44.440
- Yeah, or, you know, your machine dies.


00:29:44.440 --> 00:29:45.440
- Yeah. - And you're like,


00:29:45.440 --> 00:29:46.760
well, now I gotta get it all set up again.


00:29:46.760 --> 00:29:48.400
I haven't done that for a year and a half,


00:29:48.400 --> 00:29:50.040
so I forgot how to do that, right?


00:29:50.040 --> 00:29:53.960
- Right, yeah, I'm trying to get everything into containers


00:29:53.960 --> 00:29:57.440
as much as possible, run everything in containers.


00:29:57.440 --> 00:29:59.880
When you get into the GUI apps, it gets a little fun,


00:29:59.880 --> 00:30:02.520
but yeah, if you're running everything in containers,


00:30:02.520 --> 00:30:04.960
it makes it super simple to be able to move those.


00:30:04.960 --> 00:30:08.680
Onboard new devs, yeah, 100%, 100%.


00:30:08.680 --> 00:30:09.920
- So another one of those


00:30:09.920 --> 00:30:12.720
that I think we kind of already touched on more or less


00:30:12.720 --> 00:30:13.920
is reliable development.


00:30:13.960 --> 00:30:17.120
Like everybody's working literally on the same system


00:30:17.120 --> 00:30:18.600
and you don't have the, you know,


00:30:18.600 --> 00:30:20.880
works on my machine certification thing.


00:30:20.880 --> 00:30:21.840
- Yeah, 100%.


00:30:21.840 --> 00:30:25.080
- Another one though is, you know, I'm here on my Mac,


00:30:25.080 --> 00:30:30.080
but maybe I want to do things that are as close as possible


00:30:30.080 --> 00:30:34.080
to where I deploy my various stuff things,


00:30:34.080 --> 00:30:37.080
which is Ubuntu, right?


00:30:37.080 --> 00:30:39.000
And Mac is kind of like Ubuntu.


00:30:39.000 --> 00:30:42.120
I mean, it's got sort of a Unix flavor to it,


00:30:42.120 --> 00:30:43.920
but it's not Ubuntu itself.


00:30:43.920 --> 00:30:46.080
It's not exactly that, right?


00:30:46.080 --> 00:30:51.080
And so having this ability to be closer to the environment


00:30:51.080 --> 00:30:53.120
that you're going to run at,


00:30:53.120 --> 00:30:55.360
or you're going to deploy to,


00:30:55.360 --> 00:30:56.920
even though you happen to be developing


00:30:56.920 --> 00:30:58.640
on something that's not that.


00:30:58.640 --> 00:30:59.920
- Yeah, yeah.


00:30:59.920 --> 00:31:05.920
Yeah, being able to get correct versions, right?


00:31:05.920 --> 00:31:10.920
Of everything across your stack is very hard, right?


00:31:11.200 --> 00:31:12.840
It seems simple, but it's not.


00:31:12.840 --> 00:31:14.040
- I mean, I could get Nginx,


00:31:14.040 --> 00:31:16.080
I could brew and install Nginx onto my machine,


00:31:16.080 --> 00:31:17.920
which I probably have done already,


00:31:17.920 --> 00:31:21.480
but maybe I've got like the latest greatest,


00:31:21.480 --> 00:31:23.880
whereas by default over on Ubuntu,


00:31:23.880 --> 00:31:26.280
if I just say, you know, apt install Nginx,


00:31:26.280 --> 00:31:28.360
I think it's held back a little ways for some reason,


00:31:28.360 --> 00:31:32.200
unless you really like configure it for the latest sources.


00:31:32.200 --> 00:31:34.080
And so, you know, maybe the configuration file


00:31:34.080 --> 00:31:36.080
has something new that I could do on my machine


00:31:36.080 --> 00:31:38.240
that's supported, but if I try to put it out there,


00:31:38.240 --> 00:31:40.560
it's just going to, you know, service failed to start.


00:31:40.560 --> 00:31:41.480
- Yeah. - Go find a log file


00:31:41.480 --> 00:31:42.800
somewhere and figure this out, right?


00:31:42.800 --> 00:31:44.560
That's, especially when you're new, it's like,


00:31:44.560 --> 00:31:46.000
I don't even know where the log files are.


00:31:46.000 --> 00:31:47.160
Why is this happening to me?


00:31:47.160 --> 00:31:48.320
It's so frustrating.


00:31:48.320 --> 00:31:49.280
- Right, right.


00:31:49.280 --> 00:31:51.680
Or yeah, if, yeah, you're pulling down a project


00:31:51.680 --> 00:31:54.880
and the remit getting started is compile, right?


00:31:54.880 --> 00:31:57.440
Make, run make, right?


00:31:57.440 --> 00:32:00.320
Yeah, and unless you're a C, a Linux C developer


00:32:00.320 --> 00:32:02.000
and you start getting errors, you know,


00:32:02.000 --> 00:32:03.480
off the stack overflow you go


00:32:03.480 --> 00:32:05.880
and start randomly trying things, right?


00:32:05.880 --> 00:32:09.120
And that, as a senior developer, you know,


00:32:09.120 --> 00:32:11.800
like I'm so scared I'm a foo bar my machine, right?


00:32:11.800 --> 00:32:14.400
'Cause I'm just changing settings and stuff and.


00:32:14.400 --> 00:32:15.240
- Yeah, yeah.


00:32:15.240 --> 00:32:17.960
- Yeah, it's, but if you were doing that


00:32:17.960 --> 00:32:20.280
all inside of your container and really a Docker file


00:32:20.280 --> 00:32:24.840
is the steps you would do to install an application, right?


00:32:24.840 --> 00:32:27.400
And so they're all there repeatable,


00:32:27.400 --> 00:32:30.040
have the correct versions of, you know,


00:32:30.040 --> 00:32:32.400
libraries all in the image, right?


00:32:32.400 --> 00:32:36.720
- One thing I think is a simple preconception to have


00:32:36.720 --> 00:32:39.320
is like Docker saves me from knowing Linux


00:32:39.320 --> 00:32:41.520
in terms of the commands.


00:32:41.520 --> 00:32:43.680
So I don't need to know Linux if I'm gonna run on Docker


00:32:43.680 --> 00:32:45.440
and maybe off to Kubernetes or whatever.


00:32:45.440 --> 00:32:49.320
And so I can just do Docker and then everything will be fine.


00:32:49.320 --> 00:32:52.680
But in practice, like those steps you just described,


00:32:52.680 --> 00:32:55.920
those are apt install this, you know,


00:32:55.920 --> 00:33:00.920
and the various configuration commands of Linux itself.


00:33:00.920 --> 00:33:04.280
So there, you do need to know a little bit.


00:33:04.280 --> 00:33:06.680
There's a very small subset that you need to do,


00:33:06.680 --> 00:33:09.080
but you know, you don't really have to be an admin of Linux.


00:33:09.080 --> 00:33:10.640
So I do think it takes down the bar,


00:33:10.640 --> 00:33:12.800
but I also think it's interesting that it's,


00:33:12.800 --> 00:33:14.200
you still kind of have to know a little bit


00:33:14.200 --> 00:33:15.760
about how to set up the system.


00:33:15.760 --> 00:33:16.840
- Yeah, yeah.


00:33:16.840 --> 00:33:18.800
And it's nice 'cause you can start high level like,


00:33:18.800 --> 00:33:21.200
hey, I just run my Mongo image and it works


00:33:21.200 --> 00:33:22.800
and I'm not exactly sure.


00:33:22.800 --> 00:33:25.200
- Right, here's the connection string, we're good.


00:33:25.200 --> 00:33:26.560
- Yeah, here's the connection string.


00:33:26.560 --> 00:33:28.680
And then if you start, okay, I wanna build my own


00:33:28.680 --> 00:33:31.640
and I wanna get slimmest images as possible, right?


00:33:31.640 --> 00:33:34.400
You're gonna start diving more in it.


00:33:34.400 --> 00:33:36.640
And really the skillset to build your images


00:33:36.640 --> 00:33:37.920
is you have to understand Docker,


00:33:37.920 --> 00:33:40.360
but then you also have to understand Linux commands, right?


00:33:40.360 --> 00:33:42.720
How to install things on Linux, configure them.


00:33:42.720 --> 00:33:43.640
- Yeah. - For sure.


00:33:43.640 --> 00:33:44.960
But you don't, to your point, right?


00:33:44.960 --> 00:33:46.480
You don't have to start there.


00:33:46.480 --> 00:33:51.480
Like, don't become a super, you know, admin, you know.


00:33:51.480 --> 00:33:54.440
- Get the Linux command line Bible or whatever book


00:33:54.440 --> 00:33:56.360
and like start tearing through it.


00:33:56.360 --> 00:33:57.520
I think that's a book.


00:33:57.520 --> 00:33:58.720
- Yeah, I think it is too.


00:33:58.720 --> 00:34:00.840
You can go very far without knowing that,


00:34:00.840 --> 00:34:02.480
just basic Linux command.


00:34:02.480 --> 00:34:04.040
- Yeah, yeah, I got a few examples of like,


00:34:04.040 --> 00:34:05.960
these are the three things you really gotta do.


00:34:05.960 --> 00:34:10.760
- Yeah, and the nice thing too about official images


00:34:10.760 --> 00:34:13.360
that you can, they're stored in GitHub too.


00:34:13.360 --> 00:34:15.440
So if you go in the hub and see it,


00:34:15.440 --> 00:34:16.960
you can jump into the GitHub repo


00:34:16.960 --> 00:34:18.760
and actually read the Docker file.


00:34:18.760 --> 00:34:21.480
So it's a great way to kind of learn, right?


00:34:21.480 --> 00:34:24.400
Of best practices and those types of things, yeah.


00:34:24.400 --> 00:34:25.280
- Yeah, absolutely.


00:34:25.280 --> 00:34:30.280
You talked about building like thin images and whatnot.


00:34:30.280 --> 00:34:34.240
One of the interesting things is taking these Docker files


00:34:34.240 --> 00:34:35.960
and layering them, right?


00:34:35.960 --> 00:34:37.160
Like, instead of just saying,


00:34:37.160 --> 00:34:39.360
I'm gonna, well, I'm gonna need Nginx


00:34:39.360 --> 00:34:41.160
and I'm gonna need Python, I'm gonna need all this.


00:34:41.160 --> 00:34:43.480
So let's just build one that has all that.


00:34:43.480 --> 00:34:46.880
And then any minor change you make to the Docker file


00:34:46.880 --> 00:34:49.040
means you completely rebuild all of that stuff.


00:34:49.040 --> 00:34:50.760
And maybe part of that's compiled from source


00:34:50.760 --> 00:34:52.000
that takes two minutes and it's like,


00:34:52.000 --> 00:34:53.640
why is this so slow, right?


00:34:53.640 --> 00:34:56.120
You could make that four or five Docker files


00:34:56.120 --> 00:34:58.280
that one depends on the other, that depends on the other


00:34:58.280 --> 00:35:00.920
in very like subtle, small ways.


00:35:00.920 --> 00:35:03.120
So like only the very last bit that changes


00:35:03.120 --> 00:35:05.000
maybe really requires much work, right?


00:35:05.000 --> 00:35:06.280
You wanna speak to that a little?


00:35:06.280 --> 00:35:07.120
- Yeah, yeah.


00:35:07.120 --> 00:35:09.680
So you can do two things in there.


00:35:09.680 --> 00:35:11.200
I think you wanna make sure,


00:35:11.200 --> 00:35:12.400
one of the best practices you wanna do


00:35:12.400 --> 00:35:16.800
is only run one process inside of a container.


00:35:16.800 --> 00:35:20.520
And I use container and image sometimes interchangeably.


00:35:20.520 --> 00:35:23.800
So, and then I get yelled at for the people that-


00:35:23.800 --> 00:35:24.920
- I'm probably making it wrong.


00:35:24.920 --> 00:35:27.240
So I meant image, I believe, yeah.


00:35:27.240 --> 00:35:28.320
- No, and you're totally fine, right?


00:35:28.320 --> 00:35:29.920
'Cause you can use them interchangeably,


00:35:29.920 --> 00:35:32.880
but so container is just a running image, right?


00:35:32.880 --> 00:35:34.200
And if you're a computer scientist


00:35:34.200 --> 00:35:37.960
or object oriented programmer,


00:35:37.960 --> 00:35:40.280
it's your class and your objects.


00:35:40.280 --> 00:35:42.120
So your class is your image


00:35:42.120 --> 00:35:43.760
and then your object is your container.


00:35:43.760 --> 00:35:46.200
So containers are instance of running.


00:35:46.200 --> 00:35:49.600
And yeah, but I use them interchangeably all the time


00:35:49.600 --> 00:35:50.880
and I get yelled at in a lot of my talks,


00:35:50.880 --> 00:35:53.240
but generally speaking,


00:35:53.240 --> 00:35:56.800
one process running inside of your container,


00:35:56.800 --> 00:35:59.880
you know, it's the old Linux idea, separation concerns,


00:35:59.880 --> 00:36:01.320
do one thing, do really well,


00:36:01.320 --> 00:36:03.600
microservices, those type of things.


00:36:03.600 --> 00:36:05.960
But then to be able to create your images


00:36:05.960 --> 00:36:07.360
as small as possible, right?


00:36:07.360 --> 00:36:09.880
You can do multi-stage builds is what we call it.


00:36:09.880 --> 00:36:13.520
So you can have a stage in your Docker file


00:36:13.520 --> 00:36:16.120
that builds your app, that has all your compilers,


00:36:16.120 --> 00:36:17.800
your libraries, everything you need


00:36:17.800 --> 00:36:20.920
to build your application,


00:36:20.920 --> 00:36:23.040
make that one part of your Docker file.


00:36:23.040 --> 00:36:24.960
And then below that, you can reference that.


00:36:24.960 --> 00:36:27.520
And so like a lot of Golang stuff,


00:36:27.520 --> 00:36:29.040
and we do this internally,


00:36:29.040 --> 00:36:32.200
is we'll use Docker to build all our apps,


00:36:32.200 --> 00:36:34.720
multi-architectural to architect.


00:36:34.720 --> 00:36:38.920
And then below that, just pull out the compiled binary


00:36:38.920 --> 00:36:40.480
and put that in my image.


00:36:40.480 --> 00:36:42.880
So now your image is extremely small.


00:36:42.880 --> 00:36:45.280
It only has your executable in it


00:36:45.280 --> 00:36:48.200
and everything else that you, the compiler tools, GCC,


00:36:48.200 --> 00:36:50.440
all that type of stuff is left out.


00:36:50.440 --> 00:36:51.720
- Oh, that's interesting, yeah.


00:36:51.720 --> 00:36:54.960
- Yeah, so those are kind of like throwaway containers.


00:36:54.960 --> 00:36:57.200
It'll do everything in container,


00:36:57.200 --> 00:36:59.760
get your nice dev build environment, build it,


00:36:59.760 --> 00:37:01.280
and then pull only what you need out.


00:37:01.280 --> 00:37:05.920
So even like in a node world where you're not,


00:37:05.920 --> 00:37:08.760
it's not a compiled language or Python's compiled,


00:37:08.760 --> 00:37:09.960
not a compiled language, right?


00:37:09.960 --> 00:37:12.480
You could do everything you need in an earlier stage


00:37:12.480 --> 00:37:13.960
and then pull that out,


00:37:13.960 --> 00:37:16.720
just what you need into the final stage


00:37:16.720 --> 00:37:19.080
to be able to serve those up in your runtime, that's it.


00:37:19.080 --> 00:37:22.000
And that's the best way to kind of get the smallest,


00:37:22.000 --> 00:37:25.400
lightest images you want.


00:37:25.400 --> 00:37:28.840
And the smaller and lightest, you can get them,


00:37:28.840 --> 00:37:30.600
then they're easier to pass around.


00:37:30.600 --> 00:37:33.200
They're easier to start, they're faster to start up.


00:37:33.200 --> 00:37:37.480
And the attack surface from a security perspective


00:37:37.480 --> 00:37:38.880
is very small.


00:37:38.880 --> 00:37:40.360
- Yeah, less is better there.


00:37:40.360 --> 00:37:41.920
- Less is better, yeah.


00:37:41.920 --> 00:37:43.360
- Absolutely.


00:37:43.360 --> 00:37:46.120
All right, some other areas that I think,


00:37:46.120 --> 00:37:48.840
two more that are certainly related,


00:37:48.840 --> 00:37:50.840
but not exactly the same.


00:37:50.840 --> 00:37:54.880
I feel like the data science side has a lot to gain


00:37:54.880 --> 00:37:56.120
from the whole container stuff,


00:37:56.120 --> 00:38:01.120
because so often the environments are multi-technology.


00:38:01.120 --> 00:38:04.240
You might have, oh, we're gonna use this library


00:38:04.240 --> 00:38:05.480
and it depends on Fortran.


00:38:05.480 --> 00:38:07.360
We'll use this library and it depends on Rust


00:38:07.360 --> 00:38:09.520
and then we're gonna control that from a Jupyter notebook.


00:38:09.520 --> 00:38:12.840
It's different environments make that harder,


00:38:12.840 --> 00:38:14.240
easier to set up.


00:38:14.240 --> 00:38:16.880
And so I feel like data science has a lot to benefit


00:38:16.880 --> 00:38:18.200
from here as well.


00:38:18.200 --> 00:38:19.640
- Yeah, I think so too.


00:38:19.640 --> 00:38:23.120
And that's not my world day to day for sure.


00:38:24.440 --> 00:38:28.920
So I gave a talk at the Toronto Machine Learning Group


00:38:28.920 --> 00:38:30.800
a while back, the talk should be online.


00:38:30.800 --> 00:38:32.720
So if you're interested, you have to check that out.


00:38:32.720 --> 00:38:35.640
And when I was, stepped back and really thought about


00:38:35.640 --> 00:38:36.480
what I wanted to talk about


00:38:36.480 --> 00:38:39.520
and how is Docker really helpful in these scenarios.


00:38:39.520 --> 00:38:41.280
And it's kind of all the things we've been talking about.


00:38:41.280 --> 00:38:45.640
It's how do I share my dataset


00:38:45.640 --> 00:38:47.320
with other data scientists, right?


00:38:47.320 --> 00:38:48.680
And you can put those in images


00:38:48.680 --> 00:38:51.600
and you can put those in volumes and share those, right?


00:38:51.600 --> 00:38:56.160
And then how do I get a consistent environment to,


00:38:56.160 --> 00:38:58.560
reproducibility is the biggest thing in science, right?


00:38:58.560 --> 00:38:59.920
- Right, that's the other half of that


00:38:59.920 --> 00:39:01.280
that I was hinting at, that's right.


00:39:01.280 --> 00:39:02.120
- Yeah, yeah.


00:39:02.120 --> 00:39:03.960
And so having that reproducibility


00:39:03.960 --> 00:39:06.160
that I can share with other scientists


00:39:06.160 --> 00:39:07.720
and you have everything packaged together


00:39:07.720 --> 00:39:09.240
that I was running, right?


00:39:09.240 --> 00:39:11.120
And you might swap out the data with your own data,


00:39:11.120 --> 00:39:13.800
but the process is all the same.


00:39:13.800 --> 00:39:15.720
So I think reproducibility is huge.


00:39:15.720 --> 00:39:19.000
And talking with those folks, the machine learning folks,


00:39:19.000 --> 00:39:20.280
that's what they were looking for, right?


00:39:20.280 --> 00:39:21.520
Is how do I pass this around?


00:39:21.520 --> 00:39:22.440
How do I share this?


00:39:22.440 --> 00:39:24.840
How do I get my environment up quickly


00:39:24.840 --> 00:39:27.640
without having to become a full-blown computer scientist,


00:39:27.640 --> 00:39:29.280
right, a software engineer.


00:39:29.280 --> 00:39:30.600
- Or an admin or something.


00:39:30.600 --> 00:39:31.440
- An admin, yeah.


00:39:31.440 --> 00:39:33.280
- But one of the challenges,


00:39:33.280 --> 00:39:35.360
in science in general, I believe lately,


00:39:35.360 --> 00:39:37.280
is there's been, I don't know,


00:39:37.280 --> 00:39:40.400
what should you call it, a crisis of reproducibility,


00:39:40.400 --> 00:39:42.400
but like a real focus on reproducibility.


00:39:42.400 --> 00:39:43.640
And because of that,


00:39:43.640 --> 00:39:46.040
I think some folks have realized certain studies


00:39:46.040 --> 00:39:48.000
are very hard to reproduce.


00:39:48.000 --> 00:39:49.920
And it used to be what they would publish is,


00:39:49.920 --> 00:39:52.160
here's a graph I generated with my software,


00:39:52.160 --> 00:39:53.560
and here's the analysis of the graph.


00:39:53.560 --> 00:39:55.920
And you're like, well, that could mean anything.


00:39:55.920 --> 00:39:57.280
I can make a graph out of anything.


00:39:57.280 --> 00:39:59.320
That doesn't mean very much, right?


00:39:59.320 --> 00:40:01.800
And so then the move to like Jupyter Notebooks


00:40:01.800 --> 00:40:02.640
and IPython and so on,


00:40:02.640 --> 00:40:04.720
and so well, here's the code,


00:40:04.720 --> 00:40:06.520
and here's the graph, and here's the explanation.


00:40:06.520 --> 00:40:08.080
And that's fantastic.


00:40:08.080 --> 00:40:11.520
But what version of the library


00:40:11.520 --> 00:40:14.200
that maybe had a small interior change


00:40:14.200 --> 00:40:17.960
that no one sees that might propagate


00:40:17.960 --> 00:40:19.040
some change down there.


00:40:19.040 --> 00:40:21.960
And you can solidify all that stuff


00:40:21.960 --> 00:40:25.880
into a Docker container,


00:40:25.880 --> 00:40:28.280
and then say, this is exactly what we ran.


00:40:28.280 --> 00:40:30.160
At least, maybe it was wrong, maybe it was right,


00:40:30.160 --> 00:40:31.400
but this is what we did.


00:40:31.400 --> 00:40:32.320
- Right, yeah.


00:40:32.320 --> 00:40:34.120
Yeah, just even a minor tick in a version


00:40:34.120 --> 00:40:37.680
of an algorithm that's processing the data, right?


00:40:37.680 --> 00:40:40.080
And I'm one tick behind you,


00:40:40.080 --> 00:40:41.840
and well, that's not the same, right?


00:40:41.840 --> 00:40:43.200
It's not the same.


00:40:43.200 --> 00:40:44.040
- It might be okay,


00:40:44.040 --> 00:40:46.440
but we need to know that that's how the difference is.


00:40:46.440 --> 00:40:47.720
You know, one thing that's interesting,


00:40:47.720 --> 00:40:50.440
have you seen this project, Gigantum?


00:40:50.440 --> 00:40:51.760
- No, I haven't, no.


00:40:51.760 --> 00:40:53.960
- Okay, so this one, I had these guys on the show


00:40:53.960 --> 00:40:55.640
back on episode 238,


00:40:55.640 --> 00:40:57.440
and it's really all about Docker.


00:40:57.440 --> 00:40:58.920
It's super interesting.


00:40:58.920 --> 00:40:59.800
- Oh, cool.


00:40:59.800 --> 00:41:01.400
- So it's like a collaborative way


00:41:01.400 --> 00:41:05.680
for building local environments in Docker,


00:41:05.680 --> 00:41:07.640
but then sharing those,


00:41:07.640 --> 00:41:08.480
and then you can work on them,


00:41:08.480 --> 00:41:10.360
and then you can publish them to the cloud,


00:41:10.360 --> 00:41:12.280
and there's all these cool activity streams.


00:41:12.280 --> 00:41:15.960
And it's just all about orchestrating data science


00:41:15.960 --> 00:41:19.680
with facilitating that by doing Docker.


00:41:19.680 --> 00:41:20.560
They have interesting things,


00:41:20.560 --> 00:41:23.320
like if you go in and open up like a terminal,


00:41:23.320 --> 00:41:24.280
and you type some commands,


00:41:24.280 --> 00:41:26.560
I believe they try to like capture those,


00:41:26.560 --> 00:41:28.320
and make those part of what has to be done


00:41:28.320 --> 00:41:29.360
to the Docker container,


00:41:29.360 --> 00:41:30.920
even though you didn't change the file.


00:41:30.920 --> 00:41:32.680
So they're trying to do a lot of stuff


00:41:32.680 --> 00:41:34.160
to make it like really the same.


00:41:34.160 --> 00:41:37.360
So I don't know, it's an interesting idea.


00:41:37.360 --> 00:41:38.180
- Oh, that's interesting.


00:41:38.180 --> 00:41:39.220
I'm gonna go check it out.


00:41:39.220 --> 00:41:41.000
Yeah, jumping back to our earlier conversation,


00:41:41.000 --> 00:41:42.160
building that Docker file, right,


00:41:42.160 --> 00:41:45.160
is, and especially when you're learning commands, right,


00:41:45.160 --> 00:41:48.840
that build debug cycle, test cycles,


00:41:48.840 --> 00:41:50.720
can be painful a little bit.


00:41:50.720 --> 00:41:52.760
Yeah, so we're trying to think about that at Docker, right?


00:41:52.760 --> 00:41:55.000
Like it's one thing to have an image


00:41:55.000 --> 00:41:56.320
and just run it and use it,


00:41:56.320 --> 00:41:58.620
and then it's another to build an image, right,


00:41:58.620 --> 00:42:01.160
a very complex image and kind of,


00:42:01.160 --> 00:42:02.760
so what you end up doing is kind of what you say,


00:42:02.760 --> 00:42:04.040
you create a base image,


00:42:04.040 --> 00:42:06.280
and then you're inside of that running commands,


00:42:06.280 --> 00:42:08.120
and then go, crap, okay, what did I run there?


00:42:08.120 --> 00:42:09.820
- Exactly. - And then you write that down.


00:42:09.820 --> 00:42:12.200
- Yeah, we kind of love to reverse sometimes.


00:42:12.200 --> 00:42:14.160
That thing I just did to make this work,


00:42:14.160 --> 00:42:16.520
make that part of the Docker file, you know?


00:42:16.520 --> 00:42:18.240
- Right. (laughs)


00:42:18.240 --> 00:42:20.000
- Extract what I did,


00:42:20.000 --> 00:42:23.360
those five things I typed on the terminal command prompt


00:42:23.360 --> 00:42:26.320
when I logged in with Docker run, you know,


00:42:26.320 --> 00:42:28.160
Z shell or bash.


00:42:28.160 --> 00:42:29.860
- Yeah. - I need that too.


00:42:29.860 --> 00:42:32.280
- Yeah, yeah, 100%, 100%.


00:42:32.280 --> 00:42:33.520
- Yeah, advice, do you got advice on that?


00:42:33.520 --> 00:42:34.360
I mean.


00:42:34.360 --> 00:42:38.080
- It's basically saving at each point.


00:42:38.080 --> 00:42:40.140
Right now it's very low fidelity, right?


00:42:40.140 --> 00:42:42.000
You're running the command and then,


00:42:42.000 --> 00:42:43.280
and trying to remember, right?


00:42:43.280 --> 00:42:44.680
And it's painful.


00:42:44.680 --> 00:42:46.560
- Yeah. - Yeah, it's very painful.


00:42:46.560 --> 00:42:48.960
- Some up arrow action, like, okay, I did that,


00:42:48.960 --> 00:42:50.400
then down arrow, down arrow, down, okay,


00:42:50.400 --> 00:42:52.080
those are the things, something like that.


00:42:52.080 --> 00:42:53.500
- Yeah, yeah.


00:42:53.500 --> 00:42:54.340
We've been playing around


00:42:54.340 --> 00:42:57.200
with some interactive lightweight kind of,


00:42:57.200 --> 00:42:59.360
I say editors, but tools, right?


00:42:59.360 --> 00:43:01.760
To build your images.


00:43:01.760 --> 00:43:03.720
So the concept of building an image from scratch,


00:43:03.720 --> 00:43:04.560
it's where you kind of,


00:43:04.560 --> 00:43:06.400
you can do a top or a Docker file,


00:43:06.400 --> 00:43:10.160
say from, you know, Ubuntu or from Alpine.


00:43:10.160 --> 00:43:11.280
Well, you can do from scratch,


00:43:11.280 --> 00:43:12.840
and that's literally nothing, right?


00:43:12.840 --> 00:43:16.200
And you're moving everything in yourself.


00:43:16.200 --> 00:43:18.160
And that's tough, but it's,


00:43:18.160 --> 00:43:21.840
if you, the most secure and leanest image,


00:43:21.840 --> 00:43:23.280
that's the way to do it.


00:43:23.280 --> 00:43:25.000
And yeah, so we've been thinking about tools around that.


00:43:25.000 --> 00:43:26.040
And it's exactly that,


00:43:26.040 --> 00:43:28.560
capturing what you're doing and what works, right?


00:43:28.560 --> 00:43:32.120
So you can play a little bit and take,


00:43:32.120 --> 00:43:34.240
you know, try and figure things out.


00:43:34.240 --> 00:43:35.840
And then once you figure it out, you're like, oh crap,


00:43:35.840 --> 00:43:38.680
what was that sequence that just worked, right?


00:43:38.680 --> 00:43:39.800
'Cause I did five things,


00:43:39.800 --> 00:43:42.400
but those three things were what actually worked.


00:43:42.400 --> 00:43:43.920
And that could be tough for sure.


00:43:43.920 --> 00:43:45.160
- Yeah, yeah, it is.


00:43:45.160 --> 00:43:47.200
I find that what I do is I'll fire,


00:43:47.200 --> 00:43:49.040
I'll try to create the Docker file.


00:43:49.040 --> 00:43:52.680
It'll invariably fail in some way that I didn't predict.


00:43:52.680 --> 00:43:55.080
So then I'll get it as far as I can,


00:43:55.080 --> 00:43:58.520
run it in an interactive mode and try to, you know,


00:43:58.520 --> 00:44:00.640
get it to go to where I want it and then go, okay,


00:44:00.640 --> 00:44:02.120
well, these were the steps.


00:44:02.120 --> 00:44:03.960
Maybe it errored out during the build,


00:44:03.960 --> 00:44:05.040
but you couldn't figure out why.


00:44:05.040 --> 00:44:06.360
So you want to go explore something


00:44:06.360 --> 00:44:09.440
to see what the log generated for that failure.


00:44:09.440 --> 00:44:10.280
- Right.


00:44:10.280 --> 00:44:11.400
- There's a little bit of back and forth.


00:44:11.400 --> 00:44:14.320
- Yes, a hundred percent, a hundred percent, yeah.


00:44:14.320 --> 00:44:15.160
Yeah.


00:44:15.160 --> 00:44:18.720
- When you think about things like attaching,


00:44:18.720 --> 00:44:21.760
basically using Docker within some of these tools


00:44:21.760 --> 00:44:23.960
like PyCharm and VS Code,


00:44:23.960 --> 00:44:25.600
both have these ways to say,


00:44:25.600 --> 00:44:29.680
just run this, but in Docker when I press debug.


00:44:29.680 --> 00:44:34.680
- Yeah, I'm, you know, my old school developer,


00:44:34.680 --> 00:44:37.640
you know, no fancy editors, right?


00:44:37.640 --> 00:44:41.360
Text editor, you know, it dies a little bit inside,


00:44:41.360 --> 00:44:42.840
but I've had to get over that, right?


00:44:42.840 --> 00:44:44.760
I'm like, no, right?


00:44:44.760 --> 00:44:47.600
Like I tell my mentees too, I'm like, okay,


00:44:47.600 --> 00:44:49.360
when we start, like you're in a text editor,


00:44:49.360 --> 00:44:51.200
remove all, remove all the tools


00:44:51.200 --> 00:44:53.640
'cause you've got to feel the pain to understand.


00:44:53.640 --> 00:44:57.120
But with that said, right?


00:44:57.120 --> 00:44:59.840
Yeah, I mean, the tools are fantastic, right?


00:44:59.840 --> 00:45:01.520
The context switching, right?


00:45:01.520 --> 00:45:04.440
If you can stay right in your ID, your main tool


00:45:04.440 --> 00:45:06.880
and do everything within there and do it really well,


00:45:06.880 --> 00:45:08.720
it's super powerful.


00:45:08.720 --> 00:45:12.120
The VS Code plugin is super powerful, right?


00:45:12.120 --> 00:45:14.320
Of managing your containers, running containers,


00:45:14.320 --> 00:45:18.200
dev containers, connecting into ACI and Azure


00:45:18.200 --> 00:45:20.960
and launching your containers right there.


00:45:20.960 --> 00:45:23.520
It's extremely powerful, yeah.


00:45:23.520 --> 00:45:25.160
- Yeah, I feel like it's gonna get to the point


00:45:25.160 --> 00:45:26.840
where you might be running stuff in Docker,


00:45:26.840 --> 00:45:28.040
but you don't even know it.


00:45:28.040 --> 00:45:28.880
- Yeah.


00:45:28.880 --> 00:45:29.960
- You might conceptually know,


00:45:29.960 --> 00:45:31.960
but there's nothing about what you do or what you see


00:45:31.960 --> 00:45:33.800
that makes you feel like, oh, it's running in Docker.


00:45:33.800 --> 00:45:36.000
You just, I pressed run.


00:45:36.000 --> 00:45:36.960
It did these things.


00:45:36.960 --> 00:45:39.280
I saw it in my browser or I saw the output.


00:45:39.280 --> 00:45:42.120
Yeah, I don't know where that happened, right?


00:45:42.120 --> 00:45:43.360
But it happened in Docker.


00:45:43.360 --> 00:45:44.920
- Yep, exactly.


00:45:44.920 --> 00:45:46.240
Yeah, it just works, right?


00:45:46.240 --> 00:45:49.760
That's where we're trying to go is like with our tools


00:45:49.760 --> 00:45:53.880
is like you, the more you know, they get out of the way,


00:45:53.880 --> 00:45:54.720
right, they're not in your way


00:45:54.720 --> 00:45:56.680
is maybe the best way to say it.


00:45:56.680 --> 00:45:57.520
- Yeah.


00:45:57.520 --> 00:46:01.280
- Right, really good tools, you kind of go,


00:46:01.280 --> 00:46:02.880
does that really doing a lot for me?


00:46:02.880 --> 00:46:04.400
And then when you figure it, you're like, oh yeah,


00:46:04.400 --> 00:46:06.760
it's doing a ton, I just didn't don't know it.


00:46:06.760 --> 00:46:08.480
It does it so well, right?


00:46:08.480 --> 00:46:10.640
- Right, exactly.


00:46:10.640 --> 00:46:14.160
I think we have time for two more topics


00:46:14.160 --> 00:46:15.320
that we can touch on.


00:46:15.320 --> 00:46:18.480
So we talked about the multi-container stuff


00:46:18.480 --> 00:46:20.640
and we talked about, you know, run this on my cloud.


00:46:20.640 --> 00:46:23.680
And I feel like a lot of times what that means these days


00:46:23.680 --> 00:46:26.160
is Kubernetes, right?


00:46:26.160 --> 00:46:30.080
Everybody seems to have a hosted Kubernetes offering.


00:46:30.080 --> 00:46:32.080
Sometimes that means just give us your container,


00:46:32.080 --> 00:46:35.640
others that means, well, we'll really just run the cluster


00:46:35.640 --> 00:46:36.620
sort of configure it for you,


00:46:36.620 --> 00:46:39.420
but you kind of got to still own those VMs that run it.


00:46:39.420 --> 00:46:41.400
- Yeah.


00:46:41.400 --> 00:46:43.360
- There's some sort of spectrum there.


00:46:43.360 --> 00:46:46.000
You know, what are your thoughts on people working


00:46:46.000 --> 00:46:49.680
with Kubernetes versus just directly with Docker itself


00:46:49.680 --> 00:46:53.480
or maybe even a pass, like almost a serverless type thing?


00:46:53.480 --> 00:46:58.480
- Yeah, yeah, I think, yeah, I think there's a,


00:46:58.480 --> 00:47:00.440
if you spend a lot of time on the internet, right,


00:47:00.440 --> 00:47:02.760
we're all on the bleeding edge, right?


00:47:02.760 --> 00:47:04.200
- Yeah, we absolutely are, yeah.


00:47:04.200 --> 00:47:07.120
- Yeah, you read a lot of blog posts about, you know,


00:47:07.120 --> 00:47:10.080
Kubernetes and service meshes and serverless


00:47:10.080 --> 00:47:12.640
and those are all fantastic and wonderful, right?


00:47:12.640 --> 00:47:15.520
But a lot of us out there are not,


00:47:15.520 --> 00:47:17.200
we're not the Googles or the Netflix


00:47:17.200 --> 00:47:19.200
or, you know, Disney plus, right?


00:47:19.200 --> 00:47:20.040
- Yeah.


00:47:20.040 --> 00:47:22.040
- You can see I watch a lot of movies, but anyways.


00:47:22.040 --> 00:47:24.040
(both laughing)


00:47:24.040 --> 00:47:25.680
You know, so you have small teams,


00:47:25.680 --> 00:47:28.200
small three, five person teams


00:47:28.200 --> 00:47:29.840
that really are writing the majority


00:47:29.840 --> 00:47:31.120
of the software out there, right?


00:47:31.120 --> 00:47:34.440
And there's nothing wrong with standing a VM up,


00:47:34.440 --> 00:47:35.720
putting a Docker engine in it


00:47:35.720 --> 00:47:38.640
and running your containers like that, right?


00:47:38.640 --> 00:47:39.880
That's how we started.


00:47:39.880 --> 00:47:44.000
It's extremely powerful to, you know,


00:47:44.000 --> 00:47:45.040
before I came to Docker,


00:47:45.040 --> 00:47:48.040
had a consulting business, a custom dev,


00:47:48.040 --> 00:47:50.360
and that's how we ran all over our containers, right?


00:47:50.360 --> 00:47:52.720
We had a Docker engine installed on a VM,


00:47:52.720 --> 00:47:54.000
sometimes two VMs, right,


00:47:54.000 --> 00:47:56.760
that we managed as the orchestrator.


00:47:56.760 --> 00:47:59.920
And it ran fantastic and we could scale,


00:47:59.920 --> 00:48:00.760
we had load, right?


00:48:00.760 --> 00:48:04.040
It was, and to update it and to maintain it,


00:48:04.040 --> 00:48:06.280
all the things we've kind of been talking about today


00:48:06.280 --> 00:48:09.040
were super simple because the only prerequisite


00:48:09.040 --> 00:48:11.240
for the VM was to have the engine installed.


00:48:11.240 --> 00:48:12.080
- Yeah.


00:48:12.080 --> 00:48:13.960
And to be honest, that's how my stuff is running now.


00:48:13.960 --> 00:48:16.400
I have a CI, CD stuff set up.


00:48:16.400 --> 00:48:18.760
So I do get pushed to a certain branch.


00:48:18.760 --> 00:48:21.400
My VMs automatically work with the load balancer.


00:48:21.400 --> 00:48:23.240
They automatically update themselves.


00:48:23.240 --> 00:48:26.480
They restart and re, like it's, it's hands off, right?


00:48:26.480 --> 00:48:27.320
- Yeah.


00:48:27.320 --> 00:48:30.440
- And you know, it's a small, small set of us,


00:48:30.440 --> 00:48:31.840
like it, it works.


00:48:31.840 --> 00:48:32.680
- Yeah.


00:48:32.680 --> 00:48:34.040
A hundred percent, a hundred percent.


00:48:34.040 --> 00:48:36.640
And, and serverless, and then,


00:48:36.640 --> 00:48:38.480
and then also kind of the container


00:48:38.480 --> 00:48:41.880
passes that are out there.


00:48:41.880 --> 00:48:43.280
So ECS,


00:48:43.280 --> 00:48:45.920
ACI.


00:48:45.920 --> 00:48:48.160
So ECS is a lack,


00:48:48.160 --> 00:48:50.400
elastic container service from Amazon.


00:48:50.400 --> 00:48:53.600
ACI is Azure Container Instances.


00:48:53.600 --> 00:48:56.440
And I don't know if Google has one, they probably do too.


00:48:56.440 --> 00:48:57.280
Love you Google.


00:48:57.280 --> 00:49:00.160
But yeah, anyways, you know,


00:49:00.160 --> 00:49:02.800
it's being able to take your container and just run it,


00:49:02.800 --> 00:49:03.920
run it in the cloud


00:49:03.920 --> 00:49:06.800
and worry about the container running


00:49:06.800 --> 00:49:08.200
and where it needs, what it needs to do


00:49:08.200 --> 00:49:09.200
and how it needs to run, right?


00:49:09.200 --> 00:49:12.120
And ECS will take care of the rest underneath the,


00:49:12.120 --> 00:49:13.600
underneath the covers.


00:49:13.600 --> 00:49:15.760
And that, that's a fantastic option.


00:49:15.760 --> 00:49:17.520
I mean, it's a, it's kind of, you know,


00:49:17.520 --> 00:49:19.440
it's like those progressions, right?


00:49:19.440 --> 00:49:22.320
If you're doing a single VM with the Docker engine


00:49:22.320 --> 00:49:23.840
or, or two of them, a couple of them,


00:49:23.840 --> 00:49:26.160
and that becomes painful when you need to scale,


00:49:26.160 --> 00:49:28.040
really look at ECS or ACI, right?


00:49:28.040 --> 00:49:30.640
Because that helps you scale a lot easier


00:49:30.640 --> 00:49:32.880
and you don't need to be a Kubernetes expert.


00:49:32.880 --> 00:49:35.840
And then if you do, then go to Kubernetes.


00:49:35.840 --> 00:49:37.400
But I always tell people,


00:49:37.400 --> 00:49:39.560
and Swarm is a great option too.


00:49:39.560 --> 00:49:41.920
Swarm is an incredible orchestrator.


00:49:41.920 --> 00:49:42.760
It works.


00:49:42.760 --> 00:49:45.080
- How does that compare to Kubernetes?


00:49:45.080 --> 00:49:46.240
You know, I hear Docker Compose,


00:49:46.240 --> 00:49:47.760
I hear Swarm, I hear Kubernetes.


00:49:47.760 --> 00:49:50.840
I'm not sure when I should be thinking about which.


00:49:50.840 --> 00:49:51.760
- Yeah.


00:49:51.760 --> 00:49:55.720
Well, so Compose is fantastic for a local development.


00:49:55.720 --> 00:49:57.480
I would use it primarily there.


00:49:57.480 --> 00:50:00.800
You can use Compose to deploy in the production, but-


00:50:00.800 --> 00:50:04.320
- Would I use Compose if I had only a single container


00:50:04.320 --> 00:50:05.840
I wanted to run?


00:50:05.840 --> 00:50:09.880
But maybe it had a complicated layering potentially.


00:50:09.880 --> 00:50:10.720
- Yeah.


00:50:10.720 --> 00:50:12.920
Yeah. So Compose works great there too.


00:50:12.920 --> 00:50:15.120
Even just, even if you're running one container


00:50:15.120 --> 00:50:17.880
and all the command line switches and flags


00:50:17.880 --> 00:50:21.040
and environment variables and secrets,


00:50:21.040 --> 00:50:21.920
all those types of things,


00:50:21.920 --> 00:50:23.960
like put them all in your Compose file.


00:50:23.960 --> 00:50:26.600
So one, you don't have to write a, remember all of them.


00:50:26.600 --> 00:50:29.280
And two, you don't write bash scripts


00:50:29.280 --> 00:50:31.960
to just run the Docker command, right?


00:50:31.960 --> 00:50:34.520
Yeah. You plug them all in just like that.


00:50:34.520 --> 00:50:35.600
You can see your pass imports,


00:50:35.600 --> 00:50:38.120
they have volumes, all those types of things, right?


00:50:38.120 --> 00:50:39.320
- Yeah.


00:50:39.320 --> 00:50:40.400
- It's super simple.


00:50:40.400 --> 00:50:42.280
Yes. So I would absolutely do that.


00:50:42.280 --> 00:50:46.640
And then, and then, oh,


00:50:46.640 --> 00:50:48.720
I forget what we were talking about.


00:50:48.720 --> 00:50:50.720
- I was sort of talking about your thoughts on Kubernetes.


00:50:50.720 --> 00:50:53.920
And then I asked you as I compare Swarm, Kubernetes,


00:50:53.920 --> 00:50:54.760
and Compose.


00:50:54.760 --> 00:50:56.040
- Yeah. Kubernetes is dead to me.


00:50:56.040 --> 00:50:56.880
That's why I forgot.


00:50:56.880 --> 00:50:57.720
No, I'm just kidding.


00:50:57.720 --> 00:50:59.320
I love Kubernetes.


00:50:59.320 --> 00:51:00.400
Again, I'm going to get beat up.


00:51:00.400 --> 00:51:03.000
No, I, but you know, when I tell people start,


00:51:03.000 --> 00:51:04.080
think about Swarm, right?


00:51:04.080 --> 00:51:05.760
If you're doing a one instance,


00:51:05.760 --> 00:51:08.360
don't jump to, like have really good reasons


00:51:08.360 --> 00:51:09.320
to jump into Kubernetes.


00:51:09.320 --> 00:51:10.800
It's super powerful.


00:51:10.800 --> 00:51:13.040
It's a, it's a great tool.


00:51:13.040 --> 00:51:15.640
It really is, but it comes with a ton of complexity, right?


00:51:15.640 --> 00:51:16.480
- Yeah.


00:51:16.480 --> 00:51:17.320
- So don't need to-


00:51:17.320 --> 00:51:18.140
- There's, like I said before,


00:51:18.140 --> 00:51:18.980
there's a difference between


00:51:18.980 --> 00:51:20.120
I want to run this on Kubernetes


00:51:20.120 --> 00:51:22.080
and I want to have my own Kubernetes cluster


00:51:22.080 --> 00:51:23.520
for which I'm the admin.


00:51:23.520 --> 00:51:24.840
- Right. 100%.


00:51:24.840 --> 00:51:25.800
- Yeah. - Yeah.


00:51:25.800 --> 00:51:26.960
And don't get stuck in,


00:51:26.960 --> 00:51:29.800
also another advice and, you know,


00:51:29.800 --> 00:51:31.560
like some engineers are like,


00:51:31.560 --> 00:51:35.160
don't get focused on developing for your resume, right?


00:51:35.160 --> 00:51:36.120
You know, a lot of times,


00:51:36.120 --> 00:51:36.960
oh, we got to get in Kubernetes


00:51:36.960 --> 00:51:38.680
and I want to have Kubernetes and all this, right?


00:51:38.680 --> 00:51:40.400
And, and yeah, you know,


00:51:40.400 --> 00:51:42.800
you want to learn new technology and stay cutting edge,


00:51:42.800 --> 00:51:44.720
but it, that's a tough one.


00:51:44.720 --> 00:51:46.400
It's a tough one to go to.


00:51:46.400 --> 00:51:50.080
Yeah. You can get very far with single engines,


00:51:50.080 --> 00:51:53.120
with Compose and then with Swarm.


00:51:53.120 --> 00:51:56.160
And Swarm is a great orchestrator.


00:51:56.160 --> 00:51:57.620
It's built into the engine.


00:51:57.620 --> 00:52:01.320
It is, it moved to the enterprise with Mirantis


00:52:01.320 --> 00:52:03.800
when they bought the Docker Enterprise business.


00:52:03.800 --> 00:52:05.600
So they maintain it.


00:52:05.600 --> 00:52:07.280
We got, we got out of Docker proper.


00:52:07.280 --> 00:52:09.960
It's gotten out of the orchestration business,


00:52:09.960 --> 00:52:11.440
but it's a fantastic orchestrator.


00:52:11.440 --> 00:52:13.040
It just works.


00:52:13.040 --> 00:52:14.240
A prior life at Docker,


00:52:14.240 --> 00:52:16.720
I ran all the customer success technology.


00:52:16.720 --> 00:52:18.680
So our knowledge base, our search engine,


00:52:18.680 --> 00:52:22.160
our training tools and everything.


00:52:22.160 --> 00:52:23.800
And we ran on Compose.


00:52:23.800 --> 00:52:26.400
And Compose and all on Swarm,


00:52:26.400 --> 00:52:28.120
five, nine uptime, never touched it.


00:52:28.120 --> 00:52:29.720
Didn't have to give up the team, right?


00:52:29.720 --> 00:52:31.020
It just, it really works.


00:52:31.020 --> 00:52:34.200
And then when you, when you need things like sidecars


00:52:34.200 --> 00:52:36.200
and more complex networking


00:52:36.200 --> 00:52:40.440
and the more complex data storage,


00:52:40.440 --> 00:52:42.640
volumes, those types of things,


00:52:42.640 --> 00:52:44.500
that's where Kubernetes really shines.


00:52:44.500 --> 00:52:48.080
But other than that, you know,


00:52:48.080 --> 00:52:50.280
Swarm is fantastic and single engines


00:52:50.280 --> 00:52:52.080
will get you very far.


00:52:52.080 --> 00:52:52.920
- Nice.


00:52:52.920 --> 00:52:56.080
- And then like you said, I would go to EKS


00:52:56.080 --> 00:52:57.880
or something like that first, right?


00:52:57.880 --> 00:53:02.160
Have a Kubernetes cluster and manage at the level


00:53:02.160 --> 00:53:05.040
that you need to manage at and nothing lower, right?


00:53:05.040 --> 00:53:06.080
- Right, makes sense.


00:53:06.080 --> 00:53:11.520
Chris McDonough, creator of Pyramid framework


00:53:11.520 --> 00:53:12.600
out there is in the live stream.


00:53:12.600 --> 00:53:14.640
Says Compose kind of fills the same space


00:53:14.640 --> 00:53:16.000
as Buildout did in Python land


00:53:16.000 --> 00:53:18.480
for managing one or multiple containers locally.


00:53:18.480 --> 00:53:19.300
Yeah, awesome.


00:53:19.300 --> 00:53:21.080
Hello, Chris, thanks for being here.


00:53:21.080 --> 00:53:21.920
- Hey, Chris.


00:53:21.920 --> 00:53:22.920
- Yeah, yeah, very cool.


00:53:22.920 --> 00:53:25.600
So the last thing that I want to touch on,


00:53:25.600 --> 00:53:28.360
the last topic I think we have time to talk about


00:53:28.360 --> 00:53:31.240
is the future, you know, where things going.


00:53:31.240 --> 00:53:32.080
- Yeah.


00:53:32.080 --> 00:53:32.900
- Fokker, right?


00:53:32.900 --> 00:53:36.120
Like we've seen this move to focusing more on,


00:53:36.120 --> 00:53:37.120
you said shift the left,


00:53:37.120 --> 00:53:39.080
more on the developer tools and whatnot.


00:53:39.080 --> 00:53:40.840
- Yeah.


00:53:40.840 --> 00:53:41.760
- Where are we going?


00:53:41.760 --> 00:53:43.680
- Yeah, so I'm glad you brought it to Rome, Matt.


00:53:43.680 --> 00:53:45.400
Thank you, my bosses will be happy.


00:53:45.400 --> 00:53:49.060
My masters.


00:53:49.060 --> 00:53:51.880
Anyways, love you, Matt.


00:53:51.880 --> 00:53:56.880
But so get help out there for doc/doc/roadmap.


00:53:56.880 --> 00:53:58.880
That is our public roadmap.


00:53:58.880 --> 00:54:00.280
That is our roadmap, right?


00:54:00.280 --> 00:54:02.200
We work on that roadmap.


00:54:02.200 --> 00:54:04.240
We're actually coming out with a blog post with a feature


00:54:04.240 --> 00:54:07.140
and that was spawned, came out of the roadmap, right?


00:54:07.140 --> 00:54:08.880
It was an idea from the community.


00:54:08.880 --> 00:54:12.380
It's integrating in with different terminals


00:54:12.380 --> 00:54:14.360
with Docker desktop.


00:54:14.360 --> 00:54:16.680
And that came out of the community and people said,


00:54:16.680 --> 00:54:19.960
hey, I run iTerm on my Mac


00:54:19.960 --> 00:54:24.200
and set is 99% of the other developers on Mac.


00:54:24.200 --> 00:54:27.160
We want that integrated, our integrated desktop.


00:54:27.160 --> 00:54:29.600
And so the upticks were really great.


00:54:29.600 --> 00:54:30.840
Anyways, we implemented.


00:54:30.840 --> 00:54:33.560
So you'll see Ben,


00:54:33.560 --> 00:54:35.080
if you're looking at the screen on the right,


00:54:35.080 --> 00:54:39.680
Ben is the best PM I've ever worked with.


00:54:39.680 --> 00:54:42.520
Seriously, he's fantastic, but he is in there constantly.


00:54:42.520 --> 00:54:45.760
Yeah, so we look at this roadmap, we follow this roadmap,


00:54:45.760 --> 00:54:46.960
we build off of this roadmap.


00:54:46.960 --> 00:54:50.480
We don't have a secret shadow internal roadmap, right?


00:54:50.480 --> 00:54:51.320
And we say, hey, yeah.


00:54:51.320 --> 00:54:53.000
- We've got different channels for like Windows


00:54:53.000 --> 00:54:55.760
and Microsoft and the engine and all that stuff, right?


00:54:55.760 --> 00:54:56.600
- Yep, yep.


00:54:56.600 --> 00:54:57.440
- Yeah.


00:54:57.440 --> 00:54:58.720
- And so go through, read through there,


00:54:58.720 --> 00:55:02.120
put in an issue if you have one, if you don't find it.


00:55:02.120 --> 00:55:03.680
It's where you can interact, add comments,


00:55:03.680 --> 00:55:05.560
those types of things.


00:55:05.560 --> 00:55:07.960
Yeah, we do use that constantly.


00:55:07.960 --> 00:55:11.320
But I don't, so we have DockerCon coming up,


00:55:11.320 --> 00:55:13.440
so I don't wanna give any secrets away, but yeah,


00:55:13.440 --> 00:55:16.680
we have, I would say, look for us in this year,


00:55:16.680 --> 00:55:19.960
the past year, we really kind of solidified the business,


00:55:19.960 --> 00:55:24.960
right, really did a lot of things that Docker didn't do


00:55:24.960 --> 00:55:27.720
in its early days, right, as a business wise.


00:55:27.720 --> 00:55:30.040
You know, we were shifting around a lot,


00:55:30.040 --> 00:55:33.960
but focus back on hub and say, hey, let's tighten up hub.


00:55:33.960 --> 00:55:35.560
This is a place where a massive amount


00:55:35.560 --> 00:55:37.400
of developers come for value.


00:55:37.400 --> 00:55:39.240
So we tightened it up, put in good features


00:55:39.240 --> 00:55:42.200
like audit logging and more team features


00:55:42.200 --> 00:55:45.160
and fixed our plans and seats and how the pricing


00:55:45.160 --> 00:55:46.200
and how that works.


00:55:46.200 --> 00:55:49.720
And then started moving towards developer tools.


00:55:49.720 --> 00:55:53.960
So integrating it with ECS, ACI into the public clouds,


00:55:53.960 --> 00:55:55.520
you'll see a lot more of that coming.


00:55:55.520 --> 00:55:57.960
You see a lot more tools around local development,


00:55:57.960 --> 00:56:01.280
container first development, a lot of sharing.


00:56:01.280 --> 00:56:05.480
So be interesting to say, I'm working on a feature,


00:56:05.480 --> 00:56:08.460
I have a branch, and I wanna share that with you, Michael.


00:56:08.460 --> 00:56:10.600
Hey, you know, take a look at this real quick.


00:56:10.600 --> 00:56:12.140
And now you're in that same scenario, right?


00:56:12.140 --> 00:56:13.300
I have to check out your branch.


00:56:13.300 --> 00:56:14.820
If I'm doing everything on my machine,


00:56:14.820 --> 00:56:16.000
do I have all the versions correct?


00:56:16.000 --> 00:56:17.720
Do I have everything right?


00:56:17.720 --> 00:56:19.580
Well, what if you could just wrap that all up a container


00:56:19.580 --> 00:56:22.120
and I just share it with you and you fire that container up


00:56:22.120 --> 00:56:23.560
and you're in a dev environment


00:56:23.560 --> 00:56:25.120
and it not just running the container,


00:56:25.120 --> 00:56:28.240
but able to see my code and everything


00:56:28.240 --> 00:56:29.960
and the app running inside the container


00:56:29.960 --> 00:56:31.560
and interact with it, right?


00:56:31.560 --> 00:56:32.640
- Yeah, that's cool.


00:56:32.640 --> 00:56:33.560
- So that's powerful.


00:56:33.560 --> 00:56:35.920
- That sounds a little bit like the VS Code feature


00:56:35.920 --> 00:56:38.840
where they have that's like launch this in code


00:56:38.840 --> 00:56:41.120
off of GitHub and it just like sets up


00:56:41.120 --> 00:56:43.200
that remote environment.


00:56:43.200 --> 00:56:45.300
- Yep, exactly, exactly.


00:56:45.300 --> 00:56:47.740
Yep, launch this for me.


00:56:47.740 --> 00:56:49.980
And also too, I can notify you, right?


00:56:49.980 --> 00:56:51.860
So you get in a little desktop notify,


00:56:51.860 --> 00:56:54.260
hey, you got something shared with you


00:56:54.260 --> 00:56:56.380
and you launch this in VS Code


00:56:56.380 --> 00:56:58.100
and it brings it all in for you.


00:56:58.100 --> 00:56:58.940
- Yeah, cool.


00:56:58.940 --> 00:57:00.700
- Into your earlier point, you go,


00:57:00.700 --> 00:57:02.700
oh, if you didn't know you're running containers,


00:57:02.700 --> 00:57:04.740
you might not know it, right?


00:57:04.740 --> 00:57:07.300
It's like, oh, I just got this PR shared with me


00:57:07.300 --> 00:57:08.940
and I wanna check it out, right?


00:57:08.940 --> 00:57:09.760
And it's just-


00:57:09.760 --> 00:57:10.940
- Push the run button and it's good, it's running.


00:57:10.940 --> 00:57:12.780
- I push the run button, yeah, yeah.


00:57:13.440 --> 00:57:14.380
- Yeah, awesome.


00:57:14.380 --> 00:57:17.680
- Yeah, so a lot of stuff coming around that,


00:57:17.680 --> 00:57:20.820
a lot of more features for teams


00:57:20.820 --> 00:57:23.360
and sharing features coming in Hub.


00:57:23.360 --> 00:57:25.800
We have security scanning in there now.


00:57:25.800 --> 00:57:27.480
Yeah, a lot of interesting-


00:57:27.480 --> 00:57:30.920
- The thing that GitHub added was notifications


00:57:30.920 --> 00:57:33.960
of security CVEs and whatnot,


00:57:33.960 --> 00:57:36.640
like periodically I'll log in and I did this class


00:57:36.640 --> 00:57:40.520
that interacted in a very minor way with an electron JS app.


00:57:40.520 --> 00:57:42.240
And it's always like your repository


00:57:42.240 --> 00:57:44.080
has this critical vulnerability


00:57:44.080 --> 00:57:49.080
because some random version in a package lock.json,


00:57:49.080 --> 00:57:52.000
as you know, like, so for me, I'm like,


00:57:52.000 --> 00:57:54.160
I don't really need that, but I'll go ahead


00:57:54.160 --> 00:57:56.820
and just accept it 'cause I just need it to be quiet to me.


00:57:56.820 --> 00:57:59.600
But in general, those features are super useful


00:57:59.600 --> 00:58:01.600
when those come up for your actual code.


00:58:01.600 --> 00:58:02.440
- Yeah.


00:58:02.440 --> 00:58:04.040
- Anything like that you guys are thinking about?


00:58:04.040 --> 00:58:06.080
- Yeah, so we partnered with Snyk,


00:58:06.080 --> 00:58:10.880
which is a dev security scanning company,


00:58:10.880 --> 00:58:12.600
security company, I shouldn't say just scanning


00:58:12.600 --> 00:58:13.960
'cause they do a bunch of stuff,


00:58:13.960 --> 00:58:15.880
but now you have Docker space scan.


00:58:15.880 --> 00:58:18.960
So you can scan your images locally, get reports,


00:58:18.960 --> 00:58:21.960
see high, low severities, yeah.


00:58:21.960 --> 00:58:23.460
And then that'll run in Hub.


00:58:23.460 --> 00:58:26.200
So when you push into Hub, your images will be scanned


00:58:26.200 --> 00:58:27.400
if you have it turned on.


00:58:27.400 --> 00:58:30.020
And so you have a central place where you can see all those.


00:58:30.020 --> 00:58:33.120
And then you can use Snyk to remediate them


00:58:33.120 --> 00:58:34.160
and those types of stuff.


00:58:34.160 --> 00:58:35.480
And Snyk has really good tools-


00:58:35.480 --> 00:58:37.720
- Because maybe you scanned even,


00:58:37.720 --> 00:58:39.160
you could have scanned locally,


00:58:39.160 --> 00:58:41.160
push your stuff to production.


00:58:41.160 --> 00:58:42.000
- Right.


00:58:42.000 --> 00:58:43.200
- And then you haven't touched it for three weeks.


00:58:43.200 --> 00:58:44.680
But in the meantime, something's come out


00:58:44.680 --> 00:58:46.620
you need to take action on, right?


00:58:46.620 --> 00:58:50.160
And so having it on the Hub, giving you notifications,


00:58:50.160 --> 00:58:52.200
it's constantly running, right?


00:58:52.200 --> 00:58:53.960
- Exactly, exactly.


00:58:53.960 --> 00:58:57.320
Yeah, and yeah, being able to get notified


00:58:57.320 --> 00:58:58.720
of your base images, right?


00:58:58.720 --> 00:59:00.600
So if you're running, you know,


00:59:00.600 --> 00:59:05.280
the note or the Python base image, right?


00:59:05.280 --> 00:59:07.120
When that changes underneath you, right?


00:59:07.120 --> 00:59:08.840
And there's security vulnerabilities introduced,


00:59:08.840 --> 00:59:10.360
you wanna know, right?


00:59:10.360 --> 00:59:13.300
Should I go to the next version or not, right?


00:59:13.300 --> 00:59:16.400
And then I think too, to your earlier point of,


00:59:16.400 --> 00:59:18.840
you know, it's like, I'm not a security professional, right?


00:59:18.840 --> 00:59:22.000
So I see these reports and I do a scan and I go,


00:59:22.000 --> 00:59:24.320
oh heck, you know, 300, you know,


00:59:24.320 --> 00:59:25.720
high severity vulnerabilities, right?


00:59:25.720 --> 00:59:27.240
What do I do?


00:59:27.240 --> 00:59:28.880
And I think what we're trying to do is say,


00:59:28.880 --> 00:59:32.400
hey, you know, here's how you remediate that, right?


00:59:32.400 --> 00:59:37.400
You're on version 3.2, if you bump up to 3.3, it fixes these.


00:59:37.400 --> 00:59:39.760
So you should do that, right?


00:59:39.760 --> 00:59:42.720
A little minor version upgrade or major upgrade


00:59:42.720 --> 00:59:44.920
takes you to, instead of 300,


00:59:44.920 --> 00:59:46.640
now you have 20 vulnerabilities, right?


00:59:46.640 --> 00:59:49.400
And they're all medium, so yeah.


00:59:49.400 --> 00:59:51.000
Yeah, I think we need that as engineers


00:59:51.000 --> 00:59:52.480
to be able to get our job done quicker,


00:59:52.480 --> 00:59:54.800
writing code, you know, it's a primary function, right?


00:59:54.800 --> 00:59:56.560
So I got a bunch of these vulnerabilities


00:59:56.560 --> 00:59:57.840
and to your point, you kind of like just,


00:59:57.840 --> 01:00:01.800
yes, just clear these red Xs off of here, right?


01:00:01.800 --> 01:00:04.120
We might not know exactly what's going on.


01:00:04.120 --> 01:00:05.760
So really trying to help you


01:00:05.760 --> 01:00:06.840
remediate those vulnerabilities,


01:00:06.840 --> 01:00:09.120
but also understand why and what you're doing, right?


01:00:09.120 --> 01:00:10.600
- Yeah. - Yeah.


01:00:10.600 --> 01:00:11.920
- Yeah, that sounds really valuable.


01:00:11.920 --> 01:00:14.320
I mean, if we got it for our code,


01:00:14.320 --> 01:00:17.000
we should have it for basically our infrastructure.


01:00:17.000 --> 01:00:18.640
Comment from the live stream,


01:00:18.640 --> 01:00:22.240
could Docker potentially be able to share


01:00:22.240 --> 01:00:23.920
really big files across the globe,


01:00:23.920 --> 01:00:26.160
allowing others to read code easily?


01:00:26.160 --> 01:00:27.760
How would this work?


01:00:27.760 --> 01:00:28.600
Honestly, I don't know.


01:00:28.600 --> 01:00:31.520
I mean, it certainly will allow you to share files


01:00:31.520 --> 01:00:33.560
as images and it will definitely allow you


01:00:33.560 --> 01:00:36.160
to have environments set up like data science environments


01:00:36.160 --> 01:00:40.600
that could analyze those, but what are your thoughts?


01:00:40.600 --> 01:00:42.720
- Yeah, I think we could do some of that now.


01:00:42.720 --> 01:00:46.920
So, you know, through hub being able to just Docker push


01:00:46.920 --> 01:00:49.320
and Docker pull is very powerful, right?


01:00:49.320 --> 01:00:51.240
You can get a whole disk image, let's say.


01:00:51.240 --> 01:00:53.040
- Right, 'cause instead of getting just the Docker file,


01:00:53.040 --> 01:00:54.840
you got to build, you get the result,


01:00:54.840 --> 01:00:56.480
which could have had files copied in locally


01:00:56.480 --> 01:00:59.000
and all set up in the file system internally, right?


01:00:59.000 --> 01:01:00.120
- Yeah, yeah. - Yeah.


01:01:00.120 --> 01:01:02.400
- Yeah, so two ways to share with just the Docker file


01:01:02.400 --> 01:01:03.760
and say, "Hey, build this yourself,"


01:01:03.760 --> 01:01:07.160
or "I've built it, here you go," right?


01:01:07.160 --> 01:01:08.000
- Yeah.


01:01:08.000 --> 01:01:09.800
- But I would love to hear, you know,


01:01:09.800 --> 01:01:12.720
reach out to me on Twitter or something, right?


01:01:12.720 --> 01:01:14.240
And let me know, I'd love to hear more


01:01:14.240 --> 01:01:15.440
of what you're trying to do


01:01:15.440 --> 01:01:17.200
'cause that sounds interesting, right?


01:01:17.200 --> 01:01:19.040
- Yeah. - Bandwidth is interesting


01:01:19.040 --> 01:01:20.240
to around the world, right?


01:01:20.240 --> 01:01:22.040
So, you know, I sit here in Austin


01:01:22.040 --> 01:01:23.480
where, you know, high speed internet,


01:01:23.480 --> 01:01:26.520
well, really the rest of the world doesn't have that, right?


01:01:26.520 --> 01:01:29.080
So low bandwidth and, you know,


01:01:29.080 --> 01:01:32.600
of course I got a screaming, you know, desktop laptop,


01:01:32.600 --> 01:01:35.560
right, that I use in fast and not, you know,


01:01:35.560 --> 01:01:37.120
the whole world doesn't have those advantages.


01:01:37.120 --> 01:01:40.520
So, you know, and if I'm pulling down a Mongo,


01:01:40.520 --> 01:01:42.680
some image, right, and I'm picking on Mongo all the time,


01:01:42.680 --> 01:01:46.800
but, you know, if it's over a gig, that's big, right?


01:01:46.800 --> 01:01:49.040
That'll take a while on some networks, so.


01:01:49.040 --> 01:01:50.560
- Yeah. - Yeah.


01:01:50.560 --> 01:01:53.200
- Yeah, with all the video and video courses


01:01:53.200 --> 01:01:55.760
and audio processing and file exchange,


01:01:55.760 --> 01:01:58.600
I've had to buy unlimited data from Comcast


01:01:58.600 --> 01:02:03.600
'cause I was going over my 1.2 terabyte per month data caps


01:02:03.600 --> 01:02:05.680
every month, it was ridiculous.


01:02:05.680 --> 01:02:06.760
- Yeah, yeah.


01:02:06.760 --> 01:02:09.280
- Yeah, so a lot of data these days.


01:02:09.280 --> 01:02:10.360
All right, well, you know,


01:02:10.360 --> 01:02:12.360
fantastic stuff you guys have coming up there.


01:02:12.360 --> 01:02:14.920
I guess maybe we should probably wrap it up


01:02:14.920 --> 01:02:17.400
just for the sake of time, but, you know,


01:02:17.400 --> 01:02:23.560
I guess we'll hit the two final questions I always ask.


01:02:23.760 --> 01:02:25.920
First of all, notable PyPI package.


01:02:25.920 --> 01:02:29.040
This is like something interesting that you ran across,


01:02:29.040 --> 01:02:30.520
and maybe you wanted to share,


01:02:30.520 --> 01:02:33.480
people that find useful, some Python library.


01:02:33.480 --> 01:02:36.200
- Yeah, and because I love testing,


01:02:36.200 --> 01:02:41.200
so testcontainers.python, if, and that's a little inside joke


01:02:41.200 --> 01:02:43.080
that no one on here really knows,


01:02:43.080 --> 01:02:44.600
but I have developer friends,


01:02:44.600 --> 01:02:46.280
so I will, one of my favorite things


01:02:46.280 --> 01:02:49.640
to argue against is testing, just as a thought experiment,


01:02:49.640 --> 01:02:50.840
but it's really fun, right?


01:02:50.840 --> 01:02:52.680
But anyways, but I'm gonna go ahead


01:02:52.680 --> 01:02:55.040
and say that, but anyways, but don't listen to me.


01:02:55.040 --> 01:02:57.000
Testing is super important, right?


01:02:57.000 --> 01:02:59.000
And being able to test in containers


01:02:59.000 --> 01:03:01.680
and pick off these prebuilt containers


01:03:01.680 --> 01:03:04.080
and use right in your app, right, in your code


01:03:04.080 --> 01:03:05.720
is super powerful, extremely powerful.


01:03:05.720 --> 01:03:08.040
So definitely interested in testcontainers.


01:03:08.040 --> 01:03:10.040
- Yeah, it's super cool.


01:03:10.040 --> 01:03:11.880
It lets you basically create a with block


01:03:11.880 --> 01:03:15.240
that says with mysql container as mysql


01:03:15.240 --> 01:03:18.600
or with my MongoDB container as that,


01:03:18.600 --> 01:03:20.240
and it just fires up a Docker container.


01:03:20.240 --> 01:03:22.960
You do your tests within that thing


01:03:22.960 --> 01:03:26.360
and maybe use a pytest fixture to preload the test data,


01:03:26.360 --> 01:03:28.000
then run your code against it.


01:03:28.000 --> 01:03:29.800
So instead of mocking out the database


01:03:29.800 --> 01:03:32.880
and mocking out Redis, you just run a test Redis


01:03:32.880 --> 01:03:36.480
and then throw it away, which I think that's fantastic.


01:03:36.480 --> 01:03:38.800
It's like a hybrid between integration tests


01:03:38.800 --> 01:03:41.320
and unit tests, isolation type stuff.


01:03:41.320 --> 01:03:42.440
- Yeah, yeah.


01:03:42.440 --> 01:03:44.520
It goes back to our earlier conversations


01:03:44.520 --> 01:03:46.420
around reproducibility, right?


01:03:47.960 --> 01:03:50.280
- Yeah, having same environments are very important, right?


01:03:50.280 --> 01:03:51.560
- Yeah, absolutely.


01:03:51.560 --> 01:03:53.400
And then final question, if you're gonna write some code,


01:03:53.400 --> 01:03:55.760
what editor do you use these days?


01:03:55.760 --> 01:03:57.480
- Now, if you would have asked me that


01:03:57.480 --> 01:04:00.880
about two years ago, it would have been Sublime.


01:04:00.880 --> 01:04:01.720
- Okay.


01:04:01.720 --> 01:04:03.920
- Plain text editor, back and forth,


01:04:03.920 --> 01:04:06.920
alt tabbing back and forth between my terminal.


01:04:06.920 --> 01:04:09.480
But now I've fallen in love with VS Code.


01:04:09.480 --> 01:04:10.320
- Yeah.


01:04:10.320 --> 01:04:11.200
- It's extremely powerful.


01:04:11.200 --> 01:04:13.560
So I feel like Sublime, like so many of the people


01:04:13.560 --> 01:04:16.880
who love Sublime have just naturally moved to VS Code.


01:04:16.880 --> 01:04:18.080
I mean, Sublime was really cool.


01:04:18.080 --> 01:04:21.560
It just had all these like weird community stuff.


01:04:21.560 --> 01:04:24.240
Like there was Sublime and then Sublime 3


01:04:24.240 --> 01:04:25.600
and there was like permanently in beta


01:04:25.600 --> 01:04:26.840
and like, are these getting updated?


01:04:26.840 --> 01:04:28.160
Which one is like the real thing?


01:04:28.160 --> 01:04:30.880
It just, it was always kind of a little unclear


01:04:30.880 --> 01:04:31.720
where it was going.


01:04:31.720 --> 01:04:35.000
And then, you know, VS Code came along with a similar model


01:04:35.000 --> 01:04:36.760
and just said, well, why don't we put a hundred people


01:04:36.760 --> 01:04:39.040
just like constantly adding features to this?


01:04:39.040 --> 01:04:39.880
- Yeah, yeah, exactly.


01:04:39.880 --> 01:04:41.720
- I don't know what the number is, but it's high.


01:04:41.720 --> 01:04:43.320
- Yeah, and it's interesting you say that


01:04:43.320 --> 01:04:45.840
because I was a long time Sublime,


01:04:45.840 --> 01:04:48.040
I bought it, right, I purchased it forever.


01:04:48.040 --> 01:04:49.360
And yeah, it was like two or three


01:04:49.360 --> 01:04:51.600
and I have a theme over here, but it doesn't work in three.


01:04:51.600 --> 01:04:52.440
And how do you get it?


01:04:52.440 --> 01:04:53.260
It was just weird.


01:04:53.260 --> 01:04:54.800
And then VS Code just kind of snuck in


01:04:54.800 --> 01:04:56.840
and I said, yeah, I'm gonna use it, I'm gonna use it.


01:04:56.840 --> 01:04:58.760
And now I keep just using,


01:04:58.760 --> 01:05:00.760
I used it as a text editor back then, right?


01:05:00.760 --> 01:05:04.240
And now I just keep using more and more features, plugins.


01:05:04.240 --> 01:05:07.640
Yeah, I mean, the ecosystem around that is so powerful.


01:05:07.640 --> 01:05:08.480
- There's neat stuff.


01:05:08.480 --> 01:05:10.120
And especially there's a lot of neat Docker things


01:05:10.120 --> 01:05:11.400
going on in it.


01:05:11.400 --> 01:05:14.840
- Yeah, yeah, I'm gonna run my VS Code in a Docker


01:05:14.840 --> 01:05:16.880
and then run dev containers.


01:05:16.880 --> 01:05:19.800
- It'll be like inception, it'll be Docker.


01:05:19.800 --> 01:05:20.640
- Yeah, no inception.


01:05:20.640 --> 01:05:22.600
- Docker VS Code all the way down.


01:05:22.600 --> 01:05:24.720
All right, you got a moment for a couple more


01:05:24.720 --> 01:05:26.400
audience questions before we wrap it up?


01:05:26.400 --> 01:05:27.360
- Absolutely.


01:05:27.360 --> 01:05:29.160
You know me, I'll chat away for days,


01:05:29.160 --> 01:05:31.800
but I know your audience might get bored.


01:05:31.800 --> 01:05:34.240
- All right, so Brian Sands is out there.


01:05:34.240 --> 01:05:36.440
Hey, Brian, says, do you know of any good examples


01:05:36.440 --> 01:05:38.160
you and Docker compose with Postgres


01:05:38.160 --> 01:05:39.800
for persistent local storage?


01:05:39.800 --> 01:05:41.920
I have a hard time finding up-to-date working


01:05:41.920 --> 01:05:43.680
and vote to do this properly.


01:05:43.680 --> 01:05:46.040
- Yeah, check out Awesome Compose.


01:05:46.040 --> 01:05:50.120
So it's a GitHub repo, Docker owns it.


01:05:50.120 --> 01:05:53.120
So Awesome-Compose, I can't remember if it lives


01:05:53.120 --> 01:05:55.120
under the Docker organization or not,


01:05:55.120 --> 01:05:57.440
but there's a ton of, yeah, right there.


01:05:57.440 --> 01:06:00.960
There's a ton of different kind of configurations


01:06:00.960 --> 01:06:01.800
with different stacks.


01:06:01.800 --> 01:06:04.200
- Super interesting, I had no idea about this.


01:06:04.200 --> 01:06:05.480
- Yeah, we're trying.


01:06:05.480 --> 01:06:06.600
Yeah, thank you, Brian.


01:06:06.600 --> 01:06:10.520
I'll send you that, I'll Venmo you here in a minute.


01:06:10.520 --> 01:06:11.920
No, but yeah, check that out.


01:06:11.920 --> 01:06:15.120
There's, if you can't get your specific stack,


01:06:15.120 --> 01:06:17.800
you're gonna get something very close, right?


01:06:17.800 --> 01:06:19.160
So you get, there's Flask in there,


01:06:19.160 --> 01:06:22.240
there's Nginx like Flask and Postgres,


01:06:22.240 --> 01:06:26.160
different kind of three tiered stacks.


01:06:26.160 --> 01:06:28.520
And then within that, you'll have Docker files,


01:06:28.520 --> 01:06:30.600
and then you'll have a compose file


01:06:30.600 --> 01:06:32.840
to kind of bring it all together.


01:06:32.840 --> 01:06:35.160
And you should get some really great examples in there.


01:06:35.160 --> 01:06:36.920
If not, please do hit me up on Twitter


01:06:36.920 --> 01:06:39.240
and I'll get you pointed in the right direction for sure.


01:06:39.240 --> 01:06:40.880
- Yeah, very cool, awesome.


01:06:40.880 --> 01:06:42.960
And then Tino asks,


01:06:42.960 --> 01:06:46.240
what is the current state of Windows-based Docker containers?


01:06:46.240 --> 01:06:47.840
I know there's NanoServer.


01:06:47.840 --> 01:06:52.640
- Yeah, I gotta tread lightly on this one.


01:06:52.640 --> 01:06:54.400
I was super excited when Microsoft,


01:06:54.400 --> 01:06:55.880
when we started supporting it,


01:06:55.880 --> 01:06:58.920
and then for Windows containers,


01:06:58.920 --> 01:07:02.440
the focus has been not as much.


01:07:02.440 --> 01:07:06.600
The amount of people actually using Windows containers


01:07:06.600 --> 01:07:11.240
is very, very small compared to Unix-based containers.


01:07:11.240 --> 01:07:15.840
So, just because of that, the focus has not been on that,


01:07:15.840 --> 01:07:17.640
but there's still a thing,


01:07:17.640 --> 01:07:19.880
they're still being developed on.


01:07:19.880 --> 01:07:22.400
Just not, they're just not as prominent in the industry


01:07:22.400 --> 01:07:23.760
for whatever reason, especially with Docker.


01:07:23.760 --> 01:07:26.000
- Well, you know where I would say they probably,


01:07:26.000 --> 01:07:28.840
as is standard with Microsoft these days,


01:07:28.840 --> 01:07:33.000
their focus seems to be if it runs on Azure.


01:07:33.000 --> 01:07:34.360
- Yeah, we love it.


01:07:34.360 --> 01:07:36.600
- Right, this is where we will sacrifice


01:07:36.600 --> 01:07:40.200
many, many of the things so that it will run on Azure.


01:07:40.200 --> 01:07:43.800
And a lot of that, I believe, is check this thing in Windows


01:07:43.800 --> 01:07:45.160
and like say Visual Studio Code,


01:07:45.160 --> 01:07:49.080
so I can push deploy to run on Docker on Azure.


01:07:49.080 --> 01:07:51.520
I think that's probably where a lot of it is.


01:07:51.520 --> 01:07:56.440
- Yeah, yeah, and WSL2 is huge, right?


01:07:56.440 --> 01:07:58.160
So talking to the Microsoft folks,


01:07:58.160 --> 01:08:01.360
they wanna be the place where you come,


01:08:01.360 --> 01:08:04.800
the Windows platform is the place you come for developing.


01:08:04.800 --> 01:08:06.120
So whether you're a Windows developer


01:08:06.120 --> 01:08:08.560
or a Linux developer, you're using VS Code,


01:08:08.560 --> 01:08:09.880
you're running on Windows,


01:08:09.880 --> 01:08:12.040
you're using WSL2 for Unix development,


01:08:12.040 --> 01:08:14.400
or you're using Windows for Windows development.


01:08:14.400 --> 01:08:15.840
That's their thought, right?


01:08:15.840 --> 01:08:18.760
So the underlying platforms kind of change


01:08:18.760 --> 01:08:20.280
and with containers, they can do some of that.


01:08:20.280 --> 01:08:24.720
So they're focusing a lot on WSL2, which is super powerful.


01:08:24.720 --> 01:08:27.400
- Right, which really just means make WSL2 good


01:08:27.400 --> 01:08:30.320
so that it runs on Ubuntu or something like that.


01:08:30.320 --> 01:08:32.240
I mean, we just leveraged the Ubuntu Docker support,


01:08:32.240 --> 01:08:33.080
I suspect.


01:08:33.080 --> 01:08:33.920
- Yep, yeah.


01:08:33.920 --> 01:08:36.480
- Yeah, while we're talking platforms,


01:08:36.480 --> 01:08:40.480
I've been doing basically nothing but M1 stuff these days.


01:08:40.480 --> 01:08:43.080
Since mid-December, I thought I would,


01:08:43.080 --> 01:08:46.040
I got my Mac mini M1 and I thought I'd be juggling.


01:08:46.040 --> 01:08:47.440
This would work here, that would work there.


01:08:47.440 --> 01:08:49.840
And I just literally have just turned off my laptop


01:08:49.840 --> 01:08:50.840
and just do this.


01:08:50.840 --> 01:08:52.920
And I love it.


01:08:52.920 --> 01:08:55.760
What's the story with Docker and M1?


01:08:55.760 --> 01:08:57.240
- Yeah, so we love Apple.


01:08:57.240 --> 01:08:58.960
It was nice to see our little,


01:08:58.960 --> 01:09:01.040
I don't know if you saw an Apple's keynote,


01:09:01.040 --> 01:09:03.200
where you saw the Docker desktop on there,


01:09:03.200 --> 01:09:04.480
which was super cool.


01:09:04.480 --> 01:09:08.720
But yeah, we're getting very, very close to shipping


01:09:08.720 --> 01:09:13.680
a release, a GA.


01:09:13.680 --> 01:09:16.440
I mean, really close.


01:09:16.440 --> 01:09:18.520
I don't wanna give a date or anything, but really.


01:09:18.520 --> 01:09:19.520
- You know, tomorrow.


01:09:19.520 --> 01:09:20.360
- Yeah. - Tomorrow will be okay.


01:09:20.360 --> 01:09:21.600
We'll do that.


01:09:21.600 --> 01:09:22.440
I'll take it.


01:09:22.440 --> 01:09:23.400
- But very, very, very close.


01:09:23.400 --> 01:09:24.560
So working on it.


01:09:24.560 --> 01:09:27.880
It's one of our primary feature sets


01:09:27.880 --> 01:09:29.680
to finish to get done, right?


01:09:29.680 --> 01:09:31.040
And again, it came from the community.


01:09:31.040 --> 01:09:33.200
It was our number one issue, right?


01:09:33.200 --> 01:09:35.440
When the M1s dropped,


01:09:35.440 --> 01:09:37.960
I think everybody jumped into our GitHub issue.


01:09:37.960 --> 01:09:38.800
And we need support.


01:09:38.800 --> 01:09:40.880
- I think all M1 stuff has come out way stronger


01:09:40.880 --> 01:09:41.720
than I expected.


01:09:41.720 --> 01:09:42.880
I thought, oh, that'd be kind of a need.


01:09:42.880 --> 01:09:43.800
Who knows what they're doing?


01:09:43.800 --> 01:09:45.680
But like, as it came out, I was like, wow,


01:09:45.680 --> 01:09:48.200
this is really transformative in some ways.


01:09:48.200 --> 01:09:49.040
- Yeah.


01:09:49.040 --> 01:09:50.840
And you can get the tech preview.


01:09:50.840 --> 01:09:52.520
It's pretty stable right now.


01:09:52.520 --> 01:09:57.040
It's just gonna be on probably one-off little issues


01:09:57.040 --> 01:09:59.000
on your environment, how you run containers


01:09:59.000 --> 01:10:02.920
and what exactly, what container,


01:10:02.920 --> 01:10:06.040
because they gotta be compiled for the different--


01:10:06.040 --> 01:10:08.160
- It's gotta basically be an arm image.


01:10:08.160 --> 01:10:09.000
- Yeah.


01:10:09.000 --> 01:10:09.880
Yeah, and sometimes you run arm,


01:10:09.880 --> 01:10:12.760
but then Mongo doesn't have an arm version yet.


01:10:12.760 --> 01:10:14.320
So you're running it in emulation.


01:10:14.320 --> 01:10:16.720
And so there's those types of things,


01:10:16.720 --> 01:10:20.160
but we're very, very close to releasing GA.


01:10:20.160 --> 01:10:21.840
Stay tuned next couple of weeks, I would say.


01:10:21.840 --> 01:10:22.680
- Yeah, fantastic.


01:10:22.680 --> 01:10:23.840
And shout out to the MongoDB people.


01:10:23.840 --> 01:10:24.680
Where's your M1 version?


01:10:24.680 --> 01:10:25.520
Come on.


01:10:25.520 --> 01:10:26.360
All right, final question.


01:10:26.360 --> 01:10:27.200
Wrap it up.


01:10:27.200 --> 01:10:31.320
Ricardo says, "Networking on Docker feels like


01:10:31.320 --> 01:10:34.840
"it's easier with LXC, one of the other container styles.


01:10:34.840 --> 01:10:35.960
"Am I doing something wrong?


01:10:35.960 --> 01:10:38.680
"I'm interested in giving a container its own IP address."


01:10:38.680 --> 01:10:40.120
Peter, this is you, I have no idea.


01:10:40.120 --> 01:10:41.680
- Yeah, Ricardo.


01:10:41.680 --> 01:10:42.680
I thought I was gonna get out of here


01:10:42.680 --> 01:10:44.280
without any networking questions.


01:10:44.280 --> 01:10:46.640
But Ricardo, you are not alone.


01:10:46.640 --> 01:10:49.600
Networking in containers is difficult, right?


01:10:49.600 --> 01:10:53.640
You gotta deal with different networking technologies,


01:10:53.640 --> 01:10:54.760
even locally.


01:10:54.760 --> 01:10:58.120
So yeah, it's not easy.


01:10:58.120 --> 01:11:02.120
- Is this easier in something like Swarm or Kubernetes


01:11:02.120 --> 01:11:03.960
or something else that maybe controls it more?


01:11:03.960 --> 01:11:05.680
- No, it gets even more complicated.


01:11:05.680 --> 01:11:07.680
(both laughing)


01:11:07.680 --> 01:11:09.160
Once you step outside of,


01:11:09.160 --> 01:11:12.840
when you have, if you have cloud native apps, right?


01:11:12.840 --> 01:11:14.960
And I'm not a huge fan of that term,


01:11:14.960 --> 01:11:16.120
'cause what the heck does that mean?


01:11:16.120 --> 01:11:16.960
But--


01:11:16.960 --> 01:11:18.000
- That means I would have permanently paid


01:11:18.000 --> 01:11:18.840
to run my app forever.


01:11:18.840 --> 01:11:19.680
(both laughing)


01:11:19.680 --> 01:11:20.520
- Thank you.


01:11:20.520 --> 01:11:22.880
Exactly.


01:11:22.880 --> 01:11:24.160
But yeah.


01:11:24.160 --> 01:11:25.200
So if you're in microservices,


01:11:25.200 --> 01:11:29.600
you're using configuration outside of your app


01:11:29.600 --> 01:11:30.800
to control your app, right?


01:11:30.800 --> 01:11:31.640
Is the best.


01:11:31.640 --> 01:11:33.200
But I see a lot of legacy apps.


01:11:33.200 --> 01:11:35.640
I'll do legacy in double quotes also, right?


01:11:35.640 --> 01:11:39.840
Because just meaning not more microservice type apps, right?


01:11:39.840 --> 01:11:43.280
And so you're trying to run those apps inside of containers


01:11:43.280 --> 01:11:46.440
and they have unique networking needs,


01:11:46.440 --> 01:11:47.920
unique volume needs, right?


01:11:47.920 --> 01:11:50.480
They're still writing to disk and reading from disk


01:11:50.480 --> 01:11:52.960
and you can't control that without changing code.


01:11:52.960 --> 01:11:55.240
Or they have IP addresses or subnets


01:11:55.240 --> 01:11:56.760
kind of hardwired in, right?


01:11:56.760 --> 01:11:58.280
And you can't do a lot of that.


01:11:58.280 --> 01:12:01.160
So you've got to configure your networking around your app


01:12:01.160 --> 01:12:02.080
with inside a container


01:12:02.080 --> 01:12:04.080
and that's where the complexity comes in.


01:12:04.080 --> 01:12:07.200
So, you know, like, so in this scenario,


01:12:07.200 --> 01:12:10.280
giving your container its own IP address,


01:12:10.280 --> 01:12:13.920
you know, it's a little bit about,


01:12:13.920 --> 01:12:15.400
against best practices, right?


01:12:15.400 --> 01:12:17.400
So containers should be ephemeral.


01:12:17.400 --> 01:12:18.640
They should go away, right?


01:12:18.640 --> 01:12:19.480
You should think of them.


01:12:19.480 --> 01:12:20.600
And I got to get a better analogy.


01:12:20.600 --> 01:12:22.440
My apologies to anybody, if this offends you,


01:12:22.440 --> 01:12:25.000
but, you know, we think of our,


01:12:25.000 --> 01:12:27.280
we used to think of our VMs as pets, right?


01:12:27.280 --> 01:12:28.120
And we take care of them,


01:12:28.120 --> 01:12:29.480
keep them up and love them,


01:12:29.480 --> 01:12:32.400
love them and, you know, hope they live forever, right?


01:12:32.400 --> 01:12:33.240
Configure them.


01:12:33.240 --> 01:12:35.800
And then now you have containers, which are more like,


01:12:35.800 --> 01:12:39.080
let's say, I used to say cattle,


01:12:39.080 --> 01:12:40.400
but I'm worried that offends people.


01:12:40.400 --> 01:12:44.360
So let's say consumable foods, right?


01:12:44.360 --> 01:12:45.760
You know, like--


01:12:45.760 --> 01:12:47.000
- Fungible elements.


01:12:47.000 --> 01:12:47.840
- Yeah.


01:12:49.040 --> 01:12:50.640
So they're more like a cake, right?


01:12:50.640 --> 01:12:52.720
If I get cake in my house, I'm eating that, right?


01:12:52.720 --> 01:12:53.560
And it's gone.


01:12:53.560 --> 01:12:55.120
And then if I want new cake, I got to put new cake, right?


01:12:55.120 --> 01:12:55.960
- Yeah, good and bad.


01:12:55.960 --> 01:12:57.320
You don't try to rehabilitate it.


01:12:57.320 --> 01:12:58.240
You just get new cake.


01:12:58.240 --> 01:12:59.080
- Right, right.


01:12:59.080 --> 01:13:01.080
Yeah, but you don't eat half the cake and then bake,


01:13:01.080 --> 01:13:02.720
you know, and put another bake the half.


01:13:02.720 --> 01:13:04.480
This is, that analogy is going poor.


01:13:04.480 --> 01:13:05.320
- Speak for yourself.


01:13:05.320 --> 01:13:06.720
We refill our cake.


01:13:06.720 --> 01:13:09.000
We don't ever want to go down to zero cake.


01:13:09.000 --> 01:13:09.920
- Right, but that's the idea.


01:13:09.920 --> 01:13:12.040
So if you're assigning an IP to a container,


01:13:12.040 --> 01:13:13.560
that container goes away, right?


01:13:13.560 --> 01:13:15.000
And the idea is if I'm orchestrating


01:13:15.000 --> 01:13:17.400
that I have multiple containers, we're all running,


01:13:17.400 --> 01:13:19.440
they shouldn't have the same IP, right?


01:13:19.440 --> 01:13:22.480
If one goes away, one comes back up, you don't want to,


01:13:22.480 --> 01:13:24.000
you know, so those are the type of things


01:13:24.000 --> 01:13:24.840
you're getting into.


01:13:24.840 --> 01:13:27.280
And Ricardo, you're probably shaking your head going,


01:13:27.280 --> 01:13:30.120
yes, but, but, but, but, but, and I totally need it.


01:13:30.120 --> 01:13:31.360
Yeah, I totally understand.


01:13:31.360 --> 01:13:34.000
And you can do it, but it's just a little more complex.


01:13:34.000 --> 01:13:37.000
Yeah, a little hard to answer on, you know,


01:13:37.000 --> 01:13:38.000
with a couple of minutes here, but.


01:13:38.000 --> 01:13:39.280
- Yeah, it hits you up on Twitter.


01:13:39.280 --> 01:13:40.200
All right.


01:13:40.200 --> 01:13:42.720
So thank you so much for being here, Peter.


01:13:42.720 --> 01:13:43.560
It's super interesting.


01:13:43.560 --> 01:13:44.400
Final call to action.


01:13:44.400 --> 01:13:46.800
People want to get started maybe making Docker


01:13:46.800 --> 01:13:47.760
more of their life.


01:13:47.760 --> 01:13:48.720
What do they do?


01:13:48.720 --> 01:13:50.960
- Yeah, definitely go hit me up on Twitter.


01:13:50.960 --> 01:13:51.880
Say hello.


01:13:51.880 --> 01:13:54.040
Love to talk to folks.


01:13:54.040 --> 01:13:56.560
Join our community, jump into community Slack.


01:13:56.560 --> 01:13:58.520
If you're, questions like that, Ricardo,


01:13:58.520 --> 01:14:01.920
the community is there, they'll be very, very helpful.


01:14:01.920 --> 01:14:04.040
A lot of our engineers, our developers are in there.


01:14:04.040 --> 01:14:05.320
All of our PMs are in there.


01:14:05.320 --> 01:14:06.360
Ton of captains are in there.


01:14:06.360 --> 01:14:08.680
Docker captains are in there.


01:14:08.680 --> 01:14:09.840
And they're very, very helpful.


01:14:09.840 --> 01:14:13.040
So this is a great way to get plugged in in the community.


01:14:13.040 --> 01:14:15.000
And then the last thing is DockerCon


01:14:15.000 --> 01:14:17.080
is coming up here in the May.


01:14:17.080 --> 01:14:19.320
Sign up for DockerCon.


01:14:19.320 --> 01:14:21.240
It's going to be an online live event.


01:14:21.240 --> 01:14:26.080
Last year we had 80,000 registrants,


01:14:26.080 --> 01:14:27.040
a really, really big show.


01:14:27.040 --> 01:14:28.280
So you're not going to want to miss it.


01:14:28.280 --> 01:14:29.920
Great content coming.


01:14:29.920 --> 01:14:31.880
You get to see more of my smiley face.


01:14:31.880 --> 01:14:36.320
And then CFP is still open.


01:14:36.320 --> 01:14:38.280
We're getting ready to close it on the 15th.


01:14:38.280 --> 01:14:42.600
So if you ever thought about giving a talk, right,


01:14:42.600 --> 01:14:43.720
please submit.


01:14:43.720 --> 01:14:45.200
If you're a first time speaker,


01:14:45.200 --> 01:14:46.640
don't let that deter you, right?


01:14:46.640 --> 01:14:48.760
DockerCon is traditionally a pretty big conference


01:14:48.760 --> 01:14:49.840
and well attended, right?


01:14:49.840 --> 01:14:51.960
And it might, you know,


01:14:51.960 --> 01:14:53.320
first time speakers might not submit.


01:14:53.320 --> 01:14:54.240
Please do.


01:14:54.240 --> 01:14:55.520
We do read all of them.


01:14:55.520 --> 01:14:57.200
And we do take into account, you know,


01:14:57.200 --> 01:14:58.120
what you've done in the past,


01:14:58.120 --> 01:15:00.080
but we also do look for new speakers, right?


01:15:00.080 --> 01:15:01.800
100%.


01:15:01.800 --> 01:15:05.520
So don't let that deter you for sure.


01:15:05.520 --> 01:15:06.560
- All right, fantastic.


01:15:06.560 --> 01:15:07.840
Well, thanks for taking the time, Peter.


01:15:07.840 --> 01:15:09.000
It's been great to chat with you about this.


01:15:09.000 --> 01:15:11.040
- Yeah, hey, thanks for having me on.


01:15:11.040 --> 01:15:11.880
Really enjoyed it.


01:15:11.880 --> 01:15:12.720
Thank you.


01:15:12.720 --> 01:15:13.560
- You bet.


01:15:13.560 --> 01:15:16.520
- Thanks everyone for joining the live stream.


01:15:16.520 --> 01:15:17.920
We will see you on the flip side.


01:15:17.920 --> 01:15:18.800
See you next time.


01:15:18.800 --> 01:15:19.960
[beeps]

