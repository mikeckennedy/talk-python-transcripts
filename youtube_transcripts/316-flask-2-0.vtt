WEBVTT

00:00:00.000 --> 00:00:05.440
Hey, everyone out there in the live stream.


00:00:05.440 --> 00:00:06.440
Welcome, welcome.


00:00:06.440 --> 00:00:08.160
It's super to have you here.


00:00:08.160 --> 00:00:13.480
Thanks for being part of this, either live or if you come back later and watch the recording.


00:00:13.480 --> 00:00:17.600
If you have questions or comments you'd like to be featured during the show or for David


00:00:17.600 --> 00:00:22.420
or Phil, or even me, I guess, throw them in the live chat and I'll do what I can to bring


00:00:22.420 --> 00:00:23.720
them up.


00:00:23.720 --> 00:00:28.720
And yeah, Pradhan, you no longer have to await.


00:00:28.720 --> 00:00:32.700
We are now here.


00:00:32.700 --> 00:00:34.600
Oh, it moved, there we go.


00:00:34.600 --> 00:00:36.060
Perfect, await stream, that's a good joke, man.


00:00:36.060 --> 00:00:38.420
All right, let's get going.


00:00:38.420 --> 00:00:42.340
David, Phil, welcome back, both of you,


00:00:42.340 --> 00:00:44.180
to Talk Python To Me.


00:00:44.180 --> 00:00:45.660
- Hello.


00:00:45.660 --> 00:00:46.980
- Hello, thank you.


00:00:46.980 --> 00:00:48.660
- Yeah, it's great to have you back.


00:00:48.660 --> 00:00:50.740
David, I've had you on to talk about Flask,


00:00:50.740 --> 00:00:55.100
And Phil, I've had you on to talk about derivatives of Flask,


00:00:55.100 --> 00:00:57.180
I suppose, about your project.


00:00:57.180 --> 00:01:02.140
And they're both kind of approaching the same type


00:01:02.140 --> 00:01:03.900
of thing and then sort of zeroing in.


00:01:03.900 --> 00:01:06.060
So now we have you here together, I suppose,


00:01:06.060 --> 00:01:10.100
working on Flask 2.0, right?


00:01:10.100 --> 00:01:11.180
- Yeah.


00:01:11.180 --> 00:01:14.340
It's all merging into one, not really.


00:01:14.340 --> 00:01:15.180
(laughing)


00:01:15.180 --> 00:01:16.660
Our efforts.


00:01:16.660 --> 00:01:17.860
- Yeah, but it's really cool to see you


00:01:17.860 --> 00:01:19.260
working closely together,


00:01:19.260 --> 00:01:22.060
rather than just two disjoint things, right?


00:01:22.060 --> 00:01:23.900
I think that gives a lot of credibility,


00:01:23.900 --> 00:01:24.860
especially to Quart, right?


00:01:24.860 --> 00:01:26.360
'Cause Quart was kind of this experimental thing


00:01:26.360 --> 00:01:28.620
and now it's, if not exactly,


00:01:28.620 --> 00:01:30.040
is it a Palettes project officially


00:01:30.040 --> 00:01:33.220
or is it just working more closely?


00:01:33.220 --> 00:01:34.300
- It's working more closely.


00:01:34.300 --> 00:01:36.560
And in addition, it uses Verkzog now,


00:01:36.560 --> 00:01:37.480
which it never used before.


00:01:37.480 --> 00:01:40.980
So it's been quite a lot of work in that project


00:01:40.980 --> 00:01:42.620
to make that possible.


00:01:42.620 --> 00:01:43.540
- Yeah, that's really cool.


00:01:43.540 --> 00:01:46.540
And Verkzog is like one of these foundational bits of Flask,


00:01:46.540 --> 00:01:48.120
as we'll get into, I'm sure.


00:01:48.980 --> 00:01:53.100
- Yeah, so the idea is because Corp is supposed to be


00:01:53.100 --> 00:01:55.460
API compatible with Flask,


00:01:55.460 --> 00:01:57.660
we wanna get it using as much of what Flask


00:01:57.660 --> 00:01:58.780
is using as possible.


00:01:58.780 --> 00:02:03.780
And so, a long-term plan is to get it using


00:02:03.780 --> 00:02:05.660
even more works at Fairslug.


00:02:05.660 --> 00:02:06.980
- Yeah, yeah, super cool.


00:02:06.980 --> 00:02:08.580
Maybe some, it's dangerous as well,


00:02:08.580 --> 00:02:10.180
could get in there, who knows?


00:02:10.180 --> 00:02:13.340
It's risky, but you guys can make it happen.


00:02:13.340 --> 00:02:15.380
All right, now before we jump into the main topic,


00:02:15.380 --> 00:02:18.860
Flask 2.0, you both have been on the show before,


00:02:18.860 --> 00:02:20.660
I often ask people how they got in programming


00:02:20.660 --> 00:02:21.500
in Python or whatnot.


00:02:21.500 --> 00:02:23.900
You've both answered that question previously.


00:02:23.900 --> 00:02:26.100
People can go back and hear it if they want.


00:02:26.100 --> 00:02:28.660
So how much is a catch up?


00:02:28.660 --> 00:02:29.660
What have you been on?


00:02:29.660 --> 00:02:32.140
What have you been up to since you've been on the show last?


00:02:32.140 --> 00:02:33.980
Bill, you wanna go first?


00:02:33.980 --> 00:02:37.220
- Sure, I think in open source sense,


00:02:37.220 --> 00:02:39.260
it's been, yeah, working a lot on Quartz


00:02:39.260 --> 00:02:41.900
and working more at the time.


00:02:41.900 --> 00:02:43.980
I don't think I was really helping with the pilots projects.


00:02:43.980 --> 00:02:46.020
So I've been helping with them since.


00:02:46.020 --> 00:02:49.200
And yeah, just kind of developing those two


00:02:49.200 --> 00:02:52.300
and doing a lot of work trying to get, well,


00:02:52.300 --> 00:02:54.360
the async support that's now coming to Flash,


00:02:54.360 --> 00:02:55.560
which is quite exciting.


00:02:55.560 --> 00:02:57.600
- Yeah, very exciting. - On a personal note,


00:02:57.600 --> 00:03:00.920
yeah, on a personal note, I work in London.


00:03:00.920 --> 00:03:04.020
So I've just been, I've actually worked for a few companies,


00:03:04.020 --> 00:03:06.180
tried my own startup, it didn't work, sadly,


00:03:06.180 --> 00:03:09.480
but yeah, working in London now, so that's good.


00:03:09.480 --> 00:03:12.640
- Nice, I love London, that's a fantastic town.


00:03:12.640 --> 00:03:14.080
I haven't been there in a year and a half, oddly,


00:03:14.080 --> 00:03:14.920
I don't know why.


00:03:14.920 --> 00:03:17.180
(laughing)


00:03:17.180 --> 00:03:18.860
- David, how about you?


00:03:18.860 --> 00:03:20.940
What have you been up to?


00:03:20.940 --> 00:03:23.580
- So I'm trying to remember when we did our podcast last,


00:03:23.580 --> 00:03:25.700
but it must've been like three years ago or something.


00:03:25.700 --> 00:03:26.700
- It's been a while.


00:03:26.700 --> 00:03:31.460
- So yeah, after that, I've just been


00:03:31.460 --> 00:03:35.460
working down the backlog of all the issues


00:03:35.460 --> 00:03:37.780
on Flask and palettes and all that.


00:03:37.780 --> 00:03:40.500
And now we're finally at the point


00:03:40.500 --> 00:03:43.360
where I'm confident about releasing all this stuff.


00:03:44.500 --> 00:03:47.220
So yeah, it's just been more and more open source work


00:03:47.220 --> 00:03:50.100
and then still working for the same company


00:03:50.100 --> 00:03:51.660
I've been working for for 10 years now.


00:03:51.660 --> 00:03:53.660
So that hasn't changed at all.


00:03:53.660 --> 00:03:54.480
- Yeah, that's cool.


00:03:54.480 --> 00:03:57.500
And I suspect they're pretty supportive of Flask.


00:03:57.500 --> 00:03:59.540
- Oh yeah, we get to use it internally.


00:03:59.540 --> 00:04:02.780
I actually introduced Python and Flask to the whole company


00:04:02.780 --> 00:04:04.220
way back in the day now.


00:04:04.220 --> 00:04:05.820
- Yeah, I mean, how much of an advantage is that


00:04:05.820 --> 00:04:07.780
to have somebody like you?


00:04:07.780 --> 00:04:10.700
Who is so familiar with everything, right?


00:04:10.700 --> 00:04:11.540
- Yeah.


00:04:11.540 --> 00:04:12.380
- If they didn't, they would be--


00:04:12.380 --> 00:04:16.400
- They definitely like to use that as like,


00:04:16.400 --> 00:04:17.540
hey, we've got one of the maintainers


00:04:17.540 --> 00:04:19.420
of the libraries we wanna use.


00:04:19.420 --> 00:04:20.260
- Yeah, exactly.


00:04:20.260 --> 00:04:21.840
- We bring to the table.


00:04:21.840 --> 00:04:23.100
- What's the advantage you have?


00:04:23.100 --> 00:04:26.220
Well, have you met David?


00:04:26.220 --> 00:04:27.180
No, that's fantastic.


00:04:27.180 --> 00:04:28.020
That's fantastic.


00:04:28.020 --> 00:04:28.840
And check this out.


00:04:28.840 --> 00:04:30.740
You were back on episode 177


00:04:30.740 --> 00:04:33.220
and the title was Flask goes 1.0.


00:04:33.220 --> 00:04:34.620
So I feel like, yeah, yeah.


00:04:34.620 --> 00:04:37.520
This is September 15th, 2018.


00:04:37.520 --> 00:04:38.820
So it's been a while.


00:04:38.820 --> 00:04:40.780
But also it's time to have you back


00:04:40.780 --> 00:04:43.680
because now you guys have incremented


00:04:43.680 --> 00:04:44.860
the big number in the version.


00:04:44.860 --> 00:04:46.160
Well, not quite, almost.


00:04:46.160 --> 00:04:48.420
- One more day.


00:04:48.420 --> 00:04:50.740
- Is it one more day?


00:04:50.740 --> 00:04:52.320
- Yeah, tomorrow.


00:04:52.320 --> 00:04:54.940
- Okay, so for people listening on your podcast player,


00:04:54.940 --> 00:04:57.460
that's like a week ago.


00:04:57.460 --> 00:05:00.300
But people on the live stream, one more day, fantastic.


00:05:00.300 --> 00:05:03.540
Super cool, so I see some really interesting questions


00:05:03.540 --> 00:05:05.280
from people who are watching the live stream,


00:05:05.280 --> 00:05:07.860
but let's dive into a little bit of background stuff


00:05:07.860 --> 00:05:10.480
and then I think we'll go from there.


00:05:10.480 --> 00:05:19.480
So I kind of wanted to start with the larger landscape of the web.


00:05:19.480 --> 00:05:25.480
And maybe also you could tell us about, I just threw that out there as if people would know, the Palettes Project.


00:05:25.480 --> 00:05:28.480
We talked about it a little bit with both of you.


00:05:28.480 --> 00:05:32.480
David, give us an overview of what the Palettes Project is.


00:05:32.480 --> 00:05:37.480
Because we have Flask, and we have Quart, and then we have these other libraries as well.


00:05:37.480 --> 00:05:40.120
What's the relationships of all these things?


00:05:40.120 --> 00:05:41.320
I know Core is its own thing,


00:05:41.320 --> 00:05:43.800
but it uses like Verxoic, for example.


00:05:43.800 --> 00:05:47.340
- Yeah, well, Pallets is the organization,


00:05:47.340 --> 00:05:48.960
like just an open source organization,


00:05:48.960 --> 00:05:50.760
not an actual company or anything,


00:05:50.760 --> 00:05:54.720
that maintains Flask and the libraries that Flask uses.


00:05:54.720 --> 00:06:00.080
And so that's Flask, Verxoic, Jinja,


00:06:00.080 --> 00:06:02.120
Click, It's Dangerous, and Markup Safe.


00:06:03.080 --> 00:06:08.080
And it was started, all these libraries used to be


00:06:08.080 --> 00:06:10.560
maintained by the original author Armin


00:06:10.560 --> 00:06:12.580
and his other group, Poku.


00:06:12.580 --> 00:06:18.480
And eventually they kind of grew larger than that.


00:06:18.480 --> 00:06:21.120
And the original team kind of grew to do other things.


00:06:21.120 --> 00:06:24.040
And so he formed Palettes and that's about when I joined


00:06:24.040 --> 00:06:25.800
and started maintaining everything.


00:06:25.800 --> 00:06:31.680
So, although recently I've come to the understanding


00:06:31.680 --> 00:06:34.860
that as much as I push the name Palettes,


00:06:34.860 --> 00:06:37.280
I will never have as much name recognition as Flask.


00:06:37.280 --> 00:06:39.680
And so you can also refer to things as Flask


00:06:39.680 --> 00:06:41.560
and I will know what you're talking about.


00:06:41.560 --> 00:06:42.680
- Yeah, no doubt.


00:06:42.680 --> 00:06:44.480
General Flask obviously is made up


00:06:44.480 --> 00:06:46.680
of the foundational bits as well.


00:06:46.680 --> 00:06:47.520
- Yeah, yeah.


00:06:47.520 --> 00:06:50.980
And so Palettes for a very long time


00:06:50.980 --> 00:06:53.840
was just the GitHub organization


00:06:53.840 --> 00:06:55.840
that these projects repos were under.


00:06:55.840 --> 00:06:58.960
And I've been working over time


00:06:58.960 --> 00:07:03.880
to expand that into an actual open source organization,


00:07:03.880 --> 00:07:06.320
kind of not nowhere near this yet,


00:07:06.320 --> 00:07:10.000
but inspired by like how Django Software Foundation works


00:07:10.000 --> 00:07:11.520
and those sorts of things where they do things


00:07:11.520 --> 00:07:12.660
besides just develop.


00:07:12.660 --> 00:07:17.240
So we've been working on growing the community,


00:07:17.240 --> 00:07:19.040
getting more maintainers involved,


00:07:19.040 --> 00:07:23.200
running FlaskCon last July, I think,


00:07:23.200 --> 00:07:25.720
and another one is coming up, I think, in November,


00:07:25.720 --> 00:07:27.920
is this tentative schedule.


00:07:27.920 --> 00:07:30.280
- Nice, this is obviously, I would guess online


00:07:30.280 --> 00:07:31.200
at this point.


00:07:31.200 --> 00:07:32.520
- Yeah, it'll be online still.


00:07:32.520 --> 00:07:35.600
It was online last time also and it worked out pretty well.


00:07:35.600 --> 00:07:40.600
You can go find all the videos on PyVideo.


00:07:40.600 --> 00:07:41.960
They're up there.


00:07:41.960 --> 00:07:44.400
- Yeah, yeah, fantastic.


00:07:44.400 --> 00:07:46.120
Do you have sprints or anything like that around it


00:07:46.120 --> 00:07:47.520
or is it just presentations?


00:07:47.520 --> 00:07:50.380
- We didn't do sprints last time


00:07:50.380 --> 00:07:53.600
'cause it was just our first time running a conference


00:07:53.600 --> 00:07:56.340
but we'll see what happens this year.


00:07:56.340 --> 00:07:57.180
- Yeah.


00:07:57.180 --> 00:07:59.260
- No concrete plans yet.


00:07:59.260 --> 00:08:00.940
- Yeah, fantastic.


00:08:00.940 --> 00:08:03.220
All right, I kind of wanted to start off this conversation


00:08:03.220 --> 00:08:08.220
with a wider view, just looking at the Python web space.


00:08:08.220 --> 00:08:11.700
So I put up here for us to look at


00:08:11.700 --> 00:08:13.740
the Python developer survey


00:08:13.740 --> 00:08:17.280
from the PSF and JetBrains for 2020.


00:08:17.280 --> 00:08:19.580
Obviously it's 2021, but the results for that


00:08:19.580 --> 00:08:21.060
was the last survey that have come out.


00:08:21.060 --> 00:08:24.140
And over there, we've got the web frameworks being used


00:08:24.140 --> 00:08:27.780
and these things are never comprehensive,


00:08:27.780 --> 00:08:30.820
like there's 6% of other, whatever that means.


00:08:30.820 --> 00:08:34.980
But we have Flask now clearly being the most popular one.


00:08:34.980 --> 00:08:37.220
So first of all, congratulations on that.


00:08:37.220 --> 00:08:38.060
That's awesome.


00:08:38.060 --> 00:08:42.020
I wonder if Quark was folded into Flask


00:08:42.020 --> 00:08:43.580
or if it went into the other,


00:08:43.580 --> 00:08:45.780
in a person's mind when they clicked the button,


00:08:45.780 --> 00:08:47.020
which did they click?


00:08:47.020 --> 00:08:49.220
- I imagine it's probably in the other,


00:08:49.220 --> 00:08:51.720
and a small percentage, very small.


00:08:53.740 --> 00:08:56.440
- Nice, okay, well, so this is really neat.


00:08:56.440 --> 00:09:01.260
The big, I guess the big interesting thing here as well,


00:09:01.260 --> 00:09:04.060
beyond, I think it was you and Django,


00:09:04.060 --> 00:09:06.740
at least in this previous survey in 2019,


00:09:06.740 --> 00:09:08.600
were just tied basically.


00:09:08.600 --> 00:09:10.780
So now it's, you had talked about how there's a lot


00:09:10.780 --> 00:09:12.660
of growth and a lot of momentum.


00:09:12.660 --> 00:09:14.480
And I think it's even more than what you see here


00:09:14.480 --> 00:09:15.320
on the screen.


00:09:15.320 --> 00:09:19.160
Like I think a lot of the APIs that Flask embraces


00:09:19.160 --> 00:09:22.500
in the way of doing web programming has been adopted


00:09:22.500 --> 00:09:24.920
by many of the other new frameworks as well.


00:09:24.920 --> 00:09:29.360
So for example, we have FastAPI making a jump up to 12% here


00:09:29.360 --> 00:09:31.080
which is probably the biggest difference


00:09:31.080 --> 00:09:33.400
from the year before as well.


00:09:33.400 --> 00:09:36.480
So yeah, go ahead.


00:09:36.480 --> 00:09:38.320
What do you think about this picture here?


00:09:38.320 --> 00:09:40.000
And then like, what do you think about


00:09:40.000 --> 00:09:44.320
just the Python web space in 2021, both of you?


00:09:44.320 --> 00:09:49.720
- Yeah, I mean, FastAPI is definitely gaining ground.


00:09:49.720 --> 00:09:52.560
Flask, I'm continually surprised


00:09:52.560 --> 00:09:54.160
that so many people use Flask.


00:09:54.160 --> 00:09:57.680
It's hard to wrap your head around that many people.


00:09:57.680 --> 00:09:59.960
I was just looking at the downloads this morning


00:09:59.960 --> 00:10:02.880
and it was 14 million in the last 30 days.


00:10:02.880 --> 00:10:05.800
- In the last 30 days, that's so insane.


00:10:05.800 --> 00:10:07.800
- And that's just Flask.


00:10:07.800 --> 00:10:08.920
If you look at like Jinja,


00:10:08.920 --> 00:10:11.480
'cause Jinja is used by things besides Flask,


00:10:11.480 --> 00:10:14.800
like Ansible, where they're open like the 20 somethings.


00:10:14.800 --> 00:10:17.200
- Yeah, very cool.


00:10:17.200 --> 00:10:18.840
And you can use Jinja just on its own


00:10:18.840 --> 00:10:20.520
for super interesting things as well.


00:10:20.520 --> 00:10:23.640
Like I recently did a project where I needed to generate


00:10:23.640 --> 00:10:25.460
a PDF that was like out of, you know,


00:10:25.460 --> 00:10:27.720
here's data in a dictionary and I need to make a PDF


00:10:27.720 --> 00:10:28.840
that looks formatted.


00:10:28.840 --> 00:10:31.720
And I just use Jinja and a Jinja template


00:10:31.720 --> 00:10:34.420
to generate the HTML, then feed it off to a PDF library


00:10:34.420 --> 00:10:35.880
that made it into PDF, right?


00:10:35.880 --> 00:10:38.600
There's all sorts of little edge cases like that.


00:10:38.600 --> 00:10:39.760
- And same with Click.


00:10:39.760 --> 00:10:41.900
I mean, people use Click to make actual


00:10:41.900 --> 00:10:43.000
command line applications,


00:10:43.000 --> 00:10:45.380
not just to provide a little CLI for Flask.


00:10:45.380 --> 00:10:48.580
So yeah, when you look at this,


00:10:48.580 --> 00:10:50.080
like you realize that like,


00:10:50.080 --> 00:10:52.720
oh, they're also using like all these other libraries.


00:10:52.720 --> 00:10:55.580
But I never really like think about the numbers.


00:10:55.580 --> 00:10:57.340
I guess every now and then,


00:10:57.340 --> 00:11:00.320
I remember Flask having more stars than Django on GitHub,


00:11:00.320 --> 00:11:03.160
but that was 'cause Django joined GitHub late.


00:11:03.160 --> 00:11:04.380
- Yeah. - And they've surpassed us now,


00:11:04.380 --> 00:11:07.520
but that's about the only joke metric I follow really.


00:11:07.520 --> 00:11:11.680
- Yeah. - But yeah,


00:11:11.680 --> 00:11:13.780
I've seen a lot of interest in FastAPI


00:11:13.780 --> 00:11:17.940
and I think it's nice to just see that like,


00:11:17.940 --> 00:11:19.940
- Nothing's stagnating.


00:11:19.940 --> 00:11:22.940
There's new ideas out there, people are developing,


00:11:22.940 --> 00:11:25.940
there's stable libraries that continue to develop like us,


00:11:25.940 --> 00:11:27.940
and we're still adding new features,


00:11:27.940 --> 00:11:29.940
and there's completely new ideas,


00:11:29.940 --> 00:11:32.940
or new formulations of libraries.


00:11:32.940 --> 00:11:34.940
- Yeah, I feel like we're in a bit of a Cambrian,


00:11:34.940 --> 00:11:38.940
sort of a thousand flowers blooming type of time,


00:11:38.940 --> 00:11:40.940
and many of them won't survive that,


00:11:40.940 --> 00:11:42.940
but there's a lot of fresh ideas out there,


00:11:42.940 --> 00:11:44.940
and it's pretty exciting.


00:11:44.940 --> 00:11:46.940
- Yeah, like having a healthy ecosystem,


00:11:46.940 --> 00:11:53.340
choice that you can choose whether a certain framework is more appropriate for the project


00:11:53.340 --> 00:11:58.540
you're starting or working on, I think is really powerful for users and maintainers.


00:11:58.540 --> 00:12:00.260
- Yeah, and you can borrow ideas too.


00:12:00.260 --> 00:12:03.460
Like, "Oh, I see the way FastAPI is doing types to mean this.


00:12:03.460 --> 00:12:07.020
Maybe that makes sense to allow that as an option somewhere else."


00:12:07.020 --> 00:12:08.020
Who knows, right?


00:12:08.020 --> 00:12:13.460
- Well, one thing I quite like to take from this list is Falcon has a really quite exciting


00:12:13.460 --> 00:12:20.180
router and I think it might be a little too much for Verksug perhaps but I've been playing around


00:12:20.180 --> 00:12:24.580
with taking the ideas from Falcon and bringing it to Verksug so what makes it exciting is it's a


00:12:24.580 --> 00:12:30.580
very fast matching system and yeah should outperform the Verksug router if we can get it in


00:12:30.580 --> 00:12:36.260
by a good fraction so that'll be exciting. Yeah there's a lot of interplay here that I think is


00:12:36.260 --> 00:12:41.780
pretty neat and while we're on this sort of broad topic, Rohit asks out in the live stream


00:12:41.780 --> 00:12:44.700
What are the advantages of using Flask over Django?


00:12:44.700 --> 00:12:48.260
Maybe that pairs them up a little bit too tight,


00:12:48.260 --> 00:12:49.500
but look at this list.


00:12:49.500 --> 00:12:51.100
These are the ones that probably the trade-offs


00:12:51.100 --> 00:12:52.500
people are thinking about.


00:12:52.500 --> 00:12:57.540
- Yeah, this gets harder for me to answer over time


00:12:57.540 --> 00:13:00.040
'cause I haven't used Django in a long time,


00:13:00.040 --> 00:13:04.740
but it's hard to compare them one to one.


00:13:04.740 --> 00:13:06.920
It's like apples and oranges, right?


00:13:06.920 --> 00:13:09.220
Like I said a couple of minutes ago,


00:13:10.860 --> 00:13:13.140
you're choosing the project that's most appropriate


00:13:13.140 --> 00:13:16.000
or the framework that's more appropriate for your project


00:13:16.000 --> 00:13:17.380
and the way you wanna work.


00:13:17.380 --> 00:13:20.880
So it's not necessarily that you're going to be losing out


00:13:20.880 --> 00:13:23.980
or getting any given feature by choosing one or the other.


00:13:23.980 --> 00:13:28.180
It's about how they feel when you're working on them.


00:13:28.180 --> 00:13:30.820
Like sometimes Django makes more sense to people


00:13:30.820 --> 00:13:32.640
or FastAPI makes more sense.


00:13:32.640 --> 00:13:36.340
And then like they also have different goals, right?


00:13:36.340 --> 00:13:40.820
Like Flask is deliberately just the web framework


00:13:40.820 --> 00:13:45.040
and wrapping some other libraries around it.


00:13:45.040 --> 00:13:49.420
But its goal is that if you want other features,


00:13:49.420 --> 00:13:52.500
somebody develops an extension that is specific to that


00:13:52.500 --> 00:13:54.180
and you add that on.


00:13:54.180 --> 00:13:57.740
And I mean, Django, I don't know about FastAPI yet,


00:13:57.740 --> 00:13:59.020
but like Django has the same idea.


00:13:59.020 --> 00:14:02.060
It's just how many batteries they decide to include


00:14:02.060 --> 00:14:02.900
is different.


00:14:02.900 --> 00:14:04.180
- Yeah, yeah, yeah.


00:14:04.180 --> 00:14:05.380
Phil, you wanna take a shot at this


00:14:05.380 --> 00:14:08.380
before I give my thoughts as well, maybe?


00:14:08.380 --> 00:14:10.660
- Yeah, I think specifically Flask and Django,


00:14:10.660 --> 00:14:13.460
I always thought it came down to a choice


00:14:13.460 --> 00:14:15.220
about how to do things like Flask


00:14:15.220 --> 00:14:16.420
doesn't really give you an answer


00:14:16.420 --> 00:14:18.260
and you can go and choose from the extensions


00:14:18.260 --> 00:14:19.420
whereas Django does.


00:14:19.420 --> 00:14:22.820
And yeah, I think it's like David said,


00:14:22.820 --> 00:14:24.420
a bit of what your preference is really,


00:14:24.420 --> 00:14:26.220
what you prefer.


00:14:26.220 --> 00:14:27.060
- Yeah.


00:14:27.060 --> 00:14:30.900
- I mean, Django's making huge strides in async also


00:14:30.900 --> 00:14:32.860
and we're adapting to that too,


00:14:32.860 --> 00:14:36.180
but they all have different solutions to the same thing.


00:14:36.180 --> 00:14:37.580
Approaches in different directions.


00:14:37.580 --> 00:14:38.420
- Yeah, definitely.


00:14:38.420 --> 00:14:39.340
There's a lot of interesting stuff happening


00:14:39.340 --> 00:14:41.340
and Django around this as well.


00:14:41.340 --> 00:14:44.300
So the way I see it is, you know, Flask,


00:14:44.300 --> 00:14:45.620
it's like an empty canvas,


00:14:45.620 --> 00:14:48.300
and it's got just a few really nice little building blocks,


00:14:48.300 --> 00:14:50.100
and then you can build what you want, right?


00:14:50.100 --> 00:14:52.180
Do you wanna use Postgres and SQLAlchemy?


00:14:52.180 --> 00:14:53.300
Great, that's totally easy.


00:14:53.300 --> 00:14:55.580
You wanna use MongoDB and MongoEngine?


00:14:55.580 --> 00:14:57.140
Equally easy, go have fun, right?


00:14:57.140 --> 00:14:59.820
Like you can pick just the little bits


00:14:59.820 --> 00:15:00.640
that you really like,


00:15:00.640 --> 00:15:02.580
you don't have any other bits to worry about,


00:15:02.580 --> 00:15:04.340
and then you're good to go, right?


00:15:04.340 --> 00:15:06.620
Django, it's like, well,


00:15:06.620 --> 00:15:08.780
if you wanna break from the Django Rm,


00:15:08.780 --> 00:15:11.860
Probably you can do it, but it's, you kind of,


00:15:11.860 --> 00:15:15.020
there's a little bit of a mismatch there.


00:15:15.020 --> 00:15:17.500
You kind of got to work around it.


00:15:17.500 --> 00:15:19.620
It's advantages kind of become less good, right?


00:15:19.620 --> 00:15:21.780
Like it's admin tools might not work as well


00:15:21.780 --> 00:15:23.920
if you try to say switch to Mongo


00:15:23.920 --> 00:15:25.060
or something along those lines.


00:15:25.060 --> 00:15:27.620
And if what you want is like,


00:15:27.620 --> 00:15:30.520
I'm not really sure what I'm doing to build this website.


00:15:30.520 --> 00:15:32.100
And I just want some guidance,


00:15:32.100 --> 00:15:34.660
like just show me the main way and I'll just do that.


00:15:34.660 --> 00:15:37.140
I don't, I just would like to go along for the flow.


00:15:37.140 --> 00:15:38.780
I think Django is fantastic for that.


00:15:38.780 --> 00:15:40.900
It gives you like really good pre-built tools


00:15:40.900 --> 00:15:43.060
like the admin stuff and whatnot.


00:15:43.060 --> 00:15:45.200
But if you really care very much


00:15:45.200 --> 00:15:46.580
about which little piece you pick


00:15:46.580 --> 00:15:48.060
and want to put them together just so,


00:15:48.060 --> 00:15:49.940
I feel like you're better off with a micro framework


00:15:49.940 --> 00:15:51.540
of some sort like Flask.


00:15:51.540 --> 00:15:53.620
Anyway, that's my view.


00:15:53.620 --> 00:15:55.620
And I know some people love one side


00:15:55.620 --> 00:15:56.940
and hate the other and vice versa.


00:15:56.940 --> 00:15:59.060
So it's also a personal challenge


00:15:59.060 --> 00:16:01.820
or a personal thing you gotta work out for.


00:16:01.820 --> 00:16:03.980
Where do you fit on that spectrum?


00:16:05.240 --> 00:16:07.840
- Yeah, I mean, I personally started with Django.


00:16:07.840 --> 00:16:11.360
Flask was just being started when I was starting


00:16:11.360 --> 00:16:13.640
to learn Python and web frameworks.


00:16:13.640 --> 00:16:16.280
And then I eventually ran into something


00:16:16.280 --> 00:16:19.120
where I wanted to do things that Django


00:16:19.120 --> 00:16:23.120
wasn't designed to do, obviously.


00:16:23.120 --> 00:16:26.280
And I started running into a bunch of stuff


00:16:26.280 --> 00:16:27.960
and so I switched to Flask.


00:16:27.960 --> 00:16:28.780
- Yeah, that's cool.


00:16:28.780 --> 00:16:32.560
And you know, if you come from an ecosystem


00:16:32.560 --> 00:16:36.000
where there's like clearly one choice for a lot of things.


00:16:36.000 --> 00:16:37.800
You know, if you come from Ruby, okay,


00:16:37.800 --> 00:16:40.640
you got Rails and the Ruby ORM,


00:16:40.640 --> 00:16:43.080
come from Microsoft, you got ASP.NET and a framework,


00:16:43.080 --> 00:16:46.980
like you don't have decisions, you just do the thing


00:16:46.980 --> 00:16:49.120
and then eventually you build your app, right?


00:16:49.120 --> 00:16:51.060
You come to Python, there's like, you know,


00:16:51.060 --> 00:16:52.880
20 different choices at each level.


00:16:52.880 --> 00:16:54.520
And you're like, this is like the paradox of choice.


00:16:54.520 --> 00:16:56.640
This, even though it's in some ways, it's great.


00:16:56.640 --> 00:16:58.800
In other ways, you're like, I have no idea what to do.


00:16:58.800 --> 00:17:02.440
And so I think that can be a challenge for people as well.


00:17:02.440 --> 00:17:03.280
- Yeah.


00:17:03.280 --> 00:17:04.760
- But also an advantage once you get into it.


00:17:04.760 --> 00:17:06.360
- Yeah, I think your best bet,


00:17:06.360 --> 00:17:07.720
if you're asking the question,


00:17:07.720 --> 00:17:09.440
should I use Django or Flask,


00:17:09.440 --> 00:17:13.960
is to just pick one and learn enough,


00:17:13.960 --> 00:17:16.240
like you know about that framework.


00:17:16.240 --> 00:17:17.720
And I think you will be better equipped


00:17:17.720 --> 00:17:19.920
to answer that question for your project


00:17:19.920 --> 00:17:21.500
next time you have to ask it.


00:17:21.500 --> 00:17:22.340
- Yeah, that's awesome.


00:17:22.340 --> 00:17:23.960
- It doesn't really matter what you start with.


00:17:23.960 --> 00:17:26.520
- All right, before we get into a more specific,


00:17:26.520 --> 00:17:29.480
so sort of a general Flask question as well,


00:17:29.480 --> 00:17:30.880
Pradibhan says,


00:17:30.880 --> 00:17:32.680
since Flask started as an April Fool's joke,


00:17:32.680 --> 00:17:36.760
does the core team, David and crew,


00:17:36.760 --> 00:17:39.120
have any traditions around April Fools?


00:17:39.120 --> 00:17:41.520
I hadn't thought about that.


00:17:41.520 --> 00:17:42.400
It's a good question.


00:17:42.400 --> 00:17:43.760
- Every time somebody brings up


00:17:43.760 --> 00:17:44.880
that it was made on April Fools,


00:17:44.880 --> 00:17:46.520
I remember that it was made on April Fools.


00:17:46.520 --> 00:17:48.280
I always forget that.


00:17:48.280 --> 00:17:51.640
- So I'm guessing not too many ones.


00:17:51.640 --> 00:17:52.480
Okay.


00:17:52.480 --> 00:17:53.400
- We don't have like a birthday party


00:17:53.400 --> 00:17:55.800
or anything or celebration.


00:17:55.800 --> 00:17:56.880
Maybe we should.


00:17:56.880 --> 00:17:58.520
- Yeah, maybe we should.


00:17:58.520 --> 00:17:59.360
There you go.


00:17:59.360 --> 00:18:00.200
There you go.


00:18:00.200 --> 00:18:03.280
- I think you put out a blog for last year,


00:18:03.280 --> 00:18:04.320
10 years, didn't you?


00:18:04.320 --> 00:18:06.720
That was quite a good celebration,


00:18:06.720 --> 00:18:07.560
but I think that was about it.


00:18:07.560 --> 00:18:08.440
- Oh, maybe, yeah.


00:18:08.440 --> 00:18:12.280
It's been 10 years for a lot of the libraries at this point.


00:18:12.280 --> 00:18:13.180
- Yeah, very cool.


00:18:13.180 --> 00:18:16.800
So let's talk Flask 2.0.


00:18:16.800 --> 00:18:20.120
You know, it's been a couple of years it went to 1.0.


00:18:20.120 --> 00:18:21.840
It was on the zero-vert train


00:18:21.840 --> 00:18:24.360
like so many projects were before then, right?


00:18:24.360 --> 00:18:26.040
And that doesn't really mean


00:18:26.040 --> 00:18:27.840
that it was such a huge transition,


00:18:27.840 --> 00:18:29.980
but there's a lot of stuff changing.


00:18:29.980 --> 00:18:31.280
not necessarily in a breaking way,


00:18:31.280 --> 00:18:34.440
but a lot of new things in Flask too.


00:18:34.440 --> 00:18:36.420
Give us the exciting news.


00:18:36.420 --> 00:18:40.920
- Well, the biggest one is probably async.


00:18:40.920 --> 00:18:42.420
I'll let Phil talk about that.


00:18:42.420 --> 00:18:48.280
- Yeah, there's like a async for Flask directly


00:18:48.280 --> 00:18:50.480
and then like maybe tighter integration with core type


00:18:50.480 --> 00:18:52.900
of next level async, right?


00:18:52.900 --> 00:18:55.200
- Yeah, exactly.


00:18:55.200 --> 00:18:59.040
So with Flask too, you'll be able to write async


00:18:59.040 --> 00:19:00.360
view handlers or root handlers,


00:19:00.360 --> 00:19:01.760
depending on what you like to call them,


00:19:01.760 --> 00:19:05.920
before and after request handlers and tear down functions.


00:19:05.920 --> 00:19:09.080
So it won't require any special effort


00:19:09.080 --> 00:19:11.680
other than installing Flask with the extra support.


00:19:11.680 --> 00:19:13.080
But then you can just write a sink and a wait


00:19:13.080 --> 00:19:15.380
and carry on with your current setup.


00:19:15.380 --> 00:19:17.420
You don't have to change anything else.


00:19:17.420 --> 00:19:19.560
- Yeah, that's super neat.


00:19:19.560 --> 00:19:21.520
And you actually gave a talk,


00:19:21.520 --> 00:19:24.720
was it May 1st or something, 10 days ago?


00:19:24.720 --> 00:19:25.720
What was it called?


00:19:25.720 --> 00:19:28.520
It was, "Why isn't Flask async?"


00:19:28.520 --> 00:19:32.100
And obviously, that's leading into where things are going.


00:19:32.100 --> 00:19:37.100
You want to tell people a little bit about some of the ideas there?


00:19:37.100 --> 00:19:39.600
You talked about the history,


00:19:39.600 --> 00:19:43.600
obviously, Flask being a WSGI application.


00:19:43.600 --> 00:19:48.340
Those are all naturally having a hard time moving to async


00:19:48.340 --> 00:19:51.340
because the server itself needs to know.


00:19:51.340 --> 00:19:53.840
But then you also talked about some of the things


00:19:53.840 --> 00:20:03.600
that are happening to allow some asyncs to run directly without any server changes,


00:20:03.600 --> 00:20:06.080
and then to move into an ASGI server.


00:20:06.080 --> 00:20:09.200
Yeah, so what's the story?


00:20:09.200 --> 00:20:09.840
Yeah, exactly.


00:20:09.840 --> 00:20:14.480
So yeah, so obviously Flask started as a Whiskey framework.


00:20:14.480 --> 00:20:16.720
I think it was probably Whiskey from the start, right?


00:20:16.720 --> 00:20:17.920
So yeah, I know.


00:20:17.920 --> 00:20:21.360
Yeah, so I couldn't quite remember when Whiskey was introduced.


00:20:21.360 --> 00:20:23.360
So yeah, and obviously before Async/Await.


00:20:23.360 --> 00:20:27.280
all these different servers and I don't want to have just this framework run on that server.


00:20:27.280 --> 00:20:32.400
So, WSGI is born, right? But born in a world where async was less common.


00:20:32.400 --> 00:20:38.320
Yes, but what it has supported the whole time and I think that's good to point out is Flask has been


00:20:38.320 --> 00:20:44.160
async the entire time just using green nets and a lot of people use that very effectively. I think


00:20:44.160 --> 00:20:50.400
it's absolutely fine and that for us I think was one of the key things to bear in mind that Flask


00:20:50.400 --> 00:20:54.720
works async, and if we introduce async/await, we can't be breaking that at the same time.


00:20:54.720 --> 00:21:00.800
So that was one of the big constraints, really. And then, so for the one side, it's keeping support


00:21:00.800 --> 00:21:06.080
with those existing async solutions, and the other is introducing the async/await keywords, which


00:21:06.080 --> 00:21:11.360
I think everyone has heard of the color problem and the virality associated with that, which makes


00:21:11.360 --> 00:21:16.720
it actually really hard to get a little bit deep into the call stack, if you will, async, without


00:21:16.720 --> 00:21:20.400
really having to change the whole call stack to async in one sweep.


00:21:20.400 --> 00:21:23.680
Yeah, the challenge, maybe I'll try to give a little bit of background just for


00:21:23.680 --> 00:21:26.880
people listening, is if I've got some low-level data


00:21:26.880 --> 00:21:29.920
access library or service access library for like


00:21:29.920 --> 00:21:33.520
using HTTPS or something, in order to await the thing at the bottom


00:21:33.520 --> 00:21:36.960
that has to be an async method, the next level up in order to call that method


00:21:36.960 --> 00:21:40.480
it's got to be async, you got to await it, so it's method's


00:21:40.480 --> 00:21:44.400
got to be async and it just it goes up the entire call stack in a


00:21:44.400 --> 00:21:46.280
in a lot of cases, right?


00:21:46.280 --> 00:21:47.200
- Yeah, yeah.


00:21:47.200 --> 00:21:51.100
So what it came down to and what we did was follow Django,


00:21:51.100 --> 00:21:52.600
what Django have already done really.


00:21:52.600 --> 00:21:55.880
And what they've figured out is that you can run


00:21:55.880 --> 00:21:58.040
the asyncio event loop in one thread


00:21:58.040 --> 00:22:01.160
and the greenlet based one or whatever you were doing


00:22:01.160 --> 00:22:02.840
previously in the main thread


00:22:02.840 --> 00:22:05.080
and then everything coexists nicely.


00:22:05.080 --> 00:22:07.720
You just need these wrappers to move things


00:22:07.720 --> 00:22:09.260
from one thread to another.


00:22:09.260 --> 00:22:10.960
And that library, if you're interested,


00:22:10.960 --> 00:22:13.280
is called ASCII ref.


00:22:13.280 --> 00:22:16.480
but using that allows us to have this async code


00:22:16.480 --> 00:22:20.320
in the view handler, but keep flash synchronous in the rest


00:22:20.320 --> 00:22:23.920
and keep support with GreenNet, which is really nice.


00:22:23.920 --> 00:22:24.820
- Yeah, that's really nice.


00:22:24.820 --> 00:22:27.120
And in production in a lot of the servers,


00:22:27.120 --> 00:22:31.560
it has threaded modes already that if,


00:22:31.560 --> 00:22:33.040
like you're awaiting something


00:22:33.040 --> 00:22:34.880
and then something talks to a network,


00:22:34.880 --> 00:22:38.640
like a database call or a web service call or something,


00:22:38.640 --> 00:22:40.600
it's going to release the GIL anyway


00:22:40.600 --> 00:22:41.800
and the other threads can run.


00:22:41.800 --> 00:22:44.180
So that can probably push out pretty far


00:22:44.180 --> 00:22:46.120
just on its own, right?


00:22:46.120 --> 00:22:48.200
- Yeah, I think it's been very effective


00:22:48.200 --> 00:22:49.440
to a lot of companies.


00:22:49.440 --> 00:22:50.720
I know companies that use it,


00:22:50.720 --> 00:22:52.400
I think it's been really nice.


00:22:52.400 --> 00:22:54.320
So that's what we've got to.


00:22:54.320 --> 00:22:56.380
And I think you were talking about where can we go?


00:22:56.380 --> 00:22:59.800
Can we go fully async and ASCII with Flask?


00:22:59.800 --> 00:23:03.280
And this is possibly more of my personal opinion,


00:23:03.280 --> 00:23:05.840
but I'm not sure it is possible to go there with Flask.


00:23:05.840 --> 00:23:07.280
'Cause I think if you do so,


00:23:07.280 --> 00:23:10.840
you end up breaking extension support.


00:23:10.840 --> 00:23:12.360
'cause it's quite common for extensions


00:23:12.360 --> 00:23:15.680
to extend the Flask class and change the methods,


00:23:15.680 --> 00:23:17.160
but of course they won't be async.


00:23:17.160 --> 00:23:19.760
So how are they gonna deal with that?


00:23:19.760 --> 00:23:20.840
So- - Yeah.


00:23:20.840 --> 00:23:22.880
There's the compatibility problem,


00:23:22.880 --> 00:23:26.240
but, and then there's also just the problem


00:23:26.240 --> 00:23:28.320
of having to mark everything as async await


00:23:28.320 --> 00:23:29.480
if you mark one thing.


00:23:29.480 --> 00:23:34.320
And we might discover,


00:23:34.320 --> 00:23:36.100
I'm a little more optimistic than Phil,


00:23:36.100 --> 00:23:38.100
but I'm also not as experienced with it.


00:23:39.300 --> 00:23:42.300
But I would like it to be possible,


00:23:42.300 --> 00:23:44.540
like at some point for us, you know,


00:23:44.540 --> 00:23:49.500
we're focusing on like making a VeriXoic Sans I/O,


00:23:49.500 --> 00:23:54.500
so it doesn't require blocking I/O operations


00:23:54.500 --> 00:23:56.060
when you make requests and stuff,


00:23:56.060 --> 00:23:59.780
so that you can use it in ASGI situations.


00:23:59.780 --> 00:24:01.340
And that's gonna be a slow process,


00:24:01.340 --> 00:24:04.100
we're not like 100% done with it or anything like that.


00:24:04.100 --> 00:24:08.540
But my hope is that as we make VeriXoic completely,


00:24:08.540 --> 00:24:13.260
like IO agnostic,


00:24:13.260 --> 00:24:17.820
we might discover some ways to adopt Flask.


00:24:17.820 --> 00:24:18.940
- Yeah.


00:24:18.940 --> 00:24:21.180
- But it's also not 100% necessary


00:24:21.180 --> 00:24:22.680
because core exists also.


00:24:22.680 --> 00:24:24.500
(laughing)


00:24:24.500 --> 00:24:25.820
- That's an interesting point.


00:24:25.820 --> 00:24:30.820
Maybe there's a way to implement some of those extension.


00:24:30.820 --> 00:24:36.520
So the problem is the extensions override certain functions


00:24:36.520 --> 00:24:38.520
that are part of the lifecycle of requests,


00:24:38.520 --> 00:24:41.320
and those are expected to be synchronous functions


00:24:41.320 --> 00:24:43.320
because they had been for all of time.


00:24:43.320 --> 00:24:45.320
You can't just make those async


00:24:45.320 --> 00:24:47.320
and have those extensions still work.


00:24:47.320 --> 00:24:49.320
At best, they're going to be kicking out


00:24:49.320 --> 00:24:51.320
unstarted coroutines.


00:24:51.320 --> 00:24:53.320
It's probably worse than that,


00:24:53.320 --> 00:24:55.320
but maybe that's what they do.


00:24:55.320 --> 00:24:57.920
I don't know. Something is not going to go super well,


00:24:57.920 --> 00:25:00.520
but maybe you can create synchronous wrappers


00:25:00.520 --> 00:25:02.520
around the async stuff that can


00:25:02.520 --> 00:25:05.520
grab an event loop and run it.


00:25:05.520 --> 00:25:06.360
or something, I don't know.


00:25:06.360 --> 00:25:08.800
Like some, there could be some sort of an adaptation thing


00:25:08.800 --> 00:25:10.520
where just the sync version,


00:25:10.520 --> 00:25:12.680
maybe it's not quite as fast or something.


00:25:12.680 --> 00:25:13.760
I'm not sure.


00:25:13.760 --> 00:25:16.920
Yeah, as much as you guys have, I have way less than that.


00:25:16.920 --> 00:25:21.000
- I was gonna say, I think with Flask 2,


00:25:21.000 --> 00:25:23.760
I think this is, in my opinion, where you wanna be


00:25:23.760 --> 00:25:26.880
because the motivation in my mind is you wanna use


00:25:26.880 --> 00:25:28.840
some async based library


00:25:28.840 --> 00:25:30.400
and there's some exciting ones out there


00:25:30.400 --> 00:25:31.680
so I can fully understand that.


00:25:31.680 --> 00:25:33.960
And you can now in Flask and it will work


00:25:33.960 --> 00:25:36.920
and it will work with your existing setups.


00:25:36.920 --> 00:25:40.000
I think the only reason you could want to go fully async


00:25:40.000 --> 00:25:43.540
is because you're only using async libraries perhaps,


00:25:43.540 --> 00:25:45.680
or perhaps you might see a bit


00:25:45.680 --> 00:25:47.360
of performance improvement there,


00:25:47.360 --> 00:25:50.200
which isn't necessarily guaranteed by the way.


00:25:50.200 --> 00:25:51.720
For that though, I think there's court.


00:25:51.720 --> 00:25:54.560
So I kind of think all the users' motivations


00:25:54.560 --> 00:25:57.920
might be covered now, which I think is really exciting.


00:25:57.920 --> 00:25:59.440
- That is very exciting.


00:25:59.440 --> 00:26:02.520
- Yeah, and our goal is just to get court


00:26:02.520 --> 00:26:08.040
flask as API compatible as possible. And they're already very, very close. But you know, moving


00:26:08.040 --> 00:26:14.040
very exciting that and so like, ideally, it should just be a drop in like name replace


00:26:14.040 --> 00:26:15.040
for everything.


00:26:15.040 --> 00:26:20.120
Yeah, and you could probably pull it off with just the right import statement, right? Import


00:26:20.120 --> 00:26:23.520
court as flask, or something potentially almost.


00:26:23.520 --> 00:26:26.100
(all laughing)


00:26:26.100 --> 00:26:30.040
- There's some monkey patching in Quark


00:26:30.040 --> 00:26:33.440
where you can tell everything else that Quark is Flask.


00:26:33.440 --> 00:26:36.000
So you can use some of the Flask extensions with Quark


00:26:36.000 --> 00:26:38.040
by allowing Quark to pretend it is Flask.


00:26:38.040 --> 00:26:39.600
This is kind of fun.


00:26:39.600 --> 00:26:41.680
- Yeah, yeah, that is quite wild.


00:26:41.680 --> 00:26:44.280
- I did see a question,


00:26:44.280 --> 00:26:47.360
will Flask break current extensions?


00:26:47.360 --> 00:26:52.360
No, our goal was still compatibility and stability.


00:26:52.740 --> 00:26:55.860
So we are making major releases


00:26:55.860 --> 00:26:56.980
and we are adding new features,


00:26:56.980 --> 00:27:01.820
but it shouldn't permanently break anything.


00:27:01.820 --> 00:27:03.860
There might be someone foreseeing incompatibility


00:27:03.860 --> 00:27:05.860
that a library needs to update for,


00:27:05.860 --> 00:27:08.000
but it's not like they will suddenly have to rewrite


00:27:08.000 --> 00:27:09.840
their whole thing async or something.


00:27:09.840 --> 00:27:12.100
- If it breaks it, it's not on purpose.


00:27:12.100 --> 00:27:12.940
- Right.


00:27:12.940 --> 00:27:13.780
(laughing)


00:27:13.780 --> 00:27:14.600
- Yeah, yeah.


00:27:14.600 --> 00:27:16.500
- That makes it sound bad too, but.


00:27:16.500 --> 00:27:18.140
- No, no, I mean, like your intention


00:27:18.140 --> 00:27:20.160
is to have it be compatible, right?


00:27:20.160 --> 00:27:21.780
- Yeah, yeah.


00:27:21.780 --> 00:27:23.500
That's always the intention of these libraries.


00:27:23.500 --> 00:27:24.900
They're meant to be very stable.


00:27:24.900 --> 00:27:29.100
And it's actually one of the things I've been working on


00:27:29.100 --> 00:27:31.460
as a maintainer, as I've been maintaining these


00:27:31.460 --> 00:27:34.920
over the years, is when I do make releases


00:27:34.920 --> 00:27:38.980
or when I make changes, I try to make everything


00:27:38.980 --> 00:27:40.780
show a deprecation warning first,


00:27:40.780 --> 00:27:43.400
and then only remove it in the version after that.


00:27:43.400 --> 00:27:48.540
So I do want to evolve things and refactor things


00:27:48.540 --> 00:27:52.300
or identify patterns that weren't great


00:27:52.300 --> 00:27:54.140
or that aren't needed anymore


00:27:54.140 --> 00:27:56.060
since we're dropping Python 2.


00:27:56.060 --> 00:27:57.600
And I do want to evolve the libraries,


00:27:57.600 --> 00:27:58.900
but I don't want to break anybody


00:27:58.900 --> 00:28:00.340
without warning them first.


00:28:00.340 --> 00:28:03.460
And so there's a ton of deprecation warnings


00:28:03.460 --> 00:28:05.260
in all the libraries this time.


00:28:05.260 --> 00:28:06.100
- That's cool.


00:28:06.100 --> 00:28:06.920
So speaking of that, yeah,


00:28:06.920 --> 00:28:09.760
I saw this really nice flask 2.0 is coming.


00:28:09.760 --> 00:28:11.300
Please help us test.


00:28:11.300 --> 00:28:14.020
By Stetio, I don't know who this is.


00:28:14.020 --> 00:28:15.740
If you know, maybe you can give him a shout out.


00:28:15.740 --> 00:28:17.060
- Oh, that's me, yeah.


00:28:17.060 --> 00:28:17.900
- Is that you?


00:28:17.900 --> 00:28:19.940
- Yeah, perfect.


00:28:19.940 --> 00:28:21.580
All right, yeah, so from you, Phil,


00:28:21.580 --> 00:28:22.860
and you said from the changelog,


00:28:22.860 --> 00:28:24.580
one of the things coming, well, first of all,


00:28:24.580 --> 00:28:27.380
one of the things coming is Python 3+, sorry,


00:28:27.380 --> 00:28:30.700
3.6+ only dropping 2 for sure,


00:28:30.700 --> 00:28:32.760
and even 3.5, that's pretty interesting.


00:28:32.760 --> 00:28:35.740
- Well, 3.5 is end of life now.


00:28:35.740 --> 00:28:39.740
- Yeah, it seems so new in my mind,


00:28:39.740 --> 00:28:43.460
but it's clearly not that new anymore.


00:28:43.460 --> 00:28:46.360
- When I first made the announcement of dropping Python 2,


00:28:47.620 --> 00:28:51.260
3.5 wasn't gonna go end of life until like nine months later,


00:28:51.260 --> 00:28:53.980
but I decided to, I was gonna drop 3.5 anyway.


00:28:53.980 --> 00:28:55.780
We won't usually do that.


00:28:55.780 --> 00:28:58.220
Usually we're gonna, our plan is to try to wait


00:28:58.220 --> 00:29:02.560
for the actual official end of life for Pythons for now on.


00:29:02.560 --> 00:29:06.780
But 3.5 just, it was so much more convenient


00:29:06.780 --> 00:29:08.420
to drop it at the same time.


00:29:08.420 --> 00:29:09.980
And 3.6 is still supported,


00:29:09.980 --> 00:29:13.700
but the next versions after these will be 3.7 only


00:29:13.700 --> 00:29:15.400
because 3.6 will have gone end of life


00:29:15.400 --> 00:29:18.400
probably by the time we make new releases.


00:29:18.400 --> 00:29:19.580
- Right, right.


00:29:19.580 --> 00:29:20.420
Okay, very cool.


00:29:20.420 --> 00:29:22.640
And how much the five versus six,


00:29:22.640 --> 00:29:24.440
was it just that three five is going out


00:29:24.440 --> 00:29:25.820
or versus f-strings?


00:29:25.820 --> 00:29:30.300
- We do use f-strings all over the place now,


00:29:30.300 --> 00:29:31.600
but that wasn't the reason.


00:29:31.600 --> 00:29:33.480
I mean, since we were doing three six plus,


00:29:33.480 --> 00:29:36.280
I decided to like use f-strings in a lot of places.


00:29:36.280 --> 00:29:41.280
I don't remember what was inconvenient about three five,


00:29:41.280 --> 00:29:42.440
but there, I mean,


00:29:43.600 --> 00:29:45.080
- I think async was slightly different.


00:29:45.080 --> 00:29:46.080
- This was a year and a half ago now


00:29:46.080 --> 00:29:47.400
when I wrote this extension. - Yeah, yeah, yeah, sure.


00:29:47.400 --> 00:29:48.240
Yeah, yeah.


00:29:48.240 --> 00:29:50.640
I mean, look, if you're switching to two,


00:29:50.640 --> 00:29:53.280
it's a chance for a nice break from some of these things,


00:29:53.280 --> 00:29:54.880
even if they've got a few months left.


00:29:54.880 --> 00:29:57.120
- Yeah, I was originally,


00:29:57.120 --> 00:30:01.760
originally 2.0 was just going to be dropping Python 2


00:30:01.760 --> 00:30:04.480
and making maybe a few minor changes,


00:30:04.480 --> 00:30:08.880
and then I got anxiety about making releases


00:30:08.880 --> 00:30:10.200
and breaking everybody's stuff,


00:30:10.200 --> 00:30:12.960
and so I just kept working on more and more stuff


00:30:12.960 --> 00:30:15.980
in the 2.0 instead of releasing it.


00:30:15.980 --> 00:30:19.960
But because it's 2.0, that also kind of gave me


00:30:19.960 --> 00:30:22.520
the opportunity to like identify more stuff


00:30:22.520 --> 00:30:25.320
that I wanted to deprecate than normal maybe, or.


00:30:25.320 --> 00:30:27.040
- Yeah, but it's a perfect time to do it


00:30:27.040 --> 00:30:29.600
with such a big version change, yeah.


00:30:29.600 --> 00:30:31.440
Version number change.


00:30:31.440 --> 00:30:33.280
All right, I wanna pull out a few more things


00:30:33.280 --> 00:30:36.560
from now that I know it's Phil's Reddit post here,


00:30:36.560 --> 00:30:41.560
which got 1,300 upvotes, that's pretty awesome.


00:30:41.860 --> 00:30:42.940
- A short form of decorators.


00:30:42.940 --> 00:30:47.940
So instead of for routes or routes for you in London,


00:30:47.940 --> 00:30:53.100
instead of app.route, you know, specifying get or post,


00:30:53.100 --> 00:30:55.260
you can just do app.get, app.post.


00:30:55.260 --> 00:30:57.020
That's that seems easy, but nice.


00:30:57.020 --> 00:31:02.020
- Yeah, it's just a bit of a syntactic sugar really.


00:31:02.020 --> 00:31:04.460
It should, yeah, should make it look nicer.


00:31:04.460 --> 00:31:06.660
It's something going back to the ecosystem.


00:31:06.660 --> 00:31:09.180
It's something the other frameworks will seem to adopt


00:31:09.180 --> 00:31:11.340
and it's nice to steal.


00:31:11.340 --> 00:31:12.780
- Yeah, yeah, that's one of the big differences


00:31:12.780 --> 00:31:15.220
I've been seeing from the other frameworks


00:31:15.220 --> 00:31:16.620
that they're very much like Flask,


00:31:16.620 --> 00:31:18.680
but they kind of put the verbs on the decorators


00:31:18.680 --> 00:31:19.520
a little bit more.


00:31:19.520 --> 00:31:21.460
So why not take it back


00:31:21.460 --> 00:31:23.220
if you inspired them in the first place?


00:31:23.220 --> 00:31:25.800
Also, you know, blueprints, man,


00:31:25.800 --> 00:31:28.300
blueprints are something I think


00:31:28.300 --> 00:31:31.420
do not get enough attention and love


00:31:31.420 --> 00:31:34.420
because they are so nice for organizing your code


00:31:34.420 --> 00:31:38.020
into little bits and little categories of functionality


00:31:38.020 --> 00:31:39.300
instead of, you know,


00:31:39.300 --> 00:31:42.980
trying to associate them all with the main app, the app.


00:31:42.980 --> 00:31:46.820
So there's some news around that for updates as well, right?


00:31:46.820 --> 00:31:47.660
- Yeah.


00:31:47.660 --> 00:31:51.460
- One of the oldest standing open issues,


00:31:51.460 --> 00:31:53.660
Phil decided just like, oh, I can solve this.


00:31:53.660 --> 00:31:55.940
And he like wrote something over a weekend, I think,


00:31:55.940 --> 00:31:57.100
or it felt like that.


00:31:57.100 --> 00:31:58.540
- Way to go, Phil.


00:31:58.540 --> 00:32:01.140
Now it's Blueprints all the way down.


00:32:01.140 --> 00:32:02.500
- I'll let Phil describe it.


00:32:02.500 --> 00:32:05.900
- Yeah, it's exactly like,


00:32:05.900 --> 00:32:07.740
you can nest Blueprints in Blueprints.


00:32:07.740 --> 00:32:10.680
So I think the code structure is really helpful


00:32:10.680 --> 00:32:13.740
'cause now it doesn't have to be all in that one Blueprint.


00:32:13.740 --> 00:32:16.060
You can split it over a few files and bring them in,


00:32:16.060 --> 00:32:17.140
which helps a lot.


00:32:17.140 --> 00:32:19.660
And there's other structures where maybe you wanna reuse


00:32:19.660 --> 00:32:21.940
some part of something in another Blueprint.


00:32:21.940 --> 00:32:23.700
So you just bring in parts.


00:32:23.700 --> 00:32:25.740
But yeah, you can just use that.


00:32:25.740 --> 00:32:27.500
And you can use the command register Blueprint


00:32:27.500 --> 00:32:31.180
on a Blueprint to register the Blueprint and carry on.


00:32:31.180 --> 00:32:33.900
- Yeah, you used to have to say app.registerBlueprint


00:32:33.900 --> 00:32:34.740
and you would give it the Blueprint


00:32:34.740 --> 00:32:37.300
and that would help you build up the various pieces.


00:32:37.300 --> 00:32:40.620
but now you can nest them and they can be more hierarchical,


00:32:40.620 --> 00:32:41.580
which is great.


00:32:41.580 --> 00:32:43.540
- Right, before it was just one layer,


00:32:43.540 --> 00:32:45.660
you had the Flask app and then the Blueprints.


00:32:45.660 --> 00:32:48.280
And so like each Blueprint could have a prefix,


00:32:48.280 --> 00:32:52.260
but people haven't actually asked for it for a while,


00:32:52.260 --> 00:32:53.420
but it's still been an open issue


00:32:53.420 --> 00:32:55.260
and it doesn't seem unreasonable.


00:32:55.260 --> 00:32:59.060
People have wanted to like have prefixes for prefixes.


00:32:59.060 --> 00:33:01.940
And so then you get nested Blueprints and now it's possible.


00:33:01.940 --> 00:33:02.780
- Yeah, awesome.


00:33:02.780 --> 00:33:04.500
Let me take a couple of the questions out of the live stream.


00:33:04.500 --> 00:33:06.220
First, Doug Farrell out there.


00:33:06.220 --> 00:33:08.700
Hey, Doug says, hey, I'm working on a book


00:33:08.700 --> 00:33:11.760
that uses Python flask as a primary example application.


00:33:11.760 --> 00:33:14.340
When might flask 2.0 be released


00:33:14.340 --> 00:33:16.120
and should I plan on updating the book to use it?


00:33:16.120 --> 00:33:19.140
I'm guessing Doug didn't catch the very first opening bit


00:33:19.140 --> 00:33:21.220
because you said tomorrow.


00:33:21.220 --> 00:33:22.060
- Tomorrow.


00:33:22.060 --> 00:33:27.300
If you're interested in following Pallets news in general,


00:33:27.300 --> 00:33:29.260
there's @palletsteam on Twitter


00:33:29.260 --> 00:33:32.060
and there's also palletsprojects.com/blog,


00:33:32.060 --> 00:33:33.220
which has an RSS feed.


00:33:33.220 --> 00:33:35.780
And so we actually have announced this already.


00:33:35.780 --> 00:33:39.660
But yeah, it's May 11th tomorrow.


00:33:39.660 --> 00:33:41.100
- Fantastic.


00:33:41.100 --> 00:33:42.540
And then John Sheehan says,


00:33:42.540 --> 00:33:44.380
"You're right, we don't hear enough about Blueprints."


00:33:44.380 --> 00:33:46.680
I love Blueprints, yes, absolutely.


00:33:46.680 --> 00:33:53.140
Radoi says, "In our Talk Python web training course,"


00:33:53.140 --> 00:33:54.700
which is a Flask, it says,


00:33:54.700 --> 00:33:57.940
"Flask basically rebuild pypi.org with Flask.


00:33:57.940 --> 00:34:00.220
So is it safe to use Flask 2.0?"


00:34:00.220 --> 00:34:01.040
I think so.


00:34:01.040 --> 00:34:03.580
David said there shouldn't be any breaking changes,


00:34:03.580 --> 00:34:06.140
maybe deprecations, if you see them, let me know.


00:34:06.140 --> 00:34:08.460
I can update that, but I think it should be fine, right?


00:34:08.460 --> 00:34:11.260
Same reason that production apps work,


00:34:11.260 --> 00:34:12.860
the example apps should work.


00:34:12.860 --> 00:34:15.500
- This time, this is the first time


00:34:15.500 --> 00:34:16.880
we've tried to do release candidates


00:34:16.880 --> 00:34:18.640
before we've made releases.


00:34:18.640 --> 00:34:20.800
And so we actually have had release candidates up


00:34:20.800 --> 00:34:23.820
for about a month now for all the libraries,


00:34:23.820 --> 00:34:26.260
where you could test your existing code


00:34:26.260 --> 00:34:27.700
with the new versions.


00:34:27.700 --> 00:34:30.940
But I think in the future when we do this,


00:34:30.940 --> 00:34:32.700
I think we need to do a better job at advertising that.


00:34:32.700 --> 00:34:35.860
So, something we'll get better at every time.


00:34:35.860 --> 00:34:36.700
- Yeah, yeah, cool.


00:34:36.700 --> 00:34:39.060
Wow, people listening now know.


00:34:39.060 --> 00:34:41.340
Then also I think interestingly related


00:34:41.340 --> 00:34:44.380
to both the micro framework side of the story,


00:34:44.380 --> 00:34:46.880
but also the new features like,


00:34:46.880 --> 00:34:48.540
especially the async stuff,


00:34:48.540 --> 00:34:51.660
Rohit asks, "Which will be the most compatible database


00:34:51.660 --> 00:34:54.660
to supporting a framework for Flask 0?"


00:34:54.660 --> 00:34:57.060
On one hand, like just do whatever you want, right?


00:34:57.060 --> 00:34:59.740
But on the other, you've got Flask SQLAlchemy


00:34:59.740 --> 00:35:02.860
as an extension, you've got the ability to use like


00:35:02.860 --> 00:35:06.220
Tortoise ORM because of the async support.


00:35:06.220 --> 00:35:08.380
Like there are new options, right?


00:35:08.380 --> 00:35:09.220
What's--


00:35:09.220 --> 00:35:11.420
- Yeah, I mean, Flask makes no requirement.


00:35:11.420 --> 00:35:13.940
It doesn't affect what database you use.


00:35:13.940 --> 00:35:18.860
Flask SQLAlchemy, that will have a 3.0 release


00:35:18.860 --> 00:35:21.860
similar to these soonish.


00:35:21.860 --> 00:35:23.340
I think I'm gonna take a little break


00:35:23.340 --> 00:35:27.780
after this release first, but it should continue to work.


00:35:27.780 --> 00:35:31.940
- What's the, you know, SQLAlchemy 1.4


00:35:31.940 --> 00:35:34.500
just released with the first async API


00:35:34.500 --> 00:35:38.140
and they're moving towards 2.0 as well with a new API.


00:35:38.140 --> 00:35:40.620
What's the story around their new API


00:35:40.620 --> 00:35:44.420
and the SQLAlchemy async support with Flask's alchemy?


00:35:44.420 --> 00:35:46.820
Is there anything overlapping there?


00:35:46.820 --> 00:35:51.660
- So, Flask's SQLAlchemy is compatible with 1.4 right now.


00:35:51.660 --> 00:35:54.480
I did make a little bug fix release recently for that.


00:35:55.380 --> 00:35:58.060
2.0 is just deprecating things,


00:35:58.060 --> 00:36:03.060
so, and nothing that Flask SQLAlchemy uses is going away.


00:36:03.060 --> 00:36:09.820
So it'll work with SQLAlchemy 2.0 when that happens.


00:36:09.820 --> 00:36:11.740
In terms of the async stuff,


00:36:11.740 --> 00:36:14.920
we might, Flask SQLAlchemy, like the extension,


00:36:14.920 --> 00:36:17.940
might have to do something if we want to enable


00:36:17.940 --> 00:36:22.020
using that pattern, but we might also not


00:36:22.020 --> 00:36:26.720
because it's using a pretty clever use of greenlets


00:36:26.720 --> 00:36:31.340
to enable compatibility between sync and async code.


00:36:31.340 --> 00:36:35.860
And Flask's async support should support that


00:36:35.860 --> 00:36:37.260
out of the box, or not out of the box,


00:36:37.260 --> 00:36:40.700
but it's possible to extend it to do that.


00:36:40.700 --> 00:36:42.420
- Yeah, yeah, super cool.


00:36:42.420 --> 00:36:44.420
All right, another thing I saw in the release notes


00:36:44.420 --> 00:36:46.420
was that around Vectoid,


00:36:46.420 --> 00:36:51.420
there's performance improvements coming.


00:36:51.420 --> 00:36:53.840
coming in Flask and in Virxoic.


00:36:53.840 --> 00:36:57.060
Wanna just give people a little insight


00:36:57.060 --> 00:36:58.300
into what's coming there?


00:36:58.300 --> 00:37:02.660
- Yeah, so one of the things I think the one


00:37:02.660 --> 00:37:03.940
that got the most attention,


00:37:03.940 --> 00:37:06.860
got some interest on the Python subreddit


00:37:06.860 --> 00:37:10.020
was an improvement we did to the form passing.


00:37:10.020 --> 00:37:12.720
So I think there's this issue that's about five years old


00:37:12.720 --> 00:37:15.780
saying it was a bit slow, especially for large files.


00:37:15.780 --> 00:37:17.340
And as David mentioned earlier,


00:37:17.340 --> 00:37:19.980
we were looking at moving that to be Sans IO.


00:37:19.980 --> 00:37:22.420
And in the work to do that,


00:37:22.420 --> 00:37:24.620
the original author of that issue actually came back


00:37:24.620 --> 00:37:25.900
and said, "Oh, if you do this,


00:37:25.900 --> 00:37:27.740
you'll make it a lot quicker as well."


00:37:27.740 --> 00:37:29.860
And when we did that, he pointed out,


00:37:29.860 --> 00:37:32.540
we've made it about 10 to 15 times quicker


00:37:32.540 --> 00:37:34.140
than the previous form parser.


00:37:34.140 --> 00:37:37.900
So yeah, if you're being sent files to your Flask server,


00:37:37.900 --> 00:37:39.660
it should be a lot quicker.


00:37:39.660 --> 00:37:41.980
- Yeah, form data in general is faster.


00:37:41.980 --> 00:37:45.360
And then if you're uploading large files,


00:37:45.360 --> 00:37:48.780
that's way, way faster than what it used to be.


00:37:48.780 --> 00:37:52.140
- Oh wow, like multi-part form upload type of files.


00:37:52.140 --> 00:37:53.480
- Yeah, so if you were uploading


00:37:53.480 --> 00:37:54.940
even like hundreds of megabytes,


00:37:54.940 --> 00:37:58.580
it could be really slow in some cases.


00:37:58.580 --> 00:38:00.100
And so now you can just upload


00:38:00.100 --> 00:38:03.500
our big gigabytes of ISOs if you want,


00:38:03.500 --> 00:38:04.340
should work fine.


00:38:04.340 --> 00:38:05.180
- Just like--


00:38:05.180 --> 00:38:07.180
- I mean, it'll still take as long as it takes to upload.


00:38:07.180 --> 00:38:09.320
- Yeah, you can't change the internet.


00:38:09.320 --> 00:38:11.260
Yeah, it doesn't make it worse, I see.


00:38:11.260 --> 00:38:12.100
- Yeah.


00:38:12.100 --> 00:38:12.940
- Cool.


00:38:12.940 --> 00:38:15.980
- And I don't know, I think,


00:38:17.260 --> 00:38:20.300
I'm trying to think if there were any other performance improvements in Versoy.


00:38:20.300 --> 00:38:25.900
I know a couple of releases ago, we made a pretty big one to our URL building,


00:38:25.900 --> 00:38:28.660
which made it like 10 times faster or something.


00:38:28.660 --> 00:38:31.620
That's already released, but it has been getting faster.


00:38:31.620 --> 00:38:32.620
Yeah, okay.


00:38:32.620 --> 00:38:35.260
We haven't measured it, but I think the work,


00:38:35.260 --> 00:38:39.740
taking out all the compatibility shims and just going pure life and free


00:38:39.740 --> 00:38:41.780
should be noticeable.


00:38:41.780 --> 00:38:46.700
Yes, since we've removed all the compatibility code for Python 2 stuff,


00:38:46.700 --> 00:38:53.580
I like literally the dot compat dot py files are gone and all the code that was calling that.


00:38:53.580 --> 00:39:00.060
There's still some more work to be done on that in terms of like accepting both bytes and strings


00:39:00.060 --> 00:39:03.820
in a lot of places where it doesn't really make sense anymore. So there's still some overhead,


00:39:03.820 --> 00:39:07.900
but there's a lot less compatibility overhead than there was before. But yeah, it hasn't been


00:39:07.900 --> 00:39:15.580
measured. But I expect that to be noticeable because when Versoy and flask first added


00:39:15.580 --> 00:39:19.340
support for Python 3, going the other direction.


00:39:19.340 --> 00:39:23.400
So it was Python 2 only, and then it became Python 3.


00:39:23.400 --> 00:39:28.180
Some people stuck with really old versions of Verxilium Flask because there was a noticeable


00:39:28.180 --> 00:39:33.100
performance degradation by adding all that compatibility code.


00:39:33.100 --> 00:39:35.860
So now that it's gone, it should be better.


00:39:35.860 --> 00:39:37.340
Okay, yeah, fantastic.


00:39:37.340 --> 00:39:43.900
I know the NumPy people, they actually got a lot better.


00:39:43.900 --> 00:39:46.700
They shrunk their code a bunch by dropping 2.0,


00:39:46.700 --> 00:39:50.940
or Python 2, 2.7, and similar for you all?


00:39:50.940 --> 00:39:52.340
- Yeah, it's just, I mean,


00:39:52.340 --> 00:39:55.380
besides the performance improvements,


00:39:55.380 --> 00:39:57.820
it's just more maintainable now.


00:39:57.820 --> 00:40:00.300
I pushed really hard to drop Python 2,


00:40:00.300 --> 00:40:03.260
even before it went end of life.


00:40:03.260 --> 00:40:04.760
I started thinking about how to do it


00:40:04.760 --> 00:40:09.620
because I never used Python 2 back then,


00:40:09.620 --> 00:40:11.660
and I still don't know.


00:40:11.660 --> 00:40:13.820
And so every time I had to fix something,


00:40:13.820 --> 00:40:16.320
I had to like, oh gosh, now I got to run the Python 2


00:40:16.320 --> 00:40:19.100
version of the tests and figure out how to like


00:40:19.100 --> 00:40:21.540
make some weird compatibility shim, you know,


00:40:21.540 --> 00:40:22.740
between the two.


00:40:22.740 --> 00:40:25.540
So it was a nightmare maintenance for like maintainers


00:40:25.540 --> 00:40:26.940
and contributors.


00:40:26.940 --> 00:40:28.200
- Yeah, I was gonna say, it's probably easier


00:40:28.200 --> 00:40:30.300
for contributors as well now to come in


00:40:30.300 --> 00:40:31.700
'cause they don't have to, you know,


00:40:31.700 --> 00:40:35.060
a lot of people these days, they don't know Python 2, right?


00:40:35.060 --> 00:40:35.900
- Right, exactly.


00:40:35.900 --> 00:40:38.220
- They don't wanna come in and like learn, you know,


00:40:38.220 --> 00:40:40.820
something from 10 years ago so they can keep it compatible.


00:40:40.820 --> 00:40:42.420
They just wanna add the new feature.


00:40:42.420 --> 00:40:45.600
- Yeah, and it's not like if you somehow have


00:40:45.600 --> 00:40:48.320
like a Python 3.5 application still or whatever,


00:40:48.320 --> 00:40:51.920
you can stick with Flask 1.1.


00:40:51.920 --> 00:40:54.240
You'll still get your application working just fine.


00:40:54.240 --> 00:40:55.960
I mean, we're not gonna be supporting it


00:40:55.960 --> 00:40:58.320
because we just don't have that capacity,


00:40:58.320 --> 00:41:00.520
but the libraries are fairly stable.


00:41:00.520 --> 00:41:03.840
You know, like we almost never get bug reports


00:41:03.840 --> 00:41:06.500
asking us to backport something, for example.


00:41:06.500 --> 00:41:10.240
- Yeah, and I, you know, I use Dependabot


00:41:10.240 --> 00:41:13.320
like pretty much anybody who uses GitHub does,


00:41:13.320 --> 00:41:14.740
at least for security.


00:41:14.740 --> 00:41:15.580
- Right.


00:41:15.580 --> 00:41:16.420
- And I don't see--


00:41:16.420 --> 00:41:19.260
- People have become a lot more aware overall


00:41:19.260 --> 00:41:21.800
of that they should be pinning dependencies


00:41:21.800 --> 00:41:24.820
and how to do that and how to upgrade intentionally.


00:41:24.820 --> 00:41:27.700
And so hopefully over time that, you know,


00:41:27.700 --> 00:41:29.660
less people will be surprised by updates


00:41:29.660 --> 00:41:32.140
and their applications will continue working


00:41:32.140 --> 00:41:33.860
with the versions they work with.


00:41:33.860 --> 00:41:34.700
- Right, exactly.


00:41:34.700 --> 00:41:35.820
And if you're worried about these changes,


00:41:35.820 --> 00:41:38.580
just pin it to 1.11 or whatever it is,


00:41:38.580 --> 00:41:41.740
just let it be until you're really ready.


00:41:41.740 --> 00:41:44.580
But also you'll get notified of any security issues


00:41:44.580 --> 00:41:46.220
that you might need to jump in and fix, right?


00:41:46.220 --> 00:41:47.620
So, and what I was gonna say is,


00:41:47.620 --> 00:41:50.660
I don't remember seeing any around Flask


00:41:50.660 --> 00:41:55.060
and Werkzeug almost ever, so they're pretty stable.


00:41:55.060 --> 00:41:58.740
- It's pretty rare for there to be like critical bugs


00:41:58.740 --> 00:42:00.940
or security related bugs reported.


00:42:00.940 --> 00:42:02.100
We get stuff every now and then,


00:42:02.100 --> 00:42:04.360
but we just make a point release.


00:42:04.360 --> 00:42:06.920
- Yeah, and Rohit asked previously about like,


00:42:06.920 --> 00:42:08.720
why would I use something like Flask


00:42:08.720 --> 00:42:11.100
over say something like Django?


00:42:11.100 --> 00:42:13.680
I noticed security releases for Django more often.


00:42:13.680 --> 00:42:14.880
And I think it's because


00:42:14.880 --> 00:42:16.640
they just have so much more going on.


00:42:16.640 --> 00:42:19.120
Like they have a whole admin section with forms and input.


00:42:19.120 --> 00:42:20.840
And you guys just,


00:42:20.840 --> 00:42:23.560
it's not, if it's not there, it can't have a vulnerability.


00:42:23.560 --> 00:42:26.040
- There's a much larger attack surface, yeah.


00:42:26.040 --> 00:42:26.880
I think,


00:42:26.880 --> 00:42:32.100
but it's not that Django is less secure overall though.


00:42:32.100 --> 00:42:33.160
I mean, first of all,


00:42:33.160 --> 00:42:34.920
they have released all the security updates


00:42:34.920 --> 00:42:36.520
so they're staying secure.


00:42:36.520 --> 00:42:41.480
but I think they have a much larger team.


00:42:41.480 --> 00:42:44.700
And so they have the capacity to do these sorts of analysis


00:42:44.700 --> 00:42:46.140
that maybe we don't.


00:42:46.140 --> 00:42:48.160
I'm not saying like, I think Flask is insecure,


00:42:48.160 --> 00:42:50.680
but it could be that, you know,


00:42:50.680 --> 00:42:53.160
they're just, they've just got more eyeballs on these things


00:42:53.160 --> 00:42:57.000
like noticing like, oh yeah, we shouldn't do this.


00:42:57.000 --> 00:42:59.280
We can make it safer or something.


00:42:59.280 --> 00:43:00.120
- Yeah, yeah.


00:43:00.120 --> 00:43:03.320
And I just think the surface area is so much larger


00:43:03.320 --> 00:43:05.580
that it's bound to happen.


00:43:05.580 --> 00:43:08.380
- Doug has-- - I'm not positioned


00:43:08.380 --> 00:43:09.220
for the last two.


00:43:09.220 --> 00:43:11.460
(laughing)


00:43:11.460 --> 00:43:14.800
- Doug says, "Oh man, trying to get in Django,


00:43:14.800 --> 00:43:16.620
"my new job, so much magic,


00:43:16.620 --> 00:43:18.180
"too much magic happening there for me."


00:43:18.180 --> 00:43:21.620
But he also has a question that I think maybe,


00:43:21.620 --> 00:43:24.940
you know, Phil, you spoke about in your presentation.


00:43:24.940 --> 00:43:28.000
Does this release change how you run in production?


00:43:28.000 --> 00:43:31.020
Like, G-Unicorn versus MicroWSGI


00:43:31.020 --> 00:43:33.420
versus who knows what, HyperCore?


00:43:33.420 --> 00:43:36.640
- Yeah, I think the good thing to say is that,


00:43:36.640 --> 00:43:37.780
no, it doesn't change it at all.


00:43:37.780 --> 00:43:41.000
It still works the same and you can still use Unicorn


00:43:41.000 --> 00:43:43.960
and use the async capabilities now in Flask.


00:43:43.960 --> 00:43:47.300
If you wish to use an ASCII server, you can as well.


00:43:47.300 --> 00:43:50.100
You need some middleware and adapter to do it.


00:43:50.100 --> 00:43:53.260
And there's some examples in the Flask docs


00:43:53.260 --> 00:43:55.540
if you wanna see which one we recommend.


00:43:55.540 --> 00:43:57.060
So you can choose any server,


00:43:57.060 --> 00:43:59.420
but yeah, very important for me to point out


00:43:59.420 --> 00:44:01.380
that you don't have to change anything.


00:44:01.380 --> 00:44:02.980
You can just carry on as before.


00:44:02.980 --> 00:44:10.980
Yeah, so if you want, how would you categorize? You actually in your talk spoke about a spectrum of async capability.


00:44:10.980 --> 00:44:18.980
On one hand you have Flask with its decent async support but not full AGSI server capabilities.


00:44:18.980 --> 00:44:24.980
And then you've got Cort which can be a 100% ASGI. So you kind of thought of it as a spectrum, right?


00:44:24.980 --> 00:44:29.980
- Yeah, so my idea is that if your code base is mostly sync,


00:44:29.980 --> 00:44:32.780
as you may have started, then Flask is a great choice.


00:44:32.780 --> 00:44:34.580
If you want to add a bit of async here and there,


00:44:34.580 --> 00:44:35.860
it's still a great choice.


00:44:35.860 --> 00:44:38.460
It's only when perhaps you want to go fully async


00:44:38.460 --> 00:44:42.780
or you've mostly async with maybe a few sync pieces of code


00:44:42.780 --> 00:44:44.900
that you actually would choose core.


00:44:44.900 --> 00:44:46.460
I think the really nice thing for the user


00:44:46.460 --> 00:44:49.340
is you can hopefully just go across that spectrum,


00:44:49.340 --> 00:44:51.460
eventually change the name, but then just continue


00:44:51.460 --> 00:44:55.260
and it's a pleasant experience, is my hope.


00:44:55.260 --> 00:44:56.580
Yeah, awesome.


00:44:56.580 --> 00:44:59.700
- You should still be able to use the same WSGI servers,


00:44:59.700 --> 00:45:02.060
basically, like we've said a couple of times,


00:45:02.060 --> 00:45:03.580
like we're not breaking anything,


00:45:03.580 --> 00:45:06.500
we're not changing how Flask works or anything like that.


00:45:06.500 --> 00:45:08.300
So you still deploy it the same way.


00:45:08.300 --> 00:45:11.380
And if you do wanna use an ASGI framework


00:45:11.380 --> 00:45:13.660
for some reason, or server for some reason,


00:45:13.660 --> 00:45:16.540
you can always use an adapter to serve a WSGI app


00:45:16.540 --> 00:45:19.960
over ASGI too, you just don't get any of the benefits,


00:45:19.960 --> 00:45:21.140
really.


00:45:21.140 --> 00:45:23.420
- Yeah, and Doug makes a good point out there


00:45:23.420 --> 00:45:25.540
that Flask and Flask for the Win


00:45:25.540 --> 00:45:27.480
still making g-unicorn a good solution.


00:45:27.480 --> 00:45:32.060
With g-unicorn, you can change the worker type, right?


00:45:32.060 --> 00:45:33.220
You can let it be the regular one,


00:45:33.220 --> 00:45:36.580
or you can say, I think it's -k for the option,


00:45:36.580 --> 00:45:40.100
change the worker type to u-vehicorn workers,


00:45:40.100 --> 00:45:42.940
which would switch it to be an ASGI version.


00:45:42.940 --> 00:45:44.740
So you don't even necessarily have to change anything,


00:45:44.740 --> 00:45:47.260
but like part of your command line


00:45:47.260 --> 00:45:49.540
for your startup of your g-unicorn,


00:45:49.540 --> 00:45:52.300
And that could be the total change you have to do.


00:45:52.300 --> 00:45:55.280
- And going back to a point that Phil made earlier,


00:45:55.280 --> 00:45:59.220
that's in the same way you could change the worker


00:45:59.220 --> 00:46:02.180
to use like G event or something


00:46:02.180 --> 00:46:05.840
and already have an async flask,


00:46:05.840 --> 00:46:09.060
just with an older version of async code


00:46:09.060 --> 00:46:11.580
or an older implementation.


00:46:11.580 --> 00:46:13.180
- Yeah, yeah.


00:46:13.180 --> 00:46:14.220
And Joe out there says,


00:46:14.220 --> 00:46:16.640
"I had looked at the new asyncio features,


00:46:16.640 --> 00:46:18.880
"but it seems from the docs that it's early days


00:46:18.880 --> 00:46:23.440
that maybe later versions will get more asyncio adoptions.


00:46:23.440 --> 00:46:27.520
I guess that's a good direction to have a quick chat about.


00:46:27.520 --> 00:46:30.120
So what's the, so this is 2.0,


00:46:30.120 --> 00:46:32.040
is this where you see it sort of laying


00:46:32.040 --> 00:46:34.160
or do you see this as a progression?


00:46:34.160 --> 00:46:38.200
- I think it's fair to say it's a progression definitely.


00:46:38.200 --> 00:46:40.080
I mean, the ideal outcome in the end


00:46:40.080 --> 00:46:42.720
would be to somehow merge Flask and Quark,


00:46:42.720 --> 00:46:44.840
users be able to use any amount of async


00:46:44.840 --> 00:46:46.560
and or Biasky or Whiskey


00:46:46.560 --> 00:46:49.860
and everything just works nicely for them really.


00:46:49.860 --> 00:46:52.840
Again, as I said earlier, I'm a bit skeptical


00:46:52.840 --> 00:46:54.840
about whether that could be the one namespace


00:46:54.840 --> 00:46:57.240
I just called Flask or whether you need to split it up


00:46:57.240 --> 00:47:00.160
as it is now, but yeah, I think it's the start.


00:47:00.160 --> 00:47:01.840
Hopefully we can keep going.


00:47:01.840 --> 00:47:06.240
- Yeah, like the async stuff we've gotten there so far


00:47:06.240 --> 00:47:11.240
is for supporting the most important thing


00:47:11.240 --> 00:47:15.160
that we thought people were needing async for,


00:47:15.160 --> 00:47:18.280
which is I have some async code,


00:47:18.280 --> 00:47:20.480
or like I'm using discord.py, for example,


00:47:20.480 --> 00:47:22.280
to write a discord bot or something.


00:47:22.280 --> 00:47:23.760
That's all async, right?


00:47:23.760 --> 00:47:25.260
So if you want to write that code,


00:47:25.260 --> 00:47:28.440
you need to type async def and put your code in there.


00:47:28.440 --> 00:47:29.280
- Right.


00:47:29.280 --> 00:47:30.120
- So we're enabling that.


00:47:30.120 --> 00:47:33.640
We've got extension points to change,


00:47:33.640 --> 00:47:35.680
you know, what asyncio loop you're using,


00:47:35.680 --> 00:47:39.360
like asyncio versus trio versus greenback.


00:47:39.360 --> 00:47:40.880
- Or uv loop or something, maybe.


00:47:40.880 --> 00:47:44.640
- Or you, I'm not sure if that would tie in,


00:47:44.640 --> 00:47:46.440
Phil might be able to answer that.


00:47:46.440 --> 00:47:49.360
And then like, you know, addressing things


00:47:49.360 --> 00:47:52.400
like being able to do WebSockets and that sort of thing.


00:47:52.400 --> 00:47:54.360
We might be able to do that in Flask eventually,


00:47:54.360 --> 00:47:56.120
or that might be the place where you switch over


00:47:56.120 --> 00:47:57.480
to the Quark namespace.


00:47:57.480 --> 00:47:58.320
- Yeah.


00:47:58.320 --> 00:47:59.840
- But you're using the same API,


00:47:59.840 --> 00:48:01.200
it's just a different name.


00:48:01.200 --> 00:48:05.280
- Yeah, Phil, that's something I wanted to ask you about.


00:48:05.280 --> 00:48:07.760
I just let you give a quick shout out about


00:48:07.760 --> 00:48:10.800
is the WebSocket support that you all have in Quark.


00:48:10.800 --> 00:48:14.200
- Oh yeah, I mean, I don't know if there's much more


00:48:14.200 --> 00:48:16.200
to say that other than it's definitely supported.


00:48:16.200 --> 00:48:17.040
- It's supported.


00:48:17.040 --> 00:48:18.880
- And it's good to use it.


00:48:18.880 --> 00:48:20.820
- Well, you did bring some of that stuff


00:48:20.820 --> 00:48:22.120
back to Vericsoy though.


00:48:22.120 --> 00:48:24.300
So because you're using Vericsoy in core,


00:48:24.300 --> 00:48:28.960
you needed to be able to route to a WebSocket URLs


00:48:28.960 --> 00:48:31.840
as opposed to HTTP URLs.


00:48:31.840 --> 00:48:34.280
And so we now have a way to identify


00:48:34.280 --> 00:48:35.640
in our Vericsoy router,


00:48:35.640 --> 00:48:39.520
whether something is intended to be a WebSocket or not.


00:48:39.520 --> 00:48:43.240
So it'll change based on the scheme you're using.


00:48:43.240 --> 00:48:47.560
I think it's good to point out that Miguel has a kind of experimental support,


00:48:47.560 --> 00:48:51.480
I think, in Flask as well for web sockets, which is good to keep an eye on.


00:48:51.480 --> 00:48:53.080
We'll have to see how that goes.


00:48:53.080 --> 00:48:55.160
Yeah, there is...


00:48:55.160 --> 00:48:57.200
I don't remember what it was called or anything,


00:48:57.200 --> 00:49:01.720
but there's a way that G-Unicorn


00:49:01.720 --> 00:49:08.320
will let you take control of the HTTP socket from an endpoint.


00:49:08.320 --> 00:49:12.880
And so within your Flask view, you could take over controlling the socket


00:49:12.880 --> 00:49:15.320
and start treating it like a WebSocket instead.


00:49:15.320 --> 00:49:16.820
- Like an upgrade type thing?


00:49:16.820 --> 00:49:19.960
- Yeah, so you still are in Flask and WSGI mode.


00:49:19.960 --> 00:49:22.320
So you're still like sync in terms of one worker


00:49:22.320 --> 00:49:23.920
is blocked handling that one thing,


00:49:23.920 --> 00:49:26.560
but it's pretty clever.


00:49:26.560 --> 00:49:29.000
- Yeah, and Joe out there throws out that,


00:49:29.000 --> 00:49:31.400
it's Miguel Grimberg, I'm guessing it's Miguel


00:49:31.400 --> 00:49:32.840
you're talking about.


00:49:32.840 --> 00:49:33.680
Yeah. - Yeah.


00:49:33.680 --> 00:49:34.500
- Shout out to Miguel. - Yeah, there's also


00:49:34.500 --> 00:49:36.760
Flask Socket.io, but this is like a more native thing


00:49:36.760 --> 00:49:38.560
where you can just do this directly in Flask


00:49:38.560 --> 00:49:40.320
instead of needing an extension.


00:49:40.320 --> 00:49:41.520
- Yeah, okay.


00:49:41.520 --> 00:49:42.700
- Cool stuff.


00:49:42.700 --> 00:49:43.940
- Yeah, super cool.


00:49:43.940 --> 00:49:46.820
All right, we're getting sort of short on time.


00:49:46.820 --> 00:49:49.300
So I wanna ask a couple of questions


00:49:49.300 --> 00:49:52.000
and hit on some high notes as well here.


00:49:52.000 --> 00:49:55.380
So what are the things that I think is pretty exciting


00:49:55.380 --> 00:49:58.260
that GitHub has done?


00:49:58.260 --> 00:50:00.220
You know, GitHub, I think continues to be pretty neat.


00:50:00.220 --> 00:50:01.340
And one of the things they've done


00:50:01.340 --> 00:50:05.420
is they've added sponsor support for projects, right?


00:50:05.420 --> 00:50:08.740
Has that been helpful to you all?


00:50:10.700 --> 00:50:13.820
- Yeah, we've gotten quite a lot of support.


00:50:13.820 --> 00:50:16.980
We're part of the PSF.


00:50:16.980 --> 00:50:19.400
And so we take donations through them.


00:50:19.400 --> 00:50:22.980
If you go to palletsprojects.com/donate,


00:50:22.980 --> 00:50:25.900
you get the PSF donation page.


00:50:25.900 --> 00:50:30.860
And so we've got lots of people,


00:50:30.860 --> 00:50:35.860
making one-time donations or scheduled monthly donations.


00:50:35.860 --> 00:50:37.300
And we're also part of Tidelift,


00:50:37.300 --> 00:50:42.300
which is a commercial sort of open source support service


00:50:42.300 --> 00:50:47.500
that we're getting funding through.


00:50:47.500 --> 00:50:50.180
And we're also, I mean, this isn't really a sponsor link,


00:50:50.180 --> 00:50:53.900
but since we host all our docs on Read the Docs,


00:50:53.900 --> 00:50:56.020
we're partnered with Ethical Ads,


00:50:56.020 --> 00:50:58.140
which is their advertising platform


00:50:58.140 --> 00:51:01.940
to share the advertising revenue on all our docs.


00:51:01.940 --> 00:51:04.380
And so we're getting quite a bit of funding.


00:51:04.380 --> 00:51:05.460
- Yeah, that's fantastic.


00:51:05.460 --> 00:51:08.000
- That's good to hear.


00:51:08.000 --> 00:51:10.740
I do feel that there's probably a handful


00:51:10.740 --> 00:51:13.640
of billion dollar companies that are using Flask


00:51:13.640 --> 00:51:15.380
at the core that maybe could click that link


00:51:15.380 --> 00:51:17.180
and do a little more, but shout out to them.


00:51:17.180 --> 00:51:18.020
- Yes.


00:51:18.020 --> 00:51:18.860
(laughing)


00:51:18.860 --> 00:51:22.580
If you're using Flask at your company,


00:51:22.580 --> 00:51:24.360
take a look at the sponsor links.


00:51:24.360 --> 00:51:26.740
- Yeah.


00:51:26.740 --> 00:51:29.140
- We have lots of plans for what to do with it.


00:51:29.140 --> 00:51:29.980
- Yeah.


00:51:29.980 --> 00:51:31.540
I was really happy to see GitHub put this in here


00:51:31.540 --> 00:51:34.060
because just having a little, you know,


00:51:34.060 --> 00:51:37.040
buy me a coffee link on the side of a homepage.


00:51:37.040 --> 00:51:38.140
That didn't seem like it worked,


00:51:38.140 --> 00:51:40.720
but I think this sort of central way.


00:51:40.720 --> 00:51:42.600
And what's interesting is I didn't realize


00:51:42.600 --> 00:51:45.000
that you could link to external sponsors.


00:51:45.000 --> 00:51:47.560
Like my thought was that that sponsor button


00:51:47.560 --> 00:51:50.680
really was going through the GitHub sponsor channel


00:51:50.680 --> 00:51:52.100
or framework or whatever.


00:51:52.100 --> 00:51:56.840
- Yeah, we haven't, I've heard people recommend


00:51:56.840 --> 00:51:58.800
that we use GitHub sponsors as well


00:51:58.800 --> 00:52:01.440
because a lot of companies who are already


00:52:01.440 --> 00:52:04.480
in GitHub's ecosystem have an easier time


00:52:04.480 --> 00:52:07.640
clicking that button than something external.


00:52:07.640 --> 00:52:08.480
- Yeah.


00:52:08.480 --> 00:52:09.320
- So that's something I will be looking into.


00:52:09.320 --> 00:52:11.240
- Kind of an app store versus not absolutely,


00:52:11.240 --> 00:52:14.040
like first go to our site to buy a type of integration,


00:52:14.040 --> 00:52:14.880
right?


00:52:14.880 --> 00:52:16.000
I feel like it's almost like that.


00:52:16.000 --> 00:52:18.080
Yeah, I would definitely recommend it.


00:52:18.080 --> 00:52:21.440
I've sponsored some things through the sponsor button there


00:52:21.440 --> 00:52:23.440
and it's super easy.


00:52:23.440 --> 00:52:24.280
Okay.


00:52:24.280 --> 00:52:28.520
Mars, how about that?


00:52:29.760 --> 00:52:34.760
- Yeah, Flask is on Mars or help the lander get to Mars.


00:52:34.760 --> 00:52:36.580
- And I bet if I pull this up,


00:52:36.580 --> 00:52:39.740
let me see if I can find your user profile here.


00:52:39.740 --> 00:52:40.900
I just have to hack the URL.


00:52:40.900 --> 00:52:42.820
It's gonna have to be that way.


00:52:42.820 --> 00:52:46.260
And I go down here, you, here you go.


00:52:46.260 --> 00:52:48.580
You have the official achievement,


00:52:48.580 --> 00:52:51.940
Mars 2020 helicopter contributor.


00:52:51.940 --> 00:52:53.700
How awesome is that?


00:52:53.700 --> 00:52:55.620
Phil, do you have one of these as well?


00:52:55.620 --> 00:52:57.060
- Yeah, I think so, yeah, yeah.


00:52:57.060 --> 00:52:59.100
- I'm so jealous, I want one of these.


00:52:59.100 --> 00:53:02.960
Everybody who's gotten a code contribution


00:53:02.960 --> 00:53:06.060
to the repositories should have that badge.


00:53:06.060 --> 00:53:08.800
And there's been plenty more people


00:53:08.800 --> 00:53:10.400
who have contributed in other ways


00:53:10.400 --> 00:53:13.200
that should have that badge, but don't.


00:53:13.200 --> 00:53:14.420
- Yeah.


00:53:14.420 --> 00:53:17.320
You should also have the Arctic Vault contributor badge.


00:53:17.320 --> 00:53:18.400
- Oh, I have the Arctic one,


00:53:18.400 --> 00:53:20.120
but I turned it off a while ago


00:53:20.120 --> 00:53:21.680
'cause I thought it was kind of silly.


00:53:21.680 --> 00:53:23.740
- Yeah, yeah, this one is way more.


00:53:23.740 --> 00:53:26.360
- I don't know how that whole system works,


00:53:26.360 --> 00:53:29.220
but if they had archived Flask 2.0


00:53:29.220 --> 00:53:32.500
after all of my work was like done, I'd be much happier.


00:53:32.500 --> 00:53:36.800
But they archived it like two years ago now.


00:53:36.800 --> 00:53:40.500
- Yeah, so there's a lot of ways


00:53:40.500 --> 00:53:43.140
in which Python is being used on Mars.


00:53:43.140 --> 00:53:48.140
When the lander first landed there and, you know,


00:53:48.140 --> 00:53:51.940
people said, oh, look, there's the F prime library


00:53:51.940 --> 00:53:56.100
that was used to power the Ingenuity helicopter.


00:53:56.100 --> 00:53:58.140
That means Python's there.


00:53:58.140 --> 00:53:59.540
I'm like, ah, it looks like maybe Python


00:53:59.540 --> 00:54:01.740
just trained the model and C++ was there,


00:54:01.740 --> 00:54:04.000
but it turned out in the lander that went down.


00:54:04.000 --> 00:54:06.180
Actually, the cameras, all the different angles


00:54:06.180 --> 00:54:07.980
were controlled by Python,


00:54:07.980 --> 00:54:11.140
and then getting those images back to JPL


00:54:11.140 --> 00:54:12.800
was part of Python.


00:54:12.800 --> 00:54:15.880
And yeah, what's the story of the Flask and Mars?


00:54:15.880 --> 00:54:17.180
This is so cool.


00:54:17.180 --> 00:54:19.960
- Yeah, so Flask is actually part of fPrime.


00:54:21.460 --> 00:54:24.980
So fprime is like their, I'm not an expert on this,


00:54:24.980 --> 00:54:27.440
but it's like their flight control software, I think.


00:54:27.440 --> 00:54:29.940
So it's like a monitoring dashboard for everything.


00:54:29.940 --> 00:54:34.000
So they're using Flask to provide like all this information


00:54:34.000 --> 00:54:36.580
about the launches and flights and landings


00:54:36.580 --> 00:54:38.700
and get updates in real time.


00:54:38.700 --> 00:54:40.240
So I think that's where our stuff came in,


00:54:40.240 --> 00:54:43.540
but I'm sure other parts of their code are using Jinja


00:54:43.540 --> 00:54:47.580
or Click in other ways, not necessarily through Flask.


00:54:47.580 --> 00:54:49.700
- Yeah, that's so cool.


00:54:49.700 --> 00:54:50.540
What is the thing that-


00:54:50.540 --> 00:54:51.540
- So very exciting.


00:54:51.540 --> 00:54:54.780
Every now and then I'll see like a,


00:54:54.780 --> 00:54:57.880
you know, some big thing like this F prime


00:54:57.880 --> 00:55:00.740
and I'll, they won't have mentioned Flask or anything,


00:55:00.740 --> 00:55:03.300
but I'll have like, somehow I'll have like this


00:55:03.300 --> 00:55:04.900
intuition that it was used.


00:55:04.900 --> 00:55:07.900
And so like I went and just looked at F prime


00:55:07.900 --> 00:55:12.460
and I'm like, oh, it's Python requirements.txt, Flask.


00:55:12.460 --> 00:55:14.260
And I went and announced it on a GitHub.


00:55:14.260 --> 00:55:16.060
I'm like, wow, check this out.


00:55:16.060 --> 00:55:17.420
- Yeah, that's super cool.


00:55:17.420 --> 00:55:18.900
So neat, yeah.


00:55:18.900 --> 00:55:22.020
Go to the dependency graph.


00:55:22.020 --> 00:55:22.860
I'm sure we'll see.


00:55:22.860 --> 00:55:24.860
Yeah, look what number one dependency right there.


00:55:24.860 --> 00:55:26.460
- There we are.


00:55:26.460 --> 00:55:27.360
- In Flash RESTful.


00:55:27.360 --> 00:55:29.940
Yeah, something to do with APIs here, right?


00:55:29.940 --> 00:55:30.900
- Yeah.


00:55:30.900 --> 00:55:31.820
- Cool.


00:55:31.820 --> 00:55:35.100
All right, let's, I guess, round this out with,


00:55:35.100 --> 00:55:39.220
oh, two things actually.


00:55:39.220 --> 00:55:40.560
Real quick though, I wanna take a question,


00:55:40.560 --> 00:55:44.940
I think, or follow up comment from Ikevu.


00:55:44.940 --> 00:55:46.540
Might be off topic, they say,


00:55:46.540 --> 00:55:50.580
but it would be, they would love to know more


00:55:50.580 --> 00:55:53.580
about how to convince a large employer to spend money


00:55:53.580 --> 00:55:55.340
sponsoring an open source project.


00:55:55.340 --> 00:56:00.300
- I wish I had a good answer for this.


00:56:00.300 --> 00:56:02.740
I know there's been thought on this.


00:56:02.740 --> 00:56:06.540
I'm just not the best person to talk about it.


00:56:06.540 --> 00:56:07.780
I'm not an expert yet.


00:56:07.780 --> 00:56:13.360
I would say, look at Tidelift.


00:56:14.480 --> 00:56:18.720
their whole, that their company and their whole job


00:56:18.720 --> 00:56:21.640
is to be that in between, between open source


00:56:21.640 --> 00:56:24.440
who doesn't know how to convince companies to do this


00:56:24.440 --> 00:56:27.640
and companies who are using a lot of open source


00:56:27.640 --> 00:56:30.120
but don't know how to analyze their dependencies


00:56:30.120 --> 00:56:33.920
and divide up their support.


00:56:33.920 --> 00:56:36.080
And so if you go look at Tidelift,


00:56:36.080 --> 00:56:38.380
their whole goal is to enable that sort of thing


00:56:38.380 --> 00:56:41.660
and discuss it with management and all that.


00:56:43.480 --> 00:56:45.200
- Tidelift?


00:56:45.200 --> 00:56:46.040
- Maybe Tidelift.


00:56:46.040 --> 00:56:46.860
- That's not good if they're getting it.


00:56:46.860 --> 00:56:48.640
They might be down temporarily.


00:56:48.640 --> 00:56:50.480
Never seen that before.


00:56:50.480 --> 00:56:51.300
- Maybe.


00:56:51.300 --> 00:56:52.140
I think that maybe ACPS.


00:56:52.140 --> 00:56:52.980
- Oh, ACPS.


00:56:52.980 --> 00:56:54.640
- ACPS, yeah, we're good.


00:56:54.640 --> 00:56:55.720
Yeah, so that place.


00:56:55.720 --> 00:57:00.400
Yeah, I do think this is a good option as well.


00:57:00.400 --> 00:57:02.280
You know, they sponsored Talk By Dawn for a little while.


00:57:02.280 --> 00:57:04.640
And I think they're definitely trying


00:57:04.640 --> 00:57:05.620
to be creative in this, right?


00:57:05.620 --> 00:57:08.640
They're trying to offer something to employers


00:57:08.640 --> 00:57:11.920
that's not just put it on your charity column


00:57:11.920 --> 00:57:13.240
in the balance sheet.


00:57:13.240 --> 00:57:15.200
like we don't have a charity column in the balance sheet.


00:57:15.200 --> 00:57:16.720
What are you talking about?


00:57:16.720 --> 00:57:19.220
So doing something a little bit different there.


00:57:19.220 --> 00:57:22.120
- I think it's- - Go ahead, Phil.


00:57:22.120 --> 00:57:22.960
No, go ahead.


00:57:22.960 --> 00:57:24.760
- I was gonna say, you can look at it, I think,


00:57:24.760 --> 00:57:27.280
as a company as part of your recruiting spend.


00:57:27.280 --> 00:57:30.360
I think every company knows how competitive the market is.


00:57:30.360 --> 00:57:34.360
And I do think engineers do look at what interest


00:57:34.360 --> 00:57:35.960
and what you do in the open source community


00:57:35.960 --> 00:57:37.400
and look at it in a positive light.


00:57:37.400 --> 00:57:39.960
So I think that might help.


00:57:39.960 --> 00:57:41.340
- Yeah, I totally agree.


00:57:41.340 --> 00:57:46.140
A couple of other quick follow up questions.


00:57:46.140 --> 00:57:51.140
Olga asks, can F prime connect to APIs on earth?


00:57:51.140 --> 00:57:53.460
Like, do you guys know anything about this?


00:57:53.460 --> 00:57:55.900
- I think it is used on earth as well.


00:57:55.900 --> 00:57:58.900
I mean, like I said, it's like a monitoring dashboard.


00:57:58.900 --> 00:58:01.420
So it's not something that's actively running


00:58:01.420 --> 00:58:05.580
on the Rover, I think, from what I understand.


00:58:05.580 --> 00:58:10.580
I think it is accepting data from sources like the Rover


00:58:10.860 --> 00:58:13.300
and other systems and then displaying that


00:58:13.300 --> 00:58:14.840
and coordinating it.


00:58:14.840 --> 00:58:16.320
- Very, very cool.


00:58:16.320 --> 00:58:19.160
And then Joe asks if Armin Roenikers


00:58:19.160 --> 00:58:20.960
still involved with the project any?


00:58:20.960 --> 00:58:25.320
- Armin is not.


00:58:25.320 --> 00:58:30.160
He, I mean, he's still part of the GitHub organization


00:58:30.160 --> 00:58:32.760
and he's like in our maintainer channel on Discord,


00:58:32.760 --> 00:58:37.000
but he's moved on to other things.


00:58:37.000 --> 00:58:40.480
You know, he's working in Rust a lot and other things.


00:58:40.480 --> 00:58:42.720
- Yeah, my impression is he's kind of moved on to Rust


00:58:42.720 --> 00:58:45.080
and is just enjoying his time there, which is totally fine.


00:58:45.080 --> 00:58:47.120
Like people don't have to stick with one technology


00:58:47.120 --> 00:58:47.960
their whole life, right?


00:58:47.960 --> 00:58:49.960
Even if they made contributions.


00:58:49.960 --> 00:58:52.800
- That's one of the things I've been trying to do too


00:58:52.800 --> 00:58:57.800
since I became a maintainer was get more maintainers, right?


00:58:57.800 --> 00:59:01.280
So it's not just Armin and then after Armin,


00:59:01.280 --> 00:59:04.040
it's not just me, you know, I'm trying to expand it


00:59:04.040 --> 00:59:07.740
so it doesn't matter if Armin or I are still involved.


00:59:07.740 --> 00:59:09.040
- Yeah, yeah.


00:59:09.040 --> 00:59:10.520
And Box of Ninjas out there says,


00:59:10.520 --> 00:59:11.760
I need the Mars endpoint.


00:59:11.760 --> 00:59:16.160
- Yeah, I don't think they just let that out to anybody.


00:59:16.160 --> 00:59:19.440
- Yeah, there's probably, they don't put off in there.


00:59:19.440 --> 00:59:21.720
It's hard to find the endpoint.


00:59:21.720 --> 00:59:22.560
No, I have no idea.


00:59:22.560 --> 00:59:24.520
- Connect to the right satellite at the right time.


00:59:24.520 --> 00:59:25.640
- Exactly.


00:59:25.640 --> 00:59:27.680
You can just tunnel over there.


00:59:27.680 --> 00:59:30.160
All right, so I think that's probably


00:59:30.160 --> 00:59:32.360
all the stuff we got time for,


00:59:32.360 --> 00:59:34.160
but thank you guys for covering this.


00:59:34.160 --> 00:59:36.760
Let me ask you the last two questions


00:59:36.760 --> 00:59:38.080
before you get out of here.


00:59:38.080 --> 00:59:39.920
If you're gonna work on Flask or Quark,


00:59:39.920 --> 00:59:41.840
what editor do you use these days?


00:59:41.840 --> 00:59:48.120
- I've been using PyCharm for almost a decade now,


00:59:48.120 --> 00:59:49.640
I feel like.


00:59:49.640 --> 00:59:52.080
Pretty much since I started using Python.


00:59:52.080 --> 00:59:54.160
So PyCharm, all the way.


00:59:54.160 --> 00:59:55.720
- Right on, Bill?


00:59:55.720 --> 00:59:59.440
- I use Emacs, although I've used VS Code a few times.


00:59:59.440 --> 01:00:01.160
If I ever record something, I use VS Code,


01:00:01.160 --> 01:00:03.080
but yeah, Emacs is where I do the work.


01:00:03.080 --> 01:00:05.040
- Oh yeah, do it right down the bare metal.


01:00:05.040 --> 01:00:05.880
Awesome.


01:00:05.880 --> 01:00:06.720
- Yeah.


01:00:06.720 --> 01:00:10.320
- Cool, and then recommend some library package


01:00:10.320 --> 01:00:11.920
you all have come across recently


01:00:11.920 --> 01:00:13.000
that you're like, oh, this is super cool.


01:00:13.000 --> 01:00:15.800
People should know about X.


01:00:15.800 --> 01:00:17.040
Any ideas?


01:00:17.040 --> 01:00:20.160
- I would, I'm really enjoying using Pydantic


01:00:20.160 --> 01:00:22.280
to validate the incoming requests,


01:00:22.280 --> 01:00:24.320
like just as a data class setup.


01:00:24.320 --> 01:00:25.880
I know you can do it with different ones as well,


01:00:25.880 --> 01:00:28.440
but the syntax seems so clean just to say,


01:00:28.440 --> 01:00:30.200
this looks exactly like a data class


01:00:30.200 --> 01:00:33.760
and I just use it to validate my incoming.


01:00:33.760 --> 01:00:34.920
It's great.


01:00:34.920 --> 01:00:35.760
- That's fantastic.


01:00:35.760 --> 01:00:38.600
One of the things I've started to do as the first line


01:00:38.600 --> 01:00:42.260
in my Flask API endpoints is to say


01:00:42.260 --> 01:00:45.720
Pydantic model equals class star star,


01:00:45.720 --> 01:00:48.480
what is it, request dot JSON, something like that.


01:00:48.480 --> 01:00:50.200
Just immediately try to convert it


01:00:50.200 --> 01:00:52.280
to invalidate it with Pydantic.


01:00:52.280 --> 01:00:55.640
Something I learned recently, I had Samuel on the show


01:00:55.640 --> 01:00:59.120
who creates and maintains Pydantic,


01:00:59.120 --> 01:01:00.980
is, although I didn't learn about it on the show,


01:01:00.980 --> 01:01:02.000
someone else pointed out to me,


01:01:02.000 --> 01:01:07.000
there's a like a secrets capability built right


01:01:07.000 --> 01:01:10.960
into Pydantic that like works with like .env files


01:01:10.960 --> 01:01:12.400
and all sorts of stuff.


01:01:12.400 --> 01:01:13.560
It's got this whole mechanism.


01:01:13.560 --> 01:01:16.000
So yeah, that library does a bunch of cool stuff.


01:01:16.000 --> 01:01:21.200
- So I don't have a good answer for this


01:01:21.200 --> 01:01:25.360
because I've been just dealing with Flask itself


01:01:25.360 --> 01:01:26.880
for so long and getting those ready


01:01:26.880 --> 01:01:30.140
that I haven't really been exploring new stuff for myself.


01:01:31.400 --> 01:01:33.040
Does this mean I get another?


01:01:33.040 --> 01:01:34.920
- You can have another, but yeah.


01:01:34.920 --> 01:01:38.600
So like hopefully I get to learn about some new libraries


01:01:38.600 --> 01:01:41.760
soon after, you know, Flask 2.0 goes stable.


01:01:41.760 --> 01:01:45.720
I will say at work, this isn't official yet


01:01:45.720 --> 01:01:48.460
'cause we're gonna, we need to write documentation.


01:01:48.460 --> 01:01:51.140
It's totally unusable right now 'cause it's not documented,


01:01:51.140 --> 01:01:54.060
but we've been working on a open source library


01:01:54.060 --> 01:01:58.800
called auto-invent, which takes a data model,


01:01:58.800 --> 01:02:01.100
like such as your SQLAlchemy models


01:02:01.100 --> 01:02:05.300
and produces an entire GraphQL API and React front end


01:02:05.300 --> 01:02:06.780
from just the data model,


01:02:06.780 --> 01:02:09.420
plus like customizations to some metadata.


01:02:09.420 --> 01:02:10.500
- Oh, that's cool.


01:02:10.500 --> 01:02:11.820
- It's super handy.


01:02:11.820 --> 01:02:13.220
It's really cool.


01:02:13.220 --> 01:02:14.740
It's completely undocumented.


01:02:14.740 --> 01:02:17.980
So I will at some point, maybe half a year from now,


01:02:17.980 --> 01:02:20.460
announce the actual project.


01:02:20.460 --> 01:02:22.300
But if you go to an autoinvent.dev,


01:02:22.300 --> 01:02:24.780
you can see all our messy code right now.


01:02:24.780 --> 01:02:25.620
- Nice.


01:02:25.620 --> 01:02:29.300
Well, you got one more, go for it.


01:02:29.300 --> 01:02:31.740
So Trio, if you've not heard of it,


01:02:31.740 --> 01:02:34.020
it's a different Async/Await based


01:02:34.020 --> 01:02:35.700
event loop implementation.


01:02:35.700 --> 01:02:37.540
And I think I really like it


01:02:37.540 --> 01:02:40.700
'cause the structured concurrency it introduces


01:02:40.700 --> 01:02:43.260
is the way I think the most Pythonic way


01:02:43.260 --> 01:02:45.820
to do Async and Await.


01:02:45.820 --> 01:02:46.820
- Yeah, Trio is neat.


01:02:46.820 --> 01:02:50.100
I had the, I don't remember the maintainer's name,


01:02:50.100 --> 01:02:51.020
but I had him on the show.


01:02:51.020 --> 01:02:53.140
Nathan? Nathaniel, that's right.


01:02:53.140 --> 01:02:55.260
I had Nathaniel on the show.


01:02:55.260 --> 01:02:57.940
And yeah, it's super cool,


01:02:57.940 --> 01:02:59.980
Like how you can have dependencies between, you know,


01:02:59.980 --> 01:03:02.260
this task created those tasks and you cancel one,


01:03:02.260 --> 01:03:03.100
you cancel them all.


01:03:03.100 --> 01:03:06.620
There's a lot of interesting patterns that come out of there


01:03:06.620 --> 01:03:07.580
Very neat.


01:03:07.580 --> 01:03:08.580
All right.


01:03:08.580 --> 01:03:10.300
I think that's it.


01:03:10.300 --> 01:03:11.780
David, Phil, thank you.


01:03:11.780 --> 01:03:14.140
Quick shout out or a quick final call to action.


01:03:14.140 --> 01:03:16.700
People want to get into Flask 2.0.


01:03:16.700 --> 01:03:17.800
They want to upgrade their stuff.


01:03:17.800 --> 01:03:19.620
Maybe they want to take advantage of the async stuff


01:03:19.620 --> 01:03:20.460
or whatever.


01:03:20.460 --> 01:03:22.440
What do you tell them?


01:03:22.440 --> 01:03:23.780
Where do they go from here?


01:03:23.780 --> 01:03:26.700
- Well, look for that.


01:03:27.820 --> 01:03:30.960
Look for that new version releasing tomorrow or a week ago,


01:03:30.960 --> 01:03:33.400
depending on where you listen to this.


01:03:33.400 --> 01:03:35.900
Follow Palette's team on Twitter,


01:03:35.900 --> 01:03:38.260
if you wanna see announcements for new things.


01:03:38.260 --> 01:03:41.900
And also if you're interested in like contributing


01:03:41.900 --> 01:03:43.480
to these projects,


01:03:43.480 --> 01:03:45.820
I would encourage more people to go on GitHub,


01:03:45.820 --> 01:03:48.440
you know, at least star the projects you're using,


01:03:48.440 --> 01:03:50.280
but also watch them, you know,


01:03:50.280 --> 01:03:53.320
watch for new issues coming in.


01:03:53.320 --> 01:03:57.040
There's anybody can pick up one of these things and help out


01:03:57.040 --> 01:03:59.040
that we really appreciate.


01:03:59.040 --> 01:04:03.760
- Yeah, I think star and fork


01:04:03.760 --> 01:04:06.080
are the ones that get all the attention.


01:04:06.080 --> 01:04:09.560
But yeah, one thing that GitHub just recently added,


01:04:09.560 --> 01:04:10.880
I know I said this is it,


01:04:10.880 --> 01:04:13.480
but I just wanna give a little quick awareness to people,


01:04:13.480 --> 01:04:14.840
I think it's super cool.


01:04:14.840 --> 01:04:17.080
If you forked a repo,


01:04:17.080 --> 01:04:19.480
it used to be you'd have to go CLI


01:04:19.480 --> 01:04:22.440
and add an upstream origin,


01:04:22.440 --> 01:04:23.820
and then you have to kind of keep that in sync.


01:04:23.820 --> 01:04:26.200
Now they've added a button that if you go to a fork


01:04:26.200 --> 01:04:27.420
and it's yours, you can just click a button


01:04:27.420 --> 01:04:30.300
and go sync my fork with the original now.


01:04:30.300 --> 01:04:32.780
And I think that'll encourage people to fork it


01:04:32.780 --> 01:04:34.460
and just stay up to date a little bit easier.


01:04:34.460 --> 01:04:36.240
So that's pretty cool as well.


01:04:36.240 --> 01:04:39.340
Phil, final call to action.


01:04:39.340 --> 01:04:40.580
What do you say to folks?


01:04:40.580 --> 01:04:45.900
- Well, I think it would be go out and use it


01:04:45.900 --> 01:04:49.020
and let us know if it solves your needs,


01:04:49.020 --> 01:04:50.980
if it does what you want, yeah.


01:04:50.980 --> 01:04:52.120
- Yeah, awesome.


01:04:52.120 --> 01:04:54.540
All right, thank you both for being here.


01:04:54.540 --> 01:04:55.480
- Thanks Michael.


01:04:55.480 --> 01:04:57.160
- Yep, bye. - Thank you.


01:04:57.160 --> 01:05:00.120
- Bye, thanks everyone on the live stream as well.


01:05:00.120 --> 01:05:01.220
Thanks for being here.


01:05:01.220 --> 01:05:11.220
[BLANK_AUDIO]

