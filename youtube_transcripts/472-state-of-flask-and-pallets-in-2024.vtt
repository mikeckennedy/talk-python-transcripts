WEBVTT

00:00:00.001 --> 00:00:04.320
>> David, welcome back to Talk Python To Me.

00:00:04.320 --> 00:00:05.080
Great to have you here.

00:00:05.080 --> 00:00:06.320
>> Yeah, hello.

00:00:06.320 --> 00:00:13.360
>> Hello, hello. Going to be super fun to talk about Flask and more broadly,

00:00:13.360 --> 00:00:18.040
Palettes and just all the different projects around Flask and

00:00:18.040 --> 00:00:21.960
tools and variations like Cort and so on.

00:00:21.960 --> 00:00:27.080
You give a really nice talk at Embedded FlaskCon.

00:00:27.080 --> 00:00:30.280
Talk a bit about that in a second, about the state of Palettes.

00:00:30.280 --> 00:00:34.400
I thought, let's just take that idea and share it with everyone.

00:00:34.400 --> 00:00:36.240
Looking forward to talking about that.

00:00:36.240 --> 00:00:39.240
>> Yeah, there's been a lot going on.

00:00:39.240 --> 00:00:41.720
>> I bet there has.

00:00:41.720 --> 00:00:45.520
I can't remember exactly when you were on,

00:00:45.520 --> 00:00:47.760
I think it's about 100 episodes ago,

00:00:47.760 --> 00:00:49.520
which puts out a couple of years.

00:00:49.520 --> 00:00:51.760
What have you been up to the last couple of years?

00:00:51.760 --> 00:00:56.720
>> Just more Flask. It's all Flask all the time.

00:00:56.720 --> 00:00:58.800
>> Seems like such a simple API,

00:00:58.800 --> 00:01:00.680
but you can work on it forever, right?

00:01:00.680 --> 00:01:02.880
>> Yeah, I've acquired a few more libraries,

00:01:02.880 --> 00:01:05.200
so I've written more libraries and stuff as well,

00:01:05.200 --> 00:01:07.560
but still same job.

00:01:07.560 --> 00:01:11.400
Well, I guess I got a house, I got married.

00:01:11.400 --> 00:01:13.880
>> Okay. Congratulations, two times.

00:01:13.880 --> 00:01:14.000
>> Yeah.

00:01:14.000 --> 00:01:15.520
>> That's awesome.

00:01:15.520 --> 00:01:18.320
>> A little bit of life changes.

00:01:18.320 --> 00:01:22.720
>> Yeah, a little bit. Life keeps marching on. It's amazing.

00:01:22.720 --> 00:01:30.960
>> Cool. Well, Flask is certainly one of the most popular web frameworks.

00:01:30.960 --> 00:01:35.320
I guess we could start with giving people a sense of the popularity,

00:01:35.320 --> 00:01:37.920
but my thought is just like,

00:01:37.920 --> 00:01:43.440
"Wow, the pressure of working on something that affects so many folks."

00:01:43.440 --> 00:01:45.920
Have you pushed out a change?

00:01:45.920 --> 00:01:50.440
>> Yeah. I've had a weird thought before that,

00:01:50.440 --> 00:01:53.560
I try not to think about the numbers too often because it's like

00:01:53.560 --> 00:01:59.280
a 100 million or more if you add up all the different libraries and stuff a month.

00:01:59.280 --> 00:02:01.280
I've had a thought before,

00:02:01.280 --> 00:02:05.800
if I push out something that doesn't work for enough people,

00:02:05.800 --> 00:02:12.200
that probably has some very minor but noticeable effect on

00:02:12.200 --> 00:02:18.600
the tech sector for that day or hour, which is scary.

00:02:18.600 --> 00:02:23.760
>> Yeah. It's not quite an AWS US1 East downtime,

00:02:23.760 --> 00:02:27.080
but it's also not that.

00:02:27.080 --> 00:02:32.200
>> Yeah. I think definitely since I've started,

00:02:32.200 --> 00:02:35.280
a lot more people have become aware

00:02:35.280 --> 00:02:40.880
of better practices around pinning their dependencies sort of thing.

00:02:40.880 --> 00:02:44.440
In part because we did make

00:02:44.440 --> 00:02:48.760
some deprecations and then breaking changes in Flask and the other libraries,

00:02:48.760 --> 00:02:52.200
and people came to our issue tracker saying,

00:02:52.200 --> 00:02:54.440
"You broke something."

00:02:54.440 --> 00:02:58.040
Ultimately, I had to tell them,

00:02:58.040 --> 00:02:59.440
you need to be using a tool.

00:02:59.440 --> 00:03:01.600
There's quite a few tools out now,

00:03:01.600 --> 00:03:03.560
although we don't have a lock file standard yet,

00:03:03.560 --> 00:03:04.920
but there's pip compile,

00:03:04.920 --> 00:03:07.800
there's PDM, there's Rai.

00:03:07.800 --> 00:03:12.000
You need to use a tool and pin your dependency tree because then you

00:03:12.000 --> 00:03:17.400
can see when there's updates and you can update them deliberately,

00:03:17.400 --> 00:03:20.640
and test, and adapt to those changes.

00:03:20.640 --> 00:03:24.840
I was giving that message a lot in the beginning,

00:03:24.840 --> 00:03:27.560
and over the past five years or so,

00:03:27.560 --> 00:03:32.000
I've definitely had to post it less often.

00:03:32.000 --> 00:03:37.760
I feel like more people are aware of those tools and practices now.

00:03:37.760 --> 00:03:41.960
>> I would also add that the tooling has gotten a lot better at that.

00:03:41.960 --> 00:03:46.240
It used to be, "Okay, so what you're going to do is you're going to

00:03:46.240 --> 00:03:50.640
write a requirements.txt file and then you set your versions explicitly."

00:03:50.640 --> 00:03:52.880
That, for many people,

00:03:52.880 --> 00:03:55.280
only addressed the primary dependencies,

00:03:55.280 --> 00:03:57.720
not the transitive dependency.

00:03:57.720 --> 00:04:01.000
They might pin Flask, but did they pin Werkzeug?

00:04:01.000 --> 00:04:04.000
I don't know. They may have, probably they didn't.

00:04:04.000 --> 00:04:05.760
Unless these pip freeze,

00:04:05.760 --> 00:04:09.840
but then you gather a bunch of garbage that isn't actually about your project,

00:04:09.840 --> 00:04:12.800
that got sucked in from some other thing.

00:04:12.800 --> 00:04:15.520
It was really funky before.

00:04:15.520 --> 00:04:18.920
I don't know, you mentioned pip-tools and pip compile.

00:04:18.920 --> 00:04:22.080
I am loving that workflow these days.

00:04:22.080 --> 00:04:25.080
>> Yeah, that's what I've switched all the projects themselves to.

00:04:25.080 --> 00:04:29.040
If you go look at Flask or Werkzeug or any of those,

00:04:29.040 --> 00:04:31.680
we have a requirements folder with

00:04:31.680 --> 00:04:34.280
different environment files that say,

00:04:34.280 --> 00:04:37.400
"Here are our direct dependencies," and then we compile those into

00:04:37.400 --> 00:04:40.400
fully locked dependencies and all our tests run off of those,

00:04:40.400 --> 00:04:45.480
our build and publish workflow runs off of those.

00:04:45.480 --> 00:04:47.760
It's not quite the same because those are

00:04:47.760 --> 00:04:50.760
our development dependencies instead of our runtime dependencies,

00:04:50.760 --> 00:04:58.360
but it's still really helpful just to know that if we don't do anything,

00:04:58.360 --> 00:05:01.680
our process will continue to work because it worked last time.

00:05:01.680 --> 00:05:05.800
If we have contributors, it sprints.

00:05:05.800 --> 00:05:08.360
Now, it's much easier.

00:05:08.360 --> 00:05:12.840
I had a problem the first few sprints I was running where every developer would

00:05:12.840 --> 00:05:15.480
try to set up their own machine and get different versions of things.

00:05:15.480 --> 00:05:18.000
>> Right, point in time snapshots,

00:05:18.000 --> 00:05:19.840
just whenever they got started, right?

00:05:19.840 --> 00:05:23.480
>> Yeah. Now, they all install the exact same list of dependencies,

00:05:23.480 --> 00:05:25.960
so everybody's development environment looks exactly the same,

00:05:25.960 --> 00:05:28.280
which is a lot more usable.

00:05:28.280 --> 00:05:30.440
>> Yeah, that's excellent. I have the same workflow.

00:05:30.440 --> 00:05:34.880
I have a top-level dependencies that I actually would consider my dependencies,

00:05:34.880 --> 00:05:40.960
and then I unpinned and I pip compiled those to a pin dependencies,

00:05:40.960 --> 00:05:42.520
and I just do the upgrade when I feel like,

00:05:42.520 --> 00:05:46.280
"Oh, let's go get some new dependencies and see how that goes."

00:05:46.280 --> 00:05:52.160
Yeah, very nice. Well, let's start with FlaskCon.

00:05:52.160 --> 00:05:56.000
I called it an embedded conference.

00:05:56.000 --> 00:05:58.640
This is different than it has been before.

00:05:58.640 --> 00:06:01.400
I think FlaskCon at one point was a purely online one,

00:06:01.400 --> 00:06:02.600
or maybe that was just COVID,

00:06:02.600 --> 00:06:05.160
and it was just a matter of time, I don't remember.

00:06:05.160 --> 00:06:09.520
>> It was timing, really.

00:06:09.520 --> 00:06:16.560
Years ago, right before COVID started or quarantine started,

00:06:16.560 --> 00:06:23.800
I had been working myself up to do an in-person conference.

00:06:23.800 --> 00:06:28.720
It's something I've wanted to do for a while because I love attending conferences.

00:06:28.720 --> 00:06:30.360
I love the community around it.

00:06:30.360 --> 00:06:33.160
DjangoCon happened in San Diego a few times,

00:06:33.160 --> 00:06:35.400
and that was really fun because I just crashed it.

00:06:35.400 --> 00:06:40.400
I was the Flask person, San Diego Flask person.

00:06:40.400 --> 00:06:44.120
I was getting ready to do that and then COVID happened,

00:06:44.120 --> 00:06:46.320
but some other members of the community,

00:06:46.320 --> 00:06:50.560
the pallets team and community stepped up and said,

00:06:50.560 --> 00:06:53.120
"Hey, we can do an online one."

00:06:53.120 --> 00:06:57.880
Running a conference, even online, is very hard.

00:06:57.880 --> 00:06:59.640
There's a lot of stuff to keep track of.

00:06:59.640 --> 00:07:00.600
>> Oh, yeah.

00:07:00.600 --> 00:07:04.240
>> We ran three online conferences.

00:07:04.240 --> 00:07:09.160
I think 2020, 2021, and 2023.

00:07:09.160 --> 00:07:10.760
I think we skipped 'em too.

00:07:10.760 --> 00:07:13.840
But those are all on pyvideo.org if you want to find them.

00:07:13.840 --> 00:07:17.760
Then FlaskCon 2024 is there also.

00:07:17.760 --> 00:07:22.480
I finally got the opportunity with PyCon.

00:07:22.480 --> 00:07:28.400
They previously had this hatchery program where you could propose,

00:07:28.400 --> 00:07:31.960
"I want to do this event," and the hatchery program will say,

00:07:31.960 --> 00:07:34.160
"That sounds great.

00:07:34.160 --> 00:07:37.000
We will handle the venue,

00:07:37.000 --> 00:07:40.920
the food, the insurance, the legal stuff.

00:07:40.920 --> 00:07:44.720
You get one of our rooms and you can do whatever you want in it,

00:07:44.720 --> 00:07:47.840
or whatever you propose in it."

00:07:47.840 --> 00:07:51.280
Last year at PyCon,

00:07:51.280 --> 00:07:53.200
I talked to some of the organizers and they suggested,

00:07:53.200 --> 00:07:54.600
"Hey, the hatchery is coming back.

00:07:54.600 --> 00:07:56.000
This would be a great way to do it."

00:07:56.000 --> 00:08:00.240
So that you don't have to learn everything at once.

00:08:00.240 --> 00:08:01.040
You can practice.

00:08:01.040 --> 00:08:01.640
>> Right.

00:08:01.640 --> 00:08:06.320
>> Yeah. We managed to do some advertising.

00:08:06.320 --> 00:08:10.240
It's hard to advertise new conferences in general,

00:08:10.240 --> 00:08:18.840
and then especially now that a lot of the Python community is not on Twitter anymore.

00:08:18.840 --> 00:08:22.000
I'm not. Even if they were,

00:08:22.000 --> 00:08:24.440
everything is fragmented more.

00:08:24.440 --> 00:08:28.360
So it was hard to get the reach and get enough CFP proposals.

00:08:28.360 --> 00:08:31.920
But we did get a few and ended up

00:08:31.920 --> 00:08:36.720
accepting two people from the community that gave just wonderful talks.

00:08:36.720 --> 00:08:40.440
>> I saw one on doing PWAs.

00:08:40.440 --> 00:08:42.520
What was the other one on?

00:08:42.520 --> 00:08:43.960
The talks.

00:08:43.960 --> 00:08:46.280
>> Was it progressive monomers? No, there's one on-

00:08:46.280 --> 00:08:47.800
>> Single page, sorry.

00:08:47.800 --> 00:08:50.920
>> There's one on observability.

00:08:52.000 --> 00:08:59.080
>> Yeah, PWAs or single page apps and the extension ecosystem,

00:08:59.080 --> 00:09:02.600
and the idea around defining Flask plugins.

00:09:02.600 --> 00:09:08.160
Then there's my talk, which was just the subject of this podcast.

00:09:08.160 --> 00:09:10.920
>> Welcome people. We've been up to you.

00:09:10.920 --> 00:09:17.440
Yeah, that's cool. So will it maybe be a PyCon next year?

00:09:17.440 --> 00:09:20.080
Or are you going to branch out?

00:09:20.080 --> 00:09:21.880
>> I don't know yet.

00:09:21.880 --> 00:09:23.640
I think they would accept me back,

00:09:23.640 --> 00:09:25.360
but I wouldn't want to.

00:09:25.360 --> 00:09:27.320
I kind of view the hatchery.

00:09:27.320 --> 00:09:30.240
I don't know if this is true, but I view the hatchery as like,

00:09:30.240 --> 00:09:32.000
we're going to help you get started,

00:09:32.000 --> 00:09:34.280
but not keep coming back for the same thing.

00:09:34.280 --> 00:09:35.800
I don't want to take it.

00:09:35.800 --> 00:09:37.920
>> Right. I'm a 10-year rookie.

00:09:37.920 --> 00:09:41.320
You're not a rookie anymore. Get out here with a, make your place.

00:09:41.320 --> 00:09:45.600
>> I would still love to run a conference,

00:09:45.600 --> 00:09:50.040
somewhat selfishly so that I can run one in San Diego or on the West Coast at least.

00:09:50.040 --> 00:09:52.240
>> That's what I was going to say. How about San Diego?

00:09:52.240 --> 00:09:55.360
Then we can all come down there and stay by the beach.

00:09:55.360 --> 00:09:57.280
>> Yeah. I mentioned DjangoCon before,

00:09:57.280 --> 00:10:01.400
but they stayed in San Diego for three years straight at this little hotel.

00:10:01.400 --> 00:10:03.160
It was really nice, had a pool.

00:10:03.160 --> 00:10:09.160
People just congregated and it was like 15-minute drive for me.

00:10:09.160 --> 00:10:15.080
Next year at PyCon, I might not be there.

00:10:15.120 --> 00:10:20.080
We're expecting our daughter to be born in January next year.

00:10:20.080 --> 00:10:24.200
>> Congratulations. That might take precedence over PyCon?

00:10:24.200 --> 00:10:26.320
>> I'm going to have a lot less time in general,

00:10:26.320 --> 00:10:29.000
which will come up in other things we're going to talk about.

00:10:29.000 --> 00:10:33.800
But yeah, I probably for the first time since 2016 or 2015,

00:10:33.800 --> 00:10:36.560
I will not go to PyCon probably.

00:10:36.560 --> 00:10:41.200
There was a conference.

00:10:41.200 --> 00:10:44.240
This was the last conference I went to before quarantine.

00:10:44.240 --> 00:10:45.880
Two weeks before quarantine hit,

00:10:45.880 --> 00:10:48.240
I went up to Los Angeles for PyBeach,

00:10:48.240 --> 00:10:52.680
which was this very small first-time conference.

00:10:52.680 --> 00:10:55.680
I just love those little ones.

00:10:55.680 --> 00:11:00.200
I met the organizer, Nick Cantar,

00:11:00.200 --> 00:11:03.400
at North Bay Python a few times now and I've told him,

00:11:03.400 --> 00:11:06.560
"Look, we should try to bring that back."

00:11:06.560 --> 00:11:09.480
I think there's a few other people who are interested as well.

00:11:09.480 --> 00:11:11.760
It doesn't have to be FlaskCon specifically,

00:11:11.760 --> 00:11:14.520
but if I could run some local conference,

00:11:14.520 --> 00:11:17.720
I could use some Flask stuff or attract some Flask stuff.

00:11:17.720 --> 00:11:23.720
>> Well, I'm pretty excited that PyCon is going to be in Long Beach year after next.

00:11:23.720 --> 00:11:26.840
>> Yeah. Two years from now, that'll be really nice as well.

00:11:26.840 --> 00:11:30.320
>> That'll be really nice, but maybe you can drum up a bunch of interest and

00:11:30.320 --> 00:11:34.040
connect with a lot of people who are conference goers of that place,

00:11:34.040 --> 00:11:36.960
but encourage them to sign up for a list and get notified

00:11:36.960 --> 00:11:39.240
about whatever this other thing is.

00:11:39.240 --> 00:11:41.720
Because it'll be in the same basic neighborhood.

00:11:41.720 --> 00:11:43.000
>> Yeah.

00:11:43.000 --> 00:11:46.760
>> Jazzy out in the audience asks,

00:11:46.760 --> 00:11:50.360
"Can we attend FlaskCon online?"

00:11:50.360 --> 00:11:55.400
>> This year, or this in-person one in 2024,

00:11:55.400 --> 00:11:56.680
we weren't able to do that,

00:11:56.680 --> 00:12:00.400
but all the talks are available now on our YouTube channel.

00:12:00.400 --> 00:12:02.640
If you just search FlaskCon 2024,

00:12:02.640 --> 00:12:07.720
you'll find it or pyvideo.org has all of them listed.

00:12:09.000 --> 00:12:12.200
The first three we ran were purely online,

00:12:12.200 --> 00:12:13.760
so you could watch them streaming.

00:12:13.760 --> 00:12:16.400
This year, we just didn't have the infrastructure for it,

00:12:16.400 --> 00:12:21.840
so we couldn't really manage to do a live stream and the recordings at the same time.

00:12:21.840 --> 00:12:26.320
I was lucky enough to get Elaine Wong's help doing the recordings,

00:12:26.320 --> 00:12:28.840
and she brought all her cool specialized equipment.

00:12:28.840 --> 00:12:31.480
So we were able to get the recordings up really fast at least.

00:12:31.480 --> 00:12:34.720
>> Yeah, that's really good. Are the ones for PyCon even up yet?

00:12:34.720 --> 00:12:37.240
I don't think they are. Not that I'm aware of.

00:12:37.240 --> 00:12:39.720
>> Maybe they're going really slowly, but yeah, it was really nice.

00:12:39.720 --> 00:12:43.200
We just recorded this hard drive and she was like,

00:12:43.200 --> 00:12:46.720
"Oh, you guys timed all your starts and stops really well."

00:12:46.720 --> 00:12:49.600
So all I have to do is do these simple cuts and it's all up.

00:12:49.600 --> 00:12:52.440
>> Just trim the edges and upload. Perfect.

00:12:52.440 --> 00:12:53.080
>> Yeah.

00:12:53.080 --> 00:12:54.440
>> Yeah, that's really cool.

00:12:54.440 --> 00:12:59.640
So yeah, I'll link to the playlist of FlaskCon 2024 for folks in the show notes.

00:12:59.640 --> 00:13:01.600
They can check that out. Awesome.

00:13:01.600 --> 00:13:04.480
Well, we'll see what 2025 brings.

00:13:04.480 --> 00:13:07.600
Hopefully, some more good conference.

00:13:07.600 --> 00:13:15.360
>> Yeah, we might have other team members besides me attending PyCon as well.

00:13:15.360 --> 00:13:16.840
So we'll see what happens.

00:13:16.840 --> 00:13:19.240
>> Sure. Get someone else to carry the torch.

00:13:19.240 --> 00:13:22.080
>> [inaudible] space or something. So there's always something going on.

00:13:22.080 --> 00:13:29.480
>> Yeah, for sure. Now, I want to talk about the state of Palettes in 2024.

00:13:29.480 --> 00:13:33.320
But surely there are quite a few people out there who listen,

00:13:33.320 --> 00:13:36.440
or really new to Python and programming.

00:13:36.440 --> 00:13:39.600
You'd be surprised. A lot of people say they use it like this podcast,

00:13:39.600 --> 00:13:42.240
like language immersion, like you want to learn Portuguese,

00:13:42.240 --> 00:13:43.840
you move to Brazil,

00:13:43.840 --> 00:13:48.080
you want to learn Python, you just put on your earbuds and listen till it makes sense.

00:13:48.080 --> 00:13:51.360
So especially for those folks, what is Palettes?

00:13:51.360 --> 00:13:55.200
>> Palettes is an open-source organization.

00:13:55.200 --> 00:13:57.200
So we're not a company,

00:13:57.200 --> 00:14:03.200
but we do have a team of volunteer open-source maintainers.

00:14:03.200 --> 00:14:09.880
Who volunteer their free time to work on Flask and the libraries that make up Flask.

00:14:09.880 --> 00:14:12.620
That was its purpose when it was created was,

00:14:12.620 --> 00:14:15.640
hey, Flask has these set of libraries.

00:14:15.640 --> 00:14:22.160
Arvin, the original author of them was not as involved in them anymore,

00:14:22.160 --> 00:14:24.960
and he wanted the community to be more involved in them.

00:14:24.960 --> 00:14:26.400
So he created this organization.

00:14:26.400 --> 00:14:30.200
This was right around when I was becoming maintainer too, eight years ago.

00:14:31.320 --> 00:14:35.880
So it's the organization that holds those projects

00:14:35.880 --> 00:14:41.960
and the team that maintains and sets policies and that sort of thing.

00:14:41.960 --> 00:14:46.760
So Flask is the most popular library though,

00:14:46.760 --> 00:14:49.680
everybody heard of, followed by Jinja and Click.

00:14:49.680 --> 00:14:51.880
But then we also have Versoic,

00:14:51.880 --> 00:14:54.160
which is the lower level stuff below Flask,

00:14:54.160 --> 00:14:55.920
and then Markup Safe and It's Dangerous are

00:14:55.920 --> 00:14:59.840
two little helper libraries for those things.

00:14:59.840 --> 00:15:06.160
And then now we've also got Cort, which is the async version of Flask.

00:15:06.160 --> 00:15:08.000
That's an official Palettes project now,

00:15:08.000 --> 00:15:12.240
even though it started as just kind of a separate thing made by Flask.

00:15:12.240 --> 00:15:14.960
Yeah, it was an outside thing that Philip Jones worked on,

00:15:14.960 --> 00:15:20.960
and now it's coming closer and closer to being official.

00:15:20.960 --> 00:15:26.600
Yeah, and we're doing a lot of work on that

00:15:26.600 --> 00:15:30.680
to kind of try to unify Flask and Cort as much as possible.

00:15:30.680 --> 00:15:35.560
So behind the scenes, they're sharing a lot more code now.

00:15:35.560 --> 00:15:40.520
Cort, like Versoic is all the low level request response handling

00:15:40.520 --> 00:15:43.240
for the Flask users, and Cort wasn't using that at first

00:15:43.240 --> 00:15:45.880
because it needed like much more async things,

00:15:45.880 --> 00:15:52.160
but we've managed to develop a lot more things called,

00:15:52.160 --> 00:15:57.440
the term is called SansIO, like without input/output,

00:15:57.440 --> 00:16:00.080
where we have all like the behavior that's common to both,

00:16:00.080 --> 00:16:05.120
and it doesn't require asyncIO versus sync processes

00:16:05.120 --> 00:16:07.280
shared between Cort and Flask.

00:16:07.280 --> 00:16:12.560
And eventually, we're slowly moving in that direction.

00:16:12.560 --> 00:16:16.160
The idea is that at some point you will not pip install Cort

00:16:16.160 --> 00:16:17.920
or import Cort anymore.

00:16:17.920 --> 00:16:20.080
You'll just pip install Flask and then do like

00:16:20.080 --> 00:16:23.120
from Flask import Cort instead.

00:16:23.120 --> 00:16:25.360
And so that will be in the library as well

00:16:25.360 --> 00:16:28.320
once we get to like a point that we're really comfortable with.

00:16:28.320 --> 00:16:30.080
I see you're shipping one thing.

00:16:30.080 --> 00:16:33.360
Will you be able to use the same app?

00:16:33.360 --> 00:16:38.160
You know, we say at app get, or will that be a--

00:16:38.160 --> 00:16:39.520
Yeah, that's the one thing--

00:16:39.520 --> 00:16:42.720
App F equals Flask and app Q equals Cort?

00:16:42.720 --> 00:16:46.960
Yeah, you'll still have one single app,

00:16:46.960 --> 00:16:48.880
but you're going to have to pick ahead of time.

00:16:49.760 --> 00:16:51.520
We've tried to think of ways around this,

00:16:51.520 --> 00:16:55.200
but just the way that Flask is constructed

00:16:55.200 --> 00:17:02.720
means that so much of it is customizable by extensions.

00:17:02.720 --> 00:17:06.880
And those hook APIs that extensions can customize,

00:17:06.880 --> 00:17:10.000
all the extensions out there expect that they're sync,

00:17:10.000 --> 00:17:14.240
they're def whatever, not async def, whatever, right?

00:17:14.240 --> 00:17:19.280
And maybe we'll figure out something,

00:17:19.280 --> 00:17:21.280
but so far we can't figure out a way to

00:17:21.280 --> 00:17:24.640
unify that into a single object.

00:17:24.640 --> 00:17:25.920
So you're going to have to still pick,

00:17:25.920 --> 00:17:30.480
I want to be async first or sync first.

00:17:30.480 --> 00:17:32.720
- Yeah. - Yeah.

00:17:32.720 --> 00:17:35.840
But at least it'll be in one place.

00:17:35.840 --> 00:17:37.280
Like you're not going to have to decide,

00:17:37.280 --> 00:17:38.640
oh, I need to know about Cort.

00:17:38.640 --> 00:17:40.480
You can just look at the Flask docs and see like,

00:17:40.480 --> 00:17:44.480
oh, I'm going to be doing mostly like web requests

00:17:44.480 --> 00:17:46.160
or like video processing or something

00:17:46.160 --> 00:17:47.920
that's like the IO intensive.

00:17:47.920 --> 00:17:52.960
I should pick Cort or I'm just doing like the basic API

00:17:52.960 --> 00:17:55.440
that everybody makes for their data science project.

00:17:55.440 --> 00:17:56.400
I just need Flask.

00:17:56.400 --> 00:17:59.600
- Okay. - Yeah.

00:17:59.600 --> 00:18:01.040
Yeah, yeah. Really interesting.

00:18:01.040 --> 00:18:03.760
Question out in the audience,

00:18:03.760 --> 00:18:06.400
will it, it sounds like it'll work both

00:18:06.400 --> 00:18:10.960
WSGI and ASGI.

00:18:10.960 --> 00:18:16.400
Any future where it just goes all async?

00:18:16.400 --> 00:18:18.320
Not likely in the short term, it sounds like, right?

00:18:18.320 --> 00:18:24.080
- Yeah. Like Flask will always be WSGI

00:18:24.080 --> 00:18:28.880
because it's so tied to how sync processes work.

00:18:28.880 --> 00:18:33.040
ASGI has an ability to,

00:18:33.040 --> 00:18:34.960
and so like if you use like Hypercorn,

00:18:34.960 --> 00:18:38.000
which is a popular ASGI server,

00:18:38.000 --> 00:18:41.440
which is also by Phil from Cort,

00:18:43.040 --> 00:18:46.960
you can run a WSGI application as an ASGI application.

00:18:46.960 --> 00:18:51.840
You don't necessarily get all the benefits of ASGI,

00:18:51.840 --> 00:18:53.680
but you can at least run it with that.

00:18:53.680 --> 00:18:56.320
And kind of like in a similar vein,

00:18:56.320 --> 00:18:57.760
like if you're using Cort,

00:18:57.760 --> 00:19:00.240
you can write both sync and async things

00:19:00.240 --> 00:19:01.520
and they all just work together.

00:19:01.520 --> 00:19:02.480
- Yeah. - You just,

00:19:02.480 --> 00:19:06.240
and with Flask, you can write async stuff in Flask right now.

00:19:06.240 --> 00:19:11.840
You just don't get the benefits of ASGI's connection pooling.

00:19:12.320 --> 00:19:16.800
So you're still doing one worker per request response,

00:19:16.800 --> 00:19:20.080
but you can in that worker kick off like async code.

00:19:20.080 --> 00:19:22.160
- Right. Okay. - More easily.

00:19:22.160 --> 00:19:25.600
- Interesting. Yeah. I've done stuff for like FastAPI.

00:19:25.600 --> 00:19:29.200
I've written a decorator that it decorates

00:19:29.200 --> 00:19:31.760
both sync and async methods.

00:19:31.760 --> 00:19:33.040
And it's pretty tricky.

00:19:33.040 --> 00:19:34.080
There's just basically,

00:19:34.080 --> 00:19:37.520
- Yeah. - It has two wrappers.

00:19:37.520 --> 00:19:38.560
It goes, all right, well, which are you?

00:19:38.560 --> 00:19:40.320
We're gonna actually apply that one to you.

00:19:40.320 --> 00:19:42.320
You know, it's tricky to juggle.

00:19:42.320 --> 00:19:43.280
And then all the plugins,

00:19:43.280 --> 00:19:45.520
like it's gotta be a gnarly combination.

00:19:45.520 --> 00:19:48.000
- Yeah. We're like, basically,

00:19:48.000 --> 00:19:50.000
we're just like taking it in baby steps.

00:19:50.000 --> 00:19:53.120
And we're hoping like, as we keep unifying their code,

00:19:53.120 --> 00:19:54.560
like their shared code more and more,

00:19:54.560 --> 00:19:58.720
we can start like discovering like good patterns

00:19:58.720 --> 00:20:01.760
for writing an extension that works in both, for example,

00:20:01.760 --> 00:20:05.520
and documenting those and maybe helping some extensions

00:20:05.520 --> 00:20:08.400
that are popular update to that.

00:20:08.400 --> 00:20:11.360
- Yeah. - So it's a slow process,

00:20:11.360 --> 00:20:13.520
but like it's surmountable.

00:20:13.520 --> 00:20:18.400
- Yeah. Maybe you get to a point where they're close enough.

00:20:18.400 --> 00:20:19.760
You're like, oh, now it's really obvious

00:20:19.760 --> 00:20:21.680
how these things unify.

00:20:21.680 --> 00:20:22.960
At the beginning, it wasn't right.

00:20:22.960 --> 00:20:29.120
Okay. So what's the state?

00:20:29.120 --> 00:20:29.760
How are things?

00:20:29.760 --> 00:20:31.440
- What's the state?

00:20:31.440 --> 00:20:34.960
- Maybe start with the big boy flask.

00:20:36.880 --> 00:20:39.200
- And Inbox Zero is like one of the biggest takeaways.

00:20:39.200 --> 00:20:40.320
- Inbox Zero. - Yeah.

00:20:40.320 --> 00:20:42.400
- It was actually, that wasn't 2024.

00:20:42.400 --> 00:20:44.880
That was a 2021 or 22, I think.

00:20:44.880 --> 00:20:47.920
But- - Look at that.

00:20:47.920 --> 00:20:51.440
- Yeah. We don't have like true zero most of the time,

00:20:51.440 --> 00:20:53.280
although I do get down to it every now and then.

00:20:53.280 --> 00:20:57.360
But I did hit Inbox Zero.

00:20:57.360 --> 00:21:01.040
So when I first started maintaining all these libraries,

00:21:01.040 --> 00:21:02.400
I think combined,

00:21:02.400 --> 00:21:05.360
there was probably over a thousand open issues and PRs.

00:21:05.680 --> 00:21:10.000
And that's a nightmare if you know all the code,

00:21:10.000 --> 00:21:11.520
like if you were the author,

00:21:11.520 --> 00:21:13.040
but I was not the author of this code.

00:21:13.040 --> 00:21:15.440
Like, so I was both unfamiliar with the internals

00:21:15.440 --> 00:21:16.400
of all these libraries

00:21:16.400 --> 00:21:20.480
and like had to keep track of all these issues.

00:21:20.480 --> 00:21:22.320
So I was like learning libraries,

00:21:22.320 --> 00:21:24.000
learning how to be a maintainer

00:21:24.000 --> 00:21:27.520
and trying to keep track of like all these requests

00:21:27.520 --> 00:21:29.920
going back and forth and like computing PRs

00:21:29.920 --> 00:21:31.040
and all that sort of stuff.

00:21:31.600 --> 00:21:35.360
So it was early on, it was a goal I identified of like,

00:21:35.360 --> 00:21:36.960
I just need to make this manageable.

00:21:36.960 --> 00:21:40.240
And once I got there, it's become a lot easier.

00:21:40.240 --> 00:21:41.920
Like once you're at Inbox Zero,

00:21:41.920 --> 00:21:43.760
it's a lot easier to keep it hovering.

00:21:43.760 --> 00:21:45.840
- It is. I'm really feeling,

00:21:45.840 --> 00:21:47.360
I'm feeling rough about my true inbox.

00:21:47.360 --> 00:21:51.120
I'm looking at like five or six persistent emails.

00:21:51.120 --> 00:21:52.240
I really got to get back to you,

00:21:52.240 --> 00:21:54.960
but it's a whole different deal than if it's 10,000.

00:21:54.960 --> 00:21:58.320
Did you declare any sort of bankruptcy equivalent

00:21:58.320 --> 00:21:59.200
of like, you know,

00:21:59.360 --> 00:22:02.480
any sort of bankruptcy equivalent of like inbox bank,

00:22:02.480 --> 00:22:04.880
where you just go like archive a good,

00:22:04.880 --> 00:22:06.160
like if it's two years or older,

00:22:06.160 --> 00:22:07.040
I'm just going to archive it

00:22:07.040 --> 00:22:08.560
and it'll come back if it matters.

00:22:08.560 --> 00:22:11.520
Or did you literally go through everyone and deal with it?

00:22:11.520 --> 00:22:17.120
- I did go through everyone individually.

00:22:17.120 --> 00:22:18.640
I didn't just blanket say everything

00:22:18.640 --> 00:22:20.640
older than two years is closed.

00:22:20.640 --> 00:22:24.000
But I did kind of treat things as like,

00:22:24.000 --> 00:22:27.760
I don't like stale bots.

00:22:27.760 --> 00:22:29.200
So we don't run a stale bot.

00:22:29.200 --> 00:22:30.400
- Yeah, I don't like those either.

00:22:30.400 --> 00:22:30.900
- Yeah.

00:22:30.900 --> 00:22:37.200
- Yeah. Like I don't object to things being closed,

00:22:37.200 --> 00:22:39.760
like as the resolution versus fixed,

00:22:39.760 --> 00:22:43.440
but I want like somebody to be making that decision.

00:22:43.440 --> 00:22:44.560
- Right, right.

00:22:44.560 --> 00:22:47.120
- You know, and put a reason behind it.

00:22:47.120 --> 00:22:52.160
So yeah, I tried like going through every single issue.

00:22:52.160 --> 00:22:54.800
Basically my workflow is just every single day,

00:22:54.800 --> 00:22:57.520
pick an issue, work on it,

00:22:57.520 --> 00:23:00.720
pick another one, okay, it's been a couple hours,

00:23:00.720 --> 00:23:01.680
wait until the next day.

00:23:01.680 --> 00:23:05.200
And yeah, just like had to keep making calls on them.

00:23:05.200 --> 00:23:07.280
- Yeah, you're like, all right, two come in a day,

00:23:07.280 --> 00:23:10.240
I'm going to do 20 a day until I catch up.

00:23:10.240 --> 00:23:11.120
It sounds like that, right?

00:23:11.120 --> 00:23:13.920
- There was a lot of stuff also where it was,

00:23:13.920 --> 00:23:18.080
it had just been sitting open for years, you know,

00:23:18.080 --> 00:23:21.920
and nobody had really commented on it besides like,

00:23:21.920 --> 00:23:24.080
or maybe they had, the most people had commented

00:23:24.080 --> 00:23:26.400
on it was saying like, me too,

00:23:26.400 --> 00:23:29.120
but they hadn't actually like moved the discussion forward.

00:23:29.120 --> 00:23:33.600
And I, you know,

00:23:33.600 --> 00:23:38.320
it would be nice if open source,

00:23:38.320 --> 00:23:40.160
if like more people like contribute,

00:23:40.160 --> 00:23:42.640
I don't blame anybody for not contributing,

00:23:42.640 --> 00:23:43.920
you know, or being a contributor,

00:23:43.920 --> 00:23:45.600
but I would love to like attract more,

00:23:45.600 --> 00:23:47.920
you know, long-term contributors and stuff.

00:23:47.920 --> 00:23:49.200
But that's like kind of the way it starts

00:23:49.200 --> 00:23:53.360
is you need to like help people like make calls

00:23:53.360 --> 00:23:54.640
and stuff, evaluate things, right?

00:23:55.360 --> 00:23:56.800
You know, instead of saying me too,

00:23:56.800 --> 00:23:59.040
start looking into it and saying like, okay, me too.

00:23:59.040 --> 00:24:02.480
And okay, here's all the like issues

00:24:02.480 --> 00:24:03.840
that might come up when we do this,

00:24:03.840 --> 00:24:04.960
or I looked at the code base

00:24:04.960 --> 00:24:06.160
and we could do it this way, you know?

00:24:06.160 --> 00:24:07.600
- Right, exactly.

00:24:07.600 --> 00:24:08.080
- People are doing it.

00:24:08.080 --> 00:24:09.520
- I also want it, but I want it,

00:24:09.520 --> 00:24:11.040
and I think here's a path forward,

00:24:11.040 --> 00:24:12.720
or here's a prototype.

00:24:12.720 --> 00:24:15.440
- Yeah, you know, like we have to advance the conversation.

00:24:15.440 --> 00:24:18.960
And that wasn't like happening in a lot of the old issues.

00:24:18.960 --> 00:24:19.840
So I did kind of like,

00:24:19.840 --> 00:24:23.040
I didn't outright just close old issues,

00:24:23.040 --> 00:24:24.960
but like I did say like, okay, this thing is old

00:24:24.960 --> 00:24:27.600
and it hasn't seen any movement.

00:24:27.600 --> 00:24:30.560
Or like, there's a lot of things also where it's like,

00:24:30.560 --> 00:24:32.640
yeah, it's a reasonable request,

00:24:32.640 --> 00:24:36.720
but is it necessary for Flask?

00:24:36.720 --> 00:24:39.440
Does it belong in Flask or in extension, right?

00:24:39.440 --> 00:24:42.480
Like this is something I'm trying to figure out.

00:24:42.480 --> 00:24:46.480
Like I want to be writing like documentation

00:24:46.480 --> 00:24:48.400
for other maintainers on the team, you know?

00:24:48.400 --> 00:24:51.920
So they understand like how I did this sort of stuff.

00:24:51.920 --> 00:24:55.280
And this is like the trickiest problem.

00:24:55.280 --> 00:24:57.120
I don't know how I'm gonna document yet,

00:24:57.120 --> 00:24:59.360
but like I got a sense over time of just like

00:24:59.360 --> 00:25:02.320
being able to really quickly make a call

00:25:02.320 --> 00:25:04.000
of like yes or no on things.

00:25:04.000 --> 00:25:06.320
- Right, good fit, bad fit, let's go.

00:25:06.320 --> 00:25:07.760
- I can look at an issue and say like,

00:25:07.760 --> 00:25:12.640
okay, no, this doesn't belong in for XYZ or something.

00:25:12.640 --> 00:25:18.400
Because like Flask, like all the libraries in Palettes

00:25:18.400 --> 00:25:23.200
have like very focused core, like goal of them.

00:25:23.200 --> 00:25:26.000
And they try to be extensible to some degree.

00:25:26.000 --> 00:25:28.400
So a lot of the things you can do by picking extension.

00:25:28.400 --> 00:25:30.960
So really what I try to look for is like,

00:25:30.960 --> 00:25:33.200
I need this thing in Flask

00:25:33.200 --> 00:25:35.520
because it is literally not possible

00:25:35.520 --> 00:25:36.880
to write an extension to do this

00:25:36.880 --> 00:25:38.800
without being able to like hook into it this way

00:25:38.800 --> 00:25:39.600
or something like that.

00:25:39.600 --> 00:25:41.760
- No, that makes sense, sure.

00:25:41.760 --> 00:25:45.360
Part of the Zen of Flask is that it's minimal.

00:25:45.360 --> 00:25:48.240
And then you build around it, you pick your database,

00:25:48.240 --> 00:25:51.040
you pick your whatever, and then go from there.

00:25:51.040 --> 00:25:52.080
- Yeah.

00:25:52.080 --> 00:25:57.600
- Yeah, cool, all right, well, three open issues.

00:25:57.600 --> 00:26:00.720
And incredible, as in 67,000 stars,

00:26:00.720 --> 00:26:02.560
that's also pretty incredible.

00:26:02.560 --> 00:26:06.000
Let's see, so you joined each one of these different ones,

00:26:06.000 --> 00:26:08.160
you kind of gave a sense of like how many downloads.

00:26:08.160 --> 00:26:10.320
So for Flask, maybe these numbers changed,

00:26:10.320 --> 00:26:12.400
but I think it hasn't been but a couple months.

00:26:12.400 --> 00:26:15.040
It's around 75 million downloads a month.

00:26:15.040 --> 00:26:19.200
That's a hefty chunk of user base there.

00:26:19.200 --> 00:26:25.520
- Yeah, I occasionally look at pypistats.org or pepi.tech

00:26:25.520 --> 00:26:29.360
are the two like websites that track these numbers.

00:26:29.360 --> 00:26:33.600
So I can look at the current one.

00:26:33.600 --> 00:26:37.680
For Flask is downloads.

00:26:37.680 --> 00:26:42.720
Downloads in the last day, 3.15 million.

00:26:43.440 --> 00:26:46.080
Downloads in the last month, 66 million.

00:26:46.080 --> 00:26:49.200
- Okay, good summertime, people are chilling.

00:26:49.200 --> 00:26:50.880
Yeah, look at that, yeah.

00:26:50.880 --> 00:26:54.880
- Yeah, and there's like, sometimes there's like random,

00:26:54.880 --> 00:26:56.320
you can see in this graph here,

00:26:56.320 --> 00:26:57.840
like there's just random times

00:26:57.840 --> 00:27:01.600
where it just suddenly drops by like a couple hundred thousand

00:27:01.600 --> 00:27:02.880
or rises.

00:27:02.880 --> 00:27:04.240
- Yeah, yeah, yeah.

00:27:04.240 --> 00:27:07.200
- Like if you look at the left half of this graph, it's higher.

00:27:07.200 --> 00:27:11.200
But like, I think that's just because like big services

00:27:11.200 --> 00:27:13.360
like come in and out of existence

00:27:13.360 --> 00:27:16.320
or like do an upgrade or whatever.

00:27:16.320 --> 00:27:16.960
- Right.

00:27:16.960 --> 00:27:19.440
- So there are some very big systems out there

00:27:19.440 --> 00:27:21.760
that are just downloading, doing a ton of downloads.

00:27:21.760 --> 00:27:24.000
- Yeah, it's pretty wild.

00:27:24.000 --> 00:27:25.520
- It's definitely wild.

00:27:25.520 --> 00:27:28.560
- You'll probably also spot some PyPI outages.

00:27:28.560 --> 00:27:32.480
- Well, I imagine in that graph, which has got nothing to do.

00:27:32.480 --> 00:27:35.440
- And like they also change the way they report over time,

00:27:35.440 --> 00:27:38.400
like pip and stuff change how they report statistics.

00:27:38.400 --> 00:27:41.840
So I usually just look at like the overall numbers,

00:27:41.840 --> 00:27:43.840
which should be pretty consistent.

00:27:43.840 --> 00:27:44.480
- Yeah.

00:27:44.480 --> 00:27:46.480
- Try not to look at it too often.

00:27:46.480 --> 00:27:47.440
Like I said at the beginning,

00:27:47.440 --> 00:27:52.000
like it's a big number to know that like this many people

00:27:52.000 --> 00:27:53.760
are about to download any change you make.

00:27:53.760 --> 00:27:57.120
- Yeah, and when I think about these kinds of numbers,

00:27:57.120 --> 00:28:02.080
it's not just if you make a change to Flask,

00:28:02.080 --> 00:28:04.160
then it affects this many people,

00:28:04.160 --> 00:28:07.600
but these are themselves applications using this,

00:28:07.600 --> 00:28:11.040
each of which has many, many, many users potentially.

00:28:11.040 --> 00:28:13.200
So there's a multiplier on top of this, right?

00:28:13.200 --> 00:28:14.160
- Yeah.

00:28:14.160 --> 00:28:19.920
And yeah, that's been difficult.

00:28:19.920 --> 00:28:21.280
That's one of the other state of Flask.

00:28:21.280 --> 00:28:24.240
That's the other half of the state of Flask

00:28:24.240 --> 00:28:26.000
is like we've been making a lot of progress,

00:28:26.000 --> 00:28:31.280
but like this amount of responsibility

00:28:31.280 --> 00:28:36.320
rests pretty heavily on me.

00:28:36.320 --> 00:28:38.160
It can be pretty stressful.

00:28:38.160 --> 00:28:40.000
- And you did mention a baby

00:28:40.000 --> 00:28:42.160
and being potentially tired in the future

00:28:42.160 --> 00:28:43.520
and stuff like that as well, right?

00:28:43.520 --> 00:28:44.160
- Yeah, exactly.

00:28:44.160 --> 00:28:49.440
But like combined, these numbers combined with the thought

00:28:49.440 --> 00:28:52.160
that anything I do could break a bunch of people

00:28:52.160 --> 00:28:53.200
and get them to complain at me

00:28:53.200 --> 00:28:54.720
or people will complain at me

00:28:54.720 --> 00:28:56.560
even if I don't break a ton of people.

00:28:56.560 --> 00:29:01.120
And it's just kind of like the ever present notion

00:29:01.120 --> 00:29:03.920
of we are not at inbox zero on some of the projects

00:29:03.920 --> 00:29:05.600
and stuff, so there is still a lot of open stuff.

00:29:05.600 --> 00:29:07.120
- Sure.

00:29:07.120 --> 00:29:09.200
- Yeah, it's a lot of stress for me.

00:29:09.200 --> 00:29:13.520
And it's been, I've like suffered burnout a few times

00:29:13.520 --> 00:29:16.960
per year for the last four years or so.

00:29:16.960 --> 00:29:18.000
- Oh man, that's rough.

00:29:18.000 --> 00:29:20.400
Are you getting some support from the other people

00:29:20.400 --> 00:29:22.400
at the org and potentially from outside?

00:29:22.400 --> 00:29:26.560
- Yeah, there are other people on the team.

00:29:26.560 --> 00:29:29.120
So it's not like we're a bus factor of one

00:29:29.120 --> 00:29:31.920
in the sense of like, if I was not here for some reason,

00:29:33.760 --> 00:29:35.920
other people would have access to these things

00:29:35.920 --> 00:29:37.120
and could keep them going.

00:29:37.120 --> 00:29:41.600
But the reality is not to downplay all the work

00:29:41.600 --> 00:29:43.200
that they do in the community

00:29:43.200 --> 00:29:46.240
when they are working on code.

00:29:46.240 --> 00:29:50.880
But like I do probably 90% of the code

00:29:50.880 --> 00:29:53.840
and like the decision-making and all that sort of stuff.

00:29:53.840 --> 00:29:54.560
- Right.

00:29:54.560 --> 00:29:56.880
- So it would definitely be a very different project

00:29:56.880 --> 00:29:58.480
if I wasn't around.

00:29:58.480 --> 00:30:01.040
- It would at minimum be a scramble, right?

00:30:01.600 --> 00:30:04.240
Like when Guido stepped down, like, wait a minute.

00:30:04.240 --> 00:30:05.840
Who's doing what now?

00:30:05.840 --> 00:30:10.000
- Yeah, so like, so this is what I've been like trying

00:30:10.000 --> 00:30:11.440
to work for a long time

00:30:11.440 --> 00:30:13.600
because I've kind of always recognized

00:30:13.600 --> 00:30:19.920
that I've been kind of the not limiting factor,

00:30:19.920 --> 00:30:23.440
but like I'm like the point of failure in this thing.

00:30:23.440 --> 00:30:24.960
And so I've been trying to grow the team

00:30:24.960 --> 00:30:30.400
and trying to make our processes more automated,

00:30:30.400 --> 00:30:34.320
you know, and then now what I'm trying to do is,

00:30:34.320 --> 00:30:37.760
because I know I have this hard deadline in January

00:30:37.760 --> 00:30:38.800
when I'm gonna have less time,

00:30:38.800 --> 00:30:45.920
is I'm trying to document how to do what I've learned to do,

00:30:45.920 --> 00:30:47.520
like how to be a maintainer.

00:30:47.520 --> 00:30:50.240
'Cause something we don't really have a lot of,

00:30:50.240 --> 00:30:52.720
it feels like is, you know,

00:30:52.720 --> 00:30:55.040
we have a contributing guide, right?

00:30:55.040 --> 00:30:58.560
Or we have user documentation or a developer guide,

00:30:58.560 --> 00:30:59.920
like how to use Flask.

00:30:59.920 --> 00:31:03.520
But we don't have a how to maintain Flask documentation.

00:31:03.520 --> 00:31:04.560
- Yeah.

00:31:04.560 --> 00:31:07.120
- It seems to be kind of missing from the community in general.

00:31:07.120 --> 00:31:10.160
- Yeah, I presume that'd be out in public.

00:31:10.160 --> 00:31:11.600
People interested could check it out

00:31:11.600 --> 00:31:12.720
whenever that gets written.

00:31:12.720 --> 00:31:14.480
- Oh yeah, it's not like a private,

00:31:14.480 --> 00:31:15.840
it's not gonna be a private thing, but-

00:31:15.840 --> 00:31:16.560
- Yeah, of course.

00:31:16.560 --> 00:31:17.840
- It's not ready yet,

00:31:17.840 --> 00:31:19.440
but it's something I'm actively working on

00:31:19.440 --> 00:31:23.280
is like identifying like all the stuff

00:31:23.280 --> 00:31:24.880
I've accumulated in my head

00:31:24.880 --> 00:31:27.040
and what I've learned how to do

00:31:27.040 --> 00:31:31.760
or decisions I've made or like services we use.

00:31:31.760 --> 00:31:33.440
Like just the fact that, oh, you know,

00:31:33.440 --> 00:31:34.880
we're part of the PSF.

00:31:34.880 --> 00:31:36.640
This is how you contact the PSF.

00:31:36.640 --> 00:31:37.920
- Yeah, what does that mean?

00:31:37.920 --> 00:31:38.720
- It's not written down.

00:31:38.720 --> 00:31:39.520
- Who do I call?

00:31:39.520 --> 00:31:40.800
Yeah, exactly.

00:31:40.800 --> 00:31:43.200
- Or like that we're part of Tidelift

00:31:43.200 --> 00:31:46.960
and you know, these other donation sources.

00:31:46.960 --> 00:31:48.800
- Yeah.

00:31:48.800 --> 00:31:51.520
- Also like stuff like how do I make a decision

00:31:51.520 --> 00:31:54.240
on whether to keep something closed or opened

00:31:54.320 --> 00:31:57.040
or when is it time to make a new release

00:31:57.040 --> 00:31:58.720
or what is our version policy

00:31:58.720 --> 00:32:02.160
or our support policy or our security policy?

00:32:02.160 --> 00:32:06.960
Like a lot of these things are under documented right now

00:32:06.960 --> 00:32:08.400
if they're documented at all.

00:32:08.400 --> 00:32:12.000
And so that's kind of my goal for the rest of this year

00:32:12.000 --> 00:32:15.200
is to like make palettes more sustainable

00:32:15.200 --> 00:32:18.880
regardless of how much availability I have.

00:32:18.880 --> 00:32:21.120
- Maybe a little more systematized,

00:32:21.120 --> 00:32:21.840
maybe a little bit.

00:32:23.200 --> 00:32:25.840
So before we move off of PyPI stats,

00:32:25.840 --> 00:32:28.080
Kusra has an interesting meta question.

00:32:28.080 --> 00:32:30.640
Is PyPI stats built on Flask itself?

00:32:30.640 --> 00:32:31.520
Do you have any idea?

00:32:31.520 --> 00:32:34.160
- I have no idea.

00:32:34.160 --> 00:32:35.520
I know they're open source.

00:32:35.520 --> 00:32:36.960
- Oh yeah, okay.

00:32:36.960 --> 00:32:38.000
So maybe you could tell that way.

00:32:38.000 --> 00:32:39.440
I was gonna say there's not like a header

00:32:39.440 --> 00:32:40.800
or something that Flask sends.

00:32:40.800 --> 00:32:43.840
So yeah.

00:32:43.840 --> 00:32:47.520
- I can't find it.

00:32:47.520 --> 00:32:49.600
- Yeah, we don't know.

00:32:49.600 --> 00:32:50.720
It is open source.

00:32:50.720 --> 00:32:51.200
Oh, here we go.

00:32:51.200 --> 00:32:51.760
Here we go.

00:32:51.760 --> 00:32:53.600
Have we got a requirement?

00:32:53.600 --> 00:32:56.000
We've got a pyproject.toml.

00:32:56.000 --> 00:32:56.960
- Oh yeah, it's Flask.

00:32:56.960 --> 00:32:58.240
- Ah, there you have it.

00:32:58.240 --> 00:32:58.960
- I love that.

00:32:58.960 --> 00:33:00.720
- There we go, beautiful.

00:33:00.720 --> 00:33:06.560
- It's very rewarding every time I find out a new place

00:33:06.560 --> 00:33:09.520
that like just decided to use Flask and has been using it.

00:33:09.520 --> 00:33:11.600
And it's just completely behind the scenes

00:33:11.600 --> 00:33:13.120
and you can't tell like nothing's,

00:33:13.120 --> 00:33:14.080
like it's all just working.

00:33:14.080 --> 00:33:15.120
- Yeah.

00:33:15.120 --> 00:33:18.320
- But I love going to like conferences for that reason too.

00:33:18.320 --> 00:33:20.480
'Cause so many people come up to me and like say like,

00:33:20.480 --> 00:33:24.240
"Oh yeah, we use Flask to like run the Mars rover."

00:33:24.240 --> 00:33:31.680
Or somebody, one of the people giving a talk at FlaskCon

00:33:31.680 --> 00:33:38.160
was like, "My company writes the like energy management software

00:33:38.160 --> 00:33:42.240
for this conference center and it's in Flask."

00:33:42.240 --> 00:33:47.200
It's very fun to learn all those new uses.

00:33:47.200 --> 00:33:48.960
- Have you ever gotten onto the JPL?

00:33:48.960 --> 00:33:51.760
I know it's like a couple hours drive.

00:33:51.760 --> 00:33:53.200
That'd be fun, right?

00:33:53.200 --> 00:33:55.120
To go out there and actually see the Flask code,

00:33:55.120 --> 00:33:58.000
see it, this is what runs in the rover and the helicopter.

00:33:58.000 --> 00:34:01.600
Awesome, all right, so that's Flask.

00:34:01.600 --> 00:34:03.920
What one do you wanna talk about next?

00:34:03.920 --> 00:34:05.520
Next on my tab list, I got Jinja,

00:34:05.520 --> 00:34:06.400
we can go wherever you want.

00:34:06.400 --> 00:34:08.880
So like maybe that a good foundation?

00:34:08.880 --> 00:34:13.040
- Yeah, we did like Flask and Verisker are pretty tied

00:34:13.040 --> 00:34:18.560
because most of the stuff that people report to Flask

00:34:18.560 --> 00:34:20.400
is actually an issue with one of the other libraries

00:34:20.400 --> 00:34:21.520
that Flask is using.

00:34:21.520 --> 00:34:24.240
And most often that's with Veriskzeug.

00:34:24.240 --> 00:34:25.680
So you can see we're not at inbox zero,

00:34:25.680 --> 00:34:26.960
we're at inbox nine right now.

00:34:26.960 --> 00:34:28.880
- That's incredible.

00:34:28.880 --> 00:34:31.200
You know, maybe like I asked you to explain palettes,

00:34:31.200 --> 00:34:35.120
like Veriskzeug, that's probably not how English speaking

00:34:35.120 --> 00:34:36.800
folks would say that,

00:34:36.800 --> 00:34:39.360
Werkzeug or Werkzug or something, right?

00:34:39.360 --> 00:34:43.200
But Armin Rönneker, the creator of this is German

00:34:43.200 --> 00:34:44.320
or Austrian but speaks German.

00:34:44.320 --> 00:34:46.080
And so that's the German pronunciation.

00:34:46.080 --> 00:34:48.240
And hence, that's why we're saying it that way, right?

00:34:48.240 --> 00:34:50.080
- That's probably best approximation.

00:34:50.080 --> 00:34:52.080
And I'm sure I'm doing it wrong also.

00:34:52.080 --> 00:34:53.360
- It's pretty close.

00:34:53.360 --> 00:34:54.800
- Yeah, it literally is like,

00:34:54.800 --> 00:34:58.640
like it means like work thing, which is like tool.

00:34:58.640 --> 00:35:00.400
- Yeah, yeah, basically tool.

00:35:00.400 --> 00:35:02.160
Yeah, it's like tools, like work your work,

00:35:02.160 --> 00:35:05.600
your carpentry tools or yes, handyman tools type thing.

00:35:05.600 --> 00:35:06.100
Yeah.

00:35:06.100 --> 00:35:10.480
- Yeah, but this was written before Flask existed.

00:35:10.480 --> 00:35:16.480
And I think it was written more when like WSGI

00:35:16.480 --> 00:35:17.920
was becoming a spec.

00:35:17.920 --> 00:35:20.000
Or had just become a spec,

00:35:20.000 --> 00:35:21.760
because it is just a bunch of utilities

00:35:21.760 --> 00:35:24.960
for doing HTTP header parsing,

00:35:24.960 --> 00:35:29.200
doing all the low level WSGI environment management,

00:35:29.200 --> 00:35:34.080
wrapping that information in request and response objects.

00:35:34.080 --> 00:35:36.080
So you can kind of work with them a little easier.

00:35:36.080 --> 00:35:39.680
So it's all like the underlying tools that you need

00:35:39.680 --> 00:35:43.280
to build Flask.

00:35:43.280 --> 00:35:47.520
There's also like the whole routing system,

00:35:47.520 --> 00:35:51.520
so you can in Flask, you just do @app.route.

00:35:51.520 --> 00:35:52.880
But behind the scenes, what that's doing

00:35:52.880 --> 00:35:57.680
is it's adding it to a route map that VeriXoig defines.

00:35:57.680 --> 00:35:58.560
And that defines like,

00:35:58.560 --> 00:36:01.440
here's how we actually like collect that

00:36:01.440 --> 00:36:03.280
and like turn it into a bunch of rules

00:36:03.280 --> 00:36:05.040
that we can match URLs against.

00:36:05.040 --> 00:36:07.920
And there's other things in there as well,

00:36:07.920 --> 00:36:11.360
the reloader, the debugger, the dev server.

00:36:11.360 --> 00:36:15.040
- Yeah, so one of the updates you gave on VeriXoig

00:36:15.040 --> 00:36:19.040
is a performance improvement

00:36:19.040 --> 00:36:23.280
by way of getting rid of the strbytes duopoly.

00:36:23.280 --> 00:36:27.680
- Yeah, I've been doing a lot in VeriXoig.

00:36:27.680 --> 00:36:32.720
So that one and the urllib one that we'll talk about

00:36:32.720 --> 00:36:34.800
were two big things.

00:36:34.800 --> 00:36:36.080
But basically like this library,

00:36:36.080 --> 00:36:37.200
like I just described it,

00:36:37.200 --> 00:36:39.920
it's like just a huge collection of tools

00:36:39.920 --> 00:36:41.440
and little utility functions.

00:36:41.440 --> 00:36:44.800
And there's a history there

00:36:44.800 --> 00:36:47.040
because when all these libraries first started,

00:36:47.040 --> 00:36:50.800
Python 3 didn't exist or barely existed.

00:36:50.800 --> 00:36:54.000
And so everything was written originally for Python 2

00:36:54.000 --> 00:36:59.280
where strings and bytes worked a lot different.

00:36:59.280 --> 00:37:01.760
(both laughing)

00:37:01.760 --> 00:37:04.080
- That was one of the primary breaking changes.

00:37:04.080 --> 00:37:06.720
There were other changes, but that was the long,

00:37:06.720 --> 00:37:09.680
the one that people really had a long live bug tracking.

00:37:09.680 --> 00:37:11.840
You know, if it's different syntax,

00:37:11.840 --> 00:37:12.960
you just change the syntax.

00:37:12.960 --> 00:37:15.200
But if it's subtle behavior changes,

00:37:15.200 --> 00:37:16.880
then trouble looms.

00:37:16.880 --> 00:37:18.240
- Yeah.

00:37:18.240 --> 00:37:24.240
And so, yeah, in Python 2,

00:37:24.240 --> 00:37:26.800
it was much easier to like, well not,

00:37:26.800 --> 00:37:31.040
yeah, it was easier to treat like incoming data as bytes,

00:37:31.040 --> 00:37:32.640
but like treat it as a string.

00:37:32.640 --> 00:37:34.400
There wasn't like as big a distinction

00:37:34.400 --> 00:37:35.840
between strings and bytes,

00:37:35.840 --> 00:37:38.240
which was convenient in some ways,

00:37:38.240 --> 00:37:40.960
especially for like low level tools like HTTP,

00:37:40.960 --> 00:37:43.600
or you just work in ASCII bytes.

00:37:43.600 --> 00:37:45.760
- Yeah, say if you like ASCII, it's probably fine.

00:37:45.760 --> 00:37:47.760
If you don't like ASCII, you might not like it so much.

00:37:47.760 --> 00:37:50.000
- Yeah, but it also like caused,

00:37:50.000 --> 00:37:54.160
like I first learned Python 3,

00:37:54.160 --> 00:37:56.880
so I like, I like have a different perspective on this,

00:37:56.880 --> 00:37:59.280
but I like Python 3's distinction.

00:37:59.280 --> 00:38:02.240
I think it's much better to have that distinction.

00:38:02.240 --> 00:38:03.440
- Yeah, you and me both.

00:38:03.440 --> 00:38:05.200
- Yeah, strings and bytes.

00:38:05.200 --> 00:38:08.000
But at the time, like when it was first happening,

00:38:08.000 --> 00:38:09.120
it wasn't as clear cut.

00:38:09.120 --> 00:38:11.360
Like, oh yeah, this is better, or this is easier,

00:38:11.360 --> 00:38:12.640
because you had to support both.

00:38:12.640 --> 00:38:16.480
And so when Python 3 came out

00:38:16.480 --> 00:38:18.880
and started getting like more momentum,

00:38:18.880 --> 00:38:24.240
all these libraries tacked on support

00:38:24.240 --> 00:38:26.480
for both Python 2 and Python 3,

00:38:26.480 --> 00:38:28.320
which among other things meant that you had to

00:38:28.320 --> 00:38:34.240
now check for like whether you were getting strings

00:38:34.240 --> 00:38:35.760
or bytes everywhere,

00:38:37.600 --> 00:38:39.840
because you might be in Python 2 land where you're getting bytes

00:38:39.840 --> 00:38:42.480
or you might be in Python 3 land where you're getting strings

00:38:42.480 --> 00:38:44.480
and need to like do other conversions.

00:38:44.480 --> 00:38:47.920
Verxoid was especially bad

00:38:47.920 --> 00:38:50.320
because it's a collection of like kind of

00:38:50.320 --> 00:38:52.240
independent utility functions.

00:38:52.240 --> 00:38:54.480
Some functions build on each other,

00:38:54.480 --> 00:38:57.440
but every function could potentially be imported

00:38:57.440 --> 00:39:00.080
and used for its own little piece of functionality.

00:39:00.080 --> 00:39:01.600
And so every single function

00:39:01.600 --> 00:39:03.760
needed to check all its arguments

00:39:03.760 --> 00:39:05.680
for like five, six, seven bytes.

00:39:05.680 --> 00:39:09.120
Even if most of the time, especially nowadays,

00:39:09.120 --> 00:39:11.280
people aren't using Verxoid directly in all these tools.

00:39:11.280 --> 00:39:12.160
They're using Flask,

00:39:12.160 --> 00:39:14.880
which just does the right thing from the get-go,

00:39:14.880 --> 00:39:17.440
which means all those intermediate checks on the way

00:39:17.440 --> 00:39:19.440
were totally unnecessary,

00:39:19.440 --> 00:39:22.080
because you already knew from like the first function.

00:39:22.080 --> 00:39:23.040
- Right, right.

00:39:23.040 --> 00:39:26.080
You're testing 10 times for the same thing down the call stack.

00:39:26.080 --> 00:39:30.400
- Right, and this was just pervasive throughout Verxoid.

00:39:30.400 --> 00:39:33.040
It was just everywhere with all these unnecessary checks,

00:39:33.040 --> 00:39:36.080
and it made the code more complex to maintain,

00:39:36.080 --> 00:39:39.280
reason about, made the like execution slower.

00:39:39.280 --> 00:39:47.040
There's kind of another thing going on at the same time,

00:39:47.040 --> 00:39:50.640
which is like, we had, because we could support,

00:39:50.640 --> 00:39:52.880
like, because we were working with bytes in a lot of places,

00:39:52.880 --> 00:39:56.640
there was also like a lot more support for,

00:39:56.640 --> 00:40:00.080
well, maybe the data is encoded in this encoding or this one.

00:40:00.080 --> 00:40:02.320
But nowadays, everybody,

00:40:02.320 --> 00:40:04.400
like I looked at, before I made this decision,

00:40:04.400 --> 00:40:05.760
I looked at stats.

00:40:05.760 --> 00:40:10.480
Everybody, 99.5% of people,

00:40:10.480 --> 00:40:12.800
web applications on the web right now,

00:40:12.800 --> 00:40:15.280
are using UTF-8.

00:40:15.280 --> 00:40:18.400
So they're never dealing with their encodings.

00:40:18.400 --> 00:40:20.800
And UTF-8 can encode everything.

00:40:20.800 --> 00:40:21.840
- Yeah.

00:40:21.840 --> 00:40:24.880
- And so like,

00:40:24.880 --> 00:40:26.080
Verxoid was doing all these things

00:40:26.080 --> 00:40:28.160
about letting you pass encodings all over the place

00:40:28.160 --> 00:40:29.520
and switch between things,

00:40:29.520 --> 00:40:31.360
and that was also complexity.

00:40:31.920 --> 00:40:34.560
So I finally decided, okay,

00:40:34.560 --> 00:40:37.360
I had heard some anecdotes as well

00:40:37.360 --> 00:40:39.040
from people who had switched from

00:40:39.040 --> 00:40:41.680
using Python 2 to Python 3,

00:40:41.680 --> 00:40:46.000
or had stuck with Python 2 and old versions of Verxoid

00:40:46.000 --> 00:40:50.560
because they had noticed a significant performance difference

00:40:50.560 --> 00:40:52.000
in the first versions of Verxoid

00:40:52.000 --> 00:40:53.760
that added that 2 and 3 compatibility.

00:40:53.760 --> 00:40:58.320
And so I figured, okay, I'm gonna get a similar speed up

00:40:58.320 --> 00:40:59.680
if I remove that now,

00:40:59.680 --> 00:41:01.360
now that we don't support Python 2 at all.

00:41:01.360 --> 00:41:06.480
That was very complicated.

00:41:06.480 --> 00:41:10.080
I basically just had to go through every single function

00:41:10.080 --> 00:41:11.200
and start removing it,

00:41:11.200 --> 00:41:13.040
run all the tests, see what failed,

00:41:13.040 --> 00:41:14.880
pick another function to keep working on

00:41:14.880 --> 00:41:17.360
and just slowly, slowly pull it all apart.

00:41:17.360 --> 00:41:19.680
But I did end up with,

00:41:19.680 --> 00:41:24.880
so now Verxoid just supports strings everywhere,

00:41:24.880 --> 00:41:28.160
except in the very few places

00:41:28.160 --> 00:41:31.200
where it works directly with the request and response data.

00:41:31.200 --> 00:41:36.320
- Right, like multi-part form file.

00:41:36.320 --> 00:41:37.920
- Yeah, when you first get the request in,

00:41:37.920 --> 00:41:39.200
and it's just the raw body

00:41:39.200 --> 00:41:42.800
that you might turn into JSON or form data, et cetera.

00:41:42.800 --> 00:41:46.400
Or when you're finally producing the response

00:41:46.400 --> 00:41:49.440
and taking either file data, which is binary,

00:41:49.440 --> 00:41:53.600
or string data and turning it into the bytes.

00:41:53.600 --> 00:41:56.640
That's the only place now where it deals with bytes.

00:41:56.640 --> 00:41:58.800
Everywhere else is strings.

00:41:58.800 --> 00:42:01.440
And the boundary there is always UTF-8.

00:42:01.440 --> 00:42:04.320
And if UTF-8 isn't your thing,

00:42:04.320 --> 00:42:06.960
it's not, we're not preventing you from using other things.

00:42:06.960 --> 00:42:09.520
It just means that when you're at those boundaries,

00:42:09.520 --> 00:42:12.960
you pick the new, you can take the bytes directly

00:42:12.960 --> 00:42:14.000
and work with them.

00:42:14.000 --> 00:42:17.120
Surprisingly, I have gotten,

00:42:17.120 --> 00:42:20.080
like this was a huge, massive change,

00:42:20.080 --> 00:42:22.560
and I have not gotten any bug reports about it.

00:42:22.560 --> 00:42:25.200
Which I'm just, I'm just,

00:42:25.200 --> 00:42:29.120
I was stressing so much about like, okay, this is huge.

00:42:29.120 --> 00:42:30.880
I mean, we tested it first

00:42:30.880 --> 00:42:34.160
and made beta releases and everything,

00:42:34.160 --> 00:42:35.520
but those go to almost no touch.

00:42:35.520 --> 00:42:37.520
- All right, I can't leave the house

00:42:37.520 --> 00:42:39.760
for the next week, publish.

00:42:39.760 --> 00:42:41.520
- Yeah, no, like you joke,

00:42:41.520 --> 00:42:43.360
but like seriously, when I hit the publish button,

00:42:43.360 --> 00:42:45.200
or when I used to hit the publish button,

00:42:45.200 --> 00:42:48.080
I would be like, I want to go for a walk now

00:42:48.080 --> 00:42:49.600
because I just did a ton of work

00:42:49.600 --> 00:42:50.800
and I just want to clear my head.

00:42:50.800 --> 00:42:54.320
But oh God, then an hour later,

00:42:54.320 --> 00:42:56.320
an hour from now when I get back,

00:42:56.320 --> 00:42:58.080
what is my inbox going to look like?

00:42:58.080 --> 00:42:59.440
- Yeah, yeah, yeah, yeah.

00:42:59.440 --> 00:43:00.880
- Okay, that is going to be done.

00:43:00.880 --> 00:43:01.600
- That's great.

00:43:01.600 --> 00:43:02.400
And you know, you talk,

00:43:02.400 --> 00:43:05.600
another part of your presentation at FlaskCon

00:43:05.600 --> 00:43:09.040
was about project level stuff.

00:43:09.040 --> 00:43:13.520
And you also talked about the systemization

00:43:13.520 --> 00:43:15.360
type of thing you're looking for.

00:43:15.360 --> 00:43:16.640
So one of the things you switched to

00:43:16.640 --> 00:43:18.480
is the trusted publishers.

00:43:18.480 --> 00:43:19.440
That's kind of cool, right?

00:43:19.440 --> 00:43:23.680
- Yeah, so I mentioned a little bit

00:43:23.680 --> 00:43:25.120
about like when we were talking about,

00:43:25.120 --> 00:43:32.560
sorry, when we were talking about

00:43:32.560 --> 00:43:34.560
pinning requirements, I was saying,

00:43:34.560 --> 00:43:36.400
oh, you know, it makes it a lot easier

00:43:36.400 --> 00:43:39.840
for every contributor to work on things at Sprint

00:43:39.840 --> 00:43:41.840
if every single environment is the same.

00:43:41.840 --> 00:43:46.160
And so kind of on a meta level,

00:43:46.160 --> 00:43:51.520
there's a lot of like different tools

00:43:51.520 --> 00:43:56.320
and configurations and workflows we use across projects,

00:43:56.320 --> 00:44:00.080
but they've kind of been developed over time

00:44:00.080 --> 00:44:01.200
as I've learned them.

00:44:01.200 --> 00:44:05.760
And so I've been doing work on like a meta level.

00:44:05.760 --> 00:44:07.280
So every project now,

00:44:07.280 --> 00:44:09.520
if you go look at Flask and VeriXoic and Jinja

00:44:09.520 --> 00:44:12.320
and you clone all the repos,

00:44:12.320 --> 00:44:13.680
all the repos look exactly the same.

00:44:13.680 --> 00:44:15.200
They all have the same files,

00:44:15.200 --> 00:44:16.880
the same directory layout,

00:44:16.880 --> 00:44:19.280
same tool configurations, et cetera.

00:44:19.920 --> 00:44:21.280
Because just like it should be easy

00:44:21.280 --> 00:44:24.880
for every contributor to get the same environment,

00:44:24.880 --> 00:44:27.040
it should be easy for anybody

00:44:27.040 --> 00:44:28.400
who's used to contributing to Flask

00:44:28.400 --> 00:44:29.440
to go over to VeriXoic

00:44:29.440 --> 00:44:32.880
and be just as comfortable in that project.

00:44:32.880 --> 00:44:35.680
- It's the Flask way and it all goes the same, right?

00:44:35.680 --> 00:44:40.320
- So yeah, like Trusted Publishing,

00:44:40.320 --> 00:44:42.960
that was another big part of this

00:44:42.960 --> 00:44:44.240
was like making workflows.

00:44:44.240 --> 00:44:46.720
So we have a workflow for running tests, for example.

00:44:48.160 --> 00:44:52.960
But publishing used to be a very manual process.

00:44:52.960 --> 00:44:54.400
And it's evolved over the years too

00:44:54.400 --> 00:44:56.000
because we were on Travis before

00:44:56.000 --> 00:44:59.680
and then we needed to make like Windows builds

00:44:59.680 --> 00:45:02.720
for Markup Safe, which has wheels.

00:45:02.720 --> 00:45:05.120
So we were on AppVeyor also.

00:45:05.120 --> 00:45:07.200
And then Travis went away and stuff

00:45:07.200 --> 00:45:08.960
and GitHub Actions became more.

00:45:08.960 --> 00:45:13.120
And so, but like that was all for tests.

00:45:13.120 --> 00:45:14.480
Like for building,

00:45:14.480 --> 00:45:17.040
we basically had to build a web app

00:45:17.040 --> 00:45:18.000
and we basically,

00:45:18.000 --> 00:45:20.800
when we wanted to make a new release,

00:45:20.800 --> 00:45:23.120
it was way harder in the past,

00:45:23.120 --> 00:45:26.160
which is why releases happened less often

00:45:26.160 --> 00:45:30.080
because I would have to say like,

00:45:30.080 --> 00:45:30.800
okay, I'm ready.

00:45:30.800 --> 00:45:33.200
Do all the little bookkeeping stuff

00:45:33.200 --> 00:45:34.640
to like set the release version

00:45:34.640 --> 00:45:36.800
and the release date and everything.

00:45:36.800 --> 00:45:39.600
Now I have to go get my Mac,

00:45:39.600 --> 00:45:41.360
get my Windows machine,

00:45:41.360 --> 00:45:42.400
get my Linux machine,

00:45:42.400 --> 00:45:44.160
make the builds on all of them.

00:45:44.160 --> 00:45:44.640
- Oh my gosh.

00:45:44.640 --> 00:45:46.240
- Then manually like consolidate them

00:45:46.880 --> 00:45:49.760
and upload them manually to PyPI, et cetera,

00:45:49.760 --> 00:45:50.640
and make sure that all worked.

00:45:50.640 --> 00:45:57.600
So what I have now is I have a standard publish workflow

00:45:57.600 --> 00:45:58.800
on every single project.

00:45:58.800 --> 00:46:00.160
It works exactly the same way.

00:46:00.160 --> 00:46:03.360
And you make a PR

00:46:03.360 --> 00:46:05.760
so that you can see all the tests run.

00:46:05.760 --> 00:46:07.920
You know, you make a PR that just does that version bump

00:46:07.920 --> 00:46:10.640
and the date, you know, says the release date.

00:46:10.640 --> 00:46:12.400
You watch all the tests pass

00:46:12.400 --> 00:46:14.560
and then you push a tag before you merge.

00:46:14.560 --> 00:46:16.080
You push the release tag.

00:46:16.160 --> 00:46:17.680
And that kicks off the build workflow.

00:46:17.680 --> 00:46:21.440
So we run our build.

00:46:21.440 --> 00:46:26.320
We do SLSA or Salsa out of station

00:46:26.320 --> 00:46:29.920
to say like these builds are associated

00:46:29.920 --> 00:46:31.120
with these commits in Git

00:46:31.120 --> 00:46:32.480
and were built by these workers.

00:46:32.480 --> 00:46:34.960
It's kind of like a supply chain level thing.

00:46:34.960 --> 00:46:37.520
And then we automatically,

00:46:37.520 --> 00:46:39.760
like it will collect all that stuff,

00:46:39.760 --> 00:46:41.360
show you here's the release,

00:46:41.360 --> 00:46:43.040
like here's a draft release for this.

00:46:43.040 --> 00:46:43.520
Here are all the,

00:46:43.520 --> 00:46:44.720
like you have one more opportunity

00:46:44.720 --> 00:46:45.920
to look at the files

00:46:45.920 --> 00:46:47.680
and then a maintainer can go in

00:46:47.680 --> 00:46:51.200
and click publish in GitHub's UI.

00:46:51.200 --> 00:46:53.840
And that will kick off like,

00:46:53.840 --> 00:46:55.920
okay, maintainer said everything's good.

00:46:55.920 --> 00:46:58.160
We're just gonna upload it now.

00:46:58.160 --> 00:46:59.360
And that's all automated.

00:46:59.360 --> 00:47:03.280
You don't, we're using the trusted workflow,

00:47:03.280 --> 00:47:04.720
trusted publishing workflow

00:47:04.720 --> 00:47:06.080
between PyPI and GitHub.

00:47:06.080 --> 00:47:11.600
So I no longer have to have my password stored locally

00:47:11.600 --> 00:47:14.880
for PyPI or have like tokens made for each project.

00:47:15.840 --> 00:47:18.080
All the authentication happens

00:47:18.080 --> 00:47:20.880
between GitHub and PyPI automatically and securely.

00:47:20.880 --> 00:47:22.240
It's pretty cool.

00:47:22.240 --> 00:47:24.480
If you go look up like trusted publishing on,

00:47:24.480 --> 00:47:27.360
PyPI has like a blog or documentation that explains it.

00:47:27.360 --> 00:47:31.120
But it is really, really convenient.

00:47:31.120 --> 00:47:33.200
And it makes like this whole workflow

00:47:33.200 --> 00:47:35.600
means that whenever I wanna make a new release,

00:47:35.600 --> 00:47:38.400
I just make a regular PR, push a tag

00:47:38.400 --> 00:47:42.400
and then see everything pass and say, yes, we're good.

00:47:43.760 --> 00:47:46.160
So I just basically have to push three buttons now.

00:47:46.160 --> 00:47:47.200
- Yeah, that's fantastic.

00:47:47.200 --> 00:47:48.480
- Which makes it a lot easier

00:47:48.480 --> 00:47:50.240
to just make more regular releases.

00:47:50.240 --> 00:47:51.440
Like even bug fix releases,

00:47:51.440 --> 00:47:53.760
I was always unwilling to make them fast

00:47:53.760 --> 00:47:54.560
because it was so much work.

00:47:54.560 --> 00:47:57.520
- Yeah, well, if it's a matter of just pushing a commit

00:47:57.520 --> 00:47:58.240
and then saying, okay,

00:47:58.240 --> 00:48:02.400
you're way more likely to quickly ship fixes

00:48:02.400 --> 00:48:05.120
and ship smaller releases and all sorts of stuff.

00:48:05.120 --> 00:48:06.160
It's really good.

00:48:06.160 --> 00:48:08.880
And you don't have the whole supply chain problem

00:48:08.880 --> 00:48:12.640
of your machine somehow got hacked,

00:48:12.640 --> 00:48:14.640
but then now when you do your build,

00:48:14.640 --> 00:48:18.320
somebody's injected something gnarly into the wheel, right?

00:48:18.320 --> 00:48:19.440
'Cause it never goes through you.

00:48:19.440 --> 00:48:22.000
It just goes from GitHub directly to PyPI

00:48:22.000 --> 00:48:23.040
through GitHub actions, right?

00:48:23.040 --> 00:48:26.560
- Yeah, and GitHub added their own.

00:48:26.560 --> 00:48:31.680
So the SLSA out of station that I was talking about,

00:48:31.680 --> 00:48:33.360
if you scroll down on this screen,

00:48:33.360 --> 00:48:38.320
you can see that multiple.intodo.jsonl.

00:48:38.320 --> 00:48:42.160
If you click on it, it's just a big blob of text.

00:48:42.480 --> 00:48:44.800
But that's basically describing here are these wheel file,

00:48:44.800 --> 00:48:47.600
like those wheel files and SDIS files.

00:48:47.600 --> 00:48:55.200
And here's like signatures and about like GitHub environment

00:48:55.200 --> 00:48:56.320
that build this and everything.

00:48:56.320 --> 00:49:01.520
GitHub itself is adding that's a similar sort of out of station

00:49:01.520 --> 00:49:05.280
and then PyPI is also adding more out of stations.

00:49:05.280 --> 00:49:07.920
It's not out yet though,

00:49:07.920 --> 00:49:11.200
but I'm sure I will be testing it once they're starting it.

00:49:11.200 --> 00:49:12.720
And once they release it in beta.

00:49:12.720 --> 00:49:16.720
So being able to attest that like our build environment

00:49:16.720 --> 00:49:20.080
was consistent with what the artifacts you're seeing

00:49:20.080 --> 00:49:22.640
and like the upload along the way was secured

00:49:22.640 --> 00:49:26.800
and like it is gaining more,

00:49:26.800 --> 00:49:29.120
like that's more gaining more attention nowadays.

00:49:29.120 --> 00:49:30.640
- Yeah, that's really.

00:49:30.640 --> 00:49:32.880
It's excellent.

00:49:32.880 --> 00:49:35.680
It also makes it easier to hand it over to someone else

00:49:35.680 --> 00:49:37.840
and trust that they're doing it right.

00:49:37.840 --> 00:49:39.360
Not like something,

00:49:40.080 --> 00:49:41.360
they only like Windows 7.

00:49:41.360 --> 00:49:43.200
So you got a weird wheel or something now.

00:49:43.200 --> 00:49:46.560
- Yeah, I mean, this, yeah, this one it sounds like

00:49:46.560 --> 00:49:49.760
was such an impediment to finding other maintainers

00:49:49.760 --> 00:49:51.120
because you had to teach like,

00:49:51.120 --> 00:49:53.760
I think I probably had some document

00:49:53.760 --> 00:49:55.360
that explained how to do this build before.

00:49:55.360 --> 00:49:57.200
Like all the steps I went through,

00:49:57.200 --> 00:50:00.960
but it was like, it was so complicated.

00:50:00.960 --> 00:50:03.280
And like, yeah, if somebody else wanted to make a release,

00:50:03.280 --> 00:50:05.520
I would have to make sure they did everything correctly.

00:50:05.520 --> 00:50:08.480
I had just gotten used to it.

00:50:08.480 --> 00:50:10.880
It was like rote for me, but it was a lot of steps.

00:50:10.880 --> 00:50:13.040
Now it's just, anybody does the same,

00:50:13.040 --> 00:50:16.160
make a PR, push a button.

00:50:16.160 --> 00:50:18.400
Everything else is done for them.

00:50:18.400 --> 00:50:19.540
Yeah.

00:50:19.540 --> 00:50:20.640
- Yeah, that's awesome.

00:50:20.640 --> 00:50:23.680
All right, so the two takeaways that I got

00:50:23.680 --> 00:50:27.840
from Verkzoig's update was this dropping

00:50:27.840 --> 00:50:29.360
of the two to three juggling

00:50:29.360 --> 00:50:32.240
made it 50% faster for request response.

00:50:32.240 --> 00:50:36.080
And URL lib is no longer URL lib-ish.

00:50:37.280 --> 00:50:38.880
- Yeah, yeah, so that was the other part.

00:50:38.880 --> 00:50:40.400
If we're going back to Verkzoig,

00:50:40.400 --> 00:50:47.040
so we removed the string bytes testing all over the place.

00:50:47.040 --> 00:50:52.480
And Verkzoig, this was again, historically

00:50:52.480 --> 00:50:55.600
because of like Python two versus Python three differences

00:50:55.600 --> 00:50:56.960
and then compatibility and stuff.

00:50:56.960 --> 00:51:00.720
But another of the changes in Python three was URL lib.

00:51:00.720 --> 00:51:05.120
In Python two, there was like URL lib and URL lib two.

00:51:05.840 --> 00:51:08.080
And that's why there's also the project URL lib three.

00:51:08.080 --> 00:51:13.760
But Python three kind of consolidated that back

00:51:13.760 --> 00:51:16.240
into URL lib with sub packages instead.

00:51:16.240 --> 00:51:19.280
So it kind of changed the interfaces

00:51:19.280 --> 00:51:20.560
and where everything was.

00:51:20.560 --> 00:51:25.200
So at the time it made sense for Verkzoig

00:51:25.200 --> 00:51:28.800
to just copy that code into our own code base

00:51:28.800 --> 00:51:30.800
and then make our own tweaks to it

00:51:30.800 --> 00:51:34.800
to be compatible with everything.

00:51:34.800 --> 00:51:38.160
And, but what that ended up meaning was

00:51:38.160 --> 00:51:40.160
we had an entire copy of URL lib

00:51:40.160 --> 00:51:43.440
with our own tweaks in our code base.

00:51:43.440 --> 00:51:47.360
And then we weren't keeping up with changes.

00:51:47.360 --> 00:51:52.720
So like CPython has like a hundred different core devs on it.

00:51:52.720 --> 00:51:55.200
I mean, they're not all paying attention to URL lib

00:51:55.200 --> 00:51:58.960
but they're making regular security updates

00:51:58.960 --> 00:52:01.200
or just performance improvements and that sort of stuff.

00:52:01.200 --> 00:52:03.760
And we're not getting any of those benefits

00:52:03.760 --> 00:52:05.520
because we now have like this vendored copy

00:52:05.520 --> 00:52:06.560
that we've changed ourselves.

00:52:06.560 --> 00:52:08.400
We couldn't even bring in the changes.

00:52:08.400 --> 00:52:10.640
And just like the string bytes everywhere,

00:52:10.640 --> 00:52:14.560
having that our own copy of that really complex

00:52:14.560 --> 00:52:18.800
low-level code made it harder to reason about the code

00:52:18.800 --> 00:52:19.920
and be like, maintain it.

00:52:19.920 --> 00:52:22.960
And all this stuff is kind of like,

00:52:22.960 --> 00:52:25.840
it's not the essential parts of Verkzoig.

00:52:25.840 --> 00:52:28.560
Verkzoig is like trying to be the WSGI utilities and stuff.

00:52:28.560 --> 00:52:31.920
It's not trying to be like every single possible,

00:52:31.920 --> 00:52:32.880
like it's not trying,

00:52:32.880 --> 00:52:35.040
we don't need to make our own URL lib utility

00:52:35.040 --> 00:52:36.400
and everything to be Verkzoig.

00:52:36.400 --> 00:52:39.920
So that was another big one where I identified like,

00:52:39.920 --> 00:52:42.560
okay, this is just a lot of complexity.

00:52:42.560 --> 00:52:44.160
I didn't actually expect this to be

00:52:44.160 --> 00:52:46.480
a performance improvement,

00:52:46.480 --> 00:52:50.560
but when I actually went through and removed URL lib

00:52:50.560 --> 00:52:53.760
and our own copy and replaced it with Python's version,

00:52:53.760 --> 00:52:58.400
we got like a 30% speed up just on our own.

00:52:58.400 --> 00:53:00.400
So the combined of those two big changes

00:53:00.400 --> 00:53:03.520
was like about a 50% speed up in our request response.

00:53:03.520 --> 00:53:04.020
- Yeah, that's awesome.

00:53:04.020 --> 00:53:07.440
- And we just, like, it turns out that the,

00:53:07.440 --> 00:53:09.760
like Python's implementation of all this

00:53:09.760 --> 00:53:11.680
was just faster than ours.

00:53:11.680 --> 00:53:15.360
And it still does all the same things.

00:53:15.360 --> 00:53:19.040
- Yeah, and now you don't have to mess with it.

00:53:19.040 --> 00:53:19.840
You get it for free.

00:53:19.840 --> 00:53:20.560
- Yeah, exactly.

00:53:20.560 --> 00:53:21.520
- Like everyone else.

00:53:21.520 --> 00:53:25.760
- We can, we're like, a lot of these changes,

00:53:25.760 --> 00:53:29.040
a lot of the changes in all the libraries

00:53:29.040 --> 00:53:32.160
are stuff where I've been, like I said,

00:53:32.160 --> 00:53:33.920
I wasn't the original author of this stuff.

00:53:33.920 --> 00:53:36.720
So I've had to like learn the code basis.

00:53:36.720 --> 00:53:38.560
I've had to like dig into them and say like,

00:53:38.560 --> 00:53:39.600
what is written here?

00:53:39.600 --> 00:53:40.800
Why is it written this way?

00:53:40.800 --> 00:53:41.920
How is it all related?

00:53:41.920 --> 00:53:46.000
And along the way, I just keep identifying like,

00:53:46.000 --> 00:53:52.640
okay, this is the actual purpose of this library.

00:53:52.640 --> 00:53:55.040
Does this fit into that purpose?

00:53:55.040 --> 00:53:56.800
Or can we be doing something different?

00:53:56.800 --> 00:54:00.800
And so kind of trying to like slim down the libraries

00:54:00.800 --> 00:54:04.080
and like focus, tighten up there,

00:54:04.080 --> 00:54:06.240
the focus on their like purposes more.

00:54:06.240 --> 00:54:09.040
- Right, if there's parts that are, it needs to work,

00:54:09.040 --> 00:54:10.320
but it's not its purpose,

00:54:10.320 --> 00:54:12.000
maybe that can come from somewhere else, yeah.

00:54:12.000 --> 00:54:13.440
- Mm-hmm, yeah.

00:54:13.440 --> 00:54:15.120
- All right, we got about 10.

00:54:15.120 --> 00:54:16.480
Yeah, absolutely.

00:54:16.480 --> 00:54:19.920
We've got about 10 more minutes, tops probably.

00:54:19.920 --> 00:54:24.960
So what else do you want to cover to give us the stage?

00:54:24.960 --> 00:54:30.320
- I'll mention Jinja and Click really briefly

00:54:30.320 --> 00:54:33.120
because these two libraries are also huge.

00:54:33.120 --> 00:54:35.120
They're used everywhere, downloaded a ton.

00:54:35.120 --> 00:54:37.520
Jinja is a templating library.

00:54:37.520 --> 00:54:40.320
Like you write template files

00:54:40.320 --> 00:54:42.320
and then you can render them with variables

00:54:42.320 --> 00:54:45.520
to produce output, HTML, you know,

00:54:45.520 --> 00:54:48.640
but also like text files or all sorts of stuff.

00:54:48.640 --> 00:54:49.600
- Yeah, I think people--

00:54:49.600 --> 00:54:51.120
- It's a little expensive.

00:54:51.120 --> 00:54:54.720
- Yeah, I think people pigeonhole Jinja2 much.

00:54:54.720 --> 00:54:57.440
They think, okay, well, I'm generating dynamic HTML

00:54:57.440 --> 00:54:58.480
from a server request.

00:54:58.480 --> 00:55:02.320
Like you can use Jinja to generate all sorts of files.

00:55:02.320 --> 00:55:09.360
I use it on stuff, basically on Python generate like emails.

00:55:09.360 --> 00:55:11.280
Somebody wants to reset their password, right?

00:55:11.280 --> 00:55:14.800
Like I'll generate up an email body from it, for example,

00:55:14.800 --> 00:55:15.840
right, that kind of stuff.

00:55:15.840 --> 00:55:18.480
- Yeah, and then Click is a,

00:55:18.480 --> 00:55:21.920
just like Flask is a framework for web applications,

00:55:21.920 --> 00:55:24.080
Click is a framework for command line applications.

00:55:24.320 --> 00:55:31.440
And both of these libraries have gotten a lot of attention

00:55:31.440 --> 00:55:34.080
from me, but they are not at inbox zero.

00:55:34.080 --> 00:55:35.200
Unlike the other libraries,

00:55:35.200 --> 00:55:37.200
I have not managed to get them down there

00:55:37.200 --> 00:55:39.280
because I was working on the other libraries.

00:55:39.280 --> 00:55:46.480
And so these are where I'm like gonna need to focus.

00:55:46.480 --> 00:55:48.960
Like I said, like my current focus for the rest

00:55:48.960 --> 00:55:51.360
of this year is writing maintainer documentation.

00:55:51.360 --> 00:55:53.040
So I'm trying to do less code.

00:55:53.040 --> 00:55:55.280
And all of these libraries are stable.

00:55:55.280 --> 00:55:56.320
Everybody downloads them.

00:55:56.320 --> 00:55:57.840
Like ton of people download them, they all work.

00:55:57.840 --> 00:56:00.560
You know, we can make them better and everything,

00:56:00.560 --> 00:56:02.400
but they're not in like, it's not like they're

00:56:02.400 --> 00:56:06.000
in immediate danger or need of anything.

00:56:06.000 --> 00:56:09.920
But I do want to like clear out the backlogs of those as well.

00:56:09.920 --> 00:56:12.560
And, you know, looking for more contributors for that,

00:56:12.560 --> 00:56:14.640
to help with that.

00:56:14.640 --> 00:56:17.200
- Yeah, you said you're looking for contributors

00:56:17.200 --> 00:56:20.960
who are really psyched about typing and also first-

00:56:20.960 --> 00:56:26.240
- Scott, if anybody knows, like is an expert in typing

00:56:26.240 --> 00:56:28.800
and like type annotations and static type tools,

00:56:28.800 --> 00:56:35.760
all the libraries do pass mypy strict tests and export.

00:56:35.760 --> 00:56:39.920
They're like, we do do some testing

00:56:39.920 --> 00:56:47.760
against pyright to some degree, but I'm just typing.

00:56:47.760 --> 00:56:50.720
Just, it's very hard for me to understand.

00:56:50.720 --> 00:56:55.840
Like it's a very complicated subject on its own

00:56:55.840 --> 00:56:58.320
versus all the other stuff I have to be doing.

00:56:58.320 --> 00:57:00.160
So I really would like somebody who's like,

00:57:00.160 --> 00:57:01.360
I am an expert at typing.

00:57:01.360 --> 00:57:04.320
I'm gonna like start fixing up what you're,

00:57:04.320 --> 00:57:06.640
'cause I like had to learn typing

00:57:06.640 --> 00:57:08.640
as I was like adding it to these libraries.

00:57:08.640 --> 00:57:09.440
- Yeah.

00:57:09.440 --> 00:57:11.360
- Yeah, that's a big thing that we can improve.

00:57:11.360 --> 00:57:14.800
- Okay.

00:57:14.800 --> 00:57:20.000
- And yeah, you know, there's like,

00:57:20.000 --> 00:57:23.440
we've gotten a lot of the stuff in Click and Jinja also.

00:57:23.440 --> 00:57:26.640
We have PRs for a lot of stuff.

00:57:26.640 --> 00:57:28.720
It's just a matter of me having the time to go through

00:57:28.720 --> 00:57:31.360
and review all of them to cut down that backlog,

00:57:31.360 --> 00:57:32.560
but we're getting there.

00:57:32.560 --> 00:57:33.440
I'll get there eventually.

00:57:33.440 --> 00:57:34.480
- Yeah, beautiful.

00:57:34.480 --> 00:57:37.680
- And then the last, so the last thing I wanna mention,

00:57:37.680 --> 00:57:39.120
or we ran out of time completely,

00:57:39.120 --> 00:57:42.960
is besides Palettes, the core projects itself,

00:57:42.960 --> 00:57:46.640
I've kind of mentioned this theme of trying to make

00:57:47.840 --> 00:57:49.440
the projects more maintainable

00:57:49.440 --> 00:57:51.760
and grow the community and the team.

00:57:51.760 --> 00:57:54.720
And part of that that I've started identifying

00:57:54.720 --> 00:57:59.680
is the greater ecosystem around these projects.

00:57:59.680 --> 00:58:04.080
So Flask is great to use on its own,

00:58:04.080 --> 00:58:08.640
but it's made even better by all the extensions out there

00:58:08.640 --> 00:58:10.480
that people have written, you know,

00:58:10.480 --> 00:58:14.720
for doing email, doing database stuff, authentication,

00:58:14.720 --> 00:58:17.200
all sorts of things.

00:58:18.000 --> 00:58:23.120
And just like Flask itself, you know,

00:58:23.120 --> 00:58:24.080
and all those libraries,

00:58:24.080 --> 00:58:27.600
there was a long period where they weren't getting

00:58:27.600 --> 00:58:29.840
as maintained, you know, as much attention and stuff.

00:58:29.840 --> 00:58:31.200
And then I started stepping in.

00:58:31.200 --> 00:58:33.840
A lot of those extensions were written

00:58:33.840 --> 00:58:36.000
quite a long time ago now,

00:58:36.000 --> 00:58:38.560
and the maintainers of those have kind of moved on

00:58:38.560 --> 00:58:39.520
to different things.

00:58:39.520 --> 00:58:41.280
And so there's a lot of stuff in the ecosystem

00:58:41.280 --> 00:58:45.040
that isn't getting as much attention as it needs.

00:58:45.040 --> 00:58:50.240
And a lot of the times the maintainers are aware of this,

00:58:50.240 --> 00:58:52.800
and they're willing to like to take help,

00:58:52.800 --> 00:58:54.560
you know, to get help with those things.

00:58:54.560 --> 00:58:57.760
And so I was really inspired by a project

00:58:57.760 --> 00:59:00.160
for Django extensions called Jazzband.

00:59:00.160 --> 00:59:01.520
- Oh yeah.

00:59:01.520 --> 00:59:05.200
- Where basically they're an organization that says,

00:59:05.200 --> 00:59:12.560
are you a popular Django extension or Pip, or pip-tools?

00:59:12.560 --> 00:59:14.160
For some reason, they also control pip-tools,

00:59:14.160 --> 00:59:18.640
but do you not have time to be the maintainer of it anymore?

00:59:18.640 --> 00:59:21.360
Come over to Jazzband.

00:59:21.360 --> 00:59:24.400
We'll, you'll still be like,

00:59:24.400 --> 00:59:25.840
you can still be involved in the project,

00:59:25.840 --> 00:59:29.200
but we'll also help you find more people from the community.

00:59:29.200 --> 00:59:34.720
Like we will open up the maintaining process

00:59:34.720 --> 00:59:38.080
to your interested users in the community.

00:59:38.080 --> 00:59:43.840
And so I'm doing a similar thing with palettes.

00:59:44.160 --> 00:59:46.480
Called palettes eco for ecosystem.

00:59:46.480 --> 00:59:46.800
- Okay.

00:59:46.800 --> 00:59:50.080
- So if you go to github.com/palettes-eco.

00:59:50.080 --> 00:59:53.520
- With an S?

00:59:53.520 --> 00:59:57.600
- Yeah, palettes-eco.github.

00:59:57.600 --> 01:00:03.360
What we've started to do is reach out to maintainers

01:00:03.360 --> 01:00:08.320
of like Flask SQLAlchemy, Flask admin, Flask security, Flask mail,

01:00:08.320 --> 01:00:12.480
Blinker, caching, debug toolbar,

01:00:12.480 --> 01:00:14.320
like all these huge extensions.

01:00:14.320 --> 01:00:16.880
So many of them have these huge backlogs,

01:00:16.880 --> 01:00:18.560
just like Flask and all the other projects did

01:00:18.560 --> 01:00:20.080
when I got started with them, you know,

01:00:20.080 --> 01:00:21.920
and their maintainers are overwhelmed.

01:00:21.920 --> 01:00:23.760
And so I reach out to them.

01:00:23.760 --> 01:00:26.880
I've been reaching out to them and kind of explaining,

01:00:26.880 --> 01:00:28.720
hey, we're starting this thing up.

01:00:28.720 --> 01:00:30.560
Do you want to add your project?

01:00:30.560 --> 01:00:33.360
So we've had some success already.

01:00:33.360 --> 01:00:36.960
We've had people at sprints contribute to them.

01:00:36.960 --> 01:00:39.360
And like I was talking about,

01:00:39.360 --> 01:00:43.520
I've kind of standardized how Flask and the other projects look,

01:00:43.520 --> 01:00:46.000
like all the tools they're using, the layouts they're using,

01:00:46.000 --> 01:00:47.200
the workflows they're using.

01:00:47.200 --> 01:00:50.960
I'm taking that same approach and trying to standardize

01:00:50.960 --> 01:00:52.480
all the extensions we get too.

01:00:52.480 --> 01:00:57.840
So the idea is that anybody who's used to contributing

01:00:57.840 --> 01:01:03.040
to one of these extensions, it should be just as familiar to them

01:01:03.040 --> 01:01:06.000
to jump into another extension and contribute there as well, right?

01:01:06.000 --> 01:01:07.200
- Yeah, that's a great idea, yeah.

01:01:09.360 --> 01:01:13.600
And so with Pallets Eco, we can help find maintainers

01:01:13.600 --> 01:01:17.040
from the community, add them.

01:01:17.040 --> 01:01:22.960
But the core team for Pallets themselves still has access as well.

01:01:22.960 --> 01:01:26.080
So, you know, if we make some change to Flask,

01:01:26.080 --> 01:01:30.640
it finally removes something that, like some internal thing

01:01:30.640 --> 01:01:31.760
that somebody was relying on,

01:01:31.760 --> 01:01:34.720
and like suddenly this popular live extension no longer works.

01:01:34.720 --> 01:01:36.880
We at least have access.

01:01:36.880 --> 01:01:38.960
Like we're probably not gonna take on the responsibility

01:01:38.960 --> 01:01:41.520
of being the core maintainers of all these things,

01:01:41.520 --> 01:01:44.400
but we can step in and make an emergency release that just,

01:01:44.400 --> 01:01:46.240
"Oh, you just need to change this line here.

01:01:46.240 --> 01:01:47.520
Make a bug fix release really quick."

01:01:47.520 --> 01:01:51.840
So we can at least keep the ecosystem going

01:01:51.840 --> 01:01:55.840
while we work on finding longer term sustainability

01:01:55.840 --> 01:01:56.720
with more maintainers.

01:01:56.720 --> 01:01:58.240
- I love that idea.

01:01:58.240 --> 01:02:00.480
'Cause a lot of times it is a really small change,

01:02:00.480 --> 01:02:02.720
but if it doesn't work, it doesn't work, right?

01:02:02.720 --> 01:02:04.160
- Right, exactly.

01:02:04.160 --> 01:02:05.680
Like a lot of the times it's been like,

01:02:05.680 --> 01:02:08.240
we have made like little deprecations

01:02:08.240 --> 01:02:09.280
and then remittals and stuff,

01:02:09.280 --> 01:02:11.280
which have just, that was the one thing

01:02:11.280 --> 01:02:13.280
that some random extension was relying on

01:02:13.280 --> 01:02:16.000
that like half the ecosystem ended up relying on.

01:02:16.000 --> 01:02:18.720
And we just had to like, you know, change a line

01:02:18.720 --> 01:02:21.760
or change an import or add an argument.

01:02:21.760 --> 01:02:22.720
- Yeah.

01:02:22.720 --> 01:02:25.680
- So yeah, like that's my big focus now.

01:02:25.680 --> 01:02:28.720
If people are interested in contributing to Pallets,

01:02:28.720 --> 01:02:33.040
they're welcome to, you know, contribute to like Jinja

01:02:33.040 --> 01:02:34.640
and Click or any of the projects as well.

01:02:34.640 --> 01:02:36.240
If there's open issues, they can work on them.

01:02:36.240 --> 01:02:40.080
But like a huge new source of like involvement

01:02:40.080 --> 01:02:43.840
for people can be, what are the extensions you're using?

01:02:43.840 --> 01:02:45.840
Let's get you involved in those as well.

01:02:45.840 --> 01:02:47.200
- Yeah, it makes a lot of sense

01:02:47.200 --> 01:02:49.280
because to make a change to Flask

01:02:49.280 --> 01:02:52.560
is that's a highly polished piece of software,

01:02:52.560 --> 01:02:56.720
but the extensions potentially are more open

01:02:56.720 --> 01:02:58.960
to just jumping in and getting into it.

01:02:58.960 --> 01:03:01.600
- Yeah, it's really hard for people,

01:03:02.720 --> 01:03:03.680
it's hard to tell people this,

01:03:03.680 --> 01:03:05.040
but like, you know, people come in excited,

01:03:05.040 --> 01:03:06.880
like, oh, I want to contribute to Flask.

01:03:06.880 --> 01:03:08.560
And then they look at it and they're like,

01:03:08.560 --> 01:03:10.400
oh, three open issues, what do I do?

01:03:10.400 --> 01:03:13.600
You know, or like, and these three issues

01:03:13.600 --> 01:03:14.960
are like really low level stuff

01:03:14.960 --> 01:03:16.720
or like they've already been handled or something.

01:03:16.720 --> 01:03:17.680
- Sure.

01:03:17.680 --> 01:03:20.800
- And so we like, yeah, like what we're telling people now

01:03:20.800 --> 01:03:23.120
is like, okay, well, Flask, not only is it made up

01:03:23.120 --> 01:03:24.800
of these five other libraries,

01:03:24.800 --> 01:03:27.360
but there's also this whole extension ecosystem

01:03:27.360 --> 01:03:28.720
out there for you to contribute to.

01:03:28.720 --> 01:03:31.680
Like everybody's heard of Flask, you know,

01:03:31.680 --> 01:03:33.600
so we can point them at the right place.

01:03:33.600 --> 01:03:36.400
They come to us and then we point them to the community.

01:03:36.400 --> 01:03:37.280
- Yeah, excellent.

01:03:37.280 --> 01:03:39.600
Well, I'll be sure to link to that in the show notes as well.

01:03:39.600 --> 01:03:40.100
- Yeah.

01:03:40.100 --> 01:03:42.480
- And with that, I think we're out of time.

01:03:42.480 --> 01:03:43.440
Thank you for being here.

01:03:43.440 --> 01:03:45.280
Just final call to action, you know,

01:03:45.280 --> 01:03:46.960
people either want to contribute

01:03:46.960 --> 01:03:48.400
or just want to use Flask, what do you tell them?

01:03:48.400 --> 01:03:51.600
- Yeah, yeah, so like I said,

01:03:51.600 --> 01:03:53.920
we're like developing Palettes Eco.

01:03:53.920 --> 01:03:57.440
I'm currently writing maintainer documentation,

01:03:57.440 --> 01:03:58.800
so it'll make it easier for people

01:03:58.800 --> 01:04:00.400
to get involved in that way.

01:04:00.400 --> 01:04:01.680
I'm writing a new website with a lot

01:04:01.680 --> 01:04:03.040
of our policies and everything,

01:04:03.040 --> 01:04:06.720
but the main point of contact for all of this

01:04:06.720 --> 01:04:09.520
and the way we could coordinate with our community

01:04:09.520 --> 01:04:11.120
is on our Discord server.

01:04:11.120 --> 01:04:15.120
So if you go to discord.gg/palettes,

01:04:15.120 --> 01:04:19.440
that will let you join the Palettes server.

01:04:19.440 --> 01:04:21.360
It's, you know, open to everybody.

01:04:21.360 --> 01:04:24.240
We need help, you know,

01:04:24.240 --> 01:04:25.680
not only contributing to the libraries,

01:04:25.680 --> 01:04:28.720
but answering questions in our questions channel,

01:04:28.720 --> 01:04:31.920
or, you know, like triaging issues

01:04:31.920 --> 01:04:32.720
and all sorts of things.

01:04:32.720 --> 01:04:35.360
There's lots of different ways to be involved

01:04:35.360 --> 01:04:36.960
in the projects without writing code,

01:04:36.960 --> 01:04:39.200
and it all starts on that Discord server.

01:04:39.200 --> 01:04:39.700
- Awesome.

01:04:39.700 --> 01:04:42.080
Well, thanks again for being here

01:04:42.080 --> 01:04:43.920
and catch you next time.

01:04:43.920 --> 01:04:45.440
- Yeah, thank you.

01:04:45.440 --> 01:04:47.440
- Bye.

