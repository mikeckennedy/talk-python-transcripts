WEBVTT

00:00:00.000 --> 00:00:02.240
- Hello, YouTube.


00:00:02.240 --> 00:00:04.040
Hello, live stream watchers.


00:00:04.040 --> 00:00:05.760
So great to have you here.


00:00:05.760 --> 00:00:07.400
If you have questions or thoughts,


00:00:07.400 --> 00:00:08.360
put them into the live chat


00:00:08.360 --> 00:00:09.800
and we'll try to make them part of the show.


00:00:09.800 --> 00:00:10.680
Hey, Cecil.


00:00:10.680 --> 00:00:11.960
- Hey, what's going on?


00:00:11.960 --> 00:00:13.360
- Hey, it's great to see you.


00:00:13.360 --> 00:00:14.620
Let me put our names back.


00:00:14.620 --> 00:00:17.000
I was just doing some work with our StreamYard here


00:00:17.000 --> 00:00:18.320
and our names had disappeared.


00:00:18.320 --> 00:00:20.500
So now people know you're Cecil.


00:00:20.500 --> 00:00:22.400
And I'm Michael.


00:00:22.400 --> 00:00:24.620
So yeah, it's great to have you here on the channel.


00:00:24.620 --> 00:00:28.040
And it's gonna be fun to just sort of chat


00:00:28.040 --> 00:00:29.800
about past, future, present.


00:00:29.800 --> 00:00:32.640
I see you're wearing the C# shirt.


00:00:32.640 --> 00:00:34.840
>> Yeah, I decided to wear this today.


00:00:34.840 --> 00:00:36.520
Also, this is a vintage shirt,


00:00:36.520 --> 00:00:38.440
like you can't get these anymore.


00:00:38.440 --> 00:00:41.000
I think this was from,


00:00:41.000 --> 00:00:43.200
I want to say Xamarin Evolve,


00:00:43.200 --> 00:00:45.240
back before Xamarin was a Microsoft company,


00:00:45.240 --> 00:00:47.320
they had a conference called Xamarin Evolve and they used to


00:00:47.320 --> 00:00:49.740
give out swag and bags and stuff.


00:00:49.740 --> 00:00:53.940
I got this shirt and I try to only wear it on special occasions


00:00:53.940 --> 00:00:56.440
because I want to preserve it for as long as I can,


00:00:56.440 --> 00:00:58.480
because I know I'm not going to get another one.


00:00:58.480 --> 00:00:59.320
- Yeah, absolutely.


00:00:59.320 --> 00:01:00.920
- I figured today was a special occasion, I'll wear it today.


00:01:00.920 --> 00:01:01.840
- Yeah, for sure, for sure.


00:01:01.840 --> 00:01:04.120
I got my Vivaldi shirt on today,


00:01:04.120 --> 00:01:06.700
which is, should have brought my Python ones.


00:01:06.700 --> 00:01:09.760
Anyway, I'm super excited to have you back on the show.


00:01:09.760 --> 00:01:11.880
You've been on the show a couple of times.


00:01:11.880 --> 00:01:15.960
You know, we talked about live streaming of all things.


00:01:15.960 --> 00:01:18.280
And you know, some of my live stream setup


00:01:18.280 --> 00:01:19.740
is actually thanks to you,


00:01:19.740 --> 00:01:22.640
because you blazed the trail, which is awesome.


00:01:22.640 --> 00:01:24.200
You and it was Brian Clark, right?


00:01:24.200 --> 00:01:28.080
Who had been doing your Python live stream, right?


00:01:28.080 --> 00:01:30.920
- Yeah, yeah, back when Brian and I were both at Microsoft,


00:01:30.920 --> 00:01:34.760
we were doing a Pi Weekly Live is what it was called.


00:01:34.760 --> 00:01:36.680
We were just kind of looking at Python


00:01:36.680 --> 00:01:39.540
from a perspective of people that don't do Python


00:01:39.540 --> 00:01:43.000
for a living or I don't push Python to production


00:01:43.000 --> 00:01:46.200
or I don't maintain Python open source libraries,


00:01:46.200 --> 00:01:49.320
but it's still a cool language and we wanted to learn it


00:01:49.320 --> 00:01:51.160
and we wanted to learn in public.


00:01:51.160 --> 00:01:54.520
And I think as advocates or pretty much just as anyone,


00:01:54.520 --> 00:01:57.400
I think now like learning in public is a great way


00:01:57.400 --> 00:02:01.040
to not only help yourself, but also help the community too.


00:02:01.040 --> 00:02:03.920
- It is, and putting yourself out there in that way.


00:02:03.920 --> 00:02:07.320
I think it's scary, especially when you're brand new,


00:02:07.320 --> 00:02:08.800
you're like, "Oh, I've been doing this for a few weeks,


00:02:08.800 --> 00:02:09.840
"I'm gonna look really bad."


00:02:09.840 --> 00:02:13.920
But at the same time, you learn that people wanna help you


00:02:13.920 --> 00:02:16.600
and other people who are also having the same problems


00:02:16.600 --> 00:02:17.440
really appreciate that.


00:02:17.440 --> 00:02:18.720
So that was a really cool episode.


00:02:18.720 --> 00:02:20.860
And we also talked about developer relations


00:02:20.860 --> 00:02:23.720
and what the heck is that with you and Paul Everett


00:02:23.720 --> 00:02:25.640
and some other folks as well.


00:02:25.640 --> 00:02:27.920
So anyway, welcome back.


00:02:27.920 --> 00:02:30.680
This time we're gonna be talking about


00:02:30.680 --> 00:02:35.760
what may seem initially like a bit of a weird topic


00:02:35.760 --> 00:02:39.040
for the Talk Python show.


00:02:39.040 --> 00:02:41.200
And that's somewhat .NET.


00:02:41.200 --> 00:02:43.000
So what we're gonna talk about is


00:02:43.000 --> 00:02:45.680
really reaching out to folks who are experts in C#


00:02:45.680 --> 00:02:47.760
and .NET, hence your shirt,


00:02:47.760 --> 00:02:52.760
and saying, look, Python is this excellent language as well.


00:02:52.840 --> 00:02:57.160
and it seems really like such a different ecosystem,


00:02:57.160 --> 00:02:59.680
such a different language, such a different tool chain,


00:02:59.680 --> 00:03:01.720
like almost all the axes,


00:03:01.720 --> 00:03:04.840
it looks really weird from a .NET perspective, right?


00:03:04.840 --> 00:03:07.760
And I think it's gonna be super fun to explore those.


00:03:07.760 --> 00:03:09.480
I want people listening to take this


00:03:09.480 --> 00:03:12.440
from a slightly different perspective.


00:03:12.440 --> 00:03:15.520
Obviously, if you're a C# or .NET person,


00:03:15.520 --> 00:03:17.640
that's a really focused conversation,


00:03:17.640 --> 00:03:20.520
but what about the teams who are doing Java


00:03:20.520 --> 00:03:21.800
and they're looking at Python?


00:03:21.800 --> 00:03:23.920
or the teams who are doing C++ and looking at it, right?


00:03:23.920 --> 00:03:27.520
I think this could be a sort of a stand-in or a prototype


00:03:27.520 --> 00:03:30.240
for how people coming from other technologies


00:03:30.240 --> 00:03:33.440
coming into Python might evaluate it and perceive it


00:03:33.440 --> 00:03:35.400
and think about it.


00:03:35.400 --> 00:03:36.700
- Yeah, I think so too.


00:03:36.700 --> 00:03:39.600
And one of the things that,


00:03:39.600 --> 00:03:41.200
so first of all, I want to tell folks,


00:03:41.200 --> 00:03:42.160
this is not like a,


00:03:42.160 --> 00:03:43.720
my language is better than your language


00:03:43.720 --> 00:03:45.200
kind of conversation.


00:03:45.200 --> 00:03:46.040
- Fight.


00:03:46.040 --> 00:03:47.440
- We're all friends here.


00:03:47.440 --> 00:03:49.280
We all like each other.


00:03:49.280 --> 00:03:51.440
But I always find that,


00:03:51.440 --> 00:03:52.900
if you kind of look through like the history


00:03:52.900 --> 00:03:53.800
of programming languages,


00:03:53.800 --> 00:03:55.540
like we all kind of evolved together, right?


00:03:55.540 --> 00:03:58.040
Like we all borrow features from each other,


00:03:58.040 --> 00:04:00.180
whether it's libraries or, you know,


00:04:00.180 --> 00:04:03.180
actual language core features or whatever the case is.


00:04:03.180 --> 00:04:05.500
And, you know, it's always interesting to see folks


00:04:05.500 --> 00:04:07.540
when they're like, oh, your language can do that too,


00:04:07.540 --> 00:04:08.460
so can mine.


00:04:08.460 --> 00:04:10.180
And so now that kind of just makes them


00:04:10.180 --> 00:04:11.740
a little bit more relatable, right?


00:04:11.740 --> 00:04:12.580
'Cause you're like, okay, well,


00:04:12.580 --> 00:04:14.720
I know how that works for me.


00:04:14.720 --> 00:04:17.400
So now maybe I can pick up your language a little bit easier


00:04:17.400 --> 00:04:19.700
because I already know like that particular concept,


00:04:19.700 --> 00:04:20.540
you know?


00:04:20.540 --> 00:04:21.920
- I totally agree.


00:04:21.920 --> 00:04:24.500
And it's not a one-way street either.


00:04:24.500 --> 00:04:25.340
- Yeah, exactly.


00:04:25.340 --> 00:04:28.700
- For example, we in Python have async and await,


00:04:28.700 --> 00:04:30.180
thank you to C#,


00:04:30.180 --> 00:04:33.500
but C# has generators and yield return,


00:04:33.500 --> 00:04:35.960
thank you to places like Python, right?


00:04:35.960 --> 00:04:38.420
So there's like this sort of give and take,


00:04:38.420 --> 00:04:40.520
which I think is quite interesting.


00:04:40.520 --> 00:04:42.860
So the first- - The first thing that-


00:04:42.860 --> 00:04:44.660
- Yeah, go ahead. - C# has,


00:04:44.660 --> 00:04:47.880
I don't know if you know, I think it was in C# 9.


00:04:47.880 --> 00:04:48.720
I might be mistaken.


00:04:48.720 --> 00:04:49.900
I think it was C# 9. - C#, by the way,


00:04:49.900 --> 00:04:51.780
if you're not following it, it has many versions.


00:04:51.780 --> 00:04:54.420
This is actually an interesting thing to discuss


00:04:54.420 --> 00:04:56.260
as we get into it later.


00:04:56.260 --> 00:04:59.780
So C# 9, this is like a lot of releases, yeah?


00:04:59.780 --> 00:05:03.100
- Yeah, I think C# 9 was two years ago, two years ago.


00:05:03.100 --> 00:05:04.860
Right, so last year's version was C# 10


00:05:04.860 --> 00:05:09.820
and then C# 11 is gonna be released in November of 2022.


00:05:09.820 --> 00:05:11.800
So yeah, like Michael said, there's a lot of versions.


00:05:11.800 --> 00:05:14.140
But I kind of wanted to follow up on that last point


00:05:14.140 --> 00:05:17.300
you made about Async/Await because another feature too,


00:05:17.300 --> 00:05:19.300
which is one I actually really appreciate


00:05:19.300 --> 00:05:21.020
is records.


00:05:21.020 --> 00:05:22.180
So when I think about records,


00:05:22.180 --> 00:05:24.740
I almost think about like data classes in Python.


00:05:24.740 --> 00:05:26.900
- Yeah, they're very similar, yeah.


00:05:26.900 --> 00:05:28.660
- Yeah, I think about like these immutable classes,


00:05:28.660 --> 00:05:30.300
these immutable types that I have,


00:05:30.300 --> 00:05:31.820
and essentially like their job is really


00:05:31.820 --> 00:05:33.900
just to pass information back and forth.


00:05:33.900 --> 00:05:37.560
But I want to say, I feel like Python had that first.


00:05:37.560 --> 00:05:40.760
Because again, .NET got that like two years ago.


00:05:40.760 --> 00:05:42.700
I'm not sure how old data records are.


00:05:42.700 --> 00:05:45.560
- Oh yeah, data classes, I believe are older than two years,


00:05:45.560 --> 00:05:47.120
but yeah, I'm pretty sure,


00:05:47.120 --> 00:05:51.000
but yeah, I don't totally remember the exact release number it was.


00:05:51.000 --> 00:05:51.960
>> Yeah.


00:05:51.960 --> 00:05:53.600
>> We have a lot of releases too.


00:05:53.600 --> 00:05:54.900
We just put them as point releases,


00:05:54.900 --> 00:05:56.520
3.7, 3.8, 3.9.


00:05:56.520 --> 00:06:03.840
Now, let's start this conversation from a perspective of a C# developer.


00:06:03.840 --> 00:06:06.260
Now, imagine you don't know a lot about Python.


00:06:06.260 --> 00:06:09.680
You do know a lot about both languages, just to be clear,


00:06:09.680 --> 00:06:11.560
and as do I. I actually have


00:06:11.560 --> 00:06:14.640
a ton of experience in.NET before I got into Python.


00:06:14.640 --> 00:06:18.160
But let's imagine that you don't know a lot about Python


00:06:18.160 --> 00:06:19.840
and you're thinking about,


00:06:19.840 --> 00:06:21.840
maybe I just really need to either,


00:06:21.840 --> 00:06:23.200
I'm going to get a new job


00:06:23.200 --> 00:06:26.780
and it's not the same technology I was working in.


00:06:26.780 --> 00:06:28.120
This is a Python place


00:06:28.120 --> 00:06:30.920
and I've been doing .NET at my company.


00:06:30.920 --> 00:06:33.800
Or you're just thinking, more like I was,


00:06:33.800 --> 00:06:38.080
it's like, gosh, I kind of need to diversify


00:06:38.080 --> 00:06:41.080
my technology and my career experience


00:06:41.080 --> 00:06:43.720
and not put all the eggs in one basket sort of thing.


00:06:43.720 --> 00:06:47.220
and really actually love that change.


00:06:47.220 --> 00:06:52.220
But think about what are the things that you really love


00:06:52.220 --> 00:06:55.840
about working in C# and .NET and you're like,


00:06:55.840 --> 00:06:58.480
I just, if I had to leave this feature


00:06:58.480 --> 00:07:00.400
or this language thing behind,


00:07:00.400 --> 00:07:03.300
it would nearly kill me to do so.


00:07:03.300 --> 00:07:06.940
- Yeah, I think for me,


00:07:06.940 --> 00:07:11.380
and it's almost not so much so for me about like the language


00:07:11.380 --> 00:07:12.240
'cause like you mentioned before,


00:07:12.240 --> 00:07:14.440
We've had the opportunity to play around with a lot of


00:07:14.440 --> 00:07:16.940
different languages and see how the world works.


00:07:16.940 --> 00:07:19.080
For me, it's the tooling.


00:07:19.080 --> 00:07:22.760
From a.NET developer perspective, it's the tooling.


00:07:22.760 --> 00:07:24.000
>> The tooling and the libraries.


00:07:24.000 --> 00:07:25.200
>> The tooling, the libraries,


00:07:25.200 --> 00:07:27.080
and the integrations with some of


00:07:27.080 --> 00:07:29.480
the other ecosystem that surrounds.NET


00:07:29.480 --> 00:07:31.800
that makes it really useful for me.


00:07:31.800 --> 00:07:33.720
I'll give you an example.


00:07:33.720 --> 00:07:35.980
For.NET developers, you may already know this,


00:07:35.980 --> 00:07:38.800
but we have project types that are based on


00:07:38.800 --> 00:07:42.200
and CS projects and solution files and things of that nature,


00:07:42.200 --> 00:07:44.720
where I know some folks might look at and be like,


00:07:44.720 --> 00:07:47.960
"Oh man, why did my project have all of these different files?"


00:07:47.960 --> 00:07:52.800
And there's so much stuff just to do like a Hello World or simple project.


00:07:52.800 --> 00:07:54.720
But then I look at that as, "Okay, well,


00:07:54.720 --> 00:07:57.040
I know where the root of my project is."


00:07:57.040 --> 00:08:02.840
I know there's a very standard way to define what are my dependencies,


00:08:02.840 --> 00:08:06.680
and what are the different projects that denotes,


00:08:06.680 --> 00:08:09.820
I guess sub-projects in that larger solution.


00:08:09.820 --> 00:08:14.000
Whereas one of the things that hurt me a little bit,


00:08:14.000 --> 00:08:16.160
as you look at other languages and not just Python,


00:08:16.160 --> 00:08:19.200
but if you look at JavaScript and Go and some of these other ones,


00:08:19.200 --> 00:08:21.800
I'm like, "Okay, well, how do I know where's the roots?


00:08:21.800 --> 00:08:24.220
Then how do I have multiple projects?"


00:08:24.220 --> 00:08:26.640
Or I guess you could call them multiple components


00:08:26.640 --> 00:08:28.820
for that same project or multiple pieces.


00:08:28.820 --> 00:08:32.600
But I want them in the same folder and I want when I hit "Build" or "Run",


00:08:32.600 --> 00:08:35.760
that all of them run or the right subset of them run.


00:08:35.760 --> 00:08:37.800
I maybe have a web front end and


00:08:37.800 --> 00:08:39.320
some API back end and they


00:08:39.320 --> 00:08:41.240
both need to be running that type of thing.


00:08:41.240 --> 00:08:44.600
>> Right. For me, one of the things I love about Visual Studio,


00:08:44.600 --> 00:08:46.080
back when I was on Windows because


00:08:46.080 --> 00:08:47.700
I don't use Windows as much anymore,


00:08:47.700 --> 00:08:51.360
I used to be able to select multiple projects to start,


00:08:51.360 --> 00:08:53.240
like when I started debugging session.


00:08:53.240 --> 00:08:55.140
Whenever I hit F5,


00:08:55.140 --> 00:08:59.200
famous F5, start and run and do all that types of stuff.


00:08:59.200 --> 00:09:01.800
Now, I'll have multiple projects running.


00:09:01.800 --> 00:09:03.120
It can be, like you said,


00:09:03.120 --> 00:09:05.040
my web API or my backends,


00:09:05.040 --> 00:09:08.000
or I have a Xamarin thing that's running or whatever the case is.


00:09:08.000 --> 00:09:11.000
But now they're all running and debugging at the same time in


00:09:11.000 --> 00:09:13.440
the same solution because again,


00:09:13.440 --> 00:09:16.820
the editor knows what products are a part of this.


00:09:16.820 --> 00:09:18.120
It knows what the dependencies are.


00:09:18.120 --> 00:09:20.600
It knows what ports they're running on and all that types of stuff.


00:09:20.600 --> 00:09:23.960
Whereas again, if I walk away from that world a little bit,


00:09:23.960 --> 00:09:26.640
I feel like now that becomes like a manual process and I have to


00:09:26.640 --> 00:09:30.000
write scripts or YAML files.


00:09:30.000 --> 00:09:32.640
>> Yeah. Well, let me riff on that for a minute.


00:09:32.640 --> 00:09:37.640
So often what you'll see in the tutorials and stuff,


00:09:37.640 --> 00:09:40.840
the getting started stories in the Python space


00:09:40.840 --> 00:09:45.840
is create a blank Python file called app.py,


00:09:45.840 --> 00:09:51.000
main.py, whatever, and write this bit of code.


00:09:51.000 --> 00:09:53.400
And the sort of starting structure


00:09:53.400 --> 00:09:58.200
that is presented to you is, it's almost wholly absent.


00:09:58.200 --> 00:09:59.440
If you're gonna build a web app,


00:09:59.440 --> 00:10:01.920
you have to figure out, well, where do the static files go?


00:10:01.920 --> 00:10:02.880
Where is the JavaScript?


00:10:02.880 --> 00:10:04.140
How do I align that?


00:10:04.140 --> 00:10:07.620
What do I do with my view templates versus just,


00:10:07.620 --> 00:10:10.400
it's completely unstructured, right?


00:10:10.400 --> 00:10:13.400
And I think that that is the world


00:10:13.400 --> 00:10:15.120
that's presented to a lot of people.


00:10:15.120 --> 00:10:16.840
And keeping with my opening theme,


00:10:16.840 --> 00:10:18.120
if you're coming from a place


00:10:18.120 --> 00:10:21.880
where there's a lot of guidance through the tooling,


00:10:21.880 --> 00:10:25.720
you may see that and want to just run in horror and go,


00:10:25.720 --> 00:10:28.080
I've been shot back to the 80s, what has happened to me?


00:10:28.080 --> 00:10:30.680
I don't want this, I don't need this, why am I here?


00:10:30.680 --> 00:10:35.520
But as you dig deeper, if you want to opt into those things,


00:10:35.520 --> 00:10:40.520
they do exist in a much more sort of decentralized,


00:10:40.520 --> 00:10:46.040
by choice, go hunt them down way.


00:10:46.040 --> 00:10:48.320
And that's like, if you want a lot of structure,


00:10:48.320 --> 00:10:50.920
you could use cookie cutter to generate


00:10:50.920 --> 00:10:52.760
very structured projects.


00:10:52.760 --> 00:10:55.920
So much so that I think a lot of the cookie cutters


00:10:55.920 --> 00:10:57.820
are overly specific.


00:10:57.820 --> 00:11:00.380
you end up, you know, I don't really need


00:11:00.380 --> 00:11:03.120
two layers of Redis, one layer of Redis was enough.


00:11:03.120 --> 00:11:05.020
Like, why is all this stuff here?


00:11:05.020 --> 00:11:06.100
People get carried away with it.


00:11:06.100 --> 00:11:08.700
But you can generate those types of like,


00:11:08.700 --> 00:11:10.760
here's the pieces and it's really structured


00:11:10.760 --> 00:11:12.060
how they fit together.


00:11:12.060 --> 00:11:14.820
You can use things like PyCharm to create a project


00:11:14.820 --> 00:11:16.160
that might have a little bit of structure.


00:11:16.160 --> 00:11:19.260
They very rarely have much, but a little bit.


00:11:19.260 --> 00:11:20.940
But none of that is presented to you in a way


00:11:20.940 --> 00:11:23.760
that is discoverable in the first week.


00:11:23.760 --> 00:11:25.740
- Yeah. - Right?


00:11:25.740 --> 00:11:26.840
If you're brand new, you're like,


00:11:26.840 --> 00:11:29.420
I'm here at this one file, that's what the tutorial says.


00:11:29.420 --> 00:11:30.740
Why is it all in one file anyway?


00:11:30.740 --> 00:11:32.420
Shouldn't this be broken up?


00:11:32.420 --> 00:11:34.820
- Yeah, and to that point,


00:11:34.820 --> 00:11:35.660
and I just want to say like,


00:11:35.660 --> 00:11:38.560
there's like pros and cons to each of those approaches.


00:11:38.560 --> 00:11:39.760
'Cause like you mentioned before,


00:11:39.760 --> 00:11:42.140
one of the things that I could say I love about Python


00:11:42.140 --> 00:11:45.020
is the fact that I could just get started with one file.


00:11:45.020 --> 00:11:45.860
- Yeah. - Right?


00:11:45.860 --> 00:11:47.620
And that getting started experience


00:11:47.620 --> 00:11:49.740
and that evolvability of the language,


00:11:49.740 --> 00:11:50.780
I think is important, right?


00:11:50.780 --> 00:11:51.980
And I think that's one of the reasons


00:11:51.980 --> 00:11:54.300
why people like latch onto it so much.


00:11:54.300 --> 00:11:58.820
because my barrier to entry is like extremely low.


00:11:58.820 --> 00:12:02.540
It is literally like a file and whatever Python runtime


00:12:02.540 --> 00:12:03.900
that you have on your machine.


00:12:03.900 --> 00:12:04.740
You know what I mean?


00:12:04.740 --> 00:12:08.520
- Yeah, and that's a huge attraction for many people


00:12:08.520 --> 00:12:10.820
coming into the ecosystem from what I can see


00:12:10.820 --> 00:12:12.140
from talking to a lot of people is, right?


00:12:12.140 --> 00:12:15.580
I'm a biologist and I learned that if I write


00:12:15.580 --> 00:12:19.120
these five lines into a text file, I can now do magic.


00:12:19.120 --> 00:12:23.060
Whereas if you've got to learn about public static void


00:12:23.060 --> 00:12:25.700
classes, namespaces, compiling, linking.


00:12:25.700 --> 00:12:27.940
You're like, "Wait a minute, I'm not a programmer.


00:12:27.940 --> 00:12:28.900
This is not for me."


00:12:28.900 --> 00:12:30.500
- Yeah, exactly.


00:12:30.500 --> 00:12:32.300
And when I think about that, right?


00:12:32.300 --> 00:12:34.540
Like if I think about like the structured nature


00:12:34.540 --> 00:12:37.780
of Visual Studio style projects and .NET projects


00:12:37.780 --> 00:12:40.140
and C# projects, and like you mentioned,


00:12:40.140 --> 00:12:43.820
like the Python projects and even the cookie cutter stuff


00:12:43.820 --> 00:12:45.060
and whatever the case is,


00:12:45.060 --> 00:12:47.300
I have to kind of look at the history and see like,


00:12:47.300 --> 00:12:52.300
oh, well, what space did these ecosystems kind of evolve in?


00:12:52.420 --> 00:12:55.080
>> When I think about that.NET Ecospace,


00:12:55.080 --> 00:12:56.440
and for folks that are listening,


00:12:56.440 --> 00:12:58.740
that's mostly where I spent a lot of


00:12:58.740 --> 00:13:02.380
my time in terms of my career coming forward.


00:13:02.380 --> 00:13:05.780
I think about schools and enterprises


00:13:05.780 --> 00:13:08.320
and big companies that need structure.


00:13:08.320 --> 00:13:10.820
Give me the structure and then I'll add


00:13:10.820 --> 00:13:14.220
the bits and pieces that I need going forward.


00:13:14.220 --> 00:13:15.980
When I think about Python,


00:13:15.980 --> 00:13:17.940
and again, if I'm wrong, please correct me.


00:13:17.940 --> 00:13:19.200
When I think about Python,


00:13:19.200 --> 00:13:21.540
I think about folks that are doing


00:13:21.540 --> 00:13:23.340
like a lot of scientific experiments,


00:13:23.340 --> 00:13:25.200
like numeric computations.


00:13:25.200 --> 00:13:27.980
And hey, I just want to do these things really quickly.


00:13:27.980 --> 00:13:29.560
I don't really need structure,


00:13:29.560 --> 00:13:32.260
but I want to like execute experiments.


00:13:32.260 --> 00:13:33.100
You know what I mean?


00:13:33.100 --> 00:13:33.920
- Yeah.


00:13:33.920 --> 00:13:35.020
- Not experiments from the perspective


00:13:35.020 --> 00:13:36.060
that the code is not important.


00:13:36.060 --> 00:13:37.340
The code is important,


00:13:37.340 --> 00:13:40.660
but like it's the task is more important


00:13:40.660 --> 00:13:41.860
than the code is, if that makes sense.


00:13:41.860 --> 00:13:43.100
- Sure, yeah, that makes a lot of sense.


00:13:43.100 --> 00:13:45.740
And so I think there's, that's not always true,


00:13:45.740 --> 00:13:46.720
but that's often true.


00:13:46.720 --> 00:13:48.940
And I would say there's different areas in where,


00:13:48.940 --> 00:13:51.820
like certainly the scientific area,


00:13:51.820 --> 00:13:53.920
maybe the data science exploration area,


00:13:53.920 --> 00:13:57.760
but even like the DevOps or just the automate stuff


00:13:57.760 --> 00:14:00.040
with Python rather than Bash, right?


00:14:00.040 --> 00:14:03.760
Like I need to copy these files over here


00:14:03.760 --> 00:14:06.460
and then rename them and then put them on S3, right?


00:14:06.460 --> 00:14:08.880
That's not a super structured experience,


00:14:08.880 --> 00:14:10.280
but Python's really good at it.


00:14:10.280 --> 00:14:12.760
And often it's used for it.


00:14:12.760 --> 00:14:15.760
- Yeah, and I agree with you when we look at


00:14:15.760 --> 00:14:18.580
where both of these languages have come today, right?


00:14:18.580 --> 00:14:22.220
If you look at, now .NET is what?


00:14:22.220 --> 00:14:24.620
.NET is like 16, 17 years old.


00:14:24.620 --> 00:14:25.820
>> 20, I think it's 20.


00:14:25.820 --> 00:14:26.780
>> Is it 20?


00:14:26.780 --> 00:14:28.820
>> Yeah, I think there was a whole anniversary.


00:14:28.820 --> 00:14:30.860
Richard Campbell and crew have been going


00:14:30.860 --> 00:14:32.740
on about the anniversary and stuff.


00:14:32.740 --> 00:14:35.980
>> Right. If you look at languages 20 years later,


00:14:35.980 --> 00:14:38.300
your initial intent was this.


00:14:38.300 --> 00:14:39.860
But as the world evolves,


00:14:39.860 --> 00:14:41.420
as the world software development evolves,


00:14:41.420 --> 00:14:43.220
and then now as developers,


00:14:43.220 --> 00:14:47.380
we're looking at attaching onto new work types,


00:14:47.380 --> 00:14:50.260
and you're hearing about Kubernetes and


00:14:50.260 --> 00:14:52.780
mobile apps and all these types of things.


00:14:52.780 --> 00:14:55.900
Now, our languages have to evolve with us,


00:14:55.900 --> 00:14:57.700
and you have to evolve with the industry.


00:14:57.700 --> 00:15:02.540
Now, some of those initial use cases have expanded and multiplied,


00:15:02.540 --> 00:15:03.820
and now we got to take care of


00:15:03.820 --> 00:15:05.540
all of these other things now as well.


00:15:05.540 --> 00:15:08.820
>> Yeah. Well, that's a big shift, honestly,


00:15:08.820 --> 00:15:11.480
that the whole.NET side has


00:15:11.480 --> 00:15:14.300
had to come to terms with over the last 10 years,


00:15:14.300 --> 00:15:18.260
is the open source, the open sourceification


00:15:18.260 --> 00:15:21.220
of this whole sort of commercial side of things.


00:15:21.220 --> 00:15:23.420
And let's maybe explore that for a little bit.


00:15:23.420 --> 00:15:27.820
'Cause I think there's a lot of interesting variations


00:15:27.820 --> 00:15:29.500
and differences and stuff, right?


00:15:29.500 --> 00:15:32.860
So Python in a sense was open source


00:15:32.860 --> 00:15:35.060
before open source was a thing, right?


00:15:35.060 --> 00:15:37.500
It was just, here's the source code, right?


00:15:37.500 --> 00:15:40.260
There was no GitHub and PRs


00:15:40.260 --> 00:15:43.060
and all of this sort of formal open source structure.


00:15:43.060 --> 00:15:46.460
It was just released on Usenet and other places.


00:15:46.460 --> 00:15:51.820
Whereas Python, sorry, whereas .NET has been a product


00:15:51.820 --> 00:15:55.880
from quite a long time, right?


00:15:55.880 --> 00:15:59.740
It was a way to build things in the early days


00:15:59.740 --> 00:16:02.280
for like Windows servers and for Windows


00:16:02.280 --> 00:16:04.540
and the Microsoft tooling and like,


00:16:04.540 --> 00:16:07.000
let's make it really good for developers over there, right?


00:16:07.000 --> 00:16:11.100
But that was not released by a bunch of people


00:16:11.100 --> 00:16:12.460
contributing in different ways.


00:16:12.460 --> 00:16:13.940
it was way more structured.


00:16:13.940 --> 00:16:18.140
>> Yeah. Again, when we look at the history of things,


00:16:18.140 --> 00:16:23.120
for me, one of the initial intents of.NET


00:16:23.120 --> 00:16:26.740
was to make it easier to build apps on Windows specifically.


00:16:26.740 --> 00:16:28.300
You think about, well, who's building


00:16:28.300 --> 00:16:30.460
Windows applications at that time?


00:16:30.460 --> 00:16:33.260
You go back to 2001, 2002.


00:16:33.260 --> 00:16:36.380
That's what we're talking about. At that time,


00:16:36.380 --> 00:16:38.980
mostly we're talking about desktop applications.


00:16:38.980 --> 00:16:40.580
We're thinking about Windows Forms.


00:16:40.580 --> 00:16:44.220
the successor to Visual Basic 6 and all of its glorious.


00:16:44.220 --> 00:16:47.420
>> Like the drag and drop UIs and all of that types of stuff.


00:16:47.420 --> 00:16:49.020
Then eventually that evolved into


00:16:49.020 --> 00:16:50.700
WinForms and those types of things.


00:16:50.700 --> 00:16:54.620
But still from a very Windows specific perspective.


00:16:54.620 --> 00:16:56.580
Then now we forward on to,


00:16:56.580 --> 00:16:59.620
I don't know, let's say 2013,


00:16:59.620 --> 00:17:01.840
14, 15 and even up until today.


00:17:01.840 --> 00:17:04.600
Now the Cloud has become a major thing.


00:17:04.600 --> 00:17:06.280
I'll be honest with you,


00:17:06.280 --> 00:17:08.420
I'm not a business person and I wasn't in the room,


00:17:08.420 --> 00:17:13.260
But I can tell you, anyone that wants to compete in the cloud computing space,


00:17:13.260 --> 00:17:19.400
you have to be cross-platform and you almost have to have a more open community


00:17:19.400 --> 00:17:23.620
to be able to work with different types of folks and interoperate with different


00:17:23.620 --> 00:17:24.620
types of technologies.


00:17:24.620 --> 00:17:28.780
Just because of the nature of the landscape of cloud computing, right?


00:17:28.780 --> 00:17:30.420
Like you mentioned Redis earlier, right?


00:17:30.420 --> 00:17:32.180
Like how do we plug into Redis?


00:17:32.180 --> 00:17:33.740
How do we plug into RabbitMQ?


00:17:33.740 --> 00:17:36.500
How do I plug into Docker and Kubernetes, right?


00:17:36.500 --> 00:17:39.860
A lot of these things have their best experiences


00:17:39.860 --> 00:17:41.860
on non-Windows machines.


00:17:41.860 --> 00:17:45.340
How do we now plug into that ecosystem and


00:17:45.340 --> 00:17:49.140
evolve to follow along with where the rest of the industry is going?


00:17:49.140 --> 00:17:53.300
That's why you'll see now.NET is now it's open source.


00:17:53.300 --> 00:17:57.700
Now it runs on ARM devices and it runs on the M1 Macs.


00:17:57.700 --> 00:17:59.540
>> Yeah, it runs on our Mac.


00:17:59.540 --> 00:18:02.940
>> It runs everywhere that you could potentially want it to run.


00:18:02.940 --> 00:18:06.820
It runs on, I'm pretty sure it runs on like Apple watches


00:18:06.820 --> 00:18:08.900
and on your fridge, if you have a Samsung fridge


00:18:08.900 --> 00:18:10.660
and like all these different places,


00:18:10.660 --> 00:18:12.460
which is really crazy to think about.


00:18:12.460 --> 00:18:14.780
Again, like looking back at the history


00:18:14.780 --> 00:18:18.980
of what this thing was initially intended for.


00:18:18.980 --> 00:18:20.580
- Sure.


00:18:20.580 --> 00:18:24.860
To me, the biggest, maybe two biggest,


00:18:24.860 --> 00:18:27.100
two big things that are sort of tied together


00:18:28.620 --> 00:18:32.660
that are affected by this different origin story


00:18:32.660 --> 00:18:37.660
of Python and .NET really have to do about


00:18:37.660 --> 00:18:41.500
what I'll refer to, I guess, as the one true way


00:18:41.500 --> 00:18:43.460
versus a thousand flowers blooming


00:18:43.460 --> 00:18:46.980
and some of them growing in maybe in the tall trees


00:18:46.980 --> 00:18:47.820
or whatever.


00:18:47.820 --> 00:18:54.740
And then people's perception of using open source content


00:18:56.940 --> 00:19:01.680
versus what is blessed by the project organizer.


00:19:01.680 --> 00:19:04.700
Maybe we can think about that for a little bit.


00:19:04.700 --> 00:19:07.200
When you're a.NET person,


00:19:07.200 --> 00:19:09.160
you go traditionally,


00:19:09.160 --> 00:19:11.580
I think this is actually fading a lot,


00:19:11.580 --> 00:19:13.260
but traditionally you would go


00:19:13.260 --> 00:19:15.300
into Visual Studio and it has a list of projects.


00:19:15.300 --> 00:19:17.080
What do you want? I want a web project,


00:19:17.080 --> 00:19:20.500
I want a UI, GUI type of project,


00:19:20.500 --> 00:19:24.140
I want an API, and then you click it and it goes whoosh,


00:19:24.140 --> 00:19:26.420
and a ton of files come out.


00:19:26.420 --> 00:19:31.420
and a bunch of linked libraries off to the equivalent of PyPI.


00:19:31.420 --> 00:19:34.420
And those are certain frameworks, right?


00:19:34.420 --> 00:19:39.420
It says you will use this web framework, ASP.NET, of some variety.


00:19:39.420 --> 00:19:43.420
You'll use this data access framework, entity framework probably, of some variety.


00:19:43.420 --> 00:19:45.420
Now go.


00:19:45.420 --> 00:19:48.420
You start from the assumption of, well, I'm using these frameworks.


00:19:48.420 --> 00:19:53.420
Now I get decisions about architecture and other things I bring in and how I build.


00:19:53.420 --> 00:19:58.300
Whereas somebody coming from that world into the Python space,


00:19:58.300 --> 00:20:02.580
I think they're going to have almost a rude awakening,


00:20:02.580 --> 00:20:04.780
both in a beautiful way,


00:20:04.780 --> 00:20:06.020
but also not so great,


00:20:06.020 --> 00:20:07.540
like a paradox of choice.


00:20:07.540 --> 00:20:10.900
So you want to do a project that's a web app?


00:20:10.900 --> 00:20:14.980
Okay. First, you begin the web framework selection story,


00:20:14.980 --> 00:20:17.740
Flask, Django, Pyramid,


00:20:17.740 --> 00:20:22.700
FastAPI, Tornado, and then the next letter down.


00:20:22.700 --> 00:20:25.780
Now we begin the data access layer exploration, right?


00:20:25.780 --> 00:20:26.800
Is it SQLAlchemy?


00:20:26.800 --> 00:20:27.640
Is it SQL model?


00:20:27.640 --> 00:20:29.180
Is it some MongoDB thing?


00:20:29.180 --> 00:20:34.180
Like you just, every step is great


00:20:34.180 --> 00:20:36.700
in that there's a ton of choice and variety.


00:20:36.700 --> 00:20:38.240
You don't like one, you pick another one.


00:20:38.240 --> 00:20:41.820
But to get started as an experienced person,


00:20:41.820 --> 00:20:43.260
that feels like a great option.


00:20:43.260 --> 00:20:47.400
As a brand new person, I think that feels like an impediment


00:20:47.400 --> 00:20:50.220
and not quite a problem, but almost a problem.


00:20:50.220 --> 00:20:51.440
What do you think?


00:20:51.440 --> 00:20:54.480
>> I think it definitely gives you a lot to think about.


00:20:54.480 --> 00:20:57.100
Because now you have to wonder,


00:20:57.100 --> 00:20:59.800
am I making the right choice?


00:20:59.800 --> 00:21:02.660
Not only am I making the right choice,


00:21:02.660 --> 00:21:04.680
am I making the right choice today?


00:21:04.680 --> 00:21:09.060
Is this choice going to grow with me as whatever I'm building,


00:21:09.060 --> 00:21:12.280
hopefully grows because hopefully all of our projects are successful.


00:21:12.280 --> 00:21:14.200
Hopefully, it will grow with me.


00:21:14.200 --> 00:21:16.200
If you go back again to


00:21:16.200 --> 00:21:18.840
that Microsoft thing that you're talking about,


00:21:18.840 --> 00:21:23.560
Like you said, .NET was not originally open-source and .NET


00:21:23.560 --> 00:21:26.120
is a product that was essentially


00:21:26.120 --> 00:21:29.800
created to make it easier to build things on Windows.


00:21:29.800 --> 00:21:31.520
Now, again, over time,


00:21:31.520 --> 00:21:33.560
it's become open-source and now it's in


00:21:33.560 --> 00:21:35.000
the Cloud and runs on different devices


00:21:35.000 --> 00:21:36.320
and all those types of things.


00:21:36.320 --> 00:21:38.200
But I keep going back to this


00:21:38.200 --> 00:21:40.240
because the origin story is important.


00:21:40.240 --> 00:21:42.120
Because like you said,


00:21:42.120 --> 00:21:46.720
Python was almost open-source by default from the beginning.


00:21:46.720 --> 00:21:50.460
And so its intent from the beginning was already like,


00:21:50.460 --> 00:21:52.120
hey, I have a community of people


00:21:52.120 --> 00:21:54.040
that are going to come and latch onto us.


00:21:54.040 --> 00:21:57.600
And then we're going to just grow organically together.


00:21:57.600 --> 00:21:59.920
Versus I have big company X that's


00:21:59.920 --> 00:22:02.280
going to throw millions of dollars in developer time


00:22:02.280 --> 00:22:05.760
and research and all these other things to tell you,


00:22:05.760 --> 00:22:08.080
this is the right way for me to do things.


00:22:08.080 --> 00:22:11.160
Now, I don't think there's a good or a bad way


00:22:11.160 --> 00:22:12.600
for either one.


00:22:12.600 --> 00:22:15.560
I think at that point, it comes down to us


00:22:15.560 --> 00:22:18.660
or you as a developer to sit down and think about,


00:22:18.660 --> 00:22:20.720
well, what's really important to me?


00:22:20.720 --> 00:22:24.320
How do I really want to build applications?


00:22:24.320 --> 00:22:26.620
It's such a funny thing because I like to look at


00:22:26.620 --> 00:22:30.780
building software like writing a book or drawing a picture.


00:22:30.780 --> 00:22:34.140
You can tell me to write the same app that you write,


00:22:34.140 --> 00:22:35.780
but you might write it in a different way.


00:22:35.780 --> 00:22:37.440
You might have a different style or


00:22:37.440 --> 00:22:39.800
different patterns or different tools that you like to do.


00:22:39.800 --> 00:22:42.700
But ultimately, maybe it solves the same problem,


00:22:42.700 --> 00:22:45.200
but it looks different because it came from different people.


00:22:45.200 --> 00:22:47.200
Just like telling a story,


00:22:47.200 --> 00:22:49.380
drawing a picture, whatever the case is.


00:22:49.380 --> 00:22:52.680
For some people, the way that they work and


00:22:52.680 --> 00:22:54.360
the way that their organization is set up,


00:22:54.360 --> 00:22:58.520
you might prefer to be able to pick each and every single piece


00:22:58.520 --> 00:23:01.460
of your stack, of your foundation,


00:23:01.460 --> 00:23:04.120
and make it look exactly how you want it to look.


00:23:04.120 --> 00:23:05.600
With the pieces that you want,


00:23:05.600 --> 00:23:07.000
the frameworks you want,


00:23:07.000 --> 00:23:09.720
the databases, all that type of stuff.


00:23:09.720 --> 00:23:12.120
Or you can go to Microsoft and do


00:23:12.120 --> 00:23:15.960
file your project and you can get ASP.NET and ADD framework and


00:23:15.960 --> 00:23:20.200
a right-click publish to the cloud and yeah you could just be like okay well


00:23:20.200 --> 00:23:23.080
and by the way when you publish the cloud how many vendors


00:23:23.080 --> 00:23:26.520
cloud vendors do you get it usually it's it's azure right


00:23:26.520 --> 00:23:30.040
i mean if you're talking about visual studio yeah it's


00:23:30.040 --> 00:23:34.200
you know yeah published azure right or just being like that that's another


00:23:34.200 --> 00:23:36.840
thing that's sort of like strongly encouraged as like one more


00:23:36.840 --> 00:23:40.040
choice yeah that's another thing you have to


00:23:40.040 --> 00:23:44.600
to think about. Now, for people that are in that space,


00:23:44.600 --> 00:23:46.400
if you're in a space of, "Hey,


00:23:46.400 --> 00:23:48.040
I just need the template.


00:23:48.040 --> 00:23:50.480
I need you to tell me how this thing is structured and


00:23:50.480 --> 00:23:52.000
where my dependencies go,


00:23:52.000 --> 00:23:54.360
how they're defined, and how the build process works.


00:23:54.360 --> 00:23:56.840
All I want to do is just write code and publish,


00:23:56.840 --> 00:23:58.680
then sure."


00:23:58.680 --> 00:24:00.960
Again, like I said, there's nothing wrong with that.


00:24:00.960 --> 00:24:03.440
But then if you're in a space where you want to control


00:24:03.440 --> 00:24:05.600
every minute detail of


00:24:05.600 --> 00:24:09.000
the development process and the libraries and how they plug in,


00:24:09.000 --> 00:24:11.560
Maybe you even want to write some of your own libraries,


00:24:11.560 --> 00:24:13.960
to augment some of those additional things that are


00:24:13.960 --> 00:24:16.240
in there and do some of that type of stuff.


00:24:16.240 --> 00:24:17.800
Then maybe again,


00:24:17.800 --> 00:24:20.080
you want to make some different choices.


00:24:20.080 --> 00:24:21.960
>> One thing that just occurred to me,


00:24:21.960 --> 00:24:24.480
I think is pretty interesting as a difference here is,


00:24:24.480 --> 00:24:27.480
you talked about the benefit of all the tooling,


00:24:27.480 --> 00:24:29.000
like Boundary Project,


00:24:29.000 --> 00:24:30.480
Boom, it gives you all these things.


00:24:30.480 --> 00:24:33.060
For people who haven't played with it,


00:24:33.060 --> 00:24:37.280
you can get these database visualizers for,


00:24:37.280 --> 00:24:41.280
and designers for, say, the classes that are backing


00:24:41.280 --> 00:24:45.280
entity framework and things like that.


00:24:45.280 --> 00:24:49.280
The presence of those tools is also


00:24:49.280 --> 00:24:53.280
a limiting factor. Well, you wouldn't choose


00:24:53.280 --> 00:24:57.280
some other database way of working because you're going to lose access to all those


00:24:57.280 --> 00:25:01.280
good data integration tools, whereas in our space,


00:25:01.280 --> 00:25:05.280
we don't have those to nowhere near to the same degree.


00:25:05.280 --> 00:25:07.880
it doesn't matter so much which tools we pick,


00:25:07.880 --> 00:25:11.200
whether or not they fit exactly together in that way,


00:25:11.200 --> 00:25:14.720
because they're not really available.


00:25:14.720 --> 00:25:16.360
So we have more flexibility, I guess,


00:25:16.360 --> 00:25:18.440
to say like, actually, I like the API of this one better,


00:25:18.440 --> 00:25:19.840
the performance story of this one,


00:25:19.840 --> 00:25:23.040
or of course, the maintenance,


00:25:23.040 --> 00:25:25.360
how lively the GitHub project is,


00:25:25.360 --> 00:25:27.480
is better on this one,


00:25:27.480 --> 00:25:30.220
even though it wouldn't traditionally fit exactly.


00:25:30.220 --> 00:25:33.400
- Yeah, I think there's definitely something to be said


00:25:33.400 --> 00:25:38.400
if you walk into a world where the entire stack is unified.


00:25:38.400 --> 00:25:42.800
When I say that, I mean, you know,


00:25:42.800 --> 00:25:46.420
I can go into a place and the programming language runs


00:25:46.420 --> 00:25:48.360
on the operating system that they built,


00:25:48.360 --> 00:25:50.360
that runs in the IDE that they built,


00:25:50.360 --> 00:25:52.200
that runs on the cloud that they built,


00:25:52.200 --> 00:25:55.200
that runs on the DevOps pipeline, security,


00:25:55.200 --> 00:25:56.880
whatever, whatever that they built,


00:25:56.880 --> 00:25:58.640
and it all plugs in together.


00:25:58.640 --> 00:26:00.480
And so with that integration, like you said,


00:26:00.480 --> 00:26:03.360
like you can get a different level of visualization,


00:26:03.360 --> 00:26:05.520
a different level of reporting and metrics


00:26:05.520 --> 00:26:09.880
on all of that types of stuff with a lot less work, right?


00:26:09.880 --> 00:26:12.240
It's not that you can't get it from other places,


00:26:12.240 --> 00:26:14.520
but it's just a little bit more work to get it,


00:26:14.520 --> 00:26:17.320
you know, to kind of put those puzzle pieces together


00:26:17.320 --> 00:26:20.040
to make the world look like how you want it to look.


00:26:20.040 --> 00:26:20.880
But like I'm saying-


00:26:20.880 --> 00:26:23.480
- Every level is like a decision you have to make


00:26:23.480 --> 00:26:26.560
and an integration you have to consider


00:26:26.560 --> 00:26:30.080
as opposed to it just by default clicking together.


00:26:30.080 --> 00:26:31.080
- Right, and like I said,


00:26:31.080 --> 00:26:34.160
just like cloud computing.


00:26:34.160 --> 00:26:36.240
I'm going to bring this up because I have a talk


00:26:36.240 --> 00:26:37.840
where I talk about something I like to call


00:26:37.840 --> 00:26:39.760
like the microservice matrix.


00:26:39.760 --> 00:26:41.400
>> Yeah, before you get into that,


00:26:41.400 --> 00:26:42.680
I do really quickly want to point out.


00:26:42.680 --> 00:26:43.920
Last time you were on the show,


00:26:43.920 --> 00:26:46.040
you were Developer Relations


00:26:46.040 --> 00:26:47.620
on the Azure team at Microsoft,


00:26:47.620 --> 00:26:49.480
and now you're at Stripe.


00:26:49.480 --> 00:26:50.640
>> Now I'm at Stripe.


00:26:50.640 --> 00:26:51.080
>> Right.


00:26:51.080 --> 00:26:52.840
>> We didn't point it out,


00:26:52.840 --> 00:26:54.160
I want to point out that you're


00:26:54.160 --> 00:26:55.920
not actually at Microsoft anymore.


00:26:55.920 --> 00:26:57.400
>> Yeah, I'm not at Microsoft anymore.


00:26:57.400 --> 00:27:00.560
There's no backgrounds baseball happening here.


00:27:00.560 --> 00:27:02.640
I'm not sharing anything that


00:27:02.640 --> 00:27:06.160
I know more about than anyone else at this point.


00:27:06.160 --> 00:27:10.400
Yeah, going back to if you think about the world of microservices,


00:27:10.400 --> 00:27:13.160
because I look at that as everything that we've


00:27:13.160 --> 00:27:16.720
already done just existing on another level.


00:27:16.720 --> 00:27:18.800
I'm using that as an analogy


00:27:18.800 --> 00:27:20.900
when I talk about this microservice matrix,


00:27:20.900 --> 00:27:23.200
because with everything that you do,


00:27:23.200 --> 00:27:25.200
you have to make a choice.


00:27:25.200 --> 00:27:27.480
Like I mentioned before, where am I going to


00:27:27.480 --> 00:27:29.240
store my state, my databases?


00:27:29.240 --> 00:27:31.040
I have to make a choice.


00:27:31.040 --> 00:27:33.400
How am I going to do metrics and monitoring?


00:27:33.400 --> 00:27:34.520
I have to make a choice.


00:27:34.520 --> 00:27:36.120
How do I know where my services are?


00:27:36.120 --> 00:27:39.400
How does my DNS routing situation work?


00:27:39.400 --> 00:27:40.560
I have to make a choice.


00:27:40.560 --> 00:27:42.700
How does Ingress work? I have to make a choice.


00:27:42.700 --> 00:27:44.120
How do I do publish, subscribe?


00:27:44.120 --> 00:27:46.480
I have to choose a thing.


00:27:46.480 --> 00:27:49.360
Now you're sitting down having to make some of


00:27:49.360 --> 00:27:54.040
these decisions about what's the right way for me to compose my app,


00:27:54.040 --> 00:27:56.160
and then also what are the right combinations


00:27:56.160 --> 00:27:58.360
of tools that I'm going to compose it with?


00:27:58.360 --> 00:28:02.140
If we come back now to the level of just talking about Python and .NET,


00:28:02.140 --> 00:28:04.800
again, it's a very similar thing where you can just say,


00:28:04.800 --> 00:28:08.000
"Hey, just give me the menu,


00:28:08.000 --> 00:28:11.280
the GUI, file new block and there's a thing."


00:28:11.280 --> 00:28:15.440
Or I could sit down and I could fine-tune and optimize


00:28:15.440 --> 00:28:19.680
my application to perfection or what we consider to be perfection,


00:28:19.680 --> 00:28:21.720
to run and work and have


00:28:21.720 --> 00:28:25.080
the right integrations of things that I wanted to have.


00:28:25.080 --> 00:28:27.480
Like I'm saying, there's no wrong way.


00:28:27.480 --> 00:28:30.300
It's just a matter of like for your business


00:28:30.300 --> 00:28:31.340
and what you're trying to do,


00:28:31.340 --> 00:28:33.540
like what do you think makes the most sense?


00:28:33.540 --> 00:28:38.180
- Yeah, it certainly is an interesting difference.


00:28:38.180 --> 00:28:43.140
Now I do think there are more opinionated paths,


00:28:43.140 --> 00:28:44.820
we would call them in the Python world,


00:28:44.820 --> 00:28:46.480
that you can choose.


00:28:46.480 --> 00:28:49.700
For example, you could say, and many people do,


00:28:49.700 --> 00:28:51.340
like let me just use Django.


00:28:51.340 --> 00:28:52.180
- Sure.


00:28:52.180 --> 00:28:53.180
- Right, and you choose Django,


00:28:53.180 --> 00:28:57.340
it's very much this sort of holistic click together stack


00:28:57.340 --> 00:28:59.460
that we spoke about, right?


00:28:59.460 --> 00:29:03.020
Like the data access layer is the Django ORM,


00:29:03.020 --> 00:29:04.620
the database is relational,


00:29:04.620 --> 00:29:07.780
you put it in something that could be SQL Server,


00:29:07.780 --> 00:29:11.400
but more likely it's Postgres, there you go.


00:29:11.400 --> 00:29:12.600
- Yeah.


00:29:12.600 --> 00:29:16.820
- Right, but I personally very much appreciate


00:29:16.820 --> 00:29:19.540
the ability to look at all those options and go,


00:29:19.540 --> 00:29:22.980
no, no, for this one I wanna use FastAPI and Beanie


00:29:22.980 --> 00:29:26.520
rather than Django and Django ORM.


00:29:26.520 --> 00:29:30.060
>> That's what I'm saying, depending on what your goals are.


00:29:30.060 --> 00:29:34.340
I know for you, you have your top Python websites and your courses.


00:29:34.340 --> 00:29:36.080
I believe you all have a mobile app too, right?


00:29:36.080 --> 00:29:37.760
>> Yeah, we do. That's actually Xamarin.


00:29:37.760 --> 00:29:39.120
Shout out to the script. It is.


00:29:39.120 --> 00:29:40.680
>> I didn't know that. That's cool.


00:29:40.680 --> 00:29:42.180
>> The APIs are all Python,


00:29:42.180 --> 00:29:45.240
but the front-end mobile app itself is Xamarin.


00:29:45.240 --> 00:29:48.820
>> Is all Xamarin. For your web experiences,


00:29:48.820 --> 00:29:51.240
you're already knowing in your mind what your objectives are.


00:29:51.240 --> 00:29:54.180
You're like, "Okay, I'm going to use this database and


00:29:54.180 --> 00:29:55.660
this caching thing and this thing


00:29:55.660 --> 00:29:59.120
because I need them to work this way."


00:29:59.120 --> 00:30:02.060
Because the thing with having opinions,


00:30:02.060 --> 00:30:03.640
it's always great to have opinions,


00:30:03.640 --> 00:30:06.780
but sometimes someone's opinion


00:30:06.780 --> 00:30:09.580
just doesn't line up with what you're trying to do.


00:30:09.580 --> 00:30:11.320
But then on the other side,


00:30:11.320 --> 00:30:13.460
sometimes there's just too many opinions.


00:30:13.460 --> 00:30:16.620
Now you're like, "Oh man, can I choose this or this or the other?"


00:30:16.620 --> 00:30:19.620
What's the right puzzle piece for me?


00:30:19.860 --> 00:30:24.860
there's opinions and then there's opinions within a context.


00:30:24.860 --> 00:30:25.860
Right?


00:30:25.860 --> 00:30:27.820
And there's a very popular article


00:30:27.820 --> 00:30:29.360
that keeps getting passed around and around.


00:30:29.360 --> 00:30:32.140
And I'm sure I'm somewhat to blame for this is like,


00:30:32.140 --> 00:30:33.340
the title goes something like,


00:30:33.340 --> 00:30:34.860
you're not Google, you're not Facebook,


00:30:34.860 --> 00:30:36.740
you're not LinkedIn, you're not Instagram.


00:30:36.740 --> 00:30:40.860
So subtitle, don't design your software like they do.


00:30:40.860 --> 00:30:41.780
Right?


00:30:41.780 --> 00:30:44.660
And opinions often mean,


00:30:44.660 --> 00:30:47.140
I believe this is how code should be written


00:30:47.140 --> 00:30:49.700
if this is your general use case, right?


00:30:49.700 --> 00:30:53.060
And if your use case is really different from that,


00:30:53.060 --> 00:30:55.240
then those opinions might not just be


00:30:55.240 --> 00:30:57.300
someone else's opinion, they might actually be wrong


00:30:57.300 --> 00:30:59.820
because they were formed for another situation.


00:30:59.820 --> 00:31:02.480
I believe you're having a relational database


00:31:02.480 --> 00:31:05.940
and around 100,000 or fewer users a day.


00:31:05.940 --> 00:31:08.740
But if it's significantly different


00:31:08.740 --> 00:31:09.660
in some other direction,


00:31:09.660 --> 00:31:11.740
then maybe you should make different choices, right?


00:31:11.740 --> 00:31:13.680
And having that flexibility is awesome.


00:31:13.680 --> 00:31:15.580
- Yeah, for sure, for sure.


00:31:15.580 --> 00:31:17.720
And then kind of going back to like,


00:31:17.720 --> 00:31:20.240
where we're talking about a little bit earlier with the tooling.


00:31:20.240 --> 00:31:22.420
Once you've made those choices,


00:31:22.420 --> 00:31:24.900
now you have to make the choice of,


00:31:24.900 --> 00:31:28.660
well, what's the thing that I'm going to build it with?


00:31:28.660 --> 00:31:30.660
Again, on the Microsoft side,


00:31:30.660 --> 00:31:34.460
you have Visual Studio, which is like a kitchen sink of stuff.


00:31:34.460 --> 00:31:36.460
I can look at my databases,


00:31:36.460 --> 00:31:37.460
I can look at my deployments,


00:31:37.460 --> 00:31:39.620
I can build, deploy, debug,


00:31:39.620 --> 00:31:42.060
analyze memory dumps and all these types of things.


00:31:42.060 --> 00:31:44.220
Again, big thing.


00:31:44.220 --> 00:31:46.180
Or on the other side,


00:31:46.180 --> 00:31:49.100
we probably might want to do some more command line tools,


00:31:49.100 --> 00:31:51.260
or we might want to grab a bunch of


00:31:51.260 --> 00:31:53.620
different tools and put them together.


00:31:53.620 --> 00:31:57.740
Again, all depending on what we're trying to do with our use cases.


00:31:57.740 --> 00:32:01.700
I think with that too, what you notice is that the culture


00:32:01.700 --> 00:32:04.980
of either side of those languages is a little bit different.


00:32:04.980 --> 00:32:07.380
I will tell you as a.NET person,


00:32:07.380 --> 00:32:10.260
automatically, it is ASP.NET,


00:32:10.260 --> 00:32:11.780
it is NAD Framework,


00:32:11.780 --> 00:32:14.500
and it is SQL Server automatically.


00:32:14.500 --> 00:32:16.900
I mean, I'm not going to say 100 percent of the people do it,


00:32:16.900 --> 00:32:20.220
but I want to say a lot of people do that.


00:32:20.220 --> 00:32:21.840
That's the default.


00:32:21.840 --> 00:32:23.340
But I'm sure on the Python side,


00:32:23.340 --> 00:32:25.420
the culture is probably different.


00:32:25.420 --> 00:32:27.260
It's probably a little bit of Mongo or Postgres,


00:32:27.260 --> 00:32:29.080
it's probably a little bit of Flask or


00:32:29.080 --> 00:32:30.800
Django and probably now FastAPI


00:32:30.800 --> 00:32:33.260
because that's another popular thing.


00:32:33.260 --> 00:32:36.120
Whatever other tool they put on top of that,


00:32:36.120 --> 00:32:41.200
whether it's PyCharm or VS Code or I know a lot of you people love them.


00:32:41.200 --> 00:32:43.380
I know you've had a lot of them folks on the show.


00:32:43.380 --> 00:32:47.840
It could be that too. But that culture is different.


00:32:47.840 --> 00:32:53.040
The expectations about how software is built is going to just be totally different.


00:32:53.040 --> 00:32:55.660
>> Yeah. When I opened the segment,


00:32:55.660 --> 00:32:58.540
I said there were two things that were closely tied together.


00:32:58.540 --> 00:33:03.100
We covered the one. I think a very similar related parallel here


00:33:03.100 --> 00:33:06.820
is developers often in the Microsoft space,


00:33:06.820 --> 00:33:10.580
my experience I've had interacting with them is like,


00:33:10.580 --> 00:33:17.580
If it's not recommended by Microsoft or the .NET team or whatever, I don't want it.


00:33:17.580 --> 00:33:27.580
If it's not the product story or the company story that you should use this framework or that,


00:33:27.580 --> 00:33:32.580
then even if the other one might be better, might not, they just don't want to consider it.


00:33:32.580 --> 00:33:35.580
Which I think is an interesting angle.


00:33:35.580 --> 00:33:38.580
It's very much at odds with that you have a thousand choices.


00:33:38.580 --> 00:33:42.820
>> Yeah. For me as a.NET developer,


00:33:42.820 --> 00:33:46.220
before and during and now after Microsoft,


00:33:46.220 --> 00:33:50.500
that's one of those things that's such a hard habit to break.


00:33:50.500 --> 00:33:52.700
>> Yeah. Do you agree with my assessment first?


00:33:52.700 --> 00:33:55.260
>> I agree with your assessment 100 percent for sure.


00:33:55.260 --> 00:33:58.700
I think it's something that particularly when you're


00:33:58.700 --> 00:34:02.140
living in an open-source development worlds,


00:34:02.140 --> 00:34:04.340
all of us or majority of


00:34:04.340 --> 00:34:07.260
us languages and tooling and stuff are open-source.


00:34:07.260 --> 00:34:10.220
We have to be able to,


00:34:10.220 --> 00:34:13.220
developers still have to develop.


00:34:13.220 --> 00:34:19.220
You can't really expect things to always be given to you all the time.


00:34:19.220 --> 00:34:21.140
When I say that, I mean,


00:34:21.140 --> 00:34:25.860
just because Company X doesn't create a thing for you,


00:34:25.860 --> 00:34:28.900
doesn't mean that there's not a ton of other great options available.


00:34:28.900 --> 00:34:34.580
But again, the culture or the way that .NET developers have been raised,


00:34:34.580 --> 00:34:38.140
If you think about them as evolving over time.


00:34:38.140 --> 00:34:39.380
>> Growing up through their career, yeah.


00:34:39.380 --> 00:34:41.060
>> Growing up through their time, the way that they've been


00:34:41.060 --> 00:34:44.700
raised is that I'm going to open Visual Studio on Windows,


00:34:44.700 --> 00:34:47.700
and whatever's in the box, I'm going to use that.


00:34:47.700 --> 00:34:51.840
I might be one or two other things that I'll use,


00:34:51.840 --> 00:34:53.780
but those things are usually recommended.


00:34:53.780 --> 00:34:56.160
If you think about like JSON.NET as an example,


00:34:56.160 --> 00:35:00.500
those things are usually recommended from the box,


00:35:00.500 --> 00:35:02.300
and then now I'm going to use that.


00:35:02.300 --> 00:35:03.780
>> They might actually be third-party,


00:35:03.780 --> 00:35:05.740
but they end up getting installed anyway.


00:35:05.740 --> 00:35:06.380
>> Exactly.


00:35:06.380 --> 00:35:08.900
>> Like a pip dependency effectively.


00:35:08.900 --> 00:35:10.580
>> Like a pip dependency or something like that.


00:35:10.580 --> 00:35:14.540
I don't remember back when ASP.NET MVC was a thing,


00:35:14.540 --> 00:35:15.980
like the first version of it,


00:35:15.980 --> 00:35:17.820
like it shipped with jQuery.


00:35:17.820 --> 00:35:21.020
Anytime you did file new project MVC,


00:35:21.020 --> 00:35:22.780
you automatically you had jQuery,


00:35:22.780 --> 00:35:24.500
you had jQuery validation.


00:35:24.500 --> 00:35:25.540
I think there was a couple of


00:35:25.540 --> 00:35:26.540
other libraries that were in there.


00:35:26.540 --> 00:35:28.100
I think jQuery UI maybe might have


00:35:28.100 --> 00:35:30.620
been in there or something else like that.


00:35:30.620 --> 00:35:32.660
But again, these are the things that


00:35:32.660 --> 00:35:35.860
just come out of the box with that style.


00:35:35.860 --> 00:35:38.940
I think what happens with that now is that,


00:35:38.940 --> 00:35:40.700
and again, this is my opinion,


00:35:40.700 --> 00:35:43.340
I think it hampers innovation.


00:35:43.340 --> 00:35:45.740
Because now when I look at the Python side,


00:35:45.740 --> 00:35:47.700
and we joke about, "Oh my gosh,


00:35:47.700 --> 00:35:49.220
there's a new Python web framework


00:35:49.220 --> 00:35:52.100
like every other year or every year or whatever the case is."


00:35:52.100 --> 00:35:54.300
But I can also look at that and seeing, wow,


00:35:54.300 --> 00:35:55.820
people are so invested in


00:35:55.820 --> 00:35:59.100
this ecosystem that they're constantly trying to make it better,


00:35:59.100 --> 00:36:01.780
and they're constantly trying to pool resources


00:36:01.780 --> 00:36:06.420
together to create new experiences to improve developer productivity.


00:36:06.420 --> 00:36:08.320
Not to say that people are not


00:36:08.320 --> 00:36:09.780
trying to do that on the Microsoft side,


00:36:09.780 --> 00:36:12.100
but what I'm saying is that if it's not in the box,


00:36:12.100 --> 00:36:13.740
people are like, "I'm not messing with it."


00:36:13.740 --> 00:36:15.700
>> Sure. The realm of possibility is wider.


00:36:15.700 --> 00:36:17.780
>> We'll just make it. We'll just make it.


00:36:17.780 --> 00:36:19.420
Well, we'll make it together, we'll open source it.


00:36:19.420 --> 00:36:21.100
If people like it, now we'll start


00:36:21.100 --> 00:36:23.380
a community around it and now it's a thing.


00:36:23.380 --> 00:36:25.500
Again, like PaaS API and


00:36:25.500 --> 00:36:29.780
Pydantic and some of those other things that have come up recently.


00:36:29.780 --> 00:36:30.620
- Absolutely.


00:36:30.620 --> 00:36:33.560
Okay, so one of the things I did want to talk to you


00:36:33.560 --> 00:36:35.800
about here, I think that's really interesting


00:36:35.800 --> 00:36:39.720
and FastAPI is a good example of it.


00:36:39.720 --> 00:36:42.600
FastAPI basically exists because as you mentioned,


00:36:42.600 --> 00:36:46.040
Pydantic and some of the new language features


00:36:46.040 --> 00:36:49.880
of Python, W567,


00:36:49.880 --> 00:36:55.760
you know, the somewhat enforced typing information,


00:36:55.760 --> 00:36:59.320
data classes, those kinds of things,


00:36:59.320 --> 00:37:06.360
async and await. So these are now possible. These are these new experiences that can be


00:37:06.360 --> 00:37:13.160
created from the language. But one of the really interesting things about languages,


00:37:13.160 --> 00:37:22.360
places like C#, or we could just as well say Swift and Apple or other languages, is there's a team of


00:37:22.360 --> 00:37:26.520
of people whose job it is to work on the language,


00:37:26.520 --> 00:37:30.080
which I think is really interesting.


00:37:30.080 --> 00:37:31.440
It has some very good positives.


00:37:31.440 --> 00:37:33.640
Like there's people who are constantly focused on it.


00:37:33.640 --> 00:37:34.560
I mean, we have the core devs,


00:37:34.560 --> 00:37:36.240
but they're kind of more broadly focused.


00:37:36.240 --> 00:37:38.720
And sometimes that means the language,


00:37:38.720 --> 00:37:40.400
but in the .NET space,


00:37:40.400 --> 00:37:43.400
that means the language is always changing.


00:37:43.400 --> 00:37:45.360
Maybe if it doesn't even need to.


00:37:45.360 --> 00:37:47.880
That's my statement.


00:37:47.880 --> 00:37:49.160
You don't have to stand behind that if you don't want,


00:37:49.160 --> 00:37:52.160
but I feel like there's people who are working there


00:37:52.160 --> 00:37:54.360
Every year there's a new version of the language,


00:37:54.360 --> 00:37:56.160
and if there's no new keywords,


00:37:56.160 --> 00:37:58.160
then what's their job about?


00:37:58.160 --> 00:38:01.660
>> Yeah. For folks that don't know,


00:38:01.660 --> 00:38:08.560
.NET as an entire product and family of things,


00:38:08.560 --> 00:38:10.640
it's gone through changes over time.


00:38:10.640 --> 00:38:12.680
When Michael and I first started doing .NET,


00:38:12.680 --> 00:38:14.120
it was .NET Framework.


00:38:14.120 --> 00:38:17.800
Then over time, it became like early 2000s.


00:38:17.800 --> 00:38:18.640
>> Yeah, for sure.


00:38:18.640 --> 00:38:21.200
>> Then it evolved into what today is known as


00:38:21.200 --> 00:38:22.920
like .NET Core.


00:38:22.920 --> 00:38:30.760
I think that .NET Core went from 1.1 to 3.1 or something like that.


00:38:30.760 --> 00:38:34.100
Then after that, we skipped a number, we skipped four.


00:38:34.100 --> 00:38:36.180
I don't know why we skipped four, but we skipped four,


00:38:36.180 --> 00:38:37.900
and then we went to .NET 5,


00:38:37.900 --> 00:38:40.900
not .NET Core 5, but just .NET.


00:38:40.900 --> 00:38:42.560
We had .NET Framework,


00:38:42.560 --> 00:38:43.940
we had .NET Core,


00:38:43.940 --> 00:38:45.620
and now we just have .NET,


00:38:45.620 --> 00:38:49.100
nothing else after it, but the number, .NET 5.


00:38:49.100 --> 00:38:53.380
and what's happened over time now with.NET 5, 6,


00:38:53.380 --> 00:38:56.980
7 and until they decided to call it something else,


00:38:56.980 --> 00:38:58.820
what's happened right now is that it's


00:38:58.820 --> 00:39:01.540
switched to this yearly release cycle.


00:39:01.540 --> 00:39:04.820
I'll be honest with you, I don't know how I feel about it yet.


00:39:04.820 --> 00:39:11.740
We're looking at.NET 7 coming up in November.


00:39:11.740 --> 00:39:13.860
It's really only been 5 and 6.


00:39:13.860 --> 00:39:15.100
We've had two versions that have


00:39:15.100 --> 00:39:16.840
been on this yearly release cycle.


00:39:16.840 --> 00:39:18.220
I don't think that's enough time for me to


00:39:18.220 --> 00:39:21.700
like feel like, you know, see how I feel about it.


00:39:21.700 --> 00:39:23.380
- See what the actual effects of that are for sure.


00:39:23.380 --> 00:39:26.060
- But you know, my initial thoughts are, you know,


00:39:26.060 --> 00:39:28.460
I don't think we really need to release that quickly.


00:39:28.460 --> 00:39:30.540
Cause like you said, you know,


00:39:30.540 --> 00:39:34.660
one, how many people are going to update every year


00:39:34.660 --> 00:39:36.660
or even every two years?


00:39:36.660 --> 00:39:37.480
You know what I mean?


00:39:37.480 --> 00:39:40.000
And then as you're putting out these new features,


00:39:40.000 --> 00:39:43.500
I often have to think about, well, who is this for?


00:39:43.500 --> 00:39:44.340
Right?


00:39:44.340 --> 00:39:46.980
Cause if one of the goals of your language is adoption


00:39:46.980 --> 00:39:52.420
or if it's growth or if it's how do I bring new people in by adding new features?


00:39:52.420 --> 00:39:57.920
I can tell you, regardless of how many features you add to make it easier,


00:39:57.920 --> 00:39:59.560
when they go to work,


00:39:59.560 --> 00:40:03.340
they're going to end up in a code base that's going to be 10 years old.


00:40:03.340 --> 00:40:06.220
>> Three flavors of Lambda expression.


00:40:06.220 --> 00:40:09.060
>> It's going to look different and it's going to feel different,


00:40:09.060 --> 00:40:15.220
and their experience is not going to be Hello World or a to-do application.


00:40:15.220 --> 00:40:20.220
and so now the minds, the mental efforts,


00:40:20.220 --> 00:40:24.540
so now you have to exist in multiple worlds.


00:40:24.540 --> 00:40:26.300
Oh, here's the new cool stuff,


00:40:26.300 --> 00:40:28.220
and if you're lucky, maybe you start an accompaniment


00:40:28.220 --> 00:40:29.460
that's doing the new cool stuff,


00:40:29.460 --> 00:40:33.660
or here's the framework stuff, or the older tooling,


00:40:33.660 --> 00:40:38.540
or here's this older version that's still kind of new,


00:40:38.540 --> 00:40:43.540
but still doesn't have the things from six or seven.


00:40:43.540 --> 00:40:44.940
You know what I mean?


00:40:44.940 --> 00:40:51.480
And it's like, well, if I am considering myself a language X developer, how many of these


00:40:51.480 --> 00:40:54.300
new language features do I need to know?


00:40:54.300 --> 00:40:55.300
It's a really good question.


00:40:55.300 --> 00:41:01.820
I mean, let me just give a little bit of background for people who obviously most people listening


00:41:01.820 --> 00:41:07.260
probably don't work in C#, but C# like Python has a way to express properties.


00:41:07.260 --> 00:41:11.420
Honestly, C#'s way is way better than Python's.


00:41:11.420 --> 00:41:13.460
there is a way to do lambda expressions


00:41:13.460 --> 00:41:16.080
that's very similar across both languages.


00:41:16.080 --> 00:41:18.760
But if you look on the C#,


00:41:18.760 --> 00:41:20.480
how many ways are there to do properties?


00:41:20.480 --> 00:41:21.820
There's at least four.


00:41:21.820 --> 00:41:25.280
There may be five different pieces of language syntax


00:41:25.280 --> 00:41:28.280
to accomplish effectively the same thing.


00:41:28.280 --> 00:41:31.420
And there are benefits to argue on some of the newer ones,


00:41:31.420 --> 00:41:34.060
but so much so that there needs to be a fourth,


00:41:34.060 --> 00:41:35.200
not just three ways to do it.


00:41:35.200 --> 00:41:36.040
You know what I mean?


00:41:36.040 --> 00:41:38.220
Like there's a lot of overhead.


00:41:38.220 --> 00:41:41.360
And my feeling is that the language looks that way


00:41:41.360 --> 00:41:44.080
because it's a product and there's a team whose job it is


00:41:44.080 --> 00:41:46.860
to continue to work on that product.


00:41:46.860 --> 00:41:49.760
Whereas like in Python, if it doesn't make sense to add it,


00:41:49.760 --> 00:41:53.160
there's nobody who's yearly review doesn't look so good


00:41:53.160 --> 00:41:57.520
'cause they didn't add a new way to do properties.


00:41:57.520 --> 00:41:58.680
- Yeah, and I agree with you.


00:41:58.680 --> 00:42:00.960
I think that's another thing that I feel like


00:42:00.960 --> 00:42:04.840
I've really appreciated about the Python ecosystem.


00:42:04.840 --> 00:42:08.520
'Cause Python also has like a scheduled cadence of release.


00:42:08.520 --> 00:42:10.480
- Yeah, and it's yearly as well now.


00:42:10.480 --> 00:42:12.380
>> Yeah. It's not like Python hasn't updated


00:42:12.380 --> 00:42:14.740
the language in six years or whatever the case is.


00:42:14.740 --> 00:42:16.640
Like you said, there's a single weight and


00:42:16.640 --> 00:42:19.500
there's new operators and things of that nature.


00:42:19.500 --> 00:42:24.160
But I always find the additions to the language,


00:42:24.160 --> 00:42:26.120
I think with the exception of maybe type hints,


00:42:26.120 --> 00:42:28.260
I think that might be a little bit more in


00:42:28.260 --> 00:42:30.980
your face for a lot of folks if they decide to use it.


00:42:30.980 --> 00:42:33.500
But if you look at some of the other language features,


00:42:33.500 --> 00:42:35.900
a lot of the times it happens in


00:42:35.900 --> 00:42:39.220
the core library and not so much so on the language surface.


00:42:39.220 --> 00:42:41.260
and then the few that happen in the language service.


00:42:41.260 --> 00:42:43.380
>> Or some package, but you don't have to know about it to consume it,


00:42:43.380 --> 00:42:44.420
something like that.


00:42:44.420 --> 00:42:45.900
>> Then the things that happen on


00:42:45.900 --> 00:42:48.300
the language service are usually very subtle.


00:42:48.300 --> 00:42:51.660
We'll have a whole version and it might add one operator.


00:42:51.660 --> 00:42:55.100
We might add, again, a sink away.


00:42:55.100 --> 00:42:57.100
I mean, it's not really one keyword,


00:42:57.100 --> 00:42:58.500
it's one keyword, it's one feature.


00:42:58.500 --> 00:43:00.820
But I've added this one big feature,


00:43:00.820 --> 00:43:04.600
but then there's tons of other little fixes in the library and not


00:43:04.600 --> 00:43:10.200
necessarily what the syntactic structure of my application looks like.


00:43:10.200 --> 00:43:13.520
I feel like if you're on modern Python,


00:43:13.520 --> 00:43:14.680
I'm going to use a term you use,


00:43:14.680 --> 00:43:20.280
if we're on modern Python and you're 3.4 or 5 and above,


00:43:20.280 --> 00:43:23.520
I'm sure when you hit Python 3.9,


00:43:23.520 --> 00:43:25.360
it's going to look the same, it's going to feel the same,


00:43:25.360 --> 00:43:26.360
it's going to work the same.


00:43:26.360 --> 00:43:27.600
Might be some extra things,


00:43:27.600 --> 00:43:30.160
but you could probably ignore it if you don't need it.


00:43:30.160 --> 00:43:32.160
But then you should be able to be


00:43:32.160 --> 00:43:35.280
functional and not have to think too much about like,


00:43:35.280 --> 00:43:39.600
"Oh, okay. How do I plug this thing into this thing and then,


00:43:39.600 --> 00:43:43.400
oh, my thing is not compiling anymore because I don't have the old,


00:43:43.400 --> 00:43:45.280
I don't have the new version even though I'm not using


00:43:45.280 --> 00:43:48.680
the new version features and all of that type of stuff."


00:43:48.680 --> 00:43:51.360
>> Yeah. It's interesting.


00:43:51.360 --> 00:43:54.400
I think that we use language as an example,


00:43:54.400 --> 00:43:58.240
but I think that influence happens across different many things,


00:43:58.240 --> 00:43:59.720
across the web frameworks,


00:43:59.720 --> 00:44:02.640
across the database, across the tooling and so on.


00:44:02.640 --> 00:44:04.920
All right, a couple of thoughts from the audience here.


00:44:04.920 --> 00:44:05.760
- Oh yeah, we have an audience.


00:44:05.760 --> 00:44:08.440
- Mr. Hypermatic says, "Hello, looking sharp."


00:44:08.440 --> 00:44:09.880
See what I did there?


00:44:09.880 --> 00:44:11.280
Loving the shirt.


00:44:11.280 --> 00:44:15.440
And then Christopher Tyler has a more actual question here.


00:44:15.440 --> 00:44:18.080
Are the contributors to .NET primarily people


00:44:18.080 --> 00:44:19.360
who work at Microsoft?


00:44:19.360 --> 00:44:20.520
Is that the same for C#?


00:44:20.520 --> 00:44:23.840
Like, what's the open source story on that?


00:44:23.840 --> 00:44:26.000
We know in Python, like, there's the core devs


00:44:26.000 --> 00:44:29.240
and then there's the sort of everyone else.


00:44:29.240 --> 00:44:32.760
layering, but that's not nearly as extreme as employee, not employee.


00:44:32.760 --> 00:44:38.680
Yeah, I can't talk to the percentages in terms of like what percentages is


00:44:38.680 --> 00:44:40.320
Microsoft and what percentage is not.


00:44:40.320 --> 00:44:43.560
But I can tell you that, you know, now that it is open source and it's on


00:44:43.560 --> 00:44:46.880
GitHub, I mean, there's a tremendous amount of folks that do not work in the


00:44:46.880 --> 00:44:52.400
company that not only contribute fixes, but also submit proposals for new


00:44:52.400 --> 00:44:54.320
features and like all these types of things.


00:44:54.320 --> 00:44:57.160
So I think if you go to, let me see if I could open it up.


00:44:57.200 --> 00:45:00.500
I think if you go to GitHub/.net,


00:45:00.500 --> 00:45:03.280
and I think if you go to.net/csharp,


00:45:03.280 --> 00:45:06.520
I'm not mistaken. No, it's not.csharp.


00:45:06.520 --> 00:45:09.920
It's a language proposal thing.


00:45:09.920 --> 00:45:12.000
I don't remember what it's called.


00:45:12.000 --> 00:45:15.400
>> Right there, maybe.


00:45:15.400 --> 00:45:18.640
>> It might be in the runtime. There's a repo in here


00:45:18.640 --> 00:45:24.000
that you can essentially submit proposals.


00:45:24.000 --> 00:45:26.820
Whenever there's a new version of C# that's coming out,


00:45:26.820 --> 00:45:28.440
or if you want to know,


00:45:28.440 --> 00:45:31.740
"Okay, well, maybe we should change how interfaces work,"


00:45:31.740 --> 00:45:34.600
or how do we add records or whatever cases.


00:45:34.600 --> 00:45:36.400
There's a repo in here that you can do that.


00:45:36.400 --> 00:45:37.960
I don't remember what it is at the time.


00:45:37.960 --> 00:45:40.040
I probably should.


00:45:40.040 --> 00:45:44.640
But what I'm saying is that as a person that does not work in


00:45:44.640 --> 00:45:47.400
the company you can have that level of influence,


00:45:47.400 --> 00:45:49.240
and you can have a whole discussion about,


00:45:49.240 --> 00:45:51.280
"Hey, this is why I think this is a great feature.


00:45:51.280 --> 00:45:54.080
This is how I think it should look and behave,


00:45:54.080 --> 00:45:56.120
and this is how I think it would work with some of


00:45:56.120 --> 00:45:59.180
the existing features that are already in the language today.


00:45:59.180 --> 00:46:02.320
I love that because that means that now,


00:46:02.320 --> 00:46:04.400
you don't work there, I don't work there,


00:46:04.400 --> 00:46:05.520
we all don't work there,


00:46:05.520 --> 00:46:09.200
but we can have a very open and honest discussion in the public,


00:46:09.200 --> 00:46:11.600
because again, it's on GitHub unless they delete it.


00:46:11.600 --> 00:46:13.480
But they don't do that.


00:46:13.480 --> 00:46:17.000
>> It's not like they own GitHub. Wait a minute.


00:46:17.000 --> 00:46:19.680
>> Well, you see what I'm saying. You can have


00:46:19.680 --> 00:46:22.080
that open discussion about these are


00:46:22.080 --> 00:46:25.320
some of the things I think make a lot of sense.


00:46:25.320 --> 00:46:27.960
>> Yeah, and I think that that's really good.


00:46:27.960 --> 00:46:30.160
It's certainly a big change that's


00:46:30.160 --> 00:46:32.880
happened over the last five years there.


00:46:32.880 --> 00:46:35.960
>> I found it. It's .NET has C# lang.


00:46:35.960 --> 00:46:39.440
It's not just C#, it's C# lang.


00:46:39.440 --> 00:46:41.260
Yeah. If you go there,


00:46:41.260 --> 00:46:42.720
you should be able to, again,


00:46:42.720 --> 00:46:43.840
like the language is the same.


00:46:43.840 --> 00:46:45.840
>> Yeah. The active C# language feature


00:46:45.840 --> 00:46:49.500
proposals and meetings and yeah, interesting.


00:46:49.500 --> 00:46:51.680
>> Yeah. Some of those meetings,


00:46:51.680 --> 00:46:53.440
they're public and they're online.


00:46:53.440 --> 00:46:58.160
I know Imo is one of the folks that work on C# in the runtime.


00:46:58.160 --> 00:47:03.000
They do API reviews and all these types of things, live stream it.


00:47:03.000 --> 00:47:05.480
I don't know if you've ever sat down in an API review,


00:47:05.480 --> 00:47:10.040
it's not the most page turning thing to sit down and watch sometimes.


00:47:10.040 --> 00:47:11.300
>> But you could if you want.


00:47:11.300 --> 00:47:13.520
>> But if you wanted to, if you're interested in that,


00:47:13.520 --> 00:47:16.040
if you're interested in language design and compilers


00:47:16.040 --> 00:47:18.840
and API surface design and those types of things,


00:47:18.840 --> 00:47:21.300
I think those are great things to do.


00:47:21.300 --> 00:47:25.300
Because I honestly can't think of any other ecosystem that really does that


00:47:25.300 --> 00:47:31.060
from the perspective of like reviewing the actual API in the public, which I think is a great thing.


00:47:31.060 --> 00:47:38.020
Yeah, one of the things that's interesting about in the public is I try to listen to all sorts of


00:47:38.020 --> 00:47:44.820
different podcasts and try to keep my finger on the pulse of sort of where technology companies and


00:47:44.820 --> 00:47:50.180
programming languages and stuff are going. So I listen to some Apple podcasts, some Microsoft


00:47:50.180 --> 00:47:56.900
podcast and of course Python podcast. One of the things I find interesting is when you hear the


00:47:56.900 --> 00:48:03.060
Apple podcast people talk, it's always about speculation and rumors and there was this leak


00:48:03.060 --> 00:48:07.380
and there's this thing and what will we get. You hear the Microsoft people talk and like,


00:48:07.380 --> 00:48:11.060
oh there's a hint of this code word, this project and I think this is happening.


00:48:13.140 --> 00:48:20.820
that's absent in the Python world, right? There's none of this like sort of fortune-telling


00:48:20.820 --> 00:48:26.580
surprise of what's going on. I think that's also a big thing that people coming from


00:48:26.580 --> 00:48:35.380
either the .NET or the sort of Swift space over to Python is that we know really far in advance


00:48:35.380 --> 00:48:42.100
what's coming and what's not. And the more of the fortune-telling side happens to land on,


00:48:42.100 --> 00:48:45.300
well, of these thousand flowers that represent web frameworks,


00:48:45.300 --> 00:48:48.420
which one do you think is going to continue to gain popularity?


00:48:48.420 --> 00:48:52.580
Right? In that sense, that's a pretty big difference of the ecosystems.


00:48:52.580 --> 00:48:56.820
Yeah, I think it kind of goes back to what we were talking about before, right? In terms of culture,


00:48:56.820 --> 00:49:01.060
right? Like the culture of Python has always been like an open project that we all kind of


00:49:01.060 --> 00:49:07.300
work on together versus, okay, here's a product from Apple or Microsoft. And, you know, I'll date


00:49:07.300 --> 00:49:13.060
myself a little bit like I remember when you used to have to wait until like magazines came out


00:49:13.060 --> 00:49:17.700
to like learn about like beta features that have like a CD in the back. Yeah, yeah, yeah. You know,


00:49:17.700 --> 00:49:21.060
you might go to a conference or I don't know go I don't know Barnes and Noble or whatever.


00:49:21.060 --> 00:49:26.340
Macworld or MSDN or any of these things. Yeah, right. Like there'll be CDs in the back of


00:49:26.340 --> 00:49:33.060
magazines. And that's how a lot of developers back whenever used to be like, oh, okay, this is what's


00:49:33.060 --> 00:49:35.660
what's coming out, and you'll read about it, right?


00:49:35.660 --> 00:49:37.440
That there wasn't like a YouTube,


00:49:37.440 --> 00:49:40.520
like YouTube wasn't a thing for like developer videos


00:49:40.520 --> 00:49:43.140
and live streaming, all these things that we do now


00:49:43.140 --> 00:49:45.480
where we can get more immediate feedback.


00:49:45.480 --> 00:49:48.320
You know, it was, you know, the magazine's gonna go out,


00:49:48.320 --> 00:49:49.160
but then think about it,


00:49:49.160 --> 00:49:51.900
like how long does it take to print the magazine,


00:49:51.900 --> 00:49:53.540
press the CD and put it out?


00:49:53.540 --> 00:49:55.760
Like how many things have changed in the product?


00:49:55.760 --> 00:49:58.880
- Right, and how far back is the editorial schedule


00:49:58.880 --> 00:50:01.600
versus the writing versus, that's months.


00:50:01.600 --> 00:50:04.760
>> It could be months. By the time you get that CD,


00:50:04.760 --> 00:50:07.900
what's actually in the products on that day


00:50:07.900 --> 00:50:11.320
might be like two months difference.


00:50:11.320 --> 00:50:13.880
You could change all kinds of stuff.


00:50:13.880 --> 00:50:18.180
But what I love again about the culture of where Python has started,


00:50:18.180 --> 00:50:20.780
the feedback mechanism is so much


00:50:20.780 --> 00:50:23.880
faster and it's been like that by default.


00:50:23.880 --> 00:50:27.800
We're talking about.NET and Microsoft,


00:50:27.800 --> 00:50:28.900
like you said, it could be Swift,


00:50:28.900 --> 00:50:30.920
it could have been Java or whatever the case is.


00:50:30.920 --> 00:50:33.440
Now, as these things become open source,


00:50:33.440 --> 00:50:35.080
now they're understanding, "Okay,


00:50:35.080 --> 00:50:37.200
well, let's shorten the feedback mechanism.


00:50:37.200 --> 00:50:40.640
Let's get more immediate responses on things.


00:50:40.640 --> 00:50:43.460
Let's allow folks to download them and try them out.


00:50:43.460 --> 00:50:45.320
Let's have students that are doing


00:50:45.320 --> 00:50:48.020
language design and programming language theory,


00:50:48.020 --> 00:50:52.200
try our bits out and work with us and talk about like,


00:50:52.200 --> 00:50:54.240
"Oh, okay. Well, I learned this in class.


00:50:54.240 --> 00:50:56.320
Now I'm seeing it over here. I understand how this works.


00:50:56.320 --> 00:50:58.800
Let's collaborate a little bit closely together."


00:50:58.800 --> 00:51:03.740
- Yeah, it's certainly is a different way of working on it.


00:51:03.740 --> 00:51:06.640
You don't have to wait until the one thing


00:51:06.640 --> 00:51:08.120
has been released.


00:51:08.120 --> 00:51:11.800
I was contacted by a guy who was interested


00:51:11.800 --> 00:51:15.980
in making some proposal around APIs in Python


00:51:15.980 --> 00:51:19.720
and said, here, I want to propose this PEP,


00:51:19.720 --> 00:51:24.720
this way of changing Python officially for a new API.


00:51:24.720 --> 00:51:27.280
What do you think about this proposal?


00:51:27.280 --> 00:51:29.320
well, this is cool, but really,


00:51:29.320 --> 00:51:31.180
I think the best way to do it would be


00:51:31.180 --> 00:51:34.320
just make a package that accomplishes the same thing,


00:51:34.320 --> 00:51:35.860
show that there's traction around it,


00:51:35.860 --> 00:51:38.100
and then you could talk about bringing it back in


00:51:38.100 --> 00:51:40.800
and sort of like grow it up through the community.


00:51:40.800 --> 00:51:43.740
And if it shows enough value,


00:51:43.740 --> 00:51:46.760
then all of a sudden you should have this conversation


00:51:46.760 --> 00:51:49.420
about should it be officially a part of the thing,


00:51:49.420 --> 00:51:52.680
which is almost the reverse of what you're saying.


00:51:52.680 --> 00:51:55.620
- Yeah, again, the thing about projects and products, right?


00:51:55.620 --> 00:51:57.760
Like when you have a product,


00:51:57.760 --> 00:51:59.440
I'm gonna assume you probably have a PM


00:51:59.440 --> 00:52:01.800
and your PM is probably gonna do user research.


00:52:01.800 --> 00:52:03.760
- I bet your PM has a PM.


00:52:03.760 --> 00:52:05.200
- Your PM probably has a PM, right?


00:52:05.200 --> 00:52:07.160
To manage all the other PMs, right?


00:52:07.160 --> 00:52:08.240
But what I'm saying is that like,


00:52:08.240 --> 00:52:11.980
when you're a product, you have resources financially


00:52:11.980 --> 00:52:13.380
to be able to do user studies


00:52:13.380 --> 00:52:15.960
and talk to customers directly and set up meetings


00:52:15.960 --> 00:52:18.920
and gather analytics and like all of these


00:52:18.920 --> 00:52:22.280
really cool things, which is great that you could do that.


00:52:22.280 --> 00:52:24.920
But when you're a free open source projects,


00:52:24.920 --> 00:52:27.580
like your resources, your community.


00:52:27.580 --> 00:52:33.440
Like you said, sometimes you just have to build up that culture of,


00:52:33.440 --> 00:52:37.500
"Hey, we're going to release a new version to do switch statements in


00:52:37.500 --> 00:52:40.780
Python or pattern matching or whatever the case is."


00:52:40.780 --> 00:52:41.580
>> Yeah, exactly.


00:52:41.580 --> 00:52:43.880
>> Let's make it a library first and


00:52:43.880 --> 00:52:46.460
evolve it into something a little bit more substantial.


00:52:46.460 --> 00:52:49.180
If people are like, "Yo, we love this."


00:52:49.180 --> 00:52:51.360
Maybe now that can become a feature.


00:52:51.360 --> 00:52:54.100
But the downside of that being, again,


00:52:54.100 --> 00:52:58.560
we don't, you know, there's no money engine behind of it.


00:52:58.560 --> 00:52:59.700
That might take a little while.


00:52:59.700 --> 00:53:02.140
That might take like two or three or four versions


00:53:02.140 --> 00:53:03.340
before that actually happens.


00:53:03.340 --> 00:53:08.340
- Or it might never happen if no one cares enough, right?


00:53:08.340 --> 00:53:10.900
Someone who's actually a contributor to the project


00:53:10.900 --> 00:53:12.620
doesn't really, you know, they don't care enough,


00:53:12.620 --> 00:53:16.060
but somebody who's using it, they might really care,


00:53:16.060 --> 00:53:17.340
but it's not gonna get there


00:53:17.340 --> 00:53:18.900
'cause there's sort of a mismatch


00:53:18.900 --> 00:53:21.180
and capability of changing it.


00:53:21.180 --> 00:53:22.580
You know, I think one of the big things


00:53:22.580 --> 00:53:25.580
that's changed recently for us over in Python


00:53:25.580 --> 00:53:28.100
is that we've had this thing called


00:53:28.100 --> 00:53:33.100
the developer in residence, which Microsoft, Google,


00:53:33.100 --> 00:53:36.780
I think also Facebook, should I call them meta?


00:53:36.780 --> 00:53:39.980
I think those three groups, hopefully that's right


00:53:39.980 --> 00:53:42.620
and exhaustive, have contributed a bunch of money


00:53:42.620 --> 00:53:45.140
through sponsorships to actually fund one,


00:53:45.140 --> 00:53:48.100
or currently one, but possibly more than one person


00:53:48.100 --> 00:53:52.540
whose job it is to just sort of work on Python


00:53:52.540 --> 00:53:54.420
around all the rough edges.


00:53:54.420 --> 00:53:56.300
And that might sound like the language rough edges,


00:53:56.300 --> 00:53:57.420
but what I mean is like,


00:53:57.420 --> 00:54:00.780
people are submitting PRs or feature requests


00:54:00.780 --> 00:54:02.980
and nobody has time to really review the PR,


00:54:02.980 --> 00:54:07.100
like sort of almost project management plus development


00:54:07.100 --> 00:54:09.020
to just kind of like be the glue


00:54:09.020 --> 00:54:12.060
that keeps the community working together.


00:54:12.060 --> 00:54:14.100
And I think that that's actually making a big difference.


00:54:14.100 --> 00:54:17.500
That brings it a little bit closer to these things.


00:54:17.500 --> 00:54:19.700
There's somebody whose kind of job it is


00:54:19.700 --> 00:54:21.860
to bring these features in.


00:54:21.860 --> 00:54:24.540
- Yeah, when you think about, again,


00:54:24.540 --> 00:54:28.360
a project evolving into something really substantial,


00:54:28.360 --> 00:54:29.700
right, like, and I look at Python


00:54:29.700 --> 00:54:32.820
as an extremely substantial project,


00:54:32.820 --> 00:54:35.820
at some point, like, you're gonna need support, right?


00:54:35.820 --> 00:54:37.820
Because now there's like a lot of things


00:54:37.820 --> 00:54:40.060
that need to get reviewed or fixed


00:54:40.060 --> 00:54:41.740
or discussed and talked about,


00:54:41.740 --> 00:54:43.900
and like, whose time is that, right?


00:54:43.900 --> 00:54:45.580
Like, who's gonna do that, right?


00:54:45.580 --> 00:54:48.500
But like now when the product is at the point where,


00:54:48.500 --> 00:54:50.980
well, my business needs this thing to run,


00:54:50.980 --> 00:54:52.940
so you better figure it out kind of thing.


00:54:52.940 --> 00:54:55.060
At that point, that's why it's so important


00:54:55.060 --> 00:54:58.100
for not even just major corporations,


00:54:58.100 --> 00:54:59.600
but all of us that use it,


00:54:59.600 --> 00:55:03.060
to find a way to contribute in whatever way that we can.


00:55:03.060 --> 00:55:04.540
Obviously for bigger companies,


00:55:04.540 --> 00:55:06.680
again, they could sign the check,


00:55:06.680 --> 00:55:10.920
but for us, can we go ahead and have those discussions


00:55:10.920 --> 00:55:12.100
and talk about, well, hey,


00:55:12.100 --> 00:55:13.580
well, these are really useful features


00:55:13.580 --> 00:55:15.460
and it's useful because of this reason


00:55:15.460 --> 00:55:16.860
or because of these use cases,


00:55:16.860 --> 00:55:20.380
or these are scenarios that would help us


00:55:20.380 --> 00:55:21.480
be more productive, right?


00:55:21.480 --> 00:55:24.000
And again, not just say I want stuff,


00:55:24.000 --> 00:55:26.880
but let's have a practical conversation about like,


00:55:26.880 --> 00:55:29.560
how is it gonna make everyone better, right?


00:55:29.560 --> 00:55:30.960
- There's a whole spectrum of that, right?


00:55:30.960 --> 00:55:34.680
Like could be just communicating with the project


00:55:34.680 --> 00:55:37.600
over issues and stuff to say, this is really important.


00:55:37.600 --> 00:55:38.440
Here's our use case.


00:55:38.440 --> 00:55:41.560
It could be, hey, I could actually make a PR on this


00:55:41.560 --> 00:55:44.080
and contribute a PR to a project you care about.


00:55:44.080 --> 00:55:46.400
Or it could just be, I'm gonna write a tutorial


00:55:46.400 --> 00:55:48.280
'cause this is really hard to get started with, right?


00:55:48.280 --> 00:55:51.760
there's not, or even just documentation with examples.


00:55:51.760 --> 00:55:53.840
- Yeah, and you bring up a great example


00:55:53.840 --> 00:55:54.920
of documentation, right?


00:55:54.920 --> 00:55:57.440
Like I know this is such a cliche thing to say


00:55:57.440 --> 00:55:59.060
'cause we've been saying it for years,


00:55:59.060 --> 00:56:02.680
but documentation is such, I don't wanna say it easy,


00:56:02.680 --> 00:56:05.880
but it's such a great way to get started in open source,


00:56:05.880 --> 00:56:07.520
in any open source project,


00:56:07.520 --> 00:56:10.840
because I'll tell you the folks that are writing the code


00:56:10.840 --> 00:56:14.320
probably don't have a lot of time to write documentation.


00:56:14.320 --> 00:56:16.400
- Yeah, and they might not have gotten into the project


00:56:16.400 --> 00:56:17.680
because they love documentation.


00:56:17.680 --> 00:56:19.900
They might have got in because they really wanted to write the code.


00:56:19.900 --> 00:56:22.120
>> Right. When we think about projects,


00:56:22.120 --> 00:56:26.900
just like how every language is good at specific things,


00:56:26.900 --> 00:56:31.120
people that work on projects are all good at very specific things.


00:56:31.120 --> 00:56:32.700
Because I'm a good engineer,


00:56:32.700 --> 00:56:34.820
doesn't mean I'm going to be a good manager.


00:56:34.820 --> 00:56:37.260
Just because I'm a good engineer doesn't mean I'm going to


00:56:37.260 --> 00:56:39.900
be a good docs writer and vice versa.


00:56:39.900 --> 00:56:42.980
You know what I mean? I might be able to tell you how to do it,


00:56:42.980 --> 00:56:45.140
but the way I communicate that to you,


00:56:45.140 --> 00:56:46.640
you might be like, "Yo, dude,


00:56:46.640 --> 00:56:50.480
I don't have a PhD, I don't understand anything you just told me, right?


00:56:50.480 --> 00:56:54.480
Versus like, okay, someone that can kind of sit in the middle and translate.


00:56:54.480 --> 00:56:58.780
Not that we're translating languages, but like, you know, Hey, how can I package


00:56:58.780 --> 00:57:03.520
this in a way, how can I put this forward in a way that just makes it more digestible


00:57:03.520 --> 00:57:06.800
by whatever particular audience of folks that I'm trying to reach out to.


00:57:06.800 --> 00:57:10.500
So again, if we're talking about students or folks in startups or big enterprise


00:57:10.500 --> 00:57:13.260
companies, like what are the things that are important to them and then how can I


00:57:13.260 --> 00:57:14.600
communicate that to those people?


00:57:15.080 --> 00:57:15.920
- Yeah.


00:57:15.920 --> 00:57:19.320
- But again, when you're a big company,


00:57:19.320 --> 00:57:20.520
like you can pay for that.


00:57:20.520 --> 00:57:22.000
Like you can pay people to do that.


00:57:22.000 --> 00:57:22.840
Like when you're not-


00:57:22.840 --> 00:57:24.240
- Now you're job to do this thing


00:57:24.240 --> 00:57:27.360
and you better do it 'cause you have a manager.


00:57:27.360 --> 00:57:29.200
- Yeah, exactly, exactly, exactly.


00:57:29.200 --> 00:57:30.200
- Yeah.


00:57:30.200 --> 00:57:32.120
All right, we're getting short on time here, Cecil,


00:57:32.120 --> 00:57:35.260
but I do wanna talk about one thing


00:57:35.260 --> 00:57:37.760
that I really admire about the .NET space.


00:57:37.760 --> 00:57:41.280
And I think the reason I admire is,


00:57:41.280 --> 00:57:42.100
among other reasons,


00:57:42.100 --> 00:57:44.760
is I think it really has a lot of relevance


00:57:44.760 --> 00:57:49.760
for Python people and that is the whole Blazor thing.


00:57:49.760 --> 00:57:51.640
- Oh yeah.


00:57:51.640 --> 00:57:53.980
- It's a Blazor.net.


00:57:53.980 --> 00:57:58.980
So one of the things that they did over at the .net side


00:57:58.980 --> 00:58:03.740
is they came up with this idea of like a standard core


00:58:03.740 --> 00:58:07.700
and I've already sort of taken a little,


00:58:07.700 --> 00:58:10.540
an inner essence of .net that like,


00:58:10.540 --> 00:58:12.580
this is the thing that we should have available everywhere.


00:58:12.580 --> 00:58:15.020
and then there's a bunch of stuff that's irrelevant


00:58:15.020 --> 00:58:16.620
in certain situations, like,


00:58:16.620 --> 00:58:19.540
do you really need a UI GUI framework


00:58:19.540 --> 00:58:22.020
when you're on like a fridge?


00:58:22.020 --> 00:58:23.500
Maybe do that, but, or, you know,


00:58:23.500 --> 00:58:26.480
like you're running just as a backend service on Linux.


00:58:26.480 --> 00:58:29.340
You really need a UI framework for that, right?


00:58:29.340 --> 00:58:33.740
And so out of that, to some degree came Blazor,


00:58:33.740 --> 00:58:36.740
which is basically the runtime


00:58:36.740 --> 00:58:39.060
plus the language in the browser.


00:58:40.260 --> 00:58:44.860
And we have that really, really close in things like PyIodide


00:58:44.860 --> 00:58:47.220
and the core developers have been building CPython really


00:58:47.220 --> 00:58:50.620
recently for WebAssembly, which is amazing.


00:58:50.620 --> 00:58:52.700
The difference here is this framework


00:58:52.700 --> 00:58:55.780
has a front-end framework on top of it


00:58:55.780 --> 00:59:01.820
that is like Vue.js or React, but in C# on the browser.


00:59:01.820 --> 00:59:05.300
And do you want to just riff on that a little bit?


00:59:05.300 --> 00:59:08.060
I think if we had something like this in Python,


00:59:08.060 --> 00:59:11.900
I mean, this is basically how do you not have to write JavaScript


00:59:11.900 --> 00:59:16.220
on the front end and have something really cool in your language and your runtime.


00:59:16.220 --> 00:59:19.480
Yeah, yeah. So kind of like what Michael just said.


00:59:19.480 --> 00:59:23.060
So Blazor is the equivalent of


00:59:23.060 --> 00:59:26.460
React or Vue or Angular,


00:59:26.460 --> 00:59:28.980
but it's dot net for dot net developers.


00:59:28.980 --> 00:59:32.780
And the cool thing about it, so I guess just a little bit of a back story.


00:59:32.780 --> 00:59:36.380
so Steve Sanderson, I believe is how you say his last name.


00:59:36.380 --> 00:59:38.800
He did a talk at NDC,


00:59:38.800 --> 00:59:40.800
one of the NDC conferences,


00:59:40.800 --> 00:59:45.620
where he showed how you can compile the.NET's runtime,


00:59:45.620 --> 00:59:47.700
the actual thing.


00:59:47.700 --> 00:59:49.620
.NET runs in a virtual machine,


00:59:49.620 --> 00:59:50.920
kind of like how Java does,


00:59:50.920 --> 00:59:55.180
the.NET runtime to actually execute a WebAssembly.


00:59:55.180 --> 00:59:59.960
Most modern browsers have WebAssembly enabled today.


00:59:59.960 --> 01:00:02.120
Again, assuming that you update your browsers,


01:00:02.120 --> 01:00:03.360
put them on auto-update,


01:00:03.360 --> 01:00:05.240
you shouldn't really have to do a lot to


01:00:05.240 --> 01:00:06.960
just get that stuff to work.


01:00:06.960 --> 01:00:08.680
Now that means, well,


01:00:08.680 --> 01:00:11.400
if I can ship the runtime into the browser,


01:00:11.400 --> 01:00:14.080
that means I can run the language in the browser,


01:00:14.080 --> 01:00:17.460
which is really cool. What Blazor is,


01:00:17.460 --> 01:00:19.660
if you're familiar with.NET and you know what


01:00:19.660 --> 01:00:23.400
Razor syntax is like from MVC days.


01:00:23.400 --> 01:00:26.160
>> It's like a Jinja for us.


01:00:26.160 --> 01:00:28.160
>> Right. It's like a templating language.


01:00:28.160 --> 01:00:30.760
If you understand how that templating language functions,


01:00:30.760 --> 01:00:32.640
which is essentially C# and code,


01:00:32.640 --> 01:00:35.720
just like you said, like Jinja is Python and code.


01:00:35.720 --> 01:00:38.160
It's Python and HTML.


01:00:38.160 --> 01:00:40.700
Once you understand how that world works,


01:00:40.700 --> 01:00:43.480
now you can take those existing skills that you have and now you


01:00:43.480 --> 01:00:46.760
could write components that run inside of the browser.


01:00:46.760 --> 01:00:50.040
They're 100 percent in the browser because now the runtime,


01:00:50.040 --> 01:00:52.600
you've just shipped the runtime like you would like


01:00:52.600 --> 01:00:54.960
a JavaScript file like jQuery or whatever the case is,


01:00:54.960 --> 01:00:57.280
or your web pack bundle the thing.


01:00:57.280 --> 01:00:59.520
You build it and you send it to the browser.


01:00:59.520 --> 01:01:01.200
So now it runs there.


01:01:01.200 --> 01:01:03.720
So that means, and sometimes people don't believe this,


01:01:03.720 --> 01:01:07.600
but what that means is that you could turn off the internet,


01:01:07.600 --> 01:01:09.560
and then your app is still functioning,


01:01:09.560 --> 01:01:12.080
because the functionality is living in the browser


01:01:12.080 --> 01:01:14.480
inside of Blazor, which I think is really cool.


01:01:14.480 --> 01:01:15.480
- I think this is really cool.


01:01:15.480 --> 01:01:19.360
And I don't really care that much for this type of app,


01:01:19.360 --> 01:01:23.080
say as like in my website, although I see uses there,


01:01:23.080 --> 01:01:26.960
but Electron, you know, right?


01:01:26.960 --> 01:01:29.560
Like if you could get something really rich like this


01:01:30.720 --> 01:01:34.760
and then turn it into a proper way to ship rich applications


01:01:34.760 --> 01:01:37.640
that are either progressive web apps or electron JS apps,


01:01:37.640 --> 01:01:40.400
then you get a whole new avenue of types of apps


01:01:40.400 --> 01:01:44.600
that you can write that you wouldn't otherwise be able to.


01:01:44.600 --> 01:01:46.260
- Yeah, if you think about,


01:01:46.260 --> 01:01:49.920
so one of the things that the .NET team promised


01:01:49.920 --> 01:01:51.760
that was gonna come out this year,


01:01:51.760 --> 01:01:54.680
hopefully comes out by the time build happens in May,


01:01:54.680 --> 01:01:56.240
is .NET MAUI, right?


01:01:56.240 --> 01:01:59.040
Like MAUI stands for multi,


01:02:00.120 --> 01:02:02.720
>> My gosh, Microsoft Application UI.


01:02:02.720 --> 01:02:04.000
Oh my gosh, I don't remember what it is.


01:02:04.000 --> 01:02:05.280
>> User interface.


01:02:05.280 --> 01:02:06.700
>> User interface thing.


01:02:06.700 --> 01:02:09.000
But essentially, Maui is a way that you


01:02:09.000 --> 01:02:11.840
could write applications


01:02:11.840 --> 01:02:14.080
that exist across a lot of different places.


01:02:14.080 --> 01:02:17.200
You can think about macOS desktop,


01:02:17.200 --> 01:02:21.000
Windows desktop, Android, iOS, those types of things.


01:02:21.000 --> 01:02:22.920
But I can have a single code base,


01:02:22.920 --> 01:02:23.940
kind of like Xamarin Forms,


01:02:23.940 --> 01:02:28.560
but Xamarin Forms, the new VNX kind of thing.


01:02:28.560 --> 01:02:32.380
I bring that up because one of the things that they've promised


01:02:32.380 --> 01:02:35.920
that we can do in MAUI is have a Blazor view,


01:02:35.920 --> 01:02:38.740
which essentially is Blazor running in MAUI.


01:02:38.740 --> 01:02:41.560
That means that if I write a thing in Blazor,


01:02:41.560 --> 01:02:44.840
like my Blazor components that run on the web and do the thing,


01:02:44.840 --> 01:02:48.520
that means that I should be able to have that code exported


01:02:48.520 --> 01:02:51.200
and embedded inside of an app,


01:02:51.200 --> 01:02:54.760
and now that app can run across all those other places as well.


01:02:54.760 --> 01:02:55.240
>> Interesting.


01:02:55.240 --> 01:02:58.400
>> Again, think about the write once run anywhere thing


01:02:58.400 --> 01:03:00.720
that we've been chasing for decades, right?


01:03:00.720 --> 01:03:03.840
Like we can write the thing in Blazor if we wanted to.


01:03:03.840 --> 01:03:05.340
And now it can run not only in the web,


01:03:05.340 --> 01:03:07.280
but it can run on mobile, it can run on desktop,


01:03:07.280 --> 01:03:10.160
not just Windows desktop, but also macOS desktop.


01:03:10.160 --> 01:03:11.280
- You know, mobile even.


01:03:11.280 --> 01:03:12.600
- I dream of mobile.


01:03:12.600 --> 01:03:16.120
- Yeah, iPhones, iPads, you know,


01:03:16.120 --> 01:03:19.120
Samsung tablets and like all those kinds of cool things.


01:03:19.120 --> 01:03:20.820
- Yeah, absolutely.


01:03:20.820 --> 01:03:24.280
All right, well, I think we have to leave it there


01:03:24.280 --> 01:03:27.400
for our main topics, Cecil, but.


01:03:27.400 --> 01:03:29.080
- I feel like we have so much more to talk about.


01:03:29.080 --> 01:03:30.960
Like that was, that went by so quickly.


01:03:30.960 --> 01:03:32.640
- I know, we could just,


01:03:32.640 --> 01:03:35.440
maybe we'll come back and do another follow up episode


01:03:35.440 --> 01:03:37.360
if people have a bunch of questions or something.


01:03:37.360 --> 01:03:38.800
- Yeah, if folks want to do a part two,


01:03:38.800 --> 01:03:40.800
they should let us know, leave a comment


01:03:40.800 --> 01:03:42.560
and on the show or whatever the case is.


01:03:42.560 --> 01:03:43.400
- Yeah, yeah.


01:03:43.400 --> 01:03:45.920
- Mostly the best place to leave comments


01:03:45.920 --> 01:03:47.160
is on the YouTube live stream.


01:03:47.160 --> 01:03:51.540
I turned off the comments on the episode page


01:03:51.540 --> 01:03:55.720
because they were forcing a bunch of third-party tracking


01:03:55.720 --> 01:03:58.080
onto our users and I'm like,


01:03:58.080 --> 01:04:00.200
I really don't wanna have, you know,


01:04:00.200 --> 01:04:02.800
cookie pop-ups and all these things and not just,


01:04:02.800 --> 01:04:05.680
yeah, anyway, no more comments on the episode page,


01:04:05.680 --> 01:04:08.600
but on the YouTube live stream, absolutely.


01:04:08.600 --> 01:04:10.280
Before we get out of here though,


01:04:10.280 --> 01:04:12.520
if you're gonna write some code, I guess at this point,


01:04:12.520 --> 01:04:14.000
it almost doesn't matter the language,


01:04:14.000 --> 01:04:17.120
but C# or Python, what editor are you using?


01:04:17.120 --> 01:04:20.080
- I pull out VS Code by default,


01:04:20.080 --> 01:04:24.880
only because again, I like to focus, you know what I mean?


01:04:24.880 --> 01:04:28.440
And then if there's one IDE that can support multiple languages,


01:04:28.440 --> 01:04:29.800
that's what I'm going to do.


01:04:29.800 --> 01:04:31.600
So that's really where I'm going to go.


01:04:31.600 --> 01:04:32.760
>> Cool, cool.


01:04:32.760 --> 01:04:35.000
And I don't know if you have anything off the top of your head,


01:04:35.000 --> 01:04:37.560
any Python libraries you want to recommend, have you come across any?


01:04:37.560 --> 01:04:42.840
>> I'll be honest with you, I mean, I'm sure folks know about this already,


01:04:42.840 --> 01:04:44.240
so I'm not going to say anything different.


01:04:44.240 --> 01:04:48.680
But I really want to learn about scikit-learn.


01:04:48.680 --> 01:04:50.080
>> Yeah.


01:04:50.080 --> 01:04:52.040
>> So it's a machine learning library,


01:04:52.040 --> 01:04:54.080
like I'm sure most of your listeners already know about.


01:04:54.080 --> 01:04:55.880
but I personally haven't played around with it.


01:04:55.880 --> 01:04:58.320
I personally haven't spent too much time at


01:04:58.320 --> 01:05:00.200
all in that machine learning space.


01:05:00.200 --> 01:05:02.280
>> Yeah, I haven't either. It seems so magical.


01:05:02.280 --> 01:05:03.700
If you could crack it, you'd be able to


01:05:03.700 --> 01:05:05.800
build just amazing things, right?


01:05:05.800 --> 01:05:08.120
>> Yeah. I've been playing around with


01:05:08.120 --> 01:05:10.520
just doing data visualizations and stuff like that,


01:05:10.520 --> 01:05:13.000
with things like Seaborn or Matplotlib.


01:05:13.000 --> 01:05:15.080
But that's just me having data,


01:05:15.080 --> 01:05:17.360
wanted to draw charts and graphs and stuff.


01:05:17.360 --> 01:05:17.920
>> Nice.


01:05:17.920 --> 01:05:20.360
>> What I actually want to do is analyze some of that data


01:05:20.360 --> 01:05:22.920
using some of those machine learning libraries.


01:05:22.920 --> 01:05:24.720
>> I figured learning a little bit of


01:05:24.720 --> 01:05:26.560
machine learning is not a bad idea.


01:05:26.560 --> 01:05:30.560
I think that's one of those places that Python really shines.


01:05:30.560 --> 01:05:34.680
The ecosystem that it has with Keras,


01:05:34.680 --> 01:05:36.320
I think is what one of them is called,


01:05:36.320 --> 01:05:37.400
and you think about PyTorch,


01:05:37.400 --> 01:05:39.760
and you think about all the other really cool data


01:05:39.760 --> 01:05:42.320
analytics and machine learning libraries.


01:05:42.320 --> 01:05:44.280
For me, it's just automatic.


01:05:44.280 --> 01:05:46.080
I'm going to go to Python and I'm going to do that.


01:05:46.080 --> 01:05:48.240
>> Yeah, absolutely. All right.


01:05:48.240 --> 01:05:50.040
Now, close us out,


01:05:50.040 --> 01:05:51.680
especially speaking to the.NET people


01:05:51.680 --> 01:05:55.640
who I may have dragged into this episode.


01:05:55.640 --> 01:05:58.320
They're thinking of Python, maybe they'll try it out,


01:05:58.320 --> 01:05:59.760
maybe they won't, what would you tell them


01:05:59.760 --> 01:06:02.200
coming from their C# background?


01:06:02.200 --> 01:06:04.120
- Yeah, I think if you look at one of those


01:06:04.120 --> 01:06:07.960
old older Stack Overflow surveys,


01:06:07.960 --> 01:06:10.800
they'll always say like Python is like the second language


01:06:10.800 --> 01:06:12.800
for a lot of C# developers.


01:06:12.800 --> 01:06:14.960
'Cause when you think about it,


01:06:14.960 --> 01:06:17.440
Python does a great job at allowing you


01:06:17.440 --> 01:06:20.160
to like execute things very quickly, right?


01:06:20.160 --> 01:06:21.760
and so far as a .NET developer,


01:06:21.760 --> 01:06:22.960
if I need to analyze something,


01:06:22.960 --> 01:06:25.800
if I need to spin up a really quick web server


01:06:25.800 --> 01:06:28.640
and just do some really quick things,


01:06:28.640 --> 01:06:31.240
it's a great additional tool to have.


01:06:31.240 --> 01:06:32.760
Now, it's more than just a tool,


01:06:32.760 --> 01:06:35.920
but again, if you're a .NET developer, that's your focus,


01:06:35.920 --> 01:06:37.800
and you need something else to allow you


01:06:37.800 --> 01:06:39.880
to move quickly, allow you to experiment,


01:06:39.880 --> 01:06:43.080
allow you to just explore your world


01:06:43.080 --> 01:06:44.960
and extend your tool belt a little bit,


01:06:44.960 --> 01:06:47.480
I think Python is a great option to do that with.


01:06:47.480 --> 01:06:48.320
- Right on.


01:06:48.320 --> 01:06:49.800
Well, thanks for being here.


01:06:49.800 --> 01:06:51.500
It's always fun to talk to you, and it's


01:06:51.500 --> 01:06:54.760
been cool to sort of compare and contrast.


01:06:54.760 --> 01:06:55.260
Thanks.


01:06:55.260 --> 01:06:56.420
- Thanks for having me, man.


01:06:56.420 --> 01:06:57.500
So I really appreciate it.


01:06:57.500 --> 01:06:58.000
- You bet.


01:06:58.000 --> 01:06:58.500
Bye.

