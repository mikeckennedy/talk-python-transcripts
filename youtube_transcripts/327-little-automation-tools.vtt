WEBVTT

00:00:00.000 --> 00:00:09.560
Hello everyone, so glad to have you here right now on YouTube and just a moment on the podcast.


00:00:09.560 --> 00:00:14.720
It's great to see you all. Thanks for being here. Everyone out there, yeah, everyone out


00:00:14.720 --> 00:00:19.980
there in the live stream, if you're watching and you have comments, feedback or ideas,


00:00:19.980 --> 00:00:24.520
please throw them into the live chat and we'll try to make them part of the show. With that,


00:00:24.520 --> 00:00:29.520
Rusty, Kim, Jay, and Rivers, welcome all of you


00:00:29.520 --> 00:00:31.280
to Talk Python To Me.


00:00:31.280 --> 00:00:33.760
- Thanks, great to be here.


00:00:33.760 --> 00:00:34.600
- Thanks, thanks.


00:00:34.600 --> 00:00:38.520
- Yeah, it's really excellent to have you here


00:00:38.520 --> 00:00:40.040
to share this topic.


00:00:40.040 --> 00:00:42.280
You know, a lot of times I have people on the show like,


00:00:42.280 --> 00:00:43.920
oh, here's how we built Instagram,


00:00:43.920 --> 00:00:46.500
or we're using this cool library to scale


00:00:46.500 --> 00:00:47.960
like the largest Django deployment,


00:00:47.960 --> 00:00:51.400
or here's how I built Flask and how we're evolving it,


00:00:51.400 --> 00:00:53.220
and something like that in data science,


00:00:53.220 --> 00:00:56.140
And that's great, but I think so many people


00:00:56.140 --> 00:00:56.980
out there listening are like,


00:00:56.980 --> 00:00:59.940
well, I'm not building those kinds of apps.


00:00:59.940 --> 00:01:01.420
I'm building something entirely different,


00:01:01.420 --> 00:01:03.820
or I don't, I just build little things.


00:01:03.820 --> 00:01:06.740
And I think actually that's where a lot of the magic is


00:01:06.740 --> 00:01:08.900
for everyone out there listening.


00:01:08.900 --> 00:01:10.100
You know, we all have these things


00:01:10.100 --> 00:01:12.820
that are in our day to day, and it's just like,


00:01:12.820 --> 00:01:16.720
you know, that is, I'm not looking forward to that,


00:01:16.720 --> 00:01:20.040
but so many times, a couple hours of Python


00:01:20.040 --> 00:01:21.880
or other coding, a little automation,


00:01:21.880 --> 00:01:23.680
and then that becomes automatic.


00:01:23.680 --> 00:01:25.960
And life is just, you know,


00:01:25.960 --> 00:01:28.920
it's so rewarding to do those little things.


00:01:28.920 --> 00:01:30.360
I'm excited to share the ones that I did.


00:01:30.360 --> 00:01:31.420
They're incredibly simple,


00:01:31.420 --> 00:01:34.920
but they just make me smile so much as I do them.


00:01:34.920 --> 00:01:37.740
So really looking forward to doing that.


00:01:37.740 --> 00:01:41.560
But before we get into the apps and the details,


00:01:41.560 --> 00:01:43.560
you know, let's maybe go around


00:01:43.560 --> 00:01:45.680
the YouTube stream picture here


00:01:45.680 --> 00:01:48.040
and let you all quickly introduce yourself.


00:01:48.040 --> 00:01:49.880
Three of the four of you have been on the show before,


00:01:49.880 --> 00:01:51.620
but just, you know, a quick introduction.


00:01:51.620 --> 00:01:52.980
Rusty, let's start with you.


00:01:52.980 --> 00:01:55.340
- Okay, I gave my long introduction last time,


00:01:55.340 --> 00:01:57.700
so I'll just say that I'm a reformed teacher.


00:01:57.700 --> 00:02:00.180
About two years ago, or maybe three years ago,


00:02:00.180 --> 00:02:02.100
I started coding, and then I had an opportunity


00:02:02.100 --> 00:02:05.260
to kind of become the data manager at my school district.


00:02:05.260 --> 00:02:07.700
So I'm trying to build pathways


00:02:07.700 --> 00:02:09.820
between all the various services that we use


00:02:09.820 --> 00:02:11.780
and keep our data clean.


00:02:11.780 --> 00:02:15.540
- That is so cool because it's not like you had


00:02:15.540 --> 00:02:19.540
to leave the education space or the public school space.


00:02:19.540 --> 00:02:21.740
you just sort of transitioned into this world


00:02:21.740 --> 00:02:23.140
where you can take what you're really into


00:02:23.140 --> 00:02:24.780
and like help everyone with it, right?


00:02:24.780 --> 00:02:26.300
- Yeah, it was a great move for me.


00:02:26.300 --> 00:02:29.300
I was actually trying to learn how to teach coding


00:02:29.300 --> 00:02:31.500
to the kids and then I just really enjoyed it.


00:02:31.500 --> 00:02:32.340
So yeah.


00:02:32.340 --> 00:02:33.260
- We just did more of that.


00:02:33.260 --> 00:02:35.500
- Yeah, just as the same time big data hit.


00:02:35.500 --> 00:02:36.980
So it was good.


00:02:36.980 --> 00:02:38.100
- Yeah, fantastic.


00:02:38.100 --> 00:02:39.500
Kim.


00:02:39.500 --> 00:02:40.340
- Welcome back.


00:02:40.340 --> 00:02:42.140
If I can borrow a phrase from Rusty,


00:02:42.140 --> 00:02:45.140
I'm a reformed embedded software engineer.


00:02:45.140 --> 00:02:47.020
So moved from C a couple of years ago


00:02:47.020 --> 00:02:50.060
to doing many DevOps work for a financial services


00:02:50.060 --> 00:02:53.020
organization here in South Africa where I'm based.


00:02:53.020 --> 00:02:54.820
- Yeah, fantastic.


00:02:54.820 --> 00:02:57.540
And you were also hosting the Ask Me Anything not long ago.


00:02:57.540 --> 00:02:58.380
- Yes.


00:02:58.380 --> 00:02:59.200
- Thank you for that.


00:02:59.200 --> 00:03:00.740
- That was very good.


00:03:00.740 --> 00:03:01.580
- Yeah, it was fun.


00:03:01.580 --> 00:03:03.140
Jay, hello, hello.


00:03:03.140 --> 00:03:05.100
I just saw you over on Python Bytes not long ago,


00:03:05.100 --> 00:03:07.180
but happy to have you here.


00:03:07.180 --> 00:03:08.620
- Happy to be back.


00:03:08.620 --> 00:03:12.100
I will crib everyone and say I am also reformed,


00:03:12.100 --> 00:03:16.240
reformed marketer, veteran, now developer advocate


00:03:16.240 --> 00:03:21.120
and spend a lot of my time just talking to the community


00:03:21.120 --> 00:03:24.240
and learning from folks that are a lot smarter than I am.


00:03:24.240 --> 00:03:26.480
- Yeah, you're doing stuff with Elasticsearch.


00:03:26.480 --> 00:03:28.280
Yeah, you're doing stuff with Elasticsearch


00:03:28.280 --> 00:03:31.440
and some cool database like things, right?


00:03:31.440 --> 00:03:32.600
- Absolutely.


00:03:32.600 --> 00:03:33.440
- Yeah.


00:03:33.440 --> 00:03:35.400
Rivers, your first time on the show.


00:03:35.400 --> 00:03:36.520
Thank you so much for coming.


00:03:36.520 --> 00:03:37.480
It's really great to have you here.


00:03:37.480 --> 00:03:40.280
Tell people real quickly about yourself.


00:03:40.280 --> 00:03:41.520
- My name is Rivers Cuovo.


00:03:41.520 --> 00:03:44.640
I'm the singer and songwriter for the band Weezer.


00:03:45.760 --> 00:03:52.000
Our first album came out in '94 and we've been touring and making records on and off ever since.


00:03:52.000 --> 00:03:57.520
I'm such a fan of your music. It came out when I was in college and I've been a fan of what you're


00:03:57.520 --> 00:04:02.080
doing longer than I've been a fan of Python, which is crazy. That's so awesome. So thank you for that.


00:04:02.080 --> 00:04:07.760
Yeah, I'm a huge fan of your show, Michael. I listen every morning and of course I've learned


00:04:07.760 --> 00:04:14.320
so much and gotten turned on to so many cool packages. But also it's just nice to get that


00:04:15.120 --> 00:04:19.340
human connection in the midst of a few hours of coding every morning.


00:04:19.340 --> 00:04:24.480
Just to hear you all you guys talking about it, it really warms the heart.


00:04:24.480 --> 00:04:29.180
Awesome, thank you. You know, I think a lot of people who have told me they


00:04:29.180 --> 00:04:34.680
listen to the show and some of the guests as well, they don't work in like a


00:04:34.680 --> 00:04:39.360
startup tech place environment, but being able to listen to a podcast like Talk


00:04:39.360 --> 00:04:44.000
by Thinemy and others, it kind of brings that community to them even though


00:04:44.000 --> 00:04:47.720
they're not necessarily like everyday showing up with a group of people who


00:04:47.720 --> 00:04:52.120
would be that community. Yeah that's exactly my situation and I'm working on


00:04:52.120 --> 00:04:58.840
my own here and I don't know anybody who is into coding so it's great to know you.


00:04:58.840 --> 00:05:05.120
Yeah awesome yeah you as well. So as you said people will know you from Weezer


00:05:05.120 --> 00:05:10.160
and that's amazing but you are doing such cool stuff with automation and


00:05:10.160 --> 00:05:13.760
Python and code and so I think people are really going to be blown away by


00:05:13.760 --> 00:05:19.600
by what you're doing as well. So I'm super excited to get into that. But you know, let's just sort of


00:05:19.600 --> 00:05:25.600
go down. We all put together a couple of things that we're working on in a shared doc here. And


00:05:25.600 --> 00:05:30.240
it looks like Rusty, I put you first. So Rusty, you want to kick us off with the first sort of


00:05:30.240 --> 00:05:35.760
automation thing that you built? Sure. So when COVID hit, we had to change a lot of different


00:05:35.760 --> 00:05:40.400
things and, you know, adjust like everybody else did in the world. And we ended up sending out


00:05:41.120 --> 00:05:45.200
a lot of notifications from our school district when when certain when an


00:05:45.200 --> 00:05:48.320
infection would happen at the school and we'd have to notify people and it was


00:05:48.320 --> 00:05:50.880
this huge thing and we're you know at the height we're getting lots of these


00:05:50.880 --> 00:05:52.960
things today and so schools started to put the


00:05:52.960 --> 00:05:55.840
information up on their website so you could just go and refer to the website


00:05:55.840 --> 00:06:00.560
instead of get a wall of text every time something happened. So my superintendent


00:06:00.560 --> 00:06:03.920
came in and said she wanted to put this dashboard up and then she showed me some


00:06:03.920 --> 00:06:07.120
other schools that had done it and I looked at what they were doing and


00:06:07.120 --> 00:06:10.160
just knowing how the web works and schools work I knew that somebody who's


00:06:10.160 --> 00:06:11.680
who's gonna have to update this information


00:06:11.680 --> 00:06:14.240
every single day or every other day on the website.


00:06:14.240 --> 00:06:17.280
It was something that could easily fall by the wayside.


00:06:17.280 --> 00:06:19.600
So I thought to myself, who's gonna be updating this?


00:06:19.600 --> 00:06:22.320
And then she's like, don't worry about it, I'll update it.


00:06:22.320 --> 00:06:23.880
You've got so much to worry about,


00:06:23.880 --> 00:06:26.200
that's not what you want your superintendent doing, right?


00:06:26.200 --> 00:06:28.380
Updating the website once a day or whatever.


00:06:28.380 --> 00:06:30.240
So I was like, I should be able to handle this


00:06:30.240 --> 00:06:31.400
with Python somehow.


00:06:31.400 --> 00:06:33.820
So I hit Reddit and I just asked kind of,


00:06:33.820 --> 00:06:36.360
well, first off, I had to find out


00:06:36.360 --> 00:06:37.420
where she was getting the information.


00:06:37.420 --> 00:06:39.560
So the health department put it up on the website,


00:06:39.560 --> 00:06:42.080
but it was a PDF and I was like, oh, that's crazy.


00:06:42.080 --> 00:06:43.600
Yeah, so I can't scrape that.


00:06:43.600 --> 00:06:45.640
- I was so close to a beautiful soup.


00:06:45.640 --> 00:06:46.480
It was all over.


00:06:46.480 --> 00:06:47.760
- Maybe a little just updated every day.


00:06:47.760 --> 00:06:48.580
All right.


00:06:48.580 --> 00:06:50.580
So then, yeah, so then I hit Reddit and I was like,


00:06:50.580 --> 00:06:54.520
is there a way to turn, you know, a PDF into a,


00:06:54.520 --> 00:06:56.800
into a CSV with Python?


00:06:56.800 --> 00:06:57.640
And of course there was.


00:06:57.640 --> 00:07:00.040
So about two or three different packages got recommended.


00:07:00.040 --> 00:07:01.760
I played around with them for about a half an hour


00:07:01.760 --> 00:07:04.560
and this one called Tabula, which I wasn't crazy about


00:07:04.560 --> 00:07:06.520
because it depends on Java underneath.


00:07:06.520 --> 00:07:10.560
So it uses Java to kind of like recognize patterns on there.


00:07:10.560 --> 00:07:13.280
And it'll, so it'll, it'll turn your, your PDF,


00:07:13.280 --> 00:07:15.840
pull out just the tabular data


00:07:15.840 --> 00:07:17.440
and stick it into a CSV for you.


00:07:17.440 --> 00:07:20.160
So I was able to just with a bit of requests,


00:07:20.160 --> 00:07:24.220
go up, grab that every time, save it, process it,


00:07:24.220 --> 00:07:25.920
wrote a really gnarly little loop


00:07:25.920 --> 00:07:27.800
that finds my four schools


00:07:27.800 --> 00:07:30.400
and then puts those into my own CSV.


00:07:30.400 --> 00:07:33.680
And then I use Python again,


00:07:33.680 --> 00:07:36.280
Yagmail to just send it to myself.


00:07:36.280 --> 00:07:38.200
I did it twice a day 'cause it was updated


00:07:38.200 --> 00:07:39.040
at different times.


00:07:39.040 --> 00:07:42.680
And then on the other end with a little JavaScript,


00:07:42.680 --> 00:07:44.600
I just went into my email and I find that


00:07:44.600 --> 00:07:46.240
and I just update a Google sheet


00:07:46.240 --> 00:07:48.520
that's embedded on the website.


00:07:48.520 --> 00:07:49.920
So there's a bunch of little parts on it,


00:07:49.920 --> 00:07:53.680
but literally the Python was about 96 lines of code


00:07:53.680 --> 00:07:57.040
with comments and stuff, and it accomplished this.


00:07:57.040 --> 00:07:59.120
- Yeah, that's super cool.


00:07:59.120 --> 00:08:00.320
And it's really valuable, right?


00:08:00.320 --> 00:08:03.080
That if something like that gets missed,


00:08:03.080 --> 00:08:04.200
it could make a big deal


00:08:04.200 --> 00:08:06.760
It could be some kind of outbreak.


00:08:06.760 --> 00:08:07.600
- Yeah. - Yeah.


00:08:07.600 --> 00:08:09.640
- And I could apply that to just about,


00:08:09.640 --> 00:08:11.360
you know, to so many other things as well.


00:08:11.360 --> 00:08:13.520
So the time, all the time I invested in learning


00:08:13.520 --> 00:08:14.920
how that was, and it was an afternoon


00:08:14.920 --> 00:08:16.120
and I was able to figure that out


00:08:16.120 --> 00:08:18.960
and impress my immediate boss, which was really cool.


00:08:18.960 --> 00:08:20.480
He enjoys those types of things.


00:08:20.480 --> 00:08:21.320
So that was good.


00:08:21.320 --> 00:08:22.720
- Yeah, I bet.


00:08:22.720 --> 00:08:24.080
Paul out there in the live stream, hey Paul,


00:08:24.080 --> 00:08:26.280
says, "I use Yagmail to automate sending out emails


00:08:26.280 --> 00:08:27.720
"for the SciPy conference."


00:08:27.720 --> 00:08:28.640
Very cool.


00:08:28.640 --> 00:08:30.440
Rivers, it sounds like you and Rusty


00:08:30.440 --> 00:08:32.440
share some of the same tool set there.


00:08:32.440 --> 00:08:36.580
like it turns with like web scraping, PDFs, Google Sheets,


00:08:36.580 --> 00:08:37.620
that kind of stuff.


00:08:37.620 --> 00:08:39.360
- Yeah, I was just remembering, in fact,


00:08:39.360 --> 00:08:42.800
I emailed you a few years ago in desperation


00:08:42.800 --> 00:08:47.560
because I was trying to get some data from our agents.


00:08:47.560 --> 00:08:49.920
They have a web service where they give you,


00:08:49.920 --> 00:08:53.200
the artist, tons of details about their upcoming shows,


00:08:53.200 --> 00:08:58.200
attendance and tickets sold and gross income,


00:08:58.200 --> 00:08:59.260
all this stuff.


00:08:59.260 --> 00:09:00.340
So I wanted to get all that.


00:09:00.340 --> 00:09:05.340
and I had to deal with, it's rendered as a PDF.


00:09:05.340 --> 00:09:10.900
So I made the mistake of going to Stack Overflow first,


00:09:10.900 --> 00:09:13.020
I guess, instead of Reddit.


00:09:13.020 --> 00:09:15.420
And my question was getting all these down votes.


00:09:15.420 --> 00:09:17.300
- Oh yeah. - Oh no, yeah.


00:09:17.300 --> 00:09:19.040
That's rough, that is so rough.


00:09:19.040 --> 00:09:19.880
- I turned to Michael. - You gotta find


00:09:19.880 --> 00:09:21.220
your community.


00:09:21.220 --> 00:09:22.660
- Michael helped me out.


00:09:22.660 --> 00:09:23.500
- Yeah, that's awesome.


00:09:23.500 --> 00:09:24.540
I remember you were really frustrated


00:09:24.540 --> 00:09:27.620
'cause somehow the wrong information had been given to you


00:09:27.620 --> 00:09:29.060
when you showed up and you're like,


00:09:29.060 --> 00:09:31.100
this was supposed to be one hour and it's two hours


00:09:31.100 --> 00:09:33.180
and I was at the wrong, yeah, I just, I could see,


00:09:33.180 --> 00:09:35.180
I imagine you're like, how do I get this table


00:09:35.180 --> 00:09:37.580
or this part of the information out of the PDF?


00:09:37.580 --> 00:09:39.380
And yeah, that was perfect.


00:09:39.380 --> 00:09:41.980
- Yeah, but what is that package, Yagmail?


00:09:41.980 --> 00:09:44.020
I think I ought to try that one.


00:09:44.020 --> 00:09:45.940
- Yep, yep, Yagmail.


00:09:45.940 --> 00:09:47.300
It's really simple.


00:09:47.300 --> 00:09:50.460
The toughest part is going through the hoops with Google,


00:09:50.460 --> 00:09:52.640
but once you get your little file back from them,


00:09:52.640 --> 00:09:54.340
you can use it for everything, so.


00:09:54.340 --> 00:09:57.700
- Yeah, very cool.


00:09:57.700 --> 00:09:59.100
All right, thanks, Rusty.


00:09:59.100 --> 00:10:01.100
Kim, your first one's up next.


00:10:01.100 --> 00:10:03.640
- Just remind myself which one I wrote down


00:10:03.640 --> 00:10:05.100
as my first one.


00:10:05.100 --> 00:10:06.580
That was it, yeah.


00:10:06.580 --> 00:10:08.580
This little one that there's no link to it,


00:10:08.580 --> 00:10:09.620
doesn't have a name or anything,


00:10:09.620 --> 00:10:11.180
it's just a little small script that,


00:10:11.180 --> 00:10:13.380
one of the many that sits on my hard drive.


00:10:13.380 --> 00:10:15.820
And this I think is really kind of an epitome


00:10:15.820 --> 00:10:19.140
of small time or very small tool Python writing.


00:10:19.140 --> 00:10:20.860
It's a small tool I wrote,


00:10:20.860 --> 00:10:23.500
basically as the team I work with at work


00:10:23.500 --> 00:10:25.580
is about five or six of us,


00:10:25.580 --> 00:10:28.500
we kind of as agile as we need to be,


00:10:28.500 --> 00:10:30.020
which includes a Trello board,


00:10:30.020 --> 00:10:32.060
'cause we're no longer standing in front of a whiteboard


00:10:32.060 --> 00:10:34.180
in an office, we're all in our own homes.


00:10:34.180 --> 00:10:35.600
And so basically tracking cards


00:10:35.600 --> 00:10:38.260
of what we're doing for the week.


00:10:38.260 --> 00:10:40.740
And we include in our team people who have


00:10:40.740 --> 00:10:43.420
from day to day responsibilities for deployment


00:10:43.420 --> 00:10:44.380
to some of our environments.


00:10:44.380 --> 00:10:47.180
So one of the guys will push changes to staging,


00:10:47.180 --> 00:10:48.220
a different guy will push changes


00:10:48.220 --> 00:10:49.900
to our production environment.


00:10:49.900 --> 00:10:51.860
And that's all kind of boring setup.


00:10:51.860 --> 00:10:54.500
But effectively what it means is at the start of the week,


00:10:54.500 --> 00:10:56.540
I need to generate 10 cards for who's doing what.


00:10:56.540 --> 00:10:59.060
So I used to get an email from one of our administrators


00:10:59.060 --> 00:11:01.140
to say, here's the schedule for the week.


00:11:01.140 --> 00:11:03.440
You know, Bob's doing the staging on Monday


00:11:03.440 --> 00:11:05.940
and Fred's doing production on Tuesday.


00:11:05.940 --> 00:11:07.700
And I want to track those on my trailer board.


00:11:07.700 --> 00:11:10.460
And I reached the point where it's really,


00:11:10.460 --> 00:11:11.740
it shouldn't be a big deal.


00:11:11.740 --> 00:11:14.080
It took me about 10 minutes on Monday morning.


00:11:14.080 --> 00:11:16.820
I would make 10 cards and I'd write down Fred Monday,


00:11:16.820 --> 00:11:19.300
Bob Tuesday, but it was tedious and it was fiddly


00:11:19.300 --> 00:11:22.420
and I was putting it off because it was 10 minutes


00:11:22.420 --> 00:11:23.340
I'd rather not spend.


00:11:23.340 --> 00:11:25.440
And it's only 10 minutes, but still it was irritating.


00:11:25.440 --> 00:11:26.280
And that was kind of--


00:11:26.280 --> 00:11:27.120
- Yeah, of course, of course.


00:11:27.120 --> 00:11:29.480
- Not the thing I wanted to do on Monday morning.


00:11:29.480 --> 00:11:31.500
So basically I have sitting on my hard drive


00:11:31.500 --> 00:11:35.120
about 150 lines of Python purely to ask me,


00:11:35.120 --> 00:11:38.320
interrogate when I run it, who's doing what.


00:11:38.320 --> 00:11:39.740
Well, basically I've now got it set up.


00:11:39.740 --> 00:11:41.940
So it says full staging on Monday,


00:11:41.940 --> 00:11:44.540
which of these six people is the deployer?


00:11:44.540 --> 00:11:48.380
Then for, and just repeat for each of those cards.


00:11:48.380 --> 00:11:50.900
And that was literally,


00:11:50.900 --> 00:11:52.820
it takes me 20 seconds to run it now.


00:11:52.820 --> 00:11:55.340
I have to read the email I get on Monday morning to say,


00:11:55.340 --> 00:11:57.980
you know, who's doing when, and then it all does it for me.


00:11:57.980 --> 00:12:00.220
And it's incredibly daft.


00:12:00.220 --> 00:12:02.040
I mean, I save myself 10 minutes a week.


00:12:02.040 --> 00:12:04.580
It's no big deal, but I also save myself some irritation


00:12:04.580 --> 00:12:06.220
and scratches that little itch.


00:12:06.220 --> 00:12:07.540
That's the kind of thing I really love


00:12:07.540 --> 00:12:09.740
about a really small Python tool.


00:12:09.740 --> 00:12:12.080
It took me a couple hours to write.


00:12:12.080 --> 00:12:15.940
So it's not like it cost the company days of my time.


00:12:15.940 --> 00:12:16.780
- Yeah.


00:12:16.780 --> 00:12:18.320
Yeah, and it probably saved him some mistake


00:12:18.320 --> 00:12:19.340
or some forgotten thing.


00:12:19.340 --> 00:12:20.300
- Well, exactly, yeah.


00:12:20.300 --> 00:12:21.140
- Yeah.


00:12:21.140 --> 00:12:24.180
What's the Trello communication bit?


00:12:24.180 --> 00:12:26.940
- That's all REST API on Trello.


00:12:26.940 --> 00:12:30.940
So like most similar REST API services,


00:12:30.940 --> 00:12:34.100
you go along to Trello's side, you identify yourself,


00:12:34.100 --> 00:12:35.260
you get back a token from them,


00:12:35.260 --> 00:12:37.420
and then that's all API queries.


00:12:37.420 --> 00:12:39.780
So of the 150 lines of Python,


00:12:39.780 --> 00:12:42.180
about 40 are just config files for me


00:12:42.180 --> 00:12:43.940
mapping the names of my team members


00:12:43.940 --> 00:12:46.260
and various bits of information about the Trello


00:12:46.260 --> 00:12:48.940
to ID numbers I have to send back to Trello.


00:12:48.940 --> 00:12:49.780
- Yeah, very cool.


00:12:49.780 --> 00:12:51.780
It's even less actual code.


00:12:51.780 --> 00:12:53.780
That's fantastic.


00:12:53.780 --> 00:13:05.780
So I don't know how we managed to pull this together when you all arrived for the meeting, but we're exactly sort of in the loop of the same order in the docs.


00:13:05.780 --> 00:13:07.780
So awesome, Jay, you're next. That'll keep it easy.


00:13:07.780 --> 00:13:14.780
Awesome. Well, as I mentioned before, I work as a developer advocate and I work for Elastic.


00:13:14.780 --> 00:13:17.860
Elastic, we do search stuff and search things.


00:13:17.860 --> 00:13:20.660
I'm sure any of my coworkers listening are like,


00:13:20.660 --> 00:13:22.260
that's it, that's all you're gonna say?


00:13:22.260 --> 00:13:25.140
Yes, but one of the things that we have done


00:13:25.140 --> 00:13:27.140
because we do a lot of visualization


00:13:27.140 --> 00:13:29.620
is we build dashboards for like everything.


00:13:29.620 --> 00:13:31.020
There's so many dashboards.


00:13:31.020 --> 00:13:35.460
I have actually built a series of my own set of dashboards


00:13:35.460 --> 00:13:39.520
using one of my new favorite tools called Elon,


00:13:39.520 --> 00:13:44.520
which is like a pandas like data framing tool


00:13:44.520 --> 00:13:47.720
tool but for Elasticsearch.


00:13:47.720 --> 00:13:51.120
And it's great because it's designed to work with pandas,


00:13:51.120 --> 00:13:53.420
but it's also designed to work like pandas.


00:13:53.420 --> 00:13:55.720
So if you've ever done any type of data framing,


00:13:55.720 --> 00:13:58.620
any type of dealing with big numbers, big,


00:13:58.620 --> 00:14:00.420
any type of information like that,


00:14:00.420 --> 00:14:02.120
and you're used to those commands,


00:14:02.120 --> 00:14:05.020
you can just try them and usually they work.


00:14:05.020 --> 00:14:08.620
And what I've learned is Elon is amazing


00:14:08.620 --> 00:14:12.020
for like parsing CSV files, parsing JSON files.


00:14:12.020 --> 00:14:18.740
You don't have to do like the for or with open, whatever the CSV file is as reader and


00:14:18.740 --> 00:14:23.180
like all this, like that whole pattern you just do, you know, in pandas, you would just


00:14:23.180 --> 00:14:30.160
do pandas read CSV or in Elon, you would say Elon CSV to Elon, and then it just loads that


00:14:30.160 --> 00:14:31.380
information into your database.


00:14:31.380 --> 00:14:32.380
No questions asked.


00:14:32.380 --> 00:14:33.380
It just goes.


00:14:33.380 --> 00:14:34.380
That's super cool.


00:14:34.380 --> 00:14:35.380
Yeah.


00:14:35.380 --> 00:14:38.020
So instead of trying to work with it directly with pandas, you put, you put it into the


00:14:38.020 --> 00:14:41.740
database so you can do queries and reporting and stuff like that driven off of it.


00:14:41.740 --> 00:14:43.380
Exactly. Instead of like...


00:14:43.380 --> 00:14:44.940
Because you work at a database company.


00:14:44.940 --> 00:14:48.380
All of the mutations that you need to find exactly what you need,


00:14:48.380 --> 00:14:51.420
you just do a general elastic search query,


00:14:51.420 --> 00:14:54.220
and then it shows you the information you're looking for,


00:14:54.220 --> 00:14:57.340
but in like a data frame format, which is sweet.


00:14:57.340 --> 00:14:59.420
And I've used that for a couple of projects.


00:14:59.420 --> 00:15:01.820
I built a tool in React.


00:15:01.820 --> 00:15:03.340
Sorry, I know it's a Python podcast,


00:15:03.340 --> 00:15:06.820
but it's called diversityorgs.tech.


00:15:06.820 --> 00:15:09.380
I do a lot of diversity work in my job,


00:15:09.380 --> 00:15:12.660
connecting with organizations that work with underrepresented folks.


00:15:12.660 --> 00:15:18.660
And this has been a way for me to collect, like, I think at this point, like


00:15:18.660 --> 00:15:23.900
over 500 different organizations that work with underrepresented folks in tech


00:15:23.900 --> 00:15:27.900
and put it in like its own little mini search engine, its own like small meetup


00:15:27.900 --> 00:15:29.860
and updating it.


00:15:29.860 --> 00:15:33.940
I actually just use Flask, which I think is funny because you have that is not it.


00:15:33.940 --> 00:15:34.860
I wish that was it.


00:15:34.860 --> 00:15:37.180
Diversity orgs.tech.


00:15:38.700 --> 00:15:42.620
I was like, their design work much better than mine.


00:15:42.620 --> 00:15:43.420
There we go.


00:15:43.420 --> 00:15:43.920
Yeah.


00:15:43.920 --> 00:15:45.020
Your message is great.


00:15:45.020 --> 00:15:45.980
Your message is great.


00:15:45.980 --> 00:15:46.780
Clean and simple.


00:15:46.780 --> 00:15:47.620
I like it.


00:15:47.620 --> 00:15:49.140
Yeah.


00:15:49.140 --> 00:15:50.740
So you can just search for it.


00:15:50.740 --> 00:15:53.900
But yeah, it's cool that you can just


00:15:53.900 --> 00:15:55.940
use things like Flask on the back end


00:15:55.940 --> 00:15:57.700
and build your own little admin portal.


00:15:57.700 --> 00:15:59.900
And you don't have to worry about spinning up a server


00:15:59.900 --> 00:16:02.100
or being worried that someone's going


00:16:02.100 --> 00:16:04.220
to try to brute force your back end or anything.


00:16:04.220 --> 00:16:08.260
You're just like, oh, let me start my Flask engine, run it.


00:16:08.260 --> 00:16:10.700
it's sending REST API calls to Elasticsearch


00:16:10.700 --> 00:16:14.300
and then it just works, which is great.


00:16:14.300 --> 00:16:17.120
- Yeah, yeah, that's really cool.


00:16:17.120 --> 00:16:21.220
I think this whole diversity org tech place is really cool.


00:16:21.220 --> 00:16:26.220
So the idea is basically you're trying to create groups


00:16:26.220 --> 00:16:29.100
that people can reach out to you


00:16:29.100 --> 00:16:31.580
because if you see people who like you,


00:16:31.580 --> 00:16:34.300
you feel way more like you should be part


00:16:34.300 --> 00:16:35.540
of that community, right?


00:16:35.540 --> 00:16:38.680
way more part of technology or whatever.


00:16:38.680 --> 00:16:39.520
- Yeah, just try it out.


00:16:39.520 --> 00:16:42.040
Just type in Portland and hit search and see what comes up.


00:16:42.040 --> 00:16:44.080
Like there should be groups.


00:16:44.080 --> 00:16:46.400
In Portland, there'll definitely be groups.


00:16:46.400 --> 00:16:47.240
- Yeah. Oh yeah.


00:16:47.240 --> 00:16:49.500
There's the Pilates, Blackstone Technologies,


00:16:49.500 --> 00:16:50.880
Django Girls, Girls in Tech.


00:16:50.880 --> 00:16:51.720
- There's more.


00:16:51.720 --> 00:16:52.540
There's more.


00:16:52.540 --> 00:16:53.380
- Oh yeah.


00:16:53.380 --> 00:16:54.220
- Yeah, there you go.


00:16:54.220 --> 00:16:55.040
- Oh yeah. Look at that.


00:16:55.040 --> 00:16:55.880
- Okay, thank you.


00:16:55.880 --> 00:16:56.720
- Yeah, wait a minute.


00:16:56.720 --> 00:16:57.540
- This is a FML scan.


00:16:57.540 --> 00:16:59.040
- Less than UI.


00:16:59.040 --> 00:17:00.580
So this is all running React,


00:17:00.580 --> 00:17:01.960
but the way that I update this,


00:17:01.960 --> 00:17:03.800
like if someone messaged me and says,


00:17:03.800 --> 00:17:06.880
"Hey, I want my organization added to this list."


00:17:06.880 --> 00:17:09.760
I just have a Flask site that I just spin up locally


00:17:09.760 --> 00:17:11.280
on my machine that sends all that,


00:17:11.280 --> 00:17:13.120
like it's just a quick form.


00:17:13.120 --> 00:17:16.040
And then it sends all the data to my server


00:17:16.040 --> 00:17:19.680
in Elastic Cloud, and then it's up on the website instantly.


00:17:19.680 --> 00:17:24.000
- I was just gonna point out one of the powerful things


00:17:24.000 --> 00:17:26.380
that you can do that had only occurred to me much later


00:17:26.380 --> 00:17:29.040
than I wish it had done, is a very fast way


00:17:29.040 --> 00:17:31.040
to get a GUI tool for something you're only ever going


00:17:31.040 --> 00:17:33.360
to use for yourself is something like Flask or Django


00:17:33.360 --> 00:17:34.460
or something like that.


00:17:34.460 --> 00:17:36.260
It doesn't have to be pretty, it doesn't have to look good.


00:17:36.260 --> 00:17:39.180
The only place it's ever going to run is on your own machine


00:17:39.180 --> 00:17:42.260
but you get all the HTML GUI stuff basically for free.


00:17:42.260 --> 00:17:43.220
You're not writing anything.


00:17:43.220 --> 00:17:45.180
You're not writing a desktop back for buttons to click.


00:17:45.180 --> 00:17:46.460
You're just firing up some HTML.


00:17:46.460 --> 00:17:48.800
So that's actually quite a useful thing to do.


00:17:48.800 --> 00:17:50.940
You don't have to worry about deployment.


00:17:50.940 --> 00:17:52.220
There's no security issues, et cetera.


00:17:52.220 --> 00:17:54.060
It never leaves your hard drive.


00:17:54.060 --> 00:17:55.140
- Yeah, yeah, absolutely.


00:17:55.140 --> 00:17:57.980
You know, another one that's pretty good is Anvil.


00:17:57.980 --> 00:17:58.820
- Yeah.


00:17:58.820 --> 00:18:01.340
- In terms of, I just kind of want something,


00:18:01.340 --> 00:18:02.580
probably I'm misspelling.


00:18:02.580 --> 00:18:07.500
We're watching my Google.


00:18:07.500 --> 00:18:09.500
I know. Yeah, there we go.


00:18:09.500 --> 00:18:13.700
I thought that's what I typed, but that's okay.


00:18:13.700 --> 00:18:20.300
So it's interesting because you write Python even on the front end and it runs in your browser,


00:18:20.300 --> 00:18:22.500
but it takes care of the hosting and whatnot.


00:18:22.500 --> 00:18:23.500
You don't have to share it publicly.


00:18:23.500 --> 00:18:26.500
So it's kind of, you know, if you want to have a semi-hosted one,


00:18:26.500 --> 00:18:27.800
that's also a pretty good option.


00:18:27.800 --> 00:18:29.600
But yeah, Kim, you're right.


00:18:29.600 --> 00:18:32.000
that if you're looking for a UI,


00:18:32.000 --> 00:18:34.720
sometimes the right thing might be just a private Flask app


00:18:34.720 --> 00:18:36.680
for you, or maybe just for like your people


00:18:36.680 --> 00:18:38.400
who are gonna work with it behind the scenes.


00:18:38.400 --> 00:18:39.480
It doesn't have to be pretty at that point.


00:18:39.480 --> 00:18:40.760
- Exactly, yeah, it doesn't have to be pretty.


00:18:40.760 --> 00:18:41.760
You're not selling it or anything,


00:18:41.760 --> 00:18:44.120
as long as the buttons are in the right places.


00:18:44.120 --> 00:18:46.000
Or for that matter, if it's only people you know,


00:18:46.000 --> 00:18:47.040
they can ask you, what do I do?


00:18:47.040 --> 00:18:48.160
And you can tell them.


00:18:48.160 --> 00:18:50.640
That doesn't have to even be particularly attractive


00:18:50.640 --> 00:18:52.800
or easy to use if it gets the job done.


00:18:52.800 --> 00:18:54.760
- Yeah, absolutely, absolutely.


00:18:54.760 --> 00:18:56.480
Very cool, all right, thanks, Jay.


00:18:56.480 --> 00:18:57.440
That was a good one.


00:18:57.440 --> 00:19:00.340
Ruberts, what's the first one you want to share?


00:19:00.340 --> 00:19:03.580
- First one I want to share is an app called Demolisher.


00:19:03.580 --> 00:19:08.580
And I made this because when I'm writing songs,


00:19:08.580 --> 00:19:12.500
I very often like to Frankenstein unrelated bits together.


00:19:12.500 --> 00:19:17.260
That ends up sounding like a coherent song,


00:19:17.260 --> 00:19:21.500
but for me, it feels like the song feels fresher


00:19:21.500 --> 00:19:24.060
when I have these unrelated bits,


00:19:24.060 --> 00:19:25.540
where when I was writing each bit,


00:19:25.540 --> 00:19:27.620
it was like, this is the only thing in my mind.


00:19:27.620 --> 00:19:29.380
I'm just making this as good as possible.


00:19:29.380 --> 00:19:30.820
So I stick a few of those together,


00:19:30.820 --> 00:19:32.740
and it turns into a song.


00:19:32.740 --> 00:19:36.020
However, when I'm looking for a bit


00:19:36.020 --> 00:19:38.660
to attach to the previous bit, I usually


00:19:38.660 --> 00:19:40.620
have some idea of what I'm looking for.


00:19:40.620 --> 00:19:43.900
Right, it can't just be a random combination of different--


00:19:43.900 --> 00:19:47.380
Yeah, even if it's a very contrasting bit,


00:19:47.380 --> 00:19:50.260
it's still something somewhat specific.


00:19:50.260 --> 00:19:54.300
So I don't want to have to look through all 1,500


00:19:54.300 --> 00:19:56.300
of my old unused demos.


00:19:56.300 --> 00:20:00.260
So I needed some kind of filter.


00:20:00.260 --> 00:20:02.600
There's a Windows app called MP3 tag,


00:20:02.600 --> 00:20:07.600
which I highly recommend for tagging music files.


00:20:07.600 --> 00:20:11.020
And there's a search bar in there.


00:20:11.020 --> 00:20:14.820
And I'm not sure exactly what the language is


00:20:14.820 --> 00:20:18.060
for that search, but it's some kind of SQL looking thing.


00:20:18.060 --> 00:20:21.840
But those, I would write these filter queries


00:20:21.840 --> 00:20:26.600
and they'd get quite complicated and long


00:20:26.600 --> 00:20:29.300
and like all these nests with parentheses.


00:20:29.300 --> 00:20:32.160
There's the filter bar down at the very bottom.


00:20:32.160 --> 00:20:33.000
- Gotcha.


00:20:33.000 --> 00:20:34.440
- And I think I was using this app


00:20:34.440 --> 00:20:36.200
in a way that most people weren't


00:20:36.200 --> 00:20:39.460
because my filters were just gigantic and unmanageable.


00:20:39.460 --> 00:20:43.800
So I wrote this app called Demolisher,


00:20:43.800 --> 00:20:48.800
which is a Tkinter window with a bunch of switches


00:20:49.660 --> 00:20:54.660
that you set all the switches and then you hit filter


00:20:54.660 --> 00:20:59.360
and it will copy this long string


00:20:59.360 --> 00:21:01.360
into that filter bar there.


00:21:01.360 --> 00:21:04.280
And you end up with the demos


00:21:04.280 --> 00:21:07.880
that only match the criteria you're looking for.


00:21:07.880 --> 00:21:09.320
- Oh, how interesting.


00:21:09.320 --> 00:21:13.440
So it basically develops this,


00:21:13.440 --> 00:21:17.920
the SQL query type thing for this app.


00:21:17.920 --> 00:21:19.680
Is it OK if I put it up on the screen?


00:21:19.680 --> 00:21:20.800
Do you mind?


00:21:20.800 --> 00:21:21.880
Is this just a screenshot?


00:21:21.880 --> 00:21:22.840
Oh, the screenshot?


00:21:22.840 --> 00:21:24.720
Oh, yeah, sure.


00:21:24.720 --> 00:21:25.920
There we go.


00:21:25.920 --> 00:21:29.800
I don't know if you can see, but there's just


00:21:29.800 --> 00:21:30.880
a bunch of switches here.


00:21:30.880 --> 00:21:32.640
So on the far left--


00:21:32.640 --> 00:21:33.800
Tell us about the switches.


00:21:33.800 --> 00:21:35.760
I'm not very musical.


00:21:35.760 --> 00:21:37.680
So you've got to help me out here.


00:21:37.680 --> 00:21:40.800
On the far right, this is pretty easy to understand.


00:21:40.800 --> 00:21:42.920
It's just a range of BPM.


00:21:42.920 --> 00:21:47.480
So I often, I'm looking for a pretty specific BPM


00:21:47.480 --> 00:21:49.920
for a bit to Frankenstein in.


00:21:49.920 --> 00:21:53.800
And then below the BPM range,


00:21:53.800 --> 00:21:56.880
you see like a more human readable version


00:21:56.880 --> 00:22:01.880
of the filter string that this app has produced.


00:22:01.880 --> 00:22:05.640
So then each column to the left there


00:22:05.640 --> 00:22:07.720
is a different parameter.


00:22:07.720 --> 00:22:10.960
So on the far left, I can select which folder


00:22:10.960 --> 00:22:16.320
I want to select from or not select from.


00:22:16.320 --> 00:22:18.360
And then whether the melody starts--


00:22:18.360 --> 00:22:21.240
>>Victor: So you've got things like feel, section,


00:22:21.240 --> 00:22:24.400
masterpiece, mode, melody, all that kind of stuff.


00:22:24.400 --> 00:22:25.020
>>Richard: Yeah.


00:22:25.020 --> 00:22:27.800
Some of these you guys would probably recognize,


00:22:27.800 --> 00:22:30.040
but others are just particular to me.


00:22:30.040 --> 00:22:33.440
But they're different tags I put on my demo.


00:22:33.440 --> 00:22:35.240
Genesis, for example, on the far right,


00:22:35.240 --> 00:22:37.600
that's how I started writing the song,


00:22:37.600 --> 00:22:40.280
whether I started on a piano or started with a lyric


00:22:40.280 --> 00:22:43.560
within PNO or just started with a lyric and so on.


00:22:43.560 --> 00:22:46.960
Because I found that those are useful tags.


00:22:46.960 --> 00:22:49.560
They kind of set the direction of how


00:22:49.560 --> 00:22:52.520
that little composition is going to go.


00:22:52.520 --> 00:22:56.400
This reminds me of almost like a Moog synthesizer,


00:22:56.400 --> 00:22:58.640
like those giant patch panels you see in studios.


00:22:58.640 --> 00:23:00.720
You're just like, I need to find the perfect sound.


00:23:00.720 --> 00:23:02.920
Let me just unplug this wire, plug it in over here,


00:23:02.920 --> 00:23:03.840
and see what happens.


00:23:03.840 --> 00:23:06.560
And then it's like that, but developing


00:23:06.560 --> 00:23:10.200
like a query for the right track that you have.


00:23:10.200 --> 00:23:11.280
- That's awesome.


00:23:11.280 --> 00:23:13.480
- Of your own stuff as well and intensely personal


00:23:13.480 --> 00:23:15.520
because you built it exactly to your needs.


00:23:15.520 --> 00:23:16.520
So very neat.


00:23:16.520 --> 00:23:21.520
- Yeah, and it's quite easy to add or remove parameters.


00:23:21.520 --> 00:23:26.640
There's a file in this package called sections


00:23:26.640 --> 00:23:31.160
and each section is one of these columns.


00:23:31.160 --> 00:23:33.000
So it's basically just a dictionary.


00:23:33.000 --> 00:23:35.000
- That is so cool.


00:23:35.000 --> 00:23:36.280
- That's better defined, yeah.


00:23:36.280 --> 00:23:37.120
Excellent.


00:23:37.120 --> 00:23:39.000
- I see you just added an interest.


00:23:39.000 --> 00:23:42.920
- I love that there's a feel there.


00:23:42.920 --> 00:23:45.240
It's like, I would add fiddly to it.


00:23:45.240 --> 00:23:47.000
(laughing)


00:23:47.000 --> 00:23:48.860
That's how it always feels.


00:23:48.860 --> 00:23:53.720
- So yeah, I just, I think you had the poetry guy


00:23:53.720 --> 00:23:57.240
on the podcast, so I just tried to start converting


00:23:57.240 --> 00:23:59.300
a bunch of these to real packages,


00:23:59.300 --> 00:24:01.640
and then I could put them up on GitHub


00:24:01.640 --> 00:24:05.680
so other mp3 tag users could download this


00:24:05.680 --> 00:24:08.120
and use it themselves.


00:24:08.120 --> 00:24:09.320
- Oh yeah, that'd be really neat.


00:24:09.320 --> 00:24:12.160
Maybe they can add some extra features and stuff as well.


00:24:12.160 --> 00:24:13.000
- Yeah.


00:24:13.000 --> 00:24:15.680
- Yeah, I love this.


00:24:15.680 --> 00:24:17.440
I love how you brought all this stuff together


00:24:17.440 --> 00:24:21.000
and it's just, it's so exactly what you need


00:24:21.000 --> 00:24:22.200
to make your life better.


00:24:22.200 --> 00:24:26.600
Like you said, you had thousands of these demos


00:24:26.600 --> 00:24:28.040
and these pieces you wanted to bring together


00:24:28.040 --> 00:24:31.040
and it's just such a challenging format to combine


00:24:31.040 --> 00:24:34.240
and then here's how you just bring it all together, right?


00:24:34.240 --> 00:24:37.000
- Yeah, so typically I'll end up with a,


00:24:37.000 --> 00:24:41.160
it'll return about 10 demos that are very likely to work


00:24:41.160 --> 00:24:43.000
for what I'm looking for.


00:24:43.000 --> 00:24:44.960
And then I just pick my favorite one.


00:24:44.960 --> 00:24:45.800
- Yeah, fantastic.


00:24:45.800 --> 00:24:47.720
Can you share any of the songs that maybe you sort of


00:24:47.720 --> 00:24:51.400
inspired, you created through this thing?


00:24:51.400 --> 00:24:58.200
- Well, I think probably not anything you guys would know


00:24:58.200 --> 00:25:03.800
'cause this is only, I've only been using this


00:25:03.800 --> 00:25:10.760
last few years and sadly none of those songs have become massively well-known.


00:25:10.760 --> 00:25:14.120
So like if you go back to the old Weezer classics,


00:25:14.120 --> 00:25:17.560
I was cutting and pasting but I didn't have 1500 demos


00:25:17.560 --> 00:25:22.360
back then. It was just, you know, I had a cassette tape I could look through.


00:25:22.360 --> 00:25:27.080
Yeah, yeah, awesome. At the live stream,


00:25:27.080 --> 00:25:31.560
Zachary the Hacker, nice username there, said if I use this and it made us


00:25:31.560 --> 00:25:34.060
and came up with a search and it didn't return a sound,


00:25:34.060 --> 00:25:36.720
I couldn't help but to see that as a challenge to myself


00:25:36.720 --> 00:25:39.720
to come up with a sound that matched that query.


00:25:39.720 --> 00:25:40.760
- That's a great idea.


00:25:40.760 --> 00:25:44.300
- Put in random things and see what comes up


00:25:44.300 --> 00:25:46.420
and then fill those searches.


00:25:46.420 --> 00:25:48.120
- Yeah, absolutely.


00:25:48.120 --> 00:25:49.220
- If I could just,


00:25:49.220 --> 00:25:51.500
one of the things I think is very kind of,


00:25:51.500 --> 00:25:53.260
very cool about your approach, Rivers,


00:25:53.260 --> 00:25:54.700
particularly in a small tool approach,


00:25:54.700 --> 00:25:55.700
is you didn't then sit down


00:25:55.700 --> 00:25:58.820
and write yourself a replacement MP3 file player


00:25:58.820 --> 00:25:59.660
or what have you.


00:25:59.660 --> 00:26:00.940
You're quite happy with the tool you had,


00:26:00.940 --> 00:26:02.740
that once you have the filter query,


00:26:02.740 --> 00:26:04.020
you're quite happy with the existing tool


00:26:04.020 --> 00:26:05.820
to find them and play them and so forth.


00:26:05.820 --> 00:26:08.580
So you just want yourself a filter maker, basically.


00:26:08.580 --> 00:26:10.100
And there can be a strong temptation,


00:26:10.100 --> 00:26:11.780
or at least I would be tempted to go too far


00:26:11.780 --> 00:26:13.700
and then throw in file playing


00:26:13.700 --> 00:26:15.060
and media playback and so forth.


00:26:15.060 --> 00:26:16.500
And you don't need any of that.


00:26:16.500 --> 00:26:17.340
You've got a tool for that.


00:26:17.340 --> 00:26:19.220
You just need something to make you a filter.


00:26:19.220 --> 00:26:20.220
Yeah.


00:26:20.220 --> 00:26:21.280
- Yeah, a good point.


00:26:21.280 --> 00:26:24.620
- Yeah, I was talking to Matthew Rocklin


00:26:24.620 --> 00:26:26.980
from Dask and Coiled a little while ago,


00:26:26.980 --> 00:26:31.140
And he said that they have this interesting philosophy.


00:26:31.140 --> 00:26:33.380
I'll probably misquote it just a little bit,


00:26:33.380 --> 00:26:36.380
but something of the principle of minimum


00:26:36.380 --> 00:26:38.340
or minimal innovation.


00:26:38.340 --> 00:26:40.680
Like what is the least thing we can introduce?


00:26:40.680 --> 00:26:43.240
And what other pieces could we combine


00:26:43.240 --> 00:26:45.340
that everyone is already using and knowing about?


00:26:45.340 --> 00:26:48.020
And yeah, I think this sort of matches that.


00:26:48.020 --> 00:26:51.380
- Oh, so I should add that one of the packages I used


00:26:51.380 --> 00:26:54.500
then is called pywinauto.


00:26:54.500 --> 00:26:55.420
- Okay.


00:26:55.420 --> 00:26:56.380
- Yeah, what that did-


00:26:56.380 --> 00:26:57.460
- Yeah, use that.


00:26:57.460 --> 00:26:59.940
- Yeah, when I start Demolisher,


00:26:59.940 --> 00:27:01.900
the first thing it does is it,


00:27:01.900 --> 00:27:05.700
PyWin Auto opens up the MP3 tag Windows app.


00:27:05.700 --> 00:27:09.860
And then when I'm done with the creating the filter,


00:27:09.860 --> 00:27:12.580
PyWin Auto copies and pastes it


00:27:12.580 --> 00:27:14.940
into the filter bar on MP3 tag.


00:27:14.940 --> 00:27:17.420
- Oh, how cool.


00:27:17.420 --> 00:27:20.140
Yeah, so basically the use case is


00:27:20.140 --> 00:27:22.980
you import the application from it.


00:27:22.980 --> 00:27:26.260
You can tell it to start some EXE on Windows,


00:27:26.260 --> 00:27:29.500
and then just tell it to start typing keys into it.


00:27:29.500 --> 00:27:31.500
Yeah, that's awesome.


00:27:31.500 --> 00:27:32.660
It's a really cool way to combine it.


00:27:32.660 --> 00:27:33.500
Yeah.


00:27:33.500 --> 00:27:36.440
Yeah, fantastic.


00:27:36.440 --> 00:27:39.260
- If I can just maybe make a note,


00:27:39.260 --> 00:27:40.780
you've reminded me about PyWin Auto


00:27:40.780 --> 00:27:43.080
and I'd forgotten about a career,


00:27:43.080 --> 00:27:46.440
an episode from my career of 10 years plus ago.


00:27:46.440 --> 00:27:49.340
PyWin Auto is also very useful if anybody's looking for,


00:27:49.340 --> 00:27:51.580
well, exactly what it does, Windows automation.


00:27:51.580 --> 00:27:53.920
And the kind of thing I'm thinking of is that


00:27:53.920 --> 00:27:56.320
more than once in my previous work,


00:27:56.320 --> 00:28:00.280
we got tools custom made by the supplier,


00:28:00.280 --> 00:28:01.520
a particular vendor,


00:28:01.520 --> 00:28:03.520
in that somebody was asked to knock together in a day.


00:28:03.520 --> 00:28:05.120
So it was terrible to use.


00:28:05.120 --> 00:28:07.120
You had to click 50 buttons to get what you wanted.


00:28:07.120 --> 00:28:08.440
It didn't remember any settings.


00:28:08.440 --> 00:28:09.340
Every time you fired it up,


00:28:09.340 --> 00:28:11.000
you had to click all the boxes again


00:28:11.000 --> 00:28:13.120
for exactly what you need for your output.


00:28:13.120 --> 00:28:14.400
And it also means,


00:28:14.400 --> 00:28:17.520
in factory work, you want it as automated as possible.


00:28:17.520 --> 00:28:18.880
You want this all to be running


00:28:18.880 --> 00:28:20.880
as part of a bigger stream of work.


00:28:20.880 --> 00:28:22.320
And you can't really say,


00:28:22.320 --> 00:28:24.120
well, do all these automated tasks,


00:28:24.120 --> 00:28:25.520
then send somebody to the computer,


00:28:25.520 --> 00:28:28.960
take this piece of paper, click these five or 15 sections,


00:28:28.960 --> 00:28:30.160
and then take the resulting file.


00:28:30.160 --> 00:28:32.520
And Pywin Auto was fantastic for that kind of thing.


00:28:32.520 --> 00:28:34.520
'Cause you actually wrote some Python,


00:28:34.520 --> 00:28:37.080
basically remembered what the tool should be set to do,


00:28:37.080 --> 00:28:39.400
fires the tool up, makes those settings,


00:28:39.400 --> 00:28:41.800
runs it and grabs the resulting file.


00:28:41.800 --> 00:28:43.120
- That is, yeah, that's super neat.


00:28:43.120 --> 00:28:45.120
Because if you wanna automate something on the web,


00:28:45.120 --> 00:28:46.400
you could use something like Selenium.


00:28:46.400 --> 00:28:49.640
But if you wanna automate like a custom VB6 app


00:28:49.640 --> 00:28:51.040
that somebody wrote 20 years ago,


00:28:51.040 --> 00:28:52.120
there's no API for that.


00:28:52.120 --> 00:28:53.200
- Well, exactly, yeah.


00:28:53.200 --> 00:28:54.440
And when you open these tools up,


00:28:54.440 --> 00:28:57.560
there's things like, you need to tick a box 27


00:28:57.560 --> 00:29:00.200
and drop down to this.


00:29:00.200 --> 00:29:01.680
It's like, they haven't been designed


00:29:01.680 --> 00:29:03.960
to be particularly well-written,


00:29:03.960 --> 00:29:05.520
but the PyWinAuto doesn't care.


00:29:05.520 --> 00:29:09.560
It's happy enough to use dodgy variable names and so forth.


00:29:09.560 --> 00:29:10.440
- Yeah, for sure.


00:29:10.440 --> 00:29:12.160
Yeah, go ahead, Rivers.


00:29:12.160 --> 00:29:15.680
- A lot of folks, their Python start


00:29:15.680 --> 00:29:19.200
doing little like computer automation bits like that.


00:29:19.200 --> 00:29:21.360
So I think having those tools,


00:29:21.360 --> 00:29:24.040
Like one, like you said, starting out,


00:29:24.040 --> 00:29:25.600
it's never going to be perfect.


00:29:25.600 --> 00:29:28.680
I mean, I think probably the hardest part is


00:29:28.680 --> 00:29:30.440
when you show people code you've written


00:29:30.440 --> 00:29:31.720
and they go, that's not Pythonic.


00:29:31.720 --> 00:29:34.680
Well, for stuff like this, it's probably not going to be


00:29:34.680 --> 00:29:36.880
because you're not working in Python.


00:29:36.880 --> 00:29:39.460
You're just using Python to work in something else.


00:29:39.460 --> 00:29:42.040
And it allows people to make messy code


00:29:42.040 --> 00:29:44.820
and just figure it out and hack at it.


00:29:44.820 --> 00:29:47.840
And then over time, you just get better hacking at it


00:29:47.840 --> 00:29:50.680
until your code does start to look more Pythonic.


00:29:50.680 --> 00:29:52.040
- Yeah, on one hand you have Pythonic,


00:29:52.040 --> 00:29:53.620
on the other hand is I pressed a button


00:29:53.620 --> 00:29:54.860
and it happened automatically.


00:29:54.860 --> 00:29:56.700
So I win.


00:29:56.700 --> 00:29:58.660
- I think that's one of the toughest parts


00:29:58.660 --> 00:30:00.260
about getting people to understand,


00:30:00.260 --> 00:30:02.160
how to get into Python is that you don't really know


00:30:02.160 --> 00:30:03.500
the little tasks that you can do,


00:30:03.500 --> 00:30:05.400
that you can solve with it until you get in


00:30:05.400 --> 00:30:07.220
and you can do a few things.


00:30:07.220 --> 00:30:09.660
So little things like that open the door for you.


00:30:09.660 --> 00:30:12.540
- Yeah, yeah, just like a comment on live stream, Brian.


00:30:12.540 --> 00:30:13.940
So never heard of Pywin Auto,


00:30:13.940 --> 00:30:17.460
this has just opened a lot of quasi RPA doors for me.


00:30:17.460 --> 00:30:19.980
Fantastic.


00:30:19.980 --> 00:30:22.420
So I wanted to talk about one as well.


00:30:22.420 --> 00:30:24.700
So I'm gonna throw out this one that I have to do.


00:30:24.700 --> 00:30:26.820
So over on the course website,


00:30:26.820 --> 00:30:29.540
we have literally thousands of videos.


00:30:29.540 --> 00:30:31.180
And these are MP4s.


00:30:31.180 --> 00:30:32.780
There's a whole bunch of really cool automation


00:30:32.780 --> 00:30:34.800
about like geo distributed in them


00:30:34.800 --> 00:30:38.420
and all sorts of stuff that I wrote during a break


00:30:38.420 --> 00:30:42.100
at my hotel at PyCon one year when I got tired,


00:30:42.100 --> 00:30:44.340
I needed just a break from humanity.


00:30:44.340 --> 00:30:46.820
But the thing I wanted to highlight is I ended up


00:30:46.820 --> 00:30:49.580
with a folder full of folders,


00:30:49.580 --> 00:30:52.220
full of hundreds of MP4s.


00:30:52.220 --> 00:30:53.500
And I need to come up with some way


00:30:53.500 --> 00:30:56.540
to import those into the database.


00:30:56.540 --> 00:31:00.060
And I was going through,


00:31:00.060 --> 00:31:01.700
figure out how long is this video?


00:31:01.700 --> 00:31:02.900
I'd go in my Mac finder,


00:31:02.900 --> 00:31:05.140
so it's three minutes and 20 seconds.


00:31:05.140 --> 00:31:05.980
So what is that?


00:31:05.980 --> 00:31:07.420
That's 200 seconds.


00:31:07.420 --> 00:31:08.900
And I would put that into the database


00:31:08.900 --> 00:31:09.860
and the file name is this,


00:31:09.860 --> 00:31:11.140
and then I would do it again and again.


00:31:11.140 --> 00:31:13.500
And after a couple of those and a couple of mistakes


00:31:13.500 --> 00:31:15.660
and similar stuff with the podcast,


00:31:15.660 --> 00:31:17.340
I would just go crazy.


00:31:17.340 --> 00:31:18.420
I'm like, I can't take this.


00:31:18.420 --> 00:31:19.460
Maybe I have to hire somebody


00:31:19.460 --> 00:31:21.000
'cause I'm making too many mistakes


00:31:21.000 --> 00:31:23.820
and it's not useful for me to spend so much time


00:31:23.820 --> 00:31:26.380
converting minutes and seconds to seconds


00:31:26.380 --> 00:31:28.500
and trying to do this.


00:31:28.500 --> 00:31:30.340
So what I ended up doing is writing a little script


00:31:30.340 --> 00:31:33.620
that I just go to a directory, type JSONify the videos.


00:31:33.620 --> 00:31:35.020
I get a giant JSON document


00:31:35.020 --> 00:31:37.660
that I can just import into MongoDB and boom.


00:31:37.660 --> 00:31:39.300
And it goes through and it finds,


00:31:39.300 --> 00:31:41.980
it does two things that are really fun.


00:31:41.980 --> 00:31:44.820
One is it goes through and it uses


00:31:44.820 --> 00:31:46.580
a little bit like what Rivers was talking about,


00:31:46.580 --> 00:31:48.500
uses FF probe, not the same thing,


00:31:48.500 --> 00:31:51.160
but it goes in and figures out information


00:31:51.160 --> 00:31:54.500
about the audio stream or the video stream.


00:31:54.500 --> 00:31:56.860
And it'll give me back the time and information.


00:31:56.860 --> 00:32:00.520
And the way it works is I'm not using some API for this.


00:32:00.520 --> 00:32:02.700
I'm actually using sub process.


00:32:02.700 --> 00:32:05.580
And then there's an output format for JSON.


00:32:05.580 --> 00:32:07.340
And I just capture the standard out


00:32:07.340 --> 00:32:09.500
and then read it into a Python dictionary.


00:32:09.500 --> 00:32:10.980
And then boom, I have all that information.


00:32:10.980 --> 00:32:13.760
It's as if FFmpeg had an API for Python.


00:32:13.760 --> 00:32:16.760
So that's really fun.


00:32:16.760 --> 00:32:19.320
And then I want to not bother to scroll back and copy it.


00:32:19.320 --> 00:32:22.560
So I use Piperclip, P-Y-P-E-R.


00:32:22.560 --> 00:32:24.320
- I was wondering how you were going to say that.


00:32:24.320 --> 00:32:25.160
- Yeah.


00:32:25.160 --> 00:32:26.000
- I've used it a lot and I've never known


00:32:26.000 --> 00:32:27.200
quite how to pronounce it.


00:32:27.200 --> 00:32:29.400
- And so then I just, I generate this huge thing,


00:32:29.400 --> 00:32:32.240
this composition of all these video files.


00:32:32.240 --> 00:32:35.080
And then I just use Piperclip to copy it to the clipboard.


00:32:35.080 --> 00:32:37.480
And then I just paste it in to the tool


00:32:37.480 --> 00:32:40.720
that is editing the JSON and like does all the important


00:32:40.720 --> 00:32:42.760
stuff and boom, off it goes.


00:32:42.760 --> 00:32:45.840
So real simple, but this thing was like,


00:32:45.840 --> 00:32:46.680
it's no big deal to say,


00:32:46.680 --> 00:32:48.920
I just wanna sort of get the right file name


00:32:48.920 --> 00:32:52.000
relative to each another and get the time and convert it.


00:32:52.000 --> 00:32:54.320
But boy, did it save me a lot of frustration.


00:32:54.320 --> 00:32:57.480
So I wanna recommend those two things, especially Piperclip.


00:32:57.480 --> 00:32:58.440
That's a cool one.


00:32:58.440 --> 00:33:02.040
- Yeah, Piperclip is very nifty.


00:33:02.040 --> 00:33:03.520
The other thing I would just pick up


00:33:03.520 --> 00:33:05.120
from what you said there, Michael,


00:33:05.120 --> 00:33:07.160
is the point that you don't have to use Python


00:33:07.160 --> 00:33:08.520
to solve all the problems.


00:33:08.520 --> 00:33:10.320
If Fprobe exists, it's perfectly good


00:33:10.320 --> 00:33:12.040
at getting you the data you want.


00:33:12.040 --> 00:33:19.040
Subprocess is a perfectly reasonable way, you know, let the expert tool get you to do the difficult thing.


00:33:19.040 --> 00:33:26.040
If it probes already on your system, it knows how to get you the data you want, it can get you the data in a format you can use, just use it to do it.


00:33:26.040 --> 00:33:28.040
You don't have to write Python to do everything.


00:33:28.040 --> 00:33:34.040
There's lots of very useful tools out there that are literally using Python to glue three other tools together.


00:33:34.040 --> 00:33:36.040
And that's fine. That works perfectly.


00:33:36.040 --> 00:33:40.360
It works great. I'm sure you see this a lot in your world where there's a lot of sort of


00:33:40.360 --> 00:33:47.800
stuff that is more like desktop apps or CLI apps meant to automate things, but maybe there's not a


00:33:47.800 --> 00:33:52.920
programming API for Python to it. It's often that kind of thing, yeah.


00:33:52.920 --> 00:33:59.880
Yeah, yeah, fantastic. All right, I think we've looped around our group here. So,


00:33:59.880 --> 00:34:02.360
Rusty, you want to pick it up on the next thing you want to share?


00:34:02.360 --> 00:34:08.920
You almost gave me a good intro there. So yeah, so the next thing I needed to do at work was that I was going to automate was


00:34:08.920 --> 00:34:17.240
We have to do state reporting and it's this big year-long thing and it's basically what's caused my position to pop up all over the state


00:34:17.240 --> 00:34:21.960
So it's to keep giving the state information about our students and what's going on all the time


00:34:21.960 --> 00:34:24.520
And it was a horrible process that they decided to automate


00:34:24.520 --> 00:34:29.640
It used to be people filling out papers and sending it in and then all of a sudden it just became this


00:34:29.960 --> 00:34:33.080
computer thing and then computer people had to do it, but it really wasn't


00:34:33.080 --> 00:34:36.200
you know their their


00:34:36.200 --> 00:34:38.280
area of expertise before so


00:34:38.280 --> 00:34:44.500
We have to send our files in CSV files in and then they get checked and we get errors back


00:34:44.500 --> 00:34:46.420
Then we have to fix that and do whatever


00:34:46.420 --> 00:34:49.400
So we're given an automated way to do it


00:34:49.400 --> 00:34:53.520
So if we can get the files there overnight, we get the time slot and then we get everything back


00:34:53.520 --> 00:34:57.740
But eventually these errors creep in it's a flawed system and they know it's flawed


00:34:57.740 --> 00:35:01.420
but since it's a government agency, there's like nothing that could be done about it for


00:35:01.420 --> 00:35:06.060
multiple years or whatever, so we're looking something different to kind of combat that.


00:35:06.060 --> 00:35:11.100
Basically, I would get back errors every day and then I would have to go and hunt them down,


00:35:11.100 --> 00:35:16.380
but they wouldn't actually be errors, they'd be false errors. So yeah, so what you have to do is


00:35:16.380 --> 00:35:21.580
upload three sets of blanks and then boom, then you can start over and that now your files are


00:35:21.580 --> 00:35:25.980
clean and it can it can work. So what I just did was, I was like, well, we only have the one


00:35:25.980 --> 00:35:30.980
and I'm an automated spot, so I whipped up a little program in Selenium that goes in and


00:35:30.980 --> 00:35:35.980
submits my blanks every night at 9 o'clock at night.


00:35:35.980 --> 00:35:40.980
So I'm always working off of the clean files. And it's something I would never think of to do,


00:35:40.980 --> 00:35:45.980
but I could do. It's a bit like Kim's project. I could have done that, take five minutes at the end of every night


00:35:45.980 --> 00:35:50.980
and submitted my blanks and then let everything else happen afterwards.


00:35:50.980 --> 00:35:53.620
it just seemed really easy for me to go ahead.


00:35:53.620 --> 00:35:56.420
And it was a great puzzle to find out


00:35:56.420 --> 00:35:58.220
how to navigate around inside Selenium,


00:35:58.220 --> 00:36:01.940
inside this older looking website.


00:36:01.940 --> 00:36:03.580
But it was a great solution for me,


00:36:03.580 --> 00:36:05.220
and I don't really get the errors anymore.


00:36:05.220 --> 00:36:09.140
And because we can address things that day,


00:36:09.140 --> 00:36:12.100
it's really improved my job tremendously.


00:36:12.100 --> 00:36:15.780
So I'd say it takes, I would say it saves me hours a week,


00:36:15.780 --> 00:36:19.060
just being able to have this little tool automated.


00:36:19.060 --> 00:36:21.620
- That's fantastic, to just like reset the errors.


00:36:21.620 --> 00:36:25.020
So I would say Selenium is the Pi Win Auto,


00:36:25.020 --> 00:36:26.500
but for the web, right?


00:36:26.500 --> 00:36:28.900
The equivalent of that is such an amazing tool


00:36:28.900 --> 00:36:30.980
for that kind of automation.


00:36:30.980 --> 00:36:32.900
Because we've got things like Beautiful Soup,


00:36:32.900 --> 00:36:35.860
and we've got requests and Scrapy and stuff,


00:36:35.860 --> 00:36:38.500
but they don't so easily just go,


00:36:38.500 --> 00:36:41.060
let me go over here, log in,


00:36:41.060 --> 00:36:43.300
enter my username and password here,


00:36:43.300 --> 00:36:44.820
click the button called log in,


00:36:44.820 --> 00:36:46.860
then go to this page and then do that thing.


00:36:46.860 --> 00:36:48.180
It's amazing, right?


00:36:48.180 --> 00:36:50.500
I think that's definitely one of the secrets.


00:36:50.500 --> 00:36:52.160
- Yeah, that's really good.


00:36:52.160 --> 00:36:54.580
- I mean, that was one of the reasons why,


00:36:54.580 --> 00:36:57.020
you know, with my previous one, the dashboards,


00:36:57.020 --> 00:36:59.260
I had to create that web app,


00:36:59.260 --> 00:37:01.180
that simple web app to like upload stuff


00:37:01.180 --> 00:37:03.460
because at first, my first thought was like,


00:37:03.460 --> 00:37:05.180
well, I'll just go to the website


00:37:05.180 --> 00:37:07.400
and scrape it with like beautiful soup.


00:37:07.400 --> 00:37:09.900
But then when you start getting like JavaScript frameworks


00:37:09.900 --> 00:37:11.440
and things like that, they come into play,


00:37:11.440 --> 00:37:13.140
you're just, you can't get that data.


00:37:13.140 --> 00:37:13.980
Like it doesn't render all of it.


00:37:13.980 --> 00:37:15.260
- You're scraping like little curly braces


00:37:15.260 --> 00:37:16.980
that are just where the data would go, yeah.


00:37:16.980 --> 00:37:21.980
- I had one where, I cycle it my spare time.


00:37:21.980 --> 00:37:24.500
So they came out with these Velo Sambas from Adidas,


00:37:24.500 --> 00:37:25.980
which were like cycling shoes,


00:37:25.980 --> 00:37:27.180
but they look like soccer shoes,


00:37:27.180 --> 00:37:29.200
which I was like instantly in love with.


00:37:29.200 --> 00:37:30.940
They sold out within seconds


00:37:30.940 --> 00:37:32.380
every time they put a new batch up.


00:37:32.380 --> 00:37:33.540
So I actually use Selenium


00:37:33.540 --> 00:37:35.980
and I kind of automated a check every three hours


00:37:35.980 --> 00:37:37.780
to kind of go in and scrape it


00:37:37.780 --> 00:37:39.660
and send me an email if my size was in.


00:37:39.660 --> 00:37:41.660
And I eventually got them.


00:37:41.660 --> 00:37:42.500
But yeah, so,


00:37:42.500 --> 00:37:43.940
but it was a really cool little fun project


00:37:43.940 --> 00:37:46.100
that I just kind of used everything I learned in this


00:37:46.100 --> 00:37:48.140
to go ahead and take that out.


00:37:48.140 --> 00:37:49.860
- You should do that for a PlayStation.


00:37:49.860 --> 00:37:50.700
- Yeah.


00:37:50.700 --> 00:37:51.540
(laughs)


00:37:51.540 --> 00:37:52.380
- You wouldn't even say it.


00:37:52.380 --> 00:37:53.860
- They sold everything on a JavaScript,


00:37:53.860 --> 00:37:54.900
so it's really hard to get,


00:37:54.900 --> 00:37:56.620
so you couldn't do it with Beautiful Soup.


00:37:56.620 --> 00:37:58.300
I had to go in and grab it this way.


00:37:58.300 --> 00:37:59.380
- Yeah, yeah, very cool.


00:37:59.380 --> 00:38:01.500
Rivers, did you use Selenium when you were getting


00:38:01.500 --> 00:38:05.180
that schedule for your, when you were touring?


00:38:05.180 --> 00:38:09.660
- So I definitely use Selenium a lot.


00:38:09.660 --> 00:38:14.660
I think I use it in the app I'm going to mention next,


00:38:14.660 --> 00:38:16.740
I'm going to mention next, I think.


00:38:16.740 --> 00:38:18.660
So maybe I'll talk about that then.


00:38:18.660 --> 00:38:19.160
Yeah.


00:38:19.160 --> 00:38:20.620
Yeah, that's awesome.


00:38:20.620 --> 00:38:22.260
Yeah, but I did--


00:38:22.260 --> 00:38:24.980
yeah, when I was trying to scrape from our agent's web


00:38:24.980 --> 00:38:29.300
service, I was trying to use Selenium.


00:38:29.300 --> 00:38:30.460
Yeah, very cool.


00:38:30.460 --> 00:38:32.900
I kind of wanted to just mention one other thing, Michael.


00:38:32.900 --> 00:38:34.500
I had the mic here.


00:38:34.500 --> 00:38:36.900
Just the way that I've been automating things.


00:38:36.900 --> 00:38:40.420
I used a lot of Raspberry Pis in the early days


00:38:40.420 --> 00:38:43.980
to use cron jobs to kind of fire these off,


00:38:43.980 --> 00:38:47.140
because I know that's something that I had trouble figuring out when I wanted to start


00:38:47.140 --> 00:38:49.500
automating things was how to make it happen when you wanted.


00:38:49.500 --> 00:38:55.360
I had a guy that was a heavy Linux guy was able to help me figure out how to do that


00:38:55.360 --> 00:38:56.540
with cron jobs and things.


00:38:56.540 --> 00:39:01.860
Then I moved on to an app on my Mac called Launch Control that helps create daemons and


00:39:01.860 --> 00:39:05.580
things like that, which I found really helpful.


00:39:05.580 --> 00:39:10.700
Those are some great tools to help make these things happen on the time that you want it.


00:39:10.700 --> 00:39:11.700
That's really neat.


00:39:11.700 --> 00:39:13.840
My Mac, I install stuff with Homebrew,


00:39:13.840 --> 00:39:16.440
and a lot of times you can install it as a service as well,


00:39:16.440 --> 00:39:18.240
and it behind the scenes will basically run


00:39:18.240 --> 00:39:21.880
the launch control stuff when you install something


00:39:21.880 --> 00:39:24.160
like MongoDB or something on your Mac,


00:39:24.160 --> 00:39:26.280
which gives you slightly simpler commands to do it,


00:39:26.280 --> 00:39:28.520
but it's gotta be like lined up just like that.


00:39:28.520 --> 00:39:29.680
That's cool.


00:39:29.680 --> 00:39:31.400
- Yeah, that is actually quite handy.


00:39:31.400 --> 00:39:33.680
The other thing that is maybe worth looking at


00:39:33.680 --> 00:39:35.280
if you wanted to do that kind of automation


00:39:35.280 --> 00:39:37.640
for stuff that's not just on your own machine,


00:39:37.640 --> 00:39:41.400
the GitHub Actions, which I'm not particularly familiar with.


00:39:41.400 --> 00:39:42.240
- Oh yeah.


00:39:42.240 --> 00:39:44.920
- GitLab itself has got some very powerful,


00:39:44.920 --> 00:39:48.380
effectively free to use until you get quite heavily involved.


00:39:48.380 --> 00:39:51.960
CI, and I've forgotten what CI stands for right now.


00:39:51.960 --> 00:39:53.280
Continuous integration, that's the word,


00:39:53.280 --> 00:39:54.720
but really it's just automation.


00:39:54.720 --> 00:39:56.760
At a particular time, do this thing.


00:39:56.760 --> 00:39:58.800
That can be quite powerful.


00:39:58.800 --> 00:40:00.240
- I really want to try and figure this out


00:40:00.240 --> 00:40:02.680
because what I want to do is I put everything on GitHub


00:40:02.680 --> 00:40:04.600
and then I just, you know, get a pull it


00:40:04.600 --> 00:40:06.760
on the remote computer that's actually,


00:40:06.760 --> 00:40:08.480
that's on all the time.


00:40:08.480 --> 00:40:10.840
But I want to be able to figure out how to make it update


00:40:10.840 --> 00:40:13.840
when I push, just make it auto updates.


00:40:13.840 --> 00:40:15.480
- That should be fairly doable.


00:40:15.480 --> 00:40:16.320
- That's what everybody says.


00:40:16.320 --> 00:40:19.000
- Again, my GitHub Action experience is not great,


00:40:19.000 --> 00:40:21.040
but certainly if you can do it on GitLab,


00:40:21.040 --> 00:40:22.400
I'm sure you can do it on the other.


00:40:22.400 --> 00:40:24.920
The CI teams are all geared around this kind of thing.


00:40:24.920 --> 00:40:25.760
- Yeah.


00:40:25.760 --> 00:40:26.600
- I've heard whispers of code.


00:40:26.600 --> 00:40:27.920
- Something's changed in the code, do something.


00:40:27.920 --> 00:40:32.160
- Let's chat Rusty, because my topic is actually designed


00:40:32.160 --> 00:40:33.880
for GitHub Actions.


00:40:33.880 --> 00:40:35.000
- Wow, fantastic.


00:40:35.000 --> 00:40:37.040
(laughing)


00:40:37.040 --> 00:40:37.880
- Yeah.


00:40:37.880 --> 00:40:38.720
- I'm glad I shaved today.


00:40:38.720 --> 00:40:40.480
- Yeah, I'm assuming.


00:40:40.480 --> 00:40:43.160
If I can put my DevOps hat on that,


00:40:43.160 --> 00:40:45.600
that CI kind of stuff is braided better for us.


00:40:45.600 --> 00:40:47.040
It makes a heck of a difference


00:40:47.040 --> 00:40:49.760
'cause it means when the developers make changes


00:40:49.760 --> 00:40:52.240
to the code, they don't have to know how to go about


00:40:52.240 --> 00:40:54.280
and deploy things or build things and so forth.


00:40:54.280 --> 00:40:56.840
It just happens for, it basically happens for them.


00:40:56.840 --> 00:40:58.560
- Yeah, that's fantastic.


00:40:58.560 --> 00:40:59.720
I also set up an automation.


00:40:59.720 --> 00:41:01.720
So if I get pushed to a certain branch,


00:41:01.720 --> 00:41:05.280
I'll just automatically do a zero downtime redeploy


00:41:05.280 --> 00:41:07.920
of like the top Python training infrastructure


00:41:07.920 --> 00:41:10.160
and stuff like that, which it's so fantastic.


00:41:10.160 --> 00:41:13.260
Rivers, you mentioned source control before.


00:41:13.260 --> 00:41:15.980
You guys are using GitHub for your kind of stuff.


00:41:15.980 --> 00:41:19.780
Is there source control plus music going on here?


00:41:19.780 --> 00:41:21.860
- That's one of my many weaknesses


00:41:21.860 --> 00:41:23.680
because I'm usually just working on my own.


00:41:23.680 --> 00:41:27.560
I haven't had much use for that sort of collaboration tool.


00:41:27.560 --> 00:41:32.560
I do have my own website, so it does go through GitHub.


00:41:32.560 --> 00:41:36.620
But I've recently started volunteering


00:41:36.620 --> 00:41:41.340
I'm like a volunteer coder with this other group of people


00:41:41.340 --> 00:41:46.340
and I'm gonna have to learn a lot more of this Git,


00:41:46.340 --> 00:41:48.820
all these Git tools, push, pull, all that.


00:41:48.820 --> 00:41:50.420
- Yeah, yeah, yeah, fantastic.


00:41:50.420 --> 00:41:51.740
- Once you have a need for it,


00:41:51.740 --> 00:41:53.500
I think it's easier to learn, you know,


00:41:53.500 --> 00:41:55.780
until then it's all just something you hear about,


00:41:55.780 --> 00:41:57.580
but then it's like, oh, now I need this.


00:41:57.580 --> 00:42:00.140
Now I can dig in and figure it out.


00:42:00.140 --> 00:42:02.700
- Yeah, if I could basically make one suggestion,


00:42:02.700 --> 00:42:05.060
if you are currently making changes to your software


00:42:05.060 --> 00:42:07.260
by making final final dot version dot two


00:42:07.260 --> 00:42:10.220
kind of files on your hard drive,


00:42:10.220 --> 00:42:11.300
look into version control.


00:42:11.300 --> 00:42:12.140
It doesn't have to be Git,


00:42:12.140 --> 00:42:14.140
but Git is effectively one in this argument.


00:42:14.140 --> 00:42:17.300
It really is by far the most well used one.


00:42:17.300 --> 00:42:18.780
Even if you never collaborate with it,


00:42:18.780 --> 00:42:22.420
just the ability to use a version control system


00:42:22.420 --> 00:42:24.460
to basically see what your code looked like yesterday,


00:42:24.460 --> 00:42:26.540
or when you made the last,


00:42:26.540 --> 00:42:28.620
the change you made three changes ago,


00:42:28.620 --> 00:42:30.020
compare them to each other,


00:42:30.020 --> 00:42:31.180
those kinds of things.


00:42:31.180 --> 00:42:33.260
Until you have that capacity,


00:42:33.260 --> 00:42:34.980
you don't really kind of think about


00:42:34.980 --> 00:42:36.220
how useful it would be.


00:42:36.220 --> 00:42:38.020
Once you're able to do it,


00:42:38.020 --> 00:42:41.100
you cannot really imagine not being able to do it.


00:42:41.100 --> 00:42:43.020
- So you're saying,


00:42:43.020 --> 00:42:45.540
even if I'm not collaborating with anyone,


00:42:45.540 --> 00:42:47.860
it's still very useful to--


00:42:47.860 --> 00:42:49.100
- Exceedingly so, yes.


00:42:49.100 --> 00:42:50.060
- Yeah. - Yeah.


00:42:50.060 --> 00:42:51.820
I think I've probably collaborated


00:42:51.820 --> 00:42:54.740
in my personal projects once with someone,


00:42:54.740 --> 00:42:56.780
but I wouldn't dream of not using something like Git


00:42:56.780 --> 00:42:58.460
for anything I've ever written,


00:42:58.460 --> 00:43:01.520
just because I know I'm not going to remember.


00:43:01.520 --> 00:43:02.900
I'll have this vague memory


00:43:02.900 --> 00:43:04.700
that a week ago I made some change


00:43:04.700 --> 00:43:07.980
that actually would be useful to have back now.


00:43:07.980 --> 00:43:09.620
And Git's got that kind of history.


00:43:09.620 --> 00:43:11.940
It'll show me that a week ago I made a push that said,


00:43:11.940 --> 00:43:14.700
tweaks the problem to get to knowable or something like that.


00:43:14.700 --> 00:43:15.700
And I'll go and look at that


00:43:15.700 --> 00:43:18.160
and do a comparison against what I've got now.


00:43:18.160 --> 00:43:20.360
- Sounds great.


00:43:20.360 --> 00:43:23.980
I've been using the poor man's version control,


00:43:23.980 --> 00:43:26.480
which is my Dropbox history.


00:43:26.480 --> 00:43:29.420
I just revert to like the state of the folder


00:43:29.420 --> 00:43:30.400
three months ago.


00:43:31.460 --> 00:43:34.020
- Yeah, that is super hatey, but like just the ability


00:43:34.020 --> 00:43:36.860
to see, like I wanna see how it was two weeks ago


00:43:36.860 --> 00:43:39.100
when it worked like I expected and now it doesn't anymore.


00:43:39.100 --> 00:43:40.580
Tell me, why did I break it?


00:43:40.580 --> 00:43:41.460
What did I do?


00:43:41.460 --> 00:43:42.300
- Right.


00:43:42.300 --> 00:43:43.140
- And then--


00:43:43.140 --> 00:43:45.160
- You don't make it public, right?


00:43:45.160 --> 00:43:46.000
Nobody can see it.


00:43:46.000 --> 00:43:46.820
- No, no, you don't have to.


00:43:46.820 --> 00:43:48.580
- No, no, definitely not, yeah.


00:43:48.580 --> 00:43:52.580
Yeah, I feel like we all have been there with Zack the Hacker


00:43:52.580 --> 00:43:55.180
like once you've accidentally lost eight hours worth of work


00:43:55.180 --> 00:43:57.620
because of misunderstanding a git, you probably,


00:43:57.620 --> 00:43:58.460
that's when you--


00:43:58.460 --> 00:44:00.300
(laughing)


00:44:00.300 --> 00:44:04.300
I've even talked on the data I've lost from bad Git commands.


00:44:04.300 --> 00:44:05.460
- Yeah.


00:44:05.460 --> 00:44:07.340
- Or because you didn't commit something


00:44:07.340 --> 00:44:08.820
and you really, really wish you did.


00:44:08.820 --> 00:44:11.420
So yeah, if we had more time and some beers,


00:44:11.420 --> 00:44:14.060
I would definitely be able to tell some good stories


00:44:14.060 --> 00:44:16.360
to that, but I think it's Kim,


00:44:16.360 --> 00:44:19.580
you're up next on the sharing, right?


00:44:19.580 --> 00:44:21.580
- I just wanted to just finish off that Git discussion.


00:44:21.580 --> 00:44:24.940
Just another, just to comment on what you were saying there


00:44:24.940 --> 00:44:26.720
Rivers, in terms of making it public,


00:44:26.720 --> 00:44:29.200
Git itself never needs to necessarily needs


00:44:29.200 --> 00:44:30.040
to leave your hard drive.


00:44:30.040 --> 00:44:31.920
You could run Git entirely locally if you wanted to,


00:44:31.920 --> 00:44:35.160
and it's still useful as a version control system.


00:44:35.160 --> 00:44:38.760
GitHub is just a publicly accessible Git tool,


00:44:38.760 --> 00:44:41.600
and it's not the only one, GitLab exists as well.


00:44:41.600 --> 00:44:43.280
But even there, you don't have to share anything.


00:44:43.280 --> 00:44:44.760
You can do it all privately


00:44:44.760 --> 00:44:47.200
and as long as you're the only person ever seeing it.


00:44:47.200 --> 00:44:48.040
But it's still useful.


00:44:48.040 --> 00:44:48.860
- Right. - Yeah.


00:44:48.860 --> 00:44:49.700
- Interesting. - Yeah, yeah.


00:44:49.700 --> 00:44:51.040
- Yeah, I'd never do it that way, but you're right.


00:44:51.040 --> 00:44:53.240
You could just do Git and just save it there, right?


00:44:53.240 --> 00:44:56.320
- I don't either, but it is something you could do


00:44:56.320 --> 00:44:57.160
if you wanted to, yeah. - Yeah, yeah, yeah.


00:44:57.160 --> 00:44:58.640
- Yeah, yeah, and if you're in Dropbox,


00:44:58.640 --> 00:45:00.200
you'll be backed up even, yeah.


00:45:00.200 --> 00:45:01.360
- Exactly.


00:45:01.360 --> 00:45:03.640
Lots of us are using GitLab and GitHub


00:45:03.640 --> 00:45:06.000
as offsite backups of our files,


00:45:06.000 --> 00:45:09.560
not necessarily to collaborate with anyone on them.


00:45:09.560 --> 00:45:11.320
- Oh yeah, that's absolutely true.


00:45:11.320 --> 00:45:17.160
- In my case, we're back to PDFs actually,


00:45:17.160 --> 00:45:18.920
and manipulating the data in them,


00:45:18.920 --> 00:45:21.280
although not CSVs this time.


00:45:21.280 --> 00:45:23.460
The second little tool I wanted to talk about was,


00:45:23.460 --> 00:45:25.040
again, doesn't have a name.


00:45:25.040 --> 00:45:27.640
And in fact, this ties into a previous example.


00:45:27.640 --> 00:45:29.320
This is in my GitLab,


00:45:29.320 --> 00:45:30.980
but it's one of my private GitLab repos


00:45:30.980 --> 00:45:32.560
because it involves some kind of data


00:45:32.560 --> 00:45:34.460
that the world doesn't need to see.


00:45:34.460 --> 00:45:39.460
That has basically my wife and several other colleagues


00:45:39.460 --> 00:45:42.160
regularly receive large PDF documents.


00:45:42.160 --> 00:45:44.920
She's in the financial services industry.


00:45:44.920 --> 00:45:48.120
That's got 60 to 70 people's account details in them.


00:45:48.120 --> 00:45:49.840
So it's three pages per person.


00:45:49.840 --> 00:45:52.440
So you could get a 200 page document


00:45:52.440 --> 00:45:54.720
and they then basically need to split those up


00:45:54.720 --> 00:45:57.580
and send them to each of the individual recipients.


00:45:57.580 --> 00:45:59.440
And similarly to what you were saying earlier,


00:45:59.440 --> 00:46:01.960
Rusty, you get your CSV data in a PDF,


00:46:01.960 --> 00:46:05.720
be much more convenient if you could get that CSV directly.


00:46:05.720 --> 00:46:07.080
In this case, it would be much more convenient


00:46:07.080 --> 00:46:09.160
if you could get 70 people separate files,


00:46:09.160 --> 00:46:10.240
but that's just not how they come.


00:46:10.240 --> 00:46:11.820
That's just, there is no,


00:46:11.820 --> 00:46:13.520
you can't go to the provider generally and say,


00:46:13.520 --> 00:46:14.680
do something else.


00:46:14.680 --> 00:46:16.620
You know, what you get is what you get.


00:46:16.620 --> 00:46:19.680
And from various cries of anguish from my wife


00:46:19.680 --> 00:46:21.480
of hours of doing this and it's error prone


00:46:21.480 --> 00:46:24.400
and you're opening up a PDF GUI tool,


00:46:24.400 --> 00:46:27.080
selecting the first three pages and saying,


00:46:27.080 --> 00:46:28.720
save these three as this person's name,


00:46:28.720 --> 00:46:30.400
then the next three and save these three


00:46:30.400 --> 00:46:32.920
as this person's name, that kind of thing.


00:46:32.920 --> 00:46:35.040
It was actually surprisingly easy to use in Python


00:46:35.040 --> 00:46:37.240
to write them a tool to make life a lot easier


00:46:37.240 --> 00:46:40.560
on their side, which effectively opened the PDF.


00:46:40.560 --> 00:46:43.220
And I had a comment on the name of it.


00:46:43.220 --> 00:46:44.280
What did I use?


00:46:44.280 --> 00:46:47.960
PyMuPDF, which I had never heard of before.


00:46:47.960 --> 00:46:48.800
I see you.


00:46:48.800 --> 00:46:49.880
- I've never heard of that either, yeah.


00:46:49.880 --> 00:46:52.980
I don't know, in fact, I haven't looked at it


00:46:52.980 --> 00:46:55.280
since I wrote this thing, I'd forgotten what it was called.


00:46:55.280 --> 00:46:56.560
It used to be called FITZ,


00:46:56.560 --> 00:46:59.000
there's something called FITZ, F-I-T-Z,


00:46:59.000 --> 00:47:01.280
which this has become, which is what was confusing me


00:47:01.280 --> 00:47:03.560
'cause FITZ is what's in my poetry history


00:47:03.560 --> 00:47:05.240
in my Pi project at Tomofal.


00:47:05.240 --> 00:47:08.600
And this is actually, it's a remarkable project,


00:47:08.600 --> 00:47:12.880
basically you split up everything in your PDF,


00:47:12.880 --> 00:47:15.240
you can basically access all the text fields.


00:47:15.240 --> 00:47:16.480
And once I'd done that,


00:47:16.480 --> 00:47:19.440
it was a lot of kind of trial and error,


00:47:19.440 --> 00:47:21.880
I split up each page and printed out all the fields


00:47:21.880 --> 00:47:23.400
until it looked like the one I wanted.


00:47:23.400 --> 00:47:25.320
And when I had that, now it's just a simple loop


00:47:25.320 --> 00:47:26.520
that goes through each page.


00:47:26.520 --> 00:47:28.320
And if the page happens to have the details


00:47:28.320 --> 00:47:31.480
of an account holder on it, then that's a new document.


00:47:31.480 --> 00:47:32.880
Take the ones I've seen before then


00:47:32.880 --> 00:47:35.980
and save those three pages or four pages


00:47:35.980 --> 00:47:40.520
as the person's name that I found in the PDF and repeat.


00:47:40.520 --> 00:47:44.440
And within seconds, it's spitting out 70 PDF files


00:47:44.440 --> 00:47:45.840
with automated names.


00:47:45.840 --> 00:47:48.720
So maybe not the most best way to do it,


00:47:48.720 --> 00:47:50.800
particularly if you've got, as is common in South Africa,


00:47:50.800 --> 00:47:54.600
two or three words in your surname,


00:47:54.600 --> 00:47:56.280
it's trying to be smart about it,


00:47:56.280 --> 00:47:57.880
but ultimately it's easy enough to identify


00:47:57.880 --> 00:48:00.160
who the file belongs to.


00:48:00.160 --> 00:48:03.240
And that was saving hours and hours of time.


00:48:03.240 --> 00:48:06.540
- Yeah, that's really rough airprone work


00:48:06.540 --> 00:48:09.960
that you go to this big PDF and break it up.


00:48:09.960 --> 00:48:11.760
PDF's a bad format.


00:48:11.760 --> 00:48:12.920
- Yeah, it's not great.


00:48:12.920 --> 00:48:14.160
Yeah.


00:48:14.160 --> 00:48:15.680
Once you use a tool like PyMudi,


00:48:15.680 --> 00:48:17.900
if you break the PDF up, I mean, it's all,


00:48:17.900 --> 00:48:19.940
it's a little bits of text, there's a full stop here


00:48:19.940 --> 00:48:22.460
and there's two commas in separate text fields.


00:48:22.460 --> 00:48:24.100
They look perfectly fine when rendered,


00:48:24.100 --> 00:48:26.980
but when broken up, they're terrible data format.


00:48:26.980 --> 00:48:30.660
But the beauty is if for work like this,


00:48:30.660 --> 00:48:33.340
if a tool made it in the first place,


00:48:33.340 --> 00:48:34.620
it's likely to be consistent enough


00:48:34.620 --> 00:48:35.860
that you can break it up


00:48:35.860 --> 00:48:38.900
and expect to find the same data in the same places


00:48:38.900 --> 00:48:41.980
'cause it wasn't written by a human in the first place.


00:48:41.980 --> 00:48:43.300
- Yeah, yeah, yeah.


00:48:43.300 --> 00:48:44.120
That's super neat.


00:48:44.120 --> 00:48:47.700
Another thing you mentioned in the notes is GUI.


00:48:47.700 --> 00:48:50.120
- GUI, yes, GUI is a beautiful thing.


00:48:50.120 --> 00:48:52.340
- I think GUI is really interesting.


00:48:52.340 --> 00:48:55.300
- I vaguely mentioned, I vaguely recall every now and then


00:48:55.300 --> 00:48:57.700
on Python Bytes, you brought them up briefly.


00:48:57.700 --> 00:48:59.820
You don't discuss GUIs much, but every now and then


00:48:59.820 --> 00:49:02.060
you've vaguely discussed them.


00:49:02.060 --> 00:49:03.360
- Yeah, it's been a while.


00:49:03.360 --> 00:49:04.980
- Yes, actually.


00:49:04.980 --> 00:49:05.820
- It has.


00:49:05.820 --> 00:49:06.660
- GUI is a--


00:49:06.660 --> 00:49:07.500
- They come in waves.


00:49:07.500 --> 00:49:08.380
- Yeah.


00:49:08.380 --> 00:49:10.260
- G-O-O-E-Y.


00:49:10.260 --> 00:49:11.100
- E-Y, yeah.


00:49:11.100 --> 00:49:14.560
- It creates a GUI GUI for application.


00:49:14.560 --> 00:49:17.500
- What I really like about GUI is that


00:49:17.500 --> 00:49:23.140
When I develop things, I'm very much a Linux-based developer these days, so I don't really want


00:49:23.140 --> 00:49:25.500
to be developing a GUI app at all if I can avoid it.


00:49:25.500 --> 00:49:28.060
A command line is perfectly fine for what I want.


00:49:28.060 --> 00:49:32.060
So I wrote this tool as a command line tool and then just basically attached GUI to it.


00:49:32.060 --> 00:49:36.320
And then I think two or three lines of code, I think it's really just an @GUI decorator


00:49:36.320 --> 00:49:38.700
on one of my functions.


00:49:38.700 --> 00:49:42.980
It produces, if you guys are watching the people on the live stream, you can have this


00:49:42.980 --> 00:49:50.100
look at GUI just makes really basic looking GUIs in form layout that pretty much taking every


00:49:50.100 --> 00:49:53.780
option you could have in the command line. Yeah if you wanted to create an app that would come up and show


00:49:53.780 --> 00:50:00.740
like a UI that would have uh little text fields or even drop downs or stuff that are with command


00:50:00.740 --> 00:50:05.380
line arguments like this is it and then you package it up with pi2 installer is that right?


00:50:05.380 --> 00:50:09.620
That's what I did yeah or pi installer I think. Pi install yeah yeah sorry yeah.


00:50:09.620 --> 00:50:13.540
you're thinking Pi to exe perhaps which is I'm thinking Pi to app which is what I'm thinking


00:50:13.540 --> 00:50:20.820
by that. Pi installer is beautiful so with a bit of you I wrote the code I got it working in the


00:50:20.820 --> 00:50:25.300
command line I was happy with it attached GUI to it and suddenly I have a GUI which not isn't a


00:50:25.300 --> 00:50:30.740
Windows only thing it works just fine on a Linux box too and then Pi installer to make an exe and


00:50:30.740 --> 00:50:36.340
I can hand a tool over to somebody else they don't need no Python they need no installation expertise


00:50:36.340 --> 00:50:39.780
I'm certainly not going to be able to explain to people who aren't in the technical industry


00:50:39.780 --> 00:50:44.500
how to open a command prompt on your Windows machine, find where you put this file,


00:50:44.500 --> 00:50:48.580
and then give it command line arguments. That's not reasonable. Oh yeah, and also set up a virtual


00:50:48.580 --> 00:50:52.260
environment, make sure you have the right version. Exactly. It's all the requirements, like this is


00:50:52.260 --> 00:50:56.180
not going to fly. No, they're like why did you not build me an app? What is this? Even at the


00:50:56.180 --> 00:51:00.020
exe distribution level, I mean you can make an exe that's command line only, but no one's going


00:51:00.020 --> 00:51:05.380
to want to use that. Unless like me, you prefer not to ever use the mouse, but most people aren't


00:51:05.380 --> 00:51:09.780
like me, they want a tool that they understand on the screen. So GUI is beautiful for that.


00:51:09.780 --> 00:51:14.180
Yeah, absolutely. That's awesome. Thanks for sharing that. All right, a couple of live stream


00:51:14.180 --> 00:51:19.860
comments I'll throw out here. I once worked for almost like three weeks on a project in a


00:51:19.860 --> 00:51:24.500
company that had commissioned me, then the server crashed, my backup got fried, and I lost everything.


00:51:24.500 --> 00:51:29.460
Yeah, so a good reason to put something out. Yeah, I've been there. Good reason to put


00:51:29.460 --> 00:51:33.140
stuff up on maybe like GitHub private repos or something like that. And then also


00:51:33.860 --> 00:51:37.700
Reginald, Davis came here to show love to my guy Jay.


00:51:37.700 --> 00:51:40.100
Hey, Reginald, thanks for being here with all of us.


00:51:40.100 --> 00:51:43.780
All right, let's see.


00:51:43.780 --> 00:51:47.660
So now you're up next, Jay.


00:51:47.660 --> 00:51:51.420
- Awesome, so like most of us have


00:51:51.420 --> 00:51:55.460
and at some point in our lives, I built my own website.


00:51:55.460 --> 00:51:58.100
I would say, I don't think the show


00:51:58.100 --> 00:51:59.700
isn't gonna be sponsored by like Squarespace


00:51:59.700 --> 00:52:00.540
or anything, is it Mike?


00:52:00.540 --> 00:52:03.780
'Cause I'm gonna give you the perfect reason


00:52:03.780 --> 00:52:05.820
- If Chase is listening, I'm perfectly acceptable


00:52:05.820 --> 00:52:08.980
to let them sponsor it, but no, I'm not.


00:52:08.980 --> 00:52:13.460
- So I built my site, I made a static site generator,


00:52:13.460 --> 00:52:18.460
and one of the things that my brain is kind of buzzing


00:52:18.460 --> 00:52:21.180
right now because I actually just launched a new podcast


00:52:21.180 --> 00:52:23.820
on Relay FM called Conduit, and like the first episode


00:52:23.820 --> 00:52:26.860
went live the same time this live stream did.


00:52:26.860 --> 00:52:30.300
So there's like a bunch of stuff happening in my head,


00:52:30.300 --> 00:52:33.660
but I say all of that to, yeah, that,


00:52:33.660 --> 00:52:37.940
I say all of that to mention that


00:52:37.940 --> 00:52:41.060
when you run your own site and you're doing stuff


00:52:41.060 --> 00:52:42.980
on like other people's podcasts


00:52:42.980 --> 00:52:44.620
and other people's sites and things like that,


00:52:44.620 --> 00:52:46.740
and you're doing it consistently,


00:52:46.740 --> 00:52:49.580
you always forget to put it on your website.


00:52:49.580 --> 00:52:54.360
So I built a small tool for my little static site generator


00:52:54.360 --> 00:52:59.360
that uses feed parser to just check the RSS feed


00:52:59.360 --> 00:53:02.880
the RSS feeds for the shows that I do regularly and


00:53:02.880 --> 00:53:06.700
Then check for certain information if I'm a guest


00:53:06.700 --> 00:53:10.480
Like if I'm just a regular guest, it'll just check to see if I'm a guest if it's there


00:53:10.480 --> 00:53:15.380
Then it'll it'll create the blog post for me using the summary for the show


00:53:15.380 --> 00:53:21.940
So now, you know, I I do a show every Tuesday. I do you know conduits gonna be bi-weekly


00:53:21.940 --> 00:53:27.120
I'm I guessed on another show once a month and every once in a while Mike calls me to


00:53:27.920 --> 00:53:32.240
to get me on here to, I guess, share Python tricks and stuff.


00:53:32.240 --> 00:53:35.000
But I can have all of that running and just have a cron


00:53:35.000 --> 00:53:39.560
job through GitHub Actions that checks all of these RSS feeds


00:53:39.560 --> 00:53:42.480
every six hours or so.


00:53:42.480 --> 00:53:44.560
And it's perfectly free, perfectly


00:53:44.560 --> 00:53:46.560
within the realm of it.


00:53:46.560 --> 00:53:49.520
And it's just one of those things that's like,


00:53:49.520 --> 00:53:53.520
I love the idea of taking RSS, which


00:53:53.520 --> 00:53:56.720
is an amazing but often forgotten format,


00:53:56.720 --> 00:53:59.440
and just say, let me parse this data


00:53:59.440 --> 00:54:02.880
because it has a very defined schema on it.


00:54:02.880 --> 00:54:06.520
And I mean, I love data and I love data that's well-defined.


00:54:06.520 --> 00:54:09.240
So that's kind of my tool and Feed Parser


00:54:09.240 --> 00:54:11.720
is kind of the thing that really makes that happen


00:54:11.720 --> 00:54:13.480
in conjunction with GitHub Actions.


00:54:13.480 --> 00:54:15.440
- Yeah, Feed Parser is super neat.


00:54:15.440 --> 00:54:17.700
If you're working with some kind of RSS feed,


00:54:17.700 --> 00:54:22.580
you could approach it from a like ground up thing.


00:54:22.580 --> 00:54:26.160
I'm gonna use requests and I'm gonna use elementary


00:54:26.160 --> 00:54:28.440
I can do my XPath queries and you're like,


00:54:28.440 --> 00:54:30.440
whoa, but it has just this format, right?


00:54:30.440 --> 00:54:31.680
So you could use feeds parser


00:54:31.680 --> 00:54:34.680
and it just turns this into like a dictionary of dictionaries


00:54:34.680 --> 00:54:36.040
which is so much nicer.


00:54:36.040 --> 00:54:40.720
Yeah, so you don't have to worry about the RSS format.


00:54:40.720 --> 00:54:42.360
Yeah, it's a quick and easy one.


00:54:42.360 --> 00:54:45.560
So it's a nice example of taking a higher level


00:54:45.560 --> 00:54:48.880
Python library, you know, maybe a good place to look


00:54:48.880 --> 00:54:51.720
would be awesome Python or something like that to go


00:54:51.720 --> 00:54:53.600
instead of just saying, I'm gonna start from scratch.


00:54:53.600 --> 00:54:54.880
You're like, okay, well, I'm gonna go over here


00:54:54.880 --> 00:55:00.040
find the audio section and then over here I want to do like Lib Rosa for the


00:55:00.040 --> 00:55:04.000
audio and music analysis and so we're gonna go with that and then like see if


00:55:04.000 --> 00:55:07.520
that's gonna solve my problem right so I'm trying to start with something


00:55:07.520 --> 00:55:11.560
higher level you know it's something I forgot now this reminds me that I was


00:55:11.560 --> 00:55:21.000
gonna ask you about rivers have you done anything with Fox dot no so with Fox


00:55:21.000 --> 00:55:27.720
basically you can write little tiny Python things and build up like almost


00:55:27.720 --> 00:55:34.840
like a growing symphony of a type of it's super super interesting that it's


00:55:34.840 --> 00:55:41.640
like this sort of interactive and not quite IDE like a rebel for music it's


00:55:41.640 --> 00:55:47.640
something pretty interesting yeah for making for like live performance so you


00:55:47.640 --> 00:55:50.520
you write these little tiny Python elements


00:55:50.520 --> 00:55:53.760
to like change the tempo or bring in like a background drum


00:55:53.760 --> 00:55:56.840
or like now I want this sort of bass guitar


00:55:56.840 --> 00:55:58.160
to come in and add to it.


00:55:58.160 --> 00:56:01.460
And the performances of it are really, really interesting.


00:56:01.460 --> 00:56:02.300
- I'll check it out.


00:56:02.300 --> 00:56:03.840
- I think GitHub universe used this


00:56:03.840 --> 00:56:08.000
for like their intro this year.


00:56:08.000 --> 00:56:11.600
Like they had a live DJ that was like writing code


00:56:11.600 --> 00:56:15.760
to make the actual music live.


00:56:15.760 --> 00:56:18.480
So now DJ sets are being controlled by a Python.


00:56:18.480 --> 00:56:19.320
I love that.


00:56:19.320 --> 00:56:20.140
- It's fantastic.


00:56:20.140 --> 00:56:21.640
Yeah, I love it.


00:56:21.640 --> 00:56:26.320
- Just remembering at the end of the 2020 Python ZA conference


00:56:26.320 --> 00:56:28.680
which I was attending was clearly online.


00:56:28.680 --> 00:56:31.140
There was a radio, there was a DJ set


00:56:31.140 --> 00:56:33.600
by two Brazilian chaps whose name I've forgotten.


00:56:33.600 --> 00:56:36.160
I can look up who were also doing basically


00:56:36.160 --> 00:56:39.680
programmatically controlled or at least generated music.


00:56:39.680 --> 00:56:43.680
Similar to this, it's actually quite an interesting idea.


00:56:43.680 --> 00:56:45.980
Yeah, this is something that kind of builds up


00:56:45.980 --> 00:56:48.620
over like 10, 15 minutes, but it's really neat


00:56:48.620 --> 00:56:50.220
if you just want to like have something in the background.


00:56:50.220 --> 00:56:53.620
But the fact that the way they do it is really impressive.


00:56:53.620 --> 00:56:54.460
Yeah, cool.


00:56:54.460 --> 00:56:57.380
Rivers got a quick shout out in the live stream there.


00:56:57.380 --> 00:56:59.180
I love Rivers, you're pretty epic.


00:56:59.180 --> 00:57:03.540
The Sarah Diam says, "Awesome."


00:57:03.540 --> 00:57:04.820
Definitely, we all agree.


00:57:04.820 --> 00:57:07.300
Speaking of Rivers, I think you're next.


00:57:07.300 --> 00:57:08.380
And oh, before we move on,


00:57:08.380 --> 00:57:09.940
just Jay, congrats on the new podcast.


00:57:09.940 --> 00:57:10.780
That's cool.


00:57:10.780 --> 00:57:11.780
I'm already subscribed.


00:57:13.100 --> 00:57:15.700
All right, where was your next?


00:57:15.700 --> 00:57:20.580
- Michael, hearing you mention Labrosa and FFprobe


00:57:20.580 --> 00:57:24.380
reminded me that to maintain the tags


00:57:24.380 --> 00:57:27.020
of all those 1500 demos,


00:57:27.020 --> 00:57:31.380
I use a fantastic Python package called ID3,


00:57:31.380 --> 00:57:36.380
which makes use of FFprobe and Labrosa.


00:57:36.380 --> 00:57:42.900
So, every night my program will run


00:57:42.900 --> 00:57:47.900
and using ID3 it opens up the tags of all those files


00:57:47.900 --> 00:57:49.960
and does a ton of maintenance.


00:57:49.960 --> 00:57:54.740
I'll access spreadsheets of my managers


00:57:54.740 --> 00:57:59.420
and see what comments they've left on these demos,


00:57:59.420 --> 00:58:00.260
ratings.


00:58:00.260 --> 00:58:01.080
- That's awesome.


00:58:01.080 --> 00:58:03.420
And you have automation back over to Google Sheets


00:58:03.420 --> 00:58:04.260
as well, right?


00:58:04.260 --> 00:58:07.520
- I mean, that's how I got into coding in the first place


00:58:07.520 --> 00:58:11.140
was from spreadsheets, but especially Google Sheets,


00:58:11.140 --> 00:58:15.020
just getting tired of trying to work those formulas


00:58:15.020 --> 00:58:16.340
and those little cells.


00:58:16.340 --> 00:58:20.700
So then I went on, was it Fiverr?


00:58:20.700 --> 00:58:25.700
And had some people code me some scripts


00:58:25.700 --> 00:58:27.500
to help with the spreadsheets.


00:58:27.500 --> 00:58:29.420
And then I just started looking at the code


00:58:29.420 --> 00:58:31.740
and I was like, well, this is pretty interesting.


00:58:31.740 --> 00:58:34.120
And from there, I just got into it on my own.


00:58:34.120 --> 00:58:36.940
- Yeah, absolutely.


00:58:36.940 --> 00:58:40.100
We lost Kim, but I'm sure he'll be back in a moment.


00:58:40.100 --> 00:58:42.260
- Yeah, so what's the last one you want to share?


00:58:42.260 --> 00:58:43.820
Is that it or you got another one?


00:58:43.820 --> 00:58:48.820
- No, so I love to listen to a lot of music,


00:58:48.820 --> 00:58:51.660
but also I feel like it's part of my job


00:58:51.660 --> 00:58:54.700
is to just be aware of new ideas


00:58:54.700 --> 00:58:57.620
and just constantly listen to music.


00:58:57.620 --> 00:58:59.620
I feel like I don't need to hear a song


00:58:59.620 --> 00:59:01.540
more than once or twice and then I kind of get it.


00:59:01.540 --> 00:59:04.700
And then I just want to hear more new music.


00:59:04.700 --> 00:59:06.980
And by new, I mean new to me.


00:59:06.980 --> 00:59:09.580
So there's tons of old records, classic records


00:59:09.580 --> 00:59:11.140
I still haven't heard yet.


00:59:11.140 --> 00:59:15.220
So it's very tedious to go through the Spotify app every day


00:59:15.220 --> 00:59:17.140
and try to find stuff for myself.


00:59:17.140 --> 00:59:19.860
So I have an app called New Music


00:59:19.860 --> 00:59:23.460
that assembles a playlist for me.


00:59:23.460 --> 00:59:28.380
First of all, using Beautiful Soup,


00:59:28.380 --> 00:59:31.100
it goes to all the online charts


00:59:31.100 --> 00:59:32.380
so I can get like the,


00:59:32.380 --> 00:59:34.740
whatever the hot songs and the different formats are,


00:59:34.740 --> 00:59:36.940
gets a few of those.


00:59:36.940 --> 00:59:41.720
and using a package called Spotify.


00:59:41.720 --> 00:59:44.380
- Spotify, okay.


00:59:44.380 --> 00:59:47.820
- It accesses the Spotify API


00:59:47.820 --> 00:59:51.140
and I can access any playlists from there.


00:59:51.140 --> 00:59:54.200
So I go on to all the editorial playlists,


00:59:54.200 --> 00:59:59.200
like today's top hits or rap caviar, whatever it is.


00:59:59.200 --> 01:00:03.460
But then I can also access any user playlist,


01:00:03.460 --> 01:00:05.260
playlist my manager shared with me


01:00:05.260 --> 01:00:07.200
or playlist I've created.


01:00:07.200 --> 01:00:11.100
And I grabbed a random sample from each of those.


01:00:11.100 --> 01:00:14.940
And then some of the parameters are hard-coded


01:00:14.940 --> 01:00:18.620
in that script, but then I also came up with the idea


01:00:18.620 --> 01:00:22.180
of creating a front end with the Google Sheet.


01:00:22.180 --> 01:00:25.860
So in the Google Sheet, I can see one column


01:00:25.860 --> 01:00:28.940
is all the different playlists I'm drawing from.


01:00:28.940 --> 01:00:30.560
And then another column is how many songs


01:00:30.560 --> 01:00:32.700
I wanna pull from there each day.


01:00:32.700 --> 01:00:35.660
another column would be like, how long do I


01:00:35.660 --> 01:00:38.300
have to wait before a song is allowed to come in again?


01:00:38.300 --> 01:00:41.540
So every day--


01:00:41.540 --> 01:00:42.260
>>Victor: That's super cool.


01:00:42.260 --> 01:00:45.140
I love how you've automated this to go basically scrape


01:00:45.140 --> 01:00:48.500
through that, because these streaming services,


01:00:48.500 --> 01:00:49.140
they're great.


01:00:49.140 --> 01:00:52.020
But when you say, play my channel,


01:00:52.020 --> 01:00:55.500
they really get in a groove of, here's the 100 songs


01:00:55.500 --> 01:00:57.420
we've decided you don't skip.


01:00:57.420 --> 01:00:58.300
>>Kyle: Yeah.


01:00:58.300 --> 01:01:03.340
So I can also control what songs, what artists,


01:01:03.340 --> 01:01:05.260
and what genres are banned.


01:01:05.260 --> 01:01:10.060
And with Python, I can create a more complex algorithm.


01:01:10.060 --> 01:01:15.100
So I only want to hear hip hop from before 1996,


01:01:15.100 --> 01:01:19.300
except for Kanye and Cardi B. I'll let those ones through.


01:01:19.300 --> 01:01:20.300
>>Yeah, yeah, very cool.


01:01:20.300 --> 01:01:22.260
>>Whatever you want.


01:01:22.260 --> 01:01:25.060
So I only go to that same playlist every day.


01:01:25.060 --> 01:01:27.580
Makes my life a little simpler.


01:01:27.580 --> 01:01:28.660
- Wow, that is so neat.


01:01:28.660 --> 01:01:30.860
And I did not plan this.


01:01:30.860 --> 01:01:32.340
I don't know, this is just sort of


01:01:32.340 --> 01:01:34.200
some awesome inception thing.


01:01:34.200 --> 01:01:38.340
So I pull up the PyPI listing for Spotify


01:01:38.340 --> 01:01:43.340
and their documentation shows how to get the playlist


01:01:43.340 --> 01:01:46.460
from U-Rivers, from Weezer, which is just,


01:01:46.460 --> 01:01:47.300
man, that is so awesome.


01:01:47.300 --> 01:01:48.420
- This feels like a setup.


01:01:48.420 --> 01:01:50.220
This does feel like a setup.


01:01:50.220 --> 01:01:52.540
- That's, I have not seen that before.


01:01:52.540 --> 01:01:54.700
I think that's a recent change.


01:01:54.700 --> 01:01:56.900
- Yeah, yeah, Brian on the live stream also.


01:01:56.900 --> 01:01:58.500
I noticed that that's awesome.


01:01:58.500 --> 01:02:01.140
And then Zachary the Hacker says,


01:02:01.140 --> 01:02:03.980
"Rivers, please tell me this app is available.


01:02:03.980 --> 01:02:06.220
This sounds amazing, I need it."


01:02:06.220 --> 01:02:08.240
- Yeah, it was one of the very first apps


01:02:08.240 --> 01:02:10.020
I tried to publish online.


01:02:10.020 --> 01:02:12.340
And so it was super janky.


01:02:12.340 --> 01:02:15.660
And I don't think it works at all anymore,


01:02:15.660 --> 01:02:19.840
but yeah, maybe, I found that people didn't use it


01:02:19.840 --> 01:02:22.320
in the way I expected them to.


01:02:22.320 --> 01:02:24.820
Most people, they would say,


01:02:24.820 --> 01:02:26.860
they would just put in the name of an artist


01:02:26.860 --> 01:02:28.100
or the name of an album.


01:02:28.100 --> 01:02:31.460
And really it's more useful for sampling from playlists


01:02:31.460 --> 01:02:33.780
'cause then you have a much greater variety.


01:02:33.780 --> 01:02:36.220
People would just go and put in their favorite three bands


01:02:36.220 --> 01:02:38.860
and the results weren't all that impressive.


01:02:38.860 --> 01:02:39.700
- Yeah, yeah, guess what?


01:02:39.700 --> 01:02:42.420
You know with music from your three favorite bands.


01:02:42.420 --> 01:02:46.220
- There was a talk last year at Pi Gotham


01:02:46.220 --> 01:02:50.540
by Angeline Pertasio called the Album Discoverer,


01:02:50.540 --> 01:02:52.780
which was like an album recommendation system


01:02:52.780 --> 01:02:54.180
that uses something similar to this.


01:02:54.180 --> 01:02:59.180
but it was like going into a deep dive of Spotify's API.


01:02:59.180 --> 01:03:03.740
And I mean, I will give Spotify all their props


01:03:03.740 --> 01:03:07.300
'cause there's just so much information


01:03:07.300 --> 01:03:09.700
and stuff that is like similar


01:03:09.700 --> 01:03:13.160
to like your previous example, Rivers,


01:03:13.160 --> 01:03:16.300
where you had these variables that most people


01:03:16.300 --> 01:03:20.620
who don't think about music wouldn't think about originally.


01:03:20.620 --> 01:03:22.340
Like, they're like, is it somber?


01:03:22.340 --> 01:03:23.740
Does it have good gut feel?


01:03:23.740 --> 01:03:24.780
like stuff like that.


01:03:24.780 --> 01:03:27.220
And you're just like, I don't know how you quantify that.


01:03:27.220 --> 01:03:30.880
But at the same time, like it was the talk was really


01:03:30.880 --> 01:03:35.480
interesting because it showed like a comparison of tracks


01:03:35.480 --> 01:03:39.580
that were in different genres, but had similar feelings.


01:03:39.580 --> 01:03:41.740
And it was a really cool example.


01:03:41.740 --> 01:03:43.780
And I've been trying to find it online while you,


01:03:43.780 --> 01:03:45.580
when you mentioned it, but I can't find it.


01:03:45.580 --> 01:03:47.940
So I'll have to reach out to the PyGotham team


01:03:47.940 --> 01:03:49.380
and see if I can get, you know,


01:03:49.380 --> 01:03:51.140
find out where that link is.


01:03:51.140 --> 01:03:53.060
- Yeah. I know just what you're talking about.


01:03:53.060 --> 01:03:55.980
and Spotify gives you access to all that data.


01:03:55.980 --> 01:04:02.140
That being said, I'm skeptical of a lot of it


01:04:02.140 --> 01:04:05.100
because I've seen the data on my own songs.


01:04:05.100 --> 01:04:07.680
(laughing)


01:04:07.680 --> 01:04:11.140
We covered "Take On Me" by A-ha,


01:04:11.140 --> 01:04:14.220
and which is a very danceable song,


01:04:14.220 --> 01:04:15.060
especially compared to-


01:04:15.060 --> 01:04:16.540
- That was a really good one.


01:04:16.540 --> 01:04:18.800
- Yeah, especially compared to normal Weezer song,


01:04:18.800 --> 01:04:21.400
you'd think that would be rated very high


01:04:21.400 --> 01:04:23.960
on the parameter of danceability,


01:04:23.960 --> 01:04:27.380
but they rate it as one of our least danceable songs.


01:04:27.380 --> 01:04:29.360
- Hold on.


01:04:29.360 --> 01:04:31.080
Oh, interesting.


01:04:31.080 --> 01:04:33.040
Oh, very cool.


01:04:33.040 --> 01:04:35.760
I love this look at how you're interacting with music


01:04:35.760 --> 01:04:37.200
because it's really different


01:04:37.200 --> 01:04:39.080
than I think a lot of people out there


01:04:39.080 --> 01:04:41.240
just looking for something in the background.


01:04:41.240 --> 01:04:42.660
Cool.


01:04:42.660 --> 01:04:45.640
- I must admit, I think you're onto something here.


01:04:45.640 --> 01:04:47.000
You were saying there, Michael,


01:04:47.000 --> 01:04:48.480
if you just let Spotify do its own thing,


01:04:48.480 --> 01:04:50.040
it'll say to you, here's the things you've listened to


01:04:50.040 --> 01:04:51.360
again and again and again.


01:04:51.360 --> 01:04:52.680
including the things you've always skipped,


01:04:52.680 --> 01:04:55.620
which we are convinced you'll listen to if you play enough.


01:04:55.620 --> 01:04:57.600
But I should be doing this.


01:04:57.600 --> 01:04:59.280
I should craft it more deeply


01:04:59.280 --> 01:05:01.400
to kind of get exactly what I want to listen to,


01:05:01.400 --> 01:05:03.240
or at least things that sound like stuff


01:05:03.240 --> 01:05:04.240
I like to listen to.


01:05:04.240 --> 01:05:05.400
This is brilliant.


01:05:05.400 --> 01:05:06.520
- Yeah, absolutely.


01:05:06.520 --> 01:05:09.240
And as you sat there in the live stream,


01:05:09.240 --> 01:05:10.200
welcome, welcome.


01:05:10.200 --> 01:05:11.440
Says awesome app reverse,


01:05:11.440 --> 01:05:13.440
please share so I can get an automated


01:05:13.440 --> 01:05:14.800
Chimba Wamba playlist.


01:05:14.800 --> 01:05:17.560
(both laughing)


01:05:17.560 --> 01:05:18.400
Fantastic, yeah, I agree.


01:05:18.400 --> 01:05:19.440
That's a really, really cool one.


01:05:19.440 --> 01:05:20.280
All right, I want to share one.


01:05:20.280 --> 01:05:21.620
I'll be really quick since we're at the end.


01:05:21.620 --> 01:05:23.460
This is my second one as well.


01:05:23.460 --> 01:05:25.020
This brings together a lot of pieces.


01:05:25.020 --> 01:05:26.900
It is ridiculously simple.


01:05:26.900 --> 01:05:30.160
Like you're almost like, why would you ever do this?


01:05:30.160 --> 01:05:31.940
So I built this app and it has a screenshot


01:05:31.940 --> 01:05:35.880
because it's an app that runs in the Mac toolbar


01:05:35.880 --> 01:05:38.880
in the notification area by the clock.


01:05:38.880 --> 01:05:41.060
And this is primarily why I even wanted to bother


01:05:41.060 --> 01:05:43.220
bringing this up because if you've got these little scripts


01:05:43.220 --> 01:05:46.620
like Kim talked about GUI, which is a cool thing


01:05:46.620 --> 01:05:48.300
you package up as an EXE you can share,


01:05:48.300 --> 01:05:50.460
but sometimes you just want like a little notification thing


01:05:50.460 --> 01:05:52.020
or something that might listen to a hotkey


01:05:52.020 --> 01:05:54.340
that it can just like live up there.


01:05:54.340 --> 01:05:56.380
And so one of the things that I have to do all the time


01:05:56.380 --> 01:05:58.480
is I'll take the title of a podcast,


01:05:58.480 --> 01:06:01.060
I will take the title of a course video,


01:06:01.060 --> 01:06:02.720
again, thousands of them,


01:06:02.720 --> 01:06:07.540
and I want to turn that into a file name that will work well.


01:06:07.540 --> 01:06:09.580
So I have this little app called URLify,


01:06:09.580 --> 01:06:10.620
which is probably poorly named,


01:06:10.620 --> 01:06:12.700
but it does like simple little text transform.


01:06:12.700 --> 01:06:14.660
So it uses Piperclip again,


01:06:14.660 --> 01:06:15.760
and I can just click a thing


01:06:15.760 --> 01:06:17.580
and it'll turn it into something that would look


01:06:17.580 --> 01:06:19.020
like a slug for URL.


01:06:19.020 --> 01:06:23.860
So like if it was the playlist with spaces and a capital T,


01:06:23.860 --> 01:06:25.660
it'll be all lowercase with dashes,


01:06:25.660 --> 01:06:29.020
and it'll strip out symbols that wouldn't work, right?


01:06:29.020 --> 01:06:31.500
So that actually turned out to be incredibly helpful


01:06:31.500 --> 01:06:34.100
'cause I can always reliably name stuff the same.


01:06:34.100 --> 01:06:35.380
And anytime I put something in,


01:06:35.380 --> 01:06:38.700
I just copy like the title of a presentation,


01:06:38.700 --> 01:06:39.700
and then I hit that button,


01:06:39.700 --> 01:06:42.500
and it turns it into just the right file name.


01:06:42.500 --> 01:06:44.100
And then that app I talked about before,


01:06:44.100 --> 01:06:46.320
it'll actually read that and then reverse engineer it


01:06:46.320 --> 01:06:50.280
back into like a title, like with case,


01:06:50.280 --> 01:06:51.640
the right case scene and stuff again.


01:06:51.640 --> 01:06:53.920
So it actually, it sort of comes all around about.


01:06:53.920 --> 01:06:57.080
But the thing to build this is there's this app called Rumps


01:06:57.080 --> 01:06:59.040
and I'm just be careful when you search for this,


01:06:59.040 --> 01:07:01.400
I'll link to it, Rumps.


01:07:01.400 --> 01:07:04.160
And it's an acronym for ridiculously uncomplicated


01:07:04.160 --> 01:07:06.720
macOS Python status bar apps.


01:07:06.720 --> 01:07:10.480
Woo, so glad it has a shorter name, but just like GUI,


01:07:10.480 --> 01:07:14.000
like there is a full on application on the screen here


01:07:14.000 --> 01:07:16.600
that you can find on the PyPI listing,


01:07:16.600 --> 01:07:18.800
which I don't know, what is that, 12, 15 lines of code?


01:07:18.800 --> 01:07:20.260
And you've got a notification app


01:07:20.260 --> 01:07:25.260
that pops up little macOS Toast runs as a .app


01:07:25.260 --> 01:07:28.240
in your Mac bar there,


01:07:28.240 --> 01:07:31.120
which I built the .app with, Py2 app.


01:07:31.120 --> 01:07:35.680
So yeah, that's two really cool things to put together


01:07:35.680 --> 01:07:36.640
to just like, I want something


01:07:36.640 --> 01:07:38.240
that's always up in my Mac bar.


01:07:38.240 --> 01:07:39.460
There's probably something like this


01:07:39.460 --> 01:07:41.620
for the taskbar in Windows, but I haven't found it.


01:07:41.620 --> 01:07:43.700
So I'd love to give it a shout out,


01:07:43.700 --> 01:07:44.760
but I just don't know.


01:07:44.760 --> 01:07:47.060
- This sounds like a great little free course.


01:07:47.060 --> 01:07:48.760
- Yeah, it does.


01:07:48.760 --> 01:07:49.580
(laughing)


01:07:49.580 --> 01:07:51.680
Maybe I should just take a week and build it.


01:07:51.680 --> 01:07:52.940
I've actually been thinking about building


01:07:52.940 --> 01:07:54.180
like little notification app,


01:07:54.180 --> 01:07:56.640
like a simple, simple GUI,


01:07:56.640 --> 01:08:00.000
like GUI, GUI, G-O-O-U-I, and like this,


01:08:00.000 --> 01:08:02.000
and maybe that taskbar one.


01:08:02.000 --> 01:08:05.720
- You can fork a archive project that I have then,


01:08:05.720 --> 01:08:08.840
'cause I actually used rumps to make like a,


01:08:08.840 --> 01:08:10.840
like we've all seen those little timer apps


01:08:10.840 --> 01:08:12.240
where you can put a bunch of dates in


01:08:12.240 --> 01:08:15.520
it'll tell you how soon until that thing was happening.


01:08:15.520 --> 01:08:19.080
I made an app called Wins App that I just put on GitHub,


01:08:19.080 --> 01:08:22.040
and it was just like, "I'm not going to develop this anymore."


01:08:22.040 --> 01:08:24.160
I'll send you the link for it, Michael.


01:08:24.160 --> 01:08:27.480
But the thing I like about this is there are


01:08:27.480 --> 01:08:30.960
so many tools that just do the thing and do it really simple,


01:08:30.960 --> 01:08:34.800
really quick, and when you think of stuff like, what is it?


01:08:34.800 --> 01:08:38.320
PipX, where you can call a command


01:08:38.320 --> 01:08:41.480
directly from your command line,


01:08:41.480 --> 01:08:43.240
and it just runs and does the thing,


01:08:43.240 --> 01:08:44.920
like that's always nice.


01:08:44.920 --> 01:08:47.000
And then doing things like rumps,


01:08:47.000 --> 01:08:49.420
where it's like, okay, I wanna do this thing normally,


01:08:49.420 --> 01:08:50.960
but I wanna put it up in my menu bar


01:08:50.960 --> 01:08:54.580
so that I can just take a quick look and see it.


01:08:54.580 --> 01:08:57.160
Yeah, I think it's super awesome to,


01:08:57.160 --> 01:08:58.880
we've talked about these big programs


01:08:58.880 --> 01:09:00.720
or these things that change our lives,


01:09:00.720 --> 01:09:04.280
but sometimes it's even just like the little things


01:09:04.280 --> 01:09:06.280
that you can look to see when,


01:09:06.280 --> 01:09:09.240
how soon before your anniversary is coming up


01:09:09.240 --> 01:09:10.300
so you don't forget it.


01:09:10.300 --> 01:09:13.200
or like, hey, when is that big meeting


01:09:13.200 --> 01:09:14.560
that I'm supposed to be preparing for?


01:09:14.560 --> 01:09:16.180
When is that big conference presentation


01:09:16.180 --> 01:09:18.120
or when a CFP deadline is due?


01:09:18.120 --> 01:09:20.580
And you can just make a little applet


01:09:20.580 --> 01:09:22.200
that you just run every now and then


01:09:22.200 --> 01:09:24.080
and get results like that.


01:09:24.080 --> 01:09:26.620
- Yeah, you're making me think that the next one


01:09:26.620 --> 01:09:29.880
that I wanna build is one for when I go live stream


01:09:29.880 --> 01:09:31.460
on a recording, I wanna send out a tweet,


01:09:31.460 --> 01:09:33.500
I wanna update the website, so as a little banner,


01:09:33.500 --> 01:09:35.780
we're live streaming right now, all those kinds of things.


01:09:35.780 --> 01:09:37.200
That just seems like another one up there.


01:09:37.200 --> 01:09:40.020
I just click, we're live right now and boom, off it goes.


01:09:40.020 --> 01:09:41.860
- I'd like a little button that opens up


01:09:41.860 --> 01:09:43.620
my Jupyter notebooks, you know,


01:09:43.620 --> 01:09:45.940
like I always have to clear my desktop all over.


01:09:45.940 --> 01:09:48.180
So I would take the time to make something like that.


01:09:48.180 --> 01:09:49.140
It would be cool.


01:09:49.140 --> 01:09:51.220
- Yeah, that'd be super neat.


01:09:51.220 --> 01:09:53.280
All right, guys, it looks like we're a little bit over time,


01:09:53.280 --> 01:09:55.340
but so many interesting things.


01:09:55.340 --> 01:09:57.600
Thank you all for being here.


01:09:57.600 --> 01:09:59.620
Now, since there's so many of us, I'm not gonna,


01:09:59.620 --> 01:10:00.940
and I think we've all just,


01:10:00.940 --> 01:10:02.460
this has basically been the entire show,


01:10:02.460 --> 01:10:03.700
like these little libraries.


01:10:03.700 --> 01:10:04.540
So normally I ask, you know,


01:10:04.540 --> 01:10:06.760
what's your favorite PyPI package you wanna recommend?


01:10:06.760 --> 01:10:08.460
But like, we've got 30 of them.


01:10:08.460 --> 01:10:10.140
So that was a show, it was awesome.


01:10:10.140 --> 01:10:12.000
But just really quick, I'll go around


01:10:12.000 --> 01:10:15.820
for the final question, favorite editor, Rusty.


01:10:15.820 --> 01:10:17.860
- Start VS Code again.


01:10:17.860 --> 01:10:19.500
- Right on, Kim.


01:10:19.500 --> 01:10:20.740
- Emacs still.


01:10:20.740 --> 01:10:22.140
- Emacs, right on.


01:10:22.140 --> 01:10:23.940
Yeah, you'd like to type on an operating system


01:10:23.940 --> 01:10:26.340
that is itself artificial intelligence, got it.


01:10:26.340 --> 01:10:27.180
- Pretty much, yeah.


01:10:27.180 --> 01:10:29.340
- Yeah, Rivers.


01:10:29.340 --> 01:10:30.460
- VS Code.


01:10:30.460 --> 01:10:31.820
- Okay, right on.


01:10:31.820 --> 01:10:33.380
It's a good one, Jay.


01:10:33.380 --> 01:10:35.360
- The war begins, Kim, them.


01:10:35.360 --> 01:10:38.380
- Well, them you said at least.


01:10:38.380 --> 01:10:40.380
- I'm basically using the N version.


01:10:40.380 --> 01:10:41.880
- Neo version.


01:10:41.880 --> 01:10:42.720
- Awesome.


01:10:42.720 --> 01:10:44.500
- Yeah, I can tolerate them.


01:10:44.500 --> 01:10:47.300
Basically, yeah, I can tolerate it,


01:10:47.300 --> 01:10:50.020
but if I have to very, very slowly get things done,


01:10:50.020 --> 01:10:50.960
because basically the problem,


01:10:50.960 --> 01:10:51.900
and I'm sure you've,


01:10:51.900 --> 01:10:54.300
that probably happens less to Vim guys.


01:10:54.300 --> 01:10:55.180
If you're an Emacs guy,


01:10:55.180 --> 01:10:57.380
then you remember the key bindings for Emacs,


01:10:57.380 --> 01:11:00.260
and VI is what's on the really primitive servers.


01:11:00.260 --> 01:11:02.220
And you cannot remember how to make it do things


01:11:02.220 --> 01:11:03.540
'cause you keep pushing the wrong buttons


01:11:03.540 --> 01:11:06.100
because your fingers remember Emacs commands.


01:11:06.100 --> 01:11:07.460
The same would probably happen to you,


01:11:07.460 --> 01:11:09.620
but you probably don't necessarily have to use Emacs


01:11:09.620 --> 01:11:11.420
very often because VI is everywhere.


01:11:11.420 --> 01:11:13.160
- If I have to use a text editor,


01:11:13.160 --> 01:11:16.840
there will be like H, J, K, Ls just all over the place


01:11:16.840 --> 01:11:18.660
because I think I'm in normal mode.


01:11:18.660 --> 01:11:20.940
I'm just like, oh no, it's just typing.


01:11:20.940 --> 01:11:22.740
- Yeah.


01:11:22.740 --> 01:11:24.340
I'm reminded of the joke.


01:11:24.340 --> 01:11:26.820
Like how do you generate a random string?


01:11:26.820 --> 01:11:29.340
You give a first year computer science student Vim


01:11:29.340 --> 01:11:30.740
and you tell them to exit it.


01:11:30.740 --> 01:11:33.320
(all laughing)


01:11:33.320 --> 01:11:36.380
All right, you guys, thank you so much for being here.


01:11:36.380 --> 01:11:37.460
It's been really great.


01:11:37.460 --> 01:11:39.700
Everyone is doing such neat stuff.


01:11:39.700 --> 01:11:42.060
And I'm sure we're going to inspire a lot of people,


01:11:42.060 --> 01:11:42.700
even ourselves.


01:11:42.700 --> 01:11:43.820
Like Rusty's like, I need a button


01:11:43.820 --> 01:11:45.260
to launch on my Jupyter Notebooks.


01:11:45.260 --> 01:11:47.220
I'm going to do one for live streaming.


01:11:47.220 --> 01:11:48.540
So thank you.


01:11:48.540 --> 01:11:49.900
Thank you all for being here.


01:11:49.900 --> 01:11:51.100
It's been great.


01:11:51.100 --> 01:11:51.700
- Thank you.


01:11:51.700 --> 01:11:52.100
- Thanks, Michael.


01:11:52.100 --> 01:11:52.860
That was fantastic.


01:11:52.860 --> 01:11:53.340
- Thank you.


01:11:53.340 --> 01:11:54.260
- Thank you, everyone.


01:11:54.260 --> 01:11:55.060
- You bet.


01:11:55.060 --> 01:11:55.860
Bye.

