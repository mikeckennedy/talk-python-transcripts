WEBVTT

00:00:00.000 --> 00:00:03.120
>> Hello, hello.


00:00:03.120 --> 00:00:05.760
Hey, Darian, Jeremy, Sylvain, and Frederick.


00:00:05.760 --> 00:00:08.160
Welcome to all of you to Talk Python To Me.


00:00:08.160 --> 00:00:09.560
It's great to have you here.


00:00:09.560 --> 00:00:11.040
>> Hey, thanks for having me.


00:00:11.040 --> 00:00:12.760
>> Yeah, thanks.


00:00:12.760 --> 00:00:15.240
>> Thanks, Michael.


00:00:15.240 --> 00:00:17.760
>> Yeah, you bet.


00:00:17.760 --> 00:00:24.080
I'm honored to have so many Jupyter team members,


00:00:24.080 --> 00:00:27.040
people around here, and all the work you've done on


00:00:27.040 --> 00:00:28.920
the different parts of Jupyter Notebook,


00:00:28.920 --> 00:00:33.320
JupyterLab, JupyterLite, all the things is really fantastic.


00:00:33.320 --> 00:00:37.600
I'm looking forward to celebrating the new releases.


00:00:37.600 --> 00:00:39.000
They're not quite as new as


00:00:39.000 --> 00:00:40.520
when we first started talking about this.


00:00:40.520 --> 00:00:44.440
It took us a while to put this many people together on for an hour,


00:00:44.440 --> 00:00:47.040
but it's going to be great, right?


00:00:47.040 --> 00:00:48.840
>> Sounds good.


00:00:48.840 --> 00:00:53.600
>> Yeah, for sure. Before we get into the topics,


00:00:53.600 --> 00:00:56.680
maybe just a quick introduction for each of you here,


00:00:56.680 --> 00:01:00.000
and we'll go around the Brady Bunch circles in the video.


00:01:00.000 --> 00:01:01.320
Darian, we'll start with you.


00:01:01.320 --> 00:01:04.480
>> Sure. Hi. I'm Darian.


00:01:04.480 --> 00:01:10.360
I work at QuantStack along with everyone else on this call.


00:01:10.360 --> 00:01:20.200
I have been working on the JupyterStack for about eight years now.


00:01:21.440 --> 00:01:30.080
I originally started working on what became JupyterLab.


00:01:30.080 --> 00:01:34.000
Nowadays, in addition to that aspect of things,


00:01:34.000 --> 00:01:37.800
I'm also part of the Jupyter Executive Council,


00:01:37.800 --> 00:01:43.600
which is one of the governing bodies of the project.


00:01:43.600 --> 00:01:44.960
As of this year,


00:01:44.960 --> 00:01:48.440
we actually changed our governance structure.


00:01:49.200 --> 00:01:53.960
Each year, there are elections and we have this new set


00:01:53.960 --> 00:01:58.840
of governing institutions that I've been a part of.


00:01:58.840 --> 00:02:00.760
>> That's really fantastic.


00:02:00.760 --> 00:02:05.520
There's a lot of projects where there's one maintainer,


00:02:05.520 --> 00:02:07.320
who is primarily the maintainer.


00:02:07.320 --> 00:02:12.600
Then there's projects that get put under an organization like Flask with Palettes.


00:02:12.600 --> 00:02:18.360
But there's not very many open-source projects like this that have governing bodies.


00:02:18.360 --> 00:02:22.600
Python itself comes to mind, Django.


00:02:22.600 --> 00:02:30.560
That's awesome. I think Jupyter is such a vibrant ecosystem.


00:02:30.560 --> 00:02:32.920
>> It's an exciting space for sure.


00:02:32.920 --> 00:02:34.600
>> Yeah, absolutely. All right,


00:02:34.600 --> 00:02:36.800
Jeremy, quick background on you.


00:02:36.800 --> 00:02:38.800
>> Yeah. I'm Jeremy.


00:02:38.800 --> 00:02:43.240
I've also been working on the JupyterStack for a couple of years,


00:02:43.240 --> 00:02:45.920
I think something around five or six years.


00:02:45.920 --> 00:02:49.600
I started a bit like on my own first,


00:02:49.600 --> 00:02:51.600
like a spare time thing,


00:02:51.600 --> 00:02:56.960
contributing to projects on GitHub before joining Constack.


00:02:56.960 --> 00:03:01.920
Currently, I'm mostly involved in the JupyterLab project,


00:03:01.920 --> 00:03:04.240
so the Jupyter Notebook 7,


00:03:04.240 --> 00:03:08.280
Voila Dashboards, also a bit of


00:03:08.280 --> 00:03:12.920
iPad widgets and most recently on the JupyterLite.


00:03:12.920 --> 00:03:16.160
>> Nice. Sylvain.


00:03:16.160 --> 00:03:18.680
>> Hi, everyone. Yes, I'm Sylvain.


00:03:18.680 --> 00:03:21.000
I'm the CEO of Constack,


00:03:21.000 --> 00:03:23.200
which I founded in 2016.


00:03:23.200 --> 00:03:27.040
I've been working on the JupyterStack for about 10 years now.


00:03:27.040 --> 00:03:31.320
It's been a while. I think it's almost the anniversary right now.


00:03:31.320 --> 00:03:33.920
In the Jupyter ecosystem,


00:03:33.920 --> 00:03:37.120
I mostly worked on kernels, widgets,


00:03:37.120 --> 00:03:42.880
the Jupyter server, and a tiny bit on the front-end pieces as well.


00:03:42.880 --> 00:03:47.720
>> Excellent. It's a Jupyter space over there at Constack,


00:03:47.720 --> 00:03:49.480
top to bottom, right?


00:03:49.480 --> 00:03:50.840
>> That's right.


00:03:50.840 --> 00:03:54.120
>> Awesome. Hey, Frederic, welcome.


00:03:54.120 --> 00:03:57.800
>> Hey, everybody. I'm Frederic.


00:03:57.800 --> 00:04:01.120
I'm working at Constack as everybody else.


00:04:01.120 --> 00:04:03.920
I'm working mainly on JupyterLab.


00:04:03.920 --> 00:04:05.920
I'm actually the representative to


00:04:05.920 --> 00:04:11.120
the Software Steering Council of Jupyter for that sub-project mainly.


00:04:11.120 --> 00:04:16.760
I started contributing like Jeremy five to six years ago,


00:04:16.760 --> 00:04:21.760
trying to convince colleague in my aeronautic company back then,


00:04:21.760 --> 00:04:25.760
to use Python and Jupyter instead of Excel.


00:04:25.760 --> 00:04:29.960
>> You're fighting the good fight. That's awesome.


00:04:29.960 --> 00:04:37.320
Yeah. Maybe I could ask you all a quick question


00:04:37.320 --> 00:04:38.640
since it might give people


00:04:38.640 --> 00:04:41.800
interesting view into the world of Jupyter.


00:04:41.800 --> 00:04:45.200
There's a lot of reasons people get into programming,


00:04:45.200 --> 00:04:51.080
but what attracted you all individually to the Jupyter ecosystem itself?


00:04:51.080 --> 00:04:54.320
Darian, how about you?


00:04:54.320 --> 00:04:58.080
>> I got lucky.


00:04:58.080 --> 00:05:03.200
I liked the idea of working on open-source software,


00:05:03.200 --> 00:05:07.200
and I'd worked at a few startups that released


00:05:07.200 --> 00:05:09.920
open-source software but they were


00:05:09.920 --> 00:05:14.200
startup projects that were driven primarily by one company.


00:05:14.200 --> 00:05:16.960
Some of them had community in the sense that there were


00:05:16.960 --> 00:05:19.200
lots of users and there'd be a lot of traffic,


00:05:19.200 --> 00:05:20.720
say, on forums and stuff,


00:05:20.720 --> 00:05:23.200
but not community in the sense of


00:05:23.200 --> 00:05:27.120
public-minded group runs this thing and makes decision.


00:05:27.120 --> 00:05:30.480
The decision was at my employers.


00:05:30.480 --> 00:05:33.760
Nonetheless, I liked it.


00:05:33.760 --> 00:05:39.920
I just accidentally happened on working with


00:05:39.920 --> 00:05:44.160
the team that was building a new front-end for Jupyter


00:05:44.160 --> 00:05:47.640
because I liked JavaScript


00:05:47.640 --> 00:05:50.000
and other people in the Jupyter community did not,


00:05:50.000 --> 00:05:53.720
so they had to bring from outside the Jupyter community in


00:05:53.720 --> 00:05:58.960
because Python people at the time tended to hate JavaScript.


00:05:58.960 --> 00:06:02.160
Now, I think that's still the same.


00:06:03.000 --> 00:06:07.720
I got into Jupyter because I like JavaScript,


00:06:07.720 --> 00:06:10.000
but I stayed in Jupyter because I


00:06:10.000 --> 00:06:13.440
liked a community open-source project


00:06:13.440 --> 00:06:18.240
that was doing something that I didn't really know you could do,


00:06:18.240 --> 00:06:26.280
which is to mix your research and your results,


00:06:26.280 --> 00:06:28.760
and the pros that you write,


00:06:28.760 --> 00:06:31.720
and the output of the analysis that you do,


00:06:31.720 --> 00:06:33.560
all in one document and share it with people,


00:06:33.560 --> 00:06:34.600
and they can reproduce it,


00:06:34.600 --> 00:06:35.560
and they can run your code,


00:06:35.560 --> 00:06:37.800
and they can tweak it, and they can do all those things without


00:06:37.800 --> 00:06:44.640
ever going through what I thought were the necessary prerequisites to writing code.


00:06:44.640 --> 00:06:46.840
It turns out, none of those were necessary.


00:06:46.840 --> 00:06:48.480
You could make it way easier for people.


00:06:48.480 --> 00:06:49.960
I liked working on that.


00:06:49.960 --> 00:06:52.000
I like the community. I like the people,


00:06:52.000 --> 00:06:55.000
and that's why I'm still here.


00:06:55.000 --> 00:07:00.000
>> Yeah. Excellent. It is pretty unique of an idea to say,


00:07:00.000 --> 00:07:02.080
"We're going to have a document,


00:07:02.080 --> 00:07:04.040
we're going to have results, and we're going to have code,


00:07:04.040 --> 00:07:07.120
and it's going to be live." That's very special.


00:07:07.120 --> 00:07:10.560
Jeremy, how did you get into Jupyter?


00:07:10.560 --> 00:07:14.880
>> Yeah. I started as a user,


00:07:14.880 --> 00:07:19.640
I think back in the days when it was still the IPython notebook,


00:07:19.640 --> 00:07:24.080
all together just Python programming language.


00:07:24.080 --> 00:07:27.320
I think that was really this idea of being able


00:07:27.320 --> 00:07:33.200
to write normal text alongside code,


00:07:33.200 --> 00:07:37.200
and have this narrative with charts,


00:07:37.200 --> 00:07:39.320
interactive graphs, and so on,


00:07:39.320 --> 00:07:41.440
and share that with two people.


00:07:41.440 --> 00:07:44.840
I used it on my own for personal project,


00:07:44.840 --> 00:07:48.280
but also different companies to share reports,


00:07:48.280 --> 00:07:52.200
and then communicate results more easily.


00:07:52.200 --> 00:07:55.560
After a while, when you start using a tool,


00:07:55.560 --> 00:07:57.920
you want to make fixes to it or improve it.


00:07:57.920 --> 00:08:04.400
That's how you can go to the contributor site,


00:08:04.400 --> 00:08:06.920
start submitting pull request,


00:08:06.920 --> 00:08:10.880
and getting in touch with the community.


00:08:10.880 --> 00:08:13.880
>> Excellent. Sylvain, I'm going to come back to you.


00:08:13.880 --> 00:08:17.320
Frederic, let's have your story.


00:08:17.320 --> 00:08:19.760
>> That's a bit like Jeremy.


00:08:19.760 --> 00:08:21.920
As I said, I try to convince people that


00:08:21.920 --> 00:08:25.080
something better than Excel exist out there.


00:08:25.080 --> 00:08:27.680
That's when I discovered Jupyter.


00:08:27.680 --> 00:08:31.320
What was really interesting was the ability to,


00:08:31.320 --> 00:08:37.280
as Aishin said, mixing very nice and advanced visualization with


00:08:37.280 --> 00:08:41.720
text and being able to do that interactively so that in a meeting,


00:08:41.720 --> 00:08:47.800
you don't have to remember which tab in your Excel is the right result.


00:08:47.800 --> 00:08:51.000
It's like you just type two lines of Python code and you get


00:08:51.000 --> 00:08:56.200
a nice graph to display the points you try to make from the data.


00:08:56.200 --> 00:08:58.960
That was it. As Jeremy then,


00:08:58.960 --> 00:09:00.200
at some point, he said, "Hey,


00:09:00.200 --> 00:09:04.560
I can do some stuff better and I can contribute because it's open source."


00:09:04.560 --> 00:09:09.120
I put my finger in that and now all my body is in it.


00:09:09.120 --> 00:09:13.080
>> Awesome. I think one of the ironies is,


00:09:13.080 --> 00:09:15.120
Darian touched on this actually,


00:09:15.120 --> 00:09:19.800
that to use Jupyter often is to write Python,


00:09:19.800 --> 00:09:24.080
but to contribute Jupyter is often to write JavaScript, TypeScript.


00:09:24.080 --> 00:09:26.640
You're taking one for the team,


00:09:26.640 --> 00:09:29.800
doing the JavaScript that no one else has to do.


00:09:29.800 --> 00:09:32.560
That's a little bit different, isn't it?


00:09:32.560 --> 00:09:39.880
>> I think nowadays with the maturity of TypeScript


00:09:39.880 --> 00:09:45.800
as something that serious large projects can use,


00:09:45.800 --> 00:09:47.440
it's a little bit better.


00:09:47.440 --> 00:09:51.520
But it wasn't obvious to us as


00:09:51.520 --> 00:09:56.880
a foregone conclusion that we should use TypeScript back in 2015.


00:09:56.880 --> 00:09:59.760
I think over time,


00:09:59.760 --> 00:10:03.320
that problem has somewhat attenuated,


00:10:03.320 --> 00:10:06.360
but we're not in the clear.


00:10:06.360 --> 00:10:11.400
We do definitely have a lot more people who would like to


00:10:11.400 --> 00:10:15.880
hack Python than would want to contribute to


00:10:15.880 --> 00:10:21.240
a gigantic TypeScript plugin-based front-end application.


00:10:21.240 --> 00:10:23.400
>> Yeah, exactly. They come to


00:10:23.400 --> 00:10:25.680
Jupyter because they're doing Python and they get really excited.


00:10:25.680 --> 00:10:26.800
I want to be part of this. I want to help.


00:10:26.800 --> 00:10:28.120
Oh, wait. Hold on.


00:10:28.120 --> 00:10:29.880
It's a bit of an irony or


00:10:29.880 --> 00:10:32.280
maybe even WebAssembly as we'll talk about, Jeremy.


00:10:32.280 --> 00:10:33.720
All right, Sylvan, back to you.


00:10:33.720 --> 00:10:37.000
I wanted to change the question a little bit for you and just maybe have you talk


00:10:37.000 --> 00:10:40.000
about what are the benefits of having QuantSight,


00:10:40.000 --> 00:10:43.520
the whole company being so in on Jupyter.


00:10:43.520 --> 00:10:48.560
How has that affected you-all for your business?


00:10:48.560 --> 00:10:52.000
>> Well, this is really how it started actually.


00:10:52.000 --> 00:11:00.880
I was a Jupyter contributor back in a previous job before I founded QuantStack.


00:11:00.880 --> 00:11:07.240
Really, QuantStack is almost an accidental startup in that I


00:11:07.240 --> 00:11:12.880
started the company as a means to continue working on the project,


00:11:12.880 --> 00:11:16.440
being paid by, as I was a core contributor already,


00:11:16.440 --> 00:11:19.840
being paid by clients on


00:11:19.840 --> 00:11:24.000
consulting contracts and whatnot to continue working on this.


00:11:24.000 --> 00:11:27.640
Very quickly, we had


00:11:27.640 --> 00:11:30.400
enough business that I could hire one other person,


00:11:30.400 --> 00:11:32.200
and then another, and then another.


00:11:32.200 --> 00:11:35.440
We bootstrapped from day one.


00:11:35.440 --> 00:11:38.760
Our success, I would say,


00:11:38.760 --> 00:11:41.280
is really bound to the success of the project.


00:11:41.280 --> 00:11:44.920
I think it's been a positive feedback loop since the very beginning.


00:11:44.920 --> 00:11:48.800
>> Excellent. Yeah. I'm sure it brings


00:11:48.800 --> 00:11:52.440
a real advantage when people come to look and see,


00:11:52.440 --> 00:11:59.600
"Yeah, this is the company to help me with Jupyter type of change,


00:11:59.600 --> 00:12:05.040
maybe adopting Jupyter or some advanced deployment problem-solving."


00:12:05.040 --> 00:12:09.280
>> Yeah. We're not trying to be the Jupyter company.


00:12:09.280 --> 00:12:13.560
There are other groups and we really have


00:12:13.560 --> 00:12:17.840
a consulting business model in that people


00:12:17.840 --> 00:12:21.760
can really come to us for our skills and expertise.


00:12:21.760 --> 00:12:23.280
It turns out that so far,


00:12:23.280 --> 00:12:28.000
we've been able to contribute back everything that we've done,


00:12:28.000 --> 00:12:29.200
or nearly everything.


00:12:29.200 --> 00:12:34.200
In some occasions, we have to do something that's very ad hoc to a client.


00:12:34.200 --> 00:12:38.000
Do some custom development that


00:12:38.000 --> 00:12:40.320
requires using some of their internal APIs or whatever.


00:12:40.320 --> 00:12:44.560
But I would say that 99 percent of our work is out there.


00:12:44.560 --> 00:12:47.480
>> Excellent. Awesome. All right.


00:12:47.480 --> 00:12:51.840
Well, let's start talking about just a recent event here.


00:12:51.840 --> 00:12:53.680
Couple of months ago,


00:12:53.680 --> 00:12:55.520
there was JupyterCon.


00:12:55.520 --> 00:12:57.960
I think the videos have been up for two months.


00:12:57.960 --> 00:12:59.480
So it's been around for a little while,


00:12:59.480 --> 00:13:01.880
but multiple of you,


00:13:01.880 --> 00:13:03.840
I don't know if all of you, I haven't gone through all of


00:13:03.840 --> 00:13:09.920
the videos here but there's 86 sessions posted for JupyterCon 2023.


00:13:09.920 --> 00:13:12.120
There's a ton of good stuff.


00:13:12.120 --> 00:13:15.280
Maybe you all could just speak to the talks that you gave


00:13:15.280 --> 00:13:19.200
there or some of the really interesting things that you want.


00:13:19.200 --> 00:13:23.000
People should maybe check out because if you just get into Jupyter,


00:13:23.000 --> 00:13:26.400
you can learn a lot by watching some of these talks, I think.


00:13:26.400 --> 00:13:31.160
>> I have a recommendation.


00:13:31.160 --> 00:13:37.600
Jupyter Notebook 7 was a talk where Jeremy and


00:13:37.600 --> 00:13:40.360
a few other contributors to the project


00:13:40.360 --> 00:13:44.360
introduced the new version of Jupyter Notebook.


00:13:44.360 --> 00:13:48.880
Usually, when you go from version 6-7 of a software package,


00:13:48.880 --> 00:13:50.680
it's an iteration.


00:13:50.680 --> 00:13:52.520
But in this particular case,


00:13:52.520 --> 00:13:56.640
it's a whole new application with a whole new architecture


00:13:56.640 --> 00:14:01.120
that has the same experience of the Jupyter Notebook.


00:14:01.120 --> 00:14:05.240
It has version 6 but has all new architecture and can use


00:14:05.240 --> 00:14:08.040
the same plugins as Lab and it's pretty exciting.


00:14:08.040 --> 00:14:12.160
I would recommend checking out that talk.


00:14:12.160 --> 00:14:15.760
>> Absolutely. That was a good one.


00:14:15.760 --> 00:14:20.960
That's also something that's main topic of the show is


00:14:20.960 --> 00:14:23.880
this interplay between JupyterLab and Jupyter Notebook


00:14:23.880 --> 00:14:28.160
and both of the big new releases.


00:14:28.160 --> 00:14:30.120
It's a big change, isn't it?


00:14:30.120 --> 00:14:33.800
Bigger than just the 6-7 would indicate.


00:14:33.800 --> 00:14:37.160
>> Yeah. There are also plenty of other videos.


00:14:37.160 --> 00:14:39.240
There are quite a few,


00:14:39.240 --> 00:14:43.360
let's say, technical videos or more like product updates,


00:14:43.360 --> 00:14:48.920
as we call them. Each sub-project has a talk where they


00:14:48.920 --> 00:14:50.880
discuss and present their new features


00:14:50.880 --> 00:14:54.640
or what they've been to in the past few months.


00:14:54.640 --> 00:14:59.880
But there are also quite a lot of interesting talks on use cases.


00:14:59.880 --> 00:15:04.400
So we can learn how people use Jupyter in the wild,


00:15:04.400 --> 00:15:08.040
like in companies or also in education.


00:15:08.040 --> 00:15:11.960
Those are very inspiring because they also give


00:15:11.960 --> 00:15:16.800
people ideas on what they could do with Jupyter in general.


00:15:16.800 --> 00:15:19.320
>> Cool. Yeah. Well, I certainly


00:15:19.320 --> 00:15:20.600
recommend people check this out.


00:15:20.600 --> 00:15:23.160
Then there was a talk that you,


00:15:23.160 --> 00:15:28.800
Daryan and Martha gave introducing JupyterLab 4.


00:15:29.800 --> 00:15:32.520
>> Yes, that's right.


00:15:32.520 --> 00:15:40.120
JupyterLab 4 is also the first time we did


00:15:40.120 --> 00:15:43.680
one of our keynote product launch talks


00:15:43.680 --> 00:15:48.080
with the desktop version of the application,


00:15:48.080 --> 00:15:55.600
just to expose people to this new way to use JupyterLab,


00:15:55.600 --> 00:15:57.320
which isn't super new,


00:15:57.320 --> 00:15:59.120
but I think is new to most people.


00:15:59.120 --> 00:16:00.800
So we thought that would be a good opportunity,


00:16:00.800 --> 00:16:04.640
not just to show the new JupyterLab 4 UI and its new features,


00:16:04.640 --> 00:16:07.480
but also to show you can download it onto your desktop,


00:16:07.480 --> 00:16:10.120
double-decker notebook, and open it up in JupyterLab.


00:16:10.120 --> 00:16:17.360
>> Yeah. So let's set the stage about just what people,


00:16:17.360 --> 00:16:19.480
maybe they've heard the word Jupyter,


00:16:19.480 --> 00:16:22.360
they've heard the word notebooks, plural.


00:16:22.360 --> 00:16:26.360
But they might not know the difference between JupyterLab,


00:16:26.360 --> 00:16:28.440
Jupyter Notebook.


00:16:28.440 --> 00:16:33.080
Maybe you all could position those two side-by-side.


00:16:33.080 --> 00:16:34.480
What are these two different things?


00:16:34.480 --> 00:16:37.320
Are they the same? Are they different? Are they synonyms?


00:16:37.320 --> 00:16:44.640
>> Okay. So there is a file format that you


00:16:44.640 --> 00:16:49.120
will see with the extension.ipynb,


00:16:49.120 --> 00:16:50.280
because historically it was


00:16:50.280 --> 00:16:53.760
the IPython notebook file format and we've kept that.


00:16:53.760 --> 00:16:57.120
Those are called Jupyter Notebooks commonly.


00:16:57.120 --> 00:17:00.000
It's a generic term for that file.


00:17:00.000 --> 00:17:05.480
Then there is a browser-based application that millions of


00:17:05.480 --> 00:17:08.300
people use for rendering


00:17:08.300 --> 00:17:10.720
those notebooks and writing them and authoring them.


00:17:10.720 --> 00:17:13.440
That application is called Jupyter Notebook,


00:17:13.440 --> 00:17:16.800
and we just released version 7 of that.


00:17:17.920 --> 00:17:25.200
There is a data environment that features notebooks,


00:17:25.200 --> 00:17:27.800
but also has lots of other functionality


00:17:27.800 --> 00:17:31.320
that we call the other front-end,


00:17:31.320 --> 00:17:33.520
and that's JupyterLab.


00:17:33.520 --> 00:17:38.360
JupyterLab has a notebook renderer in it,


00:17:38.360 --> 00:17:41.240
among other things, for Jupyter Notebooks.


00:17:41.240 --> 00:17:44.920
That same notebook renderer is what


00:17:44.920 --> 00:17:48.840
powers the application called Jupyter Notebook.


00:17:48.840 --> 00:17:50.600
I think if I keep saying these words,


00:17:50.600 --> 00:17:53.480
you'll get more confused, so I'm stopping here.


00:17:53.480 --> 00:17:59.840
>> In my mind, I think of Jupyter Notebook,


00:17:59.840 --> 00:18:04.160
which is the single file view type of thing.


00:18:04.160 --> 00:18:07.280
The little bit, not quite the right analogy,


00:18:07.280 --> 00:18:09.920
but a little bit like the Vim or the Emacs user who


00:18:09.920 --> 00:18:11.880
likes just to have a single file


00:18:11.880 --> 00:18:13.560
totally open and just focus on that.


00:18:13.560 --> 00:18:17.160
Whereas, JupyterLab is more like the IDE style.


00:18:17.160 --> 00:18:19.120
I want all the tools and the extras.


00:18:19.120 --> 00:18:21.080
I want to be able to get to my,


00:18:21.080 --> 00:18:23.440
browse my file system, go to the terminal,


00:18:23.440 --> 00:18:25.000
do all the different things,


00:18:25.000 --> 00:18:28.200
and have multiple files open and work between them.


00:18:28.200 --> 00:18:32.400
Is that a good mental model or am I not quite there yet?


00:18:32.400 --> 00:18:34.640
>> No, I think that's right.


00:18:34.640 --> 00:18:40.280
The Jupyter Notebook is a single document interface.


00:18:40.840 --> 00:18:45.720
Even like Vim, it has a command mode and an edit mode and all those.


00:18:45.720 --> 00:18:47.440
It's not a bad analogy at all.


00:18:47.440 --> 00:18:52.680
JupyterLab is just a really flexible environment to do


00:18:52.680 --> 00:18:55.440
a lot of different activities


00:18:55.440 --> 00:18:59.080
in your analysis of any particular data.


00:18:59.080 --> 00:19:05.560
It is a much more multi-tool for that.


00:19:05.560 --> 00:19:08.480
>> Okay. Excellent.


00:19:08.480 --> 00:19:10.600
Anyone else want to add more to that?


00:19:10.600 --> 00:19:13.000
Those comparisons are daring.


00:19:13.000 --> 00:19:17.080
>> Yeah. For the genesis of this, of JupyterLab,


00:19:17.080 --> 00:19:20.160
the first tool that everybody saw and the whole world


00:19:20.160 --> 00:19:23.440
saw in the beginning in 2014 was the Notebook.


00:19:23.440 --> 00:19:25.400
Got a lot of people excited.


00:19:25.400 --> 00:19:29.800
But there was a very recurrent request


00:19:29.800 --> 00:19:32.920
for bringing together in the same page,


00:19:32.920 --> 00:19:35.720
the text editor, the terminals,


00:19:35.720 --> 00:19:37.440
having a console as well,


00:19:37.440 --> 00:19:43.240
a regular Python console alongside the Notebook on the same page.


00:19:43.240 --> 00:19:46.440
This is what we delivered with JupyterLab.


00:19:46.440 --> 00:19:49.360
Even though it was a very popular,


00:19:49.360 --> 00:19:53.160
common demand from the community,


00:19:53.160 --> 00:19:57.080
a lot of people really loved


00:19:57.080 --> 00:20:01.200
this more rigid full-page Notebook UI,


00:20:01.200 --> 00:20:05.880
and kept using the Notebook.


00:20:05.880 --> 00:20:10.320
This is where we were about two years ago


00:20:10.320 --> 00:20:15.400
when we started the discussion about


00:20:15.400 --> 00:20:21.600
Notebook 7 and modernizing the classic Notebook user interface.


00:20:21.600 --> 00:20:26.240
>> Was there ever a time where people were thinking to have


00:20:26.240 --> 00:20:28.240
JupyterLab be the next version of


00:20:28.240 --> 00:20:31.160
Jupyter Notebook and replace it?


00:20:31.160 --> 00:20:32.840
Then the people are, "You know what?


00:20:32.840 --> 00:20:35.120
Maybe please don't take that away."


00:20:35.120 --> 00:20:35.960
>> Yeah.


00:20:35.960 --> 00:20:38.520
>> Or they always meant to live side-by-side.


00:20:38.520 --> 00:20:42.440
>> No, it was definitely at some point


00:20:42.440 --> 00:20:47.400
our strategy to deprecate the Notebook eventually.


00:20:47.400 --> 00:20:57.360
We had a large public conversation about this.


00:20:57.360 --> 00:21:00.960
It just, I think,


00:21:00.960 --> 00:21:03.840
is clear that people like having that choice.


00:21:03.840 --> 00:21:08.840
People like having what is just a simple editor for Notebooks,


00:21:08.840 --> 00:21:12.920
and people also like having the Swiss Army Knife.


00:21:12.920 --> 00:21:14.560
They're not always the same people,


00:21:14.560 --> 00:21:19.440
but we want everyone who is using these things to be able to


00:21:19.440 --> 00:21:22.360
get both the benefit of


00:21:22.360 --> 00:21:25.640
the modern architecture and the updates,


00:21:25.640 --> 00:21:27.920
and also the user experience they want.


00:21:27.920 --> 00:21:33.120
If most of the plugins that come out lately are for JupyterLab,


00:21:33.120 --> 00:21:34.920
and you're feeling more and more left behind,


00:21:34.920 --> 00:21:36.760
that's not a great experience.


00:21:36.760 --> 00:21:41.680
Deprecating that tool you're using and saying you must use this other one,


00:21:41.680 --> 00:21:46.560
it just isn't what our community needed.


00:21:46.560 --> 00:21:48.120
Now, we, I think,


00:21:48.120 --> 00:21:51.560
have an architecture that we can sustainably maintain


00:21:51.560 --> 00:21:54.000
because it's effectively the same code base,


00:21:54.000 --> 00:21:58.440
but we also can give users what they want,


00:21:58.440 --> 00:22:00.880
because there are different contexts.


00:22:00.880 --> 00:22:03.760
It is the case that we would have left some people behind,


00:22:03.760 --> 00:22:05.960
and it's better not to.


00:22:05.960 --> 00:22:12.520
>> I can imagine in different scenarios,


00:22:12.520 --> 00:22:13.880
different user bases,


00:22:13.880 --> 00:22:16.240
it might make a lot of sense to have one or the other.


00:22:16.240 --> 00:22:20.960
If I'm a data scientist working on complicated projects,


00:22:20.960 --> 00:22:23.120
maybe JupyterLab is the right place.


00:22:23.120 --> 00:22:25.520
But if I'm trying to teach


00:22:25.520 --> 00:22:29.200
a little bit of computation for


00:22:29.200 --> 00:22:34.720
a psychology class and I just want them to do three plots and pull in some data,


00:22:34.720 --> 00:22:37.040
you don't want to drop non-developers


00:22:37.040 --> 00:22:39.720
into something that looks kind of complicated.


00:22:39.720 --> 00:22:41.880
Like, where do I go? Here's your page.


00:22:41.880 --> 00:22:44.280
You type in these cells, you see the picture.


00:22:44.280 --> 00:22:49.280
You get the graph for the study we're talking about or something, right?


00:22:49.280 --> 00:22:52.520
>> Yeah, that's exactly the idea.


00:22:52.520 --> 00:22:59.120
>> Interesting. So you touched on something interesting there.


00:22:59.120 --> 00:23:05.560
That Jupyter Notebook, the single page or the single view version,


00:23:05.560 --> 00:23:08.400
is now based on JupyterLab,


00:23:08.400 --> 00:23:11.400
and there's a lot of overlap of these things, right?


00:23:11.400 --> 00:23:13.640
>> Yeah.


00:23:13.640 --> 00:23:19.560
>> Good.


00:23:19.560 --> 00:23:21.600
>> Go ahead, Jeremy.


00:23:21.600 --> 00:23:26.160
>> Yeah. I don't know if it was the right time to go more into the details.


00:23:26.160 --> 00:23:28.640
>> Yeah. Give us a little. It's a bit of a jump ahead,


00:23:28.640 --> 00:23:32.400
but just give us a sense that people who,


00:23:32.400 --> 00:23:35.000
maybe people are listening, "I'm not going to use JupyterLab.


00:23:35.000 --> 00:23:36.800
I'm the Notebook type of person."


00:23:36.800 --> 00:23:39.920
There's a lot of what we're talking about that still directly applies


00:23:39.920 --> 00:23:44.000
because there's a bunch of similarity or actually reused, right?


00:23:44.000 --> 00:23:48.000
>> So one thing we didn't mention yet about JupyterLab is that,


00:23:48.000 --> 00:23:52.320
so for end-users, it is indeed a more advanced environment,


00:23:52.320 --> 00:23:53.680
a bit more like an ID,


00:23:53.680 --> 00:23:55.200
even though it's not really an ID.


00:23:55.200 --> 00:23:59.920
But for developers, it's also a framework.


00:23:59.920 --> 00:24:05.000
So JupyterLab itself is just a set of plugins and extensions,


00:24:05.000 --> 00:24:11.400
and they were designed from the very beginning to be reused in different ways.


00:24:11.400 --> 00:24:15.560
So actually, if you go to the JupyterLab repo,


00:24:15.560 --> 00:24:17.920
there is an examples folder,


00:24:17.920 --> 00:24:23.640
and in there, there are a few different apps


00:24:23.640 --> 00:24:26.000
that you can build yourself.


00:24:26.000 --> 00:24:27.280
They are not JupyterLab.


00:24:27.280 --> 00:24:30.360
They are just a single cell on the page,


00:24:30.360 --> 00:24:33.160
or maybe just this one,


00:24:33.160 --> 00:24:35.320
maybe just a console,


00:24:35.320 --> 00:24:37.040
maybe just a Notebook.


00:24:37.040 --> 00:24:40.880
And this is made possible


00:24:40.880 --> 00:24:44.440
because JupyterLab is indeed just a set of extensions,


00:24:44.440 --> 00:24:47.040
and these examples, they just reuse some of them,


00:24:47.040 --> 00:24:49.360
and they just put them together in a different way.


00:24:49.360 --> 00:24:52.640
So we sometimes call them remixes,


00:24:52.640 --> 00:24:58.640
and in the end, Notebook 7 is a JupyterLab remix.


00:24:58.640 --> 00:25:02.040
It's just a different JupyterLab interface,


00:25:02.040 --> 00:25:05.800
but focused on a document-centric experience


00:25:05.800 --> 00:25:12.080
that users have been liking for many years already.


00:25:12.080 --> 00:25:18.560
So yeah, that's a bit of the second side of JupyterLab.


00:25:18.560 --> 00:25:21.360
- Excellent.


00:25:21.360 --> 00:25:23.000
Yeah, and there's a bunch of features


00:25:23.000 --> 00:25:24.440
that we're gonna talk about here


00:25:24.440 --> 00:25:28.320
that come to Jupyter Notebooks in 7,


00:25:28.320 --> 00:25:31.560
yeah, 7, get the right version for the right product,


00:25:31.560 --> 00:25:34.000
because of what you all have done here,


00:25:34.000 --> 00:25:37.480
like interactive debugging and real-time collaboration


00:25:37.480 --> 00:25:39.040
and things like that, yes?


00:25:39.040 --> 00:25:41.280
- Yeah, all of that was really a byproduct


00:25:41.280 --> 00:25:44.320
of moving over to the JupyterLab architecture.


00:25:44.320 --> 00:25:51.320
And one other key aspect of Notebook 7 over Notebook 6,


00:25:51.320 --> 00:25:57.480
is that since we use the text editor from JupyterLab 4,


00:25:57.480 --> 00:26:00.240
which is a newer version of CodeMirror,


00:26:00.240 --> 00:26:03.400
we also get a lot of benefits in terms of accessibility.


00:26:03.400 --> 00:26:05.520
Most of the work on accessibility


00:26:05.520 --> 00:26:07.520
has been going into the JupyterLab codebase


00:26:07.520 --> 00:26:09.040
and not into the classic Notebook,


00:26:09.040 --> 00:26:14.680
which was really based on older versions of older libraries


00:26:14.680 --> 00:26:16.880
and JavaScript from the 2010s.


00:26:16.880 --> 00:26:19.920
And so we're in a much better shape in this regard


00:26:19.920 --> 00:26:23.760
with JupyterLab 4 and Notebook 7.


00:26:23.760 --> 00:26:26.040
- It's a different world with JavaScript these days


00:26:26.040 --> 00:26:27.920
than it was in 2010.


00:26:27.920 --> 00:26:29.920
- That's right.


00:26:29.920 --> 00:26:32.200
- Quite a bit.


00:26:32.200 --> 00:26:34.240
Well, let's start by talking about


00:26:34.240 --> 00:26:36.240
some of the new features for JupyterLab.


00:26:36.240 --> 00:26:38.840
One of the ones is for very large notebooks,


00:26:38.840 --> 00:26:41.560
JupyterLab is quite a bit faster, right?


00:26:41.560 --> 00:26:44.800
That's excellent.


00:26:44.800 --> 00:26:47.920
Who wants to take that one?


00:26:47.920 --> 00:26:49.920
- I nominate Fred.


00:26:49.920 --> 00:26:51.920
- Yeah, I can go ahead with that one.


00:26:51.920 --> 00:26:53.920
- Go ahead.


00:26:53.920 --> 00:26:58.160
- So yeah, that's one of the complaints of the user


00:26:58.160 --> 00:27:01.120
is that when you get lots of Notebook open


00:27:01.120 --> 00:27:05.360
or when you get some Notebook that are very lengthy,


00:27:05.360 --> 00:27:10.440
the UI responsiveness can be low.


00:27:10.440 --> 00:27:17.000
And so we decided to focus quite some time on that aspect.


00:27:17.000 --> 00:27:21.040
And that was made possible by fully upgrading


00:27:21.040 --> 00:27:23.440
the text editor to the latest version.


00:27:23.440 --> 00:27:25.080
So we are using CodeMirror.


00:27:25.080 --> 00:27:28.560
It's a awesome third-party library


00:27:28.560 --> 00:27:30.880
for dealing with text editor.


00:27:30.880 --> 00:27:32.880
And we upgraded to the latest one


00:27:32.880 --> 00:27:35.680
that bring up a very important speed up.


00:27:35.680 --> 00:27:39.320
And also we have worked on the styling


00:27:39.320 --> 00:27:41.640
to try to optimize it because styling


00:27:41.640 --> 00:27:44.320
can hit your browser pretty hard.


00:27:44.320 --> 00:27:47.240
And lately, we have also introduced


00:27:47.240 --> 00:27:52.040
a new way of rendering Notebook, like only rendering


00:27:52.040 --> 00:27:54.920
what the user is seeing, basically.


00:27:54.920 --> 00:27:56.760
That one is still experimental.


00:27:56.760 --> 00:27:59.960
So by default, it's off, and user can try it.


00:27:59.960 --> 00:28:01.760
And we are still working on that one


00:28:01.760 --> 00:28:09.000
to get it on by default for the next version, so 4.1.


00:28:09.000 --> 00:28:12.280
And hopefully, when we reach that milestone,


00:28:12.280 --> 00:28:19.520
we get a very smooth experience for 99% of our users.


00:28:19.520 --> 00:28:20.760
That's the goal.


00:28:20.760 --> 00:28:24.040
Yeah, it's tricky because web browsers typically


00:28:24.040 --> 00:28:26.680
want to just have the whole document, the DOM, loaded.


00:28:26.680 --> 00:28:28.720
And they want you to just work with it.


00:28:28.720 --> 00:28:32.760
But if you've got 100 virtual pages


00:28:32.760 --> 00:28:34.200
that you would go through, you don't


00:28:34.200 --> 00:28:38.160
want to style all those and do all the widgets and all that


00:28:38.160 --> 00:28:39.920
if they're not on the screen.


00:28:39.920 --> 00:28:42.200
So there's this tension.


00:28:42.200 --> 00:28:43.080
Yeah, exactly.


00:28:43.080 --> 00:28:46.160
And sometimes, it can come from tricky part,


00:28:46.160 --> 00:28:50.280
like just displaying for education, for example.


00:28:50.280 --> 00:28:53.200
They use-- and that's very nice-- a lot of equation,


00:28:53.200 --> 00:28:54.560
nice rendering.


00:28:54.560 --> 00:28:58.200
And those are creating so many elements in the web page


00:28:58.200 --> 00:29:01.960
that sometimes just having not so long Notebook,


00:29:01.960 --> 00:29:04.320
but with lots of math expression,


00:29:04.320 --> 00:29:06.840
can crush your browser, basically.


00:29:06.840 --> 00:29:09.880
That's surprising at first.


00:29:09.880 --> 00:29:11.440
Right, OK, so here's what I'm hearing


00:29:11.440 --> 00:29:14.880
is complex math, like calculus, differential equations,


00:29:14.880 --> 00:29:16.840
those kind of things, not just hard for people,


00:29:16.840 --> 00:29:19.040
but also hard for web browsers.


00:29:19.040 --> 00:29:20.960
Yeah.


00:29:20.960 --> 00:29:22.240
Math is hard for web browsers.


00:29:22.240 --> 00:29:23.680
Got it.


00:29:23.680 --> 00:29:27.240
Now, that's pretty interesting.


00:29:27.240 --> 00:29:30.640
Darren, you showed in your talk, you showed this off


00:29:30.640 --> 00:29:34.080
in a video, a side-by-side JupyterLab 3 versus 4


00:29:34.080 --> 00:29:35.240
with a large Notebook.


00:29:35.240 --> 00:29:37.640
And it was much faster.


00:29:37.640 --> 00:29:41.640
Did that video have the virtual paging,


00:29:41.640 --> 00:29:45.080
like the rendering, the scene culling thing,


00:29:45.080 --> 00:29:47.280
where it doesn't render the stuff it doesn't see?


00:29:47.280 --> 00:29:50.600
Or is that just the first default version right now?


00:29:50.600 --> 00:29:52.600
This is where I come clean to your audience


00:29:52.600 --> 00:29:55.880
and say Fred is the person who produced and recorded


00:29:55.880 --> 00:29:56.760
those videos.


00:29:56.760 --> 00:29:58.760
And Fred was actually--


00:29:58.760 --> 00:30:02.120
Fred was originally going to give that talk.


00:30:02.120 --> 00:30:04.720
I can tell you that, yes, that's exactly what's going on.


00:30:04.720 --> 00:30:06.800
But Fred can give you the actual details,


00:30:06.800 --> 00:30:09.280
because he's the one who hit the record button.


00:30:09.280 --> 00:30:11.320
Yeah, tell us, Fred.


00:30:11.320 --> 00:30:13.760
I have a very happy event that prevented me


00:30:13.760 --> 00:30:15.000
to go to the JupyterCon.


00:30:15.000 --> 00:30:19.040
So I was-- normally, it was the one that


00:30:19.040 --> 00:30:20.520
had to do the talk with Marta.


00:30:20.520 --> 00:30:22.240
But we had to switch last minute.


00:30:22.240 --> 00:30:24.280
And thank again, Afin, for doing that.


00:30:24.280 --> 00:30:26.840
But definitely, the video that was displayed


00:30:26.840 --> 00:30:30.800
was that it's a comparison between the latest 3.6


00:30:30.800 --> 00:30:35.120
version and the 4 version with that feature that's


00:30:35.120 --> 00:30:36.440
off for now by default.


00:30:36.440 --> 00:30:41.760
But that will bring the best performance for the end user.


00:30:41.760 --> 00:30:43.280
Yeah, it was a massive speed up.


00:30:43.280 --> 00:30:47.200
So on one hand, you're like, ah, you're just


00:30:47.200 --> 00:30:48.120
waiting 10 seconds.


00:30:48.120 --> 00:30:49.920
But those kinds of little delays,


00:30:49.920 --> 00:30:52.160
they just kind of break your thought and your flow.


00:30:52.160 --> 00:30:54.680
And you just feel like the tools are getting in the way.


00:30:54.680 --> 00:30:56.240
And if it's really, really quick,


00:30:56.240 --> 00:30:59.120
then the tools kind of vanish to the background.


00:30:59.120 --> 00:31:00.760
And you don't think about them, right?


00:31:00.760 --> 00:31:02.040
That's how it should be.


00:31:02.040 --> 00:31:03.280
Yeah, exactly.


00:31:03.280 --> 00:31:05.320
Even when rendering all of the notebook


00:31:05.320 --> 00:31:08.720
and without enabling the virtual scrolling,


00:31:08.720 --> 00:31:11.120
we get already a nice speed up already,


00:31:11.120 --> 00:31:14.160
thanks to the adoption of CodeMirror 6, which


00:31:14.160 --> 00:31:17.960
is much faster to render, and a bunch of other optimizations


00:31:17.960 --> 00:31:21.360
that we were able to do.


00:31:21.360 --> 00:31:24.200
But yeah, I mean, it was the easiest clap


00:31:24.200 --> 00:31:26.800
in the entire talk was just playing that video


00:31:26.800 --> 00:31:32.680
and seeing the fast one render and the slow one keep going.


00:31:32.680 --> 00:31:35.880
It's a really different user experience,


00:31:35.880 --> 00:31:37.880
even though, as you say, it's only a few seconds.


00:31:37.880 --> 00:31:40.280
It turns out a few seconds is enough


00:31:40.280 --> 00:31:42.760
to cause the kind of interruption that


00:31:42.760 --> 00:31:47.600
leaves a negative overall impression in the user's


00:31:47.600 --> 00:31:49.000
experience.


00:31:49.000 --> 00:31:50.480
Absolutely.


00:31:50.480 --> 00:31:53.680
This is not a JupyterLab feature exactly,


00:31:53.680 --> 00:31:55.960
but while we're on this code editor topic,


00:31:55.960 --> 00:32:00.080
I wanted to ask you all just your thoughts about this.


00:32:00.080 --> 00:32:04.000
Now, keep in mind, before I ask this question, my perspective.


00:32:04.000 --> 00:32:06.800
I've come from doing a lot of traditional software


00:32:06.800 --> 00:32:10.520
development with editors like PyCharm and Visual Studio


00:32:10.520 --> 00:32:11.880
Code and others.


00:32:11.880 --> 00:32:15.720
So when I work in Jupyter Notebook or Lab,


00:32:15.720 --> 00:32:17.080
it doesn't really matter.


00:32:17.080 --> 00:32:21.640
And I'll say some variable dot, it


00:32:21.640 --> 00:32:24.040
doesn't give me any help unless I press Tab


00:32:24.040 --> 00:32:26.040
to see the autocomplete.


00:32:26.040 --> 00:32:30.520
Is there an option or discussion around having


00:32:30.520 --> 00:32:33.680
more aggressive autocomplete that kind of automatically


00:32:33.680 --> 00:32:34.920
shows up as you work with it?


00:32:34.920 --> 00:32:38.320
Or is the community just like, we don't really


00:32:38.320 --> 00:32:39.720
want that stuff popping up around?


00:32:39.720 --> 00:32:42.520
We just want to type.


00:32:42.520 --> 00:32:46.880
So the reason it's currently this way


00:32:46.880 --> 00:32:53.520
is primarily due to the behavior of Jupyter Notebook


00:32:53.520 --> 00:32:57.080
a long time ago and not subverting user expectations.


00:32:57.080 --> 00:33:03.520
But we can often keep that as the default


00:33:03.520 --> 00:33:07.680
and have some setting to facilitate


00:33:07.680 --> 00:33:09.600
a different kind of behavior.


00:33:09.600 --> 00:33:16.160
With this one, I think there's probably actual appetite for it,


00:33:16.160 --> 00:33:17.840
but no one's shown up to do it.


00:33:17.840 --> 00:33:20.120
I don't think we would turn down a feature like this


00:33:20.120 --> 00:33:21.560
hidden behind a setting.


00:33:21.560 --> 00:33:26.320
I just don't think anyone has both been bothered enough


00:33:26.320 --> 00:33:30.040
and also been in the time and place with the resources


00:33:30.040 --> 00:33:33.560
and wherewithal necessary to do it.


00:33:33.560 --> 00:33:37.040
But it doesn't sound--


00:33:37.040 --> 00:33:40.680
yeah, it sounds totally doable and compatible with both


00:33:40.680 --> 00:33:42.760
keeping the user expectations intact


00:33:42.760 --> 00:33:44.920
and offering you the feature you're talking about.


00:33:44.920 --> 00:33:47.240
Because yeah, people have different styles of completion


00:33:47.240 --> 00:33:48.360
that they're into.


00:33:48.360 --> 00:33:50.320
And new things are appearing all the time


00:33:50.320 --> 00:33:54.400
and creating new expectations, like LSP, which changes--


00:33:54.400 --> 00:33:56.120
>>Luis: The language server protocol, yeah.


00:33:56.120 --> 00:33:56.620
>>Mark: Yeah.


00:33:56.620 --> 00:34:00.960
>>Luis: Yeah, anyone else have thoughts on that?


00:34:00.960 --> 00:34:05.720
>>Quentin: I would say that in 4.1,


00:34:05.720 --> 00:34:08.840
there are things coming to at least give you


00:34:08.840 --> 00:34:11.920
the ability to more quickly restore history.


00:34:11.920 --> 00:34:15.000
Like you type, and then it's going


00:34:15.000 --> 00:34:19.320
to propose you to copy-paste the code that was written


00:34:19.320 --> 00:34:22.080
previously in some previous sites and stuff like that.


00:34:22.080 --> 00:34:28.800
And the same infrastructure will be available for plugins.


00:34:28.800 --> 00:34:30.720
And I know some people are working


00:34:30.720 --> 00:34:33.880
on the AI integration in Jupyter.


00:34:33.880 --> 00:34:35.880
And some of them are already working.


00:34:35.880 --> 00:34:38.200
And OK, let's try to do a request when


00:34:38.200 --> 00:34:42.240
the user is typing to help him complete the code


00:34:42.240 --> 00:34:45.560
or giving the hint on how to improve things.


00:34:45.560 --> 00:34:52.040
And yeah, there are a couple of people working on that.


00:34:52.040 --> 00:34:54.480
>>Mark: Yeah, I really like JupyterLab now.


00:34:54.480 --> 00:34:57.040
Yeah, OK, I really like JupyterLab and working it now.


00:34:57.040 --> 00:34:59.440
But if you could just go, and these


00:34:59.440 --> 00:35:01.960
are all the things you can do, just as I would,


00:35:01.960 --> 00:35:05.200
it would make me even more happy.


00:35:05.200 --> 00:35:07.000
Darren, you mentioned settings.


00:35:07.000 --> 00:35:10.160
And that's actually one of the new features


00:35:10.160 --> 00:35:12.200
as well as a UI for settings.


00:35:12.200 --> 00:35:13.640
Is that right?


00:35:13.640 --> 00:35:18.560
>>Darren: Yeah, so this is basically


00:35:18.560 --> 00:35:23.640
a front end that's capable of taking any extension's


00:35:23.640 --> 00:35:27.080
defined settings and rendering a UI for it.


00:35:27.080 --> 00:35:31.960
Because we don't know what the preferences an extension


00:35:31.960 --> 00:35:35.280
author is going to want are going to look like.


00:35:35.280 --> 00:35:38.160
We can't create a custom UI for it.


00:35:38.160 --> 00:35:41.600
Instead, we have to read a schema file that


00:35:41.600 --> 00:35:45.240
defines such-- like the extension author who


00:35:45.240 --> 00:35:48.760
wrote an extension that does Git also


00:35:48.760 --> 00:35:53.680
has a whole bunch of Booleans that are by default set


00:35:53.680 --> 00:35:55.520
to true.


00:35:55.520 --> 00:35:57.320
So this UI is like, oh, OK, cool.


00:35:57.320 --> 00:35:59.680
I'll bring a bunch of checkboxes and check them.


00:35:59.680 --> 00:36:01.120
And so it's very flexible.


00:36:01.120 --> 00:36:03.120
It can take any extension settings.


00:36:03.120 --> 00:36:06.800
And as long as they're described properly according to the API,


00:36:06.800 --> 00:36:09.640
they will render inside that UI.


00:36:09.640 --> 00:36:12.600
And it really beats what we used to have there,


00:36:12.600 --> 00:36:17.680
which is just a JSON blob editor.


00:36:17.680 --> 00:36:20.360
And we tried to make it slightly nicer.


00:36:20.360 --> 00:36:25.160
I think we tried to make it support a version of JSON


00:36:25.160 --> 00:36:27.840
that has inline comments as well.


00:36:27.840 --> 00:36:30.080
But it's still not that nice.


00:36:30.080 --> 00:36:34.040
So I'm very happy to see this as the way


00:36:34.040 --> 00:36:36.760
you go playing around with all the choices you have.


00:36:36.760 --> 00:36:39.000
Because JupyterLab has a lot of settings,


00:36:39.000 --> 00:36:42.600
but it's really difficult to explore them


00:36:42.600 --> 00:36:44.440
without something like this.


00:36:44.440 --> 00:36:46.160
-Especially with all the extensions,


00:36:46.160 --> 00:36:48.360
kind of an unbounded set, right?


00:36:48.360 --> 00:36:49.320
-Exactly.


00:36:49.320 --> 00:36:51.680
-The settings UI has a search that


00:36:51.680 --> 00:36:54.400
searches through all the different areas for settings.


00:36:54.400 --> 00:36:57.240
To pull that up, that's one of my favorite things


00:36:57.240 --> 00:36:58.520
on complex apps.


00:36:58.520 --> 00:37:01.520
Like, I don't know what is in here,


00:37:01.520 --> 00:37:03.160
but I bet if I start typing, it'll


00:37:03.160 --> 00:37:06.040
reveal itself if it's in there somewhere, right?


00:37:06.040 --> 00:37:06.600
-Yeah.


00:37:06.760 --> 00:37:10.440
JupyterLab has two places like that.


00:37:10.440 --> 00:37:14.000
One is the command palette also lets


00:37:14.000 --> 00:37:16.960
you search the entire menu system, basically.


00:37:16.960 --> 00:37:21.200
And that's become-- in other IDs, too.


00:37:21.200 --> 00:37:26.400
I mean, I think there's a certain point


00:37:26.400 --> 00:37:30.160
as a user of these tools where you discover something


00:37:30.160 --> 00:37:30.640
like that.


00:37:30.640 --> 00:37:33.440
And then after that point, you don't want to go back.


00:37:33.440 --> 00:37:35.600
So I think you're right.


00:37:35.600 --> 00:37:38.680
Like, I didn't used to always need search in my applications,


00:37:38.680 --> 00:37:41.080
but now I do, just like you say.


00:37:41.080 --> 00:37:42.000
-Yeah.


00:37:42.000 --> 00:37:44.680
Yeah, exactly.


00:37:44.680 --> 00:37:45.920
And this really goes--


00:37:45.920 --> 00:37:47.080
-Go ahead, Sylvain.


00:37:47.080 --> 00:37:49.800
-Yeah, this really goes into the thing


00:37:49.800 --> 00:37:52.920
we were mentioning earlier about JupyterLab remixes.


00:37:52.920 --> 00:37:56.920
So JupyterLab is basically only a collection of extensions,


00:37:56.920 --> 00:37:57.440
right?


00:37:57.440 --> 00:38:00.120
And the notebook itself, the command palette,


00:38:00.120 --> 00:38:02.760
all of these things are extensions to the core app,


00:38:02.760 --> 00:38:03.600
right?


00:38:03.600 --> 00:38:10.480
And so remixes are a way to cherry pick


00:38:10.480 --> 00:38:12.280
some of these core extensions, potentially


00:38:12.280 --> 00:38:16.920
include third-party extensions into a new thing, right?


00:38:16.920 --> 00:38:22.440
And I think that there are not many equivalents to JupyterLab


00:38:22.440 --> 00:38:23.680
in that regard.


00:38:23.680 --> 00:38:29.360
Like, if you try to make a new complex application in the web,


00:38:29.360 --> 00:38:33.720
like a photo editor, a CAD engine, anything


00:38:33.720 --> 00:38:36.360
that falls into the category of having


00:38:36.360 --> 00:38:38.360
to display a lot of information on the screen,


00:38:38.360 --> 00:38:42.000
doing something that you spend hours doing every day,


00:38:42.000 --> 00:38:47.320
you will want a framework that allows extensibility, theming,


00:38:47.320 --> 00:38:51.120
a command palette, unified keyboard shortcuts


00:38:51.120 --> 00:38:54.360
across the application, a settings editor for your main


00:38:54.360 --> 00:38:58.240
app and all of your extensions.


00:38:58.240 --> 00:39:01.600
Configurable keyboard shortcuts, I mentioned that earlier.


00:39:01.600 --> 00:39:04.440
Potentially real-time collaboration.


00:39:04.440 --> 00:39:08.840
And these are lots of checkboxes to check


00:39:08.840 --> 00:39:10.760
if you are starting from scratch.


00:39:10.760 --> 00:39:15.440
And so the JupyterLab, basically, application framework


00:39:15.440 --> 00:39:20.480
allowed us to reuse all of that work for other things that


00:39:20.480 --> 00:39:23.920
have nothing to do with the notebook, for example.


00:39:23.920 --> 00:39:25.920
So earlier this year, we released


00:39:25.920 --> 00:39:30.720
JupyterCAD, which is a web-based CAD modeler, which


00:39:30.720 --> 00:39:32.960
is a JupyterLab remix, really.


00:39:32.960 --> 00:39:34.880
Can be used both at the JupyterLab extension,


00:39:34.880 --> 00:39:36.840
where you find everything that you're used to,


00:39:36.840 --> 00:39:39.480
or in a standalone fashion.


00:39:39.480 --> 00:39:40.000
And--


00:39:40.000 --> 00:39:41.880
>>This JupyterCAD is really interesting.


00:39:41.880 --> 00:39:46.560
It's a 3D CAD, computer-aided design editor,


00:39:46.560 --> 00:39:51.560
that's built on top of the JupyterLab framework,


00:39:51.560 --> 00:39:55.000
but it's not itself exactly about Jupyter.


00:39:55.000 --> 00:39:57.600
Like programming and so on, right?


00:39:57.600 --> 00:39:59.200
And it has really interesting things,


00:39:59.200 --> 00:40:02.480
it has real-time collaboration between multiple people.


00:40:02.480 --> 00:40:05.120
And all of that stuff comes from just building on top of this,


00:40:05.120 --> 00:40:05.720
like you said.


00:40:05.720 --> 00:40:08.760
That's a good example of something really different,


00:40:08.760 --> 00:40:10.200
but still possible.


00:40:10.200 --> 00:40:12.640
>>Yeah, so in the way we enable real-time collaboration


00:40:12.640 --> 00:40:18.240
in JupyterLab, we have to specialize a few things,


00:40:18.240 --> 00:40:21.000
depending on the type of document that you're editing.


00:40:21.000 --> 00:40:22.680
But really, the framework is generic.


00:40:22.680 --> 00:40:26.840
And you can start enabling real-time collaboration


00:40:26.840 --> 00:40:29.880
and other types of content, than just textual content


00:40:29.880 --> 00:40:31.200
or whatnot.


00:40:31.200 --> 00:40:35.200
And so we all got used to real-time collaboration


00:40:35.200 --> 00:40:39.080
and collaborative editing on text,


00:40:39.080 --> 00:40:40.600
on the sort of software suite that we


00:40:40.600 --> 00:40:42.880
use for basic productivity.


00:40:42.880 --> 00:40:47.000
But I'm very convinced that this will


00:40:47.000 --> 00:40:50.400
be the case for more technical computing.


00:40:50.400 --> 00:40:52.400
Not just code, but everything where


00:40:52.400 --> 00:40:55.240
you have to put together a really complex system.


00:40:55.240 --> 00:40:58.640
Especially if you are building something that requires


00:40:58.640 --> 00:41:00.040
a lot of people to coordinate.


00:41:00.040 --> 00:41:04.040
Like you're making a new plane or a football stadium,


00:41:04.040 --> 00:41:07.720
and you have this unified model where everything percolates


00:41:07.720 --> 00:41:10.440
across many domain-specific applications,


00:41:10.440 --> 00:41:13.760
from CAD to electrical systems or whatnot.


00:41:13.760 --> 00:41:17.840
And for people to effectively collaborate


00:41:17.840 --> 00:41:19.200
in these kinds of environments, I


00:41:19.200 --> 00:41:22.360
think collaborative editing is going to bring a lot,


00:41:22.360 --> 00:41:24.120
if we can implement this vision.


00:41:24.120 --> 00:41:26.600
So really, JupyterCAD is a demonstrator


00:41:26.600 --> 00:41:29.000
that you can do collaborative editing on other things


00:41:29.000 --> 00:41:30.600
than just notebooks.


00:41:30.600 --> 00:41:34.080
>>Luis: Yeah, JupyterLab may become the foundation for things


00:41:34.080 --> 00:41:36.440
that we would never expect to be part of programming,


00:41:36.440 --> 00:41:37.520
like you're talking about.


00:41:37.520 --> 00:41:38.640
It's interesting.


00:41:38.640 --> 00:41:40.480
>>Romain: Yeah, it's more technical computing


00:41:40.480 --> 00:41:43.720
than just interactive computing, I would say.


00:41:43.720 --> 00:41:44.480
>>Luis: Yeah.


00:41:44.480 --> 00:41:51.720
I was thinking about this book here, The Old Man Month.


00:41:51.720 --> 00:41:56.200
This book is thrown around by Fred Brooks,


00:41:56.200 --> 00:42:00.480
basically saying there's no project where


00:42:00.480 --> 00:42:04.360
adding more and more people is going to speed it up and get


00:42:04.360 --> 00:42:05.880
it done more on time.


00:42:05.880 --> 00:42:08.280
It was all about the follies of, well,


00:42:08.280 --> 00:42:11.800
as you add more people, the complexity of the communication


00:42:11.800 --> 00:42:14.000
and the overhead of syncing and all of that


00:42:14.000 --> 00:42:17.120
is going to break everything.


00:42:17.120 --> 00:42:21.720
And so you can't make a baby in one month


00:42:21.720 --> 00:42:24.840
by having nine women work on it sort of story.


00:42:24.840 --> 00:42:26.640
But the stuff that you're talking about here


00:42:26.640 --> 00:42:28.240
and all of these communication tools


00:42:28.240 --> 00:42:31.440
and all of this interesting async stuff


00:42:31.440 --> 00:42:33.880
that we're doing these days, I feel like people


00:42:33.880 --> 00:42:36.800
should rethink these ideas.


00:42:36.800 --> 00:42:38.760
And I think what you're touching on here


00:42:38.760 --> 00:42:46.000
is it is possible to get deeper, important work done as groups


00:42:46.000 --> 00:42:48.560
than maybe the mythology that people


00:42:48.560 --> 00:42:53.040
think about in the software world traditionally has been.


00:42:53.040 --> 00:42:57.360
It's a different world in 2023 and on.


00:42:57.360 --> 00:42:59.080
Do you have any thoughts about this?


00:42:59.080 --> 00:43:01.160
I mean, it's kind of a sidebar of it.


00:43:01.160 --> 00:43:04.160
It's also important to what this collaborative editing.


00:43:04.160 --> 00:43:08.000
>>Romain: Yeah, I like this book.


00:43:08.000 --> 00:43:12.720
I think the ways--


00:43:12.720 --> 00:43:15.400
so for a long time, we have been trying


00:43:15.400 --> 00:43:17.920
to introduce real-time collaboration into Jupyter.


00:43:17.920 --> 00:43:23.120
We've had at least three significant technical attempts


00:43:23.120 --> 00:43:24.280
at it.


00:43:24.280 --> 00:43:25.600
It's a hard problem.


00:43:25.600 --> 00:43:27.400
It's one we've worked on a long time.


00:43:27.400 --> 00:43:30.680
And it's given me a unique opportunity


00:43:30.680 --> 00:43:32.320
that most people don't have, which


00:43:32.320 --> 00:43:37.040
is try to justify to myself over the course of six years


00:43:37.040 --> 00:43:41.480
why anyone should want real-time collaboration inside


00:43:41.480 --> 00:43:43.400
a programming environment.


00:43:43.400 --> 00:43:46.240
And what I can say is over that time period,


00:43:46.240 --> 00:43:51.600
I have spent, I don't know, hundreds of hours


00:43:51.600 --> 00:43:56.240
inside documents with other people that are markdown files


00:43:56.240 --> 00:43:58.640
because that's how we conduct our meetings,


00:43:58.640 --> 00:44:01.360
or inside Google Docs because that's


00:44:01.360 --> 00:44:05.800
how we wrote our governance, or asynchronously back and forth


00:44:05.800 --> 00:44:08.880
on GitHub, which is not exactly the same thing,


00:44:08.880 --> 00:44:11.320
but truly is collaboration.


00:44:11.320 --> 00:44:17.080
And so I don't think there's a tension between--


00:44:17.080 --> 00:44:20.080
there's a group of us working on something in a room,


00:44:20.080 --> 00:44:22.480
and we want technical tools so that we don't all


00:44:22.480 --> 00:44:26.240
have to be in that room, but we could have that seamlessness,


00:44:26.240 --> 00:44:28.920
and the myth of the mythical--


00:44:28.920 --> 00:44:30.160
you know, the man month, right?


00:44:30.160 --> 00:44:34.040
I actually think those problems are--


00:44:34.040 --> 00:44:36.320
like, on the surface, they look pretty similar,


00:44:36.320 --> 00:44:39.120
but I actually think they're not the same thing.


00:44:39.120 --> 00:44:42.920
It's more like back when that book was written,


00:44:42.920 --> 00:44:45.560
groups of people would get inside one room


00:44:45.560 --> 00:44:47.280
and work collaboratively.


00:44:47.280 --> 00:44:50.840
Today, every one of us on this call


00:44:50.840 --> 00:44:53.960
is in a different location, and some of us are pretty far apart.


00:44:53.960 --> 00:44:56.960
We're in different countries, and it's all working out fine.


00:44:56.960 --> 00:45:01.040
And Jupyter is bringing tools like that to people,


00:45:01.040 --> 00:45:04.200
and less tools like, let's add 5,000 people.


00:45:04.200 --> 00:45:07.520
Now, what Sylvan was talking about, still, you're not going


00:45:07.520 --> 00:45:13.000
to have one person opening up the grand document that


00:45:13.000 --> 00:45:15.200
describes the whole coliseum, right?


00:45:15.200 --> 00:45:18.600
But there's going to be tons of groups that


00:45:18.600 --> 00:45:20.400
are working on systems where there's


00:45:20.400 --> 00:45:23.360
like seven people who need to work on this thing together.


00:45:23.360 --> 00:45:27.920
And Google Docs for wiring documents doesn't exist yet,


00:45:27.920 --> 00:45:29.000
but it could exist.


00:45:29.000 --> 00:45:29.960
Yeah.


00:45:29.960 --> 00:45:32.160
And it could be built on JupyterLab.


00:45:32.160 --> 00:45:33.600
That's right.


00:45:33.600 --> 00:45:37.080
One of the big features is this real-time collaboration.


00:45:37.080 --> 00:45:38.680
Let's talk about that for a moment.


00:45:38.680 --> 00:45:41.440
I think that's-- I think it's a big deal,


00:45:41.440 --> 00:45:46.440
as I've been hinting that with my sidebar and so on.


00:45:46.440 --> 00:45:51.520
Well, in the beginning, I think we need to start small.


00:45:51.520 --> 00:45:56.080
Even with Google Docs, when it came out, I think in 2006,


00:45:56.080 --> 00:45:58.320
a lot of-- many people didn't see the point.


00:45:58.320 --> 00:46:02.760
Like, why would I want someone else's cursor in my document?


00:46:02.760 --> 00:46:04.360
Sounds dangerous, right?


00:46:04.360 --> 00:46:09.760
And so if you were to make a survey of what people wanted


00:46:09.760 --> 00:46:13.480
at the time, nobody would have said that, right?


00:46:13.480 --> 00:46:15.920
Yet, everybody does that now, right?


00:46:15.920 --> 00:46:19.080
And it's probably-- people probably


00:46:19.080 --> 00:46:22.520
have the same feeling when it comes to writing code


00:46:22.520 --> 00:46:25.240
or doing any sort of technical work.


00:46:25.240 --> 00:46:28.080
And I think we'll get past this point where people


00:46:28.080 --> 00:46:29.840
will get it.


00:46:29.840 --> 00:46:33.480
And in the very beginning, this can start


00:46:33.480 --> 00:46:36.280
being useful for peer programming,


00:46:36.280 --> 00:46:38.760
doing something together while we're reviewing code


00:46:38.760 --> 00:46:42.360
over a Zoom meeting, that sort of thing


00:46:42.360 --> 00:46:49.520
where there is a real-time interaction between people


00:46:49.520 --> 00:46:51.900
over some kind of medium.


00:46:51.900 --> 00:46:57.160
And if you look at more technical objects,


00:46:57.160 --> 00:47:01.160
like, for example, you have two different teams.


00:47:01.160 --> 00:47:02.440
Like, someone's making a plane.


00:47:02.440 --> 00:47:07.720
There is a team of people that's doing some simulation


00:47:07.720 --> 00:47:11.160
and see how the plane goes through the air.


00:47:11.160 --> 00:47:14.680
And another person is making physical prototypes


00:47:14.680 --> 00:47:16.800
of parts of the plane.


00:47:16.800 --> 00:47:19.400
And you have this interaction.


00:47:19.400 --> 00:47:21.120
Normally, these two groups would be


00:47:21.120 --> 00:47:23.120
in two different branches of the company.


00:47:23.120 --> 00:47:25.840
And in order to change any kind of spec,


00:47:25.840 --> 00:47:28.280
you would need to go up and down in the hierarchy


00:47:28.280 --> 00:47:31.040
by a few degrees.


00:47:31.040 --> 00:47:33.840
Right, schedule a meeting for next week, that sort of thing.


00:47:33.840 --> 00:47:36.760
Yeah, and you change the specs.


00:47:36.760 --> 00:47:40.400
And now everybody has to change or make changes


00:47:40.400 --> 00:47:42.480
to their boundaries.


00:47:42.480 --> 00:47:48.880
And if you enable more real-time feedback on suggestions


00:47:48.880 --> 00:47:54.680
and whatnot, you maybe become a lot more efficient.


00:47:54.680 --> 00:48:00.760
So it's pretty similar to Google Docs, excuse me.


00:48:00.760 --> 00:48:06.040
But you have to install the Jupyter Collaboration


00:48:06.040 --> 00:48:10.360
extension for the server, right, in order for this to work?


00:48:10.360 --> 00:48:14.000
It's not just pip install JupyterLab,


00:48:14.000 --> 00:48:15.160
and you're good to go?


00:48:15.160 --> 00:48:18.720
Well, you can pip install JupyterLab and pip


00:48:18.720 --> 00:48:21.240
install Jupyter Collaboration if you need the one-liner.


00:48:21.240 --> 00:48:26.920
But the idea was lots of people install for personal use


00:48:26.920 --> 00:48:28.160
on their own laptops.


00:48:28.160 --> 00:48:31.080
And anyone who's going to create an environment where


00:48:31.080 --> 00:48:33.960
collaboration is happening is doing more than running just


00:48:33.960 --> 00:48:36.000
one command to install Jupyter anyway.


00:48:36.000 --> 00:48:37.600
Yeah, of course.


00:48:37.600 --> 00:48:42.080
So as a toy, if the five of us are in the same network,


00:48:42.080 --> 00:48:44.360
we can launch it that way just to play around with.


00:48:44.360 --> 00:48:46.160
But really, any sophisticated user


00:48:46.160 --> 00:48:47.640
is going to tie in the user system


00:48:47.640 --> 00:48:50.200
and do a whole bunch of config and all those things.


00:48:50.200 --> 00:48:54.640
And so we're not shipping the code


00:48:54.640 --> 00:48:59.400
that does that inside core JupyterLab for two reasons.


00:48:59.400 --> 00:49:04.680
One is that the main install base


00:49:04.680 --> 00:49:07.960
doesn't do real-time collaboration.


00:49:07.960 --> 00:49:11.520
The other is that we're working on that package much faster


00:49:11.520 --> 00:49:13.440
than we're working on JupyterLab core.


00:49:13.440 --> 00:49:15.960
And having them in separate packages


00:49:15.960 --> 00:49:19.000
allows us to bump versions if we need without caring that much


00:49:19.000 --> 00:49:21.280
and to add new features and to just--


00:49:21.280 --> 00:49:22.400
it's a smaller subset.


00:49:22.400 --> 00:49:25.080
It can move way faster.


00:49:25.080 --> 00:49:28.600
Yeah, that's a great design philosophy process


00:49:28.600 --> 00:49:32.720
because there was a conversation like this in core Python


00:49:32.720 --> 00:49:34.040
and request.


00:49:34.040 --> 00:49:37.480
We have a URL library in Python, but request


00:49:37.480 --> 00:49:39.480
seems to be the default. We should move it in.


00:49:39.480 --> 00:49:41.240
People are like, whoa, whoa, whoa,


00:49:41.240 --> 00:49:43.240
you're going to make us ship requests once a year.


00:49:43.240 --> 00:49:44.600
We don't want to do that.


00:49:44.600 --> 00:49:46.920
This is changing fast, and it needs to be more adaptive.


00:49:46.920 --> 00:49:49.440
Sounds like a similar deal here.


00:49:49.440 --> 00:49:51.800
Excellent, let's hit on some more of the new things.


00:49:51.800 --> 00:49:57.200
So we've got-- we've got lost from where it is.


00:49:57.200 --> 00:50:02.440
So one of the things that's new is cell toolbars.


00:50:02.440 --> 00:50:05.040
There's like-- when I'm editing a cell within the little cell,


00:50:05.040 --> 00:50:07.080
there's a toolbar with some new features.


00:50:07.080 --> 00:50:08.360
Anyone want to talk about that?


00:50:08.360 --> 00:50:15.880
I mean, I could.


00:50:15.880 --> 00:50:16.760
Yeah, go for it.


00:50:16.760 --> 00:50:18.040
It's exactly what you said.


00:50:18.040 --> 00:50:26.120
And it is-- I think one question often asked by extension


00:50:26.120 --> 00:50:30.280
authors is, OK, I want to do a certain thing


00:50:30.280 --> 00:50:32.320
to a specific kind of cell, right?


00:50:32.320 --> 00:50:36.000
Like I want to somehow pull out this cell


00:50:36.000 --> 00:50:37.320
and do something extra with it.


00:50:37.320 --> 00:50:38.560
Where do I put that button?


00:50:38.560 --> 00:50:40.320
Or it's the answer to that question,


00:50:40.320 --> 00:50:42.880
but really all of the things that you can do


00:50:42.880 --> 00:50:44.080
were there before.


00:50:44.080 --> 00:50:48.120
It's just meant to give users a discoverable way


00:50:48.120 --> 00:50:50.880
to learn maybe some capabilities they didn't know,


00:50:50.880 --> 00:50:52.480
or maybe even hover over the button


00:50:52.480 --> 00:50:55.080
and learn a new keyboard shortcut or something.


00:50:55.080 --> 00:50:57.960
It's one of those quality of life features.


00:50:57.960 --> 00:50:59.840
It's not like revolutionary.


00:50:59.840 --> 00:51:04.840
It's more like just making this thing slightly more ergonomic.


00:51:04.840 --> 00:51:06.760
Yeah, I was thinking-- when I saw that, I was thinking of,


00:51:06.760 --> 00:51:09.240
you know, the biologists who is doing


00:51:09.240 --> 00:51:11.280
their first semester of a class where they


00:51:11.280 --> 00:51:15.680
had to use Jupyter notebooks for their work.


00:51:15.680 --> 00:51:18.120
And they're like, how do I--


00:51:18.120 --> 00:51:19.840
you know, just seeing those buttons


00:51:19.840 --> 00:51:23.280
there for the first month of working with it is helpful.


00:51:23.280 --> 00:51:25.160
Then as you point out, you learn the hotkeys.


00:51:25.160 --> 00:51:27.160
You're like, I press B. I don't go over here with a mouse,


00:51:27.160 --> 00:51:28.760
and those kind of things.


00:51:28.760 --> 00:51:31.960
But still, I think it's a nice one.


00:51:31.960 --> 00:51:32.520
Let's see.


00:51:32.520 --> 00:51:34.960
What else did I want to give a shout out to that we


00:51:34.960 --> 00:51:37.480
haven't done yet?


00:51:37.480 --> 00:51:41.080
Oh, collapsing based on markdown headers.


00:51:41.080 --> 00:51:44.160
I think that's kind of interesting


00:51:44.160 --> 00:51:48.160
that you can organize your document in a way


00:51:48.160 --> 00:51:52.200
to kind of expose parts or make it more of a report


00:51:52.200 --> 00:51:55.640
or more of a coding environment and these kind of things.


00:51:55.640 --> 00:51:59.480
Who wants to introduce that feature?


00:51:59.480 --> 00:52:01.360
I can go ahead.


00:52:01.360 --> 00:52:04.120
So yeah, the idea was to--


00:52:04.120 --> 00:52:07.520
especially when you have some document that


00:52:07.520 --> 00:52:10.320
can be long, like from education that has lots of text


00:52:10.320 --> 00:52:15.320
and stuff like that, it tells the student, for example,


00:52:15.320 --> 00:52:20.920
to be able to focus or to scroll artificially,


00:52:20.920 --> 00:52:23.800
let's say, to the right place more faster.


00:52:23.800 --> 00:52:27.440
So that's one of those nice features.


00:52:27.440 --> 00:52:29.520
And I think it's something also now we


00:52:29.520 --> 00:52:34.200
are used to because lots of classical Office text editor


00:52:34.200 --> 00:52:35.920
have that kind of ability.


00:52:35.920 --> 00:52:40.240
So it was a nice feature to add to in JupyterLab.


00:52:40.240 --> 00:52:42.720
Yeah, kind of related, and it's probably


00:52:42.720 --> 00:52:44.840
going to sound really boring, but it actually


00:52:44.840 --> 00:52:48.680
is pretty awesome, I think, is the table of contents,


00:52:48.680 --> 00:52:51.160
where it looks like it's showing the table of contents.


00:52:51.160 --> 00:52:53.400
But if you say run all cells, it'll


00:52:53.400 --> 00:52:55.400
actually show you as you go--


00:52:55.400 --> 00:52:57.480
it'll sort of go down the table of contents


00:52:57.480 --> 00:53:00.320
showing where in some big doc, if the running


00:53:00.320 --> 00:53:02.760
cell is off the screen, what it's working on currently,


00:53:02.760 --> 00:53:06.320
which is actually pretty excellent, I think.


00:53:06.320 --> 00:53:08.000
Yeah, and even soon, you could also


00:53:08.000 --> 00:53:11.960
report that one cell crashed, and you should look at it.


00:53:11.960 --> 00:53:14.720
That's coming up in the next--


00:53:14.720 --> 00:53:16.880
That's coming up in the next version.


00:53:16.880 --> 00:53:20.440
OK, excellent.


00:53:20.440 --> 00:53:22.440
What else?


00:53:22.440 --> 00:53:24.560
Running kernels in the side panel


00:53:24.560 --> 00:53:26.680
sounds kind of interesting, like different kernels.


00:53:26.680 --> 00:53:28.600
You can go create notebooks based on them


00:53:28.600 --> 00:53:30.720
and see all of what is at play.


00:53:30.720 --> 00:53:34.000
I think that's probably worthwhile as well.


00:53:34.000 --> 00:53:37.400
Yeah, so this is more something you


00:53:37.400 --> 00:53:39.680
would care about if you're running


00:53:39.680 --> 00:53:41.080
JupyterLab than notebooks.


00:53:41.080 --> 00:53:44.600
So it's a sidebar in JupyterLab that just says,


00:53:44.600 --> 00:53:46.480
in the environment where you're running,


00:53:46.480 --> 00:53:50.320
here are all the kernels that you as a user can see.


00:53:50.320 --> 00:53:56.480
And so you can even have kernels that might not


00:53:56.480 --> 00:53:59.480
be coming from your Jupyter server at some future date,


00:53:59.480 --> 00:54:00.000
right?


00:54:00.000 --> 00:54:04.840
The idea being, why shouldn't JupyterLab


00:54:04.840 --> 00:54:09.920
be the place you interact with lots of different resources,


00:54:09.920 --> 00:54:11.600
wherever they might be?


00:54:11.600 --> 00:54:15.040
And for the longest time, we thought


00:54:15.040 --> 00:54:19.680
of a running kernel session, for want of a better word,


00:54:19.680 --> 00:54:24.600
as intricately tied to a file, right?


00:54:24.600 --> 00:54:26.800
The notebook that it's the kernel for.


00:54:26.800 --> 00:54:28.520
But we've been moving away from that.


00:54:28.520 --> 00:54:30.680
I mean, the same way IPython hits a kernel


00:54:30.680 --> 00:54:33.640
but isn't really transient, we have code consoles


00:54:33.640 --> 00:54:36.640
inside JupyterLab that aren't really transient.


00:54:36.640 --> 00:54:39.240
But you can take a notebooks kernel


00:54:39.240 --> 00:54:41.480
and open a code console on it so that you


00:54:41.480 --> 00:54:45.200
could do some scratch work but not modify a document.


00:54:45.200 --> 00:54:47.120
So there's just having more insight


00:54:47.120 --> 00:54:49.200
into what's available in your environment


00:54:49.200 --> 00:54:50.280
is what that's about.


00:54:50.280 --> 00:54:52.240
And again, it's not a revolutionary change.


00:54:52.240 --> 00:54:54.840
It's just one of these sort of ergonomic features


00:54:54.840 --> 00:54:58.760
to make it a better multi-tool for being


00:54:58.760 --> 00:55:02.160
in an environment that gives you lots of different kernels


00:55:02.160 --> 00:55:03.360
to play with.


00:55:03.360 --> 00:55:05.840
The sort of use case that we'd like to tackle with this


00:55:05.840 --> 00:55:08.520
is, for example, there are lots of desktop applications


00:55:08.520 --> 00:55:12.720
that embed a Python interpreter, like FreeCAD or Blender.


00:55:12.720 --> 00:55:20.040
And eventually, if these desktop applications advertise


00:55:20.040 --> 00:55:22.720
a way to connect to these running


00:55:22.720 --> 00:55:26.200
interpreters with a Jupyter kernel API,


00:55:26.200 --> 00:55:27.960
then they would be listed there.


00:55:27.960 --> 00:55:30.600
And yeah.


00:55:30.600 --> 00:55:32.400
>>Luis: So the JupyterLab could almost


00:55:32.400 --> 00:55:35.800
become a scripting front end to, say,


00:55:35.800 --> 00:55:39.480
like a running Blender project or something like that?


00:55:39.480 --> 00:55:40.240
>>Quentin: Exactly.


00:55:40.240 --> 00:55:43.480
So this has already been done, actually,


00:55:43.480 --> 00:55:47.720
in a Kitwer's Slicer 3D project.


00:55:47.720 --> 00:55:52.840
So they run a kernel as part of their desktop application.


00:55:52.840 --> 00:55:55.640
And so we want to streamline that use case


00:55:55.640 --> 00:55:59.000
and make it more easier to do.


00:55:59.000 --> 00:56:02.680
>>Luis: I'm sure the UI for a lot of people's hosted,


00:56:02.680 --> 00:56:05.600
integrated Python is really poor.


00:56:05.600 --> 00:56:08.440
There's probably-- maybe you'll get auto-indentation


00:56:08.440 --> 00:56:09.760
if you're lucky, right?


00:56:09.760 --> 00:56:12.160
It's just there's not a great story.


00:56:12.160 --> 00:56:14.280
So they could just, like the other examples


00:56:14.280 --> 00:56:18.600
we talked about, build upon what JupyterLab is already doing.


00:56:18.600 --> 00:56:20.160
Just add their part, yeah?


00:56:20.160 --> 00:56:20.920
>>Quentin: Exactly.


00:56:20.920 --> 00:56:23.000
Rather than them having to reinvent everything,


00:56:23.000 --> 00:56:24.880
they can just reuse Jupyter.


00:56:24.880 --> 00:56:25.520
>>Luis: Yeah.


00:56:25.520 --> 00:56:26.880
And because of the extensions, you


00:56:26.880 --> 00:56:30.960
could theoretically have a Blender extension


00:56:30.960 --> 00:56:33.160
for JupyterLab.


00:56:33.160 --> 00:56:33.800
>>Quentin: Yeah.


00:56:33.800 --> 00:56:35.120
Actually, someone has made one.


00:56:35.120 --> 00:56:38.880
So for the specific use case, I think


00:56:38.880 --> 00:56:42.320
it's Jan Hendrik Muller has a Blender extension


00:56:42.320 --> 00:56:44.600
to render Blender model in line with the notebook.


00:56:44.600 --> 00:56:45.800
So yeah, check it out.


00:56:45.800 --> 00:56:48.360
>>Luis: Excellent.


00:56:48.360 --> 00:56:49.080
All right, y'all.


00:56:49.080 --> 00:56:50.560
We're getting very short on time here.


00:56:50.560 --> 00:56:52.640
There's two things I want to touch on really quick


00:56:52.640 --> 00:56:53.960
before we put a wrap on it.


00:56:53.960 --> 00:56:56.920
These are not exactly brand new things,


00:56:56.920 --> 00:56:58.160
but they're very exciting.


00:56:58.160 --> 00:57:00.560
And one is JupyterLite.


00:57:00.560 --> 00:57:02.760
And Jeremy, I know you've done a lot with JupyterLite.


00:57:02.760 --> 00:57:06.400
You want to tell us quick about JupyterLite?


00:57:06.400 --> 00:57:07.360
>>Jeremy: Yeah, sure.


00:57:07.360 --> 00:57:10.080
So the idea behind JupyterLite is


00:57:10.080 --> 00:57:13.720
to have a full Jupyter distribution that


00:57:13.720 --> 00:57:16.200
runs in a web browser.


00:57:16.200 --> 00:57:17.960
So normally, when you use Jupyter,


00:57:17.960 --> 00:57:22.240
you need to install the JupyterLab package, Python


00:57:22.240 --> 00:57:25.760
package, or the notebook Python package on your machine


00:57:25.760 --> 00:57:27.640
or on a server.


00:57:27.640 --> 00:57:30.800
But with JupyterLite, you don't need to do this.


00:57:30.800 --> 00:57:36.320
So in the end, what you get is just a set of static files.


00:57:36.320 --> 00:57:39.920
So it's just a bunch of files sitting on disk.


00:57:39.920 --> 00:57:46.360
And you just have HTML, CSS, JavaScript, and WebAssembly.


00:57:46.360 --> 00:57:50.640
So the main difference compared to a traditional Jupyter


00:57:50.640 --> 00:57:55.480
installation is the fact that the execution,


00:57:55.480 --> 00:57:58.440
the environment runs in a browser as well.


00:57:58.440 --> 00:58:02.240
So for example, Python, but it could also


00:58:02.240 --> 00:58:06.360
be other languages that are compiled to WebAssembly.


00:58:06.360 --> 00:58:13.320
So all of this is, again, built on the shoulder of Giants.


00:58:13.320 --> 00:58:14.160
So like the whole--


00:58:14.160 --> 00:58:15.440
>>DANIEL: Yeah, this is awesome.


00:58:15.440 --> 00:58:16.440
This is so awesome.


00:58:16.440 --> 00:58:18.840
>>JEREMY: The Jupyter stack is just


00:58:18.840 --> 00:58:23.160
another way of remixing the whole stack.


00:58:23.160 --> 00:58:27.120
So you take a bit of JupyterLab, a little bit


00:58:27.120 --> 00:58:32.640
of the Jupyter protocol to interact with the kernels.


00:58:32.640 --> 00:58:38.040
And then even the kernels can be reused in some way.


00:58:38.040 --> 00:58:41.320
And then you put that together and make something new.


00:58:41.320 --> 00:58:45.120
So that's the idea behind JupyterLite.


00:58:45.120 --> 00:58:51.160
It was also made possible by the work on the Pyodite.


00:58:51.160 --> 00:58:55.040
So this Python compiled to WebAssembly.


00:58:55.040 --> 00:58:59.520
Since Python is still the most heavily used language


00:58:59.520 --> 00:59:03.960
in Jupyter, this is kind of what people


00:59:03.960 --> 00:59:06.960
expect when they use Jupyter and JupyterLite


00:59:06.960 --> 00:59:10.000
to have a Python kernel.


00:59:10.000 --> 00:59:13.760
>>DANIEL: So if I wanted to, say, host some interactive code


00:59:13.760 --> 00:59:17.040
exploration, I want to have something


00:59:17.040 --> 00:59:18.120
that people can play with.


00:59:18.120 --> 00:59:20.800
Maybe I'm an educator and I've got 1,000 students.


00:59:20.800 --> 00:59:22.880
But I don't want to set up a server


00:59:22.880 --> 00:59:25.800
and worry about what people might do to it.


00:59:25.800 --> 00:59:27.560
But I want to give them flexibility, right?


00:59:27.560 --> 00:59:29.240
Like, this is really nice.


00:59:29.240 --> 00:59:32.920
You could just put this on a static file server like Netlify


00:59:32.920 --> 00:59:35.400
and there it goes, right?


00:59:35.400 --> 00:59:37.280
>>JEREMY: Yeah, that's definitely a use case.


00:59:37.280 --> 00:59:41.120
So GitHub pages, read the docs.


00:59:41.120 --> 00:59:41.880
It's very simple.


00:59:41.880 --> 00:59:45.400
It's much simpler than having to do sysadmin work


00:59:45.400 --> 00:59:47.600
to install packages.


00:59:47.600 --> 00:59:49.640
And also for the end user, it's also


00:59:49.640 --> 00:59:52.200
simpler because you don't have to install anything.


00:59:52.200 --> 00:59:54.400
Everything is already prepackaged.


00:59:54.400 --> 00:59:55.240
>>DANIEL: It's crazy.


00:59:55.240 --> 00:59:57.360
It looks just like JupyterLab.


00:59:57.360 --> 00:59:57.880
But it's--


00:59:57.880 --> 01:00:01.760
>>JEREMY: Yeah, because it is, in the end, just JupyterLab.


01:00:01.760 --> 01:00:06.200
But yeah, and there is also a Notebook 7 running as well.


01:00:06.200 --> 01:00:09.400
So again, like we were talking about earlier,


01:00:09.400 --> 01:00:13.400
if some users prefer to have this document-centric


01:00:13.400 --> 01:00:17.560
interface, then they can also use Notebook 7 instead.


01:00:17.560 --> 01:00:19.120
>>DANIEL: Yeah, it's excellent if you


01:00:19.120 --> 01:00:22.920
want to give access to some notebook


01:00:22.920 --> 01:00:24.960
but not run a server.


01:00:24.960 --> 01:00:26.640
I think there's kind of two options here.


01:00:26.640 --> 01:00:27.720
This is one of them.


01:00:27.720 --> 01:00:31.560
The other is if I'm going to give a notebook file


01:00:31.560 --> 01:00:36.560
to somebody and say, here, run this on your computer,


01:00:36.560 --> 01:00:38.200
there's a lot of assumptions about what


01:00:38.200 --> 01:00:39.520
happens at that point.


01:00:39.520 --> 01:00:40.360
Do you have Python?


01:00:40.360 --> 01:00:41.800
Do you have the right Python?


01:00:41.800 --> 01:00:43.680
Do you have permissions to install


01:00:43.680 --> 01:00:45.840
Jupyter and all the other dependencies?


01:00:45.840 --> 01:00:46.760
Can you run a server?


01:00:46.760 --> 01:00:48.880
Do you know what a terminal is?


01:00:48.880 --> 01:00:50.480
That's a long conversation.


01:00:50.480 --> 01:00:52.900
And so I think the other thing that's really interesting--


01:00:52.900 --> 01:00:54.360
I don't know where I pulled it up--


01:00:54.360 --> 01:00:56.320
but yeah, Jupyter Desktop is also


01:00:56.320 --> 01:00:58.800
quite interesting as a quick start


01:00:58.800 --> 01:01:02.280
to getting a Jupyter Python environment on your system,


01:01:02.280 --> 01:01:02.780
right?


01:01:02.780 --> 01:01:03.280
>>Yeah.


01:01:03.280 --> 01:01:10.220
Yeah, that's some work done by Mehmet.


01:01:10.220 --> 01:01:15.180
And yeah, basically, it bundled an Electron.


01:01:15.180 --> 01:01:18.420
So it's a web browser that's packaged with JupyterLab.


01:01:18.420 --> 01:01:21.340
And it's very powerful because now it


01:01:21.340 --> 01:01:23.100
can come with its own Python.


01:01:23.100 --> 01:01:25.580
But you can also use the Python that you


01:01:25.580 --> 01:01:28.060
have on your computer.


01:01:28.060 --> 01:01:31.140
And yeah, that's really a nice way


01:01:31.140 --> 01:01:36.020
for distributing and easing the installation for the end user,


01:01:36.020 --> 01:01:39.620
especially on non-friendly operating systems.


01:01:39.620 --> 01:01:41.780
Let's call it like that.


01:01:41.780 --> 01:01:45.020
>>Sure, or people who are not familiar with it.


01:01:45.020 --> 01:01:47.300
>>Yeah, for sure.


01:01:47.300 --> 01:01:49.620
>>Yeah, I mean, you've got a Mac--


01:01:49.620 --> 01:01:52.940
well, there is a macOS ARM and 64 version.


01:01:52.940 --> 01:01:54.940
There's a Debian and Fedora.


01:01:54.940 --> 01:01:56.460
There's a Windows EXE.


01:01:56.460 --> 01:01:57.860
Like, that's--


01:01:57.860 --> 01:02:01.740
>>No, it really solved the problem of,


01:02:01.740 --> 01:02:03.620
I've never used the command line,


01:02:03.620 --> 01:02:05.700
but I know lots of math, right?


01:02:05.700 --> 01:02:06.220
So--


01:02:06.220 --> 01:02:07.300
>>Yes, exactly.


01:02:07.300 --> 01:02:10.540
But when I run MATLAB, I just click the MATLAB icon,


01:02:10.540 --> 01:02:11.940
and then I get that shell.


01:02:11.940 --> 01:02:15.980
What is-- why can't I have permissions to install Jupyter?


01:02:15.980 --> 01:02:17.620
It says I don't have--


01:02:17.620 --> 01:02:18.380
>>No, I get it.


01:02:18.380 --> 01:02:21.060
>>That whole frustration side could go away, I think.


01:02:21.060 --> 01:02:22.340
This is interesting.


01:02:22.340 --> 01:02:26.540
>>But I mean, this is a harder problem


01:02:26.540 --> 01:02:29.660
than one might imagine just because of how many packages


01:02:29.660 --> 01:02:32.220
there are in the ecosystem, what things you might be using.


01:02:32.220 --> 01:02:35.620
So JupyterLab Desktop is pretty clever.


01:02:35.620 --> 01:02:40.300
It can also detect if you have Conda or Mamba installed


01:02:40.300 --> 01:02:41.940
and use those environments.


01:02:41.940 --> 01:02:45.700
It can use a running server.


01:02:45.700 --> 01:02:48.620
So it ships with the newest version of JupyterLab, right?


01:02:48.620 --> 01:02:51.500
But it could also connect to a server that's


01:02:51.500 --> 01:02:54.100
serving a different version of JupyterLab and give you that.


01:02:54.100 --> 01:02:56.100
It can be a client to different JupyterLabs,


01:02:56.100 --> 01:02:57.460
is what I mean.


01:02:57.460 --> 01:02:59.340
One time, just to see if it would work,


01:02:59.340 --> 01:03:03.700
I ran Jupyter Notebook and Lab and Desktop


01:03:03.700 --> 01:03:05.420
with real-time collaboration, and it


01:03:05.420 --> 01:03:06.740
turns out you could do that.


01:03:06.740 --> 01:03:09.180
So it really is like first-class JupyterLab,


01:03:09.180 --> 01:03:11.060
and it's very flexible, and it tries


01:03:11.060 --> 01:03:12.820
to integrate with what you've got.


01:03:12.820 --> 01:03:15.180
If you've got nothing, it brings what it needs.


01:03:15.180 --> 01:03:18.500
If you've got Conda set up, it finds stuff there.


01:03:18.500 --> 01:03:20.540
If you've got Mamba set up, it finds stuff there.


01:03:20.540 --> 01:03:26.340
So it basically tries to be exactly what that first user


01:03:26.340 --> 01:03:27.940
experience you would want is.


01:03:27.940 --> 01:03:30.420
You go, you download, you double-click a file.


01:03:30.420 --> 01:03:32.820
The only thing that's missing is you have


01:03:32.820 --> 01:03:34.060
to go to GitHub to get this.


01:03:34.060 --> 01:03:38.820
We should probably put it in an easier place for you to find.


01:03:38.820 --> 01:03:39.740
-Yeah.


01:03:39.740 --> 01:03:42.060
Yeah, possibly.


01:03:42.060 --> 01:03:44.340
Maybe in the various stores.


01:03:44.340 --> 01:03:44.900
I don't know.


01:03:44.900 --> 01:03:46.020
That's such a hassle, but--


01:03:46.020 --> 01:03:48.740
-Well, no, I just mean go to jupyter.org/download.


01:03:48.740 --> 01:03:49.900
I just set a URL.


01:03:49.900 --> 01:03:51.540
Sadly, it's not going to work for you,


01:03:51.540 --> 01:03:53.660
but maybe we should do that, right?


01:03:53.660 --> 01:03:54.540
-Yes, exactly.


01:03:54.540 --> 01:03:56.660
That would be a pretty easy thing to do, actually.


01:03:56.660 --> 01:03:59.780
Just detect the OS and highlight that,


01:03:59.780 --> 01:04:02.140
or have that little dropdown, choose another OS, right?


01:04:02.140 --> 01:04:03.300
See all downloads.


01:04:03.300 --> 01:04:06.380
-I think these two options are going to really make


01:04:06.380 --> 01:04:10.580
it possible to reach the next 10 million users of Jupyter.


01:04:10.580 --> 01:04:14.220
Especially Jupyter Lite, in terms of scalability,


01:04:14.220 --> 01:04:16.380
is unmatched at the moment.


01:04:16.380 --> 01:04:22.180
There is a deployment of an in-browser Jupyter flavor


01:04:22.180 --> 01:04:25.980
in use at the moment by the French high school system.


01:04:25.980 --> 01:04:27.420
They started with the Paris area,


01:04:27.420 --> 01:04:29.580
and now they enabled all the school districts.


01:04:29.580 --> 01:04:34.660
There is over half a million users on this deployment,


01:04:34.660 --> 01:04:36.860
200,000 sessions per week.


01:04:36.860 --> 01:04:40.340
And it's all served with one single virtual machine.


01:04:40.340 --> 01:04:43.660
And if they were trying to do this


01:04:43.660 --> 01:04:49.420
with one Docker image per user session, it wouldn't fly.


01:04:49.420 --> 01:04:53.580
-No, they'd need a massive IT team to pull that off.


01:04:53.580 --> 01:04:54.620
-Exactly.


01:04:54.620 --> 01:04:58.900
And France is not home to hyperscaler cloud providers,


01:04:58.900 --> 01:05:06.380
so we would need to host that on Azure or Alibaba or Google.


01:05:06.380 --> 01:05:08.900
And that would be an enormous cost, right?


01:05:08.900 --> 01:05:11.820
And this is incredibly cheap.


01:05:11.820 --> 01:05:15.860
There are some limitations to WebAssembly.


01:05:15.860 --> 01:05:19.820
But for the sort of use cases, what a high schooler is going


01:05:19.820 --> 01:05:21.940
to do in a notebook, like learning


01:05:21.940 --> 01:05:24.540
how to write for loops or computing a greatest


01:05:24.540 --> 01:05:27.940
command in a miniature, this is more than enough.


01:05:27.940 --> 01:05:30.700
The complexity of it is lesser than rendering the UI.


01:05:30.700 --> 01:05:32.580
So yeah.


01:05:32.580 --> 01:05:34.100
-I think you're absolutely right.


01:05:34.100 --> 01:05:36.420
That's why I put them both side by side, the Jupyter Lite


01:05:36.420 --> 01:05:37.660
and the Jupyter Desktop app.


01:05:37.660 --> 01:05:40.340
I think they kind of address similar audience,


01:05:40.340 --> 01:05:41.300
but in a different way.


01:05:41.300 --> 01:05:43.380
Check this out, by the way.


01:05:43.380 --> 01:05:45.620
This probably won't come through very well.


01:05:45.620 --> 01:05:49.900
But this is my iPad, and I've got Jupyter Lite working just


01:05:49.900 --> 01:05:54.940
the same on my browser there as I did-- or it would be a Chrome


01:05:54.940 --> 01:05:56.100
book or whatever, right?


01:05:56.100 --> 01:05:58.300
It really reaches a big audience.


01:05:58.300 --> 01:05:59.140
-Yeah.


01:05:59.140 --> 01:06:01.460
Yeah, I mean, modern browsers now can all handle it.


01:06:01.460 --> 01:06:03.860
It's not the bad old days, at least on that front.


01:06:03.860 --> 01:06:11.180
And I think there will be a lot of really exciting things


01:06:11.180 --> 01:06:14.860
that happen inside browsers that will surprise anyone who


01:06:14.860 --> 01:06:17.100
is using this era of the web.


01:06:17.100 --> 01:06:20.300
Like, we're about to see crazy things.


01:06:20.300 --> 01:06:21.820
-We are about to see crazy things.


01:06:21.820 --> 01:06:23.580
Well, we already see crazy things.


01:06:23.580 --> 01:06:25.300
We'll see more of them, that's for sure.


01:06:25.300 --> 01:06:26.420
That's for sure.


01:06:26.420 --> 01:06:27.140
All right, y'all.


01:06:27.140 --> 01:06:29.620
I think we are out of time, but we are certainly not


01:06:29.620 --> 01:06:30.220
out of topics.


01:06:30.220 --> 01:06:33.380
We could keep talking for a long time.


01:06:33.380 --> 01:06:37.740
But we'll close it here, I guess.


01:06:37.740 --> 01:06:39.140
Final thoughts, call to action.


01:06:39.140 --> 01:06:40.440
People want to check this stuff out.


01:06:40.440 --> 01:06:43.780
Maybe they want to upgrade from an older version


01:06:43.780 --> 01:06:47.180
to either JupyterLab 4 or Jupyter Notebook 7.


01:06:47.180 --> 01:06:49.380
What do you say?


01:06:49.380 --> 01:06:51.740
-Pip install Notebook.


01:06:51.740 --> 01:06:54.700
Pip install JupyterLab, and have fun.


01:06:54.700 --> 01:06:57.300
-Dash dash upgrade.


01:06:57.300 --> 01:07:00.220
-Yes, good point.


01:07:00.220 --> 01:07:01.300
-Guess you already got it.


01:07:01.300 --> 01:07:03.940
-Full request, welcome.


01:07:03.940 --> 01:07:04.860
-Full request, welcome.


01:07:04.860 --> 01:07:05.860
Awesome, yeah.


01:07:05.860 --> 01:07:09.260
So it's a huge project with lots of people involved.


01:07:09.260 --> 01:07:10.760
Roderick, final thoughts.


01:07:10.760 --> 01:07:18.420
-Yeah, that's a very fun project to work on too.


01:07:18.420 --> 01:07:21.140
So if people are willing to contribute,


01:07:21.140 --> 01:07:24.340
just come and contribute to it.


01:07:24.340 --> 01:07:27.300
There is plenty of spaces, as we have just


01:07:27.300 --> 01:07:28.620
touched some of them here.


01:07:28.620 --> 01:07:31.580
And we are very happy to have new contributors


01:07:31.580 --> 01:07:36.780
and help people learn the ecosystem to try to contribute.


01:07:36.780 --> 01:07:40.020
And there is no small contribution.


01:07:40.020 --> 01:07:41.380
There is no small contribution.


01:07:41.380 --> 01:07:42.260
Everybody is welcome.


01:07:42.260 --> 01:07:43.820
-Yeah.


01:07:43.820 --> 01:07:46.020
Somebody could set up the download page for Jupyter


01:07:46.020 --> 01:07:48.180
Desktop, for example, right?


01:07:48.180 --> 01:07:50.980
-Exactly.


01:07:50.980 --> 01:07:53.460
Jeremy, you get the final word.


01:07:53.460 --> 01:07:58.540
-Yeah, that was what I was going to say a little bit as well.


01:07:58.540 --> 01:08:00.940
The Jupyter community is very welcoming.


01:08:00.940 --> 01:08:03.540
So you can contribute in many different ways.


01:08:03.540 --> 01:08:09.380
It doesn't have to be about technical details or code only.


01:08:09.380 --> 01:08:12.620
Even just putting a talk out there, for example,


01:08:12.620 --> 01:08:16.220
or going to JupyterCon and sharing your use cases


01:08:16.220 --> 01:08:18.740
is already very valuable to the community


01:08:18.740 --> 01:08:19.900
and also to the developers.


01:08:19.900 --> 01:08:24.020
Because they can learn about how people use the tools


01:08:24.020 --> 01:08:27.180
and get a very valuable feedback.


01:08:27.180 --> 01:08:30.340
So that will be your one call to action


01:08:30.340 --> 01:08:33.940
is don't hesitate to get involved.


01:08:33.940 --> 01:08:37.860
And if you think there is room to improve, for sure.


01:08:37.860 --> 01:08:42.460
As you were saying before, PRs are welcome, as we say often.


01:08:42.460 --> 01:08:48.140
And yeah, check out the latest update on JupyterLite


01:08:48.140 --> 01:08:52.260
because there is going to be an exciting new update


01:08:52.260 --> 01:08:55.460
to the JupyterLab 4 and Notebook 7 coming in a couple of days.


01:08:55.460 --> 01:08:58.340
So I think maybe by the time this podcast is released,


01:08:58.340 --> 01:09:00.420
it will probably be out already.


01:09:00.420 --> 01:09:03.140
And also exciting developments when


01:09:03.140 --> 01:09:08.020
it comes to real-time collaboration in JupyterLite,


01:09:08.020 --> 01:09:12.300
Desktop, JupyterLab together.


01:09:12.300 --> 01:09:13.220
- Yeah, very exciting.


01:09:13.220 --> 01:09:15.540
A lot of things are already great here


01:09:15.540 --> 01:09:16.380
that we talked about.


01:09:16.380 --> 01:09:17.700
These are some big changes.


01:09:17.700 --> 01:09:19.340
So thank you all for being on the show


01:09:19.340 --> 01:09:24.060
and sharing what you and everyone else has been up to.


01:09:24.060 --> 01:09:25.580
- Thanks very much.


01:09:25.580 --> 01:09:27.060
- Yeah, thank you.


01:09:27.060 --> 01:09:28.300
- Bye.

