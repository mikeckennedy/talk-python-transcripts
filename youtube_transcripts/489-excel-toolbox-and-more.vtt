WEBVTT

00:00:00.600 --> 00:00:02.280
Peter, welcome back to Talk Python To Me.

00:00:02.280 --> 00:00:04.700
Well, thank you so much for having me.

00:00:04.700 --> 00:00:05.480
It's great to be here.

00:00:05.480 --> 00:00:07.460
It's always good to have you.

00:00:07.460 --> 00:00:09.080
I love your perspective on things.

00:00:09.080 --> 00:00:11.680
It's always very thoughtful and fun,

00:00:11.680 --> 00:00:14.100
and I don't see why this would be any different.

00:00:14.100 --> 00:00:14.840
We're going to have a great time.

00:00:14.840 --> 00:00:16.820
I'm looking forward to the conversation very much.

00:00:16.820 --> 00:00:19.400
I am as well.

00:00:19.400 --> 00:00:23.440
So let's, you know, you've been on the show a number of times,

00:00:23.440 --> 00:00:27.160
but let's maybe just have you do a quick introduction for yourself,

00:00:27.160 --> 00:00:28.300
just for people who don't know you.

00:00:28.300 --> 00:00:29.460
Who are you?

00:00:29.460 --> 00:00:30.880
I am, yes.

00:00:30.880 --> 00:00:33.000
So I am the co-founder at Anaconda.

00:00:33.000 --> 00:00:37.560
I also helped create the PyData movement,

00:00:37.560 --> 00:00:40.300
so really taking the Python,

00:00:40.300 --> 00:00:42.720
scientific Python numerical ecosystem

00:00:42.720 --> 00:00:45.900
into the world of data analysis and open source data science.

00:00:45.900 --> 00:00:47.620
I guess 12 years ago we started,

00:00:47.620 --> 00:00:51.280
and I've created a number of open source tools,

00:00:51.280 --> 00:00:53.260
some more popular than others,

00:00:53.260 --> 00:00:56.020
but really I think maybe my biggest role

00:00:56.020 --> 00:00:58.020
and contribution to the ecosystem has been

00:00:58.020 --> 00:00:59.940
as sort of a community steward

00:00:59.940 --> 00:01:01.720
or as someone who's been, you know,

00:01:01.720 --> 00:01:04.220
really trying to help drive commercial adoption

00:01:04.220 --> 00:01:08.120
and really trying to make sure that there are on ramps for businesses,

00:01:08.120 --> 00:01:09.700
large scale and small scale,

00:01:09.700 --> 00:01:12.660
to adopt Python and continue using Python.

00:01:13.320 --> 00:01:16.820
And that really, a lot of my perspective there,

00:01:16.820 --> 00:01:20.420
even though, of course, many of my colleagues in the open source Python community

00:01:20.420 --> 00:01:27.700
have spent a lot of time as developers in startups and, you know, big high-tech companies,

00:01:27.700 --> 00:01:31.120
one of the things that I learned early on as a consultant

00:01:31.120 --> 00:01:36.120
was that enterprises have a very, very different approach to adopting technology,

00:01:36.120 --> 00:01:39.100
and open source even now can still be challenging to them.

00:01:39.100 --> 00:01:44.760
So there's a role for some of us to play in that commercialization and advocacy for open source.

00:01:44.760 --> 00:01:48.220
And, you know, 15 years ago I was advocating for Python in, you know,

00:01:48.220 --> 00:01:49.860
rooms full of Java and .NET,

00:01:49.860 --> 00:01:53.340
very, very stodgy and angry Java and .NET architects.

00:01:53.620 --> 00:01:55.520
And now, you know, it's sort of…

00:01:55.520 --> 00:02:01.720
How could you possibly come and recommend a dynamic language for our professional software?

00:02:01.720 --> 00:02:02.500
It doesn't even have types.

00:02:02.500 --> 00:02:02.740
Exactly.

00:02:02.740 --> 00:02:04.260
It's got just white space stuff.

00:02:04.260 --> 00:02:04.780
It doesn't…

00:02:04.780 --> 00:02:05.520
Do you have tabs or space?

00:02:05.520 --> 00:02:06.840
I mean, yeah, I lived…

00:02:06.840 --> 00:02:08.720
I mean, I have, you know, a thousand-yard stare

00:02:08.720 --> 00:02:10.240
thinking about some of those meetings sometimes.

00:02:10.240 --> 00:02:12.000
But we prevailed.

00:02:12.000 --> 00:02:13.380
And now we have the other side.

00:02:13.380 --> 00:02:14.540
We have the flip side of the coin,

00:02:14.540 --> 00:02:17.720
which is that our little technology ecosystem has now grown up.

00:02:17.720 --> 00:02:18.640
It's crossed the chasm.

00:02:18.640 --> 00:02:22.240
And now everyone's using it, even if they don't like it,

00:02:22.500 --> 00:02:23.760
even if they kind of hate it.

00:02:23.760 --> 00:02:26.980
They have to use it because now it's a thing everyone does use.

00:02:26.980 --> 00:02:31.380
And so conversely, so the flip side of the coin is defending Python,

00:02:31.380 --> 00:02:33.460
even when it is ubiquitous.

00:02:33.460 --> 00:02:38.620
So it's really interesting having to engage in these different dynamics of the conversation

00:02:38.620 --> 00:02:43.120
and then also trying to bring my perspective into conversations

00:02:43.120 --> 00:02:46.520
as the ecosystem matures and the cast of players is different.

00:02:47.280 --> 00:02:52.120
So it's just been, you know, honestly, I just feel a great deal of gratitude

00:02:52.120 --> 00:02:54.960
towards the community, towards many of the great people I've met,

00:02:54.960 --> 00:03:00.880
people like you who, you know, I mean, how the energy it takes to run a series

00:03:00.880 --> 00:03:03.060
like you've done for as many years as you've done it.

00:03:03.060 --> 00:03:03.900
It is…

00:03:03.900 --> 00:03:04.960
There are almost 10 years now.

00:03:04.960 --> 00:03:05.880
It's unbelievable.

00:03:05.880 --> 00:03:06.500
It is.

00:03:06.960 --> 00:03:09.640
It's really oftentimes very, very…

00:03:09.640 --> 00:03:13.640
It's under-recognized work, I would say, as, you know, a community advocate

00:03:13.640 --> 00:03:16.340
and as someone who elevates so many great voices in the community.

00:03:16.340 --> 00:03:19.940
And so all of us kind of in the Python tribe ecosystem, you know,

00:03:19.940 --> 00:03:23.360
we're all trying to do our best to kind of make things go.

00:03:23.940 --> 00:03:28.140
But it's just been really wonderful to see the impact that we've had.

00:03:28.140 --> 00:03:30.900
And I think a lot of the work that we did did lay the groundwork

00:03:30.900 --> 00:03:35.440
for modern machine learning and then, you know, making GPUs accessible and usable.

00:03:35.440 --> 00:03:38.560
And now Python is the language that everyone is doing AI in.

00:03:38.560 --> 00:03:41.800
You know, whether they're deep into the innards of it or not,

00:03:41.800 --> 00:03:45.180
they're writing mostly Python code to build these AI tools.

00:03:45.180 --> 00:03:47.660
And that's really been a wonderful and interesting thing to see.

00:03:47.660 --> 00:03:51.360
So anyway, that was a long-winded thing about who am I.

00:03:51.560 --> 00:03:56.820
But yeah, so I was a CTO here at Anaconda for a while, sort of founding CTO.

00:03:56.820 --> 00:03:58.460
And then I was CEO for four years.

00:03:58.460 --> 00:04:01.520
And this year, I stepped into the chief AI officer role,

00:04:01.520 --> 00:04:06.760
really to try to help us explore and define what is the future of a company

00:04:06.760 --> 00:04:09.460
that's really been focused on Python coding for data science.

00:04:09.460 --> 00:04:12.260
What does that future look like in a world that is obviously being

00:04:12.260 --> 00:04:13.940
rapidly transformed by AI, right?

00:04:13.940 --> 00:04:14.500
Yeah.

00:04:14.500 --> 00:04:17.920
Well, you're leading one of the main data science companies

00:04:17.920 --> 00:04:22.760
for the primary language for AI in the world.

00:04:22.760 --> 00:04:25.780
So yeah, it makes a lot of sense.

00:04:25.780 --> 00:04:26.300
That's awesome.

00:04:26.300 --> 00:04:30.660
You know, when we talked, I can't remember how many times ago,

00:04:30.660 --> 00:04:36.120
but one of the times ago, we talked about bringing Python into the enterprise

00:04:36.120 --> 00:04:40.920
and sort of making it more acceptable for large companies and so on.

00:04:41.160 --> 00:04:43.400
I want to show you a graph here.

00:04:43.400 --> 00:04:46.100
I'm sure you're familiar with the TOB index.

00:04:46.100 --> 00:04:46.900
Yeah, yeah, yeah.

00:04:46.900 --> 00:04:47.360
Many people are.

00:04:47.360 --> 00:04:50.660
But I think there's something interesting here that I noticed.

00:04:50.660 --> 00:04:52.480
It just blew my mind.

00:04:52.480 --> 00:04:53.940
And I just like to get your thoughts on it.

00:04:53.940 --> 00:04:56.440
So a while ago, a couple of years ago,

00:04:56.440 --> 00:05:00.560
Python became the number one language on the TOB index, right?

00:05:01.100 --> 00:05:03.860
But what's interesting is not just that.

00:05:03.860 --> 00:05:06.020
I hadn't seen the number 24.

00:05:06.020 --> 00:05:06.800
Wow.

00:05:06.800 --> 00:05:11.280
Yes, it's more than double the second most popular language.

00:05:11.280 --> 00:05:12.300
More than double.

00:05:12.300 --> 00:05:17.240
And so it's more than double as popular as C++ was number two,

00:05:17.240 --> 00:05:19.180
then Java, then C, then C#, then JavaScript.

00:05:21.060 --> 00:05:23.200
The most popular one of those is more than double.

00:05:23.200 --> 00:05:26.060
But that's not the number that's actually most interesting to me.

00:05:26.060 --> 00:05:29.000
The more interesting number is the derivative of that,

00:05:29.000 --> 00:05:30.940
which is the rate of change.

00:05:30.940 --> 00:05:35.220
Python is growing at almost 9% year over year,

00:05:35.220 --> 00:05:38.400
where the others are like half a percent, a third of a percent,

00:05:38.400 --> 00:05:41.080
one percent, negative three percent.

00:05:41.080 --> 00:05:43.300
What do you think about this?

00:05:43.300 --> 00:05:44.240
How does that say with you?

00:05:44.240 --> 00:05:44.980
It's wild, right?

00:05:44.980 --> 00:05:50.860
Well, I mean, I guess congratulations.

00:05:50.860 --> 00:05:51.660
I'm sorry.

00:05:51.660 --> 00:05:55.420
Because Python, we haven't decreased the number of warts

00:05:55.420 --> 00:05:56.920
by 10% year over year, right?

00:05:56.920 --> 00:05:59.160
I mean, more and more people are learning this language,

00:05:59.160 --> 00:06:00.620
and there are some idiosyncrasies,

00:06:00.620 --> 00:06:02.140
and there is a complex ecosystem.

00:06:02.140 --> 00:06:08.120
But the real story behind this is what they're not showing

00:06:08.120 --> 00:06:08.920
is the denominator.

00:06:08.920 --> 00:06:12.480
And as I recall, TOB is based on a number of things.

00:06:12.480 --> 00:06:15.400
It's sort of a mixed model, right,

00:06:15.400 --> 00:06:17.840
of web searches, stack overflow,

00:06:17.840 --> 00:06:20.040
which I don't know how they adjust that

00:06:20.040 --> 00:06:23.900
given modern usage of LLMs and ChatGPT and copilot

00:06:23.900 --> 00:06:24.580
and things like that.

00:06:24.580 --> 00:06:27.520
But it's a combination of all these different kinds of metrics.

00:06:27.520 --> 00:06:30.720
And I know one of the criticisms of TOB has been that,

00:06:30.720 --> 00:06:33.300
oh, it doesn't tell the whole story, right?

00:06:33.300 --> 00:06:35.140
But it certainly is a swag.

00:06:35.140 --> 00:06:37.480
And the swag has been Python's been on the uptick,

00:06:37.480 --> 00:06:39.360
on the rise.

00:06:40.000 --> 00:06:43.620
I think with the advent of, I guess, November,

00:06:43.620 --> 00:06:46.760
this month marks the two-year anniversary of ChatGPT.

00:06:46.760 --> 00:06:51.340
The number of new people coming in to making software

00:06:51.340 --> 00:06:53.420
or doing deeper things with code

00:06:53.420 --> 00:06:55.580
than they could have done before is growing.

00:06:55.580 --> 00:06:58.540
And so I think when we look at a thing like this,

00:06:58.540 --> 00:07:01.280
you know, this is the fun number.

00:07:01.280 --> 00:07:03.160
So I actually, in my PyCon keynote,

00:07:03.160 --> 00:07:04.060
when I announced PyScript,

00:07:04.060 --> 00:07:06.040
I sort of asked people this question.

00:07:06.040 --> 00:07:08.160
How many software developers are there in the world?

00:07:08.160 --> 00:07:11.300
What is actually anyone who knows anything about IT in the world?

00:07:11.300 --> 00:07:13.580
Anyone who can, you know, plug in a server,

00:07:13.580 --> 00:07:16.020
knows how to boot, you know, boot disk,

00:07:16.020 --> 00:07:18.080
can write a line of SQL code,

00:07:18.080 --> 00:07:21.940
can, you know, fudge some Python or JavaScript or HTML together.

00:07:21.940 --> 00:07:24.980
Anybody who can do anything related to computers,

00:07:24.980 --> 00:07:26.540
not stare at the screen dumbfounded.

00:07:26.540 --> 00:07:28.940
What percentage of the population is that?

00:07:29.380 --> 00:07:32.900
And the swag is something like 4% of the population, right?

00:07:32.900 --> 00:07:35.740
Which in a world of 8 billion people, that's a lot of people.

00:07:35.740 --> 00:07:38.200
But that's not a lot of people.

00:07:38.200 --> 00:07:40.260
Imagine a room of 100 people,

00:07:40.260 --> 00:07:45.280
four of them know how to do anything with computers out of 100, right?

00:07:46.340 --> 00:07:47.960
Maybe one and a half know about farming.

00:07:47.960 --> 00:07:48.900
So that's even more terrifying.

00:07:48.900 --> 00:07:51.140
But we live in a computational world

00:07:51.140 --> 00:07:54.640
and about 4% of the people of the world's population are involved in IT.

00:07:54.640 --> 00:07:57.180
Now that's not, you know,

00:07:57.180 --> 00:08:00.160
normalized against developed countries versus developing countries

00:08:00.160 --> 00:08:01.200
and all this other kind of stuff.

00:08:01.200 --> 00:08:02.140
But at the end of the day,

00:08:02.140 --> 00:08:03.840
you know, we would admit that there are something

00:08:03.840 --> 00:08:06.280
on the order of tens of millions of software developers.

00:08:06.840 --> 00:08:09.680
But if we say we're going to open the doors

00:08:09.680 --> 00:08:13.280
to allow anyone to be asking a question

00:08:13.280 --> 00:08:14.800
of an interactive coding assistant

00:08:14.800 --> 00:08:17.860
to then be able to produce software,

00:08:17.860 --> 00:08:21.040
to maybe write a Kubernetes,

00:08:21.040 --> 00:08:22.760
configure a Docker file,

00:08:22.760 --> 00:08:23.860
Kubernetes YAML thing,

00:08:23.860 --> 00:08:24.580
whatever it is,

00:08:24.580 --> 00:08:27.120
you are now opening the floodgates

00:08:27.120 --> 00:08:31.660
to a 25X number of people that can do code.

00:08:31.660 --> 00:08:33.500
It won't be great code.

00:08:33.500 --> 00:08:34.920
Actually, sometimes might be better code

00:08:34.920 --> 00:08:36.360
than a junior dev could do.

00:08:36.460 --> 00:08:37.660
But nonetheless, the point is,

00:08:37.660 --> 00:08:39.700
there was a lot of headroom that we were ignoring.

00:08:39.700 --> 00:08:41.740
And I think a lot of Python's growth

00:08:41.740 --> 00:08:42.680
can be attributed to that.

00:08:42.680 --> 00:08:44.560
And one of the biggest things that we found

00:08:44.560 --> 00:08:46.480
going to businesses and talking about using Python,

00:08:46.480 --> 00:08:47.640
especially for data science,

00:08:47.640 --> 00:08:51.420
was how many of them did not understand this concept

00:08:51.420 --> 00:08:55.740
of a data person who would use Python or R

00:08:55.740 --> 00:08:58.120
to do a data analysis.

00:08:58.120 --> 00:09:01.200
For them, an analyst is someone who used Excel or Tableau.

00:09:01.200 --> 00:09:04.940
And then coders are people who wrote code.

00:09:06.080 --> 00:09:08.420
And they would lump the Python data science,

00:09:08.420 --> 00:09:11.900
Jupyter notebook person in with the Java nerds.

00:09:11.900 --> 00:09:13.600
And those are two very different kinds of people.

00:09:13.600 --> 00:09:16.460
So I think this expansion and growth

00:09:16.460 --> 00:09:19.780
of these people who code Python

00:09:19.780 --> 00:09:22.020
as a way of getting some stuff done,

00:09:22.020 --> 00:09:23.240
but are not software developers,

00:09:23.240 --> 00:09:25.720
that's going to push those TOE numbers even higher.

00:09:26.420 --> 00:09:28.020
Yeah, I think so as well.

00:09:28.020 --> 00:09:29.960
It's a great observation.

00:09:29.960 --> 00:09:33.920
And there's been all these learn to code movements,

00:09:33.920 --> 00:09:36.660
trying to get kids to learn coding and stuff.

00:09:36.660 --> 00:09:38.640
And I do think those are valuable.

00:09:38.640 --> 00:09:42.060
I don't think it means we need 10x the number of software developers,

00:09:42.060 --> 00:09:44.280
but I think having programming skills is awesome.

00:09:44.840 --> 00:09:49.780
But I feel like LLMs and ChatGPT and so on,

00:09:49.780 --> 00:09:52.520
they're going to make a way bigger impact

00:09:52.520 --> 00:09:55.700
than if you took a scratch class in fifth grade.

00:09:55.700 --> 00:09:56.040
You know?

00:09:57.500 --> 00:09:58.260
Yeah, yeah.

00:09:58.260 --> 00:09:59.220
And I, you know, there's,

00:09:59.220 --> 00:10:01.880
well, not to get too philosophical on it, I suppose,

00:10:01.880 --> 00:10:04.920
but one of the, oh, can you hear me okay?

00:10:04.920 --> 00:10:07.280
I thought my, how did my, yeah.

00:10:09.420 --> 00:10:12.640
I don't think we need 25x more software engineers, right?

00:10:12.640 --> 00:10:14.180
Just like we teach people math,

00:10:14.180 --> 00:10:16.060
we don't need 25x more mathematicians.

00:10:16.060 --> 00:10:17.400
And we teach people English,

00:10:17.400 --> 00:10:19.520
we don't need 25x more authors.

00:10:19.520 --> 00:10:21.700
But everyone should be able to author,

00:10:21.700 --> 00:10:22.740
to do some math,

00:10:22.740 --> 00:10:24.800
to think quantitatively about the world.

00:10:24.800 --> 00:10:26.240
And with code,

00:10:26.240 --> 00:10:27.760
I think the important thing isn't,

00:10:27.760 --> 00:10:29.520
are you a scratch coder?

00:10:29.520 --> 00:10:32.460
It's do you understand how computers process information?

00:10:32.460 --> 00:10:35.640
And what is happening to your stuff, right?

00:10:35.640 --> 00:10:37.340
And how you're interacting with these things.

00:10:37.900 --> 00:10:38.700
It's really,

00:10:38.700 --> 00:10:43.160
I think that's kind of the weird moment we're going through,

00:10:43.160 --> 00:10:46.180
where people really have to look at

00:10:46.180 --> 00:10:48.760
these kind of programming-like skills,

00:10:48.760 --> 00:10:49.880
or knowledge of computers,

00:10:49.880 --> 00:10:52.580
as a literacy, or a life skill.

00:10:52.580 --> 00:10:54.220
Again, it's like learning to drive.

00:10:54.220 --> 00:10:56.020
Doesn't mean you're going to be an F1 race car driver.

00:10:56.020 --> 00:10:58.380
There's only a few dozen of those in the world.

00:10:58.380 --> 00:11:01.640
But everyone needs to know how to drive, right?

00:11:01.640 --> 00:11:04.000
So there's something about this that I think is lost.

00:11:04.000 --> 00:11:05.360
When we're teaching,

00:11:05.360 --> 00:11:06.660
I think what happened,

00:11:06.660 --> 00:11:08.220
is in the last 20 years,

00:11:08.220 --> 00:11:10.820
software development was in such demand.

00:11:10.820 --> 00:11:14.000
And all of those software businesses took off so much

00:11:14.000 --> 00:11:15.320
that they made so much money.

00:11:15.320 --> 00:11:16.980
So software engineers made so much money.

00:11:16.980 --> 00:11:17.880
So everyone's like,

00:11:17.880 --> 00:11:18.900
I'm going to learn how to code.

00:11:18.900 --> 00:11:21.080
So I'm doing these really sweet coding jobs.

00:11:21.080 --> 00:11:23.560
And that turns out,

00:11:23.560 --> 00:11:25.220
that's not actually the thing, right?

00:11:25.220 --> 00:11:26.920
It looked like a gold rush, sort of.

00:11:26.920 --> 00:11:28.480
It was absolutely a gold rush.

00:11:28.480 --> 00:11:29.020
Yeah, absolutely.

00:11:29.020 --> 00:11:30.180
Yeah.

00:11:31.480 --> 00:11:31.880
Awesome.

00:11:31.880 --> 00:11:35.900
Well, let's talk a bit about Anaconda.

00:11:35.900 --> 00:11:37.480
First, Justin,

00:11:37.480 --> 00:11:39.300
maybe, I mean,

00:11:39.300 --> 00:11:41.440
you talked about your roles changing there,

00:11:41.440 --> 00:11:43.440
but just give us a sense of what is Anaconda.

00:11:43.440 --> 00:11:45.020
I know there's a lot of people out there listening.

00:11:45.020 --> 00:11:45.600
I'll throw,

00:11:45.600 --> 00:11:47.580
I'll deal with another stat that blew me away.

00:11:47.640 --> 00:11:50.700
because the PSF JetBrains Python developer survey

00:11:50.700 --> 00:11:53.360
asks all the respondents,

00:11:53.360 --> 00:11:55.960
how long have you been programming

00:11:55.960 --> 00:11:59.040
as a professional software developer

00:11:59.040 --> 00:12:00.040
in any language,

00:12:00.040 --> 00:12:00.740
not just Python?

00:12:00.740 --> 00:12:05.160
And the 50% of the respondents said less than two years.

00:12:05.160 --> 00:12:06.760
Right, right.

00:12:06.880 --> 00:12:08.500
So a lot of the people out there listening

00:12:08.500 --> 00:12:10.960
maybe don't even know what Anaconda is,

00:12:10.960 --> 00:12:13.560
even though it's very well known within the Python space.

00:12:13.560 --> 00:12:15.960
Give us a bit about what you guys are up to these days.

00:12:15.960 --> 00:12:18.640
Yeah, so we started,

00:12:18.640 --> 00:12:19.700
I think we're probably best known

00:12:19.700 --> 00:12:22.480
as the providers of the eponymous Anaconda distribution

00:12:22.480 --> 00:12:25.200
and the installers for the various packages.

00:12:25.200 --> 00:12:27.740
And really our bread and butter

00:12:27.740 --> 00:12:31.620
is building out the Python packages,

00:12:31.620 --> 00:12:33.700
maintaining a kind of curated repository,

00:12:33.700 --> 00:12:35.720
and really selling access to that

00:12:35.720 --> 00:12:37.880
to commercial businesses

00:12:37.880 --> 00:12:40.740
that want to actually have a vendor-backed,

00:12:40.740 --> 00:12:43.120
vendor-supported source of Python packages.

00:12:43.120 --> 00:12:44.960
And for most Python packages,

00:12:44.960 --> 00:12:46.820
I mean, there's many people in the world

00:12:46.820 --> 00:12:48.500
who are very happy pip installing off PyPI.

00:12:48.500 --> 00:12:49.620
Things work great.

00:12:49.620 --> 00:12:52.000
But when you get into some of the more numerical

00:12:52.000 --> 00:12:54.240
or maybe GPU-intensive packages,

00:12:54.240 --> 00:12:57.460
the way it gets built is enormously important

00:12:57.460 --> 00:12:59.060
and can sometimes be very, very challenging.

00:12:59.060 --> 00:13:03.080
So when we started Anaconda over 10 years ago,

00:13:03.080 --> 00:13:04.960
it was actually very, very hard

00:13:04.960 --> 00:13:06.820
to get those pre-built binaries installed.

00:13:06.820 --> 00:13:07.960
Now it's a little bit easier.

00:13:07.960 --> 00:13:09.320
People are rolling a lot of libraries

00:13:09.320 --> 00:13:12.680
into these big fat wheels from PyPI.

00:13:12.680 --> 00:13:15.060
And that can work pretty well in some cases.

00:13:15.060 --> 00:13:16.860
In some cases, it fails catastrophically.

00:13:17.360 --> 00:13:19.880
But what we do is we provide enterprise support.

00:13:19.880 --> 00:13:22.080
We provide also just a validated

00:13:22.080 --> 00:13:24.140
and secure open source supply chain

00:13:24.140 --> 00:13:26.460
around these really important binary artifacts

00:13:26.460 --> 00:13:29.400
that then become deployed into Docker containers

00:13:29.400 --> 00:13:31.720
that become then the runtime for machine learning

00:13:31.720 --> 00:13:33.000
and data processing

00:13:33.000 --> 00:13:36.860
for very sensitive customer data and things like that.

00:13:36.860 --> 00:13:39.540
So we have a model that's very similar

00:13:39.540 --> 00:13:41.460
to what Red Hat did for Linux, right?

00:13:41.460 --> 00:13:42.520
Where you can get Linux for free.

00:13:42.520 --> 00:13:43.460
You can run the free stuff.

00:13:43.660 --> 00:13:44.600
You can go and pick up packages

00:13:44.600 --> 00:13:46.040
from the free community repositories.

00:13:46.040 --> 00:13:47.500
But if you're really serious

00:13:47.500 --> 00:13:48.740
about a business runtime environment

00:13:48.740 --> 00:13:50.220
and you really want to have like,

00:13:50.220 --> 00:13:51.320
you know, a throat to throttle,

00:13:51.320 --> 00:13:51.800
so to speak,

00:13:51.800 --> 00:13:53.320
if something is not quite right,

00:13:53.320 --> 00:13:55.300
then you go and you go pay Red Hat

00:13:55.300 --> 00:13:56.320
for the annual subscription.

00:13:56.320 --> 00:13:58.260
And so we have very similar business model around that.

00:13:58.260 --> 00:14:01.180
We made the Conda package manager.

00:14:01.180 --> 00:14:02.440
But to be very clear,

00:14:02.440 --> 00:14:03.380
the Conda package manager

00:14:03.380 --> 00:14:04.540
is an open source project.

00:14:04.540 --> 00:14:06.100
So we put that into the open source

00:14:06.100 --> 00:14:08.920
and have a community around that.

00:14:08.920 --> 00:14:10.320
The Conda Forge community

00:14:10.320 --> 00:14:12.240
is the package build community around that.

00:14:12.240 --> 00:14:13.860
We host the repositories there,

00:14:13.860 --> 00:14:15.280
but those are free for everyone to use.

00:14:15.280 --> 00:14:17.120
So we really have been,

00:14:17.120 --> 00:14:19.620
you know, from a business standpoint,

00:14:19.620 --> 00:14:20.820
that's a bread and butter,

00:14:20.820 --> 00:14:23.160
working with things like Microsoft Excel

00:14:23.160 --> 00:14:24.400
and working with things like Snowflake

00:14:24.400 --> 00:14:27.700
to really embed polished Python runtimes

00:14:27.700 --> 00:14:29.420
inside those computational environments.

00:14:29.420 --> 00:14:31.340
That's something we started doing a few years back.

00:14:31.340 --> 00:14:34.120
This year, I think for the most part,

00:14:34.140 --> 00:14:35.440
people's experiences of Anaconda

00:14:35.440 --> 00:14:37.040
have not changed too much,

00:14:37.040 --> 00:14:38.360
just Conda packaging, whatever.

00:14:38.360 --> 00:14:39.720
But there are a lot of things

00:14:39.720 --> 00:14:41.100
kind of happening behind the scenes, right?

00:14:41.100 --> 00:14:42.020
So we did, for instance,

00:14:42.020 --> 00:14:43.520
the Python Excel stuff,

00:14:43.520 --> 00:14:44.380
which we'll be talking about later,

00:14:44.380 --> 00:14:46.420
is a huge thing that we're very excited about.

00:14:46.420 --> 00:14:48.020
But then we've also been pushing forward

00:14:48.020 --> 00:14:51.020
on our perspectives on AI.

00:14:51.020 --> 00:14:52.500
So we know that a lot of,

00:14:52.500 --> 00:14:53.060
like I said earlier,

00:14:53.060 --> 00:14:54.460
a lot of AI is built on Python.

00:14:54.460 --> 00:14:57.300
A lot of AI relies on having

00:14:57.300 --> 00:14:58.740
the right packages and software

00:14:58.740 --> 00:15:00.440
alongside the models and whatnot.

00:15:00.440 --> 00:15:02.360
And we have a particular belief

00:15:02.360 --> 00:15:04.600
that the models will get smaller

00:15:04.600 --> 00:15:06.160
and more people want to run

00:15:06.160 --> 00:15:07.340
these models locally

00:15:07.340 --> 00:15:09.600
or close to their sensors and their data.

00:15:09.600 --> 00:15:11.200
They're not going to want to upload these

00:15:11.200 --> 00:15:11.760
into the cloud,

00:15:11.760 --> 00:15:13.020
or it's not going to be feasible

00:15:13.020 --> 00:15:14.200
because there's a lot of video streams

00:15:14.200 --> 00:15:15.360
from many different kinds of sensors.

00:15:15.360 --> 00:15:16.980
And they're going to want to have

00:15:16.980 --> 00:15:18.820
a solid software stack

00:15:18.820 --> 00:15:20.660
to run these models

00:15:20.660 --> 00:15:22.120
that they need to update and fine tune.

00:15:22.120 --> 00:15:25.060
And so really looking at ourselves

00:15:25.060 --> 00:15:27.120
as a provider of that kind of,

00:15:27.120 --> 00:15:29.140
that level of the software stack for people,

00:15:29.640 --> 00:15:31.580
that's kind of what we're orienting towards.

00:15:31.580 --> 00:15:33.660
So we released a product called AI Navigator,

00:15:33.660 --> 00:15:36.920
which people can go and use to download models.

00:15:36.920 --> 00:15:39.280
We host the model repository.

00:15:39.280 --> 00:15:41.560
So we have a curated set of quantized models

00:15:41.560 --> 00:15:42.120
that we're hosting.

00:15:42.120 --> 00:15:43.600
And so people who,

00:15:43.600 --> 00:15:43.980
you know,

00:15:43.980 --> 00:15:44.980
one of the things that we got

00:15:44.980 --> 00:15:46.820
from our enterprise customers quite a bit

00:15:46.820 --> 00:15:47.340
was,

00:15:47.340 --> 00:15:47.660
hey,

00:15:47.660 --> 00:15:50.320
we like using your enterprise software package repository.

00:15:50.320 --> 00:15:51.120
We love that it's,

00:15:51.120 --> 00:15:51.400
you know,

00:15:51.400 --> 00:15:53.820
has your stamp of security approval on it.

00:15:53.920 --> 00:15:56.160
But do you have anything like that for models?

00:15:56.160 --> 00:15:57.260
Because we just right now

00:15:57.260 --> 00:15:58.440
download stuff off Hugging Face

00:15:58.440 --> 00:16:00.020
and that's kind of okay.

00:16:00.020 --> 00:16:00.760
But like,

00:16:00.760 --> 00:16:01.460
you know,

00:16:01.460 --> 00:16:02.280
like we don't really know

00:16:02.280 --> 00:16:03.580
quantized this.

00:16:03.580 --> 00:16:05.800
Running arbitrary code off the internet.

00:16:05.800 --> 00:16:06.640
How could it go wrong?

00:16:06.640 --> 00:16:07.720
And,

00:16:07.720 --> 00:16:08.240
you know,

00:16:08.240 --> 00:16:09.420
not to throw shade on any of that

00:16:09.420 --> 00:16:11.340
because an open innovation is great.

00:16:11.340 --> 00:16:12.060
But,

00:16:12.060 --> 00:16:13.200
but people do feel like,

00:16:13.200 --> 00:16:13.520
you know,

00:16:13.520 --> 00:16:16.060
we need something in between there.

00:16:16.060 --> 00:16:17.400
So we have both our AI Navigator,

00:16:17.400 --> 00:16:18.820
which lets you run models locally.

00:16:18.820 --> 00:16:20.020
It's similar to like,

00:16:20.020 --> 00:16:21.280
if you use like a LM Studio

00:16:21.280 --> 00:16:22.040
or something like that,

00:16:22.040 --> 00:16:22.540
it's a nice way

00:16:22.540 --> 00:16:23.760
to sort of get all this stuff running locally.

00:16:24.400 --> 00:16:24.680
But then,

00:16:24.680 --> 00:16:27.000
but then you also get a,

00:16:27.000 --> 00:16:29.320
we have our model repo,

00:16:29.320 --> 00:16:31.080
which is kind of right now

00:16:31.080 --> 00:16:32.560
in an alpha stage,

00:16:32.560 --> 00:16:33.480
alpha beta stage

00:16:33.480 --> 00:16:34.500
for people to,

00:16:34.500 --> 00:16:35.640
if they want to run that on-prem,

00:16:35.640 --> 00:16:37.800
they can then have an on-prem model repo

00:16:37.800 --> 00:16:39.400
and IT can actually have a view

00:16:39.400 --> 00:16:40.740
on what's getting deployed

00:16:40.740 --> 00:16:41.460
in various places.

00:16:41.460 --> 00:16:43.260
So it's a very similar kind of model.

00:16:43.260 --> 00:16:44.060
We're just kind of responding

00:16:44.060 --> 00:16:44.780
to customer needs.

00:16:44.780 --> 00:16:45.960
So there's a couple of products

00:16:45.960 --> 00:16:47.360
that we're building on the AI side.

00:16:47.360 --> 00:16:48.600
And there's a lot of other

00:16:48.600 --> 00:16:49.960
sort of exploratory bits of AI.

00:16:49.960 --> 00:16:52.420
So we've added an AI assistant

00:16:52.420 --> 00:16:54.700
into our hosted cloud notebooks.

00:16:54.700 --> 00:16:56.140
And we've just actually added

00:16:56.140 --> 00:16:57.560
GPU support to cloud notebooks.

00:16:57.560 --> 00:16:58.660
So if you go to amicron.com

00:16:58.660 --> 00:17:00.100
and you go create an account,

00:17:00.100 --> 00:17:01.220
you have actually access

00:17:01.220 --> 00:17:02.100
to a hosted notebook,

00:17:02.100 --> 00:17:03.040
cloud notebook solution

00:17:03.040 --> 00:17:05.600
that also has access to GPUs

00:17:05.600 --> 00:17:06.820
and has a chat assistant.

00:17:06.820 --> 00:17:08.600
But the thing is that that's not,

00:17:08.600 --> 00:17:10.900
that can be a local experience as well.

00:17:10.900 --> 00:17:12.420
So you're running Jupyter locally,

00:17:12.420 --> 00:17:13.800
you have an in-situ,

00:17:13.800 --> 00:17:14.300
you know,

00:17:14.300 --> 00:17:15.380
chat assistant right there.

00:17:15.460 --> 00:17:16.440
And that's been trained.

00:17:16.440 --> 00:17:17.440
That's our own fine tunes

00:17:17.440 --> 00:17:19.060
based on how people use

00:17:19.060 --> 00:17:20.060
Jupyter interactively,

00:17:20.060 --> 00:17:21.280
which is different

00:17:21.280 --> 00:17:22.260
than training Jupyter

00:17:22.260 --> 00:17:24.600
on a corpus of uploaded notebooks.

00:17:24.600 --> 00:17:25.180
Those are actually

00:17:25.180 --> 00:17:26.300
very different kinds of things.

00:17:26.300 --> 00:17:27.760
So those are kind of

00:17:27.760 --> 00:17:28.160
the new things

00:17:28.160 --> 00:17:28.760
we've been working on.

00:17:28.760 --> 00:17:29.580
And then, of course,

00:17:29.580 --> 00:17:29.940
there's updates

00:17:29.940 --> 00:17:30.960
to various kinds of technologies.

00:17:30.960 --> 00:17:31.740
Panel,

00:17:31.740 --> 00:17:32.840
we're doing, you know,

00:17:32.840 --> 00:17:33.620
dashboard building.

00:17:33.620 --> 00:17:35.300
PyScript continues to get better.

00:17:35.300 --> 00:17:37.320
And so, yeah,

00:17:37.320 --> 00:17:37.980
I'm probably forgetting

00:17:37.980 --> 00:17:39.080
a dozen other things.

00:17:39.080 --> 00:17:39.620
But those are kind of

00:17:39.620 --> 00:17:40.540
the highlights

00:17:40.540 --> 00:17:40.920
of the things

00:17:40.920 --> 00:17:41.560
that we've been pushing on.

00:17:42.040 --> 00:17:42.440
Yeah, yeah.

00:17:42.440 --> 00:17:44.240
You guys also did PyScript,

00:17:44.240 --> 00:17:45.700
which we'll talk

00:17:45.700 --> 00:17:46.520
a little bit about later,

00:17:46.520 --> 00:17:46.960
potentially,

00:17:46.960 --> 00:17:48.160
if we have some time for it.

00:17:48.160 --> 00:17:52.060
What are your thoughts

00:17:52.060 --> 00:17:54.920
on this PEP 759

00:17:54.920 --> 00:17:55.940
external wheel hosting?

00:17:55.940 --> 00:17:58.540
You referred to wheels

00:17:58.540 --> 00:18:00.880
as big, heavy, binary things.

00:18:00.880 --> 00:18:01.160
Oh, no.

00:18:01.160 --> 00:18:02.700
So to be very clear,

00:18:02.700 --> 00:18:04.280
wheels can be very lightweight,

00:18:04.280 --> 00:18:06.560
but they can also be very heavy.

00:18:06.560 --> 00:18:07.000
And in fact,

00:18:07.000 --> 00:18:08.740
what a lot of people

00:18:08.740 --> 00:18:10.200
who are not package maintainers,

00:18:10.200 --> 00:18:10.760
you know,

00:18:10.760 --> 00:18:12.020
I think most Python users

00:18:12.020 --> 00:18:12.560
are like,

00:18:12.560 --> 00:18:14.280
the package install part

00:18:14.280 --> 00:18:14.960
of my workflow

00:18:14.960 --> 00:18:16.140
is the least interesting

00:18:16.140 --> 00:18:16.820
and oftentimes

00:18:16.820 --> 00:18:17.880
the most painful part

00:18:17.880 --> 00:18:18.360
of my workflow.

00:18:18.360 --> 00:18:19.840
I really don't care.

00:18:19.840 --> 00:18:21.200
I just want it to work, right?

00:18:21.200 --> 00:18:22.480
And unfortunately,

00:18:22.480 --> 00:18:24.280
you know,

00:18:24.280 --> 00:18:25.600
that doesn't always go well

00:18:25.600 --> 00:18:26.500
because you end up

00:18:26.500 --> 00:18:27.600
having a drag in complexity.

00:18:27.600 --> 00:18:29.840
And so we're going to get

00:18:29.840 --> 00:18:30.880
into some of the complexity here.

00:18:30.880 --> 00:18:32.120
But for those who are interested,

00:18:32.120 --> 00:18:33.500
I did give a talk at PyBay

00:18:33.500 --> 00:18:35.420
just a month ago, I think.

00:18:35.420 --> 00:18:37.240
And it's up on YouTube now.

00:18:37.240 --> 00:18:37.520
It's called

00:18:37.520 --> 00:18:38.240
The Five Demons

00:18:38.240 --> 00:18:39.100
of Python Packaging.

00:18:39.100 --> 00:18:41.260
And I try to lay out for people

00:18:41.260 --> 00:18:42.600
why it is that the,

00:18:42.600 --> 00:18:45.120
why is Python so screwed up

00:18:45.120 --> 00:18:46.520
in terms of the Python

00:18:46.520 --> 00:18:47.220
packaging environment?

00:18:47.220 --> 00:18:49.120
Can we just do what Cargo does?

00:18:49.120 --> 00:18:51.000
Or can we just do what NPM does?

00:18:51.000 --> 00:18:52.820
Or why doesn't Go have this problem?

00:18:52.820 --> 00:18:53.400
Or what, you know,

00:18:53.400 --> 00:18:54.080
like yada yada.

00:18:54.260 --> 00:18:57.300
So I think there's a,

00:18:57.300 --> 00:19:01.160
I don't want to argue with people,

00:19:01.160 --> 00:19:02.780
but I want to share my context, right?

00:19:02.780 --> 00:19:03.300
In that context.

00:19:03.300 --> 00:19:04.040
Oh, this is it, right.

00:19:04.040 --> 00:19:06.260
I'll put it in the show notes

00:19:06.260 --> 00:19:06.980
for people, yeah.

00:19:06.980 --> 00:19:07.260
Great.

00:19:07.260 --> 00:19:09.040
Yeah, my context is that there are,

00:19:09.040 --> 00:19:10.020
if you go to the very beginning

00:19:10.020 --> 00:19:10.660
of the slide,

00:19:10.660 --> 00:19:11.640
I have a picture

00:19:11.640 --> 00:19:13.600
from Gödel Escher-Bach, right?

00:19:13.600 --> 00:19:14.560
The cover of the book,

00:19:14.560 --> 00:19:16.040
Gödel Escher-Bach.

00:19:16.260 --> 00:19:17.960
And it shows that this block

00:19:17.960 --> 00:19:18.440
in the middle

00:19:18.440 --> 00:19:20.680
looks like the letter G, E, or B,

00:19:20.680 --> 00:19:21.980
depending on which direction

00:19:21.980 --> 00:19:22.940
you're shining the light.

00:19:22.940 --> 00:19:23.860
Many people may be familiar

00:19:23.860 --> 00:19:24.860
with this book and its cover.

00:19:24.860 --> 00:19:26.400
And that's how I think

00:19:26.400 --> 00:19:27.160
of Python packaging.

00:19:27.160 --> 00:19:28.700
I have the great misfortune

00:19:28.700 --> 00:19:29.440
of having wandered

00:19:29.440 --> 00:19:30.560
all five or six dimensions

00:19:30.560 --> 00:19:31.120
in my career.

00:19:31.120 --> 00:19:32.600
But most people experience

00:19:32.600 --> 00:19:33.320
only two or three

00:19:33.320 --> 00:19:33.940
of those dimensions.

00:19:33.940 --> 00:19:35.440
So for their perspective,

00:19:35.440 --> 00:19:36.640
it could just be this simple.

00:19:36.640 --> 00:19:37.820
Or why don't I just do that?

00:19:38.040 --> 00:19:39.720
I just homebrew my dependencies

00:19:39.720 --> 00:19:41.400
or I just use RPM

00:19:41.400 --> 00:19:42.560
to install these base libraries

00:19:42.560 --> 00:19:43.320
and then I pip install

00:19:43.320 --> 00:19:44.240
these other things in a Docker

00:19:44.240 --> 00:19:45.900
and I'm done, right?

00:19:45.900 --> 00:19:47.440
But what we have to do

00:19:47.440 --> 00:19:48.160
as maintainers

00:19:48.160 --> 00:19:49.400
and also as people

00:19:49.400 --> 00:19:50.120
who kind of cater

00:19:50.120 --> 00:19:52.140
to a broad tens of millions

00:19:52.140 --> 00:19:53.540
large user land

00:19:53.540 --> 00:19:54.960
is we have to account

00:19:54.960 --> 00:19:56.220
for all six of those dimensions.

00:19:56.220 --> 00:19:57.500
And sometimes they're not

00:19:57.500 --> 00:19:58.760
obvious to people, right?

00:19:58.760 --> 00:20:01.180
So in the case of wheels,

00:20:01.180 --> 00:20:02.080
come back to the discussion

00:20:02.080 --> 00:20:02.500
about wheels

00:20:02.500 --> 00:20:04.520
and Barry's proposal there.

00:20:04.520 --> 00:20:07.280
The issue that many maintainers

00:20:07.280 --> 00:20:07.960
have with wheels

00:20:07.960 --> 00:20:09.100
especially if they're maintainers

00:20:09.100 --> 00:20:11.840
of libraries

00:20:11.840 --> 00:20:13.140
that have a lot of C dependencies

00:20:13.140 --> 00:20:15.960
is that you're stuck

00:20:15.960 --> 00:20:16.660
between a devil

00:20:16.660 --> 00:20:17.220
and a hard place

00:20:17.220 --> 00:20:18.280
or a rock and a hard place.

00:20:18.280 --> 00:20:19.720
And so you have to decide,

00:20:19.720 --> 00:20:21.040
do I bundle

00:20:21.040 --> 00:20:22.260
all these dependencies in?

00:20:22.260 --> 00:20:22.960
In which case,

00:20:22.960 --> 00:20:26.480
I own the compatibility issues

00:20:26.480 --> 00:20:28.460
and I own the security issues

00:20:28.460 --> 00:20:31.520
that come with having bundled

00:20:31.520 --> 00:20:32.640
in a bunch of C libraries

00:20:32.640 --> 00:20:33.640
or C++ libraries.

00:20:33.640 --> 00:20:35.420
If I don't bundle them in,

00:20:35.420 --> 00:20:37.100
then users are kind of stuck

00:20:37.100 --> 00:20:37.880
trying to install this

00:20:37.880 --> 00:20:38.680
thing, right?

00:20:38.680 --> 00:20:40.460
And so what we find

00:20:40.460 --> 00:20:43.420
is that for some libraries,

00:20:43.420 --> 00:20:44.080
it's okay.

00:20:44.080 --> 00:20:45.400
For other libraries,

00:20:45.400 --> 00:20:46.340
it's very difficult.

00:20:46.340 --> 00:20:47.740
And the Python ecosystem,

00:20:47.740 --> 00:20:49.260
I think,

00:20:49.260 --> 00:20:50.280
ultimately still does not

00:20:50.280 --> 00:20:51.060
have a great solution

00:20:51.060 --> 00:20:51.520
to this.

00:20:51.520 --> 00:20:52.400
And wheels,

00:20:52.400 --> 00:20:53.940
as you know,

00:20:53.940 --> 00:20:54.480
the way that they,

00:20:54.480 --> 00:20:56.200
the PyPA

00:20:56.200 --> 00:20:58.260
and the pip maintainers

00:20:58.260 --> 00:20:58.840
and other people

00:20:58.840 --> 00:20:59.260
we've talked to

00:20:59.260 --> 00:20:59.800
over the years,

00:20:59.800 --> 00:21:01.060
they really want to think

00:21:01.060 --> 00:21:02.320
of the packaging problem

00:21:02.320 --> 00:21:03.740
as a Python packaging problem.

00:21:04.140 --> 00:21:05.080
and with Conda,

00:21:05.080 --> 00:21:06.120
because it was built,

00:21:06.120 --> 00:21:07.480
it was purpose built

00:21:07.480 --> 00:21:09.360
for the scientific Python ecosystem,

00:21:09.360 --> 00:21:11.140
we knew from the outset

00:21:11.140 --> 00:21:12.100
that our problem

00:21:12.100 --> 00:21:12.980
was bigger than Python.

00:21:12.980 --> 00:21:13.760
In fact,

00:21:13.760 --> 00:21:14.580
most of our problem

00:21:14.580 --> 00:21:15.680
was packaging stuff

00:21:15.680 --> 00:21:16.540
that wasn't Python.

00:21:16.540 --> 00:21:17.560
The Python bits

00:21:17.560 --> 00:21:18.440
were trivial almost,

00:21:18.440 --> 00:21:18.820
right?

00:21:19.060 --> 00:21:19.860
but it's the,

00:21:19.860 --> 00:21:21.640
what version of Clang,

00:21:21.640 --> 00:21:23.380
what C++ ABI do you use?

00:21:23.380 --> 00:21:25.000
What version of this

00:21:25.000 --> 00:21:25.460
do you link?

00:21:25.460 --> 00:21:26.500
What flags do you turn on

00:21:26.500 --> 00:21:27.760
when you invoke GCC here?

00:21:27.760 --> 00:21:28.520
When you go

00:21:28.520 --> 00:21:29.640
and you compile something

00:21:29.640 --> 00:21:30.980
and all of that,

00:21:30.980 --> 00:21:31.980
not only are you including

00:21:31.980 --> 00:21:32.900
all the C libraries,

00:21:32.900 --> 00:21:34.600
you're also inheriting

00:21:34.600 --> 00:21:35.820
all of the design,

00:21:35.820 --> 00:21:36.340
sorry,

00:21:36.340 --> 00:21:39.120
the configuration options

00:21:39.120 --> 00:21:40.420
of the build tool chain

00:21:40.420 --> 00:21:41.580
at compile time.

00:21:41.580 --> 00:21:43.840
It's an enormously complex thing

00:21:43.840 --> 00:21:44.940
that ends up getting wrapped up

00:21:44.940 --> 00:21:45.700
into a single wheel,

00:21:45.700 --> 00:21:46.360
right?

00:21:46.800 --> 00:21:47.960
So with Conda,

00:21:47.960 --> 00:21:48.880
these are represented

00:21:48.880 --> 00:21:49.820
as explicit dependencies

00:21:49.820 --> 00:21:50.800
with feature flags

00:21:50.800 --> 00:21:51.580
and you can then sort of

00:21:51.580 --> 00:21:52.820
do this package

00:21:52.820 --> 00:21:54.120
sort of dependency solver,

00:21:54.120 --> 00:21:55.300
which of course is,

00:21:55.300 --> 00:21:55.860
you know,

00:21:55.860 --> 00:21:56.480
good and bad.

00:21:56.480 --> 00:21:56.880
If it's,

00:21:56.880 --> 00:21:57.280
you know,

00:21:57.280 --> 00:21:58.420
if the ecosystem gets too big,

00:21:58.420 --> 00:21:59.460
the solve takes too long,

00:21:59.460 --> 00:22:01.080
but then if you don't do that solve,

00:22:01.080 --> 00:22:01.700
then you just run

00:22:01.700 --> 00:22:02.580
into stochastic

00:22:02.580 --> 00:22:04.180
and irreproducible installations.

00:22:04.180 --> 00:22:05.360
So what do you do,

00:22:05.360 --> 00:22:05.580
right?

00:22:05.580 --> 00:22:06.960
So this proposal,

00:22:06.960 --> 00:22:08.420
but specifically about this proposal

00:22:08.420 --> 00:22:09.680
that Barry's put out there,

00:22:09.680 --> 00:22:10.640
this is,

00:22:10.640 --> 00:22:11.140
I think,

00:22:11.140 --> 00:22:12.480
meant to address,

00:22:12.480 --> 00:22:14.440
and he works now at NVIDIA

00:22:14.440 --> 00:22:16.420
and people who've had to deal

00:22:16.420 --> 00:22:17.600
with GPU packages

00:22:17.600 --> 00:22:19.340
know that the CUDA libraries

00:22:19.340 --> 00:22:20.180
can be quite large.

00:22:20.180 --> 00:22:21.620
They get pretty big

00:22:21.620 --> 00:22:23.020
and they are somewhat of a tax

00:22:23.020 --> 00:22:24.080
on the hosting infrastructure,

00:22:24.080 --> 00:22:26.460
on the CDN there for PyPI.

00:22:26.460 --> 00:22:29.920
And so the limit that PyPI has imposed

00:22:29.920 --> 00:22:30.720
makes it difficult

00:22:30.720 --> 00:22:32.380
for them to kind of have

00:22:32.380 --> 00:22:33.580
increasingly larger packages

00:22:33.580 --> 00:22:35.460
and all these like nightly bills

00:22:35.460 --> 00:22:36.260
that they want to upload.

00:22:36.260 --> 00:22:38.240
So this proposal is,

00:22:38.240 --> 00:22:39.220
can we split this out?

00:22:39.220 --> 00:22:40.640
These RIM files.

00:22:40.640 --> 00:22:41.800
And so we put a placeholder

00:22:41.800 --> 00:22:42.580
in place on PyPI

00:22:42.580 --> 00:22:44.060
and then put the actual package

00:22:44.060 --> 00:22:44.600
over here,

00:22:45.100 --> 00:22:45.360
right?

00:22:45.360 --> 00:22:46.040
Right.

00:22:46.040 --> 00:22:47.420
If NVIDIA wants to ship

00:22:47.420 --> 00:22:48.920
a 400 meg

00:22:48.920 --> 00:22:51.200
pip installable package

00:22:51.200 --> 00:22:52.100
and let them host it.

00:22:52.100 --> 00:22:53.400
Right.

00:22:53.400 --> 00:22:54.000
Something like that,

00:22:54.000 --> 00:22:54.220
right?

00:22:54.220 --> 00:22:54.920
That's right.

00:22:54.920 --> 00:22:56.560
And so this gets to

00:22:56.560 --> 00:22:57.700
one of the demons

00:22:57.700 --> 00:22:58.200
I mentioned,

00:22:58.200 --> 00:22:59.340
which is that

00:22:59.340 --> 00:23:00.840
a repository

00:23:00.840 --> 00:23:01.900
is not the same

00:23:01.900 --> 00:23:02.620
as a distribution

00:23:02.620 --> 00:23:03.460
and it's not the same

00:23:03.460 --> 00:23:04.340
as an FTP site

00:23:04.340 --> 00:23:05.040
or a Dropbox.

00:23:05.040 --> 00:23:05.960
These are actually

00:23:05.960 --> 00:23:06.840
very different things.

00:23:06.840 --> 00:23:09.320
And I have not

00:23:09.320 --> 00:23:10.060
actually commented

00:23:10.060 --> 00:23:12.220
officially on this

00:23:12.220 --> 00:23:13.120
on the discourse at all.

00:23:13.220 --> 00:23:14.020
I've had some private

00:23:14.020 --> 00:23:14.800
conversations with people,

00:23:14.800 --> 00:23:16.220
but I might as well,

00:23:16.220 --> 00:23:16.980
since you asked,

00:23:16.980 --> 00:23:19.100
my thought is that

00:23:19.100 --> 00:23:20.520
this is not a bad idea,

00:23:20.520 --> 00:23:22.140
but the challenge is

00:23:22.140 --> 00:23:23.440
we are going to

00:23:23.440 --> 00:23:24.820
go down a path

00:23:24.820 --> 00:23:25.640
essentially

00:23:25.640 --> 00:23:27.980
of having to solve

00:23:27.980 --> 00:23:28.660
the cap theorem.

00:23:28.660 --> 00:23:29.420
Okay.

00:23:29.420 --> 00:23:30.340
What I mean by that is

00:23:30.340 --> 00:23:31.780
if you view PyPI,

00:23:31.780 --> 00:23:33.020
like what is PyPI?

00:23:33.020 --> 00:23:34.140
Is it a Dropbox

00:23:34.140 --> 00:23:34.920
where anyone could just

00:23:34.920 --> 00:23:35.540
upload whatever?

00:23:36.340 --> 00:23:36.780
okay,

00:23:36.780 --> 00:23:38.320
but the problem there

00:23:38.320 --> 00:23:38.940
is if someone

00:23:38.940 --> 00:23:40.620
installs something today

00:23:40.620 --> 00:23:41.660
and they try to install

00:23:41.660 --> 00:23:42.260
again tomorrow

00:23:42.260 --> 00:23:43.160
or two weeks from now,

00:23:43.160 --> 00:23:44.420
they're going to generally

00:23:44.420 --> 00:23:45.360
want the same kinds

00:23:45.360 --> 00:23:45.920
of things.

00:23:45.920 --> 00:23:47.500
And if it's just

00:23:47.500 --> 00:23:48.220
a Dropbox,

00:23:48.220 --> 00:23:49.500
then no one is responsible

00:23:49.500 --> 00:23:50.180
for providing

00:23:50.180 --> 00:23:51.320
a stable snapshot

00:23:51.320 --> 00:23:53.280
of what points

00:23:53.280 --> 00:23:53.660
to what

00:23:53.660 --> 00:23:54.940
and what is what

00:23:54.940 --> 00:23:55.340
even.

00:23:55.340 --> 00:23:57.060
Because in the space

00:23:57.060 --> 00:23:58.080
of even an hour

00:23:58.080 --> 00:23:58.660
or two

00:23:58.660 --> 00:23:59.140
on something

00:23:59.140 --> 00:23:59.940
as large as PyPI,

00:23:59.940 --> 00:24:01.560
you can have updates.

00:24:01.560 --> 00:24:02.320
You can have updates

00:24:02.320 --> 00:24:02.740
of versions

00:24:02.740 --> 00:24:03.820
with different build strings.

00:24:04.180 --> 00:24:05.460
people can yank a file

00:24:05.460 --> 00:24:06.080
because oh my god,

00:24:06.080 --> 00:24:07.900
I bought the build on that

00:24:07.900 --> 00:24:08.920
and so on and so forth.

00:24:08.920 --> 00:24:10.120
So if you view it

00:24:10.120 --> 00:24:11.060
just as a Dropbox,

00:24:11.060 --> 00:24:11.640
that's okay.

00:24:11.640 --> 00:24:12.720
But then all the work

00:24:12.720 --> 00:24:13.540
of consistency

00:24:13.540 --> 00:24:14.660
and reproducibility

00:24:14.660 --> 00:24:15.720
gets foisted

00:24:15.720 --> 00:24:17.960
onto the install tools,

00:24:17.960 --> 00:24:18.800
the client side tools.

00:24:18.800 --> 00:24:19.800
Whether it's UV,

00:24:19.800 --> 00:24:20.920
whether it's pip,

00:24:20.920 --> 00:24:21.780
whether it's Poetry,

00:24:21.780 --> 00:24:22.280
PyM,

00:24:22.280 --> 00:24:23.200
you name it,

00:24:23.200 --> 00:24:23.960
Hatch, PDM,

00:24:23.960 --> 00:24:24.580
Poetry,

00:24:24.580 --> 00:24:26.000
all these wonderful tools.

00:24:26.000 --> 00:24:26.640
Anaconda too,

00:24:26.640 --> 00:24:27.520
I should put that out there, right?

00:24:27.520 --> 00:24:28.520
Everyone is trying

00:24:28.520 --> 00:24:29.560
to solve this problem

00:24:29.560 --> 00:24:30.560
and the question is,

00:24:30.560 --> 00:24:32.160
is the repository host

00:24:32.160 --> 00:24:33.040
going to solve

00:24:33.040 --> 00:24:34.220
the atomic

00:24:34.220 --> 00:24:35.600
sort of state view

00:24:35.600 --> 00:24:36.660
or is the client

00:24:36.660 --> 00:24:37.100
going to have to

00:24:37.100 --> 00:24:38.020
piece it together somehow?

00:24:38.020 --> 00:24:39.620
And then,

00:24:39.620 --> 00:24:40.580
the reason I mentioned

00:24:40.580 --> 00:24:41.320
the cap theorem is

00:24:41.320 --> 00:24:42.000
if you say,

00:24:42.000 --> 00:24:42.280
okay,

00:24:42.280 --> 00:24:43.000
we should pretend

00:24:43.000 --> 00:24:43.560
that it's somewhat

00:24:43.560 --> 00:24:45.160
of a stable repository,

00:24:45.160 --> 00:24:46.780
not just a Dropbox,

00:24:46.780 --> 00:24:48.100
but as a repository,

00:24:48.100 --> 00:24:49.100
that means that

00:24:49.100 --> 00:24:49.840
there's a snapshot

00:24:49.840 --> 00:24:51.460
of things

00:24:51.460 --> 00:24:52.260
at a state in time,

00:24:52.260 --> 00:24:52.720
the metadata.

00:24:52.720 --> 00:24:54.120
Well, okay,

00:24:54.120 --> 00:24:55.160
but if you allow

00:24:55.160 --> 00:24:56.160
for some of these packages

00:24:56.160 --> 00:24:57.480
to be hosted over here,

00:24:57.480 --> 00:24:58.820
now you have

00:24:58.820 --> 00:24:59.680
a distributed database.

00:24:59.680 --> 00:25:00.440
You have a distributed

00:25:00.440 --> 00:25:01.120
object database

00:25:01.120 --> 00:25:03.300
massively distributed.

00:25:03.300 --> 00:25:04.400
Massively distributed.

00:25:04.400 --> 00:25:06.360
And NVIDIA,

00:25:06.360 --> 00:25:06.760
obviously,

00:25:06.760 --> 00:25:07.820
as a trillion-dollar company,

00:25:07.820 --> 00:25:09.120
can keep up a CDN,

00:25:09.120 --> 00:25:09.540
okay?

00:25:09.540 --> 00:25:11.220
But they cannot avoid

00:25:11.220 --> 00:25:12.000
net splits.

00:25:12.000 --> 00:25:12.920
They cannot avoid

00:25:12.920 --> 00:25:14.320
a backhoe in Reston

00:25:14.320 --> 00:25:15.520
nuking a fiber line

00:25:15.520 --> 00:25:16.220
somewhere, right?

00:25:16.220 --> 00:25:17.300
You cannot avoid

00:25:17.300 --> 00:25:18.040
the kinds of things

00:25:18.040 --> 00:25:18.480
that happen

00:25:18.480 --> 00:25:19.060
that cause

00:25:19.060 --> 00:25:20.340
a distributed network

00:25:20.340 --> 00:25:22.400
database

00:25:22.400 --> 00:25:23.780
to suffer

00:25:23.780 --> 00:25:24.960
consistency problems.

00:25:24.960 --> 00:25:26.120
So now someone

00:25:26.120 --> 00:25:27.500
building a Docker,

00:25:27.960 --> 00:25:28.400
and when you're

00:25:28.400 --> 00:25:29.080
looking at something

00:25:29.080 --> 00:25:29.780
as important

00:25:29.780 --> 00:25:31.000
as the CUDA-oriented

00:25:31.000 --> 00:25:31.440
libraries,

00:25:31.440 --> 00:25:32.380
the RAPIDS libraries,

00:25:32.380 --> 00:25:33.800
these really important

00:25:33.800 --> 00:25:35.200
foundational GPU libraries,

00:25:35.200 --> 00:25:36.680
people are pulling these

00:25:36.680 --> 00:25:37.420
to the tune

00:25:37.420 --> 00:25:37.920
of thousands

00:25:37.920 --> 00:25:38.360
and thousands

00:25:38.360 --> 00:25:38.960
per second.

00:25:38.960 --> 00:25:40.340
So you have got

00:25:40.340 --> 00:25:40.860
to make sure

00:25:40.860 --> 00:25:41.280
you're consistent

00:25:41.280 --> 00:25:41.700
all the time.

00:25:41.700 --> 00:25:41.960
Otherwise,

00:25:41.960 --> 00:25:42.860
someone's production

00:25:42.860 --> 00:25:43.540
Docker build

00:25:43.540 --> 00:25:44.560
falls back

00:25:44.560 --> 00:25:45.340
on an old version

00:25:45.340 --> 00:25:45.940
because they couldn't

00:25:45.940 --> 00:25:47.100
get the most recent one.

00:25:47.100 --> 00:25:48.860
Or in the best case,

00:25:48.860 --> 00:25:49.360
it times out

00:25:49.360 --> 00:25:50.140
and complains loudly.

00:25:50.140 --> 00:25:51.020
The worst case,

00:25:51.020 --> 00:25:51.820
it fails silently

00:25:51.820 --> 00:25:53.020
and falls back.

00:25:53.020 --> 00:25:54.200
And whatever client-side

00:25:54.200 --> 00:25:54.840
tool they're using

00:25:54.840 --> 00:25:55.520
then says,

00:25:55.520 --> 00:25:56.380
well, I can't get that,

00:25:56.380 --> 00:25:56.860
so I'm going to solve

00:25:56.860 --> 00:25:57.140
this way,

00:25:57.140 --> 00:25:57.480
I'm going to install

00:25:57.480 --> 00:25:57.980
this other thing

00:25:57.980 --> 00:25:58.400
over here.

00:25:58.400 --> 00:25:59.620
They pick up an old version

00:25:59.620 --> 00:26:00.800
and now you have

00:26:00.800 --> 00:26:01.540
whatever reason

00:26:01.540 --> 00:26:02.320
your model build

00:26:02.320 --> 00:26:03.700
deployment doesn't work.

00:26:03.700 --> 00:26:05.360
Maybe you picked up

00:26:05.360 --> 00:26:06.640
a regression equivalent

00:26:06.640 --> 00:26:07.220
of a bug

00:26:07.220 --> 00:26:08.360
that you know

00:26:08.360 --> 00:26:09.240
is fixed in the new one.

00:26:09.240 --> 00:26:10.180
You asked for the new one

00:26:10.180 --> 00:26:10.780
but you didn't get

00:26:10.780 --> 00:26:11.200
the new one.

00:26:11.200 --> 00:26:12.500
You didn't get the new one.

00:26:12.500 --> 00:26:13.920
And so the point is

00:26:13.920 --> 00:26:14.840
the reason I cite

00:26:14.840 --> 00:26:15.400
the cap theorem

00:26:15.400 --> 00:26:16.800
is at some point

00:26:16.800 --> 00:26:18.540
a package hosting site

00:26:18.540 --> 00:26:19.060
like this

00:26:19.060 --> 00:26:19.700
has to decide

00:26:19.700 --> 00:26:20.880
is it just a Dropbox?

00:26:20.880 --> 00:26:22.240
Is it a repository?

00:26:22.240 --> 00:26:23.200
Right?

00:26:23.200 --> 00:26:24.380
And if it's the latter,

00:26:24.380 --> 00:26:25.460
then it has to offer

00:26:25.460 --> 00:26:27.020
an atomic and consistent

00:26:27.020 --> 00:26:29.220
verifiable view

00:26:29.220 --> 00:26:31.140
of the metadata.

00:26:31.140 --> 00:26:32.740
That's with Conda.

00:26:32.740 --> 00:26:33.540
We have a thing called

00:26:33.540 --> 00:26:34.800
repodata.json

00:26:34.800 --> 00:26:36.800
and it is a big fat file

00:26:36.800 --> 00:26:38.160
and it is basically

00:26:38.160 --> 00:26:39.620
the snapshot of the repository

00:26:39.620 --> 00:26:40.860
and it is transactional.

00:26:40.860 --> 00:26:42.420
So you get the whole thing

00:26:42.420 --> 00:26:43.680
and then you can do the solve

00:26:43.680 --> 00:26:43.980
and say,

00:26:43.980 --> 00:26:44.920
I want these pieces

00:26:44.920 --> 00:26:46.200
and then you go get those pieces.

00:26:46.200 --> 00:26:48.160
So from a design standpoint,

00:26:48.160 --> 00:26:48.860
architect standpoint,

00:26:48.860 --> 00:26:50.580
it's not that complicated,

00:26:50.580 --> 00:26:51.860
but it is a different,

00:26:51.860 --> 00:26:53.140
it's a design difference.

00:26:53.540 --> 00:26:55.160
Then when you think about

00:26:55.160 --> 00:26:56.380
PIP installing off PyPI,

00:26:56.380 --> 00:26:57.940
it is eager

00:26:57.940 --> 00:26:59.180
and opportunistic,

00:26:59.180 --> 00:26:59.780
let's say, right?

00:26:59.780 --> 00:27:00.280
So it goes,

00:27:00.280 --> 00:27:01.120
tries to install a thing,

00:27:01.120 --> 00:27:02.040
it grabs that,

00:27:02.040 --> 00:27:02.800
looks through and says,

00:27:02.800 --> 00:27:03.580
oh, I need these things.

00:27:03.580 --> 00:27:04.420
It goes and grabs those things.

00:27:04.420 --> 00:27:05.740
And so over the course

00:27:05.740 --> 00:27:07.620
of a multi-second long

00:27:07.620 --> 00:27:08.680
or maybe, you know,

00:27:08.680 --> 00:27:09.700
multi-minute long install,

00:27:09.700 --> 00:27:11.040
you don't actually get

00:27:11.040 --> 00:27:11.940
a consistent view

00:27:11.940 --> 00:27:13.160
of the repository.

00:27:13.160 --> 00:27:16.720
And so with this,

00:27:16.720 --> 00:27:18.080
this now says,

00:27:18.080 --> 00:27:19.480
really stresses the question.

00:27:19.480 --> 00:27:20.900
I think what the RIM proposal does,

00:27:21.200 --> 00:27:22.860
it really forces the question of,

00:27:22.860 --> 00:27:25.660
is PyPI a repository

00:27:25.660 --> 00:27:28.300
or is it a hosting site?

00:27:28.300 --> 00:27:29.360
Like Sunsite thought,

00:27:29.360 --> 00:27:29.620
yeah,

00:27:29.620 --> 00:27:31.220
fdp at sunset.edu back in the day.

00:27:31.220 --> 00:27:32.540
And you just go grab whatever

00:27:32.540 --> 00:27:33.500
and good luck

00:27:33.500 --> 00:27:34.700
and all that complexity

00:27:34.700 --> 00:27:35.340
of consistency

00:27:35.340 --> 00:27:36.820
is then the responsibility

00:27:36.820 --> 00:27:38.200
of the client side tools

00:27:38.200 --> 00:27:38.720
to manage.

00:27:38.720 --> 00:27:40.220
That is the design decision

00:27:40.220 --> 00:27:41.160
you can make, right?

00:27:41.160 --> 00:27:42.980
Yeah,

00:27:42.980 --> 00:27:43.980
I hadn't even thought about it

00:27:43.980 --> 00:27:46.160
from a reproducibility science

00:27:46.160 --> 00:27:47.140
or even just

00:27:47.140 --> 00:27:49.340
old applications perspective.

00:27:49.340 --> 00:27:50.140
That's pretty interesting

00:27:50.140 --> 00:27:50.720
to think about.

00:27:50.720 --> 00:27:52.840
If I read this, Pep,

00:27:52.840 --> 00:27:53.920
I don't recall

00:27:53.920 --> 00:27:54.980
if it talked about

00:27:54.980 --> 00:27:57.380
a backup

00:27:57.380 --> 00:27:58.460
that would allow

00:27:58.460 --> 00:28:00.240
the PyPA

00:28:00.240 --> 00:28:00.720
to create

00:28:00.720 --> 00:28:01.680
some kind of snapshot

00:28:01.680 --> 00:28:02.720
that says,

00:28:02.720 --> 00:28:04.200
even if those mirrors

00:28:04.200 --> 00:28:04.740
went away,

00:28:04.740 --> 00:28:06.660
this is the reality

00:28:06.660 --> 00:28:08.120
of things, right?

00:28:08.120 --> 00:28:09.220
I mean,

00:28:09.220 --> 00:28:10.560
it's one thing to say,

00:28:10.560 --> 00:28:10.840
well,

00:28:10.840 --> 00:28:11.780
let's let NVIDIA

00:28:11.780 --> 00:28:13.700
handle the 100 megabyte

00:28:13.700 --> 00:28:14.780
download request

00:28:14.780 --> 00:28:15.960
a thousand times a second.

00:28:15.960 --> 00:28:18.160
But we got a copy of it

00:28:18.160 --> 00:28:19.200
and if that fails,

00:28:19.200 --> 00:28:20.840
we can switch over

00:28:20.840 --> 00:28:22.480
to our version

00:28:22.480 --> 00:28:24.280
versus let's let them

00:28:24.280 --> 00:28:25.000
hold that part

00:28:25.000 --> 00:28:25.940
and if it fails,

00:28:25.940 --> 00:28:26.900
it's just gone

00:28:26.900 --> 00:28:27.760
and there's nothing

00:28:27.760 --> 00:28:29.020
but an empty rim.

00:28:29.020 --> 00:28:29.660
There's no wheel.

00:28:29.660 --> 00:28:30.560
Right.

00:28:30.560 --> 00:28:31.880
But consider this.

00:28:31.880 --> 00:28:34.420
If I discover

00:28:34.420 --> 00:28:35.060
a zero day

00:28:35.060 --> 00:28:35.960
in one of those things,

00:28:35.960 --> 00:28:36.660
and by the way,

00:28:36.660 --> 00:28:37.660
these things are

00:28:37.660 --> 00:28:38.480
low-level libraries

00:28:38.480 --> 00:28:40.940
that touch kernel space things

00:28:40.940 --> 00:28:41.740
and things in the driver

00:28:41.740 --> 00:28:42.560
and they touch memory

00:28:42.560 --> 00:28:43.440
and there's all these things

00:28:43.440 --> 00:28:47.040
and there's like,

00:28:47.040 --> 00:28:48.100
there are real implications

00:28:48.100 --> 00:28:48.740
on this kind of stuff.

00:28:48.740 --> 00:28:50.000
So let's say there's a zero day

00:28:50.000 --> 00:28:51.420
where I have some hack

00:28:51.420 --> 00:28:52.260
and NVIDIA,

00:28:52.260 --> 00:28:53.420
because they were notified of it,

00:28:53.420 --> 00:28:54.120
they patched it.

00:28:54.120 --> 00:28:55.800
But you have a fallback

00:28:55.800 --> 00:28:57.320
and if I somehow managed

00:28:57.320 --> 00:28:58.740
to block your ability

00:28:58.740 --> 00:28:59.300
to resolve

00:28:59.300 --> 00:29:00.540
or to access that,

00:29:00.540 --> 00:29:01.520
now you're still

00:29:01.520 --> 00:29:02.560
picking up the old stuff

00:29:02.560 --> 00:29:03.460
and you're building those

00:29:03.460 --> 00:29:05.120
into your Docker, right?

00:29:05.120 --> 00:29:06.580
So it's not just availability.

00:29:06.580 --> 00:29:07.360
It's,

00:29:07.360 --> 00:29:08.320
this is why it's not just,

00:29:08.320 --> 00:29:08.680
you know,

00:29:08.680 --> 00:29:09.500
it's not just availability

00:29:09.500 --> 00:29:10.040
and fallback.

00:29:10.360 --> 00:29:11.180
It is consistency

00:29:11.180 --> 00:29:12.920
so that when you push an update,

00:29:12.920 --> 00:29:14.320
it forces an update, right?

00:29:14.320 --> 00:29:14.840
Right.

00:29:14.840 --> 00:29:15.460
So when I,

00:29:15.460 --> 00:29:16.180
when I said I thought

00:29:16.180 --> 00:29:16.760
there'd be some kind

00:29:16.760 --> 00:29:17.680
of backup fallback,

00:29:17.680 --> 00:29:18.760
in my mind,

00:29:18.760 --> 00:29:19.540
I don't even know

00:29:19.540 --> 00:29:20.440
that this isn't the pepper

00:29:20.440 --> 00:29:22.120
that it's addressed at all.

00:29:22.120 --> 00:29:22.500
It may be,

00:29:22.500 --> 00:29:23.540
I don't recall that it is,

00:29:23.540 --> 00:29:26.100
is before PyPI allows it

00:29:26.100 --> 00:29:26.780
to be listed

00:29:26.780 --> 00:29:27.740
as a new version,

00:29:27.740 --> 00:29:29.500
they've downloaded

00:29:29.500 --> 00:29:30.260
a local copy

00:29:30.260 --> 00:29:31.840
and they've got the new one.

00:29:31.840 --> 00:29:32.940
They're not going

00:29:32.940 --> 00:29:33.600
to serve it to you,

00:29:33.600 --> 00:29:34.340
but they have it.

00:29:34.340 --> 00:29:34.840
You know what I mean?

00:29:35.180 --> 00:29:35.420
Yeah.

00:29:35.420 --> 00:29:36.160
We'll see.

00:29:36.160 --> 00:29:36.840
It's going to be interesting

00:29:36.840 --> 00:29:37.960
to see if this gets accepted

00:29:37.960 --> 00:29:39.780
and what implications there are.

00:29:39.780 --> 00:29:41.120
But on the other hand,

00:29:41.120 --> 00:29:41.840
the flip side is,

00:29:41.840 --> 00:29:43.140
it's also scary

00:29:43.140 --> 00:29:46.860
that pip and PyPI

00:29:46.860 --> 00:29:49.540
have over $100,000

00:29:49.540 --> 00:29:52.620
of donated bandwidth.

00:29:52.620 --> 00:29:53.400
And if that donation

00:29:53.400 --> 00:29:54.180
ever stops,

00:29:54.180 --> 00:29:55.380
all of a sudden,

00:29:55.380 --> 00:29:56.000
out of the blue,

00:29:56.000 --> 00:29:58.440
we'd also be in a world

00:29:58.440 --> 00:29:58.960
of hurt, right?

00:29:58.960 --> 00:29:59.960
And so if we could

00:29:59.960 --> 00:30:01.000
distribute that risk

00:30:01.000 --> 00:30:01.260
a little,

00:30:01.260 --> 00:30:01.940
which I think

00:30:01.940 --> 00:30:02.660
is the purpose

00:30:02.660 --> 00:30:03.240
of this pip,

00:30:03.240 --> 00:30:05.560
that's helpful.

00:30:05.560 --> 00:30:05.840
Yeah.

00:30:05.840 --> 00:30:06.900
Yeah, I think

00:30:06.900 --> 00:30:07.620
it would be interesting

00:30:07.620 --> 00:30:08.980
to solve that problem.

00:30:08.980 --> 00:30:11.000
I like to solve

00:30:11.000 --> 00:30:12.280
technical problems

00:30:12.280 --> 00:30:13.280
at the technical level

00:30:13.280 --> 00:30:14.860
and economic problems

00:30:14.860 --> 00:30:15.720
at the economic level,

00:30:15.720 --> 00:30:16.160
right?

00:30:16.160 --> 00:30:18.100
And so conflating

00:30:18.100 --> 00:30:18.720
these two

00:30:18.720 --> 00:30:19.860
can lead to,

00:30:19.860 --> 00:30:21.120
I think,

00:30:21.120 --> 00:30:23.260
it muddles things a bit.

00:30:23.260 --> 00:30:24.800
So the question is,

00:30:24.800 --> 00:30:26.140
what is a good design

00:30:26.140 --> 00:30:29.820
for a distributed

00:30:29.820 --> 00:30:31.220
high performance

00:30:31.220 --> 00:30:31.980
but consistent

00:30:31.980 --> 00:30:33.400
and secure repository?

00:30:33.400 --> 00:30:34.520
Well,

00:30:34.520 --> 00:30:37.360
that is traditional CDN.

00:30:37.360 --> 00:30:37.820
I mean,

00:30:37.820 --> 00:30:38.220
it's not really

00:30:38.220 --> 00:30:38.940
that hard of a problem.

00:30:38.940 --> 00:30:39.880
It's been solved many times

00:30:39.880 --> 00:30:40.620
by many different kinds

00:30:40.620 --> 00:30:41.560
of people, right?

00:30:41.560 --> 00:30:42.760
Whether it's Windows update,

00:30:42.760 --> 00:30:43.360
Apple update,

00:30:43.360 --> 00:30:43.900
whether it's like

00:30:43.900 --> 00:30:44.740
what we do with Conda,

00:30:44.740 --> 00:30:46.060
you put a CDN

00:30:46.060 --> 00:30:46.920
in front of

00:30:46.920 --> 00:30:47.800
a consistent

00:30:47.800 --> 00:30:49.400
sort of index

00:30:49.400 --> 00:30:50.360
and you force that

00:30:50.360 --> 00:30:51.540
kind of consistent index

00:30:51.540 --> 00:30:53.020
and you do that

00:30:53.020 --> 00:30:53.580
and that's okay,

00:30:53.580 --> 00:30:54.260
that's what you do.

00:30:54.260 --> 00:30:54.720
Now,

00:30:54.720 --> 00:30:55.800
how you fund that

00:30:55.800 --> 00:30:56.820
is a different question,

00:30:56.820 --> 00:30:57.220
right?

00:30:57.220 --> 00:30:58.040
And so it could be,

00:30:58.040 --> 00:30:58.580
we fund,

00:30:58.700 --> 00:31:00.900
we just put all the money

00:31:00.900 --> 00:31:02.520
into the PyPA

00:31:02.520 --> 00:31:03.820
or some PSF delegate

00:31:03.820 --> 00:31:04.480
organization

00:31:04.480 --> 00:31:05.580
that goes

00:31:05.580 --> 00:31:06.700
and just runs

00:31:06.700 --> 00:31:07.980
a packaging thing,

00:31:07.980 --> 00:31:09.620
some consortium

00:31:09.620 --> 00:31:10.500
that people donate into.

00:31:10.500 --> 00:31:11.060
I mean,

00:31:11.060 --> 00:31:12.500
$100,000 a month.

00:31:12.500 --> 00:31:14.240
Yeah,

00:31:14.240 --> 00:31:14.540
I mean,

00:31:14.540 --> 00:31:14.860
look,

00:31:14.860 --> 00:31:15.860
the Conda repos

00:31:15.860 --> 00:31:16.780
cost more than that.

00:31:16.780 --> 00:31:18.240
We ship a lot of binaries,

00:31:18.240 --> 00:31:18.560
right?

00:31:18.560 --> 00:31:20.560
So I think

00:31:20.560 --> 00:31:21.180
the bandwidth cost

00:31:21.180 --> 00:31:22.080
maybe more than

00:31:22.080 --> 00:31:22.600
what you're citing

00:31:22.600 --> 00:31:23.440
actually for PyPI

00:31:23.440 --> 00:31:24.380
because it's much

00:31:24.380 --> 00:31:25.140
more popular in Conda.

00:31:25.140 --> 00:31:26.560
But at the end of the day,

00:31:26.560 --> 00:31:27.540
it is something

00:31:27.540 --> 00:31:28.140
on the order

00:31:28.140 --> 00:31:29.220
of a few million dollars

00:31:29.220 --> 00:31:29.580
a year,

00:31:29.580 --> 00:31:30.120
I think,

00:31:30.120 --> 00:31:31.960
in CDN equivalent costs.

00:31:31.960 --> 00:31:33.840
And when you look at

00:31:33.840 --> 00:31:34.500
how many people

00:31:34.500 --> 00:31:35.620
use it in the world

00:31:35.620 --> 00:31:36.420
and depend on it,

00:31:36.420 --> 00:31:37.640
there is that budget

00:31:37.640 --> 00:31:38.720
available in the world.

00:31:38.720 --> 00:31:39.740
So the fact that

00:31:39.740 --> 00:31:40.800
we as a community

00:31:40.800 --> 00:31:42.780
don't know how to talk

00:31:42.780 --> 00:31:44.100
to the businesses

00:31:44.100 --> 00:31:44.940
that depend on it

00:31:44.940 --> 00:31:45.900
to get those dollars,

00:31:45.900 --> 00:31:47.340
that's our problem.

00:31:47.340 --> 00:31:48.900
That's not really,

00:31:48.900 --> 00:31:49.680
because businesses

00:31:49.680 --> 00:31:50.700
spend more than that

00:31:50.700 --> 00:31:52.260
on marketing parties,

00:31:52.440 --> 00:31:53.060
launch parties

00:31:53.060 --> 00:31:53.920
for random crap,

00:31:53.920 --> 00:31:54.220
right?

00:31:54.220 --> 00:31:55.920
We have infrastructure

00:31:55.920 --> 00:31:56.740
that powers the world

00:31:56.740 --> 00:31:58.040
and we as a volunteer

00:31:58.040 --> 00:31:59.240
kind of community

00:31:59.240 --> 00:32:00.260
of people who love Python

00:32:00.260 --> 00:32:01.360
can't figure out

00:32:01.360 --> 00:32:01.960
how to have a conversation

00:32:01.960 --> 00:32:02.340
with them

00:32:02.340 --> 00:32:02.960
to get a few more

00:32:02.960 --> 00:32:03.840
million dollars out of them.

00:32:03.840 --> 00:32:04.940
That's our problem.

00:32:04.940 --> 00:32:06.080
How do we get better at that?

00:32:06.080 --> 00:32:07.840
Yeah, yeah, for sure.

00:32:07.840 --> 00:32:08.820
Well, let's just go back

00:32:08.820 --> 00:32:09.400
to BitTorrent.

00:32:09.400 --> 00:32:11.700
All right.

00:32:11.700 --> 00:32:13.140
Speaking of companies

00:32:13.140 --> 00:32:14.900
that have some money

00:32:14.900 --> 00:32:15.660
to work with,

00:32:15.660 --> 00:32:16.480
let's talk Excel.

00:32:16.480 --> 00:32:18.540
Let's talk about Excel, yeah.

00:32:18.540 --> 00:32:19.600
Literally, it's the tool

00:32:19.600 --> 00:32:20.680
that probably processes

00:32:20.680 --> 00:32:23.160
the most financial numbers

00:32:23.160 --> 00:32:24.140
in the world, you know?

00:32:24.140 --> 00:32:25.240
You know, it is ironic

00:32:25.240 --> 00:32:26.520
that you mention this now

00:32:26.520 --> 00:32:27.580
because you brought up

00:32:27.580 --> 00:32:28.260
TOB,

00:32:28.260 --> 00:32:29.640
and I would say Excel

00:32:29.640 --> 00:32:30.960
is the dominant programming

00:32:30.960 --> 00:32:32.140
environment in the world.

00:32:32.140 --> 00:32:32.700
Yeah.

00:32:32.700 --> 00:32:33.280
And Excel...

00:32:33.280 --> 00:32:33.920
Didn't make the list.

00:32:33.920 --> 00:32:35.180
Didn't make the list.

00:32:35.180 --> 00:32:36.120
Didn't make the list.

00:32:36.120 --> 00:32:37.040
Maybe it should.

00:32:37.040 --> 00:32:37.680
I should go talk

00:32:37.680 --> 00:32:38.680
to the TOB editors.

00:32:38.680 --> 00:32:40.000
If it's not the most

00:32:40.000 --> 00:32:40.380
programming,

00:32:40.380 --> 00:32:42.600
popular programming thing,

00:32:42.600 --> 00:32:43.780
it probably is the most

00:32:43.780 --> 00:32:45.980
widely deployed database.

00:32:46.680 --> 00:32:47.040
Yes.

00:32:47.040 --> 00:32:48.420
It is the world's

00:32:48.420 --> 00:32:49.200
most popular database,

00:32:49.200 --> 00:32:50.120
the world's most popular

00:32:50.120 --> 00:32:51.040
computational environment,

00:32:51.040 --> 00:32:51.820
the world's most popular

00:32:51.820 --> 00:32:52.600
programming environment.

00:32:52.600 --> 00:32:53.300
Yeah.

00:32:53.300 --> 00:32:54.240
Because it actually,

00:32:54.240 --> 00:32:55.720
it was the last one

00:32:55.720 --> 00:32:57.120
of the things

00:32:57.120 --> 00:32:58.560
from the 70s and 80s

00:32:58.560 --> 00:32:59.300
with, like,

00:32:59.300 --> 00:33:00.580
end-user computing

00:33:00.580 --> 00:33:02.580
and programming for everyone.

00:33:02.580 --> 00:33:03.680
This was one of the last

00:33:03.680 --> 00:33:04.200
great tools,

00:33:04.200 --> 00:33:04.860
you know,

00:33:04.860 --> 00:33:06.460
the spreadsheet.

00:33:07.140 --> 00:33:08.280
So normal people,

00:33:08.280 --> 00:33:08.680
muggles,

00:33:08.680 --> 00:33:09.400
could approach this

00:33:09.400 --> 00:33:10.860
and put computational

00:33:10.860 --> 00:33:11.380
things together.

00:33:11.380 --> 00:33:13.440
But it has limited

00:33:13.440 --> 00:33:14.120
expressiveness.

00:33:14.120 --> 00:33:14.820
Well,

00:33:14.820 --> 00:33:15.520
I don't mean that

00:33:15.520 --> 00:33:16.060
in a mean way,

00:33:16.060 --> 00:33:16.840
but just to say that

00:33:16.840 --> 00:33:17.980
people, you know,

00:33:17.980 --> 00:33:19.020
you don't really want to see

00:33:19.020 --> 00:33:20.540
hundreds of lines of Excel.

00:33:20.540 --> 00:33:21.180
Like, that's kind of

00:33:21.180 --> 00:33:22.140
a terrifying thing, right?

00:33:22.140 --> 00:33:23.580
Because it is a very much

00:33:23.580 --> 00:33:24.540
an immediate mode

00:33:24.540 --> 00:33:26.360
data transformation

00:33:26.360 --> 00:33:27.120
kind of language.

00:33:27.120 --> 00:33:29.580
And so the Anaconda

00:33:29.580 --> 00:33:30.600
toolbox for Excel

00:33:30.600 --> 00:33:32.260
is there to complement

00:33:32.260 --> 00:33:33.920
the Python support

00:33:33.920 --> 00:33:34.600
that just recently

00:33:34.600 --> 00:33:35.620
got added to Excel.

00:33:35.620 --> 00:33:36.640
And that's GA.

00:33:36.640 --> 00:33:38.100
Yeah, I was going to say,

00:33:38.100 --> 00:33:39.240
let's start there, actually.

00:33:39.240 --> 00:33:40.020
Sure, sure.

00:33:40.020 --> 00:33:41.580
Because why does this exist?

00:33:41.580 --> 00:33:42.280
Didn't Microsoft

00:33:42.280 --> 00:33:43.960
just add Python to Excel?

00:33:43.960 --> 00:33:44.680
Yes.

00:33:44.680 --> 00:33:46.380
So that's worth

00:33:46.380 --> 00:33:47.120
talking about, right?

00:33:47.120 --> 00:33:48.000
So Windows,

00:33:48.000 --> 00:33:49.600
Excel on Windows

00:33:49.600 --> 00:33:51.440
has support

00:33:51.440 --> 00:33:52.780
for Python

00:33:52.780 --> 00:33:54.240
in the formula bar.

00:33:54.240 --> 00:33:55.180
So if you have

00:33:55.180 --> 00:33:56.440
Windows

00:33:56.440 --> 00:33:58.260
and you run Excel,

00:33:58.260 --> 00:33:59.140
you can type

00:33:59.140 --> 00:34:00.760
equals PY

00:34:00.760 --> 00:34:01.580
in the formula bar

00:34:01.580 --> 00:34:02.320
and start punching

00:34:02.320 --> 00:34:03.100
in Python code,

00:34:03.100 --> 00:34:04.280
multiple line Python code.

00:34:04.280 --> 00:34:05.140
You can refer

00:34:05.140 --> 00:34:05.980
to cell ranges

00:34:05.980 --> 00:34:07.500
and it will spill

00:34:07.500 --> 00:34:08.300
your data frames

00:34:08.300 --> 00:34:08.960
into the grid.

00:34:08.960 --> 00:34:10.300
You can chart things.

00:34:10.300 --> 00:34:11.780
It's insane

00:34:11.780 --> 00:34:12.400
that we're here.

00:34:12.400 --> 00:34:13.760
It's amazing that works.

00:34:13.760 --> 00:34:15.760
Now, the way that works

00:34:15.760 --> 00:34:18.060
is it analyzes your code.

00:34:18.060 --> 00:34:19.300
It actually looks

00:34:19.300 --> 00:34:20.120
at the range references

00:34:20.120 --> 00:34:20.820
and the cell reference

00:34:20.820 --> 00:34:21.440
and everything else,

00:34:21.440 --> 00:34:22.600
pulls all that data

00:34:22.600 --> 00:34:23.480
and your code,

00:34:23.480 --> 00:34:24.540
and it sends it

00:34:24.540 --> 00:34:25.340
over the wire

00:34:25.340 --> 00:34:27.560
to Azure Confidential Compute,

00:34:27.560 --> 00:34:29.040
which is an extra secure,

00:34:29.040 --> 00:34:29.920
extra lockdown version

00:34:29.920 --> 00:34:30.360
of Azure.

00:34:30.860 --> 00:34:31.620
and it runs

00:34:31.620 --> 00:34:32.400
the code there

00:34:32.400 --> 00:34:34.220
on a customized

00:34:34.220 --> 00:34:35.080
Anaconda environment

00:34:35.080 --> 00:34:35.740
that we built for that.

00:34:35.740 --> 00:34:36.380
So you have access

00:34:36.380 --> 00:34:38.600
to a lot of the data tools

00:34:38.600 --> 00:34:39.300
that you would expect,

00:34:39.300 --> 00:34:39.940
pandas,

00:34:39.940 --> 00:34:40.480
net plotlib,

00:34:40.480 --> 00:34:41.020
things like that.

00:34:41.020 --> 00:34:42.260
So you do all that stuff

00:34:42.260 --> 00:34:43.480
and then it comes back

00:34:43.480 --> 00:34:44.860
and then it sort of

00:34:44.860 --> 00:34:45.540
renders in the grid.

00:34:45.540 --> 00:34:47.940
So the computational environment

00:34:47.940 --> 00:34:48.920
doesn't have access

00:34:48.920 --> 00:34:51.720
to your full spreadsheet

00:34:51.720 --> 00:34:53.580
and it also doesn't have access

00:34:53.580 --> 00:34:54.100
to the internet.

00:34:54.600 --> 00:34:56.340
So there's no risk

00:34:56.340 --> 00:34:57.500
of data leakage and loss

00:34:57.500 --> 00:34:58.120
and things like that

00:34:58.120 --> 00:34:59.060
or tampering.

00:34:59.060 --> 00:35:00.220
So in any case...

00:35:00.220 --> 00:35:01.360
It probably also doesn't have access

00:35:01.360 --> 00:35:02.780
to your local file system

00:35:02.780 --> 00:35:04.060
if you've got other things

00:35:04.060 --> 00:35:04.540
to pull in

00:35:04.540 --> 00:35:05.120
or you want to write

00:35:05.120 --> 00:35:05.960
a Python file

00:35:05.960 --> 00:35:07.120
and import it as a module.

00:35:07.120 --> 00:35:07.840
None of that, right?

00:35:07.840 --> 00:35:08.700
Exactly.

00:35:08.700 --> 00:35:09.280
Exactly.

00:35:09.280 --> 00:35:10.660
And you've served

00:35:10.660 --> 00:35:11.360
as a wonderful straight man

00:35:11.360 --> 00:35:11.720
for me here

00:35:11.720 --> 00:35:13.480
because that is a bit

00:35:13.480 --> 00:35:14.000
of a limitation.

00:35:14.000 --> 00:35:15.580
So the pluses are,

00:35:15.580 --> 00:35:16.180
number one,

00:35:16.180 --> 00:35:17.320
it's built in

00:35:17.320 --> 00:35:18.680
and it runs

00:35:18.680 --> 00:35:20.620
the full-on

00:35:20.620 --> 00:35:21.900
like Anaconda install

00:35:21.900 --> 00:35:23.940
on the Azure

00:35:23.940 --> 00:35:24.700
confidential compute.

00:35:24.700 --> 00:35:25.960
So you have access

00:35:25.960 --> 00:35:27.320
to the bona fide packages

00:35:27.320 --> 00:35:27.860
and whatnot

00:35:27.860 --> 00:35:29.280
for doing data analysis.

00:35:29.280 --> 00:35:30.060
The downside is

00:35:30.060 --> 00:35:30.940
there's no access

00:35:30.940 --> 00:35:31.400
to the internet,

00:35:31.400 --> 00:35:32.020
there's no access

00:35:32.020 --> 00:35:32.980
to your local file system,

00:35:32.980 --> 00:35:33.640
things like that.

00:35:33.640 --> 00:35:34.120
You have to sort of

00:35:34.120 --> 00:35:35.020
load those into Excel

00:35:35.020 --> 00:35:36.400
and then punch that data over.

00:35:36.400 --> 00:35:38.520
So to complement that,

00:35:38.520 --> 00:35:40.140
we created this thing

00:35:40.140 --> 00:35:40.500
that we call

00:35:40.500 --> 00:35:41.180
the Anaconda toolbox.

00:35:41.180 --> 00:35:43.320
And so that is actually

00:35:43.320 --> 00:35:46.580
a WebAssembly-based

00:35:46.580 --> 00:35:51.340
plugin for Microsoft Excel

00:35:51.340 --> 00:35:52.640
and it runs

00:35:52.640 --> 00:35:53.880
on the Mac version

00:35:53.880 --> 00:35:54.720
of Excel as well

00:35:54.720 --> 00:35:55.780
and it runs locally.

00:35:55.780 --> 00:35:57.640
So it is an Anaconda

00:35:57.640 --> 00:35:59.500
WebAssembly sort of environment

00:35:59.500 --> 00:36:02.440
hosted inside a plugin

00:36:02.440 --> 00:36:03.740
for Excel.

00:36:03.740 --> 00:36:05.980
So that then has

00:36:05.980 --> 00:36:08.240
sort of richer access

00:36:08.240 --> 00:36:08.720
to things,

00:36:08.720 --> 00:36:10.900
but it is limited

00:36:10.900 --> 00:36:12.660
in that only those libraries

00:36:12.660 --> 00:36:13.680
that we cross-compiled

00:36:13.680 --> 00:36:14.460
into WebAssembly

00:36:14.460 --> 00:36:15.320
can work in there.

00:36:15.320 --> 00:36:16.460
That being said,

00:36:16.460 --> 00:36:17.860
you can use

00:36:17.860 --> 00:36:19.080
sort of a pip install,

00:36:19.080 --> 00:36:20.360
install pure Python packages,

00:36:20.780 --> 00:36:21.920
into that environment.

00:36:21.920 --> 00:36:24.120
And you can also then,

00:36:24.120 --> 00:36:25.500
you know,

00:36:25.500 --> 00:36:26.960
one of the interesting things

00:36:26.960 --> 00:36:30.900
that we heard from people

00:36:30.900 --> 00:36:31.500
was that they,

00:36:31.500 --> 00:36:31.960
look,

00:36:31.960 --> 00:36:33.300
they could be a Microsoft shop.

00:36:33.300 --> 00:36:33.740
They trust,

00:36:33.740 --> 00:36:34.060
of course,

00:36:34.060 --> 00:36:34.760
they trust Azure,

00:36:34.760 --> 00:36:35.840
they trust Microsoft,

00:36:35.840 --> 00:36:37.440
but they just have an IT policy

00:36:37.440 --> 00:36:38.500
where they're not allowed

00:36:38.500 --> 00:36:38.860
to sort of,

00:36:38.860 --> 00:36:40.140
they don't want the risk

00:36:40.140 --> 00:36:41.140
at all of the data

00:36:41.140 --> 00:36:42.560
leaving their local machine.

00:36:42.940 --> 00:36:44.040
and this would run

00:36:44.040 --> 00:36:44.960
everything local.

00:36:44.960 --> 00:36:45.580
It's just running

00:36:45.580 --> 00:36:46.240
everything local

00:36:46.240 --> 00:36:47.140
on your laptop

00:36:47.140 --> 00:36:48.820
or on your workstation

00:36:48.820 --> 00:36:50.400
directly inside the grid.

00:36:50.400 --> 00:36:51.820
And we're working,

00:36:51.820 --> 00:36:52.180
I mean,

00:36:52.180 --> 00:36:52.980
the Excel team,

00:36:52.980 --> 00:36:53.360
you know,

00:36:53.360 --> 00:36:54.180
knows we're doing this.

00:36:54.180 --> 00:36:55.280
They like seeing

00:36:55.280 --> 00:36:56.020
some things we're doing here.

00:36:56.020 --> 00:36:56.680
And our hope here

00:36:56.680 --> 00:36:57.720
is that actually with this,

00:36:57.720 --> 00:36:59.200
we can explore features

00:36:59.200 --> 00:37:00.860
and run a little bit ahead

00:37:00.860 --> 00:37:02.760
of where the built-in

00:37:02.760 --> 00:37:04.200
Excel capability is.

00:37:04.340 --> 00:37:04.900
So they have,

00:37:04.900 --> 00:37:05.960
they sort of have a way

00:37:05.960 --> 00:37:06.580
to sort of almost,

00:37:06.580 --> 00:37:07.740
not quite A-B test,

00:37:07.740 --> 00:37:09.300
but see what kind of features

00:37:09.300 --> 00:37:09.980
are good

00:37:09.980 --> 00:37:10.680
and what features

00:37:10.680 --> 00:37:12.180
are not as interesting.

00:37:12.180 --> 00:37:13.220
And they can then

00:37:13.220 --> 00:37:13.940
eventually over time,

00:37:13.940 --> 00:37:14.120
I think,

00:37:14.120 --> 00:37:15.360
roll those into the mainline

00:37:15.360 --> 00:37:16.060
Excel support.

00:37:16.060 --> 00:37:17.180
Because when you have

00:37:17.180 --> 00:37:17.940
a product like Excel

00:37:17.940 --> 00:37:18.760
that's relied upon

00:37:18.760 --> 00:37:19.420
by so many people,

00:37:19.420 --> 00:37:20.880
you actually are limited

00:37:20.880 --> 00:37:22.200
in how fast you can move

00:37:22.200 --> 00:37:23.580
and in what things

00:37:23.580 --> 00:37:24.140
you can roll in.

00:37:24.140 --> 00:37:25.280
Because once you put a thing in,

00:37:25.280 --> 00:37:26.760
you really can't take it out.

00:37:26.760 --> 00:37:27.260
Right?

00:37:27.260 --> 00:37:27.480
Yeah,

00:37:27.480 --> 00:37:28.080
it's almost like

00:37:28.080 --> 00:37:28.960
a programming language.

00:37:28.960 --> 00:37:29.240
Yeah.

00:37:29.240 --> 00:37:30.300
It's a really important thing

00:37:30.300 --> 00:37:30.880
that people make

00:37:30.880 --> 00:37:31.780
billion-dollar decisions

00:37:31.780 --> 00:37:32.600
based on the values

00:37:32.600 --> 00:37:33.580
popping out of those cells.

00:37:34.200 --> 00:37:35.400
so it's really important

00:37:35.400 --> 00:37:36.380
that that team is able

00:37:36.380 --> 00:37:37.560
to focus on the stability

00:37:37.560 --> 00:37:39.460
and have, you know,

00:37:39.460 --> 00:37:40.760
a very refined user experience.

00:37:40.760 --> 00:37:41.560
For us,

00:37:41.560 --> 00:37:42.620
we can move a little faster,

00:37:42.620 --> 00:37:43.700
try different kinds of things.

00:37:43.700 --> 00:37:44.720
So one of the things

00:37:44.720 --> 00:37:45.560
that we're really exploring

00:37:45.560 --> 00:37:46.100
and one of the things

00:37:46.100 --> 00:37:47.340
I'm hoping will come out

00:37:47.340 --> 00:37:48.120
of this Excel work

00:37:48.120 --> 00:37:49.540
is that we will see

00:37:49.540 --> 00:37:52.000
much more cross-team collaboration

00:37:52.000 --> 00:37:54.020
between data science

00:37:54.020 --> 00:37:54.680
kind of folks

00:37:54.680 --> 00:37:56.340
and business analysts

00:37:56.340 --> 00:37:57.300
and other kind of stakeholders

00:37:57.300 --> 00:37:59.360
who may themselves

00:37:59.360 --> 00:38:00.460
not be writing Python

00:38:00.460 --> 00:38:01.380
or not be very familiar

00:38:01.380 --> 00:38:01.940
with Python,

00:38:01.940 --> 00:38:03.880
but using a toolbox,

00:38:04.060 --> 00:38:04.920
using our toolbox,

00:38:04.920 --> 00:38:05.180
you know,

00:38:05.180 --> 00:38:05.540
one of the things

00:38:05.540 --> 00:38:06.140
we have in there

00:38:06.140 --> 00:38:08.240
are simple ways

00:38:08.240 --> 00:38:09.640
to share code snippets

00:38:09.640 --> 00:38:10.760
and simple ways

00:38:10.760 --> 00:38:11.440
to share new kinds

00:38:11.440 --> 00:38:12.100
of data sources

00:38:12.100 --> 00:38:13.600
and to have,

00:38:13.600 --> 00:38:14.580
you know,

00:38:14.580 --> 00:38:17.500
really a lot of ways

00:38:17.500 --> 00:38:18.820
to make like simple dashboards

00:38:18.820 --> 00:38:19.600
and visualizations

00:38:19.600 --> 00:38:21.100
that then essentially

00:38:21.100 --> 00:38:23.360
turn your Excel spreadsheet

00:38:23.360 --> 00:38:24.780
from not just a database

00:38:24.780 --> 00:38:25.720
and a computational environment,

00:38:25.720 --> 00:38:28.000
but into a full-on application

00:38:28.000 --> 00:38:29.240
deployment environment.

00:38:29.740 --> 00:38:31.000
so for data scientists,

00:38:31.000 --> 00:38:31.220
you know,

00:38:31.220 --> 00:38:32.040
one thing I've heard a lot

00:38:32.040 --> 00:38:33.020
over the years

00:38:33.020 --> 00:38:34.260
from data science folks

00:38:34.260 --> 00:38:35.960
is that they turn into

00:38:35.960 --> 00:38:38.020
service providers

00:38:38.020 --> 00:38:38.640
for their teams

00:38:38.640 --> 00:38:40.320
where they're just being asked

00:38:40.320 --> 00:38:41.360
for new Excel outputs

00:38:41.360 --> 00:38:42.280
every single week

00:38:42.280 --> 00:38:43.700
or every couple of weeks

00:38:43.700 --> 00:38:44.480
they come back around

00:38:44.480 --> 00:38:44.700
and say,

00:38:44.700 --> 00:38:44.880
hey,

00:38:44.880 --> 00:38:45.560
that was great

00:38:45.560 --> 00:38:46.140
what you did

00:38:46.140 --> 00:38:47.920
with all your magic code stuff

00:38:47.920 --> 00:38:48.480
and,

00:38:48.480 --> 00:38:49.440
but can you rerun

00:38:49.440 --> 00:38:50.000
that analysis

00:38:50.000 --> 00:38:51.080
but this way

00:38:51.080 --> 00:38:52.920
and email me the,

00:38:52.920 --> 00:38:53.360
you know,

00:38:53.360 --> 00:38:54.160
email me the CSV

00:38:54.160 --> 00:38:54.720
or the spreadsheet

00:38:54.720 --> 00:38:56.340
and so with this,

00:38:56.340 --> 00:38:57.460
you can now deploy

00:38:57.460 --> 00:38:58.400
your code forward

00:38:58.400 --> 00:39:00.900
into a spreadsheet

00:39:00.900 --> 00:39:01.940
that's then the live

00:39:01.940 --> 00:39:03.040
forward deployed thing.

00:39:03.040 --> 00:39:04.720
It can pull from

00:39:04.720 --> 00:39:05.860
a Jupyter notebook

00:39:05.860 --> 00:39:06.880
that you have running

00:39:06.880 --> 00:39:07.320
and hosted

00:39:07.320 --> 00:39:09.140
and then you actually

00:39:09.140 --> 00:39:09.940
are using this

00:39:09.940 --> 00:39:11.600
to deploy a live version

00:39:11.600 --> 00:39:13.060
of a self-service

00:39:13.060 --> 00:39:14.380
data environment

00:39:14.380 --> 00:39:15.620
analysis environment

00:39:15.620 --> 00:39:16.940
for your business stakeholders.

00:39:17.840 --> 00:39:18.020
Right,

00:39:18.020 --> 00:39:19.180
you create almost an API

00:39:19.180 --> 00:39:20.520
for your data

00:39:20.520 --> 00:39:22.080
that Excel's the front end.

00:39:22.080 --> 00:39:22.680
You turn your notebooks

00:39:22.680 --> 00:39:23.560
into APIs

00:39:23.560 --> 00:39:24.600
and then your end users

00:39:24.600 --> 00:39:25.460
are using Excel

00:39:25.460 --> 00:39:26.940
which is their native environment

00:39:26.940 --> 00:39:28.440
as a way

00:39:28.440 --> 00:39:29.400
to hit that API

00:39:29.400 --> 00:39:31.020
to generate really quick

00:39:31.020 --> 00:39:31.900
visualizations.

00:39:31.900 --> 00:39:32.940
We have a built-in,

00:39:32.940 --> 00:39:33.400
you know,

00:39:33.400 --> 00:39:34.100
LLM chat

00:39:34.100 --> 00:39:34.640
so you can ask

00:39:34.640 --> 00:39:35.460
for new kinds of this

00:39:35.460 --> 00:39:36.420
and tweak plots

00:39:36.420 --> 00:39:37.240
this way and that way

00:39:37.240 --> 00:39:37.980
and when you like

00:39:37.980 --> 00:39:38.480
what you've got

00:39:38.480 --> 00:39:39.040
you can share it

00:39:39.040 --> 00:39:39.480
as a snippet

00:39:39.480 --> 00:39:40.040
to other people.

00:39:40.040 --> 00:39:41.780
So that's a really

00:39:41.780 --> 00:39:42.600
powerful modality.

00:39:42.600 --> 00:39:43.360
We believe that's

00:39:43.360 --> 00:39:44.240
a very powerful modality

00:39:44.240 --> 00:39:46.060
but this is the kind

00:39:46.060 --> 00:39:46.580
of feature

00:39:46.580 --> 00:39:47.680
which we want to get

00:39:47.760 --> 00:39:48.080
out there.

00:39:48.080 --> 00:39:48.920
A lot of people

00:39:48.920 --> 00:39:49.440
play with it.

00:39:49.440 --> 00:39:50.240
We'll tweak it

00:39:50.240 --> 00:39:51.380
and then once it gets

00:39:51.380 --> 00:39:52.240
really dialed in

00:39:52.240 --> 00:39:52.960
then that's something

00:39:52.960 --> 00:39:53.680
which the Excel team

00:39:53.680 --> 00:39:54.360
might look at and say

00:39:54.360 --> 00:39:55.200
oh yeah,

00:39:55.200 --> 00:39:56.360
that's kind of

00:39:56.360 --> 00:39:57.240
what it should look like.

00:39:57.240 --> 00:39:58.160
Now let's go

00:39:58.160 --> 00:39:58.700
and build this

00:39:58.700 --> 00:39:59.600
into Excel itself.

00:39:59.600 --> 00:40:00.380
Let's go build this

00:40:00.380 --> 00:40:01.800
into native SharePoint

00:40:01.800 --> 00:40:02.300
and Outlook

00:40:02.300 --> 00:40:03.100
and other kinds of,

00:40:03.100 --> 00:40:03.340
you know,

00:40:03.340 --> 00:40:03.800
you know,

00:40:03.800 --> 00:40:04.840
things.

00:40:04.840 --> 00:40:05.520
So anyway,

00:40:05.520 --> 00:40:06.780
that's kind of

00:40:06.780 --> 00:40:07.620
the point of it

00:40:07.620 --> 00:40:08.220
but we're really

00:40:08.220 --> 00:40:08.860
super excited

00:40:08.860 --> 00:40:10.060
about all the kinds

00:40:10.060 --> 00:40:10.420
of innovation

00:40:10.420 --> 00:40:11.320
that can happen

00:40:11.320 --> 00:40:12.860
in this toolbox

00:40:12.860 --> 00:40:14.140
but we really rely

00:40:14.140 --> 00:40:15.340
on end users,

00:40:15.340 --> 00:40:15.640
right,

00:40:15.640 --> 00:40:16.080
to give us

00:40:16.080 --> 00:40:16.680
that kind of feedback.

00:40:17.680 --> 00:40:18.560
What do you do

00:40:18.560 --> 00:40:19.720
at the notebook level

00:40:19.720 --> 00:40:22.560
to make it hosted

00:40:22.560 --> 00:40:23.320
and accessible

00:40:23.320 --> 00:40:23.980
as an API?

00:40:23.980 --> 00:40:24.580
Is that just

00:40:24.580 --> 00:40:25.240
straight Jupyter

00:40:25.240 --> 00:40:25.800
or is there something

00:40:25.800 --> 00:40:26.280
more interesting?

00:40:26.280 --> 00:40:26.440
Yeah, no,

00:40:26.440 --> 00:40:27.220
it's straight Jupyter

00:40:27.220 --> 00:40:27.900
but if you host

00:40:27.900 --> 00:40:28.480
that and so

00:40:28.480 --> 00:40:29.360
all of this sort of

00:40:29.360 --> 00:40:30.180
to get access

00:40:30.180 --> 00:40:30.900
to the toolbox

00:40:30.900 --> 00:40:31.600
you need to just

00:40:31.600 --> 00:40:32.180
create an Anaconda.

00:40:32.180 --> 00:40:32.740
It's a free

00:40:32.740 --> 00:40:34.000
Anaconda Cloud account

00:40:34.000 --> 00:40:35.400
and then the notebooks

00:40:35.400 --> 00:40:36.080
are going to be the ones

00:40:36.080 --> 00:40:37.300
hosted in your

00:40:37.300 --> 00:40:38.060
Anaconda Cloud

00:40:38.060 --> 00:40:39.740
account

00:40:39.740 --> 00:40:41.120
and then the snippets

00:40:41.120 --> 00:40:41.740
are also there.

00:40:41.740 --> 00:40:42.620
So everything is sort

00:40:42.620 --> 00:40:43.100
of shared

00:40:43.100 --> 00:40:44.020
through your Anaconda

00:40:44.020 --> 00:40:44.440
account,

00:40:44.440 --> 00:40:45.100
right,

00:40:45.160 --> 00:40:45.960
and so then

00:40:45.960 --> 00:40:46.580
your friends

00:40:46.580 --> 00:40:47.240
who are using this

00:40:47.240 --> 00:40:48.240
can just reference

00:40:48.240 --> 00:40:49.380
that and drop that in

00:40:49.380 --> 00:40:50.620
and then they're able

00:40:50.620 --> 00:40:51.180
to use the code.

00:40:51.180 --> 00:40:52.340
Yeah,

00:40:52.340 --> 00:40:53.060
well,

00:40:53.060 --> 00:40:53.920
that sounds pretty awesome.

00:40:53.920 --> 00:40:55.680
Are you able to,

00:40:55.680 --> 00:40:56.140
you know,

00:40:56.140 --> 00:40:56.660
you said it's based

00:40:56.660 --> 00:40:57.220
on WebAssembly.

00:40:57.220 --> 00:40:58.240
Are you able to

00:40:58.240 --> 00:41:00.420
create your own packages

00:41:00.420 --> 00:41:02.200
as WebAssembly things

00:41:02.200 --> 00:41:04.800
or pip install things

00:41:04.800 --> 00:41:05.400
that are not

00:41:05.400 --> 00:41:06.580
what was in the basement?

00:41:06.720 --> 00:41:07.000
Yes,

00:41:07.000 --> 00:41:08.100
you can pip install things.

00:41:08.100 --> 00:41:08.480
Absolutely.

00:41:08.480 --> 00:41:08.980
That's the,

00:41:08.980 --> 00:41:09.760
that's also the power

00:41:09.760 --> 00:41:10.420
of this is that

00:41:10.420 --> 00:41:11.520
you can kind of

00:41:11.520 --> 00:41:12.180
go a little nuts.

00:41:12.180 --> 00:41:12.680
It is a little bit

00:41:12.680 --> 00:41:13.180
Wild West.

00:41:13.180 --> 00:41:14.540
So definitely use

00:41:14.540 --> 00:41:15.000
with caution.

00:41:15.000 --> 00:41:15.920
There are a lot

00:41:15.920 --> 00:41:16.500
of foot guns,

00:41:16.500 --> 00:41:17.240
but,

00:41:17.240 --> 00:41:17.800
but again,

00:41:17.800 --> 00:41:18.400
as a plugin,

00:41:18.400 --> 00:41:19.200
we can do more

00:41:19.200 --> 00:41:19.860
of that exploration

00:41:19.860 --> 00:41:20.560
and find out

00:41:20.560 --> 00:41:21.140
where,

00:41:21.140 --> 00:41:21.800
where people,

00:41:21.800 --> 00:41:22.620
where the comfort level

00:41:22.620 --> 00:41:22.960
is,

00:41:22.960 --> 00:41:24.260
both for individual users

00:41:24.260 --> 00:41:24.980
as well as

00:41:24.980 --> 00:41:25.640
for organizations,

00:41:25.640 --> 00:41:26.200
right?

00:41:26.200 --> 00:41:28.200
And,

00:41:28.200 --> 00:41:28.800
and we do have,

00:41:28.800 --> 00:41:29.560
I do want to plug

00:41:29.560 --> 00:41:31.280
that we have a webinar

00:41:31.280 --> 00:41:32.160
coming up.

00:41:32.160 --> 00:41:33.660
It'll be

00:41:33.660 --> 00:41:35.180
exactly when it is,

00:41:35.260 --> 00:41:36.200
but we have a webinar

00:41:36.200 --> 00:41:37.460
coming up around

00:41:37.460 --> 00:41:39.560
using,

00:41:39.560 --> 00:41:42.180
using the assistant

00:41:42.180 --> 00:41:42.780
and all that.

00:41:42.780 --> 00:41:44.780
And I should have been

00:41:44.780 --> 00:41:45.320
prepared with that

00:41:45.320 --> 00:41:46.680
information before

00:41:46.680 --> 00:41:47.500
mentioning it.

00:41:47.500 --> 00:41:48.420
No worries.

00:41:48.420 --> 00:41:48.940
I'll tell you what,

00:41:48.940 --> 00:41:50.200
let's put it in the show notes.

00:41:50.200 --> 00:41:50.820
Send it to me.

00:41:50.820 --> 00:41:51.520
Put it in the show notes.

00:41:51.520 --> 00:41:51.740
Yeah,

00:41:51.740 --> 00:41:51.920
yeah.

00:41:51.920 --> 00:41:52.160
Yeah.

00:41:52.160 --> 00:41:53.520
Yeah.

00:41:53.520 --> 00:41:55.200
Awesome.

00:41:55.200 --> 00:41:57.180
So a question from Dennis

00:41:57.180 --> 00:41:57.840
in the audience,

00:41:57.840 --> 00:41:59.860
someone who it sounds like

00:41:59.860 --> 00:42:01.560
is really in the know

00:42:01.560 --> 00:42:02.200
for these things

00:42:02.200 --> 00:42:03.220
asking this sort of question.

00:42:03.220 --> 00:42:03.560
Yes.

00:42:03.560 --> 00:42:03.800
Okay.

00:42:03.800 --> 00:42:04.860
So Anaconda Toolbox

00:42:04.860 --> 00:42:05.820
Let me read it

00:42:05.820 --> 00:42:06.340
for the people

00:42:06.340 --> 00:42:06.840
who are not watching.

00:42:06.840 --> 00:42:07.860
Anaconda Toolbox

00:42:07.860 --> 00:42:08.440
for Excel,

00:42:08.440 --> 00:42:09.740
which kind of licenses

00:42:09.740 --> 00:42:10.260
are needed

00:42:10.260 --> 00:42:11.080
to make use

00:42:11.080 --> 00:42:11.840
of this combination

00:42:11.840 --> 00:42:13.860
in an O365 environment?

00:42:13.860 --> 00:42:14.560
Right.

00:42:14.560 --> 00:42:15.480
So Office 365

00:42:15.480 --> 00:42:16.380
right now,

00:42:16.380 --> 00:42:16.600
right,

00:42:16.600 --> 00:42:17.460
doesn't support

00:42:17.460 --> 00:42:19.180
the built-in Excel stuff

00:42:19.180 --> 00:42:19.660
because that's again,

00:42:19.660 --> 00:42:21.040
just for Excel

00:42:21.040 --> 00:42:21.760
on Windows.

00:42:21.760 --> 00:42:23.460
And so you can use

00:42:23.460 --> 00:42:24.600
Anaconda Toolbox

00:42:24.600 --> 00:42:25.260
inside there

00:42:25.260 --> 00:42:26.500
and the toolbox,

00:42:26.500 --> 00:42:27.200
it is,

00:42:27.200 --> 00:42:28.580
it's free for you to use.

00:42:28.580 --> 00:42:29.520
We will have sort of

00:42:29.520 --> 00:42:30.040
some upgraded

00:42:30.040 --> 00:42:30.900
and premium features

00:42:30.900 --> 00:42:31.600
built into that,

00:42:31.600 --> 00:42:32.400
but you just need

00:42:32.400 --> 00:42:33.240
to create an Anaconda

00:42:33.240 --> 00:42:34.460
Cloud login

00:42:34.460 --> 00:42:36.120
or create a cloud account

00:42:36.120 --> 00:42:36.620
and then you should

00:42:36.620 --> 00:42:37.420
be able to use that.

00:42:37.420 --> 00:42:38.940
So if you just have

00:42:38.940 --> 00:42:40.480
any version of Excel,

00:42:40.480 --> 00:42:41.300
you don't need things

00:42:41.300 --> 00:42:41.520
special.

00:42:41.520 --> 00:42:42.720
The Office 365 version

00:42:42.720 --> 00:42:43.120
of Excel,

00:42:43.120 --> 00:42:43.480
right?

00:42:43.480 --> 00:42:44.160
That's like the web,

00:42:44.160 --> 00:42:46.000
that's the web hosted.

00:42:46.000 --> 00:42:46.700
I see.

00:42:46.700 --> 00:42:47.120
Got it.

00:42:47.120 --> 00:42:47.620
Got it.

00:42:47.620 --> 00:42:48.840
And that's why it's web.

00:42:48.840 --> 00:42:50.160
I'm assuming that's

00:42:50.160 --> 00:42:51.080
what that's referring to.

00:42:51.080 --> 00:42:51.900
I maybe misunderstand

00:42:51.900 --> 00:42:52.460
the question,

00:42:52.460 --> 00:42:53.260
but hopefully that

00:42:53.260 --> 00:42:54.180
made sense for Dennis.

00:42:54.180 --> 00:42:54.900
Yeah.

00:42:54.900 --> 00:42:56.400
I'm not sure.

00:42:56.400 --> 00:42:57.240
There's a lot going on

00:42:57.240 --> 00:42:57.760
with licensing

00:42:57.760 --> 00:42:59.100
in Office 365

00:42:59.100 --> 00:43:00.000
for sure.

00:43:00.560 --> 00:43:01.260
I bet there's people,

00:43:01.260 --> 00:43:02.640
I'm sure there are people

00:43:02.640 --> 00:43:03.420
whose job it is

00:43:03.420 --> 00:43:04.400
to just know the licensing.

00:43:04.400 --> 00:43:05.460
Oh, sure.

00:43:05.460 --> 00:43:05.680
Yeah.

00:43:05.680 --> 00:43:06.620
And large organizations

00:43:06.620 --> 00:43:08.280
of 100,000 Windows users.

00:43:08.280 --> 00:43:09.740
One thing to be clear

00:43:09.740 --> 00:43:10.540
is that for people

00:43:10.540 --> 00:43:11.280
who are in a corporate

00:43:11.280 --> 00:43:11.860
environment,

00:43:11.860 --> 00:43:13.780
your administrators,

00:43:13.780 --> 00:43:14.840
your IT administrators

00:43:14.840 --> 00:43:15.540
will have to,

00:43:15.540 --> 00:43:17.140
it depends on what update

00:43:17.140 --> 00:43:18.100
cycle they're on

00:43:18.100 --> 00:43:19.380
that they take updates

00:43:19.380 --> 00:43:20.040
to Office

00:43:20.040 --> 00:43:21.040
and Excel.

00:43:21.040 --> 00:43:21.820
So even though

00:43:21.820 --> 00:43:23.900
the Excel for Python

00:43:23.900 --> 00:43:25.100
or Python for in Excel

00:43:25.100 --> 00:43:26.460
feature is generally

00:43:26.460 --> 00:43:27.120
available now,

00:43:27.120 --> 00:43:28.420
your internal corporate

00:43:28.420 --> 00:43:29.480
environment may not

00:43:29.480 --> 00:43:30.620
be picking up that feature

00:43:30.620 --> 00:43:31.880
until the next kind

00:43:31.880 --> 00:43:32.740
of iteration cycle

00:43:32.740 --> 00:43:33.040
when they,

00:43:33.040 --> 00:43:33.640
you know,

00:43:33.640 --> 00:43:34.300
the refresh cycle

00:43:34.300 --> 00:43:34.900
they do internally.

00:43:34.900 --> 00:43:36.240
So that's just a caveat

00:43:36.240 --> 00:43:37.040
that I will put up there.

00:43:37.040 --> 00:43:37.740
Okay.

00:43:37.740 --> 00:43:38.980
And I may have missed this

00:43:38.980 --> 00:43:39.800
when you're talking about it,

00:43:39.800 --> 00:43:41.240
but do people need

00:43:41.240 --> 00:43:42.660
to have the Microsoft

00:43:42.660 --> 00:43:43.980
Python Excel support

00:43:43.980 --> 00:43:45.200
to work with

00:43:45.200 --> 00:43:46.600
your toolbox?

00:43:46.600 --> 00:43:48.420
You know,

00:43:48.420 --> 00:43:48.800
I,

00:43:48.800 --> 00:43:50.800
that's a question

00:43:50.800 --> 00:43:51.060
I should know

00:43:51.060 --> 00:43:51.640
the answer for.

00:43:51.640 --> 00:43:52.480
I'm assuming,

00:43:52.480 --> 00:43:54.260
I'm going to say yes,

00:43:54.260 --> 00:43:54.900
because you should

00:43:54.900 --> 00:43:55.800
have that support anyway,

00:43:55.800 --> 00:43:56.360
because you should

00:43:56.360 --> 00:43:57.500
be using that.

00:43:57.500 --> 00:43:58.080
But,

00:43:58.080 --> 00:43:58.340
oh,

00:43:58.340 --> 00:43:58.660
no,

00:43:58.660 --> 00:43:58.780
no,

00:43:58.780 --> 00:43:59.000
I mean,

00:43:59.000 --> 00:43:59.280
actually,

00:43:59.280 --> 00:44:00.660
if you're on Windows,

00:44:00.660 --> 00:44:01.260
you should do it,

00:44:01.260 --> 00:44:02.580
but you don't have to have it

00:44:02.580 --> 00:44:03.400
because it is a plugin

00:44:03.400 --> 00:44:04.480
that works on Mac

00:44:04.480 --> 00:44:05.380
and it works on the web

00:44:05.380 --> 00:44:05.720
as well,

00:44:05.720 --> 00:44:07.580
on Excel,

00:44:07.580 --> 00:44:09.120
Office 365

00:44:09.120 --> 00:44:09.620
on the web.

00:44:09.620 --> 00:44:11.160
So it runs

00:44:11.160 --> 00:44:11.820
kind of independently,

00:44:11.820 --> 00:44:12.940
but we tried to make it

00:44:12.940 --> 00:44:14.120
as compatible as possible.

00:44:14.120 --> 00:44:15.320
And one thing

00:44:15.320 --> 00:44:15.980
I forgot to mention,

00:44:15.980 --> 00:44:16.800
really huge feature,

00:44:16.800 --> 00:44:18.500
is that you can build

00:44:18.500 --> 00:44:20.560
your own UDFs,

00:44:20.560 --> 00:44:20.880
right?

00:44:20.880 --> 00:44:22.680
Like,

00:44:22.680 --> 00:44:24.560
your ability

00:44:24.560 --> 00:44:26.460
to write a new function

00:44:26.460 --> 00:44:27.220
and then have that

00:44:27.220 --> 00:44:27.840
be available.

00:44:27.840 --> 00:44:29.220
You can publish that

00:44:29.220 --> 00:44:29.800
as a function

00:44:29.800 --> 00:44:30.760
that isn't available

00:44:30.760 --> 00:44:32.740
in the built-in

00:44:32.740 --> 00:44:33.940
list of Excel functions.

00:44:33.940 --> 00:44:35.120
And you can run that

00:44:35.120 --> 00:44:35.780
on a row

00:44:35.780 --> 00:44:36.840
and just drag

00:44:36.840 --> 00:44:37.680
and applies to everything

00:44:37.680 --> 00:44:38.060
in a row.

00:44:38.060 --> 00:44:38.300
Like,

00:44:38.300 --> 00:44:39.660
it's a very nice way

00:44:39.660 --> 00:44:40.580
to do some custom functions.

00:44:40.580 --> 00:44:41.760
Yeah.

00:44:41.760 --> 00:44:42.320
Okay.

00:44:42.320 --> 00:44:44.780
It sounds really neat.

00:44:45.620 --> 00:44:46.700
And I think WebAssembly

00:44:46.700 --> 00:44:47.380
gives you

00:44:47.380 --> 00:44:49.320
a lot of flexibility,

00:44:49.320 --> 00:44:50.500
especially since there's,

00:44:50.500 --> 00:44:50.960
as you said,

00:44:50.960 --> 00:44:52.100
the web version.

00:44:52.100 --> 00:44:54.880
Is that WebAssembly version

00:44:54.880 --> 00:44:56.000
based on

00:44:56.000 --> 00:44:56.940
Pyoxide?

00:44:56.940 --> 00:44:58.700
Pyodide?

00:44:58.700 --> 00:44:59.400
Yep.

00:44:59.400 --> 00:45:00.180
Pyodide?

00:45:00.180 --> 00:45:00.480
Sorry,

00:45:00.480 --> 00:45:01.220
I'm mixing these together.

00:45:01.220 --> 00:45:02.880
Pyodide or PyScript?

00:45:02.880 --> 00:45:04.380
I know you did a lot of work

00:45:04.380 --> 00:45:05.280
with PyScript and that.

00:45:05.300 --> 00:45:06.480
PyScript and Pyodide,

00:45:06.480 --> 00:45:06.860
I believe.

00:45:06.860 --> 00:45:08.940
I don't know exactly

00:45:08.940 --> 00:45:09.860
which portions are which.

00:45:09.860 --> 00:45:11.020
It definitely relies

00:45:11.020 --> 00:45:11.760
on Pyodide

00:45:11.760 --> 00:45:13.040
for the WebAssembly runtime

00:45:13.040 --> 00:45:14.580
because we're using

00:45:14.580 --> 00:45:15.640
some of those data packages

00:45:15.640 --> 00:45:16.860
which are built

00:45:16.860 --> 00:45:17.620
against Pyodide.

00:45:17.620 --> 00:45:18.700
Okay.

00:45:18.700 --> 00:45:19.640
Yeah,

00:45:19.640 --> 00:45:20.220
that's really great.

00:45:20.220 --> 00:45:23.740
So what do you see

00:45:23.740 --> 00:45:24.360
people doing?

00:45:24.360 --> 00:45:24.940
I mean,

00:45:24.940 --> 00:45:26.140
you described some scenarios,

00:45:26.140 --> 00:45:26.940
but you got any

00:45:26.940 --> 00:45:27.740
interesting stories

00:45:27.740 --> 00:45:28.820
of what some things

00:45:28.820 --> 00:45:29.300
people are able

00:45:29.300 --> 00:45:30.160
to accomplish with this?

00:45:30.160 --> 00:45:30.780
Oh,

00:45:30.780 --> 00:45:31.060
well,

00:45:31.060 --> 00:45:32.900
so not the toolbox

00:45:32.900 --> 00:45:34.160
specifically,

00:45:34.160 --> 00:45:35.280
but with the

00:45:35.280 --> 00:45:36.180
Excel support,

00:45:36.180 --> 00:45:37.880
the Python for Excel support.

00:45:37.880 --> 00:45:39.020
Last week,

00:45:39.020 --> 00:45:39.840
we were in Chicago,

00:45:39.840 --> 00:45:40.820
Microsoft Ignite,

00:45:40.820 --> 00:45:43.000
and a gentleman

00:45:43.000 --> 00:45:44.060
from KPMG

00:45:44.060 --> 00:45:44.620
was talking about

00:45:44.620 --> 00:45:45.100
how he turned

00:45:45.100 --> 00:45:46.540
hundreds of lines

00:45:46.540 --> 00:45:51.060
of very involved

00:45:51.060 --> 00:45:52.240
VBA

00:45:52.240 --> 00:45:53.160
for doing this

00:45:53.160 --> 00:45:54.440
tax preparation analysis.

00:45:54.440 --> 00:45:56.160
He turned it into

00:45:56.160 --> 00:45:58.400
just a few dozen lines

00:45:58.400 --> 00:45:59.180
of Python code.

00:45:59.180 --> 00:46:01.880
Right.

00:46:01.880 --> 00:46:03.240
And so I think

00:46:03.240 --> 00:46:04.840
that is

00:46:04.840 --> 00:46:05.640
that speaks

00:46:05.640 --> 00:46:06.380
to the power

00:46:06.380 --> 00:46:07.420
of this

00:46:07.420 --> 00:46:08.020
in that

00:46:08.020 --> 00:46:12.220
what I hope

00:46:12.220 --> 00:46:12.700
to see

00:46:12.700 --> 00:46:13.180
is

00:46:13.180 --> 00:46:14.400
that

00:46:14.400 --> 00:46:15.680
many more people

00:46:15.680 --> 00:46:16.540
in the Excel

00:46:16.540 --> 00:46:16.940
environment

00:46:16.940 --> 00:46:18.160
are able to

00:46:18.160 --> 00:46:19.720
use the great tools

00:46:19.720 --> 00:46:20.260
we have for data

00:46:20.260 --> 00:46:21.200
transformation in Python,

00:46:21.200 --> 00:46:22.680
but more importantly

00:46:22.680 --> 00:46:23.460
that it brings

00:46:23.460 --> 00:46:23.900
the,

00:46:23.900 --> 00:46:24.700
it lowers

00:46:24.700 --> 00:46:25.200
and reduces

00:46:25.200 --> 00:46:25.740
the friction

00:46:25.740 --> 00:46:28.020
between the data

00:46:28.020 --> 00:46:28.640
science teams

00:46:28.640 --> 00:46:29.280
and their business

00:46:29.280 --> 00:46:29.760
stakeholders.

00:46:29.760 --> 00:46:30.620
I think data scientists

00:46:30.620 --> 00:46:31.400
get trapped a lot

00:46:31.400 --> 00:46:33.160
in becoming

00:46:33.160 --> 00:46:34.140
kind of the data

00:46:34.140 --> 00:46:35.020
monkeys for folks.

00:46:35.020 --> 00:46:35.320
Right.

00:46:35.320 --> 00:46:36.420
This Excel spreadsheet

00:46:36.420 --> 00:46:36.840
is awesome.

00:46:36.840 --> 00:46:37.480
Could you generate

00:46:37.480 --> 00:46:38.520
me one with the new

00:46:38.520 --> 00:46:39.220
data from today?

00:46:39.220 --> 00:46:40.140
Because now we've got

00:46:40.140 --> 00:46:40.760
more traffic.

00:46:40.760 --> 00:46:41.180
Or rerun the thing

00:46:41.180 --> 00:46:41.940
or whatever else.

00:46:41.940 --> 00:46:43.240
And what I hope

00:46:43.240 --> 00:46:43.600
actually,

00:46:43.600 --> 00:46:44.740
maybe the deeper,

00:46:44.740 --> 00:46:46.080
more transformational

00:46:46.080 --> 00:46:46.540
thing is,

00:46:46.540 --> 00:46:47.620
I hope it

00:46:47.620 --> 00:46:49.700
creates

00:46:49.700 --> 00:46:51.100
more interesting

00:46:51.100 --> 00:46:51.740
spreadsheets

00:46:51.740 --> 00:46:52.560
that causes

00:46:52.560 --> 00:46:53.280
all of these

00:46:53.280 --> 00:46:54.060
business users

00:46:54.060 --> 00:46:55.560
to be thinking,

00:46:55.560 --> 00:46:56.220
to have their eyes

00:46:56.220 --> 00:46:56.800
open about

00:46:56.800 --> 00:46:58.020
how much more

00:46:58.020 --> 00:46:58.880
interesting ways

00:46:58.880 --> 00:46:59.280
there are

00:46:59.280 --> 00:47:00.200
to think about

00:47:00.200 --> 00:47:01.520
their quantifiable

00:47:01.520 --> 00:47:02.100
problems,

00:47:02.100 --> 00:47:03.040
to run what-if

00:47:03.040 --> 00:47:03.560
analyses,

00:47:03.560 --> 00:47:04.580
to,

00:47:04.580 --> 00:47:05.180
you know,

00:47:05.180 --> 00:47:06.760
to slide a slider

00:47:06.760 --> 00:47:07.600
bar and say,

00:47:07.600 --> 00:47:08.220
okay,

00:47:08.220 --> 00:47:08.820
I want to see this

00:47:08.820 --> 00:47:09.080
weekly,

00:47:09.080 --> 00:47:09.460
monthly,

00:47:09.460 --> 00:47:09.880
yearly.

00:47:09.880 --> 00:47:10.600
I want to line

00:47:10.600 --> 00:47:10.900
to,

00:47:10.900 --> 00:47:11.400
you know,

00:47:11.400 --> 00:47:12.080
week starts

00:47:12.080 --> 00:47:12.660
or I want to

00:47:12.660 --> 00:47:13.720
start to calendar

00:47:13.720 --> 00:47:14.460
years or whatever

00:47:14.460 --> 00:47:14.760
else.

00:47:14.760 --> 00:47:15.820
Simple snapshot

00:47:15.820 --> 00:47:16.420
and kinds of

00:47:16.420 --> 00:47:16.780
things,

00:47:16.780 --> 00:47:18.100
which when you

00:47:18.100 --> 00:47:18.340
are,

00:47:18.340 --> 00:47:18.640
I think,

00:47:18.640 --> 00:47:19.080
a very,

00:47:19.080 --> 00:47:19.860
very experienced

00:47:19.860 --> 00:47:20.540
Excel person,

00:47:20.540 --> 00:47:21.380
you know you

00:47:21.380 --> 00:47:21.900
can do it,

00:47:21.900 --> 00:47:22.700
but it is a

00:47:22.700 --> 00:47:23.980
very involved

00:47:23.980 --> 00:47:24.500
process.

00:47:24.500 --> 00:47:25.220
It's like writing

00:47:25.220 --> 00:47:26.160
machine code,

00:47:26.660 --> 00:47:26.880
right?

00:47:26.880 --> 00:47:27.460
It's very

00:47:27.460 --> 00:47:27.920
involved.

00:47:27.920 --> 00:47:29.460
And so,

00:47:29.460 --> 00:47:30.720
with this,

00:47:30.720 --> 00:47:31.200
you can just

00:47:31.200 --> 00:47:31.380
say,

00:47:31.380 --> 00:47:31.640
oh,

00:47:31.640 --> 00:47:32.440
with three

00:47:32.440 --> 00:47:32.800
lines of

00:47:32.800 --> 00:47:33.100
Python,

00:47:33.100 --> 00:47:33.600
I've now

00:47:33.600 --> 00:47:34.180
transformed my

00:47:34.180 --> 00:47:34.880
data in bulk.

00:47:34.880 --> 00:47:36.040
It's vector

00:47:36.040 --> 00:47:36.840
oriented and

00:47:36.840 --> 00:47:37.600
array oriented,

00:47:37.600 --> 00:47:38.600
data frame oriented.

00:47:38.600 --> 00:47:39.580
I think the more

00:47:39.580 --> 00:47:40.200
people think about

00:47:40.200 --> 00:47:40.620
that and the

00:47:40.620 --> 00:47:41.280
more they realize

00:47:41.280 --> 00:47:42.420
how easy it is

00:47:42.420 --> 00:47:43.060
to do pivot

00:47:43.060 --> 00:47:44.060
tables with just

00:47:44.060 --> 00:47:44.900
switching two or

00:47:44.900 --> 00:47:45.520
three parameters

00:47:45.520 --> 00:47:46.560
in a couple of

00:47:46.560 --> 00:47:47.440
lines of pandas

00:47:47.440 --> 00:47:48.200
or polars code,

00:47:48.200 --> 00:47:48.880
like,

00:47:48.880 --> 00:47:50.440
mind blown,

00:47:50.440 --> 00:47:51.140
right?

00:47:51.140 --> 00:47:52.000
As opposed to

00:47:52.000 --> 00:47:52.480
clicking around

00:47:52.480 --> 00:47:53.340
on UIs all the

00:47:53.340 --> 00:47:53.580
time.

00:47:53.580 --> 00:47:53.860
So,

00:47:53.860 --> 00:47:54.620
I'm really...

00:47:54.620 --> 00:47:54.920
I think it's

00:47:54.920 --> 00:47:55.240
going to be a

00:47:55.240 --> 00:47:55.540
gateway.

00:47:55.540 --> 00:47:56.200
Yeah,

00:47:56.320 --> 00:47:56.660
I'm really

00:47:56.660 --> 00:47:57.000
hoping,

00:47:57.000 --> 00:47:57.720
yeah.

00:47:57.720 --> 00:47:58.720
Yeah,

00:47:58.720 --> 00:47:59.220
I think the way

00:47:59.220 --> 00:48:00.420
that Python has

00:48:00.420 --> 00:48:01.100
kind of brought

00:48:01.100 --> 00:48:02.440
people who didn't

00:48:02.440 --> 00:48:03.140
see themselves as

00:48:03.140 --> 00:48:03.700
data scientists

00:48:03.700 --> 00:48:04.520
into the data

00:48:04.520 --> 00:48:05.220
science realm

00:48:05.220 --> 00:48:05.880
and eventually

00:48:05.880 --> 00:48:06.460
they're like,

00:48:06.460 --> 00:48:06.900
fine,

00:48:06.900 --> 00:48:07.280
I'm just going to

00:48:07.280 --> 00:48:07.900
work in notebooks

00:48:07.900 --> 00:48:08.960
instead of my

00:48:08.960 --> 00:48:09.600
other tools or

00:48:09.600 --> 00:48:09.780
whatever.

00:48:09.780 --> 00:48:11.160
I feel like

00:48:11.160 --> 00:48:12.180
this could have

00:48:12.180 --> 00:48:14.020
a similar effect.

00:48:14.020 --> 00:48:14.300
Like,

00:48:14.300 --> 00:48:15.400
this is really

00:48:15.400 --> 00:48:15.700
cool.

00:48:15.700 --> 00:48:16.600
I didn't know

00:48:16.600 --> 00:48:17.020
we could do

00:48:17.020 --> 00:48:17.260
this.

00:48:17.260 --> 00:48:17.580
And then,

00:48:17.580 --> 00:48:18.920
so this is all

00:48:18.920 --> 00:48:19.240
Python.

00:48:19.240 --> 00:48:19.480
Yeah,

00:48:19.480 --> 00:48:19.720
this is all

00:48:19.720 --> 00:48:20.100
Python in the

00:48:20.100 --> 00:48:20.380
back end.

00:48:20.380 --> 00:48:21.560
Maybe we should

00:48:21.560 --> 00:48:22.660
just do that

00:48:22.660 --> 00:48:23.160
directly.

00:48:23.160 --> 00:48:23.560
You know what I

00:48:23.560 --> 00:48:23.700
mean?

00:48:23.700 --> 00:48:25.180
Sort of work,

00:48:25.180 --> 00:48:25.980
get their feet wet

00:48:25.980 --> 00:48:27.040
move into that

00:48:27.040 --> 00:48:27.480
direction.

00:48:27.480 --> 00:48:27.940
So,

00:48:27.940 --> 00:48:28.940
yeah.

00:48:28.940 --> 00:48:30.660
Yeah,

00:48:30.660 --> 00:48:31.360
I'm trying to get

00:48:31.360 --> 00:48:32.140
my folks here to

00:48:32.140 --> 00:48:32.660
get those links

00:48:32.660 --> 00:48:33.520
across to you so

00:48:33.520 --> 00:48:33.880
you can put those

00:48:33.880 --> 00:48:34.460
in the show notes.

00:48:34.460 --> 00:48:35.080
Yeah.

00:48:35.080 --> 00:48:35.160
So,

00:48:35.160 --> 00:48:37.900
I think it's going

00:48:37.900 --> 00:48:38.840
to have that

00:48:38.840 --> 00:48:39.460
kind of interesting

00:48:39.460 --> 00:48:39.740
effect.

00:48:39.740 --> 00:48:40.420
The reason I brought

00:48:40.420 --> 00:48:41.180
up this,

00:48:41.180 --> 00:48:42.420
eight of the biggest

00:48:42.420 --> 00:48:43.400
Excel mistakes

00:48:43.400 --> 00:48:43.700
things of all the

00:48:43.700 --> 00:48:43.860
time,

00:48:43.860 --> 00:48:44.800
there's all these

00:48:44.800 --> 00:48:45.520
different articles

00:48:45.520 --> 00:48:49.560
of weird things

00:48:49.560 --> 00:48:50.140
because,

00:48:50.140 --> 00:48:51.180
for example,

00:48:51.180 --> 00:48:52.180
MI5 bugged the

00:48:52.180 --> 00:48:52.820
wrong phones

00:48:52.820 --> 00:48:53.420
because there was

00:48:53.420 --> 00:48:54.200
some formatting

00:48:54.200 --> 00:48:54.920
error that

00:48:54.920 --> 00:48:56.060
autofilled or

00:48:56.060 --> 00:48:57.320
we had to

00:48:57.320 --> 00:48:57.860
change the name

00:48:57.860 --> 00:48:58.500
of a gene

00:48:58.500 --> 00:48:59.140
because it kept

00:48:59.140 --> 00:48:59.740
getting cars

00:48:59.740 --> 00:49:00.320
as March

00:49:00.320 --> 00:49:00.840
and all this

00:49:00.840 --> 00:49:02.440
random craziness.

00:49:02.440 --> 00:49:02.700
Right?

00:49:02.700 --> 00:49:02.900
Right,

00:49:02.900 --> 00:49:03.140
right,

00:49:03.140 --> 00:49:03.340
right.

00:49:03.840 --> 00:49:04.320
So,

00:49:04.320 --> 00:49:05.400
I think having

00:49:05.400 --> 00:49:07.320
Python available

00:49:07.320 --> 00:49:08.500
because to me,

00:49:08.500 --> 00:49:09.380
Excel feels like

00:49:09.380 --> 00:49:10.780
the world's most

00:49:10.780 --> 00:49:11.500
insane,

00:49:11.500 --> 00:49:12.560
non-visible set

00:49:12.560 --> 00:49:13.480
of go-to statements.

00:49:13.480 --> 00:49:14.380
I go here,

00:49:14.380 --> 00:49:14.980
then I go to that

00:49:14.980 --> 00:49:15.240
cell,

00:49:15.240 --> 00:49:15.980
then I go to here,

00:49:15.980 --> 00:49:16.620
then I go over

00:49:16.620 --> 00:49:16.860
there,

00:49:16.860 --> 00:49:17.300
and then we do

00:49:17.300 --> 00:49:17.620
this,

00:49:17.620 --> 00:49:18.580
but you can't

00:49:18.580 --> 00:49:19.120
look at the

00:49:19.120 --> 00:49:19.660
spreadsheet

00:49:19.660 --> 00:49:21.500
and know that

00:49:21.500 --> 00:49:22.100
that's what it's

00:49:22.100 --> 00:49:22.500
doing,

00:49:22.500 --> 00:49:23.200
right?

00:49:23.200 --> 00:49:25.040
But with Python

00:49:25.040 --> 00:49:25.540
in there,

00:49:25.540 --> 00:49:26.280
you have a much

00:49:26.280 --> 00:49:27.840
more structured

00:49:27.840 --> 00:49:28.620
way of thinking

00:49:28.620 --> 00:49:29.260
about your data

00:49:29.260 --> 00:49:29.660
and you're not

00:49:29.660 --> 00:49:30.520
forced into

00:49:30.520 --> 00:49:32.540
17 interconnected

00:49:32.540 --> 00:49:33.240
go-to statements.

00:49:33.240 --> 00:49:33.660
Yeah,

00:49:33.660 --> 00:49:34.560
and you reminded

00:49:34.560 --> 00:49:34.960
me of the thing

00:49:34.960 --> 00:49:36.140
which I said

00:49:36.140 --> 00:49:36.680
before and I just

00:49:36.680 --> 00:49:37.540
forgot to mention

00:49:37.540 --> 00:49:39.620
that if you put

00:49:39.620 --> 00:49:40.300
more of the business

00:49:40.300 --> 00:49:41.060
logic into the

00:49:41.060 --> 00:49:41.660
Python code,

00:49:41.660 --> 00:49:41.840
well,

00:49:41.840 --> 00:49:42.200
guess what?

00:49:42.200 --> 00:49:42.980
You can check

00:49:42.980 --> 00:49:43.820
in Python code

00:49:43.820 --> 00:49:44.840
and you can

00:49:44.840 --> 00:49:46.100
diff Python code

00:49:46.100 --> 00:49:47.120
and it uses

00:49:47.120 --> 00:49:47.860
variable names

00:49:47.860 --> 00:49:48.460
and variable

00:49:48.460 --> 00:49:48.880
references.

00:49:48.880 --> 00:49:49.520
And if you do

00:49:49.520 --> 00:49:50.100
a little bit

00:49:50.100 --> 00:49:51.240
of hygienic

00:49:51.240 --> 00:49:52.160
approach to this,

00:49:52.160 --> 00:49:53.100
you set your

00:49:53.100 --> 00:49:53.880
variable references

00:49:53.880 --> 00:49:54.500
to cell range

00:49:54.500 --> 00:49:54.980
to the top,

00:49:54.980 --> 00:49:55.640
then you manipulate

00:49:55.640 --> 00:49:56.280
the variables

00:49:56.280 --> 00:49:56.920
and then you put

00:49:56.920 --> 00:49:57.300
the outputs

00:49:57.300 --> 00:49:57.800
down there

00:49:57.800 --> 00:49:59.320
and now you

00:49:59.320 --> 00:50:00.180
really have

00:50:00.180 --> 00:50:00.880
very clean

00:50:00.880 --> 00:50:01.520
business logic

00:50:01.520 --> 00:50:02.080
you can follow.

00:50:02.960 --> 00:50:03.620
not to say

00:50:03.620 --> 00:50:03.920
that Python

00:50:03.920 --> 00:50:04.300
doesn't have

00:50:04.300 --> 00:50:04.760
its warts,

00:50:04.760 --> 00:50:05.140
of course,

00:50:05.140 --> 00:50:05.900
I'm not some

00:50:05.900 --> 00:50:06.180
like,

00:50:06.180 --> 00:50:06.380
you know,

00:50:06.380 --> 00:50:06.640
whatever.

00:50:06.640 --> 00:50:07.900
I see,

00:50:07.900 --> 00:50:08.540
I know how

00:50:08.540 --> 00:50:09.420
complex a Jupyter

00:50:09.420 --> 00:50:10.020
notebook can get

00:50:10.020 --> 00:50:10.440
for instance,

00:50:10.440 --> 00:50:11.360
but at the end

00:50:11.360 --> 00:50:11.880
of the day,

00:50:11.880 --> 00:50:13.020
you're absolutely

00:50:13.020 --> 00:50:14.220
right that Excel

00:50:14.220 --> 00:50:15.380
is at the same

00:50:15.380 --> 00:50:15.880
time both

00:50:15.880 --> 00:50:16.680
so functional,

00:50:16.680 --> 00:50:17.020
right?

00:50:17.020 --> 00:50:17.760
It is a data flow

00:50:17.760 --> 00:50:18.220
language,

00:50:18.220 --> 00:50:19.040
it is immediate

00:50:19.040 --> 00:50:19.520
mode,

00:50:19.520 --> 00:50:21.040
dependency graph

00:50:21.040 --> 00:50:21.480
oriented,

00:50:21.480 --> 00:50:22.000
you know,

00:50:22.000 --> 00:50:22.880
in the grid.

00:50:22.880 --> 00:50:23.720
A lot of good

00:50:23.720 --> 00:50:24.160
things about

00:50:24.160 --> 00:50:24.700
reactive,

00:50:24.700 --> 00:50:25.380
live,

00:50:25.380 --> 00:50:26.240
a lot of great

00:50:26.240 --> 00:50:26.640
things about

00:50:26.640 --> 00:50:27.260
that model

00:50:27.260 --> 00:50:28.640
for normals,

00:50:28.640 --> 00:50:29.180
for normies,

00:50:29.180 --> 00:50:29.600
for muggles,

00:50:29.600 --> 00:50:30.160
whatever you want to call

00:50:30.160 --> 00:50:30.280
them,

00:50:30.280 --> 00:50:31.260
people who are not

00:50:31.260 --> 00:50:32.740
imperative iterated state

00:50:32.740 --> 00:50:34.140
machine coders like we

00:50:34.140 --> 00:50:34.400
are,

00:50:34.400 --> 00:50:34.680
right?

00:50:34.680 --> 00:50:36.580
But there is a place

00:50:36.580 --> 00:50:37.520
for that too,

00:50:37.520 --> 00:50:38.020
right?

00:50:38.020 --> 00:50:38.620
Because you're absolutely

00:50:38.620 --> 00:50:38.940
right,

00:50:38.940 --> 00:50:40.480
people will have these

00:50:40.480 --> 00:50:41.540
like weird linkages

00:50:41.540 --> 00:50:42.340
between different bits

00:50:42.340 --> 00:50:43.600
and pieces when what

00:50:43.600 --> 00:50:45.460
they really wanted was

00:50:45.460 --> 00:50:46.420
a couple of named

00:50:46.420 --> 00:50:47.880
references and then

00:50:47.880 --> 00:50:49.160
some iterative logic

00:50:49.160 --> 00:50:50.340
or imperative logic on

00:50:50.340 --> 00:50:51.060
those things with a

00:50:51.060 --> 00:50:51.560
branch statement

00:50:51.560 --> 00:50:51.940
somewhere.

00:50:52.500 --> 00:50:52.800
you know,

00:50:52.800 --> 00:50:53.500
a couple of

00:50:53.500 --> 00:50:53.900
for loops,

00:50:53.900 --> 00:50:54.620
nif then statement

00:50:54.620 --> 00:50:55.960
can go a long way

00:50:55.960 --> 00:50:57.160
to simplifying

00:50:57.160 --> 00:50:58.140
very complicated

00:50:58.140 --> 00:50:58.780
data flows.

00:50:58.780 --> 00:50:59.440
Yeah,

00:50:59.440 --> 00:51:00.600
that and

00:51:00.600 --> 00:51:02.160
vector math

00:51:02.160 --> 00:51:03.000
rather than

00:51:03.000 --> 00:51:04.620
copy the formula,

00:51:04.620 --> 00:51:05.360
drag it down

00:51:05.360 --> 00:51:06.380
20,000 rows.

00:51:06.380 --> 00:51:06.860
Right.

00:51:06.860 --> 00:51:07.940
At least they warn you

00:51:07.940 --> 00:51:08.160
now,

00:51:08.160 --> 00:51:09.140
at least they warn you

00:51:09.140 --> 00:51:09.860
again when like

00:51:09.860 --> 00:51:10.560
you're off by one

00:51:10.560 --> 00:51:11.040
and you forgot

00:51:11.040 --> 00:51:12.060
you omitted a value.

00:51:12.060 --> 00:51:12.480
There's like a little

00:51:12.480 --> 00:51:13.100
yellow triangle.

00:51:13.100 --> 00:51:13.560
Okay,

00:51:13.560 --> 00:51:13.960
that's good.

00:51:13.960 --> 00:51:14.560
That's good.

00:51:14.560 --> 00:51:14.960
Yeah.

00:51:14.960 --> 00:51:17.800
Nice.

00:51:17.800 --> 00:51:18.180
All right,

00:51:18.180 --> 00:51:18.360
well,

00:51:18.360 --> 00:51:18.760
let's,

00:51:18.760 --> 00:51:19.840
you know,

00:51:19.840 --> 00:51:20.620
let's talk about

00:51:20.620 --> 00:51:21.520
a couple other things

00:51:21.520 --> 00:51:22.240
while you hear

00:51:22.240 --> 00:51:23.160
that you all are into.

00:51:23.160 --> 00:51:25.560
We just,

00:51:25.560 --> 00:51:27.140
there we go.

00:51:27.140 --> 00:51:28.500
We just had

00:51:28.500 --> 00:51:30.200
Fabio drop in

00:51:30.200 --> 00:51:32.060
and he

00:51:32.060 --> 00:51:33.700
did a lot of the work.

00:51:33.700 --> 00:51:34.500
I've had him on the show

00:51:34.500 --> 00:51:35.200
at least once,

00:51:35.200 --> 00:51:36.240
maybe twice,

00:51:36.240 --> 00:51:37.560
to talk about PyScript.

00:51:37.560 --> 00:51:38.280
Do you want to give us

00:51:38.280 --> 00:51:39.180
a PyScript update?

00:51:39.180 --> 00:51:39.980
Yeah,

00:51:39.980 --> 00:51:40.360
I mean,

00:51:40.360 --> 00:51:40.940
they've been just,

00:51:40.940 --> 00:51:41.380
yeah,

00:51:41.380 --> 00:51:41.780
they've been.

00:51:41.780 --> 00:51:42.660
MicroPython,

00:51:42.660 --> 00:51:43.100
by the way,

00:51:43.100 --> 00:51:44.820
this is huge right here.

00:51:44.820 --> 00:51:45.300
Yeah,

00:51:45.300 --> 00:51:46.380
like it just works,

00:51:46.380 --> 00:51:46.840
right?

00:51:46.840 --> 00:51:48.160
Yeah,

00:51:48.160 --> 00:51:48.640
tell us about it.

00:51:48.640 --> 00:51:49.360
Well,

00:51:49.360 --> 00:51:50.480
so when we first

00:51:50.480 --> 00:51:51.160
released PyScript,

00:51:51.160 --> 00:51:52.360
it was,

00:51:52.360 --> 00:51:54.080
it was a sort of

00:51:54.080 --> 00:51:54.940
proof of concept,

00:51:54.940 --> 00:51:55.180
like,

00:51:55.180 --> 00:51:55.700
oh my God,

00:51:55.700 --> 00:51:56.140
you can,

00:51:56.140 --> 00:51:57.080
with doing some

00:51:57.080 --> 00:51:58.260
like interesting things,

00:51:58.260 --> 00:51:59.120
you can now just be writing

00:51:59.120 --> 00:52:00.580
bracket PyDash script

00:52:00.580 --> 00:52:01.620
inside HTML

00:52:01.620 --> 00:52:02.820
and be executing

00:52:02.820 --> 00:52:03.460
first class.

00:52:03.460 --> 00:52:04.460
But we were running

00:52:04.460 --> 00:52:05.440
on Pyodide,

00:52:05.440 --> 00:52:07.000
which is a full-on

00:52:07.000 --> 00:52:08.080
CPython build

00:52:08.080 --> 00:52:09.300
and it can then

00:52:09.300 --> 00:52:10.120
import things like

00:52:10.120 --> 00:52:10.620
NumPy

00:52:10.620 --> 00:52:11.880
and Matplotlib.

00:52:11.880 --> 00:52:13.020
But,

00:52:13.020 --> 00:52:13.960
but it was kind of

00:52:13.960 --> 00:52:14.580
heavy to load.

00:52:14.580 --> 00:52:15.060
It was a lot.

00:52:15.060 --> 00:52:16.060
Right.

00:52:16.060 --> 00:52:16.900
It was more designed

00:52:16.900 --> 00:52:17.840
for things like

00:52:17.840 --> 00:52:19.140
Jupyter Lite

00:52:19.140 --> 00:52:19.920
and these,

00:52:19.920 --> 00:52:20.580
we're like,

00:52:20.580 --> 00:52:21.580
we're going to load up

00:52:21.580 --> 00:52:22.160
a big notebook

00:52:22.160 --> 00:52:22.780
and we're going to do

00:52:22.780 --> 00:52:23.260
awesome,

00:52:23.260 --> 00:52:24.920
awesome stuff.

00:52:24.920 --> 00:52:25.300
It's zero install,

00:52:25.300 --> 00:52:25.720
right?

00:52:25.720 --> 00:52:26.920
It's like you literally

00:52:26.920 --> 00:52:27.920
can just run everything

00:52:27.920 --> 00:52:28.400
in the browser

00:52:28.400 --> 00:52:29.540
without installing anything

00:52:29.540 --> 00:52:30.380
because it's really

00:52:30.380 --> 00:52:31.320
downloading everything

00:52:31.320 --> 00:52:31.980
into the browser.

00:52:31.980 --> 00:52:32.320
Yeah,

00:52:32.320 --> 00:52:33.520
which is fine

00:52:33.520 --> 00:52:34.260
if you just start up

00:52:34.260 --> 00:52:34.540
once,

00:52:34.540 --> 00:52:35.120
but if you're trying

00:52:35.120 --> 00:52:35.600
to build

00:52:35.600 --> 00:52:38.460
a consumer-facing

00:52:38.460 --> 00:52:39.100
web app,

00:52:39.100 --> 00:52:40.360
it might be way too heavy.

00:52:40.360 --> 00:52:40.720
Exactly.

00:52:40.720 --> 00:52:41.320
It's not really

00:52:41.320 --> 00:52:42.320
a replacement for that.

00:52:42.440 --> 00:52:42.980
So what we did

00:52:42.980 --> 00:52:44.000
most recently,

00:52:44.000 --> 00:52:44.840
number one,

00:52:44.840 --> 00:52:45.760
we added MicroPython

00:52:45.760 --> 00:52:46.380
support.

00:52:46.380 --> 00:52:47.440
MicroPython

00:52:47.440 --> 00:52:49.460
is less than 80 kilobytes

00:52:49.460 --> 00:52:49.860
or so,

00:52:49.860 --> 00:52:49.960
no,

00:52:49.960 --> 00:52:50.940
maybe 300 kilobytes.

00:52:50.940 --> 00:52:51.240
Now,

00:52:51.240 --> 00:52:52.160
PyScript and MicroPython

00:52:52.160 --> 00:52:53.420
together is like 300 kilobytes

00:52:53.420 --> 00:52:55.300
and it starts in

00:52:55.300 --> 00:52:56.060
under a second.

00:52:56.060 --> 00:52:57.360
So now you really

00:52:57.360 --> 00:52:58.520
can use Python

00:52:58.520 --> 00:52:59.460
instead of JavaScript

00:52:59.460 --> 00:53:00.920
to go and do things

00:53:00.920 --> 00:53:01.400
in the DOM.

00:53:01.400 --> 00:53:02.740
So we have full DOM support.

00:53:02.740 --> 00:53:03.800
You know,

00:53:03.800 --> 00:53:04.800
there's a native web API

00:53:04.800 --> 00:53:05.900
to manipulate the DOM

00:53:05.900 --> 00:53:07.420
and it supports

00:53:07.420 --> 00:53:08.520
web workers

00:53:08.520 --> 00:53:09.200
and async

00:53:09.200 --> 00:53:10.140
and blocking calls

00:53:10.140 --> 00:53:10.960
and native storage.

00:53:10.960 --> 00:53:12.420
So you can actually,

00:53:12.420 --> 00:53:15.180
use the MicroPython bit

00:53:15.180 --> 00:53:15.980
and that's where

00:53:15.980 --> 00:53:17.800
the bracket mpy-script

00:53:17.800 --> 00:53:19.040
and that loads

00:53:19.040 --> 00:53:20.040
with the MicroPython environment

00:53:20.040 --> 00:53:21.580
and you can now be

00:53:21.580 --> 00:53:22.360
then loading

00:53:22.360 --> 00:53:24.660
the full Pyodide PyScript

00:53:24.660 --> 00:53:25.580
in the back end

00:53:25.580 --> 00:53:27.240
and as an asynchronous

00:53:27.240 --> 00:53:28.100
sort of web worker.

00:53:28.100 --> 00:53:29.500
So it's really

00:53:29.500 --> 00:53:30.200
an interesting thing

00:53:30.200 --> 00:53:31.020
that is,

00:53:31.020 --> 00:53:33.560
you can do a lot

00:53:33.560 --> 00:53:34.100
of interesting things

00:53:34.100 --> 00:53:34.520
with it now,

00:53:34.520 --> 00:53:34.880
I think.

00:53:34.880 --> 00:53:36.440
And we have experimental

00:53:36.440 --> 00:53:37.400
support for R

00:53:37.400 --> 00:53:38.180
so we've not left

00:53:38.180 --> 00:53:39.440
our R friends

00:53:39.440 --> 00:53:39.920
in the data science

00:53:39.920 --> 00:53:40.560
community behind.

00:53:41.500 --> 00:53:42.620
so that'll be great

00:53:42.620 --> 00:53:43.160
and,

00:53:43.160 --> 00:53:44.540
you know,

00:53:44.540 --> 00:53:45.220
we have some basic

00:53:45.220 --> 00:53:46.440
LLM and AI demos

00:53:46.440 --> 00:53:48.720
and there's people

00:53:48.720 --> 00:53:49.780
working on running this

00:53:49.780 --> 00:53:51.380
on microcontrollers

00:53:51.380 --> 00:53:52.100
and so you can go

00:53:52.100 --> 00:53:52.720
manipulate,

00:53:52.720 --> 00:53:53.260
you know,

00:53:53.260 --> 00:53:55.160
embedded devices

00:53:55.160 --> 00:53:55.620
and everything.

00:53:55.620 --> 00:53:56.940
So it's just a fun,

00:53:56.940 --> 00:53:57.660
fun thing.

00:53:57.660 --> 00:53:58.300
Community is building

00:53:58.300 --> 00:53:59.060
interesting things.

00:53:59.060 --> 00:53:59.800
At PyCon,

00:53:59.800 --> 00:54:00.860
Lukash gave a really

00:54:00.860 --> 00:54:01.480
interesting talk

00:54:01.480 --> 00:54:02.200
showing how to do

00:54:02.200 --> 00:54:02.800
like 3D,

00:54:02.800 --> 00:54:04.020
like WebGL

00:54:04.020 --> 00:54:04.720
kind of stuff

00:54:04.720 --> 00:54:07.960
with PyScript.

00:54:07.960 --> 00:54:09.240
So I would say

00:54:09.240 --> 00:54:09.420
just,

00:54:09.420 --> 00:54:09.740
yeah,

00:54:09.740 --> 00:54:10.540
we're sort of

00:54:10.540 --> 00:54:11.060
right now,

00:54:11.060 --> 00:54:12.640
you know,

00:54:12.640 --> 00:54:13.460
we have PyScript.com

00:54:13.460 --> 00:54:13.780
where if you want

00:54:13.780 --> 00:54:14.160
to build things

00:54:14.160 --> 00:54:14.620
and share them

00:54:14.620 --> 00:54:15.020
more easily,

00:54:15.020 --> 00:54:15.560
that's great.

00:54:15.560 --> 00:54:16.620
But if you just

00:54:16.620 --> 00:54:17.220
want to use this

00:54:17.220 --> 00:54:18.100
as a technology,

00:54:18.100 --> 00:54:20.120
you totally should.

00:54:20.120 --> 00:54:21.120
Just take it

00:54:21.120 --> 00:54:21.520
and play with it

00:54:21.520 --> 00:54:21.860
and make little

00:54:21.860 --> 00:54:22.420
things with it.

00:54:22.420 --> 00:54:23.660
Now,

00:54:23.660 --> 00:54:25.220
there's weekly calls,

00:54:25.220 --> 00:54:25.580
I think,

00:54:25.580 --> 00:54:26.420
community calls

00:54:26.420 --> 00:54:26.900
that we do.

00:54:26.900 --> 00:54:28.000
Just join in,

00:54:28.000 --> 00:54:28.640
hop in on the Discord

00:54:28.640 --> 00:54:29.480
and just get involved.

00:54:29.480 --> 00:54:30.140
I think it's a really

00:54:30.140 --> 00:54:30.600
fun thing.

00:54:31.680 --> 00:54:31.840
Yeah,

00:54:31.840 --> 00:54:32.560
I'm really,

00:54:32.560 --> 00:54:33.400
I'm very excited

00:54:33.400 --> 00:54:33.680
about it.

00:54:33.680 --> 00:54:34.620
I would love to see

00:54:34.620 --> 00:54:37.640
something like a view

00:54:37.640 --> 00:54:39.080
or a React

00:54:39.080 --> 00:54:39.700
just,

00:54:39.700 --> 00:54:41.280
where just,

00:54:41.280 --> 00:54:42.300
here's your front end

00:54:42.300 --> 00:54:43.080
and you get to write it

00:54:43.080 --> 00:54:44.460
in this language

00:54:44.460 --> 00:54:45.100
you all love

00:54:45.100 --> 00:54:45.740
and already know.

00:54:45.740 --> 00:54:47.020
I'm not necessarily

00:54:47.020 --> 00:54:47.820
hating on JavaScript,

00:54:47.820 --> 00:54:48.140
but,

00:54:48.140 --> 00:54:49.340
you know,

00:54:49.340 --> 00:54:50.500
it's just not,

00:54:50.500 --> 00:54:51.400
yeah,

00:54:51.400 --> 00:54:51.660
I know,

00:54:51.660 --> 00:54:53.180
but I'm not intent,

00:54:53.180 --> 00:54:54.440
my thought more is

00:54:54.440 --> 00:54:56.020
you're already

00:54:56.020 --> 00:54:57.140
working in one language.

00:54:57.140 --> 00:54:58.160
Why do I need

00:54:58.160 --> 00:54:59.580
to do a second language

00:54:59.580 --> 00:55:00.740
just because of

00:55:00.740 --> 00:55:01.620
the place in which

00:55:01.620 --> 00:55:02.200
that language

00:55:02.200 --> 00:55:02.840
executes

00:55:02.840 --> 00:55:04.360
is so dramatically

00:55:04.360 --> 00:55:04.880
limited,

00:55:04.880 --> 00:55:05.660
right?

00:55:05.660 --> 00:55:06.300
It's the whole reason

00:55:06.300 --> 00:55:07.120
that Node became

00:55:07.120 --> 00:55:07.940
a thing is

00:55:07.940 --> 00:55:08.560
we're already

00:55:08.560 --> 00:55:09.120
doing JavaScript.

00:55:09.120 --> 00:55:09.720
Can we just keep

00:55:09.720 --> 00:55:10.280
doing JavaScript?

00:55:10.280 --> 00:55:11.140
That's right.

00:55:11.140 --> 00:55:11.400
Well,

00:55:11.400 --> 00:55:12.580
for Python people,

00:55:12.580 --> 00:55:13.940
it's just reverse that,

00:55:13.940 --> 00:55:14.180
right?

00:55:14.180 --> 00:55:14.580
Right,

00:55:14.580 --> 00:55:15.140
right.

00:55:15.140 --> 00:55:16.200
And there's a lot

00:55:16.200 --> 00:55:17.100
of really nice frameworks

00:55:17.100 --> 00:55:18.660
for front end stuff.

00:55:18.660 --> 00:55:19.440
And the nice thing

00:55:19.440 --> 00:55:19.780
about PyScript

00:55:19.780 --> 00:55:21.240
is that it is pretty easy

00:55:21.240 --> 00:55:22.260
to use the JavaScript bridge

00:55:22.260 --> 00:55:22.840
to call to all

00:55:22.840 --> 00:55:23.440
of those things,

00:55:23.440 --> 00:55:24.080
right?

00:55:24.080 --> 00:55:24.620
What we don't have

00:55:24.620 --> 00:55:25.900
is a Python wrapper

00:55:25.900 --> 00:55:26.620
around those things

00:55:26.620 --> 00:55:27.380
so you can keep

00:55:27.380 --> 00:55:28.640
staying in the Python language.

00:55:28.640 --> 00:55:29.040
Yes,

00:55:29.040 --> 00:55:29.280
exactly.

00:55:29.280 --> 00:55:29.300
You have to use

00:55:29.300 --> 00:55:30.200
little proxy objects.

00:55:30.200 --> 00:55:31.260
But for the most part,

00:55:31.300 --> 00:55:32.500
it's pretty nice

00:55:32.500 --> 00:55:32.800
to,

00:55:32.800 --> 00:55:34.180
like some on the examples,

00:55:34.180 --> 00:55:35.540
the 3.js examples,

00:55:35.540 --> 00:55:36.340
some of these other things

00:55:36.340 --> 00:55:37.420
show how you can,

00:55:37.420 --> 00:55:37.740
you know,

00:55:37.740 --> 00:55:38.660
manipulate the JavaScript

00:55:38.660 --> 00:55:39.500
objects directly.

00:55:39.500 --> 00:55:42.060
And we're just,

00:55:42.060 --> 00:55:42.380
you know,

00:55:42.380 --> 00:55:42.940
looking for more people

00:55:42.940 --> 00:55:43.700
to add interesting

00:55:43.700 --> 00:55:44.260
things to it.

00:55:44.260 --> 00:55:45.680
But I agree with you.

00:55:45.680 --> 00:55:46.960
Something that is

00:55:46.960 --> 00:55:47.720
like a,

00:55:47.720 --> 00:55:48.640
you know,

00:55:48.640 --> 00:55:50.540
a Vue.js

00:55:50.540 --> 00:55:51.840
or React kind of thing

00:55:51.840 --> 00:55:52.880
that's natively PyScript

00:55:52.880 --> 00:55:53.480
would be,

00:55:53.480 --> 00:55:54.740
I think,

00:55:54.740 --> 00:55:55.320
really unlock

00:55:55.320 --> 00:55:56.100
kind of that next phase

00:55:56.100 --> 00:55:56.780
of community growth

00:55:56.780 --> 00:55:58.280
and developer excitement.

00:55:58.280 --> 00:55:58.420
Yeah.

00:55:58.420 --> 00:55:59.180
Yeah,

00:55:59.180 --> 00:55:59.360
yeah.

00:55:59.360 --> 00:56:01.060
It feels like

00:56:01.060 --> 00:56:03.020
the notebook

00:56:03.020 --> 00:56:03.720
in the browser

00:56:03.720 --> 00:56:06.160
deal is almost nailed.

00:56:06.160 --> 00:56:06.900
Right.

00:56:06.900 --> 00:56:07.440
But the,

00:56:07.440 --> 00:56:09.320
I'm going to replace

00:56:09.320 --> 00:56:11.200
my React front end

00:56:11.200 --> 00:56:12.360
with a Python front end.

00:56:13.360 --> 00:56:14.060
that's probably

00:56:14.060 --> 00:56:14.860
the next frontier.

00:56:14.860 --> 00:56:15.440
Yeah.

00:56:15.440 --> 00:56:16.740
Maybe what I ought to do

00:56:16.740 --> 00:56:17.460
is I ought to put

00:56:17.460 --> 00:56:18.380
a bounty up there

00:56:18.380 --> 00:56:19.700
for someone to build

00:56:19.700 --> 00:56:21.380
a PyScript,

00:56:21.380 --> 00:56:24.340
PyScript React

00:56:24.340 --> 00:56:25.960
thing embedded

00:56:25.960 --> 00:56:27.400
inside a Wasm object

00:56:27.400 --> 00:56:28.160
or Wasm container

00:56:28.160 --> 00:56:30.000
on the app protocol

00:56:30.000 --> 00:56:31.380
and just put like

00:56:31.380 --> 00:56:32.760
a $20,000 bounty out there

00:56:32.760 --> 00:56:33.640
and see who gets

00:56:33.640 --> 00:56:34.220
there first.

00:56:34.220 --> 00:56:34.800
Because I think

00:56:34.800 --> 00:56:36.300
that would show us

00:56:36.300 --> 00:56:36.900
how it could get done.

00:56:36.900 --> 00:56:37.600
There are some things

00:56:37.600 --> 00:56:38.520
in decentralized web,

00:56:38.520 --> 00:56:39.740
these frame objects

00:56:39.740 --> 00:56:40.160
and whatnot

00:56:40.160 --> 00:56:41.260
that are there

00:56:41.260 --> 00:56:42.320
to put little applets

00:56:42.320 --> 00:56:44.500
in the on-chain.

00:56:44.500 --> 00:56:45.700
And I think we're,

00:56:45.700 --> 00:56:47.140
maybe we just,

00:56:47.140 --> 00:56:47.860
people just need

00:56:47.860 --> 00:56:48.740
a little kick like that

00:56:48.740 --> 00:56:50.120
to really motivate them.

00:56:50.120 --> 00:56:50.300
Yeah,

00:56:50.300 --> 00:56:51.420
that would be amazing.

00:56:51.420 --> 00:56:52.320
Right.

00:56:52.320 --> 00:56:54.680
Yeah,

00:56:54.680 --> 00:56:56.140
there was the whole keynote.

00:56:56.140 --> 00:56:58.360
There's been several versions.

00:56:58.360 --> 00:56:58.640
You know,

00:56:58.640 --> 00:56:59.880
Carol Willing gave one of them.

00:56:59.880 --> 00:57:02.320
Russell Keith McGee

00:57:02.320 --> 00:57:02.800
gave one.

00:57:02.800 --> 00:57:03.320
Sort of about,

00:57:03.320 --> 00:57:04.600
there's the few places

00:57:04.600 --> 00:57:05.480
that are really important

00:57:05.480 --> 00:57:05.960
in computing

00:57:05.960 --> 00:57:07.160
that Python doesn't really touch.

00:57:07.160 --> 00:57:07.680
And it was kind of

00:57:07.680 --> 00:57:09.200
mobile and web front end,

00:57:09.200 --> 00:57:09.440
right?

00:57:09.440 --> 00:57:09.860
Right.

00:57:09.860 --> 00:57:10.620
And so that would

00:57:10.620 --> 00:57:12.200
take down one of those two,

00:57:12.280 --> 00:57:13.020
which would be pretty amazing.

00:57:13.020 --> 00:57:15.080
And maybe indirectly somehow

00:57:15.080 --> 00:57:16.040
find its way to mobile

00:57:16.040 --> 00:57:17.080
if it could be on the web,

00:57:17.080 --> 00:57:17.380
you know?

00:57:17.380 --> 00:57:18.000
Yeah,

00:57:18.000 --> 00:57:19.360
React Native is how a lot of people

00:57:19.360 --> 00:57:20.380
are doing the mobile development.

00:57:20.380 --> 00:57:21.700
So if you have a wrapper

00:57:21.700 --> 00:57:22.120
for React,

00:57:22.120 --> 00:57:22.940
like that should,

00:57:22.940 --> 00:57:23.740
that should be there,

00:57:23.740 --> 00:57:24.000
right?

00:57:24.000 --> 00:57:24.740
Yeah,

00:57:24.740 --> 00:57:25.180
exactly.

00:57:25.180 --> 00:57:25.820
That'd be wild.

00:57:25.820 --> 00:57:27.120
Yeah.

00:57:27.120 --> 00:57:27.520
Awesome.

00:57:27.520 --> 00:57:28.180
Okay.

00:57:28.180 --> 00:57:29.580
Let's talk,

00:57:29.580 --> 00:57:30.680
you got a few minutes

00:57:30.680 --> 00:57:31.200
to talk to Blue Sky

00:57:31.200 --> 00:57:31.520
real quick

00:57:31.520 --> 00:57:32.440
before we wrap things up?

00:57:32.440 --> 00:57:33.020
Yeah,

00:57:33.020 --> 00:57:33.440
I do.

00:57:33.440 --> 00:57:33.840
Yep.

00:57:33.840 --> 00:57:36.060
You have a really

00:57:36.060 --> 00:57:38.160
interesting profile here

00:57:38.160 --> 00:57:38.800
on,

00:57:38.800 --> 00:57:40.100
I'll certainly put that

00:57:40.100 --> 00:57:42.120
into the show notes.

00:57:42.240 --> 00:57:45.060
I am a new Blue Sky.

00:57:45.060 --> 00:57:46.480
I just created an account

00:57:46.480 --> 00:57:47.200
last week.

00:57:47.200 --> 00:57:48.220
Finally,

00:57:48.220 --> 00:57:48.700
I was thinking,

00:57:48.700 --> 00:57:48.980
you know,

00:57:48.980 --> 00:57:50.120
already I'm on Mastodon

00:57:50.120 --> 00:57:51.860
and I'm kind of on Twitter

00:57:51.860 --> 00:57:53.020
and I've just got a lot to,

00:57:53.020 --> 00:57:54.620
I've got a lot of email addresses.

00:57:54.620 --> 00:57:55.620
I kind of got enough,

00:57:55.620 --> 00:57:55.820
right?

00:57:55.900 --> 00:57:57.580
but really recently,

00:57:57.580 --> 00:57:58.540
a lot of people

00:57:58.540 --> 00:57:59.140
have been moving

00:57:59.140 --> 00:58:00.400
from the tech space

00:58:00.400 --> 00:58:01.000
to Blue Sky

00:58:01.000 --> 00:58:01.460
and I'm like,

00:58:01.460 --> 00:58:01.920
you know what?

00:58:01.920 --> 00:58:02.500
Two,

00:58:02.500 --> 00:58:03.140
I had two thoughts.

00:58:03.140 --> 00:58:03.380
One,

00:58:03.380 --> 00:58:03.620
like,

00:58:03.620 --> 00:58:04.420
I'll just create an account

00:58:04.420 --> 00:58:05.200
and see what it's like over there.

00:58:05.200 --> 00:58:05.620
Why not?

00:58:05.620 --> 00:58:06.780
That was thought one.

00:58:06.780 --> 00:58:07.540
Thought two is,

00:58:07.540 --> 00:58:08.640
I better go there

00:58:08.640 --> 00:58:09.880
before somebody steals

00:58:09.880 --> 00:58:11.580
like the podcast handle

00:58:11.580 --> 00:58:12.480
in my name

00:58:12.480 --> 00:58:12.920
and stuff,

00:58:12.920 --> 00:58:13.240
you know,

00:58:13.240 --> 00:58:13.660
like that

00:58:13.660 --> 00:58:14.720
because that happened

00:58:14.720 --> 00:58:15.300
on Mastodon

00:58:15.300 --> 00:58:16.020
before I got there.

00:58:16.020 --> 00:58:16.260
I'm like,

00:58:16.260 --> 00:58:16.600
oh,

00:58:16.600 --> 00:58:17.120
maybe not.

00:58:17.780 --> 00:58:18.180
So,

00:58:18.180 --> 00:58:18.820
yeah,

00:58:18.820 --> 00:58:20.080
so I now have

00:58:20.080 --> 00:58:23.460
at mkennedy.codes

00:58:23.460 --> 00:58:25.260
as I'm here officially,

00:58:25.260 --> 00:58:25.560
right?

00:58:25.560 --> 00:58:26.020
Right.

00:58:26.020 --> 00:58:26.520
But,

00:58:26.520 --> 00:58:26.920
yeah,

00:58:26.920 --> 00:58:27.460
so I'm really,

00:58:27.460 --> 00:58:30.320
I'm surprisingly delighted by it.

00:58:30.320 --> 00:58:30.800
So maybe,

00:58:30.800 --> 00:58:31.180
good,

00:58:31.180 --> 00:58:31.560
good.

00:58:31.560 --> 00:58:32.700
I've seen you talking about

00:58:32.700 --> 00:58:33.620
a couple of projects

00:58:33.620 --> 00:58:34.280
and different things.

00:58:34.280 --> 00:58:34.580
So,

00:58:34.580 --> 00:58:34.980
yeah,

00:58:34.980 --> 00:58:35.760
you want to riff on that

00:58:35.760 --> 00:58:36.080
for a minute?

00:58:36.080 --> 00:58:36.940
Yeah,

00:58:36.940 --> 00:58:37.360
so,

00:58:37.360 --> 00:58:39.000
I know you're writing

00:58:39.000 --> 00:58:39.640
a lot about it,

00:58:39.640 --> 00:58:39.880
right?

00:58:39.880 --> 00:58:40.460
You just did an article

00:58:40.460 --> 00:58:41.100
or something on it.

00:58:41.100 --> 00:58:41.740
Oh,

00:58:41.740 --> 00:58:42.200
no,

00:58:42.200 --> 00:58:42.760
I haven't yet.

00:58:42.760 --> 00:58:43.880
I've been meaning to.

00:58:43.880 --> 00:58:44.700
This is the Thanksgiving

00:58:44.700 --> 00:58:45.740
post-tryptophan

00:58:45.740 --> 00:58:47.100
induced haze.

00:58:47.500 --> 00:58:48.280
I might go

00:58:48.280 --> 00:58:49.540
and just bang something out.

00:58:49.540 --> 00:58:50.160
Okay.

00:58:50.160 --> 00:58:50.800
But I should,

00:58:50.800 --> 00:58:51.840
I should tell my story,

00:58:51.840 --> 00:58:52.160
I guess,

00:58:52.160 --> 00:58:52.680
and my interaction

00:58:52.680 --> 00:58:53.380
with this ecosystem

00:58:53.380 --> 00:58:55.140
that,

00:58:55.140 --> 00:58:55.920
you know,

00:58:55.920 --> 00:58:56.240
obviously,

00:58:56.240 --> 00:58:57.040
I think most people

00:58:57.040 --> 00:58:58.000
know me for my engagement

00:58:58.000 --> 00:58:58.860
in Python

00:58:58.860 --> 00:58:59.520
and Python,

00:58:59.520 --> 00:59:00.460
PyData,

00:59:00.460 --> 00:59:01.000
Anaconda,

00:59:01.000 --> 00:59:01.780
all these kinds of things.

00:59:01.780 --> 00:59:03.360
But,

00:59:03.360 --> 00:59:05.220
but for about eight years now,

00:59:05.220 --> 00:59:06.180
I've been involved

00:59:06.180 --> 00:59:07.700
in the decentralized web

00:59:07.700 --> 00:59:08.400
community

00:59:08.400 --> 00:59:10.100
in one form or another.

00:59:10.100 --> 00:59:10.960
I go to some of the camps

00:59:10.960 --> 00:59:11.600
that the Internet Archive

00:59:11.600 --> 00:59:12.200
puts together

00:59:12.200 --> 00:59:13.660
and I funded some projects

00:59:13.660 --> 00:59:14.280
around this area.

00:59:14.280 --> 00:59:15.380
And years ago,

00:59:15.380 --> 00:59:16.780
I started funding a project

00:59:16.780 --> 00:59:17.560
called Beaker Browser,

00:59:17.560 --> 00:59:18.760
which is a decentralized

00:59:18.760 --> 00:59:19.560
web browser

00:59:19.560 --> 00:59:22.640
for looking at local,

00:59:22.640 --> 00:59:24.000
it was a local first

00:59:24.000 --> 00:59:24.660
web browser

00:59:24.660 --> 00:59:25.640
that was imminently

00:59:25.640 --> 00:59:26.680
modifiable.

00:59:26.680 --> 00:59:28.120
And then you would

00:59:28.120 --> 00:59:28.980
then use

00:59:28.980 --> 00:59:29.820
some kind of backend

00:59:29.820 --> 00:59:30.680
data transport

00:59:30.680 --> 00:59:32.340
like IPFS

00:59:32.340 --> 00:59:33.880
or HyperCore,

00:59:33.880 --> 00:59:34.580
DAT,

00:59:34.580 --> 00:59:36.120
whatever kinds of things.

00:59:36.120 --> 00:59:37.380
And so you have

00:59:37.380 --> 00:59:38.300
a very different approach

00:59:38.300 --> 00:59:39.400
to building websites,

00:59:39.400 --> 00:59:40.340
building web apps

00:59:40.340 --> 00:59:41.420
when you have

00:59:41.420 --> 00:59:42.360
this data

00:59:42.360 --> 00:59:42.960
decoupled

00:59:42.960 --> 00:59:44.920
from the view,

00:59:44.920 --> 00:59:45.340
right?

00:59:45.340 --> 00:59:46.080
Ultimately,

00:59:46.080 --> 00:59:47.240
I had surmised

00:59:47.240 --> 00:59:48.260
that a lot

00:59:48.260 --> 00:59:48.700
of the

00:59:48.700 --> 00:59:52.660
crappiness

00:59:52.660 --> 00:59:53.520
of the current

00:59:53.520 --> 00:59:53.980
Internet

00:59:53.980 --> 00:59:55.300
and social media apps

00:59:55.300 --> 00:59:55.900
and all these kinds

00:59:55.900 --> 00:59:56.300
of things

00:59:56.300 --> 00:59:57.540
was due ultimately

00:59:57.540 --> 00:59:58.420
to a flaw

00:59:58.420 --> 01:00:00.320
in the

01:00:00.320 --> 01:00:01.040
way,

01:00:01.040 --> 01:00:01.980
in the web itself,

01:00:01.980 --> 01:00:02.500
which is the

01:00:02.500 --> 01:00:03.440
client server model.

01:00:03.440 --> 01:00:04.780
Intrinsically dumps

01:00:04.780 --> 01:00:05.400
user data.

01:00:05.400 --> 01:00:06.880
And from a software

01:00:06.880 --> 01:00:07.920
architecture perspective,

01:00:07.980 --> 01:00:08.420
what we might say

01:00:08.420 --> 01:00:09.580
is that we take

01:00:09.580 --> 01:00:10.780
an MVC architecture

01:00:10.780 --> 01:00:11.640
and we split

01:00:11.640 --> 01:00:12.880
the view model

01:00:12.880 --> 01:00:14.180
and we put the view

01:00:14.180 --> 01:00:14.760
model out here

01:00:14.760 --> 01:00:15.360
but we put the

01:00:15.360 --> 01:00:15.940
business logic

01:00:15.940 --> 01:00:16.360
and the model

01:00:16.360 --> 01:00:16.960
over here

01:00:16.960 --> 01:00:17.960
and it's all owned

01:00:17.960 --> 01:00:18.600
by a trillion dollar

01:00:18.600 --> 01:00:19.160
tech company,

01:00:19.160 --> 01:00:19.960
right?

01:00:19.960 --> 01:00:20.660
And so all of us

01:00:20.660 --> 01:00:21.340
that have to pay

01:00:21.340 --> 01:00:22.020
They observe the heck

01:00:22.020 --> 01:00:22.800
out of it as the data

01:00:22.800 --> 01:00:23.320
flows, right?

01:00:23.320 --> 01:00:24.100
They observe the heck

01:00:24.100 --> 01:00:24.740
out of that

01:00:24.740 --> 01:00:25.460
and they sell those

01:00:25.460 --> 01:00:25.960
observations

01:00:25.960 --> 01:00:26.760
and they profit

01:00:26.760 --> 01:00:27.600
handsomely from it.

01:00:27.600 --> 01:00:29.280
So that,

01:00:29.280 --> 01:00:30.220
but then it also

01:00:30.220 --> 01:00:31.240
leads to all sorts

01:00:31.240 --> 01:00:31.760
of, you know,

01:00:31.760 --> 01:00:32.580
there's a lot of,

01:00:32.580 --> 01:00:34.100
there's a dark shadow

01:00:34.100 --> 01:00:34.700
to all of that,

01:00:34.700 --> 01:00:34.900
right?

01:00:34.900 --> 01:00:35.660
Which is not good

01:00:35.660 --> 01:00:36.560
from a civil libertarian

01:00:36.560 --> 01:00:37.340
as well as from

01:00:37.340 --> 01:00:37.840
an entrepreneur

01:00:37.840 --> 01:00:38.700
from a tech

01:00:38.700 --> 01:00:39.480
innovator perspective.

01:00:39.480 --> 01:00:40.900
I don't like any of that.

01:00:40.900 --> 01:00:42.880
So my investment

01:00:42.880 --> 01:00:43.660
into these decentralized

01:00:43.660 --> 01:00:44.560
web technologies

01:00:44.560 --> 01:00:45.240
were funded,

01:00:45.240 --> 01:00:46.220
were fueled

01:00:46.220 --> 01:00:47.200
by this,

01:00:47.200 --> 01:00:48.260
this realization

01:00:48.260 --> 01:00:48.640
that I had

01:00:48.640 --> 01:00:49.020
that we had to

01:00:49.020 --> 01:00:49.740
really rebuild

01:00:49.740 --> 01:00:50.520
internet architecture

01:00:50.520 --> 01:00:51.300
from the bottom up

01:00:51.300 --> 01:00:52.060
and how we build

01:00:52.060 --> 01:00:52.980
applications, period.

01:00:52.980 --> 01:00:54.460
So you can actually

01:00:54.460 --> 01:00:55.380
draw a thematic line

01:00:55.380 --> 01:00:56.620
from where my investments

01:00:56.620 --> 01:00:57.480
and things like Beaker Browser

01:00:57.480 --> 01:00:59.280
to us supporting

01:00:59.280 --> 01:00:59.800
at Anaconda

01:00:59.800 --> 01:01:01.300
development of tools

01:01:01.300 --> 01:01:01.980
like PyScript

01:01:01.980 --> 01:01:02.900
and Beware

01:01:02.900 --> 01:01:03.720
Russell and Keith McGee,

01:01:03.720 --> 01:01:03.980
right?

01:01:03.980 --> 01:01:05.220
Empowering end users

01:01:05.220 --> 01:01:06.020
to build applications

01:01:06.020 --> 01:01:07.600
and permissionlessly

01:01:07.600 --> 01:01:09.140
and as easily as possible

01:01:09.140 --> 01:01:09.600
share them

01:01:09.600 --> 01:01:10.300
with other users

01:01:10.300 --> 01:01:11.080
so we have a lot

01:01:11.080 --> 01:01:11.560
of innovation

01:01:11.560 --> 01:01:12.140
and creativity

01:01:12.140 --> 01:01:12.840
and joy

01:01:12.840 --> 01:01:13.960
ultimately

01:01:13.960 --> 01:01:15.100
in this creative space

01:01:15.100 --> 01:01:15.540
that computing

01:01:15.540 --> 01:01:16.400
actually should be.

01:01:16.400 --> 01:01:18.500
So ultimately

01:01:18.500 --> 01:01:19.260
Beaker Browser

01:01:19.260 --> 01:01:21.060
didn't work out

01:01:21.060 --> 01:01:21.800
as a company

01:01:21.800 --> 01:01:22.960
but the guy

01:01:22.960 --> 01:01:24.080
who was behind it

01:01:24.080 --> 01:01:25.320
spent four years,

01:01:25.320 --> 01:01:25.800
I mean,

01:01:25.800 --> 01:01:26.420
I funded him

01:01:26.420 --> 01:01:27.040
for those four years

01:01:27.040 --> 01:01:28.180
doing a lot of experiments

01:01:28.180 --> 01:01:28.760
and what does

01:01:28.760 --> 01:01:29.740
decentralized Twitter,

01:01:29.740 --> 01:01:30.540
decentralized Reddit,

01:01:30.540 --> 01:01:31.540
decentralized Facebook,

01:01:31.540 --> 01:01:32.640
what do these kinds

01:01:32.640 --> 01:01:33.160
of like local

01:01:33.160 --> 01:01:33.700
first experiences

01:01:33.700 --> 01:01:34.120
look like?

01:01:34.120 --> 01:01:34.640
What is the right

01:01:34.640 --> 01:01:35.660
design for a protocol

01:01:35.660 --> 01:01:36.840
to do like,

01:01:36.840 --> 01:01:37.380
you know,

01:01:37.380 --> 01:01:37.860
because he worked

01:01:37.860 --> 01:01:38.740
on secure scuttlebutt

01:01:38.740 --> 01:01:39.640
and these gossip networks

01:01:39.640 --> 01:01:41.380
like what Nostra sort of has

01:01:41.380 --> 01:01:42.320
and then like

01:01:42.320 --> 01:01:43.380
what are the things

01:01:43.380 --> 01:01:44.380
where we have to centralize?

01:01:44.380 --> 01:01:45.740
All of those learnings

01:01:45.740 --> 01:01:46.640
kind of got wrapped up

01:01:46.640 --> 01:01:47.500
into then

01:01:47.500 --> 01:01:48.300
what is now

01:01:48.300 --> 01:01:48.880
App Protocol

01:01:48.880 --> 01:01:49.900
and Blue Sky.

01:01:49.900 --> 01:01:50.940
So he got hired in

01:01:50.940 --> 01:01:51.880
by Jay

01:01:51.880 --> 01:01:52.520
who's the CEO

01:01:52.520 --> 01:01:53.160
of Blue Sky

01:01:53.160 --> 01:01:54.040
to go and build

01:01:54.040 --> 01:01:55.080
what is now

01:01:55.080 --> 01:01:55.900
the Blue Sky app

01:01:55.900 --> 01:01:57.060
and the App Protocol

01:01:57.060 --> 01:01:58.700
is the result

01:01:58.700 --> 01:02:00.760
of the Beaker Browser

01:02:00.760 --> 01:02:00.980
guy,

01:02:00.980 --> 01:02:01.480
Paul Frazee,

01:02:01.480 --> 01:02:02.500
working closely

01:02:02.500 --> 01:02:03.200
with, you know,

01:02:03.200 --> 01:02:03.820
people like Jeremy

01:02:03.820 --> 01:02:04.360
and others

01:02:04.360 --> 01:02:06.100
that are the core devs

01:02:06.100 --> 01:02:07.260
at Blue Sky.

01:02:07.260 --> 01:02:08.300
And so

01:02:08.300 --> 01:02:10.120
that's kind of my connection

01:02:10.120 --> 01:02:10.780
to this ecosystem.

01:02:10.780 --> 01:02:12.200
So I'm user number six

01:02:12.200 --> 01:02:12.560
or seven,

01:02:12.560 --> 01:02:12.800
I think,

01:02:12.800 --> 01:02:13.440
user number six

01:02:13.440 --> 01:02:15.980
on the network

01:02:15.980 --> 01:02:16.960
and I'm a big,

01:02:16.960 --> 01:02:17.620
huge proponent

01:02:17.620 --> 01:02:18.180
of this stuff.

01:02:18.180 --> 01:02:18.520
So

01:02:18.520 --> 01:02:20.740
that has like

01:02:20.740 --> 01:02:22.620
no formal intersection

01:02:22.620 --> 01:02:23.340
with my work

01:02:23.340 --> 01:02:24.200
in the Python space.

01:02:24.200 --> 01:02:25.020
It's just another aspect

01:02:25.020 --> 01:02:26.040
of technology

01:02:26.040 --> 01:02:27.060
that I'm very passionate about.

01:02:27.900 --> 01:02:28.680
but both

01:02:28.680 --> 01:02:29.080
are actually

01:02:29.080 --> 01:02:29.960
connected thematically

01:02:29.960 --> 01:02:30.520
in the sense

01:02:30.520 --> 01:02:31.320
of empowering

01:02:31.320 --> 01:02:32.000
end users.

01:02:32.000 --> 01:02:32.600
Actually,

01:02:32.600 --> 01:02:33.640
the Python bit,

01:02:33.640 --> 01:02:34.300
PyData,

01:02:34.300 --> 01:02:35.680
the Excel bit,

01:02:35.680 --> 01:02:36.880
and then the Blue Sky bit

01:02:36.880 --> 01:02:37.720
all connect

01:02:37.720 --> 01:02:38.280
in the sense

01:02:38.280 --> 01:02:39.300
of empowering

01:02:39.300 --> 01:02:40.560
people,

01:02:40.560 --> 01:02:41.540
regular humans,

01:02:41.540 --> 01:02:43.160
to use computers

01:02:43.160 --> 01:02:44.280
to the best,

01:02:44.280 --> 01:02:46.120
to making

01:02:46.120 --> 01:02:46.980
their lives better.

01:02:47.460 --> 01:02:48.600
whether it's asking

01:02:48.600 --> 01:02:49.640
more interesting questions

01:02:49.640 --> 01:02:50.440
of the world,

01:02:50.440 --> 01:02:51.920
whether it's being able

01:02:51.920 --> 01:02:53.180
to then share

01:02:53.180 --> 01:02:54.100
and deploy the things

01:02:54.100 --> 01:02:54.600
they've built

01:02:54.600 --> 01:02:55.660
with other people,

01:02:55.660 --> 01:02:57.360
whether it's,

01:02:57.360 --> 01:02:57.540
you know,

01:02:57.540 --> 01:02:58.360
reaching out to more

01:02:58.360 --> 01:02:58.860
and more people.

01:02:58.860 --> 01:03:00.220
Excel has a billion users

01:03:00.220 --> 01:03:00.960
or something like that,

01:03:00.960 --> 01:03:02.000
some hundred million users.

01:03:02.000 --> 01:03:02.460
Right.

01:03:02.460 --> 01:03:03.480
Meet them where they are.

01:03:03.480 --> 01:03:04.780
Meet them where they are.

01:03:04.780 --> 01:03:05.240
Yeah.

01:03:05.240 --> 01:03:05.860
Yeah.

01:03:05.860 --> 01:03:06.140
Right?

01:03:06.140 --> 01:03:07.500
And then with Blue Sky,

01:03:07.500 --> 01:03:08.860
it's how do we kind of

01:03:08.860 --> 01:03:09.900
go and like

01:03:09.900 --> 01:03:13.020
just have a different way

01:03:13.020 --> 01:03:14.460
of people connecting

01:03:14.460 --> 01:03:14.980
to each other

01:03:14.980 --> 01:03:15.400
on the internet,

01:03:15.400 --> 01:03:16.080
being able to make

01:03:16.080 --> 01:03:16.860
interesting things

01:03:16.860 --> 01:03:18.960
and really share

01:03:18.960 --> 01:03:19.400
in a spirit

01:03:19.400 --> 01:03:20.320
of collaboration.

01:03:20.320 --> 01:03:21.940
And so one of the

01:03:21.940 --> 01:03:22.820
really important things

01:03:22.820 --> 01:03:23.420
about Blue Sky

01:03:23.420 --> 01:03:24.600
is that the way

01:03:24.600 --> 01:03:25.820
the moderation system works,

01:03:25.820 --> 01:03:26.840
all those block lists

01:03:26.840 --> 01:03:27.520
and all those kinds

01:03:27.520 --> 01:03:28.580
of things that people have,

01:03:28.580 --> 01:03:30.060
you know,

01:03:30.060 --> 01:03:30.760
I'm an old school

01:03:30.760 --> 01:03:31.720
internet guy

01:03:31.720 --> 01:03:32.120
and I remember

01:03:32.120 --> 01:03:33.380
if you were on Usenet,

01:03:33.380 --> 01:03:34.260
you would have a thing

01:03:34.260 --> 01:03:34.960
called a K-file.

01:03:34.960 --> 01:03:36.360
It's your local kill file,

01:03:36.360 --> 01:03:36.620
right?

01:03:36.620 --> 01:03:37.440
Which is people

01:03:37.440 --> 01:03:38.340
I just don't effing

01:03:38.340 --> 01:03:38.880
want to hear from

01:03:38.880 --> 01:03:39.960
because they're obviously idiots.

01:03:39.960 --> 01:03:42.780
And your readers,

01:03:42.780 --> 01:03:43.380
news readers

01:03:43.380 --> 01:03:44.240
would respect that,

01:03:44.240 --> 01:03:44.740
right?

01:03:44.740 --> 01:03:45.580
And so something

01:03:45.580 --> 01:03:46.020
that Paul and I

01:03:46.020 --> 01:03:46.480
talked about

01:03:46.480 --> 01:03:47.000
years ago

01:03:47.000 --> 01:03:48.620
was a social K-file

01:03:48.620 --> 01:03:49.920
would be a way

01:03:49.920 --> 01:03:52.060
to have a social group

01:03:52.060 --> 01:03:53.260
be able to really

01:03:53.260 --> 01:03:55.500
just disincentivize

01:03:55.500 --> 01:03:56.220
and lock out

01:03:56.220 --> 01:03:58.200
the bad faith interactions,

01:03:58.200 --> 01:03:58.840
right?

01:03:58.840 --> 01:03:59.480
Now, of course,

01:03:59.480 --> 01:04:00.940
you could go too far

01:04:00.940 --> 01:04:01.320
with that

01:04:01.320 --> 01:04:01.780
and just create

01:04:01.780 --> 01:04:02.480
a little echo chamber

01:04:02.480 --> 01:04:03.000
for yourself,

01:04:03.000 --> 01:04:04.820
but there is a lot

01:04:04.820 --> 01:04:05.280
of space

01:04:05.280 --> 01:04:06.580
between spammers,

01:04:06.580 --> 01:04:07.480
trolls everywhere,

01:04:07.480 --> 01:04:08.420
spamming us

01:04:08.420 --> 01:04:09.240
with like crypto spam

01:04:09.240 --> 01:04:10.780
and just like total

01:04:10.780 --> 01:04:12.060
echo chamber.

01:04:12.060 --> 01:04:13.100
There's space

01:04:13.100 --> 01:04:13.500
in the middle,

01:04:13.500 --> 01:04:13.760
right?

01:04:13.940 --> 01:04:14.480
So I think what

01:04:14.480 --> 01:04:15.400
Blue Sky is demonstrating

01:04:15.400 --> 01:04:17.120
with the shared block lists

01:04:17.120 --> 01:04:17.900
and things like that

01:04:17.900 --> 01:04:18.640
and people just being able

01:04:18.640 --> 01:04:19.320
to mute things,

01:04:19.320 --> 01:04:20.180
built into the UI,

01:04:20.180 --> 01:04:22.140
those are the kinds of tools

01:04:22.140 --> 01:04:22.880
we can make available

01:04:22.880 --> 01:04:23.880
when the company

01:04:23.880 --> 01:04:24.980
and the technology

01:04:24.980 --> 01:04:26.340
isn't incentivized

01:04:26.340 --> 01:04:27.900
to create more angry

01:04:27.900 --> 01:04:29.180
bullshit sort of interactions

01:04:29.180 --> 01:04:30.700
and engagement.

01:04:31.400 --> 01:04:33.440
algorithms don't promote that

01:04:33.440 --> 01:04:34.560
and push the heck out of it

01:04:34.560 --> 01:04:35.420
to get engagement.

01:04:35.420 --> 01:04:36.740
The default Blue Sky algorithm

01:04:36.740 --> 01:04:38.400
is just chronological feed

01:04:38.400 --> 01:04:39.160
of following.

01:04:39.160 --> 01:04:40.600
So if you don't want

01:04:40.600 --> 01:04:41.360
to see somebody's stuff,

01:04:41.360 --> 01:04:42.220
don't follow them.

01:04:42.220 --> 01:04:43.420
You know,

01:04:43.420 --> 01:04:43.980
if you go to some

01:04:43.980 --> 01:04:44.520
of the other feeds,

01:04:44.520 --> 01:04:45.820
there's more algorithmic

01:04:45.820 --> 01:04:46.240
stuff there

01:04:46.240 --> 01:04:47.200
if you want to have it,

01:04:47.200 --> 01:04:48.380
but by default,

01:04:48.380 --> 01:04:48.940
it's just whoever

01:04:48.940 --> 01:04:49.640
you chose to follow.

01:04:49.640 --> 01:04:50.220
And if you don't like

01:04:50.220 --> 01:04:50.760
what they say

01:04:50.760 --> 01:04:51.620
and you know them,

01:04:51.620 --> 01:04:52.760
you should engage with them

01:04:52.760 --> 01:04:52.960
and say,

01:04:52.960 --> 01:04:53.280
hey man,

01:04:53.280 --> 01:04:54.140
I don't agree with that.

01:04:54.140 --> 01:04:55.200
Like, let's talk about that.

01:04:55.200 --> 01:04:55.880
Right?

01:04:56.280 --> 01:04:57.740
Or unfollow them

01:04:57.740 --> 01:04:58.820
or just to follow them.

01:04:58.820 --> 01:04:59.140
It's like,

01:04:59.140 --> 01:04:59.420
you know what?

01:04:59.420 --> 01:05:00.120
They talk too much

01:05:00.120 --> 01:05:01.540
about politician XYZ.

01:05:01.540 --> 01:05:02.020
I don't want to hear

01:05:02.020 --> 01:05:02.400
about that.

01:05:02.400 --> 01:05:02.660
Right?

01:05:02.660 --> 01:05:04.840
It's a very simple approach.

01:05:04.840 --> 01:05:06.060
I need a space

01:05:06.060 --> 01:05:06.420
where I don't want

01:05:06.420 --> 01:05:06.900
to hear about that.

01:05:06.900 --> 01:05:07.420
Yeah.

01:05:07.420 --> 01:05:08.160
One thing I'll give

01:05:08.160 --> 01:05:08.720
a shout out

01:05:08.720 --> 01:05:09.520
to help people get started

01:05:09.520 --> 01:05:10.420
if they're interested in

01:05:10.420 --> 01:05:11.260
is they have

01:05:11.260 --> 01:05:12.200
this cool idea

01:05:12.200 --> 01:05:13.100
called starter packs.

01:05:13.100 --> 01:05:13.820
Right.

01:05:13.820 --> 01:05:15.220
And I created one

01:05:15.220 --> 01:05:16.740
called Python Personalities.

01:05:16.740 --> 01:05:18.080
And you're on here,

01:05:18.080 --> 01:05:18.340
Peter.

01:05:18.340 --> 01:05:19.660
So if they follow

01:05:19.660 --> 01:05:20.300
the starter pack,

01:05:20.300 --> 01:05:20.980
they'll automatically

01:05:20.980 --> 01:05:21.880
follow you.

01:05:21.880 --> 01:05:22.700
But there's

01:05:22.700 --> 01:05:23.820
click follow

01:05:23.820 --> 01:05:24.860
and you get 60,

01:05:24.860 --> 01:05:26.140
70,

01:05:26.140 --> 01:05:27.780
Python,

01:05:27.780 --> 01:05:29.580
nice,

01:05:29.580 --> 01:05:30.840
engaged people

01:05:30.840 --> 01:05:31.880
to follow.

01:05:31.880 --> 01:05:33.560
And if you want

01:05:33.560 --> 01:05:34.120
to find other

01:05:34.120 --> 01:05:34.740
starter packs,

01:05:34.740 --> 01:05:36.620
there's blueskydirectory.com.

01:05:36.620 --> 01:05:37.160
That's right.

01:05:37.160 --> 01:05:39.120
blueskydirectory.com.

01:05:39.120 --> 01:05:40.500
There's 60,000

01:05:40.500 --> 01:05:41.600
or so

01:05:41.600 --> 01:05:43.060
of these directories.

01:05:43.060 --> 01:05:44.280
Yeah.

01:05:44.280 --> 01:05:45.060
And you can search too.

01:05:45.060 --> 01:05:45.420
You can say,

01:05:45.420 --> 01:05:46.920
I'm interested in Python

01:05:46.920 --> 01:05:47.820
or I'm interested

01:05:47.820 --> 01:05:48.440
in motorcycle

01:05:48.440 --> 01:05:49.160
or whatever it is

01:05:49.160 --> 01:05:49.880
you're interested in.

01:05:49.880 --> 01:05:50.200
Right.

01:05:50.200 --> 01:05:51.140
And there's AI.

01:05:51.140 --> 01:05:51.580
Warsaw.

01:05:51.580 --> 01:05:52.500
Yeah.

01:05:52.500 --> 01:05:53.640
Yeah.

01:05:53.640 --> 01:05:54.580
Yeah.

01:05:54.580 --> 01:05:55.540
I saw somebody

01:05:55.540 --> 01:05:56.280
have a starter pack

01:05:56.280 --> 01:05:58.320
called Friendly Weather

01:05:58.320 --> 01:06:00.160
Scientists Using AI

01:06:00.160 --> 01:06:01.000
or something.

01:06:01.000 --> 01:06:01.740
All right.

01:06:01.740 --> 01:06:02.560
It's very specific.

01:06:02.560 --> 01:06:02.960
Yeah.

01:06:02.960 --> 01:06:03.400
It's very,

01:06:03.400 --> 01:06:03.940
but if you want

01:06:03.940 --> 01:06:04.360
that group,

01:06:04.360 --> 01:06:05.140
there you are.

01:06:05.140 --> 01:06:05.660
All right.

01:06:05.660 --> 01:06:06.220
Let's close this out

01:06:06.220 --> 01:06:06.780
with a real quick

01:06:06.780 --> 01:06:08.320
bit of real-time feedback

01:06:08.320 --> 01:06:09.060
from Fabio

01:06:09.060 --> 01:06:10.060
from PyScript.

01:06:10.060 --> 01:06:11.220
Oh, okay.

01:06:11.220 --> 01:06:11.640
Yep.

01:06:11.640 --> 01:06:12.820
There's a framework

01:06:12.820 --> 01:06:13.660
called PuePy

01:06:13.660 --> 01:06:14.420
on top of PyScript

01:06:14.420 --> 01:06:15.220
that is native

01:06:15.220 --> 01:06:16.020
and reactive

01:06:16.020 --> 01:06:16.960
very early though.

01:06:16.960 --> 01:06:17.320
Yes,

01:06:17.320 --> 01:06:18.840
I had the guy on.

01:06:18.840 --> 01:06:19.440
I'm sorry.

01:06:19.440 --> 01:06:19.940
I don't remember

01:06:19.940 --> 01:06:20.660
the first name

01:06:20.660 --> 01:06:21.000
of the guy,

01:06:21.120 --> 01:06:22.060
but I had the guy

01:06:22.060 --> 01:06:23.060
behind PuePy on

01:06:23.060 --> 01:06:23.600
and it looks

01:06:23.600 --> 01:06:24.180
really interesting.

01:06:24.180 --> 01:06:26.460
I'm hopeful for it

01:06:26.460 --> 01:06:28.000
but I'm not necessarily

01:06:28.000 --> 01:06:28.700
sure yet that it's

01:06:28.700 --> 01:06:29.020
the answer.

01:06:29.020 --> 01:06:31.440
And then Fabio

01:06:31.440 --> 01:06:31.940
also says,

01:06:31.940 --> 01:06:33.300
we're also working

01:06:33.300 --> 01:06:34.500
on the invent framework

01:06:34.500 --> 01:06:35.480
that is not really

01:06:35.480 --> 01:06:36.180
comparable to React

01:06:36.180 --> 01:06:36.400
for you

01:06:36.400 --> 01:06:37.340
but in that direction.

01:06:37.340 --> 01:06:38.840
I just love

01:06:38.840 --> 01:06:40.380
his YouTube avatar.

01:06:40.380 --> 01:06:40.700
He said,

01:06:40.700 --> 01:06:40.860
wait,

01:06:40.860 --> 01:06:41.100
hold on.

01:06:41.100 --> 01:06:41.900
We should go

01:06:41.900 --> 01:06:42.940
to his YouTube.

01:06:42.940 --> 01:06:44.700
Look at that.

01:06:44.700 --> 01:06:45.740
Look at that.

01:06:45.740 --> 01:06:46.840
This is like

01:06:46.840 --> 01:06:47.720
an amazing picture

01:06:47.720 --> 01:06:48.220
from Halloween.

01:06:48.220 --> 01:06:48.560
It's a very serious

01:06:48.560 --> 01:06:49.380
business profile.

01:06:49.380 --> 01:06:50.700
Yes,

01:06:50.700 --> 01:06:51.960
Fabio's partner

01:06:51.960 --> 01:06:54.120
is a world championship

01:06:54.120 --> 01:06:55.740
winning sort of

01:06:55.740 --> 01:06:56.660
body painter

01:06:56.660 --> 01:06:58.500
and so he does

01:06:58.500 --> 01:06:59.020
the photography.

01:06:59.020 --> 01:07:00.240
That's not just

01:07:00.240 --> 01:07:00.900
a random thing.

01:07:00.900 --> 01:07:01.600
It's kind of related

01:07:01.600 --> 01:07:05.160
to his family stuff.

01:07:05.160 --> 01:07:05.500
Yeah,

01:07:05.500 --> 01:07:06.560
but it's kind of hilarious

01:07:06.560 --> 01:07:07.880
that that is his profile.

01:07:07.880 --> 01:07:08.480
Awesome.

01:07:08.480 --> 01:07:08.980
All right.

01:07:08.980 --> 01:07:09.260
Well,

01:07:09.260 --> 01:07:10.740
I suppose we're probably

01:07:10.740 --> 01:07:11.300
out of time,

01:07:11.300 --> 01:07:11.660
Peter,

01:07:11.660 --> 01:07:12.680
but it's always delightful

01:07:12.680 --> 01:07:13.400
to talk to you

01:07:13.400 --> 01:07:14.980
and so many things

01:07:14.980 --> 01:07:15.160
to come up with.

01:07:15.160 --> 01:07:15.340
Yeah,

01:07:15.340 --> 01:07:15.660
well,

01:07:15.660 --> 01:07:16.660
thank you so much

01:07:16.660 --> 01:07:17.200
for having me on.

01:07:17.200 --> 01:07:18.040
This is a lot of fun.

01:07:18.040 --> 01:07:18.480
Thank you.

01:07:18.480 --> 01:07:19.520
Yeah,

01:07:19.520 --> 01:07:20.060
you bet.

01:07:20.060 --> 01:07:21.500
And I'll put the links

01:07:21.500 --> 01:07:22.000
for all the things

01:07:22.000 --> 01:07:22.540
we talked about

01:07:22.540 --> 01:07:23.920
in the share notes.

01:07:23.920 --> 01:07:24.620
Let's leave you

01:07:24.620 --> 01:07:25.320
with a closeout

01:07:25.320 --> 01:07:26.120
for the Excel thing.

01:07:26.120 --> 01:07:26.640
People want to get

01:07:26.640 --> 01:07:27.120
started with that.

01:07:27.120 --> 01:07:27.580
What do they do?

01:07:27.580 --> 01:07:29.480
Go to anaconda.com

01:07:29.480 --> 01:07:30.020
slash Excel

01:07:30.020 --> 01:07:31.660
or just go to your Excel,

01:07:31.660 --> 01:07:32.280
again,

01:07:32.280 --> 01:07:33.000
Excel for Windows,

01:07:33.000 --> 01:07:33.760
just type in

01:07:33.760 --> 01:07:34.780
equals PY,

01:07:34.780 --> 01:07:35.500
see if that works.

01:07:35.500 --> 01:07:36.840
And then for the

01:07:36.840 --> 01:07:37.440
Anaconda toolbox,

01:07:37.440 --> 01:07:38.580
you can just also

01:07:38.580 --> 01:07:40.360
go into Excel

01:07:40.360 --> 01:07:41.960
plugin finder

01:07:41.960 --> 01:07:42.680
and you can find it there

01:07:42.680 --> 01:07:43.380
or you just Google

01:07:43.380 --> 01:07:44.300
Anaconda toolbox

01:07:44.300 --> 01:07:45.080
and you'll find

01:07:45.080 --> 01:07:45.920
install instructions there.

01:07:45.920 --> 01:07:47.140
So definitely check it out

01:07:47.140 --> 01:07:48.060
and give us feedback on it.

01:07:48.060 --> 01:07:48.900
Awesome.

01:07:48.900 --> 01:07:49.360
Thanks.

01:07:49.360 --> 01:07:50.020
See you later.

01:07:50.020 --> 01:07:50.800
Thank you.

01:07:50.800 --> 01:07:53.120
Thank you.

