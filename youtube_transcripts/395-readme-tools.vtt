WEBVTT

00:00:00.000 --> 00:00:02.760
- Hello, YouTube.


00:00:02.760 --> 00:00:03.600
Hello, everyone.


00:00:03.600 --> 00:00:05.440
Thanks for being here in the live show.


00:00:05.440 --> 00:00:07.000
If you got questions or comments,


00:00:07.000 --> 00:00:08.500
put them in the chat, please.


00:00:08.500 --> 00:00:11.940
Ned, welcome back to Talk Python To Me.


00:00:11.940 --> 00:00:12.780
- Hey, thanks.


00:00:12.780 --> 00:00:13.600
Thanks for having me.


00:00:13.600 --> 00:00:14.640
This is always fun.


00:00:14.640 --> 00:00:17.880
- Yeah, and it's always a good time to have you on the show.


00:00:17.880 --> 00:00:20.620
Got such interesting things to talk about.


00:00:20.620 --> 00:00:24.760
I think we've previously spoken about coverage.py,


00:00:24.760 --> 00:00:27.560
beginners and experts, and several other things,


00:00:27.560 --> 00:00:31.040
probably if I go back through the old search engine.


00:00:31.040 --> 00:00:34.080
- I've had many opinions about many things.


00:00:34.080 --> 00:00:35.380
- Perfect.


00:00:35.380 --> 00:00:39.160
Well, we're looking forward to hearing your opinions on,


00:00:39.160 --> 00:00:42.720
the title might suggest on the readme,


00:00:42.720 --> 00:00:44.240
but I think maybe we've got to expand it


00:00:44.240 --> 00:00:46.000
to a couple of other markdown files,


00:00:46.000 --> 00:00:48.640
maybe on a project as well to get the holistic picture.


00:00:48.640 --> 00:00:52.920
But basically, we're gonna talk about tools


00:00:52.920 --> 00:00:54.920
and ideas and techniques


00:00:54.920 --> 00:00:58.240
for making your project more accessible,


00:00:58.240 --> 00:01:02.560
feeling more polished and welcoming to people


00:01:02.560 --> 00:01:04.760
when they land on your project on GitHub


00:01:04.760 --> 00:01:06.200
or GitLab or wherever.


00:01:06.200 --> 00:01:07.680
So that'll be fun.


00:01:07.680 --> 00:01:09.400
- Yeah, it's an interesting topic too


00:01:09.400 --> 00:01:11.160
'cause as a project maintainer,


00:01:11.160 --> 00:01:14.560
there's all this project level automation that goes on


00:01:14.560 --> 00:01:16.080
and there are all these fascinating tools


00:01:16.080 --> 00:01:18.320
to get parts of it done in different ways


00:01:18.320 --> 00:01:19.820
and competing philosophies.


00:01:19.820 --> 00:01:21.760
- Yeah, absolutely.


00:01:21.760 --> 00:01:25.240
I know some of them because I fork different projects


00:01:25.240 --> 00:01:26.960
and then I'll sync it or something


00:01:26.960 --> 00:01:28.680
and it'll say that my automation couldn't run.


00:01:28.680 --> 00:01:29.960
I'm like, well, that wasn't my automation.


00:01:29.960 --> 00:01:30.800
But that's okay.


00:01:30.800 --> 00:01:31.640
(laughing)


00:01:31.640 --> 00:01:33.420
It's fine if it runs or it doesn't run.


00:01:33.420 --> 00:01:35.080
I'm just here to follow.


00:01:35.080 --> 00:01:36.360
But before we get into all that,


00:01:36.360 --> 00:01:38.920
maybe let's just do a quick recap


00:01:38.920 --> 00:01:41.560
for those listeners out there who don't know you.


00:01:41.560 --> 00:01:43.160
Maybe what's the elevator pitch


00:01:43.160 --> 00:01:46.000
and what have you been up to the last six months or so?


00:01:46.000 --> 00:01:48.400
- So I've been working in the Python world


00:01:48.400 --> 00:01:49.520
for a very long time.


00:01:49.520 --> 00:01:53.480
I don't know, 20 years now or something crazy like that.


00:01:53.480 --> 00:01:57.800
But my day job is at edX, which is part of 2U now,


00:01:57.800 --> 00:02:01.520
a learning tech, education tech company.


00:02:01.520 --> 00:02:04.880
And I do open source logistics there.


00:02:04.880 --> 00:02:07.600
edX.org runs open source software


00:02:07.600 --> 00:02:09.080
that we've created called Open edX,


00:02:09.080 --> 00:02:11.560
which also runs a couple of thousand other sites.


00:02:11.560 --> 00:02:15.800
And my main job, day job, is making sure


00:02:15.800 --> 00:02:17.880
that that collaboration continues well


00:02:18.760 --> 00:02:20.900
between the people inside to you


00:02:20.900 --> 00:02:23.260
and the people out in the community.


00:02:23.260 --> 00:02:25.740
So it's an interesting dynamic of open source.


00:02:25.740 --> 00:02:28.500
But on the side, I also maintain a number of projects


00:02:28.500 --> 00:02:31.960
including coverage.py, which has been going for 18 years now


00:02:31.960 --> 00:02:34.580
and is used by a lot of people.


00:02:34.580 --> 00:02:36.860
So that's a whole other kind of open source


00:02:36.860 --> 00:02:39.420
that I do in the Python world.


00:02:39.420 --> 00:02:41.340
- Yeah, that's a really rewarding job, right?


00:02:41.340 --> 00:02:44.060
It's not optimizing ad clicks


00:02:44.060 --> 00:02:45.700
or other things like that, right?


00:02:45.700 --> 00:02:47.300
- Right, it's a noble goal.


00:02:47.300 --> 00:02:49.740
We're educating the world and we're giving away software


00:02:49.740 --> 00:02:51.460
to help other people educate the world.


00:02:51.460 --> 00:02:53.600
So it's really good.


00:02:53.600 --> 00:02:55.660
- Yeah, fantastic.


00:02:55.660 --> 00:02:58.300
And, you know, and speaking of open source projects,


00:02:58.300 --> 00:03:01.780
I think we might touch on a couple more of yours


00:03:01.780 --> 00:03:02.620
as we get going.


00:03:02.620 --> 00:03:06.500
- Indeed, yeah, they tend to multiply somehow.


00:03:06.500 --> 00:03:08.220
I haven't learned my lesson yet.


00:03:08.220 --> 00:03:11.140
- Yeah, just got these puppies running everywhere.


00:03:11.140 --> 00:03:13.060
- That's right, exactly, they breed.


00:03:13.060 --> 00:03:14.860
I don't know when it happens, they breed.


00:03:14.860 --> 00:03:16.020
- Exactly.


00:03:16.020 --> 00:03:17.540
All right, well, let's start off with one.


00:03:17.540 --> 00:03:20.980
I don't know if you're familiar with this, readme.so.


00:03:20.980 --> 00:03:22.620
I don't know what the so stands for,


00:03:22.620 --> 00:03:26.860
but I think of this as readme as a service.


00:03:26.860 --> 00:03:28.060
- Interesting, yeah.


00:03:28.060 --> 00:03:29.140
Or stack overflow?


00:03:29.140 --> 00:03:31.020
No, .so isn't stack overflow.


00:03:31.020 --> 00:03:33.060
I don't know why they chose .so.


00:03:33.060 --> 00:03:33.900
- I don't either.


00:03:33.900 --> 00:03:35.380
The woman who maintains it works at GitHub,


00:03:35.380 --> 00:03:36.300
I'm pretty sure.


00:03:36.300 --> 00:03:37.820
We're gonna find out when I get to the bottom.


00:03:37.820 --> 00:03:41.140
But so I don't think it has an association


00:03:41.140 --> 00:03:42.380
with stack overflow, but.


00:03:42.380 --> 00:03:45.420
- Right, and it's usually two letters or country codes.


00:03:45.420 --> 00:03:48.100
And I don't know what SO stands for.


00:03:48.100 --> 00:03:50.140
- I don't either. - As a country.


00:03:50.140 --> 00:03:51.580
- Sorry, .so folks.


00:03:51.580 --> 00:03:55.000
But this place, readme.so, it says,


00:03:55.000 --> 00:03:58.140
this is the easiest way to create a readme.


00:03:58.140 --> 00:04:00.260
Now, before we get into the details of this,


00:04:00.260 --> 00:04:01.900
maybe we should just talk about,


00:04:01.900 --> 00:04:04.780
let me pull up coverage,


00:04:04.780 --> 00:04:07.860
coverage.py on GitHub.


00:04:07.860 --> 00:04:09.060
Not to put you on the spot or anything,


00:04:09.060 --> 00:04:09.900
I don't mean to do that,


00:04:09.900 --> 00:04:11.120
but let's just talk about,


00:04:11.120 --> 00:04:15.220
what kind of stuff should you put on your project?


00:04:15.220 --> 00:04:17.820
And like I said, we're gonna have to expand a little bit.


00:04:17.820 --> 00:04:21.100
Like for example, there's tags and there's a link


00:04:21.100 --> 00:04:23.140
and there's should you have releases shown


00:04:23.140 --> 00:04:25.940
and other stuff that you might kind of think of


00:04:25.940 --> 00:04:28.260
what you get when you land on a project.


00:04:28.260 --> 00:04:31.740
So maybe start there with kind of how you think about


00:04:31.740 --> 00:04:32.580
what should be here


00:04:32.580 --> 00:04:34.300
and then we'll talk about some of the tools.


00:04:34.300 --> 00:04:37.540
- Sure, so I think the first thing your readme should do


00:04:37.540 --> 00:04:39.340
is say what the project is.


00:04:39.340 --> 00:04:41.300
And that's sometimes difficult for people


00:04:41.300 --> 00:04:43.220
to wrap their head around.


00:04:44.100 --> 00:04:46.500
And it really gets at one of the fundamental problems


00:04:46.500 --> 00:04:47.580
of writing almost anything,


00:04:47.580 --> 00:04:50.580
which is you have to decide who you're writing for.


00:04:50.580 --> 00:04:52.820
And it's hard to know who might show up


00:04:52.820 --> 00:04:55.320
on your front page of your GitHub project.


00:04:55.320 --> 00:04:57.900
And you don't know what they already know.


00:04:57.900 --> 00:04:59.420
And so you don't know what you have to tell them.


00:04:59.420 --> 00:05:00.620
So it's a little bit tricky


00:05:00.620 --> 00:05:02.980
to get all that information out there.


00:05:02.980 --> 00:05:04.460
But for instance, under about here,


00:05:04.460 --> 00:05:07.060
it says the code coverage tool for Python,


00:05:07.060 --> 00:05:10.380
which was the sort of pithiest shortest description


00:05:10.380 --> 00:05:13.100
I could come up with to say, what is coverage.py?


00:05:13.100 --> 00:05:15.540
And I think that covers it pretty well.


00:05:15.540 --> 00:05:18.260
I don't try to explain what code coverage is


00:05:18.260 --> 00:05:20.340
'cause that's a topic you can Google for


00:05:20.340 --> 00:05:21.820
if you don't know what it is.


00:05:21.820 --> 00:05:23.700
But so that covers it. - If you don't know


00:05:23.700 --> 00:05:25.140
what it is and you don't know you want it,


00:05:25.140 --> 00:05:26.340
you might not care about this.


00:05:26.340 --> 00:05:27.180
So that's not your audience, right?


00:05:27.180 --> 00:05:29.540
- Right, why are you here if you don't, right, exactly.


00:05:29.540 --> 00:05:30.940
So-- - But go ahead and start


00:05:30.940 --> 00:05:31.900
on your way out the door, please.


00:05:31.900 --> 00:05:33.180
Thank you very much.


00:05:33.180 --> 00:05:34.360
- Right, exactly.


00:05:34.360 --> 00:05:37.140
Yeah, by the way, I could use a bunch more stars


00:05:37.140 --> 00:05:39.900
on coverage.py because it's not a JavaScript project


00:05:39.900 --> 00:05:41.180
and it didn't start on GitHub.


00:05:41.180 --> 00:05:43.040
So it's a little low on stars.


00:05:43.040 --> 00:05:48.420
But so yeah, the readme, so I try to say what it is


00:05:48.420 --> 00:05:50.080
and then how to get started on it.


00:05:50.080 --> 00:05:53.300
And I think those might be the front, the top two things.


00:05:53.300 --> 00:05:55.320
I've got a thing there about Ukraine and badges,


00:05:55.320 --> 00:05:58.220
which we're gonna get to, but it's sort of,


00:05:58.220 --> 00:05:59.840
there's the first paragraph there,


00:05:59.840 --> 00:06:01.440
coverage.py measures code coverage,


00:06:01.440 --> 00:06:04.040
typically during text test execution.


00:06:04.040 --> 00:06:06.040
So it tries to give sort of a little bit deeper


00:06:06.040 --> 00:06:08.800
explanation of it, what you can run it on


00:06:08.800 --> 00:06:11.000
and then getting started.


00:06:11.000 --> 00:06:12.380
there's a for enterprise thing there


00:06:12.380 --> 00:06:14.520
the links off to Tidelift.


00:06:14.520 --> 00:06:17.320
But then the getting started tries to be very quick about


00:06:17.320 --> 00:06:20.920
you just wanna try it, here's some commands you can run


00:06:20.920 --> 00:06:23.760
to see how it works for you.


00:06:23.760 --> 00:06:27.000
'Cause a lot of people, they just wanna get going.


00:06:27.000 --> 00:06:30.040
And if you can give them a quick instruction,


00:06:30.040 --> 00:06:32.280
then they'll be really happy.


00:06:32.280 --> 00:06:35.520
- Yeah, often four or five lines of code,


00:06:35.520 --> 00:06:36.960
here's how you use my thing.


00:06:36.960 --> 00:06:40.480
Do I put a decorator onto a function and it does caching?


00:06:40.480 --> 00:06:42.560
Do I await a database call?


00:06:42.560 --> 00:06:44.200
Or what am I doing with this thing?


00:06:44.200 --> 00:06:46.480
You don't have to be super complicated.


00:06:46.480 --> 00:06:48.320
- Right, and sometimes it's not even clear.


00:06:48.320 --> 00:06:49.840
Some people forget to mention,


00:06:49.840 --> 00:06:52.520
is this thing an application or is it a library?


00:06:52.520 --> 00:06:54.440
Like just the big picture.


00:06:54.440 --> 00:06:58.680
Like as a developer, you can be so in the trenches


00:06:58.680 --> 00:07:00.960
with your code, you forget.


00:07:00.960 --> 00:07:05.000
People don't know what it is yet, like what shape it takes.


00:07:05.000 --> 00:07:08.240
Now my readme is pretty short


00:07:08.240 --> 00:07:09.580
and actually the getting started


00:07:09.580 --> 00:07:12.020
doesn't show the commands that links to the getting start,


00:07:12.020 --> 00:07:13.800
the quick start section of the docs,


00:07:13.800 --> 00:07:16.240
and the change history links to a separate part of the docs.


00:07:16.240 --> 00:07:18.420
So it's actually a pretty short readme.


00:07:18.420 --> 00:07:21.580
Some readmes can be very long, a little overwhelming.


00:07:21.580 --> 00:07:23.500
You have to scroll past all the getting started


00:07:23.500 --> 00:07:25.460
to get to the change history.


00:07:25.460 --> 00:07:28.060
For instance, I decided to take a different approach,


00:07:28.060 --> 00:07:31.740
which was to make it almost like a table of contents


00:07:31.740 --> 00:07:35.260
to the places you might wanna start in the larger docs.


00:07:35.260 --> 00:07:38.180
- Yeah, that is a decision you have to make, right?


00:07:38.180 --> 00:07:39.580
Do you try to put enough in there


00:07:39.580 --> 00:07:42.360
that it's basically standalone in a sense,


00:07:42.360 --> 00:07:45.500
or do you encourage folks to find their way


00:07:45.500 --> 00:07:48.780
over to a much more holistic sort of place?


00:07:48.780 --> 00:07:51.540
- Right, yeah, and that's an information


00:07:51.540 --> 00:07:52.780
architecture problem.


00:07:52.780 --> 00:07:56.420
You know, the thing about writing a good readme


00:07:56.420 --> 00:07:58.780
is it's documentation, and documentation


00:07:58.780 --> 00:08:00.540
has challenges all of its own


00:08:00.540 --> 00:08:05.100
that most developers haven't been trained in formally.


00:08:05.100 --> 00:08:08.020
It's not really their first interest.


00:08:08.020 --> 00:08:10.620
It involves thinking about other people,


00:08:10.620 --> 00:08:13.620
which let's just say some developers aren't skilled at.


00:08:13.620 --> 00:08:16.320
- So the curse of knowledge, right?


00:08:16.320 --> 00:08:17.960
Once you know what code coverage is,


00:08:17.960 --> 00:08:21.620
you don't feel the need to explain it or set the state.


00:08:21.620 --> 00:08:22.860
You're just like, well, we want code coverage.


00:08:22.860 --> 00:08:23.700
Of course you do.


00:08:23.700 --> 00:08:25.060
And here's the tool, you know?


00:08:25.060 --> 00:08:25.900
- Right.


00:08:25.900 --> 00:08:28.740
Yeah, so it's hard to decide what words to put in there,


00:08:28.740 --> 00:08:30.180
how much to say, how to organize it.


00:08:30.180 --> 00:08:31.860
Those are all real challenges.


00:08:31.860 --> 00:08:33.060
- Yeah.


00:08:33.060 --> 00:08:37.660
Well, it's quite popular with 7.5 million downloads a week.


00:08:37.660 --> 00:08:39.280
Is that what it's up to?


00:08:39.280 --> 00:08:40.540
Yeah, that's what it says.


00:08:40.540 --> 00:08:41.040
Right.


00:08:41.040 --> 00:08:42.160
That's what it says.


00:08:42.160 --> 00:08:42.660
Right.


00:08:42.660 --> 00:08:47.160
And it supports all the versions of Python, even the fast one.


00:08:47.160 --> 00:08:48.920
So that's cool.


00:08:48.920 --> 00:08:50.080
Yes.


00:08:50.080 --> 00:08:51.040
Well, it's interesting.


00:08:51.040 --> 00:08:53.240
So this is a point we might get to later.


00:08:53.240 --> 00:08:55.060
So you're looking at the Python versions


00:08:55.060 --> 00:08:57.080
it supports on the badge.


00:08:57.080 --> 00:08:58.160
Yes.


00:08:58.160 --> 00:08:59.920
But if you actually read the text,


00:08:59.920 --> 00:09:02.420
it's actually mentioned-- which goes up-- the badge goes up


00:09:02.420 --> 00:09:03.280
to 3.11.


00:09:03.280 --> 00:09:06.480
The text says it goes up to 3.12.


00:09:06.480 --> 00:09:13.920
right? Alpha, yeah. Alpha 2. And that's because of how the badges work. And there's reasons why


00:09:13.920 --> 00:09:18.640
people don't like badges because of that. But badges look cool. So you want to put the badges


00:09:18.640 --> 00:09:26.880
in. What's going on here is that the badges show the status of the latest release on PyPI. And so


00:09:26.880 --> 00:09:32.320
they're not in sync with what's in the repo. And it's kind of a challenge to figure out what you


00:09:32.320 --> 00:09:37.680
want to do about that, unfortunately. Yeah. I do see though that you are a believer of badges.


00:09:37.680 --> 00:09:43.200
You know, I kind of got into badges. There's, what do we got on screen here? Six rows of badges,


00:09:43.200 --> 00:09:48.720
which honestly is a bit much and I should probably, I mean, it's just kind of a mosaic of


00:09:48.720 --> 00:09:53.520
green and blue at this point. But I'm kind of excited to see that you have a Mastodon badge.


00:09:53.520 --> 00:09:58.080
That's the newest one. I put a Mastodon badge on there, exactly, because that's the new


00:09:58.640 --> 00:10:02.240
crisis is moving from Twitter to Mastodon.


00:10:02.240 --> 00:10:04.280
I'm finding Mastodon to be a really nice place.


00:10:04.280 --> 00:10:06.120
I mean, sort of sidebar for a second.


00:10:06.120 --> 00:10:10.600
How are you thinking about this whole Twitter, Mastodon,


00:10:10.600 --> 00:10:12.760
open source community on social media?


00:10:12.760 --> 00:10:16.200
Yeah, I'm looking at it as an opportunity to try out Mastodon.


00:10:16.200 --> 00:10:18.680
And the thing that's really struck me about Mastodon


00:10:18.680 --> 00:10:23.280
is how many names of bloggers from 20 years ago


00:10:23.280 --> 00:10:27.400
I'm seeing again on Mastodon that I had lost track of.


00:10:27.400 --> 00:10:31.500
and thinking like, oh yeah, I used to read that guy's blog


00:10:31.500 --> 00:10:34.040
20 years ago and now we're connected on Mastodon.


00:10:34.040 --> 00:10:36.580
And so we're kind of resetting back


00:10:36.580 --> 00:10:41.580
to a more distributed personal style of communication.


00:10:41.580 --> 00:10:45.460
Twitter was great in that everyone was in one place,


00:10:45.460 --> 00:10:48.100
so it was kind of easier to find people,


00:10:48.100 --> 00:10:51.620
but Mastodon feels a little bit more like old internet.


00:10:51.620 --> 00:10:54.060
- Yeah, it feels like open source.


00:10:54.060 --> 00:10:55.380
- Yeah, social media. - Social media.


00:10:55.380 --> 00:11:00.660
not just the fact that the underlying code is, but the philosophy of the federation and the


00:11:00.660 --> 00:11:06.580
different servers and the different small groups. >> Right. There's some downsides to it too.


00:11:06.580 --> 00:11:12.900
The server I'm on had some downtime while they were rejiggering all their infrastructure because


00:11:12.900 --> 00:11:20.660
they suddenly had 30,000 users. And all right, I can do without Twitter/Mastodon for six hours


00:11:20.660 --> 00:11:26.420
Well, they figured that out and then they're back and we're going so yeah, I'm gonna go for a walk or get some work done


00:11:26.420 --> 00:11:28.420
Yeah, exactly


00:11:28.420 --> 00:11:31.320
Awesome. All right. Well, that's a cool badge. We'll come back to badges


00:11:31.320 --> 00:11:37.460
Later, I think that that sets the stage one more thing before we get into some of the tools


00:11:37.460 --> 00:11:41.740
There's places like I think Cohen CSS might


00:11:41.740 --> 00:11:45.140
Might


00:11:45.140 --> 00:11:47.420
land in this realm and


00:11:48.380 --> 00:11:50.940
The tail is just too popular search.


00:11:50.940 --> 00:11:51.780
Let's see.


00:11:51.780 --> 00:11:55.240
Just the Tailwind CSS, please.


00:11:55.240 --> 00:11:57.420
Or I know Poetry,


00:11:57.420 --> 00:12:01.220
I can't do that alone, but Poetry with Python.


00:12:01.220 --> 00:12:02.900
If you go to their websites,


00:12:02.900 --> 00:12:05.460
they've got like a fancy website.


00:12:05.460 --> 00:12:06.420
- Yes.


00:12:06.420 --> 00:12:07.500
- You know what I mean?


00:12:07.500 --> 00:12:08.340
- Yes.


00:12:08.340 --> 00:12:09.940
- I see some open source projects,


00:12:09.940 --> 00:12:11.740
like Vue.js maybe is like this,


00:12:11.740 --> 00:12:14.560
where it's almost like there's a marketing landing page


00:12:14.560 --> 00:12:15.580
for the project. - Yes.


00:12:15.580 --> 00:12:17.140
- And the newer ones, of course,


00:12:17.140 --> 00:12:19.440
It is, that'll have like a dark mode button.


00:12:19.440 --> 00:12:23.100
How do you think about this?


00:12:23.100 --> 00:12:24.900
When you see this, do you like, oh, I need to do this?


00:12:24.900 --> 00:12:26.820
Or is this kind of?


00:12:26.820 --> 00:12:29.620
- No, I've never been tempted to build a page like this,


00:12:29.620 --> 00:12:31.660
partly because I don't think I have the skills


00:12:31.660 --> 00:12:33.020
to build a page like this.


00:12:33.020 --> 00:12:38.420
And the things that I make are aimed at developers.


00:12:38.420 --> 00:12:40.780
I mean, you're showing a poetry page,


00:12:40.780 --> 00:12:43.460
landing page here, which is also aimed at developers.


00:12:43.460 --> 00:12:46.980
But I guess my feeling is developers don't need,


00:12:46.980 --> 00:12:48.780
that kind of flash.


00:12:48.780 --> 00:12:52.500
And honestly, if people use a different thing


00:12:52.500 --> 00:12:54.140
because it's flashier, that's okay.


00:12:54.140 --> 00:12:56.560
I'm not out to corner the market.


00:12:56.560 --> 00:12:59.300
- It's not JavaScript code coverage.


00:12:59.300 --> 00:13:02.020
- It's not JavaScript, that's right.


00:13:02.020 --> 00:13:05.820
But also I think sometimes it can be a little misleading.


00:13:05.820 --> 00:13:08.980
And just to go back to Mastodon for a sec.


00:13:08.980 --> 00:13:11.260
So one of the problems that people have with Mastodon


00:13:11.260 --> 00:13:13.520
is that they have to choose a server.


00:13:13.520 --> 00:13:15.220
And that's the first choice they have to make.


00:13:15.220 --> 00:13:18.100
and it's a difficult choice because it's unfamiliar choice.


00:13:18.100 --> 00:13:20.340
If you go to joinmastodon.org,


00:13:20.340 --> 00:13:23.820
it's a flashy site with, you know,


00:13:23.820 --> 00:13:25.500
cartoon elephants and things on it,


00:13:25.500 --> 00:13:27.060
and it looks very easy,


00:13:27.060 --> 00:13:29.220
but then the first button you have to pick


00:13:29.220 --> 00:13:32.380
presents you with a choice that's hard.


00:13:32.380 --> 00:13:34.020
- Here's your thousand choices.


00:13:34.020 --> 00:13:34.860
Pick one. - Yeah, exactly.


00:13:34.860 --> 00:13:35.700
- Don't get it wrong.


00:13:35.700 --> 00:13:39.220
- You know, it might've been less cognitive dissonance


00:13:39.220 --> 00:13:41.980
if the page looked a little bit harder


00:13:41.980 --> 00:13:44.140
so that when you got that choice,


00:13:44.140 --> 00:13:45.420
you knew what you were getting into,


00:13:45.420 --> 00:13:48.220
it would kind of ease you into that hard choice.


00:13:48.220 --> 00:13:49.980
I can see, actually, I hadn't looked at the page


00:13:49.980 --> 00:13:51.540
in the last few weeks, they've actually changed it


00:13:51.540 --> 00:13:54.820
from choose a server to create account, which is good.


00:13:54.820 --> 00:13:56.340
Because that feels more like what you're doing


00:13:56.340 --> 00:13:57.960
is creating an account rather than choosing a server,


00:13:57.960 --> 00:13:59.740
but you click create account and you're on the page


00:13:59.740 --> 00:14:04.180
it says servers, which, oh well, they'll smooth that out.


00:14:04.180 --> 00:14:05.860
They'll smooth that out.


00:14:05.860 --> 00:14:08.020
- You know, people used to be confused by Twitter.


00:14:08.020 --> 00:14:09.260
We figured it out.


00:14:09.260 --> 00:14:10.340
- Yeah, I know.


00:14:10.340 --> 00:14:14.900
But I agree that it's an interesting marketing


00:14:14.900 --> 00:14:17.380
angle for software, which is a little bit weird.


00:14:17.380 --> 00:14:19.580
- Right, now, but I should say,


00:14:19.580 --> 00:14:22.960
so coverage.py does have a mascot,


00:14:22.960 --> 00:14:25.820
which was drawn by my son.


00:14:25.820 --> 00:14:28.460
And so it's got that cute aspect to it,


00:14:28.460 --> 00:14:29.980
but not the whole page isn't cute.


00:14:29.980 --> 00:14:32.580
And actually, you're scrolling it on the screen,


00:14:32.580 --> 00:14:37.580
I'm noticing the mascot isn't on the GitHub page.


00:14:37.580 --> 00:14:40.040
If you go to the docs, you'll see the mascot there


00:14:40.040 --> 00:14:42.920
in the upper left.


00:14:42.920 --> 00:14:45.760
Sleepy snake, yeah.


00:14:45.760 --> 00:14:47.120
So I've got a little bit of that,


00:14:47.120 --> 00:14:49.960
but that's because I've got a son who can draw like that,


00:14:49.960 --> 00:14:51.480
and he made me a mascot.


00:14:51.480 --> 00:14:53.280
If he hadn't done that, I wouldn't


00:14:53.280 --> 00:14:56.160
have anything cute on the page.


00:14:56.160 --> 00:14:58.640
>>Luis: Yeah, covered with a blanket.


00:14:58.640 --> 00:14:59.440
Got it.


00:14:59.440 --> 00:15:02.960
>>Tom: Yeah, he's relaxing because he


00:15:02.960 --> 00:15:05.360
knows his tests are all covering his product,


00:15:05.360 --> 00:15:07.840
and he's sleeping well.


00:15:07.840 --> 00:15:08.680
>>Luis: Beautiful.


00:15:08.680 --> 00:15:10.520
- Okay, well, I think that sets the stage


00:15:10.520 --> 00:15:12.400
for this conversation pretty well.


00:15:12.400 --> 00:15:15.920
Let's talk about ReadMe as a service.


00:15:15.920 --> 00:15:17.120
Have you played with this any?


00:15:17.120 --> 00:15:18.320
- So I haven't played with this.


00:15:18.320 --> 00:15:21.560
I tend to be very low tech in the way I approach things.


00:15:21.560 --> 00:15:23.200
You know, edit some text files,


00:15:23.200 --> 00:15:26.040
build some tooling to make the result you want


00:15:26.040 --> 00:15:27.240
and get going.


00:15:27.240 --> 00:15:31.520
So this looks like a good way to get started.


00:15:31.520 --> 00:15:33.160
Like if you don't know what to do,


00:15:33.160 --> 00:15:35.800
this looks like a good on-ramp.


00:15:35.800 --> 00:15:37.080
So it looks great.


00:15:37.080 --> 00:15:40.360
If that's the way you like to approach things,


00:15:40.360 --> 00:15:41.760
definitely do it.


00:15:41.760 --> 00:15:44.240
My philosophy is any way you can get a good readme


00:15:44.240 --> 00:15:46.240
is a good way to get a good readme.


00:15:46.240 --> 00:15:51.000
So if this is gonna help people, then I'm all for it.


00:15:51.000 --> 00:15:55.000
- Yeah, it's not something you tie into your readme.


00:15:55.000 --> 00:15:58.040
It's a web app, and it looks like one of these


00:15:58.040 --> 00:16:01.160
marketing page, landing page builders.


00:16:01.160 --> 00:16:03.440
So on the left, it's got a bunch of different sections.


00:16:03.440 --> 00:16:06.560
Like you can drag them in.


00:16:06.560 --> 00:16:08.280
So you drag in the title and description,


00:16:08.280 --> 00:16:10.760
you drag in the acknowledgments and fill it out


00:16:10.760 --> 00:16:13.000
and it will create the skeleton markdown


00:16:13.000 --> 00:16:16.040
and then you just take the markdown and run with it.


00:16:16.040 --> 00:16:17.400
But it gives you a lot of structure.


00:16:17.400 --> 00:16:18.560
Like, well, here's how a lot of people


00:16:18.560 --> 00:16:20.920
put their author acknowledgments


00:16:20.920 --> 00:16:23.960
or here's how they put their example code or FAQ.


00:16:23.960 --> 00:16:28.800
- Right, and if this is, so I haven't played with it,


00:16:28.800 --> 00:16:30.980
but if the output of this is a markdown file


00:16:30.980 --> 00:16:32.760
that you then own and edit later on,


00:16:32.760 --> 00:16:36.360
this is just a sort of a quick start templating thing.


00:16:36.360 --> 00:16:37.200
- Great. - I'm pretty sure


00:16:37.200 --> 00:16:38.360
that's how it works, yeah.


00:16:38.360 --> 00:16:39.360
- Any way to do it.


00:16:39.360 --> 00:16:42.280
I'm personally always a little bit skeptical


00:16:42.280 --> 00:16:46.520
about new tools that I have to keep in my tool chain


00:16:46.520 --> 00:16:51.120
and keep working and hope will remain maintained.


00:16:51.120 --> 00:16:53.720
I like, personally like low tech approaches.


00:16:53.720 --> 00:16:57.480
Like I said, if I have a text file that I can edit,


00:16:57.480 --> 00:16:58.920
great, I'm all set.


00:16:58.920 --> 00:17:01.920
So I like that this tool is a way to get started,


00:17:01.920 --> 00:17:05.200
but then gives you the text file that you then own.


00:17:05.200 --> 00:17:06.040
- Yeah, exactly.


00:17:06.040 --> 00:17:08.040
So when you're in a section, you just


00:17:08.040 --> 00:17:10.560
are working on these various pieces.


00:17:10.560 --> 00:17:14.960
It kind of is like a function.


00:17:14.960 --> 00:17:17.320
I'm just editing the internal-- but it puts it all together


00:17:17.320 --> 00:17:19.880
in a whole thing, and you get just a raw markdown


00:17:19.880 --> 00:17:20.760
with a copy button.


00:17:20.760 --> 00:17:22.600
And it seems pretty neat to me.


00:17:22.600 --> 00:17:23.920
Yeah, it is neat.


00:17:23.920 --> 00:17:25.960
Because some of this stuff can be overwhelming.


00:17:25.960 --> 00:17:27.720
I mean, markdown syntax is designed


00:17:27.720 --> 00:17:30.720
to be as straightforward as possible.


00:17:30.720 --> 00:17:32.720
But once you get to badges, which


00:17:32.720 --> 00:17:35.520
are images with alt text with links,


00:17:35.520 --> 00:17:37.240
the syntax is no longer simple.


00:17:37.240 --> 00:17:39.600
And it's hard to remember how to do it.


00:17:39.600 --> 00:17:41.400
So having a way to mash a button


00:17:41.400 --> 00:17:45.140
and have a badge show up on the page, great, let's do it.


00:17:45.140 --> 00:17:49.120
- Yeah, yeah, so this was created by Catherine Olsner,


00:17:49.120 --> 00:17:52.880
Olster, Olsner, and yeah, she works at GitHub.


00:17:52.880 --> 00:17:53.800
So that's pretty cool.


00:17:53.800 --> 00:17:56.720
But yeah, it's just basically a start from scratch


00:17:56.720 --> 00:17:58.440
and generate if you don't have a good example.


00:17:58.440 --> 00:17:59.880
So I kind of like that one.


00:17:59.880 --> 00:18:01.880
- Yeah, and GitHub as in general,


00:18:01.880 --> 00:18:05.460
is one of their philosophies is we'll make on-ramps


00:18:05.460 --> 00:18:07.860
for people to do open source, right?


00:18:07.860 --> 00:18:11.020
And like they've got in their documentation and their help,


00:18:11.020 --> 00:18:12.820
they've got how to use a console,


00:18:12.820 --> 00:18:14.900
which isn't their problem to solve,


00:18:14.900 --> 00:18:18.700
but they know that people are stuck getting into GitHub


00:18:18.700 --> 00:18:20.660
if they don't know how to use the console.


00:18:20.660 --> 00:18:22.100
So they're teaching people how to use the console.


00:18:22.100 --> 00:18:23.620
They've got choosealicense.com


00:18:23.620 --> 00:18:25.100
because people don't know how to choose a license


00:18:25.100 --> 00:18:27.220
and they need to in order to do open source well,


00:18:27.220 --> 00:18:28.140
and so on and so forth.


00:18:28.140 --> 00:18:29.980
So I love the on-ramps


00:18:29.980 --> 00:18:31.980
that GitHub has built for these things.


00:18:31.980 --> 00:18:37.180
- Yeah, and just the community as well, right?


00:18:37.180 --> 00:18:39.100
You know, if you put your time and energy into this,


00:18:39.100 --> 00:18:40.820
there's a chance that people will come along,


00:18:40.820 --> 00:18:44.260
appreciate what you've built and contribute to it, right?


00:18:44.260 --> 00:18:45.100
- Right. - As opposed to.


00:18:45.100 --> 00:18:48.140
- It's a social coding site, that's their tagline.


00:18:48.140 --> 00:18:49.580
- Yeah, that definitely is.


00:18:49.580 --> 00:18:50.720
They seem to be living up to it.


00:18:50.720 --> 00:18:52.500
Okay, another one.


00:18:52.500 --> 00:18:55.220
- Yeah, this is the other end of the spectrum.


00:18:55.220 --> 00:18:56.140
- This is the other end.


00:18:56.140 --> 00:18:58.180
There's a couple of other ones here.


00:18:58.180 --> 00:18:59.980
This is from Henik.


00:18:59.980 --> 00:19:02.940
This is your fancy project deserves a fancy pants


00:19:02.940 --> 00:19:07.260
read me based on hatch or with hatch.


00:19:07.260 --> 00:19:08.220
- Right.


00:19:08.220 --> 00:19:09.300
- Yeah. So what do you know about this one?


00:19:09.300 --> 00:19:10.140
Have you done anything with it?


00:19:10.140 --> 00:19:11.620
- Well, so I looked at this a bit


00:19:11.620 --> 00:19:14.340
and this looks like I said the other end of the spectrum.


00:19:14.340 --> 00:19:18.280
So readme.so is kind of a visual graphical way


00:19:18.280 --> 00:19:20.180
to get started.


00:19:20.180 --> 00:19:25.100
This thing by Hynek Slavak is a templating tool


00:19:25.100 --> 00:19:27.980
where you can automate the putting together


00:19:27.980 --> 00:19:30.600
of your readme from different bits of information


00:19:30.600 --> 00:19:32.000
from all over your repo.


00:19:32.000 --> 00:19:38.080
And it is a little bit overwhelming how much is there.


00:19:38.080 --> 00:19:43.900
You look at the examples and you're editing .toml files


00:19:43.900 --> 00:19:47.160
with five dotted nested sections


00:19:47.160 --> 00:19:49.200
to get the right pieces in place.


00:19:49.200 --> 00:19:50.420
And I totally understand this


00:19:50.420 --> 00:19:52.360
because I have built tools like this too,


00:19:52.360 --> 00:19:54.040
where I thought you're a developer,


00:19:54.040 --> 00:19:55.560
you can write me a regex


00:19:55.560 --> 00:19:57.600
when it comes time to tell me what to do.


00:19:57.600 --> 00:20:00.800
So I totally understand this and I need to look more at it


00:20:00.800 --> 00:20:03.360
because it looks like it solves some problems


00:20:03.360 --> 00:20:05.340
that I might be facing myself.


00:20:05.340 --> 00:20:09.220
And my own, like if you look at the coverage.py repo,


00:20:09.220 --> 00:20:12.360
there's a lot of custom tooling to do these sorts of things.


00:20:12.360 --> 00:20:15.680
And if I can find other people's supported tools


00:20:15.680 --> 00:20:18.360
to do the right things, I would like to use them.


00:20:18.360 --> 00:20:21.960
I mean, like I said, I tend to spawn new side projects


00:20:21.960 --> 00:20:23.100
when I need tooling,


00:20:23.100 --> 00:20:27.340
but that's not a scalable solution to things.


00:20:27.340 --> 00:20:29.740
I should use other people's tools more.


00:20:29.740 --> 00:20:32.420
- If they built some good ones that are out there.


00:20:32.420 --> 00:20:35.380
So here, let me see if I can find a section.


00:20:35.380 --> 00:20:36.460
There's a little part.


00:20:36.460 --> 00:20:39.940
- And the impressive thing,


00:20:39.940 --> 00:20:41.160
so when I first came to this,


00:20:41.160 --> 00:20:43.220
I thought I haven't heard of this


00:20:43.220 --> 00:20:45.860
Hatch Fancy PyPI Readme project,


00:20:45.860 --> 00:20:47.680
but under showcases,


00:20:47.680 --> 00:20:51.360
the black Readme is built using this tool.


00:20:51.360 --> 00:20:55.700
And that's a fine credential right there


00:20:55.700 --> 00:20:58.020
that the Black Project is using it.


00:20:58.020 --> 00:20:58.860
- Yeah, absolutely.


00:20:58.860 --> 00:21:00.300
- As well as a bunch of others.


00:21:00.300 --> 00:21:03.620
- Yeah, Structlog and Jason Skianut.


00:21:03.620 --> 00:21:05.180
- Yeah.


00:21:05.180 --> 00:21:07.020
- Yeah, so maybe I could read this one paragraph


00:21:07.020 --> 00:21:09.260
and this might give people the sense.


00:21:09.260 --> 00:21:13.340
Do you want your PyPI readme to be the project readme,


00:21:13.340 --> 00:21:15.620
but without badges followed by the license file


00:21:15.620 --> 00:21:17.940
in the change log section only for the latest release?


00:21:17.940 --> 00:21:19.660
Well, you've come to the right place.


00:21:19.660 --> 00:21:21.220
So it's like.


00:21:21.220 --> 00:21:25.300
- Yeah, he's got this whole assembly line model


00:21:25.300 --> 00:21:28.180
of there's already a bunch of information out there.


00:21:28.180 --> 00:21:31.700
So don't copy it around, don't try to write it in two places


00:21:31.700 --> 00:21:34.140
instead have a tool, pick up the information


00:21:34.140 --> 00:21:35.840
and then put it together into the readme


00:21:35.840 --> 00:21:36.980
which is what you want.


00:21:36.980 --> 00:21:39.580
And I totally understand that because I've got some,


00:21:39.580 --> 00:21:42.220
I've done some of that kind of tooling myself


00:21:42.220 --> 00:21:44.980
in my projects so that I can put a piece of information


00:21:44.980 --> 00:21:47.980
in just one place and then it goes to where it has to go


00:21:47.980 --> 00:21:49.060
to be read.


00:21:49.060 --> 00:21:51.740
- It's a bit like a static site generator.


00:21:51.740 --> 00:21:53.180
- A bit, a bit.


00:21:53.180 --> 00:21:55.420
The thing I still haven't wrapped my head around here


00:21:55.420 --> 00:22:00.420
is that what feels like it could be one template.md file


00:22:00.420 --> 00:22:03.660
or something that says, grab this from there


00:22:03.660 --> 00:22:05.700
and that from there is instead


00:22:05.700 --> 00:22:08.980
in your pyproject.toml sections.


00:22:08.980 --> 00:22:12.940
So you don't end up with sort of what looks like


00:22:12.940 --> 00:22:15.580
a readme.md file with call-outs


00:22:15.580 --> 00:22:17.420
to where the information should come from.


00:22:17.420 --> 00:22:21.380
It's pieced together from the pyproject.toml sections.


00:22:21.380 --> 00:22:23.560
- I see, the Toml lets you reach


00:22:23.560 --> 00:22:25.100
into the different segments.


00:22:25.100 --> 00:22:27.000
- Right, right, exactly.


00:22:27.000 --> 00:22:30.200
Yeah, and I understand why he's taken that approach


00:22:30.200 --> 00:22:32.480
because the pyproject.toml is there


00:22:32.480 --> 00:22:33.840
and this is a Hatch plugin,


00:22:33.840 --> 00:22:37.120
so he's already got access to that information


00:22:37.120 --> 00:22:39.620
and it's bolted into the process


00:22:39.620 --> 00:22:42.680
of building the distribution,


00:22:42.680 --> 00:22:45.460
which is the exact best time to build the README.


00:22:45.460 --> 00:22:50.400
So it's cool that he's explored it this way.


00:22:50.400 --> 00:22:52.160
I have to take a deeper look at it


00:22:52.160 --> 00:22:54.320
to see if it would fit in with my workflow.


00:22:54.320 --> 00:22:56.080
I don't use Hatch.


00:22:56.080 --> 00:22:58.720
- Yeah, Hatch is nice and Hatchling is nice.


00:22:58.720 --> 00:23:02.040
And I've done a little bit of work with it.


00:23:02.040 --> 00:23:05.480
And I can see why if you're already working in that mode,


00:23:05.480 --> 00:23:06.880
how to kind of extend it.


00:23:06.880 --> 00:23:07.920
- Absolutely.


00:23:07.920 --> 00:23:09.640
Yeah, one of the problems with coverage.py,


00:23:09.640 --> 00:23:13.000
which is my main side project is because it's 18 years old,


00:23:13.000 --> 00:23:15.080
there are bits of it that are using


00:23:15.080 --> 00:23:18.320
the latest greatest technology as of 15 years ago.


00:23:18.320 --> 00:23:21.400
And because it's just kept working,


00:23:21.400 --> 00:23:24.120
until it breaks, I'm not gonna go and fiddle with it,


00:23:24.120 --> 00:23:25.960
or until I'm interested in fiddling with it,


00:23:25.960 --> 00:23:26.800
I might fiddle with it.


00:23:26.800 --> 00:23:29.400
But there's a lot of stuff that's just old and weird


00:23:29.400 --> 00:23:31.160
and just keeps rattling.


00:23:31.160 --> 00:23:34.720
- For such a highly used project,


00:23:34.720 --> 00:23:37.680
I can see the danger here, but have you considered,


00:23:37.680 --> 00:23:39.980
or have you run it through things like Flint


00:23:39.980 --> 00:23:42.280
to convert all the strings to f-strings?


00:23:42.280 --> 00:23:43.920
Have you, or some of these like upgrades


00:23:43.920 --> 00:23:45.280
to the latest idioms where you can say,


00:23:45.280 --> 00:23:47.120
I want it to be three, seven and above,


00:23:47.120 --> 00:23:48.840
and anything that's older than that, you know,


00:23:48.840 --> 00:23:50.880
kind of rework it.


00:23:50.880 --> 00:23:55.880
- I have used PyUpgrade on it when I dropped 2.7,


00:23:55.880 --> 00:23:59.800
which was a couple of years back,


00:23:59.800 --> 00:24:01.440
and there are now f-strings all through it.


00:24:01.440 --> 00:24:04.200
But for instance, I don't use Black.


00:24:04.200 --> 00:24:07.680
There is a pull request to add type annotations to it,


00:24:07.680 --> 00:24:09.800
but it's a big project that doesn't,


00:24:09.800 --> 00:24:12.480
it's not gaining the momentum it needs to get done.


00:24:14.460 --> 00:24:19.460
So I tend to let sleeping dogs lie where it's working.


00:24:19.460 --> 00:24:22.620
Or if I don't, I don't know what I'm gonna get out of it.


00:24:22.620 --> 00:24:24.460
For instance, I use opt parse


00:24:24.460 --> 00:24:26.380
to parse the command line arguments,


00:24:26.380 --> 00:24:29.860
and that wasn't even the right thing to use in 2.7.


00:24:29.860 --> 00:24:33.540
That was the old thing that arg parse replaced.


00:24:33.540 --> 00:24:35.500
But it still works, it's still in there.


00:24:35.500 --> 00:24:37.460
Parsing's fine, you know, so.


00:24:37.460 --> 00:24:39.940
- Yeah, yeah, sometimes there's no value in


00:24:39.940 --> 00:24:43.140
possibly adding bugs to something


00:24:43.140 --> 00:24:45.200
that you don't intend to touch at all, right?


00:24:45.200 --> 00:24:46.660
- Right, exactly.


00:24:46.660 --> 00:24:48.540
- Now, maybe if you were to say,


00:24:48.540 --> 00:24:51.240
we're gonna really dramatically expand the way


00:24:51.240 --> 00:24:53.160
that it can take arguments and do things.


00:24:53.160 --> 00:24:55.060
Well, then maybe all of a sudden you are like,


00:24:55.060 --> 00:24:56.720
we could get more flexibility with the new thing,


00:24:56.720 --> 00:24:59.620
but if you're not gonna touch it, then just let it be.


00:24:59.620 --> 00:25:00.740
Yeah. - Right.


00:25:00.740 --> 00:25:02.500
- All right, let's get to the next one here.


00:25:02.500 --> 00:25:04.340
Shields.io.


00:25:04.340 --> 00:25:06.860
- Yes. - If you want a badge,


00:25:06.860 --> 00:25:07.980
come to the place. - Shields.io,


00:25:07.980 --> 00:25:09.100
they will make a badge for you.


00:25:09.100 --> 00:25:11.940
And this, Shields.io is a very impressive service,


00:25:11.940 --> 00:25:13.120
I have to say.


00:25:13.120 --> 00:25:17.960
because they give you lots of ways to make badges


00:25:17.960 --> 00:25:20.480
including ways that I didn't even understand they could do.


00:25:20.480 --> 00:25:22.380
I found this out when actually


00:25:22.380 --> 00:25:24.100
when I made that Mastodon badge


00:25:24.100 --> 00:25:27.680
that you can tell shields.io to go and grab some Jason


00:25:27.680 --> 00:25:30.440
from some other website and extract data


00:25:30.440 --> 00:25:34.160
from that Jason response and include it in your badge.


00:25:34.160 --> 00:25:37.280
- So you just call the Mastodon API public API


00:25:37.280 --> 00:25:39.800
to get stuff about your account and pull it.


00:25:39.800 --> 00:25:43.640
- Yeah, so if you look at my Mastodon badge,


00:25:43.640 --> 00:25:48.260
which is on github/nedbat or on the coverage.py page,


00:25:48.260 --> 00:25:49.840
it has my count of followers,


00:25:49.840 --> 00:25:51.940
and that's coming from a JSON response


00:25:51.940 --> 00:25:55.020
from the Mastodon API on my server,


00:25:55.020 --> 00:25:57.100
on my Mastodon server,


00:25:57.100 --> 00:26:00.160
and then shields.io is incorporating that number


00:26:00.160 --> 00:26:03.480
into the image that it then serves to GitHub


00:26:03.480 --> 00:26:05.280
to display into the README.


00:26:05.280 --> 00:26:07.040
I don't wanna think about how many computers


00:26:07.040 --> 00:26:09.080
are actually involved to get that stupid number


00:26:09.080 --> 00:26:11.400
on that page, but it's very impressive.


00:26:11.400 --> 00:26:13.680
- I think it's cached somewhere.


00:26:13.680 --> 00:26:15.200
- I hope so, I don't know.


00:26:15.200 --> 00:26:18.120
- How interesting.


00:26:18.120 --> 00:26:20.120
- Yeah, but they've got a bunch of these--


00:26:20.120 --> 00:26:20.960
- So we can put all sorts of things, right?


00:26:20.960 --> 00:26:21.780
Yeah, go ahead.


00:26:21.780 --> 00:26:23.340
- Yeah, they've got a bunch of these prebuilt badges


00:26:23.340 --> 00:26:25.760
that can tell you all sorts of things.


00:26:25.760 --> 00:26:28.520
Like, you know, what version of your project


00:26:28.520 --> 00:26:32.040
is current on PyPI and what Python versions it supports


00:26:32.040 --> 00:26:35.340
and what your license is and all sorts of things.


00:26:35.340 --> 00:26:37.440
It's very impressive.


00:26:38.520 --> 00:26:40.400
- Yeah, and it supports not just Python,


00:26:40.400 --> 00:26:44.160
but I saw Node.js, NuGet, PowerShell.


00:26:44.160 --> 00:26:45.000
- Yeah.


00:26:45.000 --> 00:26:47.140
- Stuff that I don't spend as much time on over here.


00:26:47.140 --> 00:26:48.600
- Yeah, there's things I've never even heard of


00:26:48.600 --> 00:26:49.440
that it shows here.


00:26:49.440 --> 00:26:50.260
- Of course there are.


00:26:50.260 --> 00:26:51.200
- And some, it doesn't even,


00:26:51.200 --> 00:26:53.040
they don't even document all the things it can do.


00:26:53.040 --> 00:26:57.880
I mentioned earlier that the badge on the PyPI page


00:26:57.880 --> 00:27:01.660
will show the status of the latest PyPI release,


00:27:01.660 --> 00:27:05.120
which means if you go back 10 years to the coverage.py,


00:27:05.120 --> 00:27:07.040
you know, version three release,


00:27:07.040 --> 00:27:08.800
there's a badge on it that shows you


00:27:08.800 --> 00:27:10.680
that it supports Python 3.11,


00:27:10.680 --> 00:27:13.840
because the badge is showing you the most recent release,


00:27:13.840 --> 00:27:15.080
even though you're looking at the badge


00:27:15.080 --> 00:27:17.320
on the 10-year-old release.


00:27:17.320 --> 00:27:20.480
There's a syntax in shields.io that will let you say,


00:27:20.480 --> 00:27:25.480
show me this factoids as of this particular release 3.0.


00:27:25.480 --> 00:27:27.640
- I see. - And they don't document it.


00:27:27.640 --> 00:27:29.460
So I didn't realize I could do that.


00:27:29.460 --> 00:27:33.940
So there's an awful lot going on in shields.io.


00:27:35.200 --> 00:27:38.200
- Yeah, so if you want a shield for one of those little


00:27:38.200 --> 00:27:40.240
badges for basically anything,


00:27:40.240 --> 00:27:44.180
these are got downloads, users,


00:27:44.180 --> 00:27:46.180
tests, coverage, all these things.


00:27:46.180 --> 00:27:49.980
There's just a, basically they give you a URL, right?


00:27:49.980 --> 00:27:52.840
That you put in into your readme


00:27:52.840 --> 00:27:54.920
and that becomes the badge as it resolves, right?


00:27:54.920 --> 00:27:56.820
- Right, the URL returns you an image


00:27:56.820 --> 00:27:58.960
with the information on it that you want.


00:27:58.960 --> 00:28:01.140
Either information that you put into the URL,


00:28:01.140 --> 00:28:03.600
you can just make a URL that says,


00:28:04.720 --> 00:28:06.640
Michael Kennedy is cool.


00:28:06.640 --> 00:28:08.480
And it will return to you an image that says,


00:28:08.480 --> 00:28:09.920
Michael Kennedy is cool.


00:28:09.920 --> 00:28:12.360
So, you know, it'll just format things for you,


00:28:12.360 --> 00:28:14.880
but it also has ways of getting information


00:28:14.880 --> 00:28:17.280
and then formatting it to give back to you.


00:28:17.280 --> 00:28:18.440
- Okay.


00:28:18.440 --> 00:28:22.600
You probably could put this personally onto places,


00:28:22.600 --> 00:28:24.760
not just on your project,


00:28:24.760 --> 00:28:26.680
but maybe on your GitHub profile potentially.


00:28:26.680 --> 00:28:27.960
- Absolutely.


00:28:27.960 --> 00:28:29.360
Yeah, my GitHub, we-


00:28:29.360 --> 00:28:30.280
- Like a social.


00:28:30.280 --> 00:28:32.900
- I'm embarrassed to talk about how over-automated


00:28:32.900 --> 00:28:34.860
my GitHub profile pages.


00:28:34.860 --> 00:28:36.560
(laughing)


00:28:36.560 --> 00:28:37.400
- I love it.


00:28:37.400 --> 00:28:41.500
All right, shields.io, that's a section for the live badges.


00:28:41.500 --> 00:28:44.600
This one is hot off the presses.


00:28:44.600 --> 00:28:46.900
Let's see if we can find, oh, it says initial commit.


00:28:46.900 --> 00:28:49.840
We got it 10 days ago.


00:28:49.840 --> 00:28:52.700
Will McGuigan of Rich fame.


00:28:52.700 --> 00:28:54.060
- Rich and textual.


00:28:54.060 --> 00:28:55.500
- And textual, yeah.


00:28:55.500 --> 00:28:58.220
Put out a tool to generate a GitHub flavored


00:28:58.220 --> 00:29:01.320
FAQ.markdown document.


00:29:02.560 --> 00:29:03.880
- This is pretty neat.


00:29:03.880 --> 00:29:07.800
- Yeah, and this is a tool,


00:29:07.800 --> 00:29:09.080
I just took a quick look at it.


00:29:09.080 --> 00:29:12.260
It's in a similar vein that you want to make


00:29:12.260 --> 00:29:14.920
little bits of information in a convenient way


00:29:14.920 --> 00:29:16.100
and then have it published


00:29:16.100 --> 00:29:18.260
as a monolithic piece of information.


00:29:18.260 --> 00:29:22.380
In this case, he's talking about FAQ questions.


00:29:22.380 --> 00:29:23.840
And I think he said somewhere here,


00:29:23.840 --> 00:29:26.040
"I got tired of answering the same questions over and over,


00:29:26.040 --> 00:29:29.040
"so I made a tool to make an FAQ," or something like that.


00:29:30.560 --> 00:29:35.560
So, and I don't know, I don't have the same problem


00:29:35.560 --> 00:29:39.560
of needing FAQs produced or why it's easier


00:29:39.560 --> 00:29:41.280
to put them all in separate little files


00:29:41.280 --> 00:29:42.560
that are combined together later


00:29:42.560 --> 00:29:45.280
than just editing one big FAQ page.


00:29:45.280 --> 00:29:46.880
But Will's a smart guy.


00:29:46.880 --> 00:29:50.100
He must've had a problem and he solved it with this tool.


00:29:50.100 --> 00:29:51.760
And it's cool to see.


00:29:51.760 --> 00:29:52.600
- Yeah, it is.


00:29:52.600 --> 00:29:55.320
And this is a little more similar


00:29:55.320 --> 00:29:58.920
to the way you described how you might see


00:29:58.920 --> 00:29:59.960
building up the readme.


00:29:59.960 --> 00:30:02.320
Instead of defining an automa file,


00:30:02.320 --> 00:30:03.920
reaching into a giant document,


00:30:03.920 --> 00:30:05.660
have a bunch of small ones that get assembled


00:30:05.660 --> 00:30:08.120
into a result here.


00:30:08.120 --> 00:30:10.800
- Right, and that's a lot like some of the


00:30:10.800 --> 00:30:13.680
changelog management tools that we're gonna get to also.


00:30:13.680 --> 00:30:17.600
- Yeah, one of the things that prompted Will to do this,


00:30:17.600 --> 00:30:18.900
he says here is,


00:30:18.900 --> 00:30:23.760
people will ask the same question over and over


00:30:23.760 --> 00:30:26.760
and he in issues and he's like,


00:30:26.760 --> 00:30:29.700
you know, I can't, I just can't answer it again.


00:30:29.700 --> 00:30:32.620
how to make a table, or can I make it?


00:30:32.620 --> 00:30:33.500
Yes, you can make a table.


00:30:33.500 --> 00:30:35.620
Here's the link, whatever that is.


00:30:35.620 --> 00:30:39.980
So it has fuzzy matching on suggest.


00:30:39.980 --> 00:30:41.360
So I think this is why it's separate


00:30:41.360 --> 00:30:43.620
'cause you can put alias questions


00:30:43.620 --> 00:30:46.300
to the frequent question.


00:30:46.300 --> 00:30:48.700
And then you can just on the terminal,


00:30:48.700 --> 00:30:51.820
on the shell, you can say factory suggest.


00:30:51.820 --> 00:30:55.620
And if you have some kind of input to it,


00:30:55.620 --> 00:30:58.220
like I took the question that somebody asked me


00:30:58.220 --> 00:31:03.620
I want to point them at the thing so I can just jam that into the terminal.


00:31:03.620 --> 00:31:08.620
And it'll go, actually, that matches over to this FAQ response.


00:31:08.620 --> 00:31:13.860
I see. Yes. And he says that it's designed to be used with a GitHub action


00:31:13.860 --> 00:31:16.500
to post an automated response on an issue.


00:31:16.500 --> 00:31:22.420
I guess that's the point is that if he's getting a ton of issues that all need to be answered,


00:31:22.420 --> 00:31:24.620
instead of saying, go and read the FAQ,


00:31:24.620 --> 00:31:28.620
he's automated the process of putting the answer


00:31:28.620 --> 00:31:31.260
right onto the issue, which is cool.


00:31:31.260 --> 00:31:34.060
I didn't realize that aspect of it, so that's very cool.


00:31:34.060 --> 00:31:37.040
- Yeah, so this is all of 10 days old.


00:31:37.040 --> 00:31:39.140
People can check that out if they want.


00:31:39.140 --> 00:31:41.940
- Hot off the presses, torn from today's headlines.


00:31:41.940 --> 00:31:42.780
- Exactly.


00:31:42.780 --> 00:31:46.820
We talked about contributions


00:31:46.820 --> 00:31:48.900
and how people appreciate getting credit


00:31:48.900 --> 00:31:52.520
for participating.


00:31:53.980 --> 00:31:57.320
I'm sure there are people who have closed a small issue


00:31:57.320 --> 00:32:00.300
or found and fixed a small bug in coverage.py


00:32:00.300 --> 00:32:02.620
or added a small feature and feel really proud of that.


00:32:02.620 --> 00:32:06.580
But they would feel more proud if you acknowledged


00:32:06.580 --> 00:32:07.420
that they did it.


00:32:07.420 --> 00:32:08.460
- Yes, they do.


00:32:08.460 --> 00:32:09.580
- I accept your PR, right?


00:32:09.580 --> 00:32:10.820
Of course.


00:32:10.820 --> 00:32:13.220
So tell us about this all contributors.


00:32:13.220 --> 00:32:18.220
- Yeah, so this is a GitHub bot that on an issue,


00:32:18.220 --> 00:32:22.460
you can say, add all contributors,


00:32:22.460 --> 00:32:28.300
add Michael Kennedy to the bug fix sections of the contributors because he did it right


00:32:28.300 --> 00:32:33.100
here in this issue that we're talking about. And that's really cool because it, you know,


00:32:33.100 --> 00:32:37.500
when I, so I don't, I don't use this tool. I, like I said, I tend to be very low tech. I do


00:32:37.500 --> 00:32:41.420
acknowledge my contributors. I'll mention them in the change log and I have a contributors.txt


00:32:41.420 --> 00:32:48.060
file that lists everyone who's contributed in some way. And I will hand edit that. And it can


00:32:48.060 --> 00:32:53.180
be a you know I have to remember to put it over there and put it over there I don't get so many


00:32:53.180 --> 00:32:58.380
contributions to coverage.py that it's a burden and I kind of actually like that little sort of


00:32:58.380 --> 00:33:02.940
moment of zen of you know finishing the paperwork and you're crossing the t and nodding the eyes


00:33:02.940 --> 00:33:07.980
but if you're on a big project where you are getting a lot of contributions I could see how


00:33:07.980 --> 00:33:14.060
doing this with a bot would be you know save you that little bit of work that that could become a


00:33:14.060 --> 00:33:18.500
big amount of work and you don't want to skip it, right?


00:33:18.500 --> 00:33:23.140
Because like we said, it seems like a small thing to us


00:33:23.140 --> 00:33:24.900
and maybe like, eh, I don't want to have to bother,


00:33:24.900 --> 00:33:26.620
but it's a huge thing to the contributor


00:33:26.620 --> 00:33:28.180
to have their name mentioned.


00:33:28.180 --> 00:33:29.020
- Yes.


00:33:29.020 --> 00:33:29.840
- Yeah.


00:33:29.840 --> 00:33:30.780
- And maybe not just pride,


00:33:30.780 --> 00:33:32.900
maybe they get a job because of it, right?


00:33:32.900 --> 00:33:35.940
They can say, I'm getting hired to work on Flask.


00:33:35.940 --> 00:33:38.100
Look here, I'm listed as a contributor on Flask.


00:33:38.100 --> 00:33:41.500
See, that puts me above 99% of the other people applying.


00:33:41.500 --> 00:33:42.340
- That's right.


00:33:42.340 --> 00:33:45.260
- The internet is the kind of place where you don't,


00:33:45.260 --> 00:33:47.380
when you get a little connection like that,


00:33:47.380 --> 00:33:49.220
you never know what it's gonna lead to.


00:33:49.220 --> 00:33:50.060
- Yes.


00:33:50.060 --> 00:33:51.660
- There's all sorts of things that pop up


00:33:51.660 --> 00:33:54.020
because of the strangest little mentions.


00:33:54.020 --> 00:33:57.380
You might get invited to be on a podcast


00:33:57.380 --> 00:33:58.620
just because someone mentioned


00:33:58.620 --> 00:34:00.700
one of your dopey little tools on that.


00:34:00.700 --> 00:34:04.940
- Or you might even start a podcast.


00:34:04.940 --> 00:34:06.340
- You might even start a podcast.


00:34:06.340 --> 00:34:07.380
Yeah, watch out.


00:34:07.380 --> 00:34:08.620
There's danger ahead.


00:34:08.620 --> 00:34:10.140
- Then you're really in for it.


00:34:10.140 --> 00:34:13.060
So the way that this allcontributors.org bot


00:34:13.060 --> 00:34:14.900
seems to work, I don't use it personally


00:34:14.900 --> 00:34:17.020
'cause I don't have projects that are big enough


00:34:17.020 --> 00:34:20.820
to really justify this in terms of open source projects,


00:34:20.820 --> 00:34:24.140
but in the comment on an issue or on a PR


00:34:24.140 --> 00:34:25.600
or one of those types of things,


00:34:25.600 --> 00:34:28.100
you can just say @allcontributors,


00:34:28.100 --> 00:34:31.580
please add @, GitHub name of contributor,


00:34:31.580 --> 00:34:34.460
and then it says for design or for bug fixes


00:34:34.460 --> 00:34:38.220
or for documentation, and then the bot says,


00:34:38.220 --> 00:34:40.320
added them as contributor.


00:34:40.320 --> 00:34:41.400
That's really cool.


00:34:41.400 --> 00:34:42.480
- Yeah.


00:34:42.480 --> 00:34:44.280
Yeah, so like I said, I have a text file.


00:34:44.280 --> 00:34:46.900
One of the unusual things I do with my text file


00:34:46.900 --> 00:34:49.000
is that when I build for coverage.py,


00:34:49.000 --> 00:34:52.440
when I build the release,


00:34:52.440 --> 00:34:55.320
if you go and look at who the author of coverage.py is,


00:34:55.320 --> 00:34:59.280
it says Ned Batchelder and 137 other people.


00:34:59.280 --> 00:35:03.080
And that number, 137, is counting the number of lines


00:35:03.080 --> 00:35:05.160
in the contributors.txt.


00:35:05.160 --> 00:35:07.800
'Cause I want it to be clear that, yeah, it's not just me.


00:35:07.800 --> 00:35:09.360
there's lots of people helping with this


00:35:09.360 --> 00:35:10.680
and you can help too.


00:35:10.680 --> 00:35:13.040
- Yeah, especially over 18 years.


00:35:13.040 --> 00:35:13.880
- Well, yeah.


00:35:13.880 --> 00:35:15.780
- All right.


00:35:15.780 --> 00:35:20.680
Getting to the part of expanding beyond just readme.md,


00:35:20.680 --> 00:35:23.680
but the broader experience of things


00:35:23.680 --> 00:35:27.100
that maybe gets their way pulled back into the readme


00:35:27.100 --> 00:35:28.760
is a changelog.


00:35:28.760 --> 00:35:29.600
- Yes.


00:35:29.600 --> 00:35:31.240
- Are you familiar with keepachangelog.com?


00:35:31.240 --> 00:35:33.120
- I am very familiar with keepachangelog.com.


00:35:33.120 --> 00:35:34.360
- All right, tell people about this.


00:35:34.360 --> 00:35:37.400
- So keepachangelog is basically an advocacy site


00:35:37.400 --> 00:35:39.420
that says you should really have a change log


00:35:39.420 --> 00:35:42.240
and here's what we mean by that and why should you do it.


00:35:42.240 --> 00:35:46.360
And I absolutely agree with the idea of keeping a change log


00:35:46.360 --> 00:35:48.440
which is a running history


00:35:48.440 --> 00:35:50.460
of what has changed in your project.


00:35:50.460 --> 00:35:56.940
And that's because people that your users want to know


00:35:56.940 --> 00:35:58.040
what's changed.


00:35:58.040 --> 00:36:00.140
I mean, it sounds really simple, really basic


00:36:00.140 --> 00:36:06.040
but I think people can approach it in really simple ways


00:36:06.040 --> 00:36:07.460
that aren't as valuable.


00:36:07.460 --> 00:36:09.480
And if you put a little bit more work into it,


00:36:09.480 --> 00:36:11.520
you'll find it's really, really valuable.


00:36:11.520 --> 00:36:17.120
- Well, and you need to know as a consumer of a library,


00:36:17.120 --> 00:36:20.640
is there an immediacy to this new version


00:36:20.640 --> 00:36:22.480
that I need to pay attention to?


00:36:22.480 --> 00:36:24.440
Is there a risk to this new version


00:36:24.440 --> 00:36:25.760
that I should be aware of?


00:36:25.760 --> 00:36:27.520
Or do I don't care and I just leave my thing pen


00:36:27.520 --> 00:36:28.520
the way it was before, right?


00:36:28.520 --> 00:36:30.460
If it says there's a CVE,


00:36:30.460 --> 00:36:33.580
where if we send the dollar sign,


00:36:33.580 --> 00:36:34.540
it takes over your server,


00:36:34.540 --> 00:36:36.460
Like you should get in there straight away.


00:36:36.460 --> 00:36:37.900
- Yes, exactly.


00:36:37.900 --> 00:36:38.740
- Exactly.


00:36:38.740 --> 00:36:40.080
- But if it says we deprecated this thing


00:36:40.080 --> 00:36:41.340
that you were depending upon,


00:36:41.340 --> 00:36:42.660
like, well, don't just push it.


00:36:42.660 --> 00:36:44.220
We're gonna need to think about this.


00:36:44.220 --> 00:36:46.280
- Right, and I think the way you just described that


00:36:46.280 --> 00:36:50.060
is really good, which is that the user of the tool,


00:36:50.060 --> 00:36:51.260
the library, the application,


00:36:51.260 --> 00:36:54.500
they wanna understand, you know, what's in it for me.


00:36:54.500 --> 00:36:56.580
Like from my perspective,


00:36:56.580 --> 00:36:58.300
what has gone on with this library?


00:36:58.300 --> 00:36:59.780
And I think that's one of the things


00:36:59.780 --> 00:37:02.540
that's difficult for people is,


00:37:02.540 --> 00:37:05.820
for maintainers is to put themselves in their user's shoes


00:37:05.820 --> 00:37:09.020
and think what's changed about this that matters.


00:37:09.020 --> 00:37:12.460
There are some auto-generated change logs


00:37:12.460 --> 00:37:14.980
that for instance, just put all the Git commit messages


00:37:14.980 --> 00:37:16.200
in the change log.


00:37:16.200 --> 00:37:18.940
And those drive me nuts because they're telling me


00:37:18.940 --> 00:37:20.420
all sorts of things that I don't care about.


00:37:20.420 --> 00:37:23.340
I don't care that you restyled,


00:37:23.340 --> 00:37:26.180
changed all the spaces to tabs in some file.


00:37:26.180 --> 00:37:27.420
That doesn't matter to me.


00:37:27.420 --> 00:37:28.300
That's just noise.


00:37:28.300 --> 00:37:30.260
You're hiding, you're burying the lead


00:37:30.260 --> 00:37:33.140
by telling me stuff that doesn't matter.


00:37:33.140 --> 00:37:36.580
So Keep A Change Log is a good, like I said, advocacy site.


00:37:36.580 --> 00:37:39.440
They have their guiding principles.


00:37:39.440 --> 00:37:42.840
Change logs are for humans, not machines, things like that.


00:37:42.840 --> 00:37:47.220
And they advocate for marking your commits with,


00:37:47.220 --> 00:37:48.580
or marking your change logs,


00:37:48.580 --> 00:37:51.220
putting them into sections of what's been added,


00:37:51.220 --> 00:37:53.820
what's been changed, what's been deprecated,


00:37:53.820 --> 00:37:58.020
so that people can zero in on what matters, right?


00:37:58.020 --> 00:38:00.540
Deprecated means I can't use the thing anymore


00:38:00.540 --> 00:38:01.940
and I need to make a change.


00:38:01.940 --> 00:38:04.440
And security means I really better get on this


00:38:04.440 --> 00:38:06.020
or I might be in trouble.


00:38:06.020 --> 00:38:07.500
So it's good to highlight those things


00:38:07.500 --> 00:38:09.820
and put it into the user's perspective.


00:38:09.820 --> 00:38:11.700
- Yeah.


00:38:11.700 --> 00:38:16.940
I like the guiding principles here about it's for humans,


00:38:16.940 --> 00:38:19.220
every version should have one,


00:38:19.220 --> 00:38:21.580
the release date should be specified.


00:38:21.580 --> 00:38:24.580
It's easy to just say, well, version 2.1,


00:38:24.580 --> 00:38:25.420
have these changes.


00:38:25.420 --> 00:38:26.500
Like, well, wait a minute,


00:38:26.500 --> 00:38:28.860
- More than three, like, was that last week


00:38:28.860 --> 00:38:29.740
or five years ago?


00:38:29.740 --> 00:38:32.020
I need to know the relevant. - Right, put in the date.


00:38:32.020 --> 00:38:33.140
Date things.


00:38:33.140 --> 00:38:34.440
I mentioned my son doing art.


00:38:34.440 --> 00:38:36.020
I always told him when he was a kid,


00:38:36.020 --> 00:38:38.300
put the date on the picture so I'll know how old you were


00:38:38.300 --> 00:38:40.420
when you made the picture and you never wanted to do it.


00:38:40.420 --> 00:38:44.180
But change logs, you can put dates on things.


00:38:44.180 --> 00:38:47.100
Like you said, you don't know how long ago something was.


00:38:47.100 --> 00:38:48.680
- Yeah, you don't wanna have to go back


00:38:48.680 --> 00:38:51.100
and diff the thing to figure out when it was committed.


00:38:51.100 --> 00:38:51.940
- Right.


00:38:51.940 --> 00:38:53.580
- All right.


00:38:54.740 --> 00:38:57.900
And we've got one chat from a viewer


00:38:57.900 --> 00:38:59.740
talking about creating change logs,


00:38:59.740 --> 00:39:01.180
like as a good job for AI.


00:39:01.180 --> 00:39:03.660
And these days, I don't know, 2022,


00:39:03.660 --> 00:39:05.800
not only is Twitter versus Mastodon,


00:39:05.800 --> 00:39:08.720
but chat, GP, what's it called?


00:39:08.720 --> 00:39:11.140
The AI thing? - GP3, I think.


00:39:11.140 --> 00:39:14.140
- Yeah, that seems to be amazing.


00:39:14.140 --> 00:39:16.580
And I can probably retire soon


00:39:16.580 --> 00:39:18.260
'cause it's gonna do my job, I think.


00:39:18.260 --> 00:39:19.340
- Yeah. - I don't know.


00:39:19.340 --> 00:39:21.780
- Just yell commands, just yell stuff at the computer


00:39:21.780 --> 00:39:23.040
from like the couch.


00:39:23.040 --> 00:39:26.120
- Computer, no website. - Just make it better.


00:39:26.120 --> 00:39:27.580
- Scale the website computer.


00:39:27.580 --> 00:39:29.440
(laughing)


00:39:29.440 --> 00:39:30.280
- Exactly.


00:39:30.280 --> 00:39:33.440
Yeah, no, that's a good point.


00:39:33.440 --> 00:39:35.880
And Mary out there says it's called Skynet.


00:39:35.880 --> 00:39:39.520
There are some amazing tools, like bit of a diversion,


00:39:39.520 --> 00:39:41.640
but there's like this thing called Jasper,


00:39:41.640 --> 00:39:43.080
a friend just told me about.


00:39:43.080 --> 00:39:45.040
And what you do is you write,


00:39:45.040 --> 00:39:49.600
it's like Google Copilot for writing content.


00:39:49.600 --> 00:39:53.400
And there's just a bunch of crazy, crazy things out there.


00:39:53.400 --> 00:39:54.560
- Yeah, it is.


00:39:54.560 --> 00:39:58.280
We've seen a complete change in the progression of things


00:39:58.280 --> 00:39:59.480
and it's astounding.


00:39:59.480 --> 00:40:01.800
- It is.


00:40:01.800 --> 00:40:03.720
All right, well, let's get to one of the first tools


00:40:03.720 --> 00:40:06.120
that got you recommended.


00:40:06.120 --> 00:40:08.800
The reason I invited you is because I asked people


00:40:08.800 --> 00:40:10.200
for general recommendations


00:40:10.200 --> 00:40:11.560
and they kept recommending your tools.


00:40:11.560 --> 00:40:13.080
I'm like, all right, well, I should just have Ned


00:40:13.080 --> 00:40:13.920
go on the show to talk about this.


00:40:13.920 --> 00:40:17.120
- Yeah, I'll just come and talk about all of it, sure.


00:40:17.120 --> 00:40:21.340
- All right, so we saw the keep a change log ideas,


00:40:21.340 --> 00:40:23.780
but that's in theory, not in practice, right?


00:40:23.780 --> 00:40:26.340
- Right, the keep a change log just says,


00:40:26.340 --> 00:40:27.500
look, you should write this stuff


00:40:27.500 --> 00:40:28.380
and here's how you should write it.


00:40:28.380 --> 00:40:31.620
It's not a tool, it's just encouraging people


00:40:31.620 --> 00:40:32.580
to do a good job.


00:40:32.580 --> 00:40:34.940
Excuse me.


00:40:34.940 --> 00:40:40.900
So I looked around at tools when I wanted to get people


00:40:40.900 --> 00:40:43.260
to make better change logs.


00:40:43.260 --> 00:40:45.020
And there was one called Town Crier


00:40:45.020 --> 00:40:46.880
from the Twisted project.


00:40:46.880 --> 00:40:50.300
and they solved the problem that a lot of change logs have.


00:40:50.300 --> 00:40:52.300
So if you just have a change log file


00:40:52.300 --> 00:40:53.840
and everyone who makes a change to the code


00:40:53.840 --> 00:40:56.180
is supposed to put an entry into the change log file,


00:40:56.180 --> 00:40:59.680
then that file becomes a merge conflict every time, right?


00:40:59.680 --> 00:41:01.640
Because I added a feature, I put my thing at the top.


00:41:01.640 --> 00:41:03.480
You added a feature, you put a thing at the top


00:41:03.480 --> 00:41:05.300
and it's a merge conflict.


00:41:05.300 --> 00:41:06.920
Years ago at work, what I tried to do


00:41:06.920 --> 00:41:09.680
is have a change log file and I told developers,


00:41:09.680 --> 00:41:12.120
put your change near the top of the file


00:41:12.120 --> 00:41:14.440
in the hopes that they wouldn't merge conflict.


00:41:14.440 --> 00:41:15.780
And developers would come to me and say,


00:41:15.780 --> 00:41:18.060
What do you mean by near the top of the file?


00:41:18.060 --> 00:41:21.060
Because they're engineers, they need precise directions.


00:41:21.060 --> 00:41:22.940
So, okay, that wasn't gonna work.


00:41:22.940 --> 00:41:26.540
So the idea that Town Crier uses,


00:41:26.540 --> 00:41:29.960
and also the CPython source code has a thing called blurb


00:41:29.960 --> 00:41:30.980
that does the same idea,


00:41:30.980 --> 00:41:32.820
which is when you make a change to the code,


00:41:32.820 --> 00:41:35.540
you also write one small file,


00:41:35.540 --> 00:41:38.580
which has just the entry for the changelog in it.


00:41:38.580 --> 00:41:41.460
And you check that in, there's a special directory


00:41:41.460 --> 00:41:43.700
that just has those little fragments in it.


00:41:43.700 --> 00:41:45.660
And so when you make your code change,


00:41:45.660 --> 00:41:48.140
you also add a fragment to that directory.


00:41:48.140 --> 00:41:51.580
And then later, when it's time to actually put everything,


00:41:51.580 --> 00:41:53.060
you know, make a release,


00:41:53.060 --> 00:41:55.320
all those fragments can be concatenated together


00:41:55.320 --> 00:41:56.940
to become the changelog.


00:41:56.940 --> 00:41:58.560
And the good thing about that is that


00:41:58.560 --> 00:42:00.300
you don't have merge conflicts


00:42:00.300 --> 00:42:01.880
'cause everyone creates their own fragment.


00:42:01.880 --> 00:42:05.320
They have, you know, unique names based on some principle.


00:42:05.320 --> 00:42:08.780
And then at publication time, you know,


00:42:08.780 --> 00:42:09.760
when the release is made,


00:42:09.760 --> 00:42:11.980
they can get concatenated together.


00:42:11.980 --> 00:42:13.620
And like I said, Town Crier did this


00:42:13.620 --> 00:42:15.040
and Blurb also did this.


00:42:15.040 --> 00:42:20.040
I looked at them and they were both a bit more opinionated than I wanted.


00:42:20.040 --> 00:42:26.440
I knew that if I was going to get a lot of people to use this thing, that it needed to be very, very flexible.


00:42:26.440 --> 00:42:30.040
And I actually took an approach when I was building Scriv of,


00:42:30.040 --> 00:42:36.040
"What's the least opinionated I can be? How many different ways can I let you decide how you want it to work?"


00:42:36.040 --> 00:42:42.040
At the time, Black was rising in its popularity and it was famously opinionated,


00:42:42.040 --> 00:42:44.840
And so I sort of took the opposite approach.


00:42:44.840 --> 00:42:47.480
- Nice.


00:42:47.480 --> 00:42:50.400
- Yeah, so Scriv, Scriv's idea is that it's got


00:42:50.400 --> 00:42:53.640
a few commands you say Scriv create to make a fragment,


00:42:53.640 --> 00:42:56.040
Scriv collect to collect them all together.


00:42:56.040 --> 00:42:58.000
Those are the two main ones.


00:42:58.000 --> 00:42:59.840
- Scriv looks like, it looks like a great tool


00:42:59.840 --> 00:43:01.240
and it looks like one of these things


00:43:01.240 --> 00:43:03.480
you could pipx install.


00:43:03.480 --> 00:43:04.320
- Yes.


00:43:04.320 --> 00:43:05.920
- Because you're not gonna, it's unlikely


00:43:05.920 --> 00:43:08.280
you'll depend upon it for your code to run.


00:43:08.280 --> 00:43:11.840
You just need that command around to manage a project.


00:43:11.840 --> 00:43:13.880
- Right, or you can put it into your


00:43:13.880 --> 00:43:15.640
development requirements.txt,


00:43:15.640 --> 00:43:19.120
however it is you manage your project tooling.


00:43:19.120 --> 00:43:21.140
But sure, pipx would work too.


00:43:21.140 --> 00:43:25.140
And it's actually grown one other command


00:43:25.140 --> 00:43:29.660
for making GitHub releases.


00:43:29.660 --> 00:43:32.160
So it will actually parse your changelog file,


00:43:32.160 --> 00:43:35.200
even if your changelog file wasn't made by Scriv,


00:43:35.200 --> 00:43:37.340
it will parse your changelog file


00:43:37.340 --> 00:43:40.380
and then create a GitHub release from your changelog file,


00:43:41.580 --> 00:43:45.620
which gets at a philosophical opinionated point of mine,


00:43:45.620 --> 00:43:49.060
which is that the information should live in just one place


00:43:49.060 --> 00:43:51.820
and that place should be a file that you check into Git.


00:43:51.820 --> 00:43:54.520
It should be a file that people can clone


00:43:54.520 --> 00:43:56.020
when they clone your repo.


00:43:56.020 --> 00:43:58.340
If they wanna just look at the changelog


00:43:58.340 --> 00:44:00.160
in Emacs or whatever locally,


00:44:00.160 --> 00:44:01.340
they should be able to do that.


00:44:01.340 --> 00:44:03.820
And since you don't wanna duplicate information,


00:44:03.820 --> 00:44:06.640
but people do seem to like having GitHub releases,


00:44:06.640 --> 00:44:10.980
publish a GitHub release based on the information


00:44:10.980 --> 00:44:12.380
from the changelog file,


00:44:12.380 --> 00:44:15.240
rather than having the release be the source of truth,


00:44:15.240 --> 00:44:17.900
where it can't be cloned, it can't be edited,


00:44:17.900 --> 00:44:20.300
it can't be, you know, there's no commits


00:44:20.300 --> 00:44:22.560
that you can track to see who put that text there,


00:44:22.560 --> 00:44:23.980
those sorts of things.


00:44:23.980 --> 00:44:25.980
- Okay, yeah, that makes a lot of sense.


00:44:25.980 --> 00:44:29.980
Let's see, out in the audience, we got another question.


00:44:29.980 --> 00:44:32.540
Last changelog I read was for Python 3.11.


00:44:32.540 --> 00:44:33.480
Did you read that?


00:44:33.480 --> 00:44:38.260
It's a bit of a novel.


00:44:38.260 --> 00:44:40.660
- Well, yeah, so the CPython developers


00:44:40.660 --> 00:44:42.500
have taken to heart the idea,


00:44:42.500 --> 00:44:44.920
and I make it sound like this is a recent development,


00:44:44.920 --> 00:44:46.340
they've always done this.


00:44:46.340 --> 00:44:49.820
You know, Python 3.11 has a what's new in 3.11,


00:44:49.820 --> 00:44:52.580
and they tend to be very, very detailed


00:44:52.580 --> 00:44:55.260
about putting stuff in the what's new document.


00:44:55.260 --> 00:44:57.300
And like I said, they've got their own custom tool


00:44:57.300 --> 00:45:01.820
called blurb, which is how CPython core developers,


00:45:01.820 --> 00:45:04.720
they write what are called news entries,


00:45:04.720 --> 00:45:07.260
which get created as small files in a custom,


00:45:07.260 --> 00:45:09.720
in a dedicated directory,


00:45:09.720 --> 00:45:13.120
and then those get aggregated into the what's new document.


00:45:13.120 --> 00:45:18.640
- Yeah, in that changelog, there's 180,000 words.


00:45:18.640 --> 00:45:22.320
Typical novels like 80,000.


00:45:22.320 --> 00:45:25.000
So that's a proper changelog right there.


00:45:25.000 --> 00:45:26.920
- Yeah, there's more information there


00:45:26.920 --> 00:45:28.520
than any one person needs,


00:45:28.520 --> 00:45:32.300
but everything that's there, someone does need.


00:45:32.300 --> 00:45:33.140
- That's right.


00:45:33.140 --> 00:45:35.680
And each one of those links to like a GitHub issue


00:45:35.680 --> 00:45:38.040
or a PEP or something like that.


00:45:38.040 --> 00:45:39.320
- Yeah. - Yeah.


00:45:39.320 --> 00:45:40.180
And there's a lot of those.


00:45:40.180 --> 00:45:41.740
I just noticed, I think it was today


00:45:41.740 --> 00:45:44.880
that they got GitHub issued number 100,000


00:45:44.880 --> 00:45:46.280
in the CPython Depot.


00:45:46.280 --> 00:45:47.480
- Oh, wow. Okay.


00:45:47.480 --> 00:45:48.600
That's major.


00:45:48.600 --> 00:45:49.440
- Yeah.


00:45:49.440 --> 00:45:51.520
- And since it's been chugging along for a while.


00:45:51.520 --> 00:45:53.200
All right. So this looks like a great idea.


00:45:53.200 --> 00:45:54.120
What do we got up next?


00:45:54.120 --> 00:45:56.120
Oh, I just also wanted to just give credits


00:45:56.120 --> 00:46:00.780
because I'm getting credit from Colin Sullivan


00:46:00.780 --> 00:46:03.480
who sent this in amongst some other things as well


00:46:03.480 --> 00:46:04.960
over on Mastodon.


00:46:04.960 --> 00:46:07.080
So thanks for sharing that.


00:46:08.620 --> 00:46:10.700
We got, this is another one, I'm gonna go quick


00:46:10.700 --> 00:46:13.220
because it's not a Python tool and it's actually


00:46:13.220 --> 00:46:14.460
in a technology I've never heard of.


00:46:14.460 --> 00:46:16.260
Maybe you've heard of it, Ned.


00:46:16.260 --> 00:46:17.540
- So I hadn't heard of this.


00:46:17.540 --> 00:46:20.760
So this is called ChangeLog Manager from Masukomi.


00:46:20.760 --> 00:46:23.680
And it's interesting.


00:46:23.680 --> 00:46:28.340
He, Masukomi, is one of those bloggers


00:46:28.340 --> 00:46:30.580
from 15 or 20 years ago that I'd lost track of


00:46:30.580 --> 00:46:33.380
and suddenly got reconnected to on Mastodon.


00:46:33.380 --> 00:46:36.500
And when I asked about, I got a little petulant


00:46:36.500 --> 00:46:42.740
mastodon about a changelog that I found completely useless and he chimed in with a long thread about


00:46:42.740 --> 00:46:47.540
how aggravated he is by changelogs and how hard it is to get people to do them well and pointed


00:46:47.540 --> 00:46:52.900
me at this tool that he had written about it. Yeah, yeah, yeah, it looks like a cool tool.


00:46:52.900 --> 00:46:57.700
People can check it out if it works well. It's written in a language called or technology called


00:46:57.700 --> 00:47:01.700
Crystal. I feel like I don't, I don't know, it makes me feel old all of a sudden not even know


00:47:01.700 --> 00:47:10.980
that that's a language. I don't know. But wait, hey, look, Colin's out in the audience. Hey, Colin.


00:47:10.980 --> 00:47:15.860
>> Hi, Colin. Thanks for the recommendation. You got me on here.


00:47:15.860 --> 00:47:26.420
>> Yeah, absolutely. So anyway, this is a cool project here. And people can check it out. And


00:47:26.420 --> 00:47:28.740
And yeah, it's got a lot of the philosophy


00:47:28.740 --> 00:47:29.980
of how you should do it,


00:47:29.980 --> 00:47:33.580
how you shouldn't just have commit messages.


00:47:33.580 --> 00:47:38.580
I remember hearing about tools that would look for swearing


00:47:38.580 --> 00:47:42.220
and other kinds of frustration in commit messages


00:47:42.220 --> 00:47:44.900
and not allow those particular messages


00:47:44.900 --> 00:47:46.780
to get into the changelog.


00:47:46.780 --> 00:47:47.620
- Yeah.


00:47:47.620 --> 00:47:49.160
- But I don't think that, as you pointed out already,


00:47:49.160 --> 00:47:54.060
that individual commits are generally the right granularity.


00:47:54.060 --> 00:47:55.700
- Right, commits definitely are not.


00:47:55.700 --> 00:47:59.420
Some of these tools will aggregate your pull requests


00:47:59.420 --> 00:48:00.380
to be the change logs.


00:48:00.380 --> 00:48:01.300
And that's a little bit better


00:48:01.300 --> 00:48:04.700
because they're larger grained.


00:48:04.700 --> 00:48:07.180
But even so, I think there's real value


00:48:07.180 --> 00:48:09.660
in hand curating your change log.


00:48:09.660 --> 00:48:12.780
Start with a list of pull requests,


00:48:12.780 --> 00:48:14.760
but then take a look at it, reorder them


00:48:14.760 --> 00:48:17.580
so they make some sense and tell the story.


00:48:17.580 --> 00:48:18.420
If you have three pull requests--


00:48:18.420 --> 00:48:19.380
- Put the important stuff on top.


00:48:19.380 --> 00:48:20.500
- Put the important stuff on top.


00:48:20.500 --> 00:48:22.140
If you have three pull requests,


00:48:22.140 --> 00:48:24.060
which just by coincidence all changed


00:48:24.060 --> 00:48:28.240
how you handle file matching, then make an entry that says,


00:48:28.240 --> 00:48:30.140
we changed a bunch of things about file matching


00:48:30.140 --> 00:48:32.700
and then have sub bullets about the file matching changes.


00:48:32.700 --> 00:48:35.360
You want to explain things to people


00:48:35.360 --> 00:48:37.260
and you're gonna be able to do a better job of it


00:48:37.260 --> 00:48:40.140
than your pull requests or your commit messages.


00:48:40.140 --> 00:48:41.180
- Yeah, absolutely.


00:48:41.180 --> 00:48:42.980
All right, well, thanks for that, Colin.


00:48:42.980 --> 00:48:45.220
Executable books.


00:48:45.220 --> 00:48:48.780
Executable books, folks, are interesting.


00:48:48.780 --> 00:48:52.100
They've got a lot of tools


00:48:52.100 --> 00:48:56.140
that will take Jupyter Notebooks and other things,


00:48:56.140 --> 00:49:01.140
using the Mist plugin for markdown and generate books


00:49:01.140 --> 00:49:02.940
in different ways.


00:49:02.940 --> 00:49:05.940
And so they've got this project called GitHub Activity,


00:49:05.940 --> 00:49:10.700
which generates a simple markdown changelog based on that.


00:49:10.700 --> 00:49:12.340
Let's see.


00:49:12.340 --> 00:49:17.340
I think this is on issues and PRs not, not commits.


00:49:17.340 --> 00:49:20.820
- Yeah, I think this is one of the ones


00:49:20.820 --> 00:49:24.980
that goes for the larger chunk bits of information.


00:49:24.980 --> 00:49:26.460
Which like I said, is good.


00:49:26.460 --> 00:49:28.060
Commits are too small.


00:49:28.060 --> 00:49:30.800
It's still, the issue is still that


00:49:30.800 --> 00:49:32.160
when you write a pull request,


00:49:32.160 --> 00:49:33.600
what you're writing about mostly


00:49:33.600 --> 00:49:36.320
is something that your reviewer needs to read, right?


00:49:36.320 --> 00:49:39.240
So you're really addressing your collaborators


00:49:39.240 --> 00:49:40.660
rather than your users.


00:49:40.660 --> 00:49:42.160
I mean, ideally your pull request


00:49:42.160 --> 00:49:46.680
would include all of the user consequences as well,


00:49:46.680 --> 00:49:48.280
but it's also gonna talk about


00:49:49.760 --> 00:49:51.120
what your collaborators need to know.


00:49:51.120 --> 00:49:54.120
So different audiences, different information.


00:49:54.120 --> 00:49:56.840
At the very least, it's gonna need an editing pass


00:49:56.840 --> 00:49:59.760
in order to figure out how to actually explain this


00:49:59.760 --> 00:50:00.920
to people the right way.


00:50:00.920 --> 00:50:02.160
- Well, that's an interesting idea.


00:50:02.160 --> 00:50:04.760
Maybe the tools don't have to be perfect.


00:50:04.760 --> 00:50:07.480
Maybe they could say, well, here are the 10 things


00:50:07.480 --> 00:50:09.840
in terms of PRs and issues that have changed.


00:50:09.840 --> 00:50:14.280
Now just rewrite that for humans with a different audience.


00:50:14.280 --> 00:50:15.400
That's something we've got.


00:50:15.400 --> 00:50:18.520
- Yeah, collecting up all the information, that's great.


00:50:18.520 --> 00:50:21.040
I just think it needs a human touch.


00:50:21.040 --> 00:50:24.520
I know that's controversial in these days of AI,


00:50:24.520 --> 00:50:27.480
but I think humans can do a good job writing stats.


00:50:27.480 --> 00:50:28.320
- Indeed.


00:50:28.320 --> 00:50:32.720
As we say, get a copilot, write me a, no, whatever.


00:50:32.720 --> 00:50:36.880
So the next one we come to is Dinghai?


00:50:36.880 --> 00:50:37.880
- Dinghy.


00:50:37.880 --> 00:50:38.880
- Dinghy, okay, dinghy, got it.


00:50:38.880 --> 00:50:39.720
Just like the little boat thing.


00:50:39.720 --> 00:50:42.000
- The little boat, that's right.


00:50:42.000 --> 00:50:43.280
Yeah, so this is a tool that I wrote,


00:50:43.280 --> 00:50:45.700
and it's interesting because when Colin mentioned this


00:50:45.700 --> 00:50:47.440
as a tool for changelogs,


00:50:47.440 --> 00:50:50.100
it didn't, that's not why I wrote Dingy.


00:50:50.100 --> 00:50:52.600
Dingy is designed to give you a daily digest


00:50:52.600 --> 00:50:54.400
of GitHub activity, which by the way,


00:50:54.400 --> 00:50:57.560
is why it's called Dingy, because the DI stands for digest


00:50:57.560 --> 00:50:59.960
and there's a GH in it, which stands for GitHub.


00:50:59.960 --> 00:51:02.700
And I looked through words that had those pairs in them


00:51:02.700 --> 00:51:03.620
and Dingy popped out.


00:51:03.620 --> 00:51:05.920
- It's got a Y, which is like half a Python for Python.


00:51:05.920 --> 00:51:09.060
- Yeah, and then you can backfill the marketing slogan


00:51:09.060 --> 00:51:11.640
of your lifeboat on a sea of information


00:51:11.640 --> 00:51:12.480
or something like that.


00:51:12.480 --> 00:51:13.360
- There you go, I love it.


00:51:13.360 --> 00:51:16.360
- So Dingy just gives you a digest


00:51:16.360 --> 00:51:17.440
of your GitHub activity.


00:51:17.440 --> 00:51:19.640
I was finding at work that I had to track


00:51:19.640 --> 00:51:21.560
lots of issues and pull requests,


00:51:21.560 --> 00:51:22.520
and there were lots of repos


00:51:22.520 --> 00:51:24.640
where I wanted to know what was going on.


00:51:24.640 --> 00:51:29.240
And so I found it useful to just summarize the activity


00:51:29.240 --> 00:51:31.480
on issues and pull requests across repos.


00:51:31.480 --> 00:51:34.680
And it's just a great-- - This is nice.


00:51:34.680 --> 00:51:36.580
- Yeah, in the morning, take a look,


00:51:36.580 --> 00:51:37.640
what happened in the last day?


00:51:37.640 --> 00:51:39.760
Oh, I should dive deeper into that


00:51:39.760 --> 00:51:42.640
when I can click into it and go read the real issue.


00:51:42.640 --> 00:51:44.760
But you just can get a quick overview.


00:51:44.760 --> 00:51:47.920
But I can see how, so I use it sort of on a daily basis,


00:51:47.920 --> 00:51:49.560
but I could see how you could take this


00:51:49.560 --> 00:51:52.980
and get a digest of the last three months


00:51:52.980 --> 00:51:55.840
and then use that as at least a guide


00:51:55.840 --> 00:51:58.080
to where to get the information for a changelog,


00:51:58.080 --> 00:52:01.400
if not, you know, pulling information right off of it.


00:52:01.400 --> 00:52:03.160
- It seems real helpful if you work on a team,


00:52:03.160 --> 00:52:04.640
especially if you're the team lead


00:52:04.640 --> 00:52:06.320
or kind of a manager type and you're like,


00:52:06.320 --> 00:52:08.100
all right, just need to see what's happened


00:52:08.100 --> 00:52:09.760
on these three projects this week.


00:52:09.760 --> 00:52:11.400
- Exactly. - Just hit it.


00:52:11.400 --> 00:52:13.200
- Right, that's what it's for.


00:52:13.200 --> 00:52:15.780
And it's satisfying to hear people


00:52:15.780 --> 00:52:17.160
think of other uses for it.


00:52:17.160 --> 00:52:20.040
That's the sign of having built a useful tool


00:52:20.040 --> 00:52:22.200
is that I meant it for one thing,


00:52:22.200 --> 00:52:23.560
but then someone else sees,


00:52:23.560 --> 00:52:25.000
oh, I could use it for that too.


00:52:25.000 --> 00:52:26.360
And that's very gratifying.


00:52:26.360 --> 00:52:28.080
- I can see it at the end of a sprint,


00:52:28.080 --> 00:52:31.160
like a sort of postmortem burndown type of thing.


00:52:31.160 --> 00:52:32.280
- Yep.


00:52:32.280 --> 00:52:33.740
- Yeah, okay, cool, cool.


00:52:33.740 --> 00:52:36.980
You mentioned Blurb.


00:52:36.980 --> 00:52:41.300
I'll just put a link to the Blurb project, the tool as well.


00:52:41.300 --> 00:52:46.300
This is the CPython prolific writer.


00:52:46.300 --> 00:52:48.260
- Yep, yep.


00:52:48.260 --> 00:52:53.260
This idea of building the changelog from small fragments


00:52:53.260 --> 00:52:56.980
is something that's happened a number of times.


00:52:56.980 --> 00:53:01.020
And I think it's a great idea.


00:53:01.020 --> 00:53:03.680
I think it's the right way to do this kind of work.


00:53:03.680 --> 00:53:04.880
- Yeah, agreed.


00:53:04.880 --> 00:53:10.140
One that comes, is this GitHub itself that does this?


00:53:10.140 --> 00:53:11.860
No, it is not.


00:53:11.860 --> 00:53:14.140
There's a thing called release drafter


00:53:14.140 --> 00:53:16.700
and it drafts your next release notes


00:53:16.700 --> 00:53:19.320
as PRs are merged into a master.


00:53:19.320 --> 00:53:22.860
Okay, so I haven't used this, but...


00:53:22.860 --> 00:53:27.540
- And this is another case of things


00:53:27.540 --> 00:53:28.740
going into GitHub actions.


00:53:28.740 --> 00:53:30.900
And I'm fascinated by this whole thing,


00:53:30.900 --> 00:53:32.740
as a project maintainer,


00:53:32.740 --> 00:53:36.180
I feel like there's sort of three large buckets of work.


00:53:36.180 --> 00:53:39.500
There's the building, the product itself,


00:53:39.500 --> 00:53:40.580
I don't mean product to sell,


00:53:40.580 --> 00:53:42.700
but like coverage.py is a product.


00:53:42.700 --> 00:53:43.540
- Yeah.


00:53:43.540 --> 00:53:45.340
- There's maintaining the test suite for it,


00:53:45.340 --> 00:53:47.020
which is if you've got a large test suite


00:53:47.020 --> 00:53:49.100
is a whole endeavor all to itself.


00:53:49.100 --> 00:53:51.860
And there's all this project automation,


00:53:51.860 --> 00:53:54.140
you know, that we've been talking about here today.


00:53:54.140 --> 00:53:55.520
You know, how do I get the releases made?


00:53:55.520 --> 00:53:57.360
I've got a make file, what this command,


00:53:57.360 --> 00:53:59.540
how do I bump the version up?


00:53:59.540 --> 00:54:01.020
Like all of that kind of,


00:54:01.020 --> 00:54:02.380
and it feels like micro automation.


00:54:02.380 --> 00:54:04.220
You're doing it like one shell command at a time


00:54:04.220 --> 00:54:07.420
or a 10 little Python, 10 line Python file or something.


00:54:07.420 --> 00:54:09.780
And the fact that there are all these tools around


00:54:09.780 --> 00:54:11.820
that help with it and put it in GitHub actions.


00:54:11.820 --> 00:54:14.700
And you just, you make a GitHub, a Git tag


00:54:14.700 --> 00:54:16.860
and suddenly it goes to PyPI


00:54:16.860 --> 00:54:19.540
and publishes the GitHub release and all that.


00:54:19.540 --> 00:54:20.960
That's, it's fascinating to me


00:54:20.960 --> 00:54:24.100
how far you can automate those processes.


00:54:24.100 --> 00:54:25.300
- Yeah.


00:54:25.300 --> 00:54:28.140
And they, they kind of build up like a snowball


00:54:28.140 --> 00:54:29.540
going downhill pretty quick.


00:54:29.540 --> 00:54:31.500
It's like, well, if I could automate this thing


00:54:31.500 --> 00:54:32.840
and that thing, they're like, wait a minute.


00:54:32.840 --> 00:54:36.660
Now we just, they click together and then it's.


00:54:36.660 --> 00:54:38.740
I'm a late adopter of technology.


00:54:38.740 --> 00:54:41.500
I won't automate a thing until I know


00:54:41.500 --> 00:54:42.980
that it's exactly the way I want it


00:54:42.980 --> 00:54:45.820
and I've gotten completely sick of doing it by hand.


00:54:45.820 --> 00:54:47.180
But the good news is by then,


00:54:47.180 --> 00:54:49.060
I do know exactly what I want it to do.


00:54:49.060 --> 00:54:50.460
And so I can build the automation


00:54:50.460 --> 00:54:53.380
and I don't have to come back and fiddle with it too much.


00:54:53.380 --> 00:54:56.440
- Another big benefit I would say to that approach


00:54:56.440 --> 00:54:57.900
is every time it runs,


00:54:57.900 --> 00:55:00.820
it could just warm your heart with a joy.


00:55:00.820 --> 00:55:03.020
Like, you know what, I hold another two hours,


00:55:03.020 --> 00:55:03.940
I didn't do that thing.


00:55:03.940 --> 00:55:04.780
- That's right.


00:55:04.780 --> 00:55:07.340
- No, the downside is when it does the wrong thing.


00:55:07.340 --> 00:55:10.480
So this weekend, I actually had a big weekend this weekend,


00:55:10.480 --> 00:55:13.820
I released 1.0 of both Scriv and Dingy


00:55:13.820 --> 00:55:17.020
and the first beta of coverage 7.0.


00:55:17.020 --> 00:55:22.960
And it turns out that the links to PyPI on the readme,


00:55:22.960 --> 00:55:26.140
no, the links to my documentation from the PyPI readme


00:55:26.140 --> 00:55:29.420
are broken because they don't work if it's a beta release.


00:55:29.420 --> 00:55:33.020
And I didn't know that until the release was published


00:55:33.020 --> 00:55:35.700
and betas happen so infrequently,


00:55:35.700 --> 00:55:37.820
it'll change again before I make another one


00:55:37.820 --> 00:55:40.040
and it'll probably be broken too


00:55:40.040 --> 00:55:42.060
because it's hard to test this kind of automation.


00:55:42.060 --> 00:55:44.700
Like the good thing about building the product


00:55:44.700 --> 00:55:46.260
and building your test suite for the product


00:55:46.260 --> 00:55:49.180
is that that is automation you can run the crank on


00:55:49.180 --> 00:55:51.060
and you know if it's working or not.


00:55:51.060 --> 00:55:54.540
Releasing projects, if you build automation for that,


00:55:54.540 --> 00:55:57.780
how do you test that release happened correctly


00:55:57.780 --> 00:55:59.700
other than actually making a release


00:55:59.700 --> 00:56:01.180
and then getting bug reports from people


00:56:01.180 --> 00:56:03.260
about the 404s on your PyPI page,


00:56:03.260 --> 00:56:04.880
which is how I found out about this.


00:56:04.880 --> 00:56:05.720
- Yeah.


00:56:05.720 --> 00:56:07.020
- It's a little frustrating, but.


00:56:07.020 --> 00:56:11.460
- For as much fantastic testing software and automation,


00:56:11.460 --> 00:56:13.800
sometimes you just gotta hold your breath


00:56:13.800 --> 00:56:14.640
and push the button.


00:56:14.640 --> 00:56:15.740
- Yeah.


00:56:15.740 --> 00:56:18.860
Well, you're not gonna write a unit test that says,


00:56:18.860 --> 00:56:22.260
"Let's push this thing to test.pypi.org


00:56:22.260 --> 00:56:25.140
and see if all the links on the read me are right."


00:56:25.140 --> 00:56:28.140
That's, I mean, maybe you, I guess you could, but.


00:56:28.140 --> 00:56:29.700
- You could, but.


00:56:29.700 --> 00:56:30.540
- Has anyone done that?


00:56:30.540 --> 00:56:32.060
- If anyone's done that, please get in touch


00:56:32.060 --> 00:56:34.900
'cause I messed that up this weekend.


00:56:34.900 --> 00:56:37.260
- Yeah, at some point you gotta go,


00:56:37.260 --> 00:56:39.740
okay, we've tested enough, it's gotta go.


00:56:39.740 --> 00:56:41.940
And even if you write a unit test,


00:56:41.940 --> 00:56:45.740
it's not necessarily exactly the same.


00:56:45.740 --> 00:56:49.220
- Right, it's not the same and you'll fiddle with it


00:56:49.220 --> 00:56:51.820
and break it, which is what happened to me.


00:56:51.820 --> 00:56:53.980
And I don't know.


00:56:53.980 --> 00:56:54.820
- Yeah.


00:56:54.820 --> 00:56:55.820
- There'll be another release, it's fine.


00:56:55.820 --> 00:56:57.280
There'll be another release.


00:56:57.280 --> 00:56:58.560
We'll get it fixed.


00:56:58.560 --> 00:57:00.340
- Yeah, all right, you mentioned Town Crier.


00:57:00.340 --> 00:57:01.340
- Yep. - Already,


00:57:01.340 --> 00:57:03.620
I think maybe we can just carry on,


00:57:03.620 --> 00:57:05.140
but people can check that out as well.


00:57:05.140 --> 00:57:07.540
You know, I guess, give them a quick shout out as well


00:57:07.540 --> 00:57:08.380
while we're here.


00:57:08.380 --> 00:57:09.720
This comes from the Twisted project, you said?


00:57:09.720 --> 00:57:11.660
- Yeah, and Twisted is another of these projects


00:57:11.660 --> 00:57:14.300
that's been going for a very long time.


00:57:14.300 --> 00:57:16.060
So this is a mature tool.


00:57:16.060 --> 00:57:18.680
It's just a little bit quirky


00:57:18.680 --> 00:57:20.260
in the way that they wanted to do things.


00:57:20.260 --> 00:57:22.300
I think, at least when I first looked at it,


00:57:22.300 --> 00:57:25.500
it was something like the fixes went into a .fix file


00:57:25.500 --> 00:57:27.980
and the features went into a .feature file,


00:57:27.980 --> 00:57:29.580
things like that,


00:57:29.580 --> 00:57:31.680
which just, and it didn't do markdown,


00:57:31.680 --> 00:57:33.480
and I knew that I was gonna have people


00:57:33.480 --> 00:57:37.060
who needed markdown, even though I prefer restructured text.


00:57:37.060 --> 00:57:40.880
So I built Scriv to kind of along the same ideas,


00:57:40.880 --> 00:57:43.960
but in a more flexible way.


00:57:43.960 --> 00:57:45.420
- Right, okay, cool.


00:57:45.420 --> 00:57:51.480
One of the things you may have in your readme


00:57:51.480 --> 00:57:53.760
or other parts of your documentation,


00:57:53.760 --> 00:57:57.400
your markdown files, or restructured text, I suppose,


00:57:57.400 --> 00:57:59.060
would be example code.


00:57:59.060 --> 00:58:00.580
Like I talked about that.


00:58:00.580 --> 00:58:05.420
It would be nice to know some level of correctness


00:58:05.420 --> 00:58:06.620
to that, right?


00:58:06.620 --> 00:58:07.460
- Yes.


00:58:07.460 --> 00:58:09.220
- We have MK test docs.


00:58:09.220 --> 00:58:10.660
Tell us about this.


00:58:10.660 --> 00:58:12.660
- So this is one of these things


00:58:12.660 --> 00:58:15.020
that's the interesting thing to me is that you've got docs,


00:58:15.020 --> 00:58:17.260
you've got tests, you've got doc strings,


00:58:17.260 --> 00:58:18.420
and there's all these tools


00:58:18.420 --> 00:58:21.780
that do all the different pairings of stuff, right?


00:58:21.780 --> 00:58:26.020
So you can run tests against the code in your doc strings.


00:58:26.020 --> 00:58:30.020
This runs pytest against markdown files


00:58:30.020 --> 00:58:31.020
that have code in them,


00:58:31.020 --> 00:58:33.680
so it's running the code in the markdown files.


00:58:33.680 --> 00:58:36.860
And it's fascinating, again,


00:58:36.860 --> 00:58:38.940
to see how all of this automation,


00:58:38.940 --> 00:58:41.300
this project-level automation,


00:58:41.300 --> 00:58:43.900
comes together to try to close all those little gaps.


00:58:43.900 --> 00:58:47.820
Like I mentioned the problem of a broken URL on my README.


00:58:47.820 --> 00:58:48.940
You could also have code


00:58:48.940 --> 00:58:51.300
that you had typed into a markdown file,


00:58:51.300 --> 00:58:53.440
and it turns out it doesn't work for whatever reason.


00:58:53.440 --> 00:58:55.580
Maybe it worked once, something changed.


00:58:55.580 --> 00:58:59.420
this will run the code in your Markdown files


00:58:59.420 --> 00:59:02.020
so that you know that it still works, which is great.


00:59:02.020 --> 00:59:03.900
- Yeah, and even if you don't--


00:59:03.900 --> 00:59:05.060
- I'm also more testing.


00:59:05.060 --> 00:59:06.740
- Yeah, well, even if you're not actually


00:59:06.740 --> 00:59:09.940
trying to execute it, and like I'm asserting


00:59:09.940 --> 00:59:11.620
that my example returns seven,


00:59:11.620 --> 00:59:13.700
because maybe it says connect to a database


00:59:13.700 --> 00:59:15.100
and do other crazy stuff,


00:59:15.100 --> 00:59:18.820
it could at least be syntactically valid, right?


00:59:18.820 --> 00:59:20.580
It could look at it and go, I loaded that up


00:59:20.580 --> 00:59:22.980
and I parsed that function and it didn't die.


00:59:22.980 --> 00:59:24.060
That's a start.


00:59:24.060 --> 00:59:24.900
- Right, exactly.


00:59:24.900 --> 00:59:26.480
There's levels of testing.


00:59:26.480 --> 00:59:28.960
And like you said, it can get very complicated


00:59:28.960 --> 00:59:32.460
to do full testing of some kinds of code.


00:59:32.460 --> 00:59:35.680
- So how do you test your markdown, your readme.md?


00:59:35.680 --> 00:59:38.080
Well, see, I fire up a series of,


00:59:38.080 --> 00:59:41.480
a cluster of Docker containers using Docker compose,


00:59:41.480 --> 00:59:44.480
and then we can run the one example, and then it's good.


00:59:44.480 --> 00:59:47.520
- Right, if there's a tool out there that launches missiles,


00:59:47.520 --> 00:59:49.420
I don't wanna know how you're testing the code


00:59:49.420 --> 00:59:51.020
in your readme.


00:59:51.020 --> 00:59:53.680
- Yeah, there's another one that's a little bit tough


00:59:53.680 --> 00:59:56.200
One of the things that's interesting, by the way,


00:59:56.200 --> 01:00:00.400
this tool comes from Vincent Wormadem,


01:00:00.400 --> 01:00:03.600
but it deals with multiple code blocks.


01:00:03.600 --> 01:00:07.120
If you do the language specifier in Markdown,


01:00:07.120 --> 01:00:10.160
so the triple dot backtick,


01:00:10.160 --> 01:00:14.600
then you say the word Python or JavaScript or C# or whatever,


01:00:14.600 --> 01:00:17.120
that'll tell the formatters,


01:00:17.120 --> 01:00:19.080
format it like this.


01:00:19.080 --> 01:00:21.680
It's this type of syntax you should see.


01:00:21.680 --> 01:00:23.440
If you do the Python one,


01:00:23.440 --> 01:00:26.620
it will run those and also do bash as well I believe.


01:00:26.620 --> 01:00:29.340
But what's interesting is you could have,


01:00:29.340 --> 01:00:32.460
like here's how you set it up and then here's how you call it type


01:00:32.460 --> 01:00:37.120
of series of code blocks and it will run all the code blocks,


01:00:37.120 --> 01:00:39.120
or you can actually say,


01:00:39.120 --> 01:00:41.800
remember what you saw before because that was


01:00:41.800 --> 01:00:44.120
the first half of what you need to do the second half.


01:00:44.120 --> 01:00:48.080
>> Yeah. Because you're trying to tell a story.


01:00:48.080 --> 01:00:50.440
This is like a Jupyter Notebook where you're interspersing


01:00:50.440 --> 01:00:53.520
code with commentary and then more code.


01:00:53.520 --> 01:00:58.360
You need the multiple blocks of code to all be executed


01:00:58.360 --> 01:01:01.000
together or one after the other.


01:01:01.000 --> 01:01:03.480
You need the first one's results in the second one.


01:01:03.480 --> 01:01:05.520
>> I certainly appreciate that.


01:01:05.520 --> 01:01:10.280
Don't completely repeat yourself every time in your code example.


01:01:10.280 --> 01:01:10.840
>> Right.


01:01:10.840 --> 01:01:12.640
>> You get started by importing this,


01:01:12.640 --> 01:01:15.160
and then you would create a class like this that it derives from.


01:01:15.160 --> 01:01:17.480
You wouldn't want to have to have import,


01:01:17.480 --> 01:01:19.640
import, import over and over.


01:01:19.640 --> 01:01:20.920
So, yeah.


01:01:20.920 --> 01:01:22.920
Yeah, this is cool.


01:01:22.920 --> 01:01:24.240
I don't use this one either,


01:01:24.240 --> 01:01:26.880
but it definitely looks like something I could see adopting.


01:01:26.880 --> 01:01:30.840
Now, here's something called Shed,


01:01:30.840 --> 01:01:35.560
which is not exactly what I want to talk about,


01:01:35.560 --> 01:01:36.840
but it's for formatting code.


01:01:36.840 --> 01:01:39.400
So it runs Autoflake, it runs PyUpgrade.


01:01:39.400 --> 01:01:41.760
You mentioned that before, I believe, for upgrade.


01:01:41.760 --> 01:01:45.760
You can specify a version, PyUpgrade me to Python 3.8,


01:01:45.760 --> 01:01:47.280
but not further, please.


01:01:47.280 --> 01:01:48.720
- PyUpgrade is good.


01:01:48.720 --> 01:01:50.900
>> Yeah. It runs black.


01:01:50.900 --> 01:01:54.580
But what I do want to talk about is it runs black in docs.


01:01:54.580 --> 01:01:59.440
>> Which formats the code in the doc strings and in your docs.


01:01:59.440 --> 01:01:59.760
>> Yes.


01:01:59.760 --> 01:02:02.080
>> Which again is one of those pairings of,


01:02:02.080 --> 01:02:07.720
let's put this tool into that thing and have it do just a little bit.


01:02:07.720 --> 01:02:14.720
>> Yeah. I would say this is super hard to get


01:02:14.720 --> 01:02:17.440
just right because you want to format code.


01:02:17.440 --> 01:02:19.240
you know, one of my markdown editors,


01:02:19.240 --> 01:02:22.920
if I highlight some code and I hit shift tab to unindent,


01:02:22.920 --> 01:02:25.440
it'll put everything just to the left.


01:02:25.440 --> 01:02:27.400
I'm like, no, no, no, no, this is Python code.


01:02:27.400 --> 01:02:28.400
It has to have the space.


01:02:28.400 --> 01:02:29.640
You can't just put it all the left,


01:02:29.640 --> 01:02:31.920
like undo one level, right?


01:02:31.920 --> 01:02:33.020
Things like that where it's just like,


01:02:33.020 --> 01:02:36.260
oh, this is not quite formatted right.


01:02:36.260 --> 01:02:40.520
Just running this, maybe even as a pre-commit hook


01:02:40.520 --> 01:02:41.680
would be glorious.


01:02:41.680 --> 01:02:44.960
Just like all of my code in my examples


01:02:44.960 --> 01:02:49.020
my triple back tick Python becomes black, blackened.


01:02:49.020 --> 01:02:51.660
>> Yeah. If you're using black,


01:02:51.660 --> 01:02:53.860
then you really want it everywhere.


01:02:53.860 --> 01:02:58.820
You've given up control of the formatting of your code willingly.


01:02:58.820 --> 01:03:01.980
You see the value of it and you just want it everywhere.


01:03:01.980 --> 01:03:04.580
This is great for getting it into your docs too.


01:03:04.580 --> 01:03:06.400
>> Exactly. There's gaps.


01:03:06.400 --> 01:03:08.740
Maybe your Jupyter Notebooks don't have black formatter.


01:03:08.740 --> 01:03:11.360
Get it in there, get it into the docs, get it everywhere.


01:03:11.360 --> 01:03:13.740
Yeah, I'm getting rid of me. Cool.


01:03:13.740 --> 01:03:16.520
Let's see this one.


01:03:16.520 --> 01:03:21.800
Yeah, another person gave a shout out


01:03:21.800 --> 01:03:23.640
to your next project here.


01:03:23.640 --> 01:03:26.520
This is Cy Gallimardi said,


01:03:26.520 --> 01:03:29.460
"Hey, we should check out Cog."


01:03:29.460 --> 01:03:31.800
- Cog, yeah, Cog is one of those tools


01:03:31.800 --> 01:03:34.520
that I wrote a very long time ago


01:03:34.520 --> 01:03:36.500
to do one particular thing.


01:03:36.500 --> 01:03:40.780
And it ended up being useful in lots of other ways.


01:03:40.780 --> 01:03:43.580
Basically Cog is a way that you can make a text file,


01:03:43.580 --> 01:03:46.840
like a readme.md and put little bits of Python


01:03:46.840 --> 01:03:47.680
in the middle of it,


01:03:47.680 --> 01:03:50.620
not because you're trying to display that code to people,


01:03:50.620 --> 01:03:52.760
but because you want the results of that code


01:03:52.760 --> 01:03:54.200
to be part of your document.


01:03:54.200 --> 01:03:57.840
- A little bit like a Jinja.


01:03:57.840 --> 01:03:59.300
- Right. - A template maybe.


01:03:59.300 --> 01:04:00.980
- Exactly, but it's a little bit backwards


01:04:00.980 --> 01:04:03.080
because Jinja starts with the idea,


01:04:03.080 --> 01:04:06.380
I mean, Jinja is, well, it is like Jinja actually.


01:04:06.380 --> 01:04:08.580
I shouldn't say that, it's just like Jinja.


01:04:08.580 --> 01:04:12.020
- But if it were in HTML, you want it to be--


01:04:12.020 --> 01:04:13.580
- Right, it can be anything you want.


01:04:13.580 --> 01:04:16.020
Jinja is particular to HTML in some ways,


01:04:16.020 --> 01:04:19.240
but Cog is completely agnostic.


01:04:19.240 --> 01:04:21.720
The bigger difference from Jinja with Cog


01:04:21.720 --> 01:04:25.300
is that the output of your code can go into the document


01:04:25.300 --> 01:04:28.200
so that you process, you run the document,


01:04:28.200 --> 01:04:31.900
the output of your code becomes part of the document.


01:04:31.900 --> 01:04:34.420
So sort of the input file and the output file


01:04:34.420 --> 01:04:37.900
are the same file, so that you get sort of an item potent


01:04:37.900 --> 01:04:39.980
kind of processing of the file.


01:04:39.980 --> 01:04:41.540
So you can have a readme.md.


01:04:41.540 --> 01:04:44.000
you run cog on it, you still just have a reading.md,


01:04:44.000 --> 01:04:46.920
but now you've got the results of the computation


01:04:46.920 --> 01:04:47.760
in the file.


01:04:47.760 --> 01:04:52.200
So for instance, I use this in the coverage.py docs,


01:04:52.200 --> 01:04:55.000
there's a database schema for the SQL lite data file


01:04:55.000 --> 01:04:57.820
that coverage.py writes, that schema is in a string


01:04:57.820 --> 01:04:59.440
in a Python file someplace,


01:04:59.440 --> 01:05:01.560
but I also want it to be in my docs.


01:05:01.560 --> 01:05:05.240
So I use cog in the restructured text file


01:05:05.240 --> 01:05:08.200
to go and get the string from the Python code


01:05:08.200 --> 01:05:11.880
and splat it into the restructured text file


01:05:11.880 --> 01:05:14.480
so that I know that the two are the same


01:05:14.480 --> 01:05:16.620
because there's one source of truth


01:05:16.620 --> 01:05:18.380
and an automated process to bring it


01:05:18.380 --> 01:05:20.600
into the restructured text file.


01:05:20.600 --> 01:05:23.560
- You know how they say there's like two hard problems


01:05:23.560 --> 01:05:25.760
in computer science, naming things,


01:05:25.760 --> 01:05:27.600
cache invalidation, and off by one errors?


01:05:27.600 --> 01:05:28.440
- Yes.


01:05:28.440 --> 01:05:32.440
- I feel like maybe a fourth one should be identifying


01:05:32.440 --> 01:05:36.240
and controlling and keeping the one source of truth.


01:05:36.240 --> 01:05:39.480
One source of truth is a big thing with me


01:05:39.480 --> 01:05:41.400
about all of these kinds of processes


01:05:41.400 --> 01:05:45.200
where you want to make it convenient to write information,


01:05:45.200 --> 01:05:47.760
but you also want to make it convenient to read information.


01:05:47.760 --> 01:05:51.320
And so you might want to publish information


01:05:51.320 --> 01:05:52.140
in more than one place.


01:05:52.140 --> 01:05:54.080
For instance, I mentioned that my changelog


01:05:54.080 --> 01:05:58.400
is in a .rst file, but it also goes into GitHub releases


01:05:58.400 --> 01:06:01.000
because people want to read it in GitHub releases.


01:06:01.000 --> 01:06:04.040
So I get the information out of the changelog


01:06:04.040 --> 01:06:09.800
automatically publish it into GitHub releases. Yeah, and cog has found a lot of use. Simon


01:06:09.800 --> 01:06:14.840
Willison has been very positive about cog. He uses it in a number of places to keep his


01:06:14.840 --> 01:06:22.360
documentation up to date. I've used cog to an extreme extent in my GitHub profile to,


01:06:22.360 --> 01:06:27.880
for instance, grab information from PyPI where I mentioned what my projects are and things like


01:06:27.880 --> 01:06:28.720
like that.


01:06:28.720 --> 01:06:29.560
- Yeah.


01:06:29.560 --> 01:06:32.720
- So yeah, COG is one of those things that started small


01:06:32.720 --> 01:06:35.200
and it's just has chugged along for a long time


01:06:35.200 --> 01:06:38.000
and I continue to find more uses for it.


01:06:38.000 --> 01:06:38.820
- Yeah, that's great.


01:06:38.820 --> 01:06:42.400
Colin says, "Using COG to document CLI tools


01:06:42.400 --> 01:06:43.840
is chef's kiss."


01:06:43.840 --> 01:06:44.680
- Very nice.


01:06:44.680 --> 01:06:46.480
Wow, that's very nice.


01:06:46.480 --> 01:06:51.480
- All right, let's, we're getting to the end here.


01:06:51.480 --> 01:06:52.360
We're almost out of time,


01:06:52.360 --> 01:06:56.560
but luckily we're also almost out of things to talk about.


01:06:56.560 --> 01:06:58.600
We're not out of them, we're stopping.


01:06:58.600 --> 01:06:59.800
- There's a lot, there's a lot.


01:06:59.800 --> 01:07:01.180
This is a small sampling.


01:07:01.180 --> 01:07:04.720
- But here's one by Haideng,


01:07:04.720 --> 01:07:08.420
that's awesome tools for the readme profile.


01:07:08.420 --> 01:07:11.920
So this is a lot of, let's do the test,


01:07:11.920 --> 01:07:13.960
click on their profile and see how it looks.


01:07:13.960 --> 01:07:14.880
You know what I mean?


01:07:14.880 --> 01:07:15.720
- Yep.


01:07:15.720 --> 01:07:18.860
- Ah, got it, got it, get a little more in there.


01:07:18.860 --> 01:07:20.820
So this is more of a collection,


01:07:20.820 --> 01:07:25.040
but we have readmes for projects,


01:07:25.040 --> 01:07:27.640
but also reading is for humans, right?


01:07:27.640 --> 01:07:29.040
You know, I thought you go to my account,


01:07:29.040 --> 01:07:30.160
you'll see a particular thing.


01:07:30.160 --> 01:07:33.200
Some people have really, you know,


01:07:33.200 --> 01:07:35.080
fancy that up with lots of things.


01:07:35.080 --> 01:07:36.680
And this project here talks about,


01:07:36.680 --> 01:07:39.680
well, what kind of cool stuff can you put on there


01:07:39.680 --> 01:07:41.400
that people might see?


01:07:41.400 --> 01:07:42.840
I haven't looked at yours recently.


01:07:42.840 --> 01:07:44.600
What's your profile look like?


01:07:44.600 --> 01:07:47.560
- Well, so it's not as visual as this.


01:07:47.560 --> 01:07:51.840
It has a few badges, but I used Cog to, for instance,


01:07:51.840 --> 01:07:56.000
pull in the six most recent blog posts onto my page.


01:07:56.000 --> 01:07:56.840
- Okay.


01:07:56.840 --> 01:07:59.760
- I wanted to do recent tweets,


01:07:59.760 --> 01:08:02.720
but that was gonna be hard because Twitter API


01:08:02.720 --> 01:08:03.920
wanted me to authenticate,


01:08:03.920 --> 01:08:06.320
and half the time I turn away


01:08:06.320 --> 01:08:08.520
when I'm asked to authenticate against the thing


01:08:08.520 --> 01:08:10.760
'cause that's the hardest part of the whole thing,


01:08:10.760 --> 01:08:12.840
and it takes away all the fun.


01:08:12.840 --> 01:08:15.600
But so, the main thing I used Cog for,


01:08:15.600 --> 01:08:17.000
I used Cog on my readme,


01:08:17.000 --> 01:08:19.200
and one of the things I did with it


01:08:19.200 --> 01:08:23.940
was to write Python code to generate that markdown syntax


01:08:23.940 --> 01:08:28.620
for badges and to put together shields.io badge URLs.


01:08:28.620 --> 01:08:30.460
So both of those things are complicated, right?


01:08:30.460 --> 01:08:32.780
Shields.io is amazingly powerful,


01:08:32.780 --> 01:08:35.140
but how you actually put all the bits of information


01:08:35.140 --> 01:08:37.260
into the URL is hard to get right.


01:08:37.260 --> 01:08:39.100
And it's fiddly, there's like ampersands


01:08:39.100 --> 01:08:40.900
and you have to quote them in the markdown or something.


01:08:40.900 --> 01:08:41.980
- It's like a regular expression, yeah.


01:08:41.980 --> 01:08:44.780
- Yeah, I mean, it's too intense.


01:08:44.780 --> 01:08:46.260
So I wrote Python functions


01:08:46.260 --> 01:08:49.260
to put together shields.io URLs.


01:08:49.260 --> 01:08:51.440
And then I called those Python functions


01:08:51.440 --> 01:08:55.380
from the cog code in my readme.md.


01:08:55.380 --> 01:08:59.560
And there's a GitHub action that runs the cog on it.


01:08:59.560 --> 01:09:01.440
Whenever I publish a blog post,


01:09:01.440 --> 01:09:04.640
my blog publishing triggers the GitHub action


01:09:04.640 --> 01:09:07.040
that recalcs my GitHub readme.


01:09:07.040 --> 01:09:10.960
So the latest blog post is on the top of the GitHub readme.


01:09:10.960 --> 01:09:13.560
Like I said, you can take this a long way.


01:09:13.560 --> 01:09:16.180
I might've gone too far with this.


01:09:16.180 --> 01:09:17.020
- No, I love it.


01:09:17.020 --> 01:09:19.160
- But it's cool to see how the tools can come together


01:09:19.160 --> 01:09:22.180
and you can automate all of these processes.


01:09:22.180 --> 01:09:24.340
Again, to go back to one source of truth,


01:09:24.340 --> 01:09:26.280
my blog is the one source of truth


01:09:26.280 --> 01:09:28.180
about what are my blog posts,


01:09:28.180 --> 01:09:31.480
but the information is also on my GitHub readme


01:09:31.480 --> 01:09:34.020
because I thought that would be a useful thing


01:09:34.020 --> 01:09:37.740
for people to see when they look for me on GitHub.


01:09:37.740 --> 01:09:39.700
- Yeah, that's fantastic.


01:09:39.700 --> 01:09:42.220
All right, so this project here is like


01:09:42.220 --> 01:09:45.120
a whole host of things like that that you could do.


01:09:45.120 --> 01:09:49.520
and I love the use of cog and the GitHub actions


01:09:49.520 --> 01:09:50.360
just to bring them together.


01:09:50.360 --> 01:09:52.200
- Right, the awesome tool for readme profile,


01:09:52.200 --> 01:09:54.840
it's sort of like a blank catalog.


01:09:54.840 --> 01:09:58.000
Like you might want to put this on your profile


01:09:58.000 --> 01:09:59.680
or put that on your profile.


01:09:59.680 --> 01:10:02.480
- If it was 1994 and you wanted a blank tag,


01:10:02.480 --> 01:10:03.560
here's a whole bunch of it,


01:10:03.560 --> 01:10:06.200
or a little animated diggy gif you could figure out.


01:10:06.200 --> 01:10:09.520
So you get these graphs of like,


01:10:09.520 --> 01:10:12.880
what were your last year of contributions over time?


01:10:12.880 --> 01:10:15.200
or like when are you most likely to?


01:10:15.200 --> 01:10:16.040
- Yep.


01:10:16.040 --> 01:10:21.000
- Some more badges, like here's the latest blog posts,


01:10:21.000 --> 01:10:22.920
which is a thing that people can pull in


01:10:22.920 --> 01:10:24.980
if they don't wanna do more of it themselves.


01:10:24.980 --> 01:10:25.820
- Yep.


01:10:25.820 --> 01:10:28.200
- How much time you spent coding


01:10:28.200 --> 01:10:31.880
in various languages per month or per week, weekly here?


01:10:31.880 --> 01:10:33.080
That's pretty wild.


01:10:33.080 --> 01:10:35.600
- Yeah, he's got a lot of things here,


01:10:35.600 --> 01:10:38.320
like what you're listening to on Spotify.


01:10:38.320 --> 01:10:42.420
- Yeah, do they have emails, one of your coding activities?


01:10:42.420 --> 01:10:44.700
I spent a lot of time in email.


01:10:44.700 --> 01:10:46.460
>> Are you typing code in your emails?


01:10:46.460 --> 01:10:48.340
You might be doing it wrong.


01:10:48.340 --> 01:10:50.580
>> I'm just spending a lot of time in email.


01:10:50.580 --> 01:10:54.780
Wish I didn't. Okay. So it's got what time of the day?


01:10:54.780 --> 01:10:56.020
Are you a morning person?


01:10:56.020 --> 01:11:03.060
It has a snake game that goes around and races like a centipede.


01:11:03.060 --> 01:11:06.140
>> You're right. This is very reminiscent of


01:11:06.140 --> 01:11:12.300
the early GeoCities Internet where everything flashed and blinked.


01:11:12.300 --> 01:11:16.300
looked cool and had contrasting colors and stuff like that.


01:11:16.300 --> 01:11:18.660
- Yeah, so people, I mean, we're only like


01:11:18.660 --> 01:11:20.020
a third of the way through this thing.


01:11:20.020 --> 01:11:23.820
People can, they can give themselves trophies.


01:11:23.820 --> 01:11:26.500
They can give themselves, I think this is Stack Overflow.


01:11:26.500 --> 01:11:28.860
Yeah, Stack Overflow reputation.


01:11:28.860 --> 01:11:31.940
There's just a ton of different stuff you can put together.


01:11:31.940 --> 01:11:33.740
And I think it all comes back to, you know,


01:11:33.740 --> 01:11:38.180
besides like maybe overdoing with digging animated GIFs


01:11:38.180 --> 01:11:40.460
and Blink Tags, I think it comes back to


01:11:40.460 --> 01:11:43.880
your GitHub profile is a little bit like your resume


01:11:43.880 --> 01:11:45.960
and how much can you say more than just,


01:11:45.960 --> 01:11:47.640
oh, I forked Django.


01:11:47.640 --> 01:11:50.600
- Right, and you want, I mean, the point of the profile


01:11:50.600 --> 01:11:52.800
is to let people know about you


01:11:52.800 --> 01:11:54.960
and hopefully they'll be interested in you


01:11:54.960 --> 01:11:57.140
in whatever way you want them to be interested.


01:11:57.140 --> 01:12:00.140
So all of these things that attract attention


01:12:00.140 --> 01:12:02.520
and you can choose something here


01:12:02.520 --> 01:12:06.540
that sort of has your vibe in whatever way.


01:12:06.540 --> 01:12:08.720
For instance, my page is very text heavy,


01:12:08.720 --> 01:12:10.680
But that's my vibe, that's the way I am.


01:12:10.680 --> 01:12:11.880
And if that's not for you,


01:12:11.880 --> 01:12:14.120
then you should look for someone else's profile.


01:12:14.120 --> 01:12:16.920
But if you wanna know what I'm listening to on Spotify,


01:12:16.920 --> 01:12:19.440
then that's a thing to put on a profile page.


01:12:19.440 --> 01:12:20.400
So it's great.


01:12:20.400 --> 01:12:23.080
I mean, self-expression is a wonderful thing.


01:12:23.080 --> 01:12:26.160
And the fact that GitHub lets you build your own profile


01:12:26.160 --> 01:12:27.400
and that there are all these tools


01:12:27.400 --> 01:12:29.840
to do whatever you want with it, it's amazing.


01:12:29.840 --> 01:12:32.480
- It is amazing.


01:12:32.480 --> 01:12:34.120
All right, I think this is probably gonna be it


01:12:34.120 --> 01:12:39.120
for our final thing to cover in the read me and friends.


01:12:39.120 --> 01:12:42.200
Let's close this out just really quickly with a,


01:12:42.200 --> 01:12:45.440
give us the 7.0 story on coverage.


01:12:45.440 --> 01:12:47.040
- Oh, coverage.py 7.0.


01:12:47.040 --> 01:12:49.320
- Yeah, that's a big deal, right?


01:12:49.320 --> 01:12:51.240
I mean, if you're gonna make that big of a number.


01:12:51.240 --> 01:12:52.460
- It might not be a big deal.


01:12:52.460 --> 01:12:53.520
This is a tricky thing.


01:12:53.520 --> 01:12:56.360
So really what happened was I was looking through the bugs


01:12:56.360 --> 01:12:57.240
that people were reporting


01:12:57.240 --> 01:12:59.560
and a lot of them had to do with,


01:12:59.560 --> 01:13:01.080
it couldn't find my source file


01:13:01.080 --> 01:13:03.080
where I said it should put the source file.


01:13:03.080 --> 01:13:07.320
And I was answering with, well, you have to do these tricky things in your configuration file.


01:13:07.320 --> 01:13:08.880
And I thought maybe that should be simpler.


01:13:08.880 --> 01:13:14.960
So really, the reason it's a 7.0 is because I made things better.


01:13:14.960 --> 01:13:20.640
But I also think you might have to change your settings in order for them to still work the way they used to work.


01:13:20.640 --> 01:13:27.120
So when you look at the change log for coverage.py 7.0, there's no like amazing, big thing.


01:13:27.120 --> 01:13:29.120
The biggest feature change is that


01:13:29.120 --> 01:13:30.800
when you get a text report out,


01:13:30.800 --> 01:13:32.320
now it can be in markdown format


01:13:32.320 --> 01:13:34.380
instead of in plain text format.


01:13:34.380 --> 01:13:39.040
And that's cool, but that's not like a 7.0 level feature.


01:13:39.040 --> 01:13:42.020
The real change is, I think it's gonna be better,


01:13:42.020 --> 01:13:44.240
but a few of you might have to update your settings.


01:13:44.240 --> 01:13:46.680
And I wanted to make it clear to people


01:13:46.680 --> 01:13:47.960
that that was gonna happen.


01:13:47.960 --> 01:13:50.840
So I bumped the number to 7.0.


01:13:50.840 --> 01:13:53.560
- Yeah, well, that seems totally reasonable.


01:13:53.560 --> 01:13:55.120
- Yeah.


01:13:55.120 --> 01:13:56.160
- Still going strong.


01:13:56.160 --> 01:13:58.560
It's beta one right now.


01:13:58.560 --> 01:14:02.900
When do you foresee this becoming the pip install coverage?


01:14:02.900 --> 01:14:05.000
- That's a great question.


01:14:05.000 --> 01:14:08.160
I have to admit to be perfectly honest with you


01:14:08.160 --> 01:14:10.520
that I have been disappointed in the past


01:14:10.520 --> 01:14:13.760
at how few people try out betas.


01:14:13.760 --> 01:14:16.480
So I'm putting this out there in a disciplined way


01:14:16.480 --> 01:14:19.960
and I'm trying to talk about it, like go and try the beta,


01:14:19.960 --> 01:14:22.080
but eventually I'm gonna get tired of waiting for people


01:14:22.080 --> 01:14:23.300
and I'm just gonna publish it.


01:14:23.300 --> 01:14:25.560
And if the bug reports come in then,


01:14:25.560 --> 01:14:27.040
then we'll deal with them then.


01:14:27.040 --> 01:14:28.540
'Cause there's only so much you can do


01:14:28.540 --> 01:14:30.680
to get people's attention on a beta.


01:14:30.680 --> 01:14:31.600
- Yeah, absolutely.


01:14:31.600 --> 01:14:33.080
I can totally understand that.


01:14:33.080 --> 01:14:35.200
All right, final two questions before you get out of here.


01:14:35.200 --> 01:14:36.040
- Yeah.


01:14:36.040 --> 01:14:37.600
- Write some Python code.


01:14:37.600 --> 01:14:39.240
What editor are you using these days?


01:14:39.240 --> 01:14:40.320
- Vim.


01:14:40.320 --> 01:14:41.160
- Vim, right on.


01:14:41.160 --> 01:14:42.000
- Yes.


01:14:42.000 --> 01:14:45.440
And I do not have any code completion plugins.


01:14:45.440 --> 01:14:46.280
- Okay.


01:14:46.280 --> 01:14:49.480
- I'm very, I've said this before, I'm very low tech.


01:14:49.480 --> 01:14:50.320
- Perfect.


01:14:50.320 --> 01:14:52.480
And then notable PyPI package.


01:14:52.480 --> 01:14:53.840
I kind of feel like we've covered a bunch,


01:14:53.840 --> 01:14:54.920
but we did cover a bunch. - Anything you wanna


01:14:54.920 --> 01:14:56.440
give a shout?


01:14:56.440 --> 01:14:59.720
- You know, I've been very enamored of Rich, I have to say.


01:14:59.720 --> 01:15:00.840
It's very cool.


01:15:00.840 --> 01:15:04.040
I'm looking forward to hearing more about


01:15:04.040 --> 01:15:07.600
what Textual is gonna be for building terminal UI


01:15:07.600 --> 01:15:12.360
interfaces for applications.


01:15:12.360 --> 01:15:16.600
But Rich is astoundingly competent at what it tries to do.


01:15:16.600 --> 01:15:19.840
- Yeah, and what they're doing on the terminal


01:15:19.840 --> 01:15:21.680
is just nuts.


01:15:21.680 --> 01:15:22.520
- It is.


01:15:22.520 --> 01:15:24.200
- It is. - Not in a good way.


01:15:24.200 --> 01:15:25.920
- I only discovered just the other day,


01:15:25.920 --> 01:15:27.160
maybe people don't know this,


01:15:27.160 --> 01:15:29.040
that you can, one of the rich styles,


01:15:29.040 --> 01:15:30.880
and this is a feature that terminals support,


01:15:30.880 --> 01:15:32.160
and Rich is just tapping into it,


01:15:32.160 --> 01:15:33.800
but it gave a convenient way to do it.


01:15:33.800 --> 01:15:36.340
You can output text that's red or that's bold.


01:15:36.340 --> 01:15:38.120
You can output text that's a link,


01:15:38.120 --> 01:15:41.840
where the word in the terminal is just click here,


01:15:41.840 --> 01:15:44.840
and behind it is the URL you told to have it,


01:15:44.840 --> 01:15:47.000
and then you can click the link in the terminal


01:15:47.000 --> 01:15:49.000
and go and visit things.


01:15:49.000 --> 01:15:49.840
Us now.


01:15:49.840 --> 01:15:52.840
I'm familiar with terminals detecting links,


01:15:52.840 --> 01:15:56.120
but not having a different link text


01:15:56.120 --> 01:15:57.640
than the actual link, right?


01:15:57.640 --> 01:15:59.160
- Yes, that's what I'm talking about.


01:15:59.160 --> 01:16:00.760
I didn't know it could do that.


01:16:00.760 --> 01:16:02.080
- Yeah, that's nuts.


01:16:02.080 --> 01:16:03.160
- Yeah. - Cool.


01:16:03.160 --> 01:16:04.640
Well, that's definitely a good one.


01:16:04.640 --> 01:16:06.060
All right, final call to action.


01:16:06.060 --> 01:16:08.240
People are thinking about their projects.


01:16:08.240 --> 01:16:09.520
I wanna get started with some of these ideas.


01:16:09.520 --> 01:16:11.000
What do you tell them?


01:16:11.000 --> 01:16:13.080
- Think about your users.


01:16:13.080 --> 01:16:14.780
Think about who you're writing for.


01:16:14.780 --> 01:16:17.460
And it's different people at different times.


01:16:17.460 --> 01:16:19.560
And write words.


01:16:19.560 --> 01:16:21.720
I actually want to say one more thing.


01:16:21.720 --> 01:16:23.720
We talk about change logs as being really good


01:16:23.720 --> 01:16:25.400
for the users of your library.


01:16:25.400 --> 01:16:28.040
I find when I sit down to edit my change logs


01:16:28.040 --> 01:16:30.540
that I understand my own product better


01:16:30.540 --> 01:16:33.600
and that I think about the features I've built in a new way


01:16:33.600 --> 01:16:36.040
and sometimes actually go back and change them


01:16:36.040 --> 01:16:39.180
because in the process of trying to describe what happened,


01:16:39.180 --> 01:16:41.000
I learned something.


01:16:41.000 --> 01:16:43.360
Like writing for readers is great.


01:16:43.360 --> 01:16:46.200
Writing, you will learn things when you write.


01:16:46.200 --> 01:16:48.520
Write more, it'll be good.


01:16:48.520 --> 01:16:50.660
- Yeah, I can definitely see that.


01:16:50.660 --> 01:16:54.120
You're like, I want to say, but it doesn't quite do this


01:16:54.120 --> 01:16:55.760
unless I change this other thing in code


01:16:55.760 --> 01:16:58.720
and then it'll be true to what I tried, wanted to say here.


01:16:58.720 --> 01:17:00.480
So yeah, perfect.


01:17:00.480 --> 01:17:03.400
All right, Ned, thanks for coming back on the show.


01:17:03.400 --> 01:17:04.400
Great to have you here.


01:17:04.400 --> 01:17:05.640
- It's always fun.


01:17:05.640 --> 01:17:06.480
- Yeah, see ya.


01:17:06.480 --> 01:17:16.480
[BLANK_AUDIO]

