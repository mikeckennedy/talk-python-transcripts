WEBVTT

00:00:00.000 --> 00:00:01.960
- Hey, Koen, hey, YouTube.


00:00:01.960 --> 00:00:03.400
- Hey.


00:00:03.400 --> 00:00:05.760
- Hey, it's fantastic to be here with you,


00:00:05.760 --> 00:00:07.880
and I'm looking forward to talking about sports


00:00:07.880 --> 00:00:10.080
and Python and data science and all that,


00:00:10.080 --> 00:00:12.080
so let's just jump right into the show.


00:00:12.080 --> 00:00:15.320
Koen, welcome to Talk Python to Me.


00:00:15.320 --> 00:00:17.560
- Yeah, thanks for having me.


00:00:17.560 --> 00:00:21.280
Really cool to talk about this topic.


00:00:21.280 --> 00:00:26.080
- Yeah, I'm real excited to have you here at the,


00:00:26.080 --> 00:00:27.840
you have quite a collection.


00:00:27.840 --> 00:00:31.840
You have quite a collection of libraries.


00:00:31.840 --> 00:00:34.840
Now, up front, these are not all your libraries, right?


00:00:34.840 --> 00:00:37.840
These are sort of a kind of an awesome list of Python,


00:00:37.840 --> 00:00:40.840
and even beyond Python, sports, libraries, datasets,


00:00:40.840 --> 00:00:43.840
APIs, models, everything, right?


00:00:43.840 --> 00:00:46.840
Yeah, yeah. I think it's for people...


00:00:46.840 --> 00:00:50.840
It was quite hard to find open source packages,


00:00:50.840 --> 00:00:55.840
and I tried to collect everything I could find


00:00:55.840 --> 00:01:00.480
find and make it available for everyone to find what they need.


00:01:00.480 --> 00:01:05.840
Yeah, it sounds like a great mission.


00:01:05.840 --> 00:01:11.600
And as people will see, there is a bunch of stuff that we'll get to talk about.


00:01:11.600 --> 00:01:15.680
So I noticed not absolutely every sport is covered there,


00:01:15.680 --> 00:01:19.600
but many of the popular sports are covered.


00:01:19.600 --> 00:01:25.200
And if you're interested in sports, I think also if you're interested in just


00:01:25.200 --> 00:01:29.760
Just examples that connect with people, right?


00:01:29.760 --> 00:01:36.080
Imagine you're a university professor and you don't want to use the New York City tax


00:01:36.080 --> 00:01:37.560
data one more time.


00:01:37.560 --> 00:01:45.320
You want to say, well, maybe people are into soccer, American football, or NBA, whatever


00:01:45.320 --> 00:01:46.320
it is, right?


00:01:46.320 --> 00:01:48.520
Maybe you could come up with something more interesting.


00:01:48.520 --> 00:01:49.520
F1.


00:01:49.520 --> 00:01:50.600
- Yeah, definitely.


00:01:50.600 --> 00:01:54.360
There's quite some cool data available to use


00:01:54.360 --> 00:01:56.480
in your courses.


00:01:56.480 --> 00:01:57.880
Yeah, absolutely.


00:01:57.880 --> 00:01:59.200
- Yeah, yeah.


00:01:59.200 --> 00:02:04.200
Also, if people are members of some kind of club or team,


00:02:04.200 --> 00:02:06.520
maybe they could use some of this


00:02:06.520 --> 00:02:09.700
to bring some cool visualizations or analysis


00:02:09.700 --> 00:02:11.820
to their own organization, right?


00:02:11.820 --> 00:02:14.040
- Yeah, yeah.


00:02:14.040 --> 00:02:17.960
That's also one of the things that PySports


00:02:17.960 --> 00:02:27.000
likes to encourage to use open source packages that are already available instead of building


00:02:27.000 --> 00:02:34.920
your own stuff because that actually happens a lot. So that's also one of the part of the


00:02:34.920 --> 00:02:41.480
mission of PySport to make people aware of what's already there and try to bring people together.


00:02:42.280 --> 00:02:44.440
Yeah, one of the big problems not problems


00:02:44.440 --> 00:02:50.440
It's an opportunity, but it's also a challenge of python. You know, if you go to pypi.org right now, there's


00:02:50.440 --> 00:02:54.020
453 000 packages


00:02:54.020 --> 00:02:58.760
I didn't know the number but that's quite a lot. Yeah, we're coming up on half a million


00:02:58.760 --> 00:03:05.160
And if your goal is to work with some specific data set or try to solve a certain type of problem


00:03:05.160 --> 00:03:10.200
Often the hardest part is figuring out. Well, what library do I use does it exist?


00:03:10.600 --> 00:03:13.640
And if so, is it up to date and all of these things?


00:03:13.640 --> 00:03:15.400
So having a list like this,


00:03:15.400 --> 00:03:17.240
a place that aggregates it and sorts it,


00:03:17.240 --> 00:03:19.160
filters it, super neat.


00:03:19.160 --> 00:03:22.040
So I'm really looking forward to talking to you about it.


00:03:22.040 --> 00:03:23.240
Before we get to that though,


00:03:23.240 --> 00:03:25.080
just give us a quick bit on your backstory.


00:03:25.080 --> 00:03:27.480
How'd you get into programming in Python?


00:03:27.480 --> 00:03:29.400
- Yeah, this is an interesting story.


00:03:29.400 --> 00:03:32.760
I think I started programming when I was,


00:03:32.760 --> 00:03:36.360
I think around 12, when I get the Lego Mindstorms,


00:03:36.360 --> 00:03:39.240
the Lego that you could also program.


00:03:39.240 --> 00:03:47.240
My father gave me a visual basic book and I should just figure it out.


00:03:47.240 --> 00:03:58.240
So that's where I started with programming and then during high school I also did web development with PHP.


00:03:58.240 --> 00:04:06.920
I'm not really sure at what age, but eventually I ended up with, I think, the first search


00:04:06.920 --> 00:04:07.920
engine.


00:04:07.920 --> 00:04:12.680
And they want to, yeah, they need a Python developer.


00:04:12.680 --> 00:04:16.380
And I didn't really know Python, but that wasn't an issue.


00:04:16.380 --> 00:04:20.200
So there I learned Python.


00:04:20.200 --> 00:04:24.640
And from that point on, I only, or mostly used Python.


00:04:24.640 --> 00:04:31.280
Python. Yeah. Okay, I forget this PHP stuff. Go in Python. Yeah, well, to be honest, we,


00:04:31.280 --> 00:04:40.800
my company, we still use PHP. Because well, it works quite well. The performances is okay. I'm


00:04:40.800 --> 00:04:47.280
not really sure if I'm allowed to say it on this show. But yeah, it also had some advances.


00:04:48.640 --> 00:04:52.480
Yeah, absolutely. Well, I mean, almost every language has some


00:04:52.480 --> 00:04:58.160
something it's particularly good at and reasons to keep using it. And also, there's just tons of


00:04:58.160 --> 00:05:02.320
software that was written, you know, pick your language, written in that language, and it still


00:05:02.320 --> 00:05:06.240
works well. And, you know, there's plenty of reason to just keep going with it, right?


00:05:06.240 --> 00:05:16.160
Yeah. But yeah, Python is now really my language of most interest and what I really use on my


00:05:18.000 --> 00:05:23.920
day-to-day work. Excellent. Yeah. So yeah.


00:05:23.920 --> 00:05:27.200
Yeah, cool. What are you doing these days?


00:05:27.200 --> 00:05:31.600
Are you still working at the search engine? No, that was quite a while ago.


00:05:31.600 --> 00:05:38.160
I also worked at a huge online marketing agency


00:05:38.160 --> 00:05:43.840
around the software department and we created tools to


00:05:43.840 --> 00:05:51.680
collect all the data from all kinds of different sources and make it available for the teams.


00:05:51.680 --> 00:05:59.120
Right now I'm running my own company, it's called Team TV, where we provide all kinds of tools


00:05:59.120 --> 00:06:08.400
where we use video and data for example performance analysts but also for highlight


00:06:08.400 --> 00:06:17.600
creation or live streaming just to make sure that we try to combine video and data in all


00:06:17.600 --> 00:06:20.960
possible ways within sports domain.


00:06:20.960 --> 00:06:25.440
Yeah, that sounds like a really interesting thing to be working on.


00:06:25.440 --> 00:06:31.600
Yeah, I started mostly on the video engineering part.


00:06:31.600 --> 00:06:34.920
So we built quite some stuff ourselves there.


00:06:34.920 --> 00:06:39.920
So from people uploading huge amounts of footage


00:06:39.920 --> 00:06:42.640
that we need to transcode and how to scale it,


00:06:42.640 --> 00:06:44.860
how to serve it.


00:06:44.860 --> 00:06:48.680
So that's stuff we build ourselves.


00:06:48.680 --> 00:06:55.800
Yeah, later on, we keep on building more stuff around data


00:06:55.800 --> 00:07:00.800
and always keep the combination between data and the video


00:07:01.480 --> 00:07:05.120
because, well, you can see some sort of metric,


00:07:05.120 --> 00:07:08.760
but you always want to see the footage behind it


00:07:08.760 --> 00:07:11.880
to actually understand the context of it.


00:07:11.880 --> 00:07:13.160
- Yeah, sure.


00:07:13.160 --> 00:07:14.120
Well, it sounds really fun.


00:07:14.120 --> 00:07:16.320
And you're also involved with PyData Andover,


00:07:16.320 --> 00:07:17.600
is that right?


00:07:17.600 --> 00:07:18.420
- Yeah, yeah.


00:07:18.420 --> 00:07:21.760
So I think for even faster.


00:07:21.760 --> 00:07:23.040
Yeah, yeah, five years ago,


00:07:23.040 --> 00:07:25.680
we started with PyData Eindhoven.


00:07:25.680 --> 00:07:29.960
We were already friends with PyData Amsterdam.


00:07:30.840 --> 00:07:33.640
So they said, well, maybe you should also start


00:07:33.640 --> 00:07:35.240
on Eindhoven chapter.


00:07:35.240 --> 00:07:39.400
I think this year will be the anniversary,


00:07:39.400 --> 00:07:42.420
the five-year anniversary for PyData Eindhoven.


00:07:42.420 --> 00:07:46.220
And it's, yeah, it's amazing community.


00:07:46.220 --> 00:07:49.840
And that's, yeah, also inspired me


00:07:49.840 --> 00:07:53.200
to start with PySupport.


00:07:53.200 --> 00:07:55.640
I'm not really sure if people that are listening


00:07:55.640 --> 00:08:00.520
to this podcast know PyData, maybe, I think.


00:08:00.520 --> 00:08:04.020
- Yeah, I would suspect most probably do.


00:08:04.020 --> 00:08:07.820
At least the data science inclined among us.


00:08:07.820 --> 00:08:12.820
- Yeah, so yeah, I can tell a little bit about it,


00:08:12.820 --> 00:08:17.980
but I think right now we have a nice way


00:08:17.980 --> 00:08:21.900
of organizing the meetups and trying to get more people


00:08:21.900 --> 00:08:24.980
involved and talk about data science and share knowledge.


00:08:24.980 --> 00:08:27.860
And then once a year we have the conference


00:08:27.860 --> 00:08:31.640
where we try to get, yeah, collect money


00:08:31.640 --> 00:08:33.560
that we can send to NumFocus


00:08:33.560 --> 00:08:37.020
and they can share it over all the open source projects.


00:08:37.020 --> 00:08:41.040
So yeah, it's a really amazing community.


00:08:41.040 --> 00:08:45.320
- Excellent, and NumFocus does a lot to support


00:08:45.320 --> 00:08:49.920
the bigger data science oriented projects.


00:08:49.920 --> 00:08:51.600
Yeah. - Yeah, yeah.


00:08:51.600 --> 00:08:53.800
- I think that's kind of unique amongst the,


00:08:53.800 --> 00:08:56.320
in the Python space.


00:08:56.320 --> 00:09:01.400
You know, there's not really anything like that in the web or in UI.


00:09:01.400 --> 00:09:04.580
You know, there's not a lot of areas where it's like organization that says,


00:09:04.580 --> 00:09:07.880
okay, we're going to try to find the popular projects and support them.


00:09:07.880 --> 00:09:09.160
Yeah.


00:09:09.160 --> 00:09:10.820
Across organizations, right?


00:09:10.820 --> 00:09:15.600
Like people support flask, but they don't also support Django at the


00:09:15.600 --> 00:09:18.280
same, in the same sort of organization.


00:09:18.280 --> 00:09:18.560
Right.


00:09:18.560 --> 00:09:19.640
Yeah.


00:09:19.640 --> 00:09:20.700
Yeah.


00:09:20.700 --> 00:09:25.700
But I think it's also an opportunity for all the companies


00:09:25.700 --> 00:09:30.660
that are using those open source packages to give back.


00:09:30.660 --> 00:09:34.900
And I think from doing it through NumFocus,


00:09:34.900 --> 00:09:38.120
that makes it also easier because they use a lot of packages


00:09:38.120 --> 00:09:41.140
and can just donate to NumFocus


00:09:41.140 --> 00:09:44.780
and they will make sure it's distributed


00:09:44.780 --> 00:09:47.820
over those packages.


00:09:47.820 --> 00:09:49.220
- Right, absolutely.


00:09:49.220 --> 00:09:53.260
if you use pandas, you should also support NumPy, right?


00:09:53.260 --> 00:09:55.900
Because that's kind of the foundation and so on.


00:09:55.900 --> 00:09:58.700
- Yeah, yeah, yeah, yeah, yeah, yeah.


00:09:58.700 --> 00:09:59.980
- Interesting.


00:09:59.980 --> 00:10:00.860
Oh, that makes a lot of sense.


00:10:00.860 --> 00:10:04.140
All right, well, let's jump into sports


00:10:04.140 --> 00:10:08.540
and your project, PySport.


00:10:08.540 --> 00:10:11.340
There are other people who are maintainers


00:10:11.340 --> 00:10:14.060
and working on this, or is this just your project?


00:10:14.060 --> 00:10:18.020
- Well, to get the meetup that we had,


00:10:18.020 --> 00:10:24.180
Just a couple of weeks ago, we had some more people collected.


00:10:24.180 --> 00:10:31.500
And now we are building from there on to get more people involved with just PySport.


00:10:31.500 --> 00:10:37.700
But one of the projects we built with PySport is the Kloppy package.


00:10:37.700 --> 00:10:41.580
And there we have worked together with Jan van Haaren,


00:10:41.580 --> 00:10:45.660
he's a head of data science at Club Brugge,


00:10:45.980 --> 00:10:50.580
a big club in Belgium.


00:10:50.580 --> 00:10:52.300
We had the main maintainers there,


00:10:52.300 --> 00:10:57.420
but I think right now we have 22 contributors to the package.


00:10:57.420 --> 00:11:01.380
So there's quite some people contributing there.


00:11:01.380 --> 00:11:01.860
Yeah.


00:11:01.860 --> 00:11:02.860
Yeah, that's a big group.


00:11:02.860 --> 00:11:06.100
That's a lot of people contributing.


00:11:06.100 --> 00:11:08.660
Yeah, so let's start this way.


00:11:08.660 --> 00:11:10.700
Tell people what PySport is and about that.


00:11:10.700 --> 00:11:12.500
And then we can talk a little broadly just


00:11:12.500 --> 00:11:15.300
sports analytics before we get into the details.


00:11:15.300 --> 00:11:20.700
The most important mission of PySport is to


00:11:20.700 --> 00:11:29.600
to bridge the gap between the clubs and the sports analytics


00:11:29.600 --> 00:11:36.700
and just people and by using open source packages because a


00:11:36.700 --> 00:11:40.700
A lot of clubs are using open source packages.


00:11:40.700 --> 00:11:49.620
Open source packages are used by the clubs


00:11:49.620 --> 00:11:52.460
and people want to have a way to contribute


00:11:52.460 --> 00:11:55.180
to their favorite club.


00:11:55.180 --> 00:11:58.500
And I think a lot of people are still struggling


00:11:58.500 --> 00:12:01.540
on how to do it.


00:12:01.540 --> 00:12:04.260
And with PySport, we want to share the knowledge


00:12:04.260 --> 00:12:08.420
and teach people on how to do it.


00:12:08.420 --> 00:12:14.320
So we try to get the experts from the clubs,


00:12:14.320 --> 00:12:17.120
but also getting the knowledge from,


00:12:17.120 --> 00:12:24.200
you know, like pandas or other big packages


00:12:24.200 --> 00:12:26.980
and see how we can get all that knowledge


00:12:26.980 --> 00:12:29.980
into the sports analytics community.


00:12:29.980 --> 00:12:33.540
And with Kloppi, we try to set an example


00:12:33.540 --> 00:12:37.180
on how to build such a package,


00:12:37.180 --> 00:12:41.020
how to work together on such a thing


00:12:41.020 --> 00:12:44.900
and also encourage people to contribute


00:12:44.900 --> 00:12:49.900
and show that you don't have to create a pull request


00:12:49.900 --> 00:12:52.780
that there's a major refactor,


00:12:52.780 --> 00:12:57.660
but also like minor things like typing errors,


00:12:57.660 --> 00:13:01.220
fix in documentation and show people


00:13:01.220 --> 00:13:06.220
that's also very valuable to a package.


00:13:06.220 --> 00:13:09.420
- Right. - Yeah.


00:13:09.420 --> 00:13:15.180
- Interesting, so CLOPi is standardized soccer tracking


00:13:15.180 --> 00:13:16.660
and event data, right?


00:13:16.660 --> 00:13:20.480
So you started out with soccer or as I guess,


00:13:20.480 --> 00:13:22.480
a lot of the world might refer to it as football,


00:13:22.480 --> 00:13:27.480
but in the US, that's our namespace.


00:13:27.860 --> 00:13:30.140
- Yeah, yeah, yeah, yeah.


00:13:30.140 --> 00:13:33.260
Yeah, it's sometimes, yeah, it's difficult


00:13:33.260 --> 00:13:34.420
if we're talking about football.


00:13:34.420 --> 00:13:37.580
But here in Europe, we call it football,


00:13:37.580 --> 00:13:41.380
but yeah, for the package, because it's international,


00:13:41.380 --> 00:13:44.460
so worldwide, I call it soccer.


00:13:44.460 --> 00:13:45.740
- Yeah, yeah.


00:13:45.740 --> 00:13:47.380
Namespace, namespace.


00:13:47.380 --> 00:13:52.100
So, yeah, so give us a quick bit of background on Kloppy,


00:13:52.100 --> 00:13:54.660
but since it's kind of one of the founding,


00:13:54.660 --> 00:13:57.420
you created this as a way to sort of set an example, right,


00:13:57.420 --> 00:14:02.140
for how to create a package and that helps people


00:14:02.140 --> 00:14:05.320
understand this event, this club data.


00:14:05.320 --> 00:14:10.980
- Yeah, so what, where that started is on Twitter,


00:14:10.980 --> 00:14:15.860
there was already quite some people talking about


00:14:15.860 --> 00:14:20.340
sports analytics, of course, and one guy, Joe Mulberry,


00:14:20.340 --> 00:14:24.620
he's working at a Danish top club.


00:14:26.520 --> 00:14:29.960
He asked for help because he created a notebook


00:14:29.960 --> 00:14:34.840
and he wanted to build a Flask API on top of it.


00:14:34.840 --> 00:14:36.560
And I said, well, I know Python.


00:14:36.560 --> 00:14:40.860
I don't know really much about soccer or about data,


00:14:40.860 --> 00:14:43.480
but yeah, I would like to be involved.


00:14:43.480 --> 00:14:45.200
I would like to help you.


00:14:45.200 --> 00:14:48.200
And when I received a notebook,


00:14:48.200 --> 00:14:52.880
I noticed that like 80% of the code was about reading


00:14:52.880 --> 00:14:56.800
and standardizing the data to a format


00:14:56.800 --> 00:14:57.960
that he could work with.


00:14:57.960 --> 00:15:03.000
When we talked about it, it seemed like most,


00:15:03.000 --> 00:15:05.720
at least a lot of people are struggling with that issue


00:15:05.720 --> 00:15:08.800
and doing the same thing over and over again.


00:15:08.800 --> 00:15:11.080
Because in more notebooks that I saw,


00:15:11.080 --> 00:15:14.840
people were doing the same thing, but in different ways.


00:15:14.840 --> 00:15:17.680
And some are not correct implementation


00:15:17.680 --> 00:15:21.240
or inefficient implementations.


00:15:21.240 --> 00:15:26.240
So I thought, well, one thing I know is how to read data


00:15:26.240 --> 00:15:30.160
and how to get it into a standardized format


00:15:30.160 --> 00:15:32.400
because that was also one of the things I did


00:15:32.400 --> 00:15:34.460
at an online marketing company.


00:15:34.460 --> 00:15:37.760
Yeah.


00:15:37.760 --> 00:15:40.120
- Like I don't know much about your data format


00:15:40.120 --> 00:15:45.120
but I know about data and analyzing it and all that, right?


00:15:45.120 --> 00:15:50.160
- So yeah, I built a package start with just tracking data


00:15:51.080 --> 00:15:55.120
but also try to explain what the next steps could be.


00:15:55.120 --> 00:15:58.480
And then people said, well, this is really useful.


00:15:58.480 --> 00:16:03.040
And from that part, I kept on adding


00:16:03.040 --> 00:16:06.040
these serializers for different kinds of data,


00:16:06.040 --> 00:16:09.880
for the tracking data and also for the event data.


00:16:09.880 --> 00:16:15.260
Yeah, I tried to get knowledge


00:16:15.260 --> 00:16:19.060
from non-sports bigger projects.


00:16:19.060 --> 00:16:26.240
So I also got, Will from the textile package.


00:16:26.240 --> 00:16:32.680
He also did several reviews on this, package and, and, give feedback to,


00:16:32.680 --> 00:16:35.720
yeah, to try to get the package on a, on a higher level.


00:16:35.720 --> 00:16:40.360
So people within sports and list community could also, gain


00:16:40.360 --> 00:16:42.300
more knowledge from there.


00:16:42.300 --> 00:16:48.700
but maybe also good, a big, a small, a small background on, on the,


00:16:48.760 --> 00:16:50.760
The data, so the tracking data,


00:16:50.760 --> 00:16:53.960
it's like positioning data for all players on the pitch.


00:16:53.960 --> 00:17:00.320
I think it's most of the time 25 frames per second.


00:17:00.320 --> 00:17:04.740
So you know the location for each player and the ball.


00:17:04.740 --> 00:17:06.520
And on the other side, you have the event data.


00:17:06.520 --> 00:17:10.760
So all passes and shots and things like that.


00:17:10.760 --> 00:17:12.600
- Right, at this time from this position,


00:17:12.600 --> 00:17:14.600
there was a shot on the goal or there was a pass


00:17:14.600 --> 00:17:16.360
or there was a takeaway or...


00:17:16.360 --> 00:17:17.960
- Mm-hmm. - Yeah.


00:17:17.960 --> 00:17:20.320
- Yeah, yeah, that's the event data.


00:17:20.320 --> 00:17:23.680
Yeah, and all the vendors use different formats.


00:17:23.680 --> 00:17:25.680
- Yeah, yeah, oh geez.


00:17:25.680 --> 00:17:28.080
That sounds hard.


00:17:28.080 --> 00:17:33.080
So first of all, 25 Hertz of all the people's location.


00:17:33.080 --> 00:17:36.960
This is beyond somebody with just a pen and paper


00:17:36.960 --> 00:17:38.600
and notebook writing down,


00:17:38.600 --> 00:17:42.680
oh, at this time there was a shot on the goal by number 25.


00:17:42.680 --> 00:17:43.820
How do they get that data?


00:17:43.820 --> 00:17:45.280
That's crazy.


00:17:45.280 --> 00:17:48.480
Yeah, it's quite an advanced systems that I use.


00:17:48.480 --> 00:17:53.240
So in the stadium, I think, they have like 20 cameras, around the pitch.


00:17:53.240 --> 00:18:01.000
And they use computer vision to, yeah, to detect all the players and combine it.


00:18:01.000 --> 00:18:07.160
but I believe, and I'm not really sure if the already, if I'm not on


00:18:07.160 --> 00:18:11.720
the market that do it totally automated, but I think from the system that I'm


00:18:11.800 --> 00:18:16.480
currently used in soccer, there are still some people needed


00:18:16.480 --> 00:18:18.880
for difficult situations like a corner kick,


00:18:18.880 --> 00:18:22.280
where a lot of people in a small area,


00:18:22.280 --> 00:18:23.120
and a lot of occlusions happen.


00:18:23.120 --> 00:18:24.400
- You can't see the numbers, yeah.


00:18:24.400 --> 00:18:25.680
- Yeah, they can't see the numbers.


00:18:25.680 --> 00:18:29.480
So just after a corner, some manual operator


00:18:29.480 --> 00:18:32.840
has to reassign some players or correct something.


00:18:32.840 --> 00:18:36.560
But it's quite an advanced system already.


00:18:36.560 --> 00:18:37.800
- It sounds incredibly advanced.


00:18:37.800 --> 00:18:40.760
It sounds like an awesome data set to work with


00:18:40.760 --> 00:18:43.600
because with that much data, you really


00:18:43.600 --> 00:18:47.520
can make a lot of interesting predictions and trends.


00:18:47.520 --> 00:18:49.240
I mean, at some point, maybe we'll


00:18:49.240 --> 00:18:53.720
just put some sort of tracking RFID thing


00:18:53.720 --> 00:18:55.120
on the back of the player's head,


00:18:55.120 --> 00:19:00.480
just stitch it on there, and then you fully automate it.


00:19:00.480 --> 00:19:01.320
>>Jorrit: I think--


00:19:01.320 --> 00:19:02.120
>>Luis: Never mind.


00:19:02.120 --> 00:19:03.600
>>Jorrit: --a socket that they could--


00:19:03.600 --> 00:19:04.600
yeah, maybe, yeah.


00:19:04.600 --> 00:19:06.640
Not sure if all players would accept it.


00:19:06.640 --> 00:19:10.640
But for example, on ice hockey, yeah, you can put on a helmet.


00:19:10.640 --> 00:19:12.240
- Yeah, you could put it on the how much, sure.


00:19:12.240 --> 00:19:15.000
- For football, then, yeah.


00:19:15.000 --> 00:19:17.960
- Yeah, things like automobile racing,


00:19:17.960 --> 00:19:20.040
you know, they have, not all of them,


00:19:20.040 --> 00:19:24.920
but for example, F1 has incredibly high frequency


00:19:24.920 --> 00:19:28.280
of like points that measure where's this car,


00:19:28.280 --> 00:19:29.280
how fast is it going?


00:19:29.280 --> 00:19:31.680
The cars are sending out real-time telemetry.


00:19:31.680 --> 00:19:34.000
There's certainly many sports


00:19:34.000 --> 00:19:37.200
that have quite high fidelity in their data.


00:19:38.640 --> 00:19:44.480
Yeah, I must admit I haven't seen the data from everyone yet, but it would be really


00:19:44.480 --> 00:19:50.080
interesting to learn from them and how to work with data and see what can be applied


00:19:50.080 --> 00:19:54.160
to football or soccer or the sports.


00:19:54.160 --> 00:19:55.720
I bet it's a lot actually.


00:19:55.720 --> 00:20:02.600
I bet it is just in terms of actual quantity of data, how fast are sampling, how many cars,


00:20:02.600 --> 00:20:03.600
for how long.


00:20:03.600 --> 00:20:04.600
It's probably a lot of data.


00:20:04.600 --> 00:20:05.600
Cool.


00:20:05.600 --> 00:20:06.600
All right, let's go.


00:20:06.600 --> 00:20:07.600
Yeah, go ahead.


00:20:07.600 --> 00:20:13.920
Yeah, that's also one of the interesting things about working with sports data, I think the


00:20:13.920 --> 00:20:16.880
data engineering part.


00:20:16.880 --> 00:20:22.040
And this package just focused on reading the data, but then the next step, yeah, how to


00:20:22.040 --> 00:20:28.960
work with data, especially if you would like to use the tracking data for a whole season.


00:20:28.960 --> 00:20:37.000
That's quite some data that also pandas can start struggling a bit with.


00:20:37.000 --> 00:20:42.320
You know, it just occurred to me, there's probably a whole nother demographic or aspect


00:20:42.320 --> 00:20:44.920
who would be interested in this kind of data.


00:20:44.920 --> 00:20:47.120
It would be like sports betting people.


00:20:47.120 --> 00:20:52.480
I mean, not that I have any interest in that at all, but, but if you were trying to figure


00:20:52.480 --> 00:20:56.760
out like, okay, if this team plays that team, if you can understand, okay, this, their star


00:20:56.760 --> 00:21:02.680
player, you know, if we match up their moves against the other person's moves, it turns


00:21:02.680 --> 00:21:06.400
out there's a weakness in this way for their defense or who knows, right?


00:21:06.400 --> 00:21:09.840
I mean, there's probably with that much data, there's probably some interesting stuff you can do.


00:21:09.840 --> 00:21:18.800
Yeah, I think that a lot of vendors of the data also have the, yeah, the betting industry as well


00:21:18.800 --> 00:21:24.000
as their clients, because yeah. Yeah, I really care to work for them or support them.


00:21:24.000 --> 00:21:31.520
It's a little bit shady, I suppose, but it does seem like you could, it's almost like a really


00:21:31.520 --> 00:21:37.640
detailed information about companies for the stock market.


00:21:37.640 --> 00:21:42.560
This is kind of like a little bit like that for the sports betting in some ways, I suppose.


00:21:42.560 --> 00:21:44.560
Yeah, yeah.


00:21:44.560 --> 00:21:45.560
Interesting.


00:21:45.560 --> 00:21:46.560
Okay.


00:21:46.560 --> 00:21:57.080
So I think one of the challenges here is probably a lot of this data is not easily offered up.


00:21:57.080 --> 00:22:00.280
There's probably not a lot of JSON APIs with low latency


00:22:00.280 --> 00:22:02.280
that are super easy to access.


00:22:02.280 --> 00:22:04.880
For some, there must be, but not...


00:22:04.880 --> 00:22:09.880
There's probably a lot of data out there that is not overly welcome


00:22:09.880 --> 00:22:14.380
to either be given out or is given out in batch over slow periods


00:22:14.380 --> 00:22:15.980
or something like that.


00:22:15.980 --> 00:22:18.680
Maybe speak to a little bit about the data availability.


00:22:18.680 --> 00:22:21.880
Yeah, that's quite an issue.


00:22:21.880 --> 00:22:28.120
And I know mostly about the soccer data,


00:22:28.120 --> 00:22:31.080
but I can imagine that the same applies


00:22:31.080 --> 00:22:33.720
to most of the other sports.


00:22:33.720 --> 00:22:38.600
And I think data availability is a major issue, at least


00:22:38.600 --> 00:22:42.480
if you want to encourage the community to work with it


00:22:42.480 --> 00:22:49.440
and do research on it and get people--


00:22:49.440 --> 00:22:53.400
Yeah, build more cool stuff without being within a club.


00:22:53.400 --> 00:22:57.480
There are some companies that already provide


00:22:57.480 --> 00:23:01.040
quite a big set of open event data.


00:23:01.040 --> 00:23:02.300
Stats Bomb is one of them.


00:23:02.300 --> 00:23:07.300
I think they provide around 1,500 data sets for event data.


00:23:07.300 --> 00:23:13.000
But if you're looking at the tracking data,


00:23:13.000 --> 00:23:18.000
and maybe like 10, maybe 15 sets available.


00:23:18.000 --> 00:23:26.080
sets available because all those vendors have deals with the leagues and they are not allowed


00:23:26.080 --> 00:23:37.440
to share it so you have to know someone within a club and yeah. Or use a beautiful super scrapy


00:23:37.440 --> 00:23:44.000
or something like that. Yeah that's the other option but then it's still very hard to get


00:23:44.000 --> 00:23:46.440
get the tracking data because I'm not really sure


00:23:46.440 --> 00:23:48.280
if you can actually scrape it.


00:23:48.280 --> 00:23:53.280
But that's, it is one of the things that I noticed


00:23:53.280 --> 00:23:58.320
when working on the open source of PySpot website


00:23:58.320 --> 00:24:00.920
that are really a lot of scrapers.


00:24:00.920 --> 00:24:04.440
And I think that's an indication that there's an issue


00:24:04.440 --> 00:24:06.040
with data availability.


00:24:06.040 --> 00:24:09.880
- Yeah, it's not, this plugs into the API,


00:24:09.880 --> 00:24:11.520
but this is a scraper.


00:24:11.520 --> 00:24:12.360
- Yeah, yeah, yeah.


00:24:12.360 --> 00:24:17.640
It's worth pointing out or throwing out a bit of word of caution just because the website


00:24:17.640 --> 00:24:23.640
is publicly available and you can hit it with some kind of scraping tool. That doesn't mean you


00:24:23.640 --> 00:24:28.920
legally can do stuff with the data. You probably want to be pretty careful about that, right?


00:24:28.920 --> 00:24:35.880
Yeah, because I think even when it's not explicitly mentioned, most of the times it's


00:24:35.880 --> 00:24:43.560
not allowed to scrape the data at all but also in a soccer there are quite some websites that


00:24:43.560 --> 00:24:51.240
explicitly are forbidden. So the packages are there and it's also a bit


00:24:51.240 --> 00:24:57.320
I was thinking about should I include them or should I not include them because they kind of


00:24:57.320 --> 00:25:04.120
encourage non-legal actions, but yeah, not really sure about it.


00:25:04.120 --> 00:25:05.100
Yeah.


00:25:05.100 --> 00:25:06.220
Yeah, sure.


00:25:06.220 --> 00:25:11.200
It's, I can see the case for both sides of that, but I just want to, you know, let


00:25:11.200 --> 00:25:13.920
people know, like, just be careful with what you do with the data.


00:25:13.920 --> 00:25:17.640
It's one thing if, oh, it's an academic research project and it's just for my


00:25:17.640 --> 00:25:19.120
own interest or whatever, but.


00:25:19.120 --> 00:25:21.720
Yeah.


00:25:21.720 --> 00:25:26.920
If you start scraping that entire website and trying to make money out of it, you


00:25:26.920 --> 00:25:28.580
- You should not do it.


00:25:28.580 --> 00:25:31.720
- Or find a way to do it legitimately, right?


00:25:31.720 --> 00:25:34.320
But just don't sneak through.


00:25:34.320 --> 00:25:39.820
All right, well, I think it might be fun to,


00:25:39.820 --> 00:25:45.880
let's talk through some of the packages you have here.


00:25:45.880 --> 00:25:51.080
So if you go to pisport.org and there's a nav bar


00:25:51.080 --> 00:25:52.880
and on the left it says open source.


00:25:52.880 --> 00:25:54.260
And if people click that,


00:25:54.260 --> 00:25:58.500
then they end up with a whole bunch of,


00:25:58.500 --> 00:26:01.020
and I'll open it just this way for a moment.


00:26:01.020 --> 00:26:02.900
We can look at it and talk about it.


00:26:02.900 --> 00:26:04.380
So if you just click on it,


00:26:04.380 --> 00:26:07.740
it actually, there's a delay as it downloads.


00:26:07.740 --> 00:26:10.300
- Yeah, there's still something I need to fix


00:26:10.300 --> 00:26:14.300
because yeah, it's quite some time.


00:26:14.300 --> 00:26:15.180
- This is not a complaint.


00:26:15.180 --> 00:26:16.940
It's just, I don't know how many pages that is,


00:26:16.940 --> 00:26:19.340
but that's a really small scroll bar.


00:26:19.340 --> 00:26:21.980
But what I noticed that's pretty cool is you can go in


00:26:21.980 --> 00:26:23.820
and there's a filter that you all have


00:26:23.820 --> 00:26:25.900
and you can filter by your language.


00:26:25.900 --> 00:26:29.340
Right now you have Haskell, Python, and R, and others.


00:26:29.340 --> 00:26:31.660
And then you can pick by sports,


00:26:31.660 --> 00:26:34.380
and then you can pick by type of thing, right?


00:26:34.380 --> 00:26:36.980
So I filtered our discussion down to Python libraries


00:26:36.980 --> 00:26:39.260
just because, you know, the--


00:26:39.260 --> 00:26:41.460
- We have a single app for--


00:26:41.460 --> 00:26:42.740
- Yeah. (laughs)


00:26:42.740 --> 00:26:46.220
And you could also pick amongst the different types of tools.


00:26:46.220 --> 00:26:48.340
So we talked about the scrapers,


00:26:48.340 --> 00:26:50.980
and probably to a lesser degree, the APIs, right?


00:26:50.980 --> 00:26:53.660
The API clients, which is cool.


00:26:53.660 --> 00:26:55.660
There are some in there, they say, "Here's the API,


00:26:55.660 --> 00:26:57.660
and we just built a strongly typed package,"


00:26:57.660 --> 00:27:00.360
rather than just doing straight REST, which is great.


00:27:00.360 --> 00:27:02.500
But you also have models and calculators


00:27:02.500 --> 00:27:06.800
for predicting things, and then I/O for file formats,


00:27:06.800 --> 00:27:09.800
visualization, open data, and databases.


00:27:09.800 --> 00:27:11.800
- Right? - Yeah.


00:27:11.800 --> 00:27:15.000
I encourage people, rather than try to read the whole list,


00:27:15.000 --> 00:27:18.140
which is hundreds and hundreds of packages,


00:27:18.140 --> 00:27:21.180
to filter down maybe to the sport you're interested in,


00:27:21.180 --> 00:27:24.220
or a couple of sports or the type of tooling


00:27:24.220 --> 00:27:25.620
you're interested in, yeah?


00:27:25.620 --> 00:27:29.060
- Yeah, I think filtering is a must,


00:27:29.060 --> 00:27:31.180
but maybe if you have plenty of time,


00:27:31.180 --> 00:27:34.540
you could just scroll and see what's interesting


00:27:34.540 --> 00:27:40.060
because it's still, I think, a very interesting list


00:27:40.060 --> 00:27:44.320
to see just what's available and get inspiration.


00:27:44.320 --> 00:27:47.340
Yeah. - Yeah.


00:27:47.340 --> 00:27:49.140
- It's quite a list, yeah.


00:27:49.140 --> 00:27:50.860
- Yeah, so what's the sort here?


00:27:50.860 --> 00:27:54.340
If I come here, how does this get sorted?


00:27:54.340 --> 00:27:56.500
Like, is there any meaning to the order they appear?


00:27:56.500 --> 00:27:58.380
Is it just when they were entered or?


00:27:58.380 --> 00:28:03.320
- Yeah, that's a good question.


00:28:03.320 --> 00:28:04.680
I need to look it up.


00:28:04.680 --> 00:28:10.700
Because one thing I did is I also open sourced


00:28:10.700 --> 00:28:14.380
the data collection part of this website,


00:28:14.380 --> 00:28:19.060
but it's daily collected,


00:28:19.060 --> 00:28:21.260
at least to provide an update.


00:28:21.260 --> 00:28:27.000
I think, I must say, I think there's an order


00:28:27.000 --> 00:28:32.740
when I added the packages, I think that's the order of here.


00:28:32.740 --> 00:28:37.180
But to be honest, it can be pretty random.


00:28:37.180 --> 00:28:40.060
- Excellent, all right.


00:28:40.060 --> 00:28:42.380
So here, I'll just sort of go through


00:28:42.380 --> 00:28:43.940
a couple of the scrapers here


00:28:43.940 --> 00:28:47.020
and we can maybe dive into one or two potentially.


00:28:47.020 --> 00:28:50.180
So there's Pyball, and we'll just go through


00:28:50.180 --> 00:28:52.020
just to give people a sense, right?


00:28:52.020 --> 00:28:53.380
- Yeah. - Of that one here, right?


00:28:53.380 --> 00:28:58.180
So there's Pyball, which is a Python API, nice,


00:28:58.180 --> 00:29:02.500
wrapper for stats.nba.com with a focus on NBA


00:29:02.500 --> 00:29:05.220
and WNBA applications.


00:29:05.220 --> 00:29:06.120
That's pretty cool.


00:29:06.120 --> 00:29:11.380
I don't know anything about stats.nba.com,


00:29:11.380 --> 00:29:14.860
but it looks like, yeah, this is a whole website


00:29:14.860 --> 00:29:18.220
with all sorts of data.


00:29:18.220 --> 00:29:20.340
It's got players, teams, leaders.


00:29:20.340 --> 00:29:21.700
Looks great, actually.


00:29:21.700 --> 00:29:23.780
- Yeah, I think quite some people


00:29:23.780 --> 00:29:26.720
are also using this package.


00:29:26.720 --> 00:29:32.300
And I think it's the mostly used package


00:29:32.300 --> 00:29:34.380
when working with basketball data.


00:29:34.380 --> 00:29:39.780
Indeed, it's nice that they used the API


00:29:39.780 --> 00:29:42.940
to get this data.


00:29:42.940 --> 00:29:43.940
Yeah.


00:29:43.940 --> 00:29:44.940
>> Yeah.


00:29:44.940 --> 00:29:49.660
You get quite a bit of data here.


00:29:49.660 --> 00:29:56.060
You've got like the player, their team, their age, their total number of points scored.


00:29:56.060 --> 00:30:01.660
Yeah, a lot of stuff you can do to sort of compare them.


00:30:01.660 --> 00:30:02.660
And yeah, it's great.


00:30:02.660 --> 00:30:03.660
>> Yeah.


00:30:03.660 --> 00:30:08.420
So if you're into basketball, I think it's a great start.


00:30:08.420 --> 00:30:12.060
It's also quite actively maintained.


00:30:12.060 --> 00:30:19.580
That's also one of the things that I intentionally mentioned on the list, because some packages


00:30:19.580 --> 00:30:22.820
are not really maintained well.


00:30:22.820 --> 00:30:27.460
And yeah, I think it's a benefit.


00:30:27.460 --> 00:30:28.460
Yeah.


00:30:28.460 --> 00:30:32.980
One of the things in the list that you call out is the number of contributors, the latest


00:30:32.980 --> 00:30:36.600
version, when the last commit was to the package.


00:30:36.600 --> 00:30:38.180
That's pretty cool.


00:30:38.180 --> 00:30:39.180
Yeah.


00:30:39.180 --> 00:30:43.900
In the beginning, I thought, well, maybe I can just manually update the list.


00:30:43.900 --> 00:30:54.940
But then I decided, well, I think data engineering is fun. Let's find a way to


00:30:54.940 --> 00:31:03.260
automatically fetch the data and update it. And also the license is pretty important


00:31:04.540 --> 00:31:11.100
to show it here and also last commit to see how actively it's maintained the latest version and


00:31:11.100 --> 00:31:18.300
also the contributors because I think it's good that some packages have some more contributors that


00:31:18.300 --> 00:31:25.900
you... Sure the difference between a package with one contributor and one with 30 contributors


00:31:25.900 --> 00:31:34.300
that's a big difference. Yeah I think it's also good for people to see if there's


00:31:34.300 --> 00:31:36.500
as a package with just a single contributor


00:31:36.500 --> 00:31:40.260
that might give an opportunity to contribute to it


00:31:40.260 --> 00:31:41.420
or work together.


00:31:41.420 --> 00:31:45.820
So, PySpot would like to encourage people


00:31:45.820 --> 00:31:49.100
to get involved in those projects.


00:31:49.100 --> 00:31:51.580
- Okay, yeah, that's a good idea.


00:31:51.580 --> 00:31:53.840
- So, yeah, that could help out here.


00:31:53.840 --> 00:31:56.940
- Yeah, and each one of these packages,


00:31:56.940 --> 00:31:59.180
you can go in and open the details here,


00:31:59.180 --> 00:32:01.300
and it gives you a little bit more information.


00:32:01.300 --> 00:32:03.920
Like, for example, it actually lists the contributors


00:32:03.920 --> 00:32:05.560
and links to their GitHub profiles


00:32:05.560 --> 00:32:10.560
and their website and the GitHub page and IPI and so on.


00:32:10.560 --> 00:32:14.880
- Yeah, and also you can look,


00:32:14.880 --> 00:32:17.680
click on one of the contributes


00:32:17.680 --> 00:32:20.240
and see what other packages they built.


00:32:20.240 --> 00:32:21.080
- Oh, really?


00:32:21.080 --> 00:32:24.320
Okay, so like if I click on this one,


00:32:24.320 --> 00:32:25.160
yeah, they've done this one.


00:32:25.160 --> 00:32:26.680
- Well, this one, just a single one.


00:32:26.680 --> 00:32:27.520
- Yeah, I just come up with,


00:32:27.520 --> 00:32:28.920
they might have worked on multiple.


00:32:28.920 --> 00:32:30.760
I know Dependapod's worked on a few.


00:32:30.760 --> 00:32:32.000
(both laughing)


00:32:32.000 --> 00:32:34.120
- Yeah, that's a really nice contributor.


00:32:34.120 --> 00:32:35.120
Yeah, yeah, yeah.


00:32:35.120 --> 00:32:36.500
- Yeah, yeah, yeah.


00:32:36.500 --> 00:32:39.840
Absolutely prolific open source contributor.


00:32:39.840 --> 00:32:40.680
- Yeah.


00:32:40.680 --> 00:32:41.500
- Works on my project too.


00:32:41.500 --> 00:32:42.800
(laughing)


00:32:42.800 --> 00:32:44.480
Yeah, I didn't realize you could actually see


00:32:44.480 --> 00:32:46.680
all the projects that PySport knows about


00:32:46.680 --> 00:32:48.520
that that particular user works on.


00:32:48.520 --> 00:32:50.920
That's a cool, cool aspect of it.


00:32:50.920 --> 00:32:54.680
- Yeah, so I spent quite some time on fetching all the data


00:32:54.680 --> 00:32:56.320
and trying to combine it.


00:32:56.320 --> 00:33:00.160
Also fetching data from Py and also do the similar


00:33:00.160 --> 00:33:02.460
for the R packages.


00:33:02.460 --> 00:33:08.200
Yeah, and seeing how to get all available data


00:33:08.200 --> 00:33:10.360
on one place.


00:33:10.360 --> 00:33:14.480
It's also tries to fetch images or screenshots


00:33:14.480 --> 00:33:16.560
from the read me's of the report stories


00:33:16.560 --> 00:33:18.000
that works for some.


00:33:18.000 --> 00:33:19.120
- Oh yeah, that's nice.


00:33:19.120 --> 00:33:21.840
Screenshots can be very helpful.


00:33:21.840 --> 00:33:23.700
Less important on the scrapers,


00:33:23.700 --> 00:33:26.720
more on the visualizers probably still.


00:33:26.720 --> 00:33:28.560
- Yeah, yeah, definitely.


00:33:28.560 --> 00:33:31.960
What is opensource.pysport.org written in?


00:33:31.960 --> 00:33:39.280
- It's written in React using Next.js.


00:33:39.280 --> 00:33:43.740
So it was also quite an adventure for me


00:33:43.740 --> 00:33:46.060
because it's the first application


00:33:46.060 --> 00:33:49.960
that might also explain why it's still a bit slow on loading


00:33:49.960 --> 00:33:54.960
because I didn't really dive into how to make it faster.


00:33:54.960 --> 00:33:57.480
It should still win,


00:33:57.480 --> 00:34:02.480
but in the backend it's Python, it's using Luigi.


00:34:02.480 --> 00:34:05.440
- Okay.


00:34:05.440 --> 00:34:09.440
- For, that's, I still think it's a pretty interesting tool


00:34:09.440 --> 00:34:13.360
because it's really simple to set up


00:34:13.360 --> 00:34:18.360
like orchestration of some tasks.


00:34:18.360 --> 00:34:19.640
And--


00:34:19.640 --> 00:34:21.080
- Right, like the daily scraping,


00:34:21.080 --> 00:34:22.840
the updating of the packages and that kind of stuff.


00:34:22.840 --> 00:34:24.000
- Yeah, yeah.


00:34:24.000 --> 00:34:24.840
- Okay.


00:34:24.840 --> 00:34:28.680
And there's a GitHub action that runs on a daily basis


00:34:28.680 --> 00:34:31.040
and then fetches all the data and updates


00:34:31.040 --> 00:34:33.680
and commits it in a different branch.


00:34:33.680 --> 00:34:38.580
And that one gets deployed to Verso, I believe.


00:34:38.580 --> 00:34:42.040
- Okay, very interesting.


00:34:42.040 --> 00:34:44.800
- But if you're interested in the source,


00:34:44.800 --> 00:34:48.880
you can also, it's also open source.


00:34:48.880 --> 00:34:50.800
- Okay, great.


00:34:51.680 --> 00:34:56.480
So Piebald for NBA, we have the Hockey Scraper,


00:34:56.480 --> 00:35:00.920
which is for scraping NHL play-by-play and shift data


00:35:00.920 --> 00:35:02.280
with six contributors.


00:35:02.280 --> 00:35:03.580
That's pretty interesting.


00:35:03.580 --> 00:35:08.920
- Yeah, so I think what you'll see on the filter list


00:35:08.920 --> 00:35:13.920
for every sport as a pixel for the NHL, for ice hockey,


00:35:17.040 --> 00:35:22.040
gets a little bit less maintained, I think.


00:35:22.040 --> 00:35:29.400
But I have to, I'm not really sure if it still works


00:35:29.400 --> 00:35:33.240
because with those scrapers, it can work today


00:35:33.240 --> 00:35:34.840
and not tomorrow.


00:35:34.840 --> 00:35:36.280
- Yeah, as soon as the,


00:35:36.280 --> 00:35:38.660
and it doesn't even necessarily mean


00:35:38.660 --> 00:35:41.080
that they were intentionally blocked, right?


00:35:41.080 --> 00:35:43.560
It could just be, hey, we've redesigned our site.


00:35:43.560 --> 00:35:44.560
Doesn't that look awesome?


00:35:44.560 --> 00:35:46.080
You're like, yeah, the CSS selectors


00:35:46.080 --> 00:35:51.920
longer pull up the thing. So yeah, yeah. So that's also on the scraping part. If it's


00:35:51.920 --> 00:36:00.400
last commit is like a while ago. Yeah, it might. It could be broken. Maybe not. Yeah, sure.


00:36:00.400 --> 00:36:06.960
All right. Let's see some more. It is, I think, in the stats bomb API, there's an official


00:36:06.960 --> 00:36:14.240
package. It's also cool that stats bomb provides an open source package for accessing their data.


00:36:15.120 --> 00:36:19.520
Yeah, what is Statsbomb? I see that showing up in many places on these different packages.


00:36:19.520 --> 00:36:29.360
Yes, Statsbomb is, I think, one of the leading providers of event data in football,


00:36:29.360 --> 00:36:38.000
and I think in both football and soccer and in football. So they provide event data, so


00:36:38.000 --> 00:36:44.240
everything that happens on the pitch, like passes, dribbles, interceptions, everything.


00:36:44.240 --> 00:36:49.240
They are also one of the providers of the open data sets.


00:36:49.240 --> 00:36:54.800
- Okay, yeah, free data selection, that's cool.


00:36:54.800 --> 00:36:56.680
- Yeah.


00:36:56.680 --> 00:36:59.380
- They claim themselves as a data champions.


00:36:59.380 --> 00:37:05.520
- Yeah, I think that data is pretty good.


00:37:05.520 --> 00:37:10.520
I'm thinking also one of the best in the market right now.


00:37:10.840 --> 00:37:16.360
But okay, at least that's what I heard from some users that


00:37:16.360 --> 00:37:22.440
are sure to even have courses, modern scouting and data driven


00:37:22.440 --> 00:37:26.480
recruitment. Okay, that's, that's kind of interesting, isn't


00:37:26.480 --> 00:37:31.720
it? Yeah, you also have to figure out how to apply your


00:37:31.720 --> 00:37:39.920
data science in your, your job. So how to use it and how to use


00:37:39.920 --> 00:37:44.000
data for scouting purposes. Yeah. Yeah. If you work in professional,


00:37:44.000 --> 00:37:49.320
a professional sports organization or even college sports, the U S at least,


00:37:49.320 --> 00:37:52.960
there's a lot of recruiting people from lower levels.


00:37:52.960 --> 00:37:59.160
Yeah, that's, I think that that happens in all sports, but,


00:37:59.160 --> 00:38:02.520
I think the data is really helping to,


00:38:02.520 --> 00:38:08.000
to make the number of players that you have to watch,


00:38:08.040 --> 00:38:10.600
from the footage a lot less.


00:38:10.600 --> 00:38:13.800
So if you can already, yeah, make a short list


00:38:13.800 --> 00:38:16.160
instead of watching 15,000 players,


00:38:16.160 --> 00:38:18.000
then yeah, it's really convenient.


00:38:18.000 --> 00:38:22.320
- Or maybe you're looking for a particular asset


00:38:22.320 --> 00:38:25.800
or a particular part of the play


00:38:25.800 --> 00:38:28.240
that a player is good at, right?


00:38:28.240 --> 00:38:31.960
You're looking for a quarterback for a football team


00:38:31.960 --> 00:38:34.360
that is especially good at running the ball


00:38:34.360 --> 00:38:35.760
in addition to just throwing it, right?


00:38:35.760 --> 00:38:38.920
you could ask the data for that


00:38:38.920 --> 00:38:41.780
and really narrow in quite quickly, I imagine.


00:38:41.780 --> 00:38:45.680
- Yeah, and then you have to work with the data,


00:38:45.680 --> 00:38:48.260
figuring out how to extract it,


00:38:48.260 --> 00:38:49.920
because maybe that single metric


00:38:49.920 --> 00:38:51.000
that's really important for you


00:38:51.000 --> 00:38:55.260
is not available in the original data set.


00:38:55.260 --> 00:38:57.640
So then you have to figure out how to work with the data


00:38:57.640 --> 00:39:02.640
and get those metrics out of the raw data.


00:39:02.640 --> 00:39:03.920
- Right, right, yeah.


00:39:03.920 --> 00:39:05.920
maybe something calculated or inferred.


00:39:05.920 --> 00:39:10.920
Yes. That's also one of the things that happens in soccer


00:39:10.920 --> 00:39:14.520
based on the tracking data, but it will probably happen


00:39:14.520 --> 00:39:16.520
also in football and all the other sports


00:39:16.520 --> 00:39:20.360
that clubs will define their own metrics


00:39:20.360 --> 00:39:23.560
based on, for example, tracking data and use that


00:39:23.560 --> 00:39:30.400
to figure out what players match their own play the most.


00:39:30.400 --> 00:39:33.560
Right. Cool.


00:39:33.560 --> 00:39:35.880
>> Okay. So yeah, as you can see,


00:39:35.880 --> 00:39:38.160
there's a bunch of stats bombs here.


00:39:38.160 --> 00:39:41.660
Pi Baseball, an MLB game,


00:39:41.660 --> 00:39:45.040
seemed to be a couple of things around baseball data.


00:39:45.040 --> 00:39:53.760
Baseball is one of those games that was almost


00:39:53.760 --> 00:39:58.280
created by a statistician just so they could come up with stats.


00:39:58.280 --> 00:40:00.240
There's so many stats.


00:40:00.240 --> 00:40:02.520
People get averages,


00:40:02.520 --> 00:40:03.840
What kind of hitter are they?


00:40:03.840 --> 00:40:06.320
Well, they're like a 0.3.


00:40:06.320 --> 00:40:07.440
They're a 300 hitter.


00:40:07.440 --> 00:40:09.000
What are they?


00:40:09.000 --> 00:40:11.200
30% and all that.


00:40:11.200 --> 00:40:13.040
And I'm not a huge fan of baseball.


00:40:13.040 --> 00:40:15.280
I find it kind of a slow game.


00:40:15.280 --> 00:40:17.680
It's kind of fun to play, but to watch it, it's like--


00:40:17.680 --> 00:40:18.320
same as golf.


00:40:18.320 --> 00:40:20.840
I don't watch those things.


00:40:20.840 --> 00:40:22.720
I'm sure they're fun to play, but it's just


00:40:22.720 --> 00:40:26.080
like in terms of stats, these kind of games,


00:40:26.080 --> 00:40:27.560
there's probably a ton of stats here


00:40:27.560 --> 00:40:30.040
because it's all about stats there.


00:40:30.040 --> 00:40:37.520
I also believe that the baseball data science departments are one of the biggest departments


00:40:37.520 --> 00:40:39.920
over all sports.


00:40:39.920 --> 00:40:43.700
And maybe, but I'm not sure about it.


00:40:43.700 --> 00:40:48.640
You can also make a lot of impact there.


00:40:48.640 --> 00:40:56.300
Maybe because also in all the sports, for example, soccer, a lot of things as impact


00:40:56.300 --> 00:40:59.300
on the eventual outcome.


00:40:59.300 --> 00:41:04.300
And it's also a discussion if all data is available


00:41:04.300 --> 00:41:09.420
to, yeah, to know what actually has the most impact.


00:41:09.420 --> 00:41:14.740
So that's also one of the discussions


00:41:14.740 --> 00:41:16.760
within the soccer analyst community.


00:41:16.760 --> 00:41:22.660
- Yeah, for both of these, Pi Baseball and MLB game,


00:41:22.660 --> 00:41:25.740
you can see from your Luigi automation.


00:41:25.740 --> 00:41:26.740
[LAUGHTER]


00:41:26.740 --> 00:41:28.180
>> They're both quite--


00:41:28.180 --> 00:41:30.980
well, the MLB game is not particularly up to date.


00:41:30.980 --> 00:41:32.980
I guess the Pi baseball one is more up to date.


00:41:32.980 --> 00:41:37.380
But 13 contributors, 30 contributors.


00:41:37.380 --> 00:41:38.540
>> That's quite a lot.


00:41:38.540 --> 00:41:39.420
>> That's quite a lot.


00:41:39.420 --> 00:41:44.580
And the Pi baseball was updated this month.


00:41:44.580 --> 00:41:47.220
But when I saw these, I'm like, oh, these are kind of similar.


00:41:47.220 --> 00:41:49.780
And then I look at your page here,


00:41:49.780 --> 00:41:53.820
and I see, oh, well, Pi baseball is way more up to date,


00:41:53.820 --> 00:41:54.320
modern.


00:41:54.320 --> 00:41:56.200
you should check that out first, right?


00:41:56.200 --> 00:41:59.480
That's the kind of value you get for having that info.


00:41:59.480 --> 00:42:00.480
- Yeah, yeah.


00:42:00.480 --> 00:42:04.000
Yeah, that's also the intention


00:42:04.000 --> 00:42:09.000
that you have a quick overview of, yeah,


00:42:09.000 --> 00:42:12.960
how it's maintained it and yeah.


00:42:12.960 --> 00:42:15.440
- Yeah, and that one also goes against the API.


00:42:15.440 --> 00:42:18.280
So let's see, a couple more.


00:42:18.280 --> 00:42:22.360
I guess it's worth giving a shout out to the NFL FastPay.


00:42:22.360 --> 00:42:25.440
that NFL's got a lot of data as well.


00:42:25.440 --> 00:42:25.920
What else?


00:42:25.920 --> 00:42:27.600
There's some college baseball.


00:42:27.600 --> 00:42:30.920
Here's one that I think is that shows up across a lot of the different


00:42:30.920 --> 00:42:35.000
categories, cause it seems to do a lot, which is fast F one.


00:42:35.000 --> 00:42:35.680
Have you seen that?


00:42:35.680 --> 00:42:36.240
Have you played with this?


00:42:36.240 --> 00:42:36.520
Any.


00:42:36.520 --> 00:42:39.040
I must admit, I have not played.


00:42:39.040 --> 00:42:44.280
Yeah, it's, it's, I should dig into it because, quite some


00:42:44.280 --> 00:42:48.880
contributors, and I think it's really interesting to, to also


00:42:48.880 --> 00:42:53.880
to see the motor sports or cycling or more those sports


00:42:53.880 --> 00:42:56.620
to see what they are doing, how they are doing it.


00:42:56.620 --> 00:42:59.200
- Yeah, I noticed looking through here


00:42:59.200 --> 00:43:00.880
that there's not a lot of motor sports


00:43:00.880 --> 00:43:02.720
compared to the other sports.


00:43:02.720 --> 00:43:04.840
And so people are, if you're out there,


00:43:04.840 --> 00:43:07.200
like if you're an IndyCar or if you're a motocross


00:43:07.200 --> 00:43:09.480
or somewhere like, and you've got a package,


00:43:09.480 --> 00:43:10.680
just shoot it over to these guys


00:43:10.680 --> 00:43:11.680
and have them put it in the list.


00:43:11.680 --> 00:43:12.520
That'd be cool.


00:43:12.520 --> 00:43:14.460
Yeah, the Fast F1, they've got a page here


00:43:14.460 --> 00:43:15.720
that has a bunch of things.


00:43:15.720 --> 00:43:20.040
It has access to timing data, telemetry, session results.


00:43:20.040 --> 00:43:26.760
And all the data is provided in an extended Panda data,


00:43:26.760 --> 00:43:30.320
Panda's DataFrame format, which is pretty cool, right?


00:43:30.320 --> 00:43:34.080
Integration with Matplotlib.


00:43:34.080 --> 00:43:36.080
There's an examples gallery too.


00:43:36.080 --> 00:43:38.160
You come over here and you can see it has things


00:43:38.160 --> 00:43:41.400
like position changes during the race.


00:43:41.400 --> 00:43:44.560
So this, it'll say, if you go up here,


00:43:44.560 --> 00:43:47.520
It'll do things like, you gotta go farm it,


00:43:47.520 --> 00:43:52.160
you know, go to the, get season 23, race one,


00:43:52.160 --> 00:43:54.960
or for race, I guess, rather than practice or qualifying.


00:43:54.960 --> 00:43:57.280
And that's Bahrain.


00:43:57.280 --> 00:44:00.060
And so then here's, you know, it has all the drivers,


00:44:00.060 --> 00:44:01.960
their time throughout the race, their position.


00:44:01.960 --> 00:44:03.440
You can see probably pit stop.


00:44:03.440 --> 00:44:05.480
There's a lot of cool stuff you can see.


00:44:05.480 --> 00:44:08.160
- Yeah, it looks really nice.


00:44:08.160 --> 00:44:10.120
And also with those examples,


00:44:10.120 --> 00:44:13.880
I think that's really helpful to get people started


00:44:13.880 --> 00:44:16.300
with those packages.


00:44:16.300 --> 00:44:18.400
- Yeah, it's not exactly a Jupyter notebook.


00:44:18.400 --> 00:44:20.980
It's the HTML of a Jupyter notebook,


00:44:20.980 --> 00:44:23.680
but it's still exactly what you need, right?


00:44:23.680 --> 00:44:26.240
- But I think you can even download it.


00:44:26.240 --> 00:44:28.740
- You can download it right there, absolutely, yeah.


00:44:28.740 --> 00:44:33.140
Yeah, and apparently it took two and a half seconds


00:44:33.140 --> 00:44:34.640
to generate the script.


00:44:34.640 --> 00:44:38.300
Let's see, you even got cool visualizations


00:44:38.300 --> 00:44:41.820
like on the track, color it by speed


00:44:41.820 --> 00:44:43.660
around the tracks of the story.


00:44:43.660 --> 00:44:45.300
There's a lot of cool data here.


00:44:45.300 --> 00:44:47.300
- Yeah, yeah.


00:44:47.300 --> 00:44:50.540
Yeah, I'm not really sure why I haven't seen this one


00:44:50.540 --> 00:44:55.540
before, but yeah, it looks really, really cool.


00:44:55.540 --> 00:44:57.740
- Yeah, when I looked, I looked around a couple


00:44:57.740 --> 00:44:59.020
of the different packages and this one,


00:44:59.020 --> 00:45:01.020
like the documentation and examples and stuff


00:45:01.020 --> 00:45:02.540
seem super good.


00:45:02.540 --> 00:45:04.200
Okay, so that's the scrapers.


00:45:04.200 --> 00:45:07.600
There's many more, there's plenty more there.


00:45:07.600 --> 00:45:12.420
Another one, models, calculators,


00:45:12.420 --> 00:45:14.420
maybe take us through some of the ones


00:45:14.420 --> 00:45:15.860
that stand out in this category.


00:45:15.860 --> 00:45:18.180
Like for example, there's Lori's code


00:45:18.180 --> 00:45:19.540
for MetroCode tracking data.


00:45:19.540 --> 00:45:21.180
I love it that it's just, it's Lori's code.


00:45:21.180 --> 00:45:22.020
Good job, Lori.


00:45:22.020 --> 00:45:23.540
(laughing)


00:45:23.540 --> 00:45:24.380
- Yeah.


00:45:24.380 --> 00:45:29.620
Yeah, so this is mostly about how to also do all kinds


00:45:29.620 --> 00:45:33.240
of modeling on top of it, do predictions on top of data.


00:45:33.240 --> 00:45:36.540
You know, one of the patches


00:45:36.540 --> 00:45:40.260
that I think is pretty interesting is the soccer action.


00:45:40.260 --> 00:45:42.060
Yeah, of course, again, it's soccer.


00:45:42.060 --> 00:45:48.140
Soccer actually isn't, oh, it's not on the list.


00:45:48.140 --> 00:45:48.980
This is also--


00:45:48.980 --> 00:45:52.240
- It might, it's only Python, possibly.


00:45:52.240 --> 00:45:55.820
But for example, they have soccer XG,


00:45:55.820 --> 00:45:58.300
which is, what is that, XG boost model?


00:45:58.300 --> 00:46:01.540
- That's the expected goals.


00:46:01.540 --> 00:46:06.540
So what's the expected value for a certain shot,


00:46:06.540 --> 00:46:09.780
if it should go in or not.


00:46:09.780 --> 00:46:13.860
So it is also based on a position on the page,


00:46:13.860 --> 00:46:19.860
how many players are between the player with the ball


00:46:19.860 --> 00:46:21.380
and the goal.


00:46:21.380 --> 00:46:26.140
So you can use it to determine,


00:46:26.140 --> 00:46:31.260
yeah, how, if a player should score a goal


00:46:31.260 --> 00:46:33.940
and how many goals he should make from it.


00:46:33.940 --> 00:46:35.900
- Yeah, I think this is actually one


00:46:35.900 --> 00:46:38.420
of the really interesting aspects is the model


00:46:38.420 --> 00:46:41.980
and calculate it, the prediction side is pretty cool.


00:46:41.980 --> 00:46:46.500
- And I think there's quite some work to do for PiSport


00:46:46.500 --> 00:46:50.820
because for example, the expected goals,


00:46:50.820 --> 00:46:54.220
there's also one of the things that I've seen in ice hockey


00:46:54.220 --> 00:46:58.140
and also in other sports where you have to score


00:46:58.140 --> 00:46:59.180
within a goal.


00:46:59.180 --> 00:47:03.460
And I think it would be cool to find a way


00:47:03.460 --> 00:47:06.020
to abstract it over all sports.


00:47:07.380 --> 00:47:15.980
Yeah, because it is kind of the same idea, probably different datasets, but, right, like


00:47:15.980 --> 00:47:22.060
scoring in hockey and scoring in soccer is from a structural perspective of the data


00:47:22.060 --> 00:47:26.380
is kind of the same thing, even though it's really, you know, quite different in size


00:47:26.380 --> 00:47:29.620
of the goal and how easy it is and all that.


00:47:29.620 --> 00:47:34.380
But I think we can still learn from the other sports and see how they did it.


00:47:34.380 --> 00:47:38.420
- Yeah, trainable model, but on different data, right?


00:47:38.420 --> 00:47:40.460
But same type of model potentially.


00:47:40.460 --> 00:47:43.580
- Yeah, maybe some different features, but yeah.


00:47:43.580 --> 00:47:47.420
- Yeah, so the next category is I/O


00:47:47.420 --> 00:47:50.420
and that obviously stats bomb is in here, right?


00:47:50.420 --> 00:47:52.500
Python package to parse stats bombs,


00:47:52.500 --> 00:47:54.820
JSON data to CSV, which is cool.


00:47:54.820 --> 00:47:57.900
Some on soccer, the spattle format,


00:47:57.900 --> 00:47:59.600
which I have no idea what that is.


00:47:59.600 --> 00:48:02.500
- Yeah, that's also one of the things


00:48:02.500 --> 00:48:07.500
they built to make like atomic data format


00:48:07.500 --> 00:48:13.500
that's also kind of standardized.


00:48:13.500 --> 00:48:16.300
So there's some overlap between Soccer Action and Kloppy.


00:48:16.300 --> 00:48:22.180
And I think they mostly focused on


00:48:22.180 --> 00:48:24.980
how to eventually work with the data.


00:48:24.980 --> 00:48:29.020
So calculate also the expected threat


00:48:29.020 --> 00:48:33.540
and also like a contribution model.


00:48:33.540 --> 00:48:39.640
So for every action towards a goal, I was there.


00:48:39.640 --> 00:48:41.840
- Yeah, right.


00:48:41.840 --> 00:48:44.140
Okay, so maybe there's a takeaway and then a pass


00:48:44.140 --> 00:48:45.880
and a pass and then a score.


00:48:45.880 --> 00:48:48.040
Like all of those people should somehow get credit


00:48:48.040 --> 00:48:49.360
for that potentially, right?


00:48:49.360 --> 00:48:50.440
- Yeah, yeah, yeah.


00:48:50.440 --> 00:48:51.660
- Okay, makes sense.


00:48:51.660 --> 00:48:57.140
- But they also build the way to load the data.


00:48:57.140 --> 00:49:02.140
And yeah, we're currently also working together with them


00:49:02.140 --> 00:49:07.020
to see if we can make Kloppy to load the data


00:49:07.020 --> 00:49:10.340
and have the Kloppy package focus on loading it


00:49:10.340 --> 00:49:14.580
and standardizing it and then after soccer action using it.


00:49:14.580 --> 00:49:18.260
So see how the Lego blocks can work together.


00:49:18.260 --> 00:49:20.940
- Yeah, yeah, of course, absolutely.


00:49:20.940 --> 00:49:24.740
We have the NFLDB, a library to manage and update NFL data


00:49:24.740 --> 00:49:26.220
in a relational database.


00:49:26.220 --> 00:49:27.060
That's kind of cool.


00:49:27.060 --> 00:49:28.460
- Mm-hmm.


00:49:28.460 --> 00:49:29.300
- Yeah.


00:49:29.300 --> 00:49:30.120
All right, let's see.


00:49:30.120 --> 00:49:32.780
The next category is the visualization.


00:49:32.780 --> 00:49:34.780
I think probably the, excuse me,


00:49:34.780 --> 00:49:36.480
the most important part is probably


00:49:36.480 --> 00:49:37.900
the actual data acquisition,


00:49:37.900 --> 00:49:39.860
but the most desired part is probably


00:49:39.860 --> 00:49:42.020
the visualization, right?


00:49:42.020 --> 00:49:43.980
- Yeah, yeah, yeah.


00:49:43.980 --> 00:49:48.980
Yeah, I think also the data engineering part


00:49:48.980 --> 00:49:52.620
is not really, what do you call it, really sexy.


00:49:52.620 --> 00:49:54.220
I mean, no one sees it.


00:49:54.220 --> 00:50:02.380
output is a structured CSV or parquet file. So that's not really cool to show. But for example,


00:50:02.380 --> 00:50:10.060
yeah, the MPL soccer, I think it's a really, really nice package used by, I think every


00:50:10.060 --> 00:50:17.100
person in the soccer community. Yeah, there's a lot of contributors here. Yeah.


00:50:17.660 --> 00:50:28.460
Yeah, and the visualizations look really cool. They also have a huge list of examples.


00:50:28.460 --> 00:50:38.060
Okay. So all kind of, you can just copy and paste to create this. I love them. Yeah.


00:50:38.060 --> 00:50:42.220
Yeah, we'll actually come back to the pizza charts in just a moment, actually. But yeah,


00:50:42.220 --> 00:50:45.900
These are some good-looking visualizations here.


00:50:45.900 --> 00:50:50.860
Yeah, and I think the interesting thing about this package is that at some point,


00:50:50.860 --> 00:50:57.180
there were two packages that did similar things, and then they decided, well, we should just work


00:50:57.180 --> 00:51:03.100
together. And they spent quite some time on integrating those packages, and then there was


00:51:03.100 --> 00:51:10.700
one. And I think that's really cool to see that instead of competing, they decided to work together


00:51:10.700 --> 00:51:14.300
and make, I think, one of the most awesome packages


00:51:14.300 --> 00:51:15.900
for the soccer community.


00:51:15.900 --> 00:51:17.660
Yeah, it's really nice.


00:51:17.660 --> 00:51:19.220
It's really nice.


00:51:19.220 --> 00:51:22.900
There's a lot of soccer ones in here.


00:51:22.900 --> 00:51:26.780
There's also one for a PT plot for American football,


00:51:26.780 --> 00:51:29.460
although I don't understand what PT stands for.


00:51:29.460 --> 00:51:32.300
And then the fast Formula One is also in there.


00:51:32.300 --> 00:51:35.060
We already saw those pictures, but a lot of nice visualizations


00:51:35.060 --> 00:51:36.660
there.


00:51:36.660 --> 00:51:39.300
And is that it for all the categories?


00:51:39.300 --> 00:51:44.340
know then there's the open data. Yeah I think maybe when I look at this list


00:51:44.340 --> 00:51:47.860
are some missing.


00:51:47.860 --> 00:51:55.700
But yeah it's still a bit limited on what the data is available.


00:51:55.700 --> 00:52:03.620
And yeah that's something that we should work together also with leaks


00:52:03.620 --> 00:52:08.660
to see if there's a way to yeah to make some more data available.


00:52:08.660 --> 00:52:12.100
Yeah, they have it and they offer to publicly put it in the list, right?


00:52:12.100 --> 00:52:22.260
Yeah, when it's available, I would definitely add it. But there's already some interesting data,


00:52:22.260 --> 00:52:29.860
maybe a little bit smaller data sets, but you can definitely use it to start playing around with it.


00:52:30.900 --> 00:52:40.740
Cool. All right. So I think that kind of covers the list with the Python filter sort on.


00:52:40.740 --> 00:52:47.380
And then we wanted also to give a quick shout out to NFLverse, right? Because while not Python,


00:52:47.380 --> 00:52:53.060
is quite a series of packages that does cool stuff in the NFL for that data, right?


00:52:53.060 --> 00:52:59.380
Yeah. So it's not Python, it's for the R users. But I think what's really interesting there,


00:52:59.380 --> 00:53:07.300
what they did is they created quite some different packages, one for collecting the data,


00:53:07.300 --> 00:53:14.260
one for organizing it, one for reading the data, one for doing all kind of modeling, one for


00:53:14.260 --> 00:53:21.700
creating the visualizations and I think that's also an example for all the sports on how to


00:53:22.660 --> 00:53:27.700
make those packages available, making sure that everything fits together.


00:53:27.700 --> 00:53:33.860
Yeah, that's cool. It's under the NFL Virtual Organization, but a bunch of


00:53:33.860 --> 00:53:38.420
different projects. You talked about having the data and stuff that's not immediately


00:53:38.420 --> 00:53:44.500
obvious or predictable. You might need a higher level sort of thinking about it. And one of them


00:53:44.500 --> 00:53:50.340
that stands out here is the NFL Fourth, which studies fourth down decision data


00:53:51.540 --> 00:53:57.940
with the NFL version models, which is kind of cool because that's one of the big decisions that a


00:53:57.940 --> 00:54:03.140
coach makes and it can make the game or it can lose the game and there's a go no-go decision.


00:54:03.140 --> 00:54:10.260
It's not just well they went this far then they didn't make it. It's well it was the they had 30


00:54:10.260 --> 00:54:14.180
seconds left in the game and they had to do it or you know because otherwise they were just going


00:54:14.180 --> 00:54:19.620
to lose anyway. There's a lot of higher like sort of inference and higher level things you want to


00:54:19.620 --> 00:54:24.500
to bring into that rather than just 30% of the time they make it forth down, right?


00:54:24.500 --> 00:54:25.500
Yeah.


00:54:25.500 --> 00:54:26.500
Yeah.


00:54:26.500 --> 00:54:32.580
And this, I think also one of the reason they just build an entire package around it to


00:54:32.580 --> 00:54:33.580
work with it.


00:54:33.580 --> 00:54:34.580
Yeah.


00:54:34.580 --> 00:54:36.180
That's pretty interesting.


00:54:36.180 --> 00:54:40.460
Now before all the Python people say, I don't want to learn R, I don't care about R. It


00:54:40.460 --> 00:54:44.140
is also worth pointing out that you can call R from Python.


00:54:44.140 --> 00:54:49.380
I don't know how much of like the visualization stuff still works super well or anything like


00:54:49.380 --> 00:54:52.880
but you can use, what is it called?


00:54:52.880 --> 00:54:55.820
Rpy2.


00:54:55.820 --> 00:54:58.320
- Okay.


00:54:58.320 --> 00:55:00.840
- And you can end up, you just pass it in our file


00:55:00.840 --> 00:55:05.840
and then you start calling functions or whatever,


00:55:05.840 --> 00:55:09.060
get a function out of it and call that function.


00:55:09.060 --> 00:55:13.360
So it's worth, if you really, really wanna use


00:55:13.360 --> 00:55:16.720
some of these packages, maybe it's worth doing


00:55:16.720 --> 00:55:18.800
a quick little integration and then turn it


00:55:18.800 --> 00:55:20.260
into a data frame, pandas data frame


00:55:20.260 --> 00:55:22.000
and running with it or something.


00:55:22.000 --> 00:55:23.360
- Yeah.


00:55:23.360 --> 00:55:24.580
Yes, it looks interesting.


00:55:24.580 --> 00:55:27.080
It's definitely worth a try.


00:55:27.080 --> 00:55:30.280
- Yeah, it's nothing I've ever used,


00:55:30.280 --> 00:55:31.360
but I can see, you know,


00:55:31.360 --> 00:55:32.880
if you really care about NFL data


00:55:32.880 --> 00:55:33.840
and really care about Python,


00:55:33.840 --> 00:55:38.320
it might be worth giving those combos a look there.


00:55:38.320 --> 00:55:40.640
- But I think there is one package


00:55:40.640 --> 00:55:43.800
to work with their data from Python.


00:55:43.800 --> 00:55:45.200
So if you look at the list,


00:55:45.200 --> 00:55:47.680
there should be at least one.


00:55:48.680 --> 00:55:53.340
I think it's not on their website, on their GitHub page,


00:55:53.340 --> 00:55:54.860
but I think there's another one


00:55:54.860 --> 00:55:57.340
that integrates well with it.


00:55:57.340 --> 00:55:58.180
- Sure, right.


00:55:58.180 --> 00:55:59.160
Not under their organization,


00:55:59.160 --> 00:56:00.960
but maybe somebody else made.


00:56:00.960 --> 00:56:02.180
- Yeah.


00:56:02.180 --> 00:56:03.980
- That does, yeah, that's cool.


00:56:03.980 --> 00:56:04.880
Excellent.


00:56:04.880 --> 00:56:06.900
Maybe they use this integration.


00:56:06.900 --> 00:56:08.460
I'm not sure, I don't know.


00:56:08.460 --> 00:56:11.100
All right, and then the last thing I wanna talk about here


00:56:11.100 --> 00:56:13.180
is interesting on two levels.


00:56:13.180 --> 00:56:17.900
So you've got a playground.pysport.org,


00:56:17.900 --> 00:56:22.160
which is a hosted notebook to play with some examples,


00:56:22.160 --> 00:56:25.420
like in particular, Kloppy and MPL Soccer, right?


00:56:25.420 --> 00:56:31.960
- Yeah, so I think one of the issues or challenges


00:56:31.960 --> 00:56:36.320
for a lot of people also working within the bigger clubs


00:56:36.320 --> 00:56:40.980
is that they don't always have a background in programming.


00:56:40.980 --> 00:56:43.820
So often they start as a video analyst


00:56:43.820 --> 00:56:46.120
or working as a performance analyst,


00:56:46.120 --> 00:56:47.520
and then they think, well, there's data,


00:56:47.520 --> 00:56:54.240
want to work with it and if you need to set up your Python environment for the first time it can


00:56:54.240 --> 00:57:04.560
be a bit overwhelming. So that's why I thought well there is JupyterLite which is a very cool


00:57:04.560 --> 00:57:13.920
project based on Pyrodite. Let's see if you can use it and it is just a start with the


00:57:13.920 --> 00:57:15.960
with the Kloppy and the MPL soccer package,


00:57:15.960 --> 00:57:20.820
I just fetched the notebook from there,


00:57:20.820 --> 00:57:25.780
from my gallery and integrated into this one,


00:57:25.780 --> 00:57:27.660
into the playground.


00:57:27.660 --> 00:57:31.480
And you can just start playing around with it.


00:57:31.480 --> 00:57:34.180
- Yeah, and so here's a proper,


00:57:34.180 --> 00:57:39.180
a proper Jupyter notebook using all of their libraries.


00:57:39.180 --> 00:57:41.480
And so, but what's awesome about this,


00:57:41.480 --> 00:57:45.560
As you said, based on Piledead, I'm not sure necessarily,


00:57:45.560 --> 00:57:49.160
actually stuck in people's minds,


00:57:49.160 --> 00:57:54.160
like this is running in WebAssembly on our front end, right?


00:57:54.160 --> 00:57:56.160
Which is pretty epic.


00:57:56.160 --> 00:58:00.480
- Yeah, it makes it really convenient for people


00:58:00.480 --> 00:58:02.480
to just start playing around with it


00:58:02.480 --> 00:58:08.140
without installing byte and working with virtual environments.


00:58:09.320 --> 00:58:10.160
- Yeah, you know how it works.


00:58:10.160 --> 00:58:11.500
- It makes it easy for you to host it.


00:58:11.500 --> 00:58:13.380
Yeah, it makes it super easy for you to host it


00:58:13.380 --> 00:58:16.140
because all you're doing is serving up static files.


00:58:16.140 --> 00:58:19.460
You're not hosting, you're not running a Kubernetes cluster


00:58:19.460 --> 00:58:20.620
or anything like that, right?


00:58:20.620 --> 00:58:23.500
Trying to prevent abuse of it and so on.


00:58:23.500 --> 00:58:28.500
- Yeah, so yeah, multiple sites make it good to,


00:58:28.500 --> 00:58:33.860
for me and for the people using it, yeah.


00:58:33.860 --> 00:58:35.180
- Yeah, for sure.


00:58:36.060 --> 00:58:39.620
And it even does that wild, what's it called?


00:58:39.620 --> 00:58:43.780
Pizza plot, that kind of style of plot


00:58:43.780 --> 00:58:44.620
that we're looking at.


00:58:44.620 --> 00:58:46.900
And it runs fast and great.


00:58:46.900 --> 00:58:48.660
Yeah, this is really, really nice.


00:58:48.660 --> 00:58:51.900
Yeah, are you happy with JupyterLite?


00:58:51.900 --> 00:58:58.260
- Yeah, there was some issues with it,


00:58:58.260 --> 00:59:03.180
especially around working with fetching data


00:59:03.180 --> 00:59:07.340
because some of these try to fetch the open data


00:59:07.340 --> 00:59:10.340
from Statsbomb or also some forms and stuff like that.


00:59:10.340 --> 00:59:16.100
Yeah, so we had to work around it.


00:59:16.100 --> 00:59:19.980
And it is also what you see on top of here


00:59:19.980 --> 00:59:23.740
is the patching of the request library


00:59:23.740 --> 00:59:25.660
to make it work in Jupyter Lite.


00:59:25.660 --> 00:59:29.120
- Yeah.


00:59:30.980 --> 00:59:33.420
I think it's better to have a working version


00:59:33.420 --> 00:59:38.420
than not patching it.


00:59:38.420 --> 00:59:41.020
- Yeah, no, I think it's great.


00:59:41.020 --> 00:59:43.020
And then everything that uses requests


00:59:43.020 --> 00:59:44.780
can just do its thing.


00:59:44.780 --> 00:59:46.140
Yeah, this is really cool.


00:59:46.140 --> 00:59:47.220
When I saw that you had this, I thought,


00:59:47.220 --> 00:59:49.740
oh, this is clever that it's based on JupyterLite


00:59:49.740 --> 00:59:50.900
and it's really nice.


00:59:50.900 --> 00:59:52.660
- Yeah.


00:59:52.660 --> 00:59:56.220
- And people can check that out.


00:59:56.220 --> 00:59:58.500
Maybe people out there listening


00:59:58.500 --> 01:00:00.740
maintain some of these packages and have notebooks.


01:00:00.740 --> 01:00:02.100
Like if they get them working here,


01:00:02.100 --> 01:00:05.180
could they submit them to you and have them?


01:00:05.180 --> 01:00:07.500
- Yeah, also the entire playground


01:00:07.500 --> 01:00:12.500
is part of the PySports organization on GitHub.


01:00:12.500 --> 01:00:16.020
You can just watch, see the report story


01:00:16.020 --> 01:00:17.860
and make a pull request.


01:00:17.860 --> 01:00:22.060
And I will just review it and merge it


01:00:22.060 --> 01:00:24.700
and then it will be available right here.


01:00:24.700 --> 01:00:26.020
- Yeah, that's awesome.


01:00:26.020 --> 01:00:28.340
- So we're really happy for more packages here,


01:00:28.340 --> 01:00:29.180
more examples.


01:00:30.220 --> 01:00:31.860
Yeah, more examples would be very welcome.


01:00:31.860 --> 01:00:33.580
Excellent.


01:00:33.580 --> 01:00:34.300
All right.


01:00:34.300 --> 01:00:37.940
Well, I think we're getting pretty much short on time


01:00:37.940 --> 01:00:40.340
for talking about sports analytics,


01:00:40.340 --> 01:00:41.980
but really, really good work there.


01:00:41.980 --> 01:00:44.620
Now, before you get out of here, I have the final two questions


01:00:44.620 --> 01:00:45.380
for you.


01:00:45.380 --> 01:00:46.740
I always ask.


01:00:46.740 --> 01:00:49.300
Notable PyPI package, something you've come across,


01:00:49.300 --> 01:00:50.980
like, oh, this library is awesome.


01:00:50.980 --> 01:00:52.100
People should check it out.


01:00:52.100 --> 01:00:54.940
I mean, it's kind of the whole topic of this show.


01:00:54.940 --> 01:00:57.140
So we talked about maybe 100--


01:00:57.140 --> 01:00:59.300
we didn't mention them all, but went through a list


01:00:59.300 --> 01:01:01.160
of a hundred different Python packages,


01:01:01.160 --> 01:01:02.660
but something you want to give a shout out to


01:01:02.660 --> 01:01:04.300
that you think is cool out there?


01:01:04.300 --> 01:01:07.260
- Yeah, I'm not really sure if the entire Python world


01:01:07.260 --> 01:01:12.260
already knows it, but on the last PySport meetup,


01:01:12.260 --> 01:01:15.460
I made an example using DukeDB,


01:01:15.460 --> 01:01:18.740
and that was something that people didn't know about it,


01:01:18.740 --> 01:01:23.620
especially with integration, with the pandas data frames,


01:01:23.620 --> 01:01:26.180
that you just build a data frame


01:01:26.180 --> 01:01:28.560
and run queries directly on top of it.


01:01:28.560 --> 01:01:32.140
- Yeah, I was-- - I heard of DuckDB,


01:01:32.140 --> 01:01:35.400
but I didn't realize the pandas kind of direct integration


01:01:35.400 --> 01:01:38.860
also has direct parquet query, interesting, okay.


01:01:38.860 --> 01:01:43.280
- Yeah, and that makes it quite easy


01:01:43.280 --> 01:01:46.520
to also play around with SQL queries.


01:01:46.520 --> 01:01:50.200
And I was very happy that I had a presentation


01:01:50.200 --> 01:01:53.640
on last PyData Eindhoven conference.


01:01:53.640 --> 01:01:56.880
Yeah, I think it's a package that,


01:01:57.720 --> 01:02:02.040
No, well, not everyone, but it's really worth checking out


01:02:02.040 --> 01:02:06.800
because it can make your life easier.


01:02:06.800 --> 01:02:07.640
- Sure.


01:02:07.640 --> 01:02:09.440
- I think it's just a Swiss army knife


01:02:09.440 --> 01:02:12.120
for data engineering.


01:02:12.120 --> 01:02:16.040
Yeah, I think it's a nice one.


01:02:16.040 --> 01:02:17.800
- Yeah, great recommendation.


01:02:17.800 --> 01:02:20.520
And if you're gonna write Python code,


01:02:20.520 --> 01:02:22.360
what editor are you using these days?


01:02:22.360 --> 01:02:25.720
- I'm using PyCharm.


01:02:25.720 --> 01:02:28.040
So not sure if it's cool.


01:02:28.040 --> 01:02:32.000
- I love PyCharm, PyCharm's awesome.


01:02:32.000 --> 01:02:32.840
Excellent one.


01:02:32.840 --> 01:02:36.200
Yeah, so I guess final call to action,


01:02:36.200 --> 01:02:40.280
people are interested in open source sports analytics,


01:02:40.280 --> 01:02:42.360
they're open and maybe interested in PySport,


01:02:42.360 --> 01:02:45.440
wanna contribute back or be part of it in some way,


01:02:45.440 --> 01:02:46.540
what do you tell them?


01:02:46.540 --> 01:02:51.920
- Yeah, you can reach out on Twitter or LinkedIn


01:02:53.040 --> 01:02:58.040
to see where you can contribute.


01:02:58.040 --> 01:02:59.760
And I think it's also,


01:02:59.760 --> 01:03:02.240
if you're not working in the sports domain


01:03:02.240 --> 01:03:04.980
and would like to contribute, please reach out


01:03:04.980 --> 01:03:07.240
because I think the knowledge from outside of sports


01:03:07.240 --> 01:03:09.400
is really useful within sports.


01:03:09.400 --> 01:03:11.560
So there are a lot of options to contribute


01:03:11.560 --> 01:03:15.600
make an even more community,


01:03:15.600 --> 01:03:18.320
a more better community.


01:03:18.320 --> 01:03:19.560
- Yeah, absolutely.


01:03:19.560 --> 01:03:20.400
All right.


01:03:20.400 --> 01:03:21.640
Well, thank you so much for being here


01:03:21.640 --> 01:03:24.600
and sharing all these projects you've collected.


01:03:24.600 --> 01:03:26.840
- Yeah, thanks a lot for being on this show.


01:03:26.840 --> 01:03:28.400
It's really, really nice.


01:03:28.400 --> 01:03:29.720
Yeah, thank you. - Yeah, you're welcome.


01:03:29.720 --> 01:03:30.760
Bye.


01:03:30.760 --> 01:03:31.600
- Okay, bye-bye.

